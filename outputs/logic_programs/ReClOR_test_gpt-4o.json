[
  {
    "id": "test_0",
    "context": "Negotiations between the union and the trucking industry will not resume unless one or the other of these parties agrees to make concessions. The trucking industry will not make any concessions without certain prior concessions being made by the union, and the union will make concessions only if the government agrees to act as mediator.",
    "question": "If the statements above are true, which one of the following must also be true on the basis of them?",
    "options": [
      "If the union makes concessions, then the trucking industry will also make concessions.",
      "Differences between the union and the trucking industry will be successfully negotiated if the government agrees to act as mediator.",
      "Negotiations between the union and the trucking industry will not resume.",
      "Negotiations between the union and the trucking industry will not resume unless the government agrees to act as mediator."
    ],
    "raw_logic_programs": [
      "# Declarations\nparties = EnumSort([union, trucking_industry, government])\nactions = EnumSort([make_concessions, act_as_mediator, resume_negotiations])\nagrees = Function([parties, actions] -> [bool])\n\n# Constraints\nOr(agrees(union, make_concessions), agrees(trucking_industry, make_concessions)) ::: Negotiations will not resume unless one or the other party agrees to make concessions\nImplies(agrees(trucking_industry, make_concessions), agrees(union, make_concessions)) ::: The trucking industry will not make concessions without prior concessions by the union\nImplies(agrees(union, make_concessions), agrees(government, act_as_mediator)) ::: The union will make concessions only if the government agrees to act as mediator\n\n# Options\nQuestion ::: If the statements above are true, which one of the following must also be true on the basis of them?\nImplies(agrees(union, make_concessions), agrees(trucking_industry, make_concessions)) ::: (A) If the union makes concessions, then the trucking industry will also make concessions.\nImplies(agrees(government, act_as_mediator), agrees(union, make_concessions)) ::: (B) Differences will be successfully negotiated if the government agrees to act as mediator.\nNot(agrees(union, make_concessions)) And Not(agrees(trucking_industry, make_concessions)) ::: (C) Negotiations will not resume.\nImplies(Not(agrees(government, act_as_mediator)), Not(agrees(union, make_concessions))) ::: (D) Negotiations will not resume unless the government agrees to act as mediator."
    ]
  },
  {
    "id": "test_1",
    "context": "Scientists analyzing air bubbles that had been trapped in Antarctic ice during the Earth' s last ice age found that the ice-age atmosphere had contained unusually large amounts of ferrous material and surprisingly small amounts of carbon dioxide. One scientist noted that algae absorb carbon dioxide from the atmosphere. The scientist hypothesized that the ferrous material, which was contained in atmospheric dust, had promoted a great increase in the population of Antarctic algae such as diatoms.",
    "question": "Which one of the following, if true, would most seriously undermine the scientist's hypothesis?",
    "options": [
      "Diatoms are a microscopic form of algae that has remained largely unchanged since the last ice age.",
      "Sediment from the ocean floor near Antarctica reflects no increase, during the last ice age, in the rate at which the shells that diatoms leave when they die accumulated.",
      "The dust found in the air bubbles trapped in Antarctic ice contained other minerals in addition to the ferrous material.",
      "Algae that currently grow in the oceans near Antarctica do not appear to be harmed by even a large increase in exposure to ferrous material."
    ],
    "raw_logic_programs": [
      "# Declarations\nhypothesis = Function([bool])\nevidence = EnumSort([unchanged_diatoms, no_increase_sediment, other_minerals, algae_not_harmed])\n\n# Constraints\nhypothesis == True ::: The scientist hypothesizes that ferrous material promoted an increase in Antarctic algae population\n\n# Options\nQuestion ::: Which one of the following, if true, would most seriously undermine the scientist's hypothesis?\nis_undermining(evidence == unchanged_diatoms) ::: (A) Diatoms are a microscopic form of algae that has remained largely unchanged since the last ice age\nis_undermining(evidence == no_increase_sediment) ::: (B) Sediment from the ocean floor near Antarctica reflects no increase, during the last ice age, in the rate at which the shells that diatoms leave when they die accumulated\nis_undermining(evidence == other_minerals) ::: (C) The dust found in the air bubbles trapped in Antarctic ice contained other minerals in addition to the ferrous material\nis_undermining(evidence == algae_not_harmed) ::: (D) Algae that currently grow in the oceans near Antarctica do not appear to be harmed by even a large increase in exposure to ferrous material"
    ]
  },
  {
    "id": "test_2",
    "context": "Many breakfast cereals are fortified with vitamin supplements. Some of these cereals provide 100 percent of the recommended daily requirement of vitamins. Nevertheless, a well-balanced breakfast, including a variety of foods, is a better source of those vitamins than are such fortified breakfast cereals alone.",
    "question": "Which of the following, if true, would most strongly support the position above?",
    "options": [
      "Cereals containing vitamin supplements are no harder to digest than similar cereals without added vitamins.",
      "Foods often must be fortified with vitamin supplements because naturally occurring vitamins are removed during processing.",
      "In many foods, the natural combination of vitamins with other nutrients makes those vitamins more usable by the body than are vitamins added in vitamin supplements.",
      "Unprocessed cereals are naturally high in several of the vitamins that are usually added to fortified breakfast cereals."
    ],
    "raw_logic_programs": [
      "# Declarations\ncereals = EnumSort([fortified, unfortified])\nfoods = EnumSort([well_balanced_breakfast, fortified_cereal])\nvitamins = EnumSort([natural, supplements])\nusability = Function([vitamins, foods] -> [bool])\n\n# Constraints\nForAll([f:foods], Exists([v:vitamins], usability(v, f))) ::: Each food provides some usability of vitamins\nusability(supplements, fortified_cereal) ::: Fortified cereals provide vitamins through supplements\nusability(natural, well_balanced_breakfast) ::: Well-balanced breakfast provides vitamins naturally\n\n# Options\nQuestion ::: Which of the following, if true, would most strongly support the position above?\nis_strong_support(usability(natural, well_balanced_breakfast) > usability(supplements, fortified_cereal)) ::: (Cereals containing vitamin supplements are no harder to digest than similar cereals without added vitamins.\nis_strong_support(Exists([f:foods], usability(supplements, f) == False)) ::: (Foods often must be fortified with vitamin supplements because naturally occurring vitamins are removed during processing.\nis_strong_support(ForAll([v:vitamins], usability(natural, well_balanced_breakfast) > usability(supplements, fortified_cereal))) ::: (In many foods, the natural combination of vitamins with other nutrients makes those vitamins more usable by the body than are vitamins added in vitamin supplements.\nis_strong_support(Exists([f:foods], usability(natural, f) == True)) ::: (Unprocessed cereals are naturally high in several of the vitamins that are usually added to fortified breakfast cereals."
    ]
  },
  {
    "id": "test_3",
    "context": "The average length of stay for patients at Edgewater Hospital is four days, compared to six days at University Hospital. Since studies show that recovery rates at the two hospitals are similar for patients with similar illnesses, University Hospital could decrease its average length of stay without affecting quality of care.",
    "question": "The reasoning in the argument is most vulnerable to criticism on the grounds that the argument",
    "options": [
      "equates the quality of care at a hospital with patients' average length of stay",
      "treats a condition that will ensure the preservation of quality of care as a condition that is required to preserve quality of care",
      "fails to take into account the possibility that patients at University Hospital generally prefer longer hospital stays",
      "fails to take into account the possibility that patients at Edgewater Hospital tend to be treated for different illnesses than patients at University Hospital"
    ],
    "raw_logic_programs": [
      "# Declarations\nhospitals = EnumSort([Edgewater, University])\nmetrics = EnumSort([average_length_of_stay, recovery_rate, quality_of_care])\nillnesses = EnumSort([similar, different])\npreferences = EnumSort([prefer_longer_stays, prefer_shorter_stays])\ncomparison = Function([hospitals, metrics] -> [int])\nillness_type = Function([hospitals] -> [illnesses])\npatient_preference = Function([hospitals] -> [preferences])\n\n# Constraints\ncomparison(Edgewater, average_length_of_stay) == 4 ::: The average length of stay for patients at Edgewater Hospital is four days\ncomparison(University, average_length_of_stay) == 6 ::: The average length of stay for patients at University Hospital is six days\ncomparison(Edgewater, recovery_rate) == comparison(University, recovery_rate) ::: Recovery rates at the two hospitals are similar for patients with similar illnesses\nillness_type(Edgewater) == illness_type(University) ::: Patients with similar illnesses\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on the grounds that the argument\nis_vulnerable(equates(comparison(Edgewater, quality_of_care), comparison(University, average_length_of_stay))) ::: (equates the quality of care at a hospital with patients' average length of stay\nis_vulnerable(treats_condition_as_required(comparison(University, quality_of_care), comparison(University, average_length_of_stay))) ::: (treats a condition that will ensure the preservation of quality of care as a condition that is required to preserve quality of care\nis_vulnerable(fails_to_account(patient_preference(University) == prefer_longer_stays)) ::: (fails to take into account the possibility that patients at University Hospital generally prefer longer hospital stays\nis_vulnerable(fails_to_account(illness_type(Edgewater) != illness_type(University))) ::: (fails to take into account the possibility that patients at Edgewater Hospital tend to be treated for different illnesses than patients at University Hospital"
    ]
  },
  {
    "id": "test_4",
    "context": "Everyone should have access to more than one newspaper, for there are at least two sides to every story. Since all sides of an important story should be covered, and no newspaper adequately covers all sides of every one of its stories, some important stories would not be adequately covered if there were only one newspaper.",
    "question": "Which one of the following most accurately describes a flaw in the reasoning of the argument?",
    "options": [
      "The argument confuses the inability to cover all sides of every story with the inability to cover all sides of any important story.",
      "The argument overlooks the possibility that two newspapers could provide the same incomplete coverage of the same important stories.",
      "The argument is concerned only with important stories and not with all stories.",
      "A conclusion about what newspapers should do is inferred solely from statements about what newspapers in fact do."
    ],
    "raw_logic_programs": [
      "# Declarations\nstories = EnumSort([important_story, other_story])\ncoverage = Function([stories, newspapers] -> [bool])\nnewspapers = EnumSort([newspaper1, newspaper2])\n\n# Constraints\nForAll([s:stories], Exists([n:newspapers], Not(coverage(s, n)))) ::: no newspaper adequately covers all sides of every one of its stories\nExists([s:stories], And(s == important_story, ForAll([n:newspapers], Not(coverage(s, n))))) ::: some important stories would not be adequately covered if there were only one newspaper\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the reasoning of the argument?\nis_flaw(The argument confuses the inability to cover all sides of every story with the inability to cover all sides of any important story) ::: (A)\nis_flaw(The argument overlooks the possibility that two newspapers could provide the same incomplete coverage of the same important stories) ::: (B)\nis_flaw(The argument is concerned only with important stories and not with all stories) ::: (C)\nis_flaw(A conclusion about what newspapers should do is inferred solely from statements about what newspapers in fact do) ::: (D)"
    ]
  },
  {
    "id": "test_5",
    "context": "If an act of civil disobedience -- willfully breaking a specific law in order to bring about legal reform -- is done out of self-interest alone and not out of a concern for others, it cannot be justified. But one is justified in performing an act of civil disobedience if one' s conscience requires one to do so.",
    "question": "Which one of the following judgments most closely conforms to the principles stated above?",
    "options": [
      "In organizing an illegal protest against the practice in her country of having prison inmates work eighteen hours per day, Georgette performed an act of justified civil disobedience: she acted out of concern for her fellow inmates rather than out of concern for herself.",
      "Keisha's protest against what she perceived to be a brutal and repressive dictatorship in another country was an act of justified civil disobedience, because in organizing an illegal but peaceful demonstration calling for a return to democratic leadership in that country, she acted purely out of concern for the people of that country.",
      "Maria's deliberate violation of a law requiring prepublication government approval of all printed materials was an act of justified civil disobedience: though her interest as an owner of a publishing company would be served by repeal of the law, she violated the law because her conscience required doing so on behalf of all publishers.",
      "In organizing a parade of motorcyclists riding without helmets through the capital city, Louise's act was not one of justified civil disobedience: she was willfully challenging a specific law requiring motorcyclists to wear helmets, but her conscience did not require her to organize the parade."
    ],
    "raw_logic_programs": [
      "# Declarations\nacts = EnumSort([Georgette, Keisha, Maria, Louise])\njustified = Function([acts] -> [bool])\nself_interest = Function([acts] -> [bool])\nconscience = Function([acts] -> [bool])\nconcern_for_others = Function([acts] -> [bool])\n\n# Constraints\nForAll([a:acts], Implies(self_interest(a) && Not(concern_for_others(a)), Not(justified(a)))) ::: If an act is done out of self-interest alone and not out of concern for others, it cannot be justified\nForAll([a:acts], Implies(conscience(a), justified(a))) ::: One is justified if one's conscience requires the act\n\n# Options\nQuestion ::: Which one of the following judgments most closely conforms to the principles stated above?\nis_valid(justified(Georgette) && concern_for_others(Georgette) && Not(self_interest(Georgette))) ::: (A)\nis_valid(justified(Keisha) && concern_for_others(Keisha) && Not(self_interest(Keisha))) ::: (B)\nis_valid(justified(Maria) && conscience(Maria)) ::: (C)\nis_valid(Not(justified(Louise)) && Not(conscience(Louise))) ::: (D)"
    ]
  },
  {
    "id": "test_6",
    "context": "In deep temperate lakes, water temperatures vary according to depth. In winter, the coldest water is at the top; in summer, at the bottom. The changes in temperature distribution, or \"turnover, \" occur in fall and late winter. Lake trout will be found, as a rule, in the coldest water. So, if anglers seek lake trout in deep temperate lakes while these lakes are partially iced over in late winter, they will do best to eschew the lake trout' s summer haunts and fish instead in a shallow bay or close to the surface off a rocky point.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Lake trout do not alter their feeding habits from one part of the year to another.",
      "The ease with which lake trout can be caught by anglers varies with the time of year and the water temperature.",
      "Lake trout are found exclusively in deep temperate lakes.",
      "In deep temperate lakes that have ice residues on the surface, late-winter \"turnover\" has not yet occurred."
    ],
    "raw_logic_programs": [
      "# Declarations\nseasons = EnumSort([winter, summer, fall, late_winter])\nlocations = EnumSort([top, bottom, shallow_bay, surface_off_rocky_point])\nfish = EnumSort([lake_trout])\ntemperature = Function([seasons, locations] -> [int])\nfound = Function([fish, seasons] -> [locations])\n\n# Constraints\ntemperature(winter, top) < temperature(winter, bottom) ::: In winter, the coldest water is at the top\ntemperature(summer, bottom) < temperature(summer, top) ::: In summer, the coldest water is at the bottom\nForAll([s:seasons], found(lake_trout, s) == Min([l:locations], temperature(s, l))) ::: Lake trout will be found in the coldest water\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([s:seasons], feeding_habits(lake_trout, s) == feeding_habits(lake_trout, winter))) ::: (Lake trout do not alter their feeding habits from one part of the year to another.\nis_assumption(Exists([s:seasons], ease_of_catch(lake_trout, s) != ease_of_catch(lake_trout, winter))) ::: (The ease with which lake trout can be caught by anglers varies with the time of year and the water temperature.\nis_assumption(ForAll([l:locations], found(lake_trout, winter) == l)) ::: (Lake trout are found exclusively in deep temperate lakes.\nis_assumption(Not(turnover_occurred(late_winter))) ::: (In deep temperate lakes that have ice residues on the surface, late-winter \"turnover\" has not yet occurred."
    ]
  },
  {
    "id": "test_7",
    "context": "Professor Gandolf says that all political systems that aim at preventing conflict are legitimate. However, totalitarian political systems are usually good at preventing conflict, since those who are not in power are subject to the will of the powerful. But since all totalitarian political systems are illegitimate, Professor Gandolf' s principle must be false.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "If a totalitarian political system prevents conflict, such prevention is only incidental to its true aims.",
      "At least one totalitarian political system aims at preventing conflict.",
      "No political system that fails to prevent conflict is legitimate.",
      "Some political systems that are not totalitarian are illegitimate."
    ],
    "raw_logic_programs": [
      "# Declarations\npolitical_systems = EnumSort([legitimate, illegitimate, totalitarian, non_totalitarian])\naims = Function([political_systems] -> [bool])\nprevents_conflict = Function([political_systems] -> [bool])\n\n# Constraints\nForAll([p:political_systems], Implies(aims(p), legitimate(p))) ::: All political systems that aim at preventing conflict are legitimate\nForAll([p:political_systems], Implies(totalitarian(p), prevents_conflict(p))) ::: Totalitarian political systems are usually good at preventing conflict\nForAll([p:political_systems], Implies(totalitarian(p), Not(legitimate(p)))) ::: All totalitarian political systems are illegitimate\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(ForAll([p:political_systems], Implies(And(totalitarian(p), prevents_conflict(p)), Not(aims(p))))) ::: (A) If a totalitarian political system prevents conflict, such prevention is only incidental to its true aims.\nis_assumption(Exists([p:political_systems], And(totalitarian(p), aims(p)))) ::: (B) At least one totalitarian political system aims at preventing conflict.\nis_assumption(ForAll([p:political_systems], Implies(Not(prevents_conflict(p)), Not(legitimate(p))))) ::: (C) No political system that fails to prevent conflict is legitimate.\nis_assumption(Exists([p:political_systems], And(non_totalitarian(p), Not(legitimate(p))))) ::: (D) Some political systems that are not totalitarian are illegitimate."
    ]
  },
  {
    "id": "test_8",
    "context": "Ethicist: It is morally right to reveal a secret only if one has a legal obligation to do so and will not harm oneself by doing so. At the same time, it is morally wrong to reveal a secret if one has promised not to do so and if revealing the secret is likely to result in any harm to others.",
    "question": "The principles cited by the ethicist most help to justify the reasoning in which one of the following?",
    "options": [
      "Kathryn revealed a secret entrusted to her by her brother. Kathryn did not promise not to reveal the secret and her revealing it was likely to benefit all parties concerned. However, because she was under no legal obligation to reveal the secret, her action was not morally right.",
      "A doctor informed Judy that she should not tell her father that he was in critical condition, since such knowledge sometimes makes patients despondent and inhibits recovery. Nevertheless, Judy revealed the doctor's diagnosis to her father. Judy's action was morally wrong.",
      "Phil was arrested for bank robbery and under interrogation was asked to fulfill a legal obligation to reveal the identity of his accomplice. Despite the possibility that he was endangering himself by testifying, Phil revealed his accomplice's identity, and his accomplice was arrested without incident. Phil's action was morally right.",
      "Jae admitted in confidence to his defense attorney that he was guilty of the crime with which he had been charged. His attorney, knowing that the law did not require her to reveal such a confession of guilt, recounted Jae's confession to the judge anyway. The attorney's action was morally right."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([Kathryn, Judy, Phil, Jae])\nmoral_status = EnumSort([morally_right, morally_wrong])\nlegal_obligation = Function([actions] -> [bool])\npromised_not_to_reveal = Function([actions] -> [bool])\nharm_to_self = Function([actions] -> [bool])\nharm_to_others = Function([actions] -> [bool])\nbenefit_to_all = Function([actions] -> [bool])\naction_moral_status = Function([actions] -> [moral_status])\n\n# Constraints\nForAll([a:actions], Implies(And(legal_obligation(a), Not(harm_to_self(a))), action_moral_status(a) == morally_right)) ::: It is morally right to reveal a secret only if one has a legal obligation to do so and will not harm oneself by doing so\nForAll([a:actions], Implies(And(promised_not_to_reveal(a), harm_to_others(a)), action_moral_status(a) == morally_wrong)) ::: It is morally wrong to reveal a secret if one has promised not to do so and if revealing the secret is likely to result in any harm to others\n\n# Options\nQuestion ::: The principles cited by the ethicist most help to justify the reasoning in which one of the following?\nis_justified(action_moral_status(Kathryn) == morally_right) ::: (Kathryn revealed a secret entrusted to her by her brother. Kathryn did not promise not to reveal the secret and her revealing it was likely to benefit all parties concerned. However, because she was under no legal obligation to reveal the secret, her action was not morally right.)\nis_justified(action_moral_status(Judy) == morally_wrong) ::: (A doctor informed Judy that she should not tell her father that he was in critical condition, since such knowledge sometimes makes patients despondent and inhibits recovery. Nevertheless, Judy revealed the doctor's diagnosis to her father. Judy's action was morally wrong.)\nis_justified(action_moral_status(Phil) == morally_right) ::: (Phil was arrested for bank robbery and under interrogation was asked to fulfill a legal obligation to reveal the identity of his accomplice. Despite the possibility that he was endangering himself by testifying, Phil revealed his accomplice's identity, and his accomplice was arrested without incident. Phil's action was morally right.)\nis_justified(action_moral_status(Jae) == morally_right) ::: (Jae admitted in confidence to his defense attorney that he was guilty of the crime with which he had been charged. His attorney, knowing that the law did not require her to reveal such a confession of guilt, recounted Jae's confession to the judge anyway. The attorney's action was morally right.)"
    ]
  },
  {
    "id": "test_9",
    "context": "Consumer advocate: The introduction of a new drug into the marketplace should be contingent upon our having a good understanding of its social impact. However, the social impact of the newly marketed antihistamine is far from clear. It is obvious, then, that there should be a general reduction in the pace of bringing to the marketplace new drugs that are now being tested.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "The social impact of some of the new drugs being tested is poorly understood.",
      "The new antihistamine should be on the market only if most new drugs being tested should be on the market also.",
      "The social impact of the new antihistamine is much better understood than that of most new drugs being tested.",
      "The economic success of some drugs is inversely proportional to how well we understand their social impact."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrugs = EnumSort([new_antihistamine, other_new_drugs])\nunderstanding = Function([drugs] -> [bool])\nmarket = Function([drugs] -> [bool])\n\n# Constraints\nNot(understanding(new_antihistamine)) ::: The social impact of the newly marketed antihistamine is far from clear\nForAll([d:drugs], Implies(Not(understanding(d)), Not(market(d)))) ::: The introduction of a new drug into the marketplace should be contingent upon our having a good understanding of its social impact\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nis_strongest(Exists([d:drugs], And(Not(understanding(d)), Not(market(d))))) ::: (A) The social impact of some of the new drugs being tested is poorly understood.\nis_strongest(Implies(market(new_antihistamine), ForAll([d:drugs], market(d)))) ::: (B) The new antihistamine should be on the market only if most new drugs being tested should be on the market also.\nis_strongest(understanding(new_antihistamine) > ForAll([d:drugs], understanding(d))) ::: (C) The social impact of the new antihistamine is much better understood than that of most new drugs being tested.\nis_strongest(Exists([d:drugs], Implies(Not(understanding(d)), Not(market(d))))) ::: (D) The economic success of some drugs is inversely proportional to how well we understand their social impact."
    ]
  },
  {
    "id": "test_10",
    "context": "When people engage in activities that help others, their brain releases endorphins, the brain's natural opiates, which induce in people a feeling of well-being. It has been suggested that regular release of endorphins increases people's longevity. And a statistic on adults who regularly engage in volunteer work helping others shows that they live longer, on average, than adults who do not volunteer. However, that statistic would be what we would expect even if volunteering does not boost longevity, because__.",
    "question": "Which of the following most logically completes the argument?",
    "options": [
      "Some people find that keeping a commitment to do regular volunteer work becomes a source of stress in their lives",
      "In the communities studied, women were much more likely to do regular volunteer work than men were, and women tend to live longer than men do",
      "The number of young adults who do regular volunteer work is on the increase",
      "The feelings of well-being induced by endorphins can, at least for a time, mask the symptoms of various conditions and diseases, provided the symptoms are mild"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([volunteers, non_volunteers])\nattributes = EnumSort([endorphins_release, longevity, stress, gender])\nvalues = EnumSort([increased, decreased, male, female])\nhas_attribute = Function([people, attributes] -> [values])\n\n# Constraints\nForAll([p:people], has_attribute(p, endorphins_release) == increased) ::: When people engage in activities that help others, their brain releases endorphins\nForAll([p:people], Implies(has_attribute(p, endorphins_release) == increased, has_attribute(p, longevity) == increased)) ::: Regular release of endorphins increases people's longevity\nhas_attribute(volunteers, longevity) == increased ::: Adults who regularly engage in volunteer work live longer on average\n\n# Options\nQuestion ::: Which of the following most logically completes the argument?\nis_logical(ForAll([p:people], Implies(has_attribute(p, stress) == increased, has_attribute(p, longevity) == decreased))) ::: (Some people find that keeping a commitment to do regular volunteer work becomes a source of stress in their lives\nis_logical(ForAll([p:people], Implies(has_attribute(p, gender) == female, has_attribute(p, longevity) == increased))) ::: (In the communities studied, women were much more likely to do regular volunteer work than men were, and women tend to live longer than men do\nis_logical(Exists([p:people], has_attribute(p, endorphins_release) == increased)) ::: (The number of young adults who do regular volunteer work is on the increase\nis_logical(ForAll([p:people], Implies(has_attribute(p, endorphins_release) == increased, symptoms_masked))) ::: (The feelings of well-being induced by endorphins can, at least for a time, mask the symptoms of various conditions and diseases, provided the symptoms are mild"
    ]
  },
  {
    "id": "test_11",
    "context": "On a certain day, nine scheduled flights on Swift Airlines were canceled. Ordinarily, a cancellation is due to mechanical problems with the airplane scheduled for a certain flight. However, since it is unlikely that Swift would have mechanical problems with more than one or two airplanes on a single day, some of the nine cancellations were probably due to something else.",
    "question": "The argument depends on which one of the following assumptions?",
    "options": [
      "All of the airplanes scheduled for the canceled flights are based at the same airport.",
      "Each of the canceled flights would have been longer than the average flight on Swift Airlines.",
      "Swift Airlines has fewer mechanical problems than do other airlines of the same size.",
      "More than one or two airplanes were scheduled for the nine canceled flights."
    ],
    "raw_logic_programs": [
      "# Declarations\nflights = EnumSort([f1, f2, f3, f4, f5, f6, f7, f8, f9])\nairplanes = EnumSort([a1, a2, a3, a4, a5, a6, a7, a8, a9])\ncanceled = Function([flights] -> [bool])\nmechanical_problem = Function([airplanes] -> [bool])\nscheduled_airplane = Function([flights] -> [airplanes])\n\n# Constraints\nForAll([f:flights], canceled(f)) ::: On a certain day, nine scheduled flights on Swift Airlines were canceled\nForAll([f:flights], Implies(canceled(f), mechanical_problem(scheduled_airplane(f)))) ::: Ordinarily, a cancellation is due to mechanical problems with the airplane scheduled for a certain flight\nCount([a:airplanes], mechanical_problem(a)) <= 2 ::: it is unlikely that Swift would have mechanical problems with more than one or two airplanes on a single day\n\n# Options\nQuestion ::: The argument depends on which one of the following assumptions?\nis_assumption(Count([f:flights], Exists([a:airplanes], scheduled_airplane(f) == a)) > 2) ::: (D) More than one or two airplanes were scheduled for the nine canceled flights"
    ]
  },
  {
    "id": "test_12",
    "context": "The Baysville Chamber of Commerce recently met to discuss a proposal to beautify the Baysville area' s freeways by relocating power lines, adding landscaping, and removing billboards. At the meeting, Mary Simms, who was representing an outdoor advertising company, declared, \"Billboards are the basis of our business. If they are torn down, our ability to earn a living will be severely damaged. \" \"I don' t agree, \" said Jack Jordan, a local merchant. \"The basis of our business is an attractive community. People who might shop in Baysville don' t want to see ugly billboards on their way into town. Billboards are hurting our ability to earn a living. \"",
    "question": "Jack Jordan's remarks suggest that he is misinterpreting which one of the following words used by Mary Simms?",
    "options": [
      "damaged",
      "ability",
      "our",
      "billboards"
    ],
    "raw_logic_programs": [
      "# Declarations\nwords = EnumSort([damaged, ability, our, billboards])\nmisinterpreted = Function([words] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description for this logic program.\n\n# Options\nQuestion ::: Jack Jordan's remarks suggest that he is misinterpreting which one of the following words used by Mary Simms?\nis_misinterpreted(misinterpreted(damaged)) ::: (damaged)\nis_misinterpreted(misinterpreted(ability)) ::: (ability)\nis_misinterpreted(misinterpreted(our)) ::: (our)\nis_misinterpreted(misinterpreted(billboards)) ::: (billboards)"
    ]
  },
  {
    "id": "test_13",
    "context": "The nature of English literature reflects the rich and diverse vocabulary of the English language, which resulted from the dual influence of the Anglo-Saxon and, later, French languages. The French language, though, is a direct descendant of Latin, with few traces of the Celtic language spoken by the preRoman inhabitants of the area: the hallmark of French literature is its simplicity and clarity.",
    "question": "Which one of the following can be most reasonably inferred from the information above?",
    "options": [
      "Simple and clear literature cannot be written in a language with a rich and diverse vocabulary.",
      "The origin of English played a role in shaping English literature.",
      "The vocabulary of English is larger than the vocabulary of French.",
      "The vocabulary of the Anglo-Saxon language was richer than that of the French language."
    ],
    "raw_logic_programs": [
      "# Declarations\nlanguages = EnumSort([English, French, Anglo_Saxon, Latin, Celtic])\nliterature = EnumSort([English_literature, French_literature])\ntraits = EnumSort([rich_diverse_vocabulary, simplicity_clarity])\ninfluence = Function([languages, literature] -> [bool])\nhallmark = Function([literature] -> [traits])\n\n# Constraints\nAnd(influence(Anglo_Saxon, English_literature), influence(French, English_literature)) ::: The nature of English literature reflects the rich and diverse vocabulary of the English language, which resulted from the dual influence of the Anglo-Saxon and, later, French languages\nhallmark(French_literature) == simplicity_clarity ::: The hallmark of French literature is its simplicity and clarity\nAnd(influence(Latin, French), Not(influence(Celtic, French))) ::: The French language is a direct descendant of Latin, with few traces of the Celtic language\n\n# Options\nQuestion ::: Which one of the following can be most reasonably inferred from the information above?\nis_inferred(influence(English, English_literature)) ::: (The origin of English played a role in shaping English literature.)\nis_inferred(Not(hallmark(English_literature) == simplicity_clarity)) ::: (Simple and clear literature cannot be written in a language with a rich and diverse vocabulary.)\nis_inferred(False) ::: (The vocabulary of English is larger than the vocabulary of French.)\nis_inferred(False) ::: (The vocabulary of the Anglo-Saxon language was richer than that of the French language.)"
    ]
  },
  {
    "id": "test_14",
    "context": "A medieval manuscript called L contains all eighteen extant tragedies by the Greek playwright Euripides. Of these, ten called the \"select plays, \" are accompanied in L by ancient commentaries and also appear in other medieval manuscripts; this group includes some of Euripides' best-known works, including the Medea. The other eight, which appear only in L, are called the \"alphabeticals\" because they appear in alphabetical order, without commentary. The Electra is one of the \"alphabeticals\".",
    "question": "Which of the following can be reliably concluded on the basis of the Statements given?",
    "options": [
      "No commentaries were written about Euripides' Electra in ancient times",
      "Euripides' Medea never appears in medieval manuscripts unaccompanied by ancient commentary",
      "Euripides' Electra does not appear accompanied by a commentary in any extant medieval manuscript",
      "The select plays are accompanied by ancient commentaries because they were the best known of Euripides' works"
    ],
    "raw_logic_programs": [
      "# Declarations\nplays = EnumSort([Medea, Electra, Other_Select, Other_Alphabetical])\ncategories = EnumSort([select, alphabetical])\ncommentary = Function([plays] -> [bool])\nmanuscripts = Function([plays] -> [bool])\n\n# Constraints\nForAll([p:plays], Or(categories(p) == select, categories(p) == alphabetical)) ::: Each play is either a select play or an alphabetical play\nForAll([p:plays], Implies(categories(p) == select, commentary(p) == True)) ::: Select plays are accompanied by ancient commentaries\nForAll([p:plays], Implies(categories(p) == select, manuscripts(p) == True)) ::: Select plays appear in other medieval manuscripts\nForAll([p:plays], Implies(categories(p) == alphabetical, manuscripts(p) == False)) ::: Alphabeticals appear only in L\ncategories(Medea) == select ::: Medea is a select play\ncategories(Electra) == alphabetical ::: Electra is an alphabetical play\n\n# Options\nQuestion ::: Which of the following can be reliably concluded on the basis of the Statements given?\nis_concluded(commentary(Electra) == False) ::: (A) No commentaries were written about Euripides' Electra in ancient times\nis_concluded(ForAll([m:manuscripts], Implies(manuscripts(Medea) == True, commentary(Medea) == True))) ::: (B) Euripides' Medea never appears in medieval manuscripts unaccompanied by ancient commentary\nis_concluded(ForAll([m:manuscripts], Implies(manuscripts(Electra) == True, commentary(Electra) == False))) ::: (C) Euripides' Electra does not appear accompanied by a commentary in any extant medieval manuscript\nis_concluded(ForAll([p:plays], Implies(categories(p) == select, commentary(p) == True))) ::: (D) The select plays are accompanied by ancient commentaries because they were the best known of Euripides' works"
    ]
  },
  {
    "id": "test_15",
    "context": "Economist: Owing to global economic forces since 1945, our country' s economy is increasingly a service economy, in which manufacturing employs an ever smaller fraction of the workforce. Hence, we have engaged in less and less international trade.",
    "question": "Which one of the following, if true, would most help to explain the decreasing engagement in international trade by the economist's country?",
    "options": [
      "Some services can be procured less expensively from providers in other countries than from providers in the economist's country.",
      "Many manufacturing jobs have been rendered obsolete by advances in factory automation.",
      "Employment in the service sector tends to require as many specialized skills as does employment in manufacturing.",
      "Because services are usually delivered in person, markets for services tend to be local."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nhelps_explain = Function([statements] -> [bool])\n\n# Constraints\n# No explicit constraints are given in the problem description, but we can infer that the statement that helps explain the decreasing engagement in international trade should be logically consistent with the economist's claim.\n\n# Options\nQuestion ::: Which one of the following, if true, would most help to explain the decreasing engagement in international trade by the economist's country?\nhelps_explain(A) ::: (A) Some services can be procured less expensively from providers in other countries than from providers in the economist's country.\nhelps_explain(B) ::: (B) Many manufacturing jobs have been rendered obsolete by advances in factory automation.\nhelps_explain(C) ::: (C) Employment in the service sector tends to require as many specialized skills as does employment in manufacturing.\nhelps_explain(D) ::: (D) Because services are usually delivered in person, markets for services tend to be local."
    ]
  },
  {
    "id": "test_16",
    "context": "In the year following an eight-cent increase in the federal tax on a pack of cigarettes, sales of cigarettes fell ten percent. In contrast, in the year prior to the tax increase, sales had fallen one percent. The volume of cigarette sales is ttherefore strongly related to the after-tax price of a pack of cigarettes.",
    "question": "Which of the following, if true, would most strengthen the argument above?",
    "options": [
      "During the second year after the tax increase, cigarette sales increased by a significant amount.",
      "During the year after the tax increase, there was a greater variety of cigarettes on the market than there had been during the previous year.",
      "The information available to consumers on the health risks of smoking remained largely unchanged in the period before and after the tax increase.",
      "During the year following the cigarette tax increase, many consumers had less income, in inflation-adjusted dollars, than they had had in the previous year."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([year_before_tax_increase, year_after_tax_increase, second_year_after_tax_increase])\nfactors = EnumSort([tax_increase, variety_of_cigarettes, health_information, consumer_income])\nsales_change = Function([events] -> [int])\nfactor_change = Function([factors, events] -> [bool])\n\n# Constraints\nsales_change(year_before_tax_increase) == -1 ::: Sales fell one percent in the year prior to the tax increase\nsales_change(year_after_tax_increase) == -10 ::: Sales fell ten percent in the year following the tax increase\nfactor_change(tax_increase, year_after_tax_increase) == True ::: There was a tax increase in the year after the tax increase\n\n# Options\nQuestion ::: Which of the following, if true, would most strengthen the argument above?\nis_strongest(And(factor_change(health_information, year_before_tax_increase) == False, factor_change(health_information, year_after_tax_increase) == False)) ::: (The information available to consumers on the health risks of smoking remained largely unchanged in the period before and after the tax increase.)\nis_strongest(factor_change(variety_of_cigarettes, year_after_tax_increase) == True) ::: (During the year after the tax increase, there was a greater variety of cigarettes on the market than there had been during the previous year.)\nis_strongest(factor_change(consumer_income, year_after_tax_increase) == True) ::: (During the year following the cigarette tax increase, many consumers had less income, in inflation-adjusted dollars, than they had had in the previous year.)\nis_strongest(sales_change(second_year_after_tax_increase) > sales_change(year_after_tax_increase)) ::: (During the second year after the tax increase, cigarette sales increased by a significant amount.)"
    ]
  },
  {
    "id": "test_17",
    "context": "Garbage dumps do not harm wildlife. Evidence is furnished by the Masai-Mara reserve in Kenya, where baboons that use the garbage dumps on the reserve as a food source mature faster and have more offspring than do baboons on the reserve that do not scavenge on garbage.",
    "question": "Each of the following statements, if true, casts doubt on the argument EXCEPT:",
    "options": [
      "The population of hyenas that live near unregulated garbage landfills north of the reserve has doubled in the last two years.",
      "The life expectancy of baboons that eat garbage is significantly lower than that of baboons that do not eat garbage.",
      "The cholesterol level of garbage-eating baboons is dangerously higher than that of baboons that do not eat garbage.",
      "The baboons that feed on the garbage dump are of a different species from those that do not."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([hyenas_population, baboons_life_expectancy, baboons_cholesterol, baboons_species])\ncasts_doubt = Function([statements] -> [bool])\n\n# Constraints\ncasts_doubt(hyenas_population) ::: The population of hyenas that live near unregulated garbage landfills north of the reserve has doubled in the last two years.\ncasts_doubt(baboons_life_expectancy) ::: The life expectancy of baboons that eat garbage is significantly lower than that of baboons that do not eat garbage.\ncasts_doubt(baboons_cholesterol) ::: The cholesterol level of garbage-eating baboons is dangerously higher than that of baboons that do not eat garbage.\ncasts_doubt(baboons_species) ::: The baboons that feed on the garbage dump are of a different species from those that do not.\n\n# Options\nQuestion ::: Each of the following statements, if true, casts doubt on the argument EXCEPT:\nis_not_casting_doubt(casts_doubt(hyenas_population)) ::: (A)\nis_not_casting_doubt(casts_doubt(baboons_life_expectancy)) ::: (B)\nis_not_casting_doubt(casts_doubt(baboons_cholesterol)) ::: (C)\nis_not_casting_doubt(casts_doubt(baboons_species)) ::: (D)"
    ]
  },
  {
    "id": "test_18",
    "context": "Clearly, a democracy cannot thrive without effective news media. After all, a democracy cannot thrive without an electorate that is knowledgeable about important political issues, and an electorate can be knowledgeable in this way only if it has access to unbiased information about the government.",
    "question": "The argument's conclusion is properly inferred if which one of the following is assumed?",
    "options": [
      "A democracy will thrive if its electorate is knowledgeable about important political issues.",
      "Without effective news media, an electorate will not have access to unbiased information about the government.",
      "If an electorate has access to unbiased information about the government, then that electorate will be knowledgeable about important political issues.",
      "A democracy cannot thrive if the electorate is exposed to biased information about the government."
    ],
    "raw_logic_programs": [
      "# Declarations\ndemocracy = EnumSort([thriving, not_thriving])\nelectorate = EnumSort([knowledgeable, not_knowledgeable])\nmedia = EnumSort([effective, not_effective])\ninformation = EnumSort([unbiased, biased])\naccess = Function([media] -> [information])\nknowledge = Function([information] -> [electorate])\nthrive = Function([electorate] -> [democracy])\n\n# Constraints\nthrive(knowledge(access(effective))) == thriving ::: A democracy cannot thrive without effective news media\nthrive(knowledge(access(not_effective))) == not_thriving ::: A democracy cannot thrive without an electorate that is knowledgeable about important political issues\nknowledge(access(effective)) == knowledgeable ::: An electorate can be knowledgeable only if it has access to unbiased information about the government\n\n# Options\nQuestion ::: The argument's conclusion is properly inferred if which one of the following is assumed?\nis_assumed(thrive(knowledgeable) == thriving) ::: (A) A democracy will thrive if its electorate is knowledgeable about important political issues.\nis_assumed(access(not_effective) == biased) ::: (B) Without effective news media, an electorate will not have access to unbiased information about the government.\nis_assumed(knowledge(unbiased) == knowledgeable) ::: (C) If an electorate has access to unbiased information about the government, then that electorate will be knowledgeable about important political issues.\nis_assumed(thrive(biased) == not_thriving) ::: (D) A democracy cannot thrive if the electorate is exposed to biased information about the government."
    ]
  },
  {
    "id": "test_19",
    "context": "Most of the new cars that Regis Motors sold last year were purchased by residents of Blomenville. Regis Motors sold more new cars last year than it did in any previous year. Still, most new cars purchased by Blomenville residents last year were not purchased from Regis Motors.",
    "question": "If the statements above are true, which one of the following must also be true?",
    "options": [
      "Regis Motors' share of the new car market in Blomenville last year increased over its share the year before.",
      "A car retailer other than Regis Motors sold the most new cars to residents of Blomenville last year.",
      "The number of new cars purchased last year by residents of Blomenville is greater than the number of new cars sold by Regis Motors.",
      "The total number of new cars purchased by residents of Blomenville was greater last year than it was in any previous year."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([Regis_Motors, Other_Retailers, Blomenville_Residents])\nevents = EnumSort([sold, purchased])\nquantities = Function([entities, events] -> [int])\n\n# Constraints\nquantities(Regis_Motors, sold) > quantities(Regis_Motors, sold, previous_year) ::: Regis Motors sold more new cars last year than it did in any previous year\nquantities(Regis_Motors, sold) > quantities(Other_Retailers, sold) ::: Most of the new cars that Regis Motors sold last year were purchased by residents of Blomenville\nquantities(Blomenville_Residents, purchased) > quantities(Regis_Motors, sold) ::: Most new cars purchased by Blomenville residents last year were not purchased from Regis Motors\n\n# Options\nQuestion ::: If the statements above are true, which one of the following must also be true?\nis_must_true(quantities(Regis_Motors, sold, Blomenville) > quantities(Regis_Motors, sold, Blomenville, previous_year)) ::: (A) Regis Motors' share of the new car market in Blomenville last year increased over its share the year before.\nis_must_true(quantities(Other_Retailers, sold, Blomenville) > quantities(Regis_Motors, sold, Blomenville)) ::: (B) A car retailer other than Regis Motors sold the most new cars to residents of Blomenville last year.\nis_must_true(quantities(Blomenville_Residents, purchased) > quantities(Regis_Motors, sold)) ::: (C) The number of new cars purchased last year by residents of Blomenville is greater than the number of new cars sold by Regis Motors.\nis_must_true(quantities(Blomenville_Residents, purchased) > quantities(Blomenville_Residents, purchased, previous_year)) ::: (D) The total number of new cars purchased by residents of Blomenville was greater last year than it was in any previous year."
    ]
  },
  {
    "id": "test_20",
    "context": "Ilana: Carver' s stories are somber and pessimistic, which is a sure sign of inferior writing. I have never read a single story of his that ends happily. Gustav: Carver was one of the finest writers of the past 30 years. Granted, his stories are characterized by somberness and pessimism, but they are also wryly humorous, compassionate, and beautifully structured.",
    "question": "On the basis of their statements, Ilana and Gustav are committed to disagreeing over whether",
    "options": [
      "Carver's stories are pessimistic in their vision",
      "stories that are well written can be somber and pessimistic",
      "there are some characteristics of a story that are decisive in determining its aesthetic value",
      "stories that are characterized by somberness and pessimism can appropriately be called humorous"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Ilana, Gustav])\ncharacteristics = EnumSort([somber, pessimistic, humorous, compassionate, beautifully_structured, inferior_writing, well_written])\ndisagree = Function([statements, characteristics] -> [bool])\n\n# Constraints\ndisagree(Ilana, pessimistic) == False ::: Ilana acknowledges Carver's stories are pessimistic\ndisagree(Gustav, pessimistic) == False ::: Gustav acknowledges Carver's stories are pessimistic\ndisagree(Ilana, inferior_writing) == True ::: Ilana believes somber and pessimistic stories are inferior\ndisagree(Gustav, well_written) == True ::: Gustav believes somber and pessimistic stories can be well written\n\n# Options\nQuestion ::: On the basis of their statements, Ilana and Gustav are committed to disagreeing over whether\nis_disagreement(disagree(Ilana, well_written) && disagree(Gustav, well_written)) ::: (stories that are well written can be somber and pessimistic)\nis_disagreement(disagree(Ilana, inferior_writing) && disagree(Gustav, inferior_writing)) ::: (there are some characteristics of a story that are decisive in determining its aesthetic value)\nis_disagreement(disagree(Ilana, humorous) && disagree(Gustav, humorous)) ::: (stories that are characterized by somberness and pessimism can appropriately be called humorous)"
    ]
  },
  {
    "id": "test_21",
    "context": "Ornithologist: The curvature of the claws of modern tree-dwelling birds enables them to perch in trees. The claws of Archeopteryx, the earliest known birdlike creature, show similar curvature that must have enabled the creature to perch on tree limbs. Ttherefore, Archeopteryx was probably a tree-dwelling creature. Paleontologist: No, the ability to perch in trees is not good evidence that Archeopteryx was a tree-dwelling bird. Chickens also spend time perched in trees, yet chickens are primarily ground-dwelling.",
    "question": "In responding to the ornithologist's hypothesis that Archeopteryx was tree-dwelling, the paleontologist",
    "options": [
      "denies the truth of the claims the ornithologist makes in support of the hypothesis",
      "questions the qualifications of the ornithologist to evaluate the evidence",
      "shows that the hypothesis contradicts one of the pieces of evidence used to support it",
      "uses a parallel case to illustrate a weakness in the ornithologist's argument"
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Ornithologist, Paleontologist])\ncreatures = EnumSort([Archeopteryx, Chicken])\nhabitats = EnumSort([tree_dwelling, ground_dwelling])\nabilities = EnumSort([perch_in_trees])\nhas_ability = Function([creatures] -> [abilities])\ndwelling = Function([creatures] -> [habitats])\n\n# Constraints\nhas_ability(Archeopteryx) == perch_in_trees ::: The claws of Archeopteryx show curvature that must have enabled it to perch on tree limbs\ndwelling(Chicken) == ground_dwelling ::: Chickens are primarily ground-dwelling\nhas_ability(Chicken) == perch_in_trees ::: Chickens also spend time perched in trees\n\n# Options\nQuestion ::: In responding to the ornithologist's hypothesis that Archeopteryx was tree-dwelling, the paleontologist\ndenies_truth = False ::: denies the truth of the claims the ornithologist makes in support of the hypothesis\nquestions_qualifications = False ::: questions the qualifications of the ornithologist to evaluate the evidence\ncontradicts_evidence = False ::: shows that the hypothesis contradicts one of the pieces of evidence used to support it\nuses_parallel_case = True ::: uses a parallel case to illustrate a weakness in the ornithologist's argument"
    ]
  },
  {
    "id": "test_22",
    "context": "Cartographer: Maps are like language: they can be manipulated in order to mislead. That most people are not generally misled by words, however, should not lead us to think that most people are not susceptible to being misled by maps. Most people are taught to be cautious interpreters of language, but education in the sophisticated use of maps is almost nonexistent.",
    "question": "Which one of the following most accurately describes how the statement that most people are taught to be cautious interpreters of language functions in the cartographer's argument?",
    "options": [
      "It is part of a distinction drawn in order to support the argument's conclusion.",
      "It is offered as an analogical case that helps to clarify the meaning of the argument's conclusion.",
      "It is the conclusion drawn in the argument.",
      "It is a conclusion drawn from the claim that education in the sophisticated use of maps is almost nonexistent."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([language_caution, map_susceptibility, map_education, argument_conclusion])\nfunctions = EnumSort([support, clarify, conclusion, derived_conclusion])\n\n# Constraints\nstatement(language_caution) == \"Most people are taught to be cautious interpreters of language.\"\nstatement(map_susceptibility) == \"Most people are susceptible to being misled by maps.\"\nstatement(map_education) == \"Education in the sophisticated use of maps is almost nonexistent.\"\nstatement(argument_conclusion) == \"Maps can be manipulated in order to mislead.\"\n\n# Options\nQuestion ::: Which one of the following most accurately describes how the statement that most people are taught to be cautious interpreters of language functions in the cartographer's argument?\nis_function(language_caution, support) ::: (It is part of a distinction drawn in order to support the argument's conclusion.\nis_function(language_caution, clarify) ::: (It is offered as an analogical case that helps to clarify the meaning of the argument's conclusion.\nis_function(language_caution, conclusion) ::: (It is the conclusion drawn in the argument.\nis_function(language_caution, derived_conclusion) ::: (It is a conclusion drawn from the claim that education in the sophisticated use of maps is almost nonexistent."
    ]
  },
  {
    "id": "test_23",
    "context": "Journalist: A book claiming that a new drug has dangerous side effects has recently been criticized by a prominent physician. However, the physician is employed by the company that manufactures that drug, and hence probably has personal reasons to deny that the drug is dangerous. Ttherefore, the critique does not provide legitimate grounds to reject the book' s claims about the drug' s side effects.",
    "question": "The reasoning in the journalist's argument is most vulnerable to criticism on which one of the following grounds?",
    "options": [
      "It overlooks the possibility that the author of the book was biased for personal reasons in favor of the claim that the drug has dangerous side effects.",
      "It fails to address adequately the possibility that the critique of the book called into question other claims made in the book in addition to the claim that the drug has dangerous side effects.",
      "It takes for granted that anyone even remotely associated with a company that manufactures a drug is unable to fairly weigh evidence concerning possible dangerous side effects of that drug.",
      "It fails to address adequately the possibility that someone who has personal reasons to deny a claim may nonetheless provide legitimate grounds for denying that claim."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([journalist, physician, book])\nclaims = EnumSort([drug_dangerous, critique_legitimate])\nbias = Function([arguments] -> [bool])\ngrounds = Function([arguments, claims] -> [bool])\n\n# Constraints\nbias(physician) == true ::: The physician is employed by the company that manufactures the drug, suggesting a potential bias.\ngrounds(physician, critique_legitimate) == false ::: The journalist argues that the critique does not provide legitimate grounds to reject the book's claims.\n\n# Options\nQuestion ::: The reasoning in the journalist's argument is most vulnerable to criticism on which one of the following grounds?\nis_vulnerable(Exists([a:arguments], bias(a) == true)) ::: (A) It overlooks the possibility that the author of the book was biased for personal reasons in favor of the claim that the drug has dangerous side effects.\nis_vulnerable(Exists([c:claims], And(c != drug_dangerous, grounds(physician, c) == true))) ::: (B) It fails to address adequately the possibility that the critique of the book called into question other claims made in the book in addition to the claim that the drug has dangerous side effects.\nis_vulnerable(ForAll([a:arguments], Implies(bias(a) == true, grounds(a, drug_dangerous) == false))) ::: (C) It takes for granted that anyone even remotely associated with a company that manufactures a drug is unable to fairly weigh evidence concerning possible dangerous side effects of that drug.\nis_vulnerable(Exists([a:arguments], And(bias(a) == true, grounds(a, drug_dangerous) == true))) ::: (D) It fails to address adequately the possibility that someone who has personal reasons to deny a claim may nonetheless provide legitimate grounds for denying that claim."
    ]
  },
  {
    "id": "test_24",
    "context": "Physician: Clinical psychologists who are not also doctors with medical degrees should not be allowed to prescribe psychiatric medications. Training in clinical psychology includes at most a few hundred hours of education in neuroscience, physiology, and pharmacology. In contrast, doctors with medical degrees must receive years of training in these fields before they are allowed to prescribe psychiatric medications.",
    "question": "Which one of the following principles, if valid, would most help to justify the reasoning in the physician's argument?",
    "options": [
      "The training in neuroscience, physiology, and pharmacology required for a medical degree is sufficient for a doctor to be allowed to prescribe psychiatric medications.",
      "No one without years of training in neuroscience, physiology, and pharmacology should be allowed to prescribe psychiatric medications.",
      "Clinical psychologists who are also doctors with medical degrees should be allowed to prescribe psychiatric medications.",
      "Doctors without training in clinical psychology should not be allowed to prescribe psychiatric medications."
    ],
    "raw_logic_programs": [
      "# Declarations\nroles = EnumSort([clinical_psychologist, doctor_with_medical_degree])\nfields = EnumSort([neuroscience, physiology, pharmacology])\ntraining_hours = Function([roles, fields] -> [int])\nallowed_to_prescribe = Function([roles] -> [bool])\n\n# Constraints\nForAll([f:fields], training_hours(clinical_psychologist, f) <= 1000) ::: Training in clinical psychology includes at most a few hundred hours of education in neuroscience, physiology, and pharmacology\nForAll([f:fields], training_hours(doctor_with_medical_degree, f) >= 2000) ::: Doctors with medical degrees must receive years of training in these fields\n\n# Options\nQuestion ::: Which one of the following principles, if valid, would most help to justify the reasoning in the physician's argument?\nis_valid(ForAll([r:roles], Implies(And(training_hours(r, neuroscience) < 2000, training_hours(r, physiology) < 2000, training_hours(r, pharmacology) < 2000), Not(allowed_to_prescribe(r))))) ::: (A) No one without years of training in neuroscience, physiology, and pharmacology should be allowed to prescribe psychiatric medications.\nis_valid(ForAll([r:roles], Implies(And(training_hours(r, neuroscience) >= 2000, training_hours(r, physiology) >= 2000, training_hours(r, pharmacology) >= 2000), allowed_to_prescribe(r)))) ::: (B) The training in neuroscience, physiology, and pharmacology required for a medical degree is sufficient for a doctor to be allowed to prescribe psychiatric medications.\nis_valid(allowed_to_prescribe(doctor_with_medical_degree)) ::: (C) Clinical psychologists who are also doctors with medical degrees should be allowed to prescribe psychiatric medications.\nis_valid(Not(allowed_to_prescribe(clinical_psychologist))) ::: (D) Doctors without training in clinical psychology should not be allowed to prescribe psychiatric medications."
    ]
  },
  {
    "id": "test_25",
    "context": "Historian: Newton developed mathematical concepts and techniques that are fundamental to modern calculus. Leibniz developed closely analogous concepts and techniques. It has traditionally been thought that these discoveries were independent. Researchers have, however, recently discovered notes of Leibniz' that discuss one of Newton's books on mathematics. Several scholars have argued that since the book includes a presentation of Newton's calculus concepts and techniques, <b> and since the notes were written before Leibniz' own development of calculus concepts and techniques </b>, it is virtually certain that the traditional view is false. A more cautious conclusion than this is called for, however. <b> Leibniz' notes are limited to early sections of Newton's book, sections that precede the ones in which Newton's calculus concepts and techniques are presented </b>.",
    "question": "In the historian's reasoning, the two portions in <b> boldface </b> play which of the following roles?",
    "options": [
      "The first provides evidence in support of the overall position that the historian defends; the second is evidence that has been used to support an opposing position",
      "The first is evidence that has been used to support a conclusion that the historian criticizes; the second is evidence offered in support of the historian's own position",
      "The first is evidence that has been used to support a conclusion that the historian criticizes; the second is further information that substantiates that evidence.",
      "The first provides evidence in support of an intermediate conclusion that is drawn to provide support for the overall position that the historian defends; the second provides evidence against that intermediate conclusion"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([first_boldface, second_boldface])\nroles = EnumSort([evidence_supporting_historian, evidence_supporting_opposing, evidence_criticized_by_historian, evidence_substantiating, evidence_against_intermediate_conclusion])\n\n# Constraints\nrole(first_boldface) == evidence_criticized_by_historian ::: The first is evidence that has been used to support a conclusion that the historian criticizes\nrole(second_boldface) == evidence_against_intermediate_conclusion ::: The second provides evidence against that intermediate conclusion\n\n# Options\nQuestion ::: In the historian's reasoning, the two portions in boldface play which of the following roles?\nis_correct(role(first_boldface) == evidence_supporting_historian, role(second_boldface) == evidence_supporting_opposing) ::: (A)\nis_correct(role(first_boldface) == evidence_criticized_by_historian, role(second_boldface) == evidence_supporting_historian) ::: (B)\nis_correct(role(first_boldface) == evidence_criticized_by_historian, role(second_boldface) == evidence_substantiating) ::: (C)\nis_correct(role(first_boldface) == evidence_supporting_historian, role(second_boldface) == evidence_against_intermediate_conclusion) ::: (D)"
    ]
  },
  {
    "id": "test_26",
    "context": "Manager: There is no good reason to suppose that promoting creativity is a proper goal of an employee training program. Many jobs require little or no creativity and, in those positions, using creativity is more likely to be disruptive than innovative. Furthermore, even if creativity were in demand, there is no evidence that it can be taught.",
    "question": "Which one of the following most accurately expresses the main conclusion drawn in the manager's argument?",
    "options": [
      "Using creativity in jobs that require little or no creativity can be disruptive.",
      "Many jobs require little or no creativity.",
      "There is no good reason to suppose that employee training programs should promote creativity.",
      "Employee training programs are not able to teach employees creativity."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([promoting_creativity_not_proper_goal, jobs_require_little_creativity, creativity_disruptive, creativity_cannot_be_taught])\nconclusion = Function([statements] -> [bool])\n\n# Constraints\nconclusion(promoting_creativity_not_proper_goal) ::: There is no good reason to suppose that promoting creativity is a proper goal of an employee training program\nconclusion(jobs_require_little_creativity) ::: Many jobs require little or no creativity\nconclusion(creativity_disruptive) ::: Using creativity in jobs that require little or no creativity can be disruptive\nconclusion(creativity_cannot_be_taught) ::: There is no evidence that creativity can be taught\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the main conclusion drawn in the manager's argument?\nis_main_conclusion(conclusion(promoting_creativity_not_proper_goal)) ::: (There is no good reason to suppose that employee training programs should promote creativity.)\nis_main_conclusion(conclusion(jobs_require_little_creativity)) ::: (Many jobs require little or no creativity.)\nis_main_conclusion(conclusion(creativity_disruptive)) ::: (Using creativity in jobs that require little or no creativity can be disruptive.)\nis_main_conclusion(conclusion(creativity_cannot_be_taught)) ::: (Employee training programs are not able to teach employees creativity.)"
    ]
  },
  {
    "id": "test_27",
    "context": "A certain mayor has proposed a fee of five dollars per day on private vehicles entering the city, claiming that the fee will alleviate the city' s traffic congestion. The mayor reasons that, since the fee will exceed the cost of round-trip bus fare from many nearby points, many people will switch from using their cars to using the bus.",
    "question": "Which of the following statements, if true, provides the best evidence that the mayor's reasoning is flawed?",
    "options": [
      "During the average workday, private vehicles owned and operated by people living within the city account for twenty percent of the city's traffic congestion.",
      "The cost of parking fees already makes it considerably more expensive for most people to take a private vehicle into the city than to take a bus.",
      "Many commuters opposing the mayor's plan have indicated that they would rather endure traffic congestion than pay a five-dollar-per day fee.",
      "Projected increases in the price of gasoline will increase the cost of taking a private vehicle into the city."
    ],
    "raw_logic_programs": [
      "# Declarations\nvehicles = EnumSort([private_vehicle, bus])\npeople = EnumSort([commuters, city_residents])\ncosts = Function([vehicles] -> [int])\ntraffic_congestion = Function([people] -> [int])\nfee = Const(int)\n\n# Constraints\nfee == 5 ::: The proposed fee is five dollars per day on private vehicles entering the city\nForAll([p:people], costs(private_vehicle) > costs(bus)) ::: The fee will exceed the cost of round-trip bus fare from many nearby points\ntraffic_congestion(commuters) + traffic_congestion(city_residents) > 0 ::: There is existing traffic congestion\n\n# Options\nQuestion ::: Which of the following statements, if true, provides the best evidence that the mayor's reasoning is flawed?\nis_flawed(traffic_congestion(city_residents) == 20) ::: (A) During the average workday, private vehicles owned and operated by people living within the city account for twenty percent of the city's traffic congestion.\nis_flawed(costs(private_vehicle) > costs(bus)) ::: (B) The cost of parking fees already makes it considerably more expensive for most people to take a private vehicle into the city than to take a bus.\nis_flawed(Exists([p:people], And(p == commuters, prefers_congestion(p)))) ::: (C) Many commuters opposing the mayor's plan have indicated that they would rather endure traffic congestion than pay a five-dollar-per day fee.\nis_flawed(projected_increase(gasoline_price)) ::: (D) Projected increases in the price of gasoline will increase the cost of taking a private vehicle into the city."
    ]
  },
  {
    "id": "test_28",
    "context": "Asthmagon was long considered the most effective of the drugs known as beta-2 agonists, designed to alleviate asthma attacks. However, studies conducted in Rhiago between 1981 and 1987 revealed that nearly one out of every five of the asthma patients under observation who took asthmagon suffered serious side effects after taking the drug. Citing this statistic, some doctors argue that asthmagon should be banned as an anti-asthma drug.",
    "question": "Which one of the following, if true, most weakens the case for the proposed ban of asthmagon?",
    "options": [
      "Among the patients observed, only those who had very high cholesterol counts suffered side effects after taking asthmagon.",
      "Despite the growing concern about the drug, many physicians in Rhiago still prescribe asthmagon to asthma suffers.",
      "Asthmagon increases the severity of asthma attacks in some people because the drug can cause damage to heart tissues.",
      "Many of the patients under observation to whom asthmagon was administered had not previously taken a beta-2 agonist."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([observed_patients])\nconditions = EnumSort([high_cholesterol, no_prior_beta2_agonist])\neffects = EnumSort([serious_side_effects, no_side_effects])\ntakes = Function([patients] -> [bool])\nsuffers = Function([patients] -> [effects])\nhas_condition = Function([patients, conditions] -> [bool])\n\n# Constraints\nForAll([p:patients], Implies(takes(p), Or(suffers(p) == serious_side_effects, suffers(p) == no_side_effects))) ::: Nearly one out of every five of the asthma patients under observation who took asthmagon suffered serious side effects\nForAll([p:patients], Implies(suffers(p) == serious_side_effects, has_condition(p, high_cholesterol))) ::: Only those who had very high cholesterol counts suffered side effects after taking asthmagon\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the case for the proposed ban of asthmagon?\nis_weakening(ForAll([p:patients], Implies(suffers(p) == serious_side_effects, has_condition(p, high_cholesterol)))) ::: (Among the patients observed, only those who had very high cholesterol counts suffered side effects after taking asthmagon.\nis_weakening(Exists([p:patients], takes(p))) ::: (Despite the growing concern about the drug, many physicians in Rhiago still prescribe asthmagon to asthma sufferers.\nis_weakening(Exists([p:patients], suffers(p) == serious_side_effects)) ::: (Asthmagon increases the severity of asthma attacks in some people because the drug can cause damage to heart tissues.\nis_weakening(ForAll([p:patients], Implies(takes(p), has_condition(p, no_prior_beta2_agonist)))) ::: (Many of the patients under observation to whom asthmagon was administered had not previously taken a beta-2 agonist."
    ]
  },
  {
    "id": "test_29",
    "context": "Each species of moth has an optimal body temperature for effective flight, and when air temperatures fall much below that temperature, the moths typically have to remain inactive on vegetation for extended periods, leaving them highly vulnerable to predators. In general, larger moths can fly faster than smaller ones and hence have a better chance of evading flying predators, but they also have higher optimal body temperatures, which explains why __.",
    "question": "Which of the following most logically completes the passage?",
    "options": [
      "large moths are generally able to maneuver better in flight than smaller moths",
      "large moths are proportionally much more common in warm climates than in cool climates",
      "small moths are more likely than large moths to be effectively camouflaged while on vegetation",
      "large moths typically have wings that are larger in proportion to their body size than smaller moths do"
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([large_moths, small_moths])\nclimates = EnumSort([warm, cool])\nbody_temperature = Function([species] -> [int])\nflight_speed = Function([species] -> [int])\ncamouflage = Function([species] -> [bool])\nmaneuverability = Function([species] -> [bool])\nwing_size_proportion = Function([species] -> [int])\npopulation_distribution = Function([species, climates] -> [int])\n\n# Constraints\nForAll([s:species], body_temperature(large_moths) > body_temperature(s)) ::: larger moths have higher optimal body temperatures\nForAll([s:species], flight_speed(large_moths) > flight_speed(s)) ::: larger moths can fly faster than smaller ones\n\n# Options\nQuestion ::: Which of the following most logically completes the passage?\nis_logical(population_distribution(large_moths, warm) > population_distribution(large_moths, cool)) ::: (large moths are proportionally much more common in warm climates than in cool climates)\nis_logical(camouflage(small_moths)) ::: (small moths are more likely than large moths to be effectively camouflaged while on vegetation)\nis_logical(maneuverability(large_moths)) ::: (large moths are generally able to maneuver better in flight than smaller moths)\nis_logical(wing_size_proportion(large_moths) > wing_size_proportion(small_moths)) ::: (large moths typically have wings that are larger in proportion to their body size than smaller moths do)"
    ]
  },
  {
    "id": "test_30",
    "context": "Stress is a common cause of high blood pressure. By calming their minds and thereby reducing stress, some people can lower their blood pressure. And most people can calm their minds, in turn, by engaging in exercise.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "For at least some people, engaging in exercise can cause their stress levels to be reduced.",
      "Most people with high blood pressure can lower their blood pressure by reducing their stress levels.",
      "For at least some people, having lower blood pressure has at least some tendency to cause their stress levels to be reduced.",
      "Most people who do not exercise regularly have higher stress levels as a result."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, ..., personN])  # Represents individuals\nconditions = EnumSort([high_blood_pressure, reduced_stress, calm_mind, exercise])  # Represents conditions related to stress and blood pressure\ncauses = Function([people, conditions] -> [bool])  # Represents whether a condition is true for a person\n\n# Constraints\nForAll([p:people], Implies(causes(p, reduced_stress), causes(p, high_blood_pressure))) ::: Stress is a common cause of high blood pressure\nForAll([p:people], Implies(causes(p, calm_mind), causes(p, reduced_stress))) ::: By calming their minds and thereby reducing stress, some people can lower their blood pressure\nForAll([p:people], Implies(causes(p, exercise), causes(p, calm_mind))) ::: Most people can calm their minds by engaging in exercise\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(Exists([p:people], causes(p, exercise) && causes(p, reduced_stress))) ::: (A) For at least some people, engaging in exercise can cause their stress levels to be reduced.\nis_supported(ForAll([p:people], Implies(causes(p, high_blood_pressure), causes(p, reduced_stress)))) ::: (B) Most people with high blood pressure can lower their blood pressure by reducing their stress levels.\nis_supported(Exists([p:people], causes(p, high_blood_pressure) && causes(p, reduced_stress))) ::: (C) For at least some people, having lower blood pressure has at least some tendency to cause their stress levels to be reduced.\nis_supported(ForAll([p:people], Implies(Not(causes(p, exercise)), causes(p, reduced_stress)))) ::: (D) Most people who do not exercise regularly have higher stress levels as a result."
    ]
  },
  {
    "id": "test_31",
    "context": "Rye sown in the fall and plowed into the soil in early spring leaves a residue that is highly effective at controlling broad-leaved weeds, but unfortunately for only about 45 days. No major agricultural crop matures from seed in as little as 45 days. Synthetic herbicides, on the other hand, although not any longer-lasting, can be reapplied as the crop grows. Clearly, ttherefore, for major agricultural crops, plowing rye into the soil can play no part in effective weed control.",
    "question": "The argument is most vulnerable to the objection that it fails to",
    "options": [
      "distinguish among the various kinds of synthetic herbicides",
      "allow for the possibility that plants other than rye, handled the same way, might have the same effect",
      "allow for the possibility of combining the two weed-control methods it mentions",
      "identify any alternative method of weed control that could be used instead of the method it rejects"
    ],
    "raw_logic_programs": [
      "# Declarations\nmethods = EnumSort([rye, synthetic_herbicides])\neffects = EnumSort([effective, ineffective])\nduration = Function([methods] -> [int])\ncombination_effect = Function([methods, methods] -> [effects])\n\n# Constraints\nduration(rye) == 45 ::: Rye residue is effective for 45 days\nduration(synthetic_herbicides) == 45 ::: Synthetic herbicides are effective for 45 days\nForAll([m:methods], combination_effect(m, m) == ineffective) ::: No method is effective when used alone for major crops\ncombination_effect(rye, synthetic_herbicides) == effective ::: Combining rye and synthetic herbicides could be effective\n\n# Options\nQuestion ::: The argument is most vulnerable to the objection that it fails to\nis_vulnerable(Exists([m1:methods, m2:methods], combination_effect(m1, m2) == effective)) ::: (allow for the possibility of combining the two weed-control methods it mentions)"
    ]
  },
  {
    "id": "test_32",
    "context": "Greatly exceeding the recommended daily intake of vitamins A and D is dangerous, for they can be toxic at high levels. For some vitamin-fortified foods, each serving, as defined by the manufacturer, has 100 percent of the recommended daily intake of these vitamins. But many people overestimate what counts as a standard serving of vitamin-fortified foods such as cereal, consuming two to three times what the manufacturers define as standard servings.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "Few people who consume vitamin-fortified foods are aware of the recommended daily intake of vitamins A and D.",
      "Some people who consume vitamin-fortified foods exceed the recommended daily intake of vitamins A and D.",
      "Most people who eat vitamin-fortified foods should not take any vitamin supplements.",
      "Some people mistakenly believe it is healthy to consume more than the recommended daily intake of vitamins A and D."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, person3, ...])  # Represents individuals consuming vitamin-fortified foods\nvitamins = EnumSort([vitamin_A, vitamin_D])\nintake = Function([people, vitamins] -> [int])  # Represents the intake level of vitamins A and D for each person\n\n# Constraints\nForAll([p:people, v:vitamins], intake(p, v) >= 100) ::: Each serving has 100% of the recommended daily intake\nExists([p:people], And(intake(p, vitamin_A) > 100, intake(p, vitamin_D) > 100)) ::: Some people consume more than the recommended daily intake\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(Exists([p:people], And(intake(p, vitamin_A) > 100, intake(p, vitamin_D) > 100))) ::: (Some people who consume vitamin-fortified foods exceed the recommended daily intake of vitamins A and D.)\nis_supported(ForAll([p:people], intake(p, vitamin_A) <= 100)) ::: (Few people who consume vitamin-fortified foods are aware of the recommended daily intake of vitamins A and D.)\nis_supported(ForAll([p:people], And(intake(p, vitamin_A) <= 100, intake(p, vitamin_D) <= 100))) ::: (Most people who eat vitamin-fortified foods should not take any vitamin supplements.)\nis_supported(Exists([p:people], And(intake(p, vitamin_A) > 100, intake(p, vitamin_D) > 100))) ::: (Some people mistakenly believe it is healthy to consume more than the recommended daily intake of vitamins A and D.)"
    ]
  },
  {
    "id": "test_33",
    "context": "My suspicion that there is some truth to astrology has been confirmed. Most physicians I have talked to believe in it.",
    "question": "The flawed pattern of reasoning in the argument above is most similar to that in which one of the following?",
    "options": [
      "Quantum mechanics seems to be emerging as the best physical theory we have today. Most prominent physicists subscribe to it.",
      "Most mechanical engineers I have talked to say that it is healthier to refrain from eating meat. So most mechanical engineers are vegetarians.",
      "Professor Smith was convicted of tax evasion last year. So I certainly wouldn't give any credence to Smith's economic theories.",
      "I have come to the conclusion that several governmental social programs are wasteful. This is because most of the biology professors I have discussed this with think that this is true."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([astrology, quantum_mechanics, mechanical_engineers, professor_smith, social_programs])\nbeliefs = Function([arguments] -> [bool])\n\n# Constraints\nbeliefs(astrology) == True ::: My suspicion that there is some truth to astrology has been confirmed\nForAll([a:arguments], beliefs(a) == True) ::: Most physicians I have talked to believe in it\n\n# Options\nQuestion ::: The flawed pattern of reasoning in the argument above is most similar to that in which one of the following?\nis_similar(beliefs(quantum_mechanics) == True) ::: (A)\nis_similar(beliefs(mechanical_engineers) == True) ::: (B)\nis_similar(beliefs(professor_smith) == False) ::: (C)\nis_similar(beliefs(social_programs) == True) ::: (D)"
    ]
  },
  {
    "id": "test_34",
    "context": "Although some animals exhibit a mild skin reaction to urushiol, an oil produced by plants such as poison oak and poison ivy, it appears that only humans develop painful rashes from touching it. In fact, wood rats even use branches from the poison oak plant to build their nests. Ttherefore, urushiol probably did not evolve in these plants as a chemical defense.",
    "question": "Which one of the following, if true, adds the most support for the conclusion of the argument?",
    "options": [
      "In approximately 85 percent of the human population, very small amounts of urushiol can cause a rash.",
      "Wood rats build their nests using dead, brittle branches, not live ones.",
      "A number of different animals use poison oak and poison ivy as food sources.",
      "Poison oak and poison ivy grow particularly well in places where humans have altered natural forest ecosystems."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([humans, wood_rats, other_animals])\nplants = EnumSort([poison_oak, poison_ivy])\nreactions = EnumSort([mild_reaction, painful_rash, no_reaction])\nuses = Function([species, plants] -> [bool])\nreaction_to_urushiol = Function([species] -> [reactions])\nevolved_as_defense = Function([plants] -> [bool])\n\n# Constraints\nreaction_to_urushiol(humans) == painful_rash ::: Only humans develop painful rashes from touching urushiol\nreaction_to_urushiol(wood_rats) == no_reaction ::: Wood rats do not develop painful rashes\nuses(wood_rats, poison_oak) == True ::: Wood rats use branches from the poison oak plant to build their nests\nForAll([s:species], reaction_to_urushiol(s) != painful_rash) ::: No other species besides humans develop painful rashes\n\n# Options\nQuestion ::: Which one of the following, if true, adds the most support for the conclusion of the argument?\nis_supportive(ForAll([s:species], reaction_to_urushiol(s) == painful_rash)) ::: (A) In approximately 85 percent of the human population, very small amounts of urushiol can cause a rash.\nis_supportive(Not(uses(wood_rats, poison_oak))) ::: (B) Wood rats build their nests using dead, brittle branches, not live ones.\nis_supportive(Exists([s:species], uses(s, poison_oak) == True)) ::: (C) A number of different animals use poison oak and poison ivy as food sources.\nis_supportive(evolved_as_defense(poison_oak) == False) ::: (D) Poison oak and poison ivy grow particularly well in places where humans have altered natural forest ecosystems."
    ]
  },
  {
    "id": "test_35",
    "context": "Land developer: By attempting to preserve endangered species that otherwise would become extinct during our lifetime, we are wasting money on species that will disappear over time regardless of our efforts. Paleontologists have established that extinction is the normal fate of species on the geological time scale of millions of years. Environmentalist: To claim that we should let species disappear because all species eventually die out makes about as much sense as arguing that we should not spend money to find a cure for cancer because all humans are inevitably mortal.",
    "question": "The method the environmentalist uses to object to the land developer's argument is to",
    "options": [
      "show that more evidence is needed to substantiate the land developer's conclusion",
      "clarify a dilemma that is embedded in the land developer's argument",
      "show that the land developer's line of reasoning would lead to an unacceptable conclusion if applied to a different situation",
      "attack the character of the land developer rather than the position the land developer is taking"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([land_developer, environmentalist])\nmethods = EnumSort([more_evidence_needed, clarify_dilemma, unacceptable_conclusion, attack_character])\nuses_method = Function([arguments] -> [methods])\n\n# Constraints\nuses_method(land_developer) == None ::: The land developer presents an argument without using a specific method\nuses_method(environmentalist) == unacceptable_conclusion ::: The environmentalist uses a method to object to the land developer's argument\n\n# Options\nQuestion ::: The method the environmentalist uses to object to the land developer's argument is to\nis_correct(uses_method(environmentalist) == more_evidence_needed) ::: (A) show that more evidence is needed to substantiate the land developer's conclusion\nis_correct(uses_method(environmentalist) == clarify_dilemma) ::: (B) clarify a dilemma that is embedded in the land developer's argument\nis_correct(uses_method(environmentalist) == unacceptable_conclusion) ::: (C) show that the land developer's line of reasoning would lead to an unacceptable conclusion if applied to a different situation\nis_correct(uses_method(environmentalist) == attack_character) ::: (D) attack the character of the land developer rather than the position the land developer is taking"
    ]
  },
  {
    "id": "test_36",
    "context": "Finding of a survey of Systems magazine subscribers: Thirty percent of all merchandise orders placed by subscribers in response to advertisements in the magazine last year were placed by subscribers under age thirty-five. Finding of a survey of advertisers in Systems magazine: Most of the merchandise orders placed in response to advertisements in Systems last year were placed by people under age thirty-five.",
    "question": "For both of the findings to be accurate, which of the following must be true?",
    "options": [
      "Last year, the average dollar amount of merchandise orders placed was less for subscribers under age thirty-five than for those age thirty-five or over.",
      "More subscribers to Systems who have never ordered merchandise in response to advertisements in the magazine are age thirty-five or over than are under age thirty-five.",
      "Among subscribers to Systems, the proportion who are under age thirty-five was considerably lower last year than it is now.",
      "Last year many people who placed orders for merchandise in response to advertisements in Systems were not subscribers to the magazine."
    ],
    "raw_logic_programs": [
      "# Declarations\nage_groups = EnumSort([under_35, over_35])\norder_types = EnumSort([subscriber_orders, non_subscriber_orders])\norders = Function([age_groups, order_types] -> [int])\n\n# Constraints\norders(under_35, subscriber_orders) == 0.3 * TotalOrders(subscriber_orders) ::: Thirty percent of all merchandise orders placed by subscribers in response to advertisements in the magazine last year were placed by subscribers under age thirty-five\norders(under_35, subscriber_orders) + orders(under_35, non_subscriber_orders) > 0.5 * TotalOrders(subscriber_orders + non_subscriber_orders) ::: Most of the merchandise orders placed in response to advertisements in Systems last year were placed by people under age thirty-five\n\n# Options\nQuestion ::: For both of the findings to be accurate, which of the following must be true?\nis_true(orders(under_35, non_subscriber_orders) > 0) ::: (Last year many people who placed orders for merchandise in response to advertisements in Systems were not subscribers to the magazine.)"
    ]
  },
  {
    "id": "test_37",
    "context": "A great number of pedestrians habitually violate the law by not walking against the flow of traffic on one-way streets. Since not walking against the flow of traffic is a significant factor in most pedestrian accidents occurring on one-way streets, installing fences to keep pedestrians from walking on the wrong side of the road would prevent most pedestrian accidents.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Pedestrian carelessness is never a factor in accidents that occur on one-way streets.",
      "A pedestrian rarely needs to run to the other side of the road to avoid an accident.",
      "Even if the fines for walking against the flow of traffic were increased, most pedestrians would still walk on the wrong side of the road.",
      "Most pedestrian accidents are caused by drivers who do not believe in following the law."
    ],
    "raw_logic_programs": [
      "# Declarations\npedestrian_behavior = EnumSort([walk_against_flow, walk_with_flow])\naccident_factors = EnumSort([pedestrian_carelessness, traffic_flow_violation, driver_negligence])\npreventive_measures = EnumSort([install_fences, increase_fines])\naccidents = Function([pedestrian_behavior, accident_factors] -> [bool])\nprevention_effectiveness = Function([preventive_measures] -> [bool])\n\n# Constraints\nForAll([b:pedestrian_behavior], Exists([f:accident_factors], accidents(b, f))) ::: A great number of pedestrians habitually violate the law by not walking against the flow of traffic on one-way streets\naccidents(walk_with_flow, traffic_flow_violation) ::: not walking against the flow of traffic is a significant factor in most pedestrian accidents occurring on one-way streets\nprevention_effectiveness(install_fences) ::: installing fences to keep pedestrians from walking on the wrong side of the road would prevent most pedestrian accidents\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(Not(accidents(walk_with_flow, pedestrian_carelessness))) ::: (A) Pedestrian carelessness is never a factor in accidents that occur on one-way streets.\nis_assumption(Not(Exists([b:pedestrian_behavior], accidents(b, pedestrian_carelessness)))) ::: (B) A pedestrian rarely needs to run to the other side of the road to avoid an accident.\nis_assumption(Not(prevention_effectiveness(increase_fines))) ::: (C) Even if the fines for walking against the flow of traffic were increased, most pedestrians would still walk on the wrong side of the road.\nis_assumption(Not(accidents(walk_with_flow, driver_negligence))) ::: (D) Most pedestrian accidents are caused by drivers who do not believe in following the law."
    ]
  },
  {
    "id": "test_38",
    "context": "Any great ape can learn to recognize its reflection in a mirror. Any animal that recognizes its reflection in a mirror has a sense of self. An animal has a sense of the minds of others only if it possesses a sense of self.",
    "question": "Which one of the following follows logically from the information above?",
    "options": [
      "All great apes have the ability to develop a sense of the minds of others.",
      "Any animal that is incapable of developing a sense of self is not a great ape.",
      "If an animal is not a great ape it is not capable of developing a sense of the minds of others.",
      "Any animal that does not recognize its reflection in a mirror does not have a sense of self."
    ],
    "raw_logic_programs": [
      "# Declarations\nanimals = EnumSort([great_ape, other_animal])\nproperties = EnumSort([recognizes_reflection, sense_of_self, sense_of_minds_of_others])\nhas_property = Function([animals, properties] -> [bool])\n\n# Constraints\nForAll([a:animals], Implies(a == great_ape, has_property(a, recognizes_reflection))) ::: Any great ape can learn to recognize its reflection in a mirror\nForAll([a:animals], Implies(has_property(a, recognizes_reflection), has_property(a, sense_of_self))) ::: Any animal that recognizes its reflection in a mirror has a sense of self\nForAll([a:animals], Implies(has_property(a, sense_of_minds_of_others), has_property(a, sense_of_self))) ::: An animal has a sense of the minds of others only if it possesses a sense of self\n\n# Options\nQuestion ::: Which one of the following follows logically from the information above?\nis_valid(ForAll([a:animals], Implies(a == great_ape, has_property(a, sense_of_minds_of_others)))) ::: (All great apes have the ability to develop a sense of the minds of others.)\nis_valid(ForAll([a:animals], Implies(Not(has_property(a, sense_of_self)), a != great_ape))) ::: (Any animal that is incapable of developing a sense of self is not a great ape.)\nis_valid(ForAll([a:animals], Implies(a != great_ape, Not(has_property(a, sense_of_minds_of_others))))) ::: (If an animal is not a great ape it is not capable of developing a sense of the minds of others.)\nis_valid(ForAll([a:animals], Implies(Not(has_property(a, recognizes_reflection)), Not(has_property(a, sense_of_self))))) ::: (Any animal that does not recognize its reflection in a mirror does not have a sense of self.)"
    ]
  },
  {
    "id": "test_39",
    "context": "Astronomer: Observations of the Shoemaker-Levi comet on its collision course with Jupiter showed that the comet broke into fragments before entering Jupiter' s atmosphere in 1994, but they did not show how big those fragments were. In hopes of gaining some indication of the fragments' size, astronomers studied spectrographic analyses of Jupiter' s outer atmosphere. These analyses revealed unprecedented traces of sulfur after the fragments' entry. <b> The fragments themselves almost certainly contained no sulfur, </b> but many astronomers believe that the cloud layer below Jupiter' s outer atmosphere does contain sulfur. Since sulfur would have seeped into the outer atmosphere if comet fragments had penetrated this cloud layer, <b> it is likely that some of the fragments were at least large enough to have passed through Jupiter' s outer atmosphere without being burned up. </b>",
    "question": "In the astronomer's argument, the two portions in boldface play which of the following roles?",
    "options": [
      "The first is a judgment advanced in support of the conclusion of the argument; the second is that conclusion.",
      "The first acknowledges a consideration that weighs against the conclusion of the argument; the second is that conclusion.",
      "The first acknowledges a consideration that weighs against the conclusion of the argument; the second provides evidence in support of that conclusion.",
      "The first presents a circumstance for which the astronomer offers an explanation; the second is part of that explanation."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([first_boldface, second_boldface])\nroles = EnumSort([judgment_supporting_conclusion, conclusion, consideration_against_conclusion, evidence_supporting_conclusion, circumstance, explanation_part])\n\n# Constraints\nrole(first_boldface) == consideration_against_conclusion ::: The first boldface portion acknowledges a consideration that weighs against the conclusion of the argument\nrole(second_boldface) == conclusion ::: The second boldface portion is the conclusion of the argument\n\n# Options\nQuestion ::: In the astronomer's argument, the two portions in boldface play which of the following roles?\nis_correct(role(first_boldface) == judgment_supporting_conclusion, role(second_boldface) == conclusion) ::: (A) The first is a judgment advanced in support of the conclusion of the argument; the second is that conclusion.\nis_correct(role(first_boldface) == consideration_against_conclusion, role(second_boldface) == conclusion) ::: (B) The first acknowledges a consideration that weighs against the conclusion of the argument; the second is that conclusion.\nis_correct(role(first_boldface) == consideration_against_conclusion, role(second_boldface) == evidence_supporting_conclusion) ::: (C) The first acknowledges a consideration that weighs against the conclusion of the argument; the second provides evidence in support of that conclusion.\nis_correct(role(first_boldface) == circumstance, role(second_boldface) == explanation_part) ::: (D) The first presents a circumstance for which the astronomer offers an explanation; the second is part of that explanation."
    ]
  },
  {
    "id": "test_40",
    "context": "Author: A society that allows unlimited copying of original written work will have no literary works at all because all creative writing will cease. So, it must be assumed that the more protection provided against the copying of original written work, the larger the amount of literary works available. Economist: Your supposition cannot be correct, because your hypothesis would suggest that not allowing any copying of original written work would lead to the greatest number of literary works available.",
    "question": "The economist's response to the author's argument suggests which of the following?",
    "options": [
      "The economist is undermining the credibility of the author by explicitly challenging the author's understanding of the economic principles of supply and demand.",
      "The economist has been proven incorrect because the economist is unable to prove the author's statement that creative writing will cease if unlimited copying of original written work is allowed.",
      "The economist has proven the author's statement to be incorrect by using a detailed example of a situation where the author's conclusion is proven false.",
      "The economist and the author could both be correct as they are interpreting a key term in two distinct ways."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([author, economist])\nclaims = EnumSort([unlimited_copying_no_works, more_protection_more_works, no_copying_most_works])\nsupports = Function([statements, claims] -> [bool])\n\n# Constraints\nsupports(author, unlimited_copying_no_works) ::: Author claims that unlimited copying will result in no literary works\nsupports(author, more_protection_more_works) ::: Author claims that more protection leads to more literary works\nsupports(economist, Not(more_protection_more_works)) ::: Economist challenges the author's claim by suggesting that more protection does not necessarily lead to more works\nsupports(economist, no_copying_most_works) ::: Economist suggests that no copying would lead to the most works, which contradicts the author's claim\n\n# Options\nQuestion ::: The economist's response to the author's argument suggests which of the following?\nis_suggested(undermining_credibility) ::: (The economist is undermining the credibility of the author by explicitly challenging the author's understanding of the economic principles of supply and demand.\nis_suggested(proven_incorrect) ::: (The economist has been proven incorrect because the economist is unable to prove the author's statement that creative writing will cease if unlimited copying of original written work is allowed.\nis_suggested(proven_false_example) ::: (The economist has proven the author's statement to be incorrect by using a detailed example of a situation where the author's conclusion is proven false.\nis_suggested(distinct_interpretations) ::: (The economist and the author could both be correct as they are interpreting a key term in two distinct ways."
    ]
  },
  {
    "id": "test_41",
    "context": "The number of United States citizens suffering from the flu increased significantly this year over last year. Since this increase did not occur among citizens of other countries, it is likely the result of a particular flu virus confined to the United States.",
    "question": "Which of the following, if true, would cast the most serious doubt on the explanation for the increase given above?",
    "options": [
      "Many non-US citizens took flu vaccines this year.",
      "The number of US citizens did not change significantly between last year and this year.",
      "A large percentage of US citizens who suffered from the flu this year were living abroad.",
      "This year, the flu suffered by citizens of other countries was generally more severe than that suffered by US citizens."
    ],
    "raw_logic_programs": [
      "# Declarations\ncitizens = EnumSort([US, non_US])\nfactors = EnumSort([flu_virus, flu_vaccine, living_abroad, severity])\nsuffering = Function([citizens, factors] -> [bool])\n\n# Constraints\nsuffering(US, flu_virus) ::: The number of United States citizens suffering from the flu increased significantly this year over last year\nNot(suffering(non_US, flu_virus)) ::: This increase did not occur among citizens of other countries\n\n# Options\nQuestion ::: Which of the following, if true, would cast the most serious doubt on the explanation for the increase given above?\nis_doubtful(suffering(non_US, flu_vaccine)) ::: (A) Many non-US citizens took flu vaccines this year\nis_doubtful(Not(suffering(US, flu_virus))) ::: (B) The number of US citizens did not change significantly between last year and this year\nis_doubtful(suffering(US, living_abroad)) ::: (C) A large percentage of US citizens who suffered from the flu this year were living abroad\nis_doubtful(suffering(non_US, severity)) ::: (D) This year, the flu suffered by citizens of other countries was generally more severe than that suffered by US citizens"
    ]
  },
  {
    "id": "test_42",
    "context": "Traditional \"talk\" therapy, in which a patient with a psychological disorder discusses it with a trained therapist, produces chemical changes in the brain. These changes seem to correspond to improvements in certain aspects of the patient' s behavior. Thus, physicians will eventually be able to treat such patients as effectively through pharmacological intervention in the brain' s neurochemistry as through the lengthy intermediary of traditional \"talk\" methods.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "\"Talk\" therapy has not been effective at bringing about psychological change.",
      "Improvements in a patient's behavior produced by \"talk\" therapy occur only through chemical changes in the brain's neurochemistry.",
      "Direct intervention in the brain's neurochemistry is likely to become a less expensive way of treating psychological disorders than is \"talk\" therapy.",
      "All neurochemical changes produce corresponding psychological changes."
    ],
    "raw_logic_programs": [
      "# Declarations\ntherapies = EnumSort([talk_therapy, pharmacological_intervention])\neffects = EnumSort([chemical_changes, behavioral_improvements])\ncauses = Function([therapies] -> [effects])\ndepends_on = Function([effects] -> [effects])\n\n# Constraints\ncauses(talk_therapy) == chemical_changes ::: Traditional \"talk\" therapy produces chemical changes in the brain\ndepends_on(behavioral_improvements) == chemical_changes ::: These changes seem to correspond to improvements in certain aspects of the patient's behavior\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(depends_on(behavioral_improvements) == chemical_changes) ::: (B) Improvements in a patient's behavior produced by \"talk\" therapy occur only through chemical changes in the brain's neurochemistry"
    ]
  },
  {
    "id": "test_43",
    "context": "Last year the county park system failed to generate enough revenue to cover its costs. Any business should be closed if it is unprofitable, but county parks are not businesses. Ttherefore, the fact that county parks are unprofitable does not by itself justify closing them.",
    "question": "The pattern of reasoning in the argument above is most closely paralleled in which one of the following?",
    "options": [
      "Even though cockatiels are not, strictly speaking, members of the parrot family, they should be fed the same diet as most parrots since the cockatiel's dietary needs are so similar to those of parrots.",
      "Since minors are not subject to the same criminal laws as are adults, they should not be subject to the same sorts of punishments as those that apply to adults.",
      "Although companies that manufacture and market automobiles in the United States must meet stringent air-quality standards, the OKESA company should be exempt from these standards since it manufactures bicycles in addition to automobiles.",
      "A prime-time television series should be canceled if it fails to attract a large audience, but the small audience attracted by the documentary series is not sufficient reason to cancel it, since it does not air during prime time."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([county_parks, cockatiels, minors, OKESA, television_series])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nreasoning(county_parks) == (Not(business(county_parks)) And unprofitable(county_parks) -> Not(justify_closing(county_parks))) ::: The fact that county parks are unprofitable does not by itself justify closing them because they are not businesses.\n\n# Options\nQuestion ::: The pattern of reasoning in the argument above is most closely paralleled in which one of the following?\nis_paralleled(reasoning(cockatiels) == (Not(parrot(cockatiels)) And similar_diet(cockatiels, parrots) -> same_diet(cockatiels, parrots))) ::: (A)\nis_paralleled(reasoning(minors) == (Not(subject_to_same_laws(minors, adults)) -> Not(subject_to_same_punishments(minors, adults)))) ::: (B)\nis_paralleled(reasoning(OKESA) == (must_meet_standards(OKESA) And manufactures_bicycles(OKESA) -> exempt_from_standards(OKESA))) ::: (C)\nis_paralleled(reasoning(television_series) == (Not(prime_time(television_series)) And small_audience(television_series) -> Not(justify_canceling(television_series)))) ::: (D)"
    ]
  },
  {
    "id": "test_44",
    "context": "Film Director: It is true that certain characters and plot twists in my newly released film The Big Heist are strikingly similar to characters and plot twists in Thieves, a movie that came out last year. Based on these similarities, the film studio that produced Thieves is now accusing me of taking ideas from that film. The accusation is clearly without merit. All production work on The Big Heist was actually completed months before Thieves was released.",
    "question": "Which of the following, if true, provides the strongest support for the director's rejection of the accusation?",
    "options": [
      "The film studio that produced Thieves seldom produces films in this genre.",
      "Before Thieves began production, its script had been circulating for several years among various film studios, including the studio that produced The Big Heist.",
      "The time it took to produce The Big Heist was considerably shorter than the time it took to produce Thieves.",
      "The characters and plot twists that are most similar in the two films have close parallels in many earlier films of the same genre."
    ],
    "raw_logic_programs": [
      "# Declarations\nfilms = EnumSort([The_Big_Heist, Thieves])\nevents = EnumSort([production_completed, released])\nstudios = EnumSort([studio_Thieves, studio_The_Big_Heist])\nscripts = EnumSort([script_Thieves])\ntime = Function([films, events] -> [int])\ncirculated = Function([scripts, studios] -> [bool])\n\n# Constraints\ntime(The_Big_Heist, production_completed) < time(Thieves, released) ::: All production work on The Big Heist was actually completed months before Thieves was released\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest support for the director's rejection of the accusation?\nis_strong_support(circulated(script_Thieves, studio_The_Big_Heist)) ::: (B) Before Thieves began production, its script had been circulating for several years among various film studios, including the studio that produced The Big Heist.\nis_weak_support(time(The_Big_Heist, production_completed) < time(Thieves, production_completed)) ::: (C) The time it took to produce The Big Heist was considerably shorter than the time it took to produce Thieves.\nis_weak_support(Exists([f:films], And(f != The_Big_Heist, f != Thieves, similar(f, The_Big_Heist), similar(f, Thieves)))) ::: (D) The characters and plot twists that are most similar in the two films have close parallels in many earlier films of the same genre."
    ]
  },
  {
    "id": "test_45",
    "context": "The present goal of the field of medicine seems to be to extend life indefinitely. Increasingly, the ability to transplant such organs as hearts, lungs, livers, and kidneys will allow us to live longer. But we can never achieve brain transplants. There are, for a start, ten million nerves running from the brain down the neck, not to mention the millions joining the brain to the sensing organs. Clearly, then, as the transplantation of organs allows more and more people to live longer, those with degenerative brain disorders will form an ever-increasing proportion of the population.",
    "question": "The argument above is based on which one of the following assumptions?",
    "options": [
      "More is being spent on research into degenerative brain disorders than on research into transplantation.",
      "It is still quite rare for people to live long enough to need more than one transplant of any given organ.",
      "Degenerative brain disorders account for a very small proportion of deaths in the population at large.",
      "There are degenerative brain disorders that will not be curable without brain transplants."
    ],
    "raw_logic_programs": [
      "# Declarations\nassumptions = EnumSort([A, B, C, D])\n\n# Constraints\n# The argument is based on the assumption that as organ transplants allow people to live longer, those with degenerative brain disorders will form an increasing proportion of the population. This implies that there are degenerative brain disorders that cannot be cured without brain transplants.\n\n# Options\nQuestion ::: The argument above is based on which one of the following assumptions?\nis_assumption(assumptions.D) ::: (D) There are degenerative brain disorders that will not be curable without brain transplants."
    ]
  },
  {
    "id": "test_46",
    "context": "With decreased production this year in many rice-growing countries, prices of the grain on world markets have increased. Analysts blame this increase on the fact that only a small percentage of world production is sold commercially, with government growers controlling most of the rest, distributing it for local consumption. With so little rice being traded freely, even slight changes in production can significantly affect the amount of rice available on world markets.",
    "question": "Which one of the following, if true, would most call into question the analysts' explanation of the price increase?",
    "options": [
      "Rice-importing countries reduce purchases of rice when the price increases dramatically.",
      "In times of decreased rice production, governments store more of the rice they control and reduce their local distribution of rice.",
      "In times of decreased rice production, governments export some of the rice originally intended for local distribution to countries with free grain markets.",
      "During reduced rice harvests, rice-importing countries import other kinds of crops, although this fails to compensate for decreased rice imports."
    ],
    "raw_logic_programs": [
      "# Declarations\nrice_production = EnumSort([decreased, stable, increased])\nmarket_control = EnumSort([government, commercial])\nactions = EnumSort([reduce_purchases, store_more, export_more, import_other_crops])\nprice_change = EnumSort([increase, decrease, stable])\n\n# Constraints\nproduction_change = decreased ::: With decreased production this year in many rice-growing countries\nprice_change = increase ::: prices of the grain on world markets have increased\nanalysts_explanation = (production_change == decreased) & (market_control == government) & (price_change == increase) ::: Analysts blame this increase on the fact that only a small percentage of world production is sold commercially, with government growers controlling most of the rest, distributing it for local consumption\n\n# Options\nQuestion ::: Which one of the following, if true, would most call into question the analysts' explanation of the price increase?\nis_counter(analysts_explanation, actions == reduce_purchases) ::: (A) Rice-importing countries reduce purchases of rice when the price increases dramatically.\nis_counter(analysts_explanation, actions == store_more) ::: (B) In times of decreased rice production, governments store more of the rice they control and reduce their local distribution of rice.\nis_counter(analysts_explanation, actions == export_more) ::: (C) In times of decreased rice production, governments export some of the rice originally intended for local distribution to countries with free grain markets.\nis_counter(analysts_explanation, actions == import_other_crops) ::: (D) During reduced rice harvests, rice-importing countries import other kinds of crops, although this fails to compensate for decreased rice imports."
    ]
  },
  {
    "id": "test_47",
    "context": "A director of the Rexx Pharmaceutical Company argued that the development costs for new vaccines that the health department has requested should be subsidized by the government, since the marketing of vaccines promised to be less profitable than the marketing of any other pharmaceutical product. In support of this claim the director argued that sales of vaccines are likely to be lower since each vaccine is administered to a patient only once, whereas medicines that combat diseases and chronic illnesses are administered many times to each patient.",
    "question": "Which one of the following, if true, most weakens the support offered by the company director for the claim concerning the marketing of vaccines?",
    "options": [
      "Pharmaceutical companies other than the Rexx Pharmaceutical Company produce vaccines.",
      "Pharmaceutical companies occasionally market products that are neither medicines nor vaccines.",
      "Vaccines are administered to many more people than are most other pharmaceutical products.",
      "The cost of administering a vaccine is rarely borne by the pharmaceutical company that manufactures that vaccine."
    ],
    "raw_logic_programs": [
      "# Declarations\nproducts = EnumSort([vaccines, medicines, other_pharmaceuticals])\nfactors = EnumSort([profitability, sales, administration_frequency, market_size])\nclaims = Function([products, factors] -> [bool])\n\n# Constraints\nclaims(vaccines, profitability) == False ::: The marketing of vaccines is claimed to be less profitable than any other pharmaceutical product\nclaims(vaccines, sales) == False ::: Sales of vaccines are likely to be lower\nclaims(vaccines, administration_frequency) == False ::: Each vaccine is administered only once\nclaims(medicines, administration_frequency) == True ::: Medicines are administered many times\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the support offered by the company director for the claim concerning the marketing of vaccines?\nis_weakening(claims(vaccines, market_size) == True) ::: (Vaccines are administered to many more people than are most other pharmaceutical products.\nis_weakening(claims(vaccines, administration_frequency) == False) ::: (The cost of administering a vaccine is rarely borne by the pharmaceutical company that manufactures that vaccine.\nis_weakening(claims(other_pharmaceuticals, market_size) == True) ::: (Pharmaceutical companies other than the Rexx Pharmaceutical Company produce vaccines.\nis_weakening(claims(other_pharmaceuticals, administration_frequency) == True) ::: (Pharmaceutical companies occasionally market products that are neither medicines nor vaccines."
    ]
  },
  {
    "id": "test_48",
    "context": "Reporting on a civil war, a journalist encountered evidence that refugees were starving because the government would not permit food shipments to a rebel-held area. Government censors deleted all mention of the government' s role in the starvation from the journalist' s report, which had not implicated either nature or the rebels in the starvation. The journalist concluded that it was ethically permissible to file the censored report, because the journalist' s news agency would precede it with the notice \"Cleared by government censors. \"",
    "question": "Which one of the following ethical criteria, if valid, would serve to support the journalist's conclusion while placing the least constraint on the flow of reported information?",
    "options": [
      "It is ethical in general to report known facts but unethical to do so while omitting other known facts if the omitted facts would substantially alter an impression of a person or institution that would be congruent with the reported facts.",
      "It is ethical in general to report known facts but unethical to make a report in a situation of censorship if relevant facts have been deleted by the censor, unless the recipient of the report is warned that censorship existed.",
      "In a situation of censorship, it is unethical to make any report if the government represented by the censor deletes from the report material unfavorable to that government.",
      "In a situation of conflict, it is ethical to report known facts and unethical to fail to report known facts that would tend to exonerate one party to the conflict."
    ],
    "raw_logic_programs": [
      "# Declarations\ncriteria = EnumSort([criterion1, criterion2, criterion3, criterion4])\nreport = Function([criteria] -> [bool])\n\n# Constraints\nreport(criterion1) == (It is ethical in general to report known facts but unethical to do so while omitting other known facts if the omitted facts would substantially alter an impression of a person or institution that would be congruent with the reported facts)\nreport(criterion2) == (It is ethical in general to report known facts but unethical to make a report in a situation of censorship if relevant facts have been deleted by the censor, unless the recipient of the report is warned that censorship existed)\nreport(criterion3) == (In a situation of censorship, it is unethical to make any report if the government represented by the censor deletes from the report material unfavorable to that government)\nreport(criterion4) == (In a situation of conflict, it is ethical to report known facts and unethical to fail to report known facts that would tend to exonerate one party to the conflict)\n\n# Options\nQuestion ::: Which one of the following ethical criteria, if valid, would serve to support the journalist's conclusion while placing the least constraint on the flow of reported information?\nis_least_constraint(report(criterion2)) ::: (It is ethical in general to report known facts but unethical to make a report in a situation of censorship if relevant facts have been deleted by the censor, unless the recipient of the report is warned that censorship existed)"
    ]
  },
  {
    "id": "test_49",
    "context": "Political commentators see recent policies of the government toward Country X as appeasement, pure and simple. This view is fundamentally mistaken, for polls show that most people disagree with the political commentators' assessment of government policies toward Country X.",
    "question": "The reasoning in the argument is questionable because",
    "options": [
      "a claim is inferred to be false merely because a majority of people believe it to be false",
      "the term \"policies\" is used ambiguously in the argument",
      "the claim that the political commentators are mistaken is both a premise and a conclusion in the argument",
      "the political commentators discussed in the passage are not identified"
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([appeasement, mistaken])\nbeliefs = Function([claims] -> [bool])\nmajority_belief = Function([claims] -> [bool])\n\n# Constraints\nbeliefs(appeasement) == True ::: Political commentators see recent policies as appeasement\nmajority_belief(appeasement) == False ::: Polls show that most people disagree with the political commentators' assessment\n\n# Options\nQuestion ::: The reasoning in the argument is questionable because\nis_questionable(Implies(beliefs(appeasement), Not(majority_belief(appeasement)))) ::: (a claim is inferred to be false merely because a majority of people believe it to be false)\nis_questionable(False) ::: (the term \"policies\" is used ambiguously in the argument)\nis_questionable(False) ::: (the claim that the political commentators are mistaken is both a premise and a conclusion in the argument)\nis_questionable(False) ::: (the political commentators discussed in the passage are not identified)"
    ]
  },
  {
    "id": "test_50",
    "context": "Boreal owls range over a much larger area than do other owls of similar size. Scientists have hypothesized that <b> it is scarcity of prey that leads the owls to range so widely. </b>This hypothesis would be hard to confirm directly, since it is not possible to produce a sufficiently accurate count of the populations of small mammals inhabiting the forests where boreal owls live. Careful study of owl behavior has, however, shown that <b> boreal owls do range over larger areas when they live in regions where food of the sort eaten by small mammals is comparatively sparse. </b> This indicates that the scientists' hypothesis is not sheer speculation.",
    "question": "In the argument given, the two <b> boldfaced </b> portions play which of the following roles?",
    "options": [
      "The first describes a position that the argument opposes; the second states the main conclusion of the argument.",
      "The first describes a position that the argument opposes; the second presents evidence to undermine the support for the position being opposed.",
      "The first presents an explanatory hypothesis; the second presents evidence to support an alternative explanation.",
      "The first presents an explanatory hypothesis; the second presents evidence tending to support this hypothesis."
    ],
    "raw_logic_programs": [
      "# Declarations\nhypotheses = EnumSort([scarcity_of_prey_hypothesis, alternative_explanation])\nroles = EnumSort([position_opposed, main_conclusion, explanatory_hypothesis, supporting_evidence])\nboldfaced_portions = Function([int] -> [roles])\n\n# Constraints\nboldfaced_portions(1) == explanatory_hypothesis ::: The first boldfaced portion presents an explanatory hypothesis\nboldfaced_portions(2) == supporting_evidence ::: The second boldfaced portion presents evidence tending to support this hypothesis\n\n# Options\nQuestion ::: In the argument given, the two boldfaced portions play which of the following roles?\nis_correct(boldfaced_portions(1) == position_opposed, boldfaced_portions(2) == main_conclusion) ::: (The first describes a position that the argument opposes; the second states the main conclusion of the argument.)\nis_correct(boldfaced_portions(1) == position_opposed, boldfaced_portions(2) == supporting_evidence) ::: (The first describes a position that the argument opposes; the second presents evidence to undermine the support for the position being opposed.)\nis_correct(boldfaced_portions(1) == explanatory_hypothesis, boldfaced_portions(2) == supporting_evidence) ::: (The first presents an explanatory hypothesis; the second presents evidence to support an alternative explanation.)\nis_correct(boldfaced_portions(1) == explanatory_hypothesis, boldfaced_portions(2) == supporting_evidence) ::: (The first presents an explanatory hypothesis; the second presents evidence tending to support this hypothesis.)"
    ]
  },
  {
    "id": "test_51",
    "context": "The tax bill passed 2 years ago provides substantial incentives for businesses that move to this area and hire 50 or more employees. Critics say the bill reduces the government' s tax revenues. Yet clearly it has already created many jobs in this area. Last year, Plastonica qualified for incentives under the bill by opening a new plastics factory here that hired 75 employees.",
    "question": "The argument's reasoning depends on which one of the following assumptions?",
    "options": [
      "If Plastonica had not opened the plastics factory in the area, it would not have opened a plastics factory at all.",
      "Plastonica would not have opened the plastics factory in the area had it not been for the incentives",
      "If Plastonica had not opened the plastics factory in the area, it would have opened it somewhere else.",
      "Most critics of the tax bill claim that it will not create any more new jobs."
    ],
    "raw_logic_programs": [
      "# Declarations\nbusinesses = EnumSort([Plastonica])\nactions = EnumSort([open_factory, not_open_factory])\nlocations = EnumSort([this_area, other_area])\nincentives = EnumSort([received_incentives, not_received_incentives])\nhired_employees = Function([businesses, actions, locations] -> [int])\nqualified_for_incentives = Function([businesses] -> [bool])\n\n# Constraints\nqualified_for_incentives(Plastonica) == True ::: Plastonica qualified for incentives under the bill\nhired_employees(Plastonica, open_factory, this_area) == 75 ::: Plastonica hired 75 employees by opening a new plastics factory here\n\n# Options\nQuestion ::: The argument's reasoning depends on which one of the following assumptions?\nis_assumption(Implies(qualified_for_incentives(Plastonica), Not(open_factory(Plastonica, other_area)))) ::: (A) If Plastonica had not opened the plastics factory in the area, it would not have opened a plastics factory at all.\nis_assumption(Implies(Not(received_incentives(Plastonica)), Not(open_factory(Plastonica, this_area)))) ::: (B) Plastonica would not have opened the plastics factory in the area had it not been for the incentives\nis_assumption(Implies(Not(open_factory(Plastonica, this_area)), open_factory(Plastonica, other_area))) ::: (C) If Plastonica had not opened the plastics factory in the area, it would have opened it somewhere else.\nis_assumption(ForAll([c:critics], Implies(critic(c), Not(claim_no_new_jobs(c))))) ::: (D) Most critics of the tax bill claim that it will not create any more new jobs."
    ]
  },
  {
    "id": "test_52",
    "context": "For the writers who first gave feudalism its name, the existence of feudalism presupposed the existence of a noble class. Yet there cannot be a noble class, properly speaking, unless both the titles that indicate superior, noble status and the inheritance of such titles are sanctioned by law. Although feudalism existed in Europe as early as the eighth century, it was not until the twelfth century, when many feudal institutions were in decline, that the hereditary transfer of legally recognized titles of nobility first appeared.",
    "question": "The statements above, if true, most strongly support which one of the following claims?",
    "options": [
      "Prior to the twelfth century, the institution of European feudalism functioned without the presence of a dominant class.",
      "The fact that a societal group has a distinct legal status is not in itself sufficient to allow that group to be properly considered a social class.",
      "To say that feudalism by definition requires the existence of a nobility is to employ a definition that distorts history.",
      "The prior existence of feudal institutions is a prerequisite for the emergence of a nobility, as defined in the strictest sense of the term."
    ],
    "raw_logic_programs": [
      "# Declarations\nnoble_class = BoolSort()\ntitles = BoolSort()\ninheritance = BoolSort()\nfeudalism = BoolSort()\neurope_feudalism = BoolSort()\nhereditary_titles = BoolSort()\n\n# Constraints\nImplies(feudalism, noble_class) ::: The existence of feudalism presupposed the existence of a noble class\nImplies(noble_class, And(titles, inheritance)) ::: There cannot be a noble class unless both titles and inheritance are sanctioned by law\nAnd(europe_feudalism, Not(hereditary_titles)) ::: Feudalism existed in Europe as early as the eighth century, but hereditary titles appeared in the twelfth century\n\n# Options\nQuestion ::: The statements above, if true, most strongly support which one of the following claims?\nis_supported(And(europe_feudalism, Not(noble_class))) ::: (A) Prior to the twelfth century, the institution of European feudalism functioned without the presence of a dominant class.\nis_supported(Not(Implies(titles, noble_class))) ::: (B) The fact that a societal group has a distinct legal status is not in itself sufficient to allow that group to be properly considered a social class.\nis_supported(Not(Implies(feudalism, noble_class))) ::: (C) To say that feudalism by definition requires the existence of a nobility is to employ a definition that distorts history.\nis_supported(Implies(feudalism, hereditary_titles)) ::: (D) The prior existence of feudal institutions is a prerequisite for the emergence of a nobility, as defined in the strictest sense of the term."
    ]
  },
  {
    "id": "test_53",
    "context": "Columnist: Research shows significant reductions in the number of people smoking, and especially in the number of first-time smokers in those countries that have imposed stringent restrictions on tobacco advertising. This provides substantial grounds for disputing tobacco companies' claims that advertising has no significant causal impact on the tendency to smoke.",
    "question": "Which one of the following, if true, most undermines the columnist's reasoning?",
    "options": [
      "People who are largely unaffected by tobacco advertising tend to be unaffected by other kinds of advertising as well.",
      "Most people who begin smoking during adolescence continue to smoke throughout their lives.",
      "People who smoke are unlikely to quit merely because they are no longer exposed to tobacco advertising.",
      "Restrictions on tobacco advertising are imposed only in countries where a negative attitude toward tobacco use is already widespread and increasing."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([country1, country2, country3])\nadvertising_restrictions = Function([countries] -> [bool])\nsmoking_reduction = Function([countries] -> [bool])\nnegative_attitude = Function([countries] -> [bool])\n\n# Constraints\nForAll([c:countries], Implies(advertising_restrictions(c), smoking_reduction(c))) ::: Research shows significant reductions in the number of people smoking in countries with advertising restrictions\nForAll([c:countries], Implies(advertising_restrictions(c), Not(Exists([p:people], first_time_smoker(p, c))))) ::: Reductions in the number of first-time smokers in countries with advertising restrictions\n\n# Options\nQuestion ::: Which one of the following, if true, most undermines the columnist's reasoning?\nis_undermining(ForAll([c:countries], Implies(advertising_restrictions(c), negative_attitude(c)))) ::: (Restrictions on tobacco advertising are imposed only in countries where a negative attitude toward tobacco use is already widespread and increasing.)"
    ]
  },
  {
    "id": "test_54",
    "context": "Physicist: The claim that low-temperature nuclear fusion can be achieved entirely by chemical means is based on chemical experiments in which the measurements and calculations are inaccurate. Chemist: But your challenge is ineffectual, since you are simply jealous at the thought that chemists might have solved a problem that physicists have been unable to solve.",
    "question": "Which one of the following is the strongest criticism of the chemist's response to the physicist's challenge?",
    "options": [
      "It restates a claim in different words instead of offering evidence for this claim.",
      "It confuses two different meanings of the word \"solve. \"",
      "It is directed against the proponent of a claim rather than against the claim itself.",
      "It fails to establish that perfect accuracy of measurements and calculations is possible."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([low_temp_fusion_claim, physicist_challenge, chemist_response])\ncriticisms = EnumSort([restates_claim, confuses_meanings, ad_hominem, fails_accuracy])\naddresses = Function([criticisms, claims] -> [bool])\n\n# Constraints\naddresses(restates_claim, chemist_response) ::: It restates a claim in different words instead of offering evidence for this claim\naddresses(confuses_meanings, chemist_response) ::: It confuses two different meanings of the word \"solve\"\naddresses(ad_hominem, chemist_response) ::: It is directed against the proponent of a claim rather than against the claim itself\naddresses(fails_accuracy, chemist_response) ::: It fails to establish that perfect accuracy of measurements and calculations is possible\n\n# Options\nQuestion ::: Which one of the following is the strongest criticism of the chemist's response to the physicist's challenge?\nis_strongest(addresses(ad_hominem, chemist_response)) ::: (It is directed against the proponent of a claim rather than against the claim itself)"
    ]
  },
  {
    "id": "test_55",
    "context": "State X recently decided to cut state funding for the public library system in County X. To help counteract this cut in funding, the county library system has increased library late fees from $. 10 per day to $. 12 per day. Since the fee increase, library administrators have seen no decline in the number of overdue books. The director of the county library system concludes that the fee hike has helped to counteract the cut in state funding.",
    "question": "Which of the following statements, if true, most strengthens the director's claim?",
    "options": [
      "Since the reduction in state funding, the library system in County X has eliminated 10% of its staff, creating a 2% reduction in costs.",
      "The library system incurred minor costs to make its visitors aware of the late fee increase.",
      "The library system in County X tracks its books through a very advanced database system, allowing library administrators to have access to very accurate statistics on the number of overdue books at any given time.",
      "Since the fee increase, there has been no significant change in the average number of days that books are overdue before they are returned."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `statements = EnumSort([A, B, C, D])`\n- `strengthens = Function([statements] -> [bool])`\n\n# Constraints\n- `strengthens(A) == False` ::: The reduction in staff and costs does not directly relate to the effectiveness of the fee hike in counteracting funding cuts.\n- `strengthens(B) == False` ::: Minor costs to make visitors aware of the fee increase do not directly strengthen the claim about counteracting funding cuts.\n- `strengthens(C) == False` ::: The advanced database system provides accurate statistics but does not directly relate to the effectiveness of the fee hike.\n- `strengthens(D) == True` ::: No significant change in the average number of overdue days suggests that the fee increase did not deter overdue returns, supporting the claim that the fee hike helped counteract funding cuts.\n\n# Options\n- `Question` ::: Which of the following statements, if true, most strengthens the director's claim?\n- `is_true(strengthens(D))` ::: (D) Since the fee increase, there has been no significant change in the average number of days that books are overdue before they are returned."
    ]
  },
  {
    "id": "test_56",
    "context": "The mayoral race in Bensburg is a choice between Chu, a prodevelopment candidate, and Lewis, who favors placing greater limits on development. Prodevelopment candidates have won in the last six mayoral elections. Thus, Chu will probably defeat Lewis.",
    "question": "Which one of the following statements, if true, most weakens the argument?",
    "options": [
      "Prodevelopment mayoral candidates in Bensburg generally attract more financial backing for their campaigns.",
      "Lewis has extensive experience in national politics, but not in city politics.",
      "Chu was not thought of as a prodevelopment politician before this election.",
      "Bensburg is facing serious new problems that most voters attribute to overdevelopment."
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([Chu, Lewis])\npositions = EnumSort([prodevelopment, limits_on_development])\nelections = EnumSort([past_elections, current_election])\noutcomes = EnumSort([win, lose])\nattributes = Function([candidates] -> [positions])\nresults = Function([elections, candidates] -> [outcomes])\nvoter_concerns = Function([issues] -> [bool])\n\n# Constraints\nForAll([e:elections], Exists([c:candidates], results(e, c) == win)) ::: In each election, one candidate wins\nForAll([e:elections], Exists([c:candidates], results(e, c) == lose)) ::: In each election, one candidate loses\nForAll([e:elections], results(e, Chu) != results(e, Lewis)) ::: Chu and Lewis cannot both win or both lose in the same election\nForAll([e:past_elections], results(e, Chu) == win) ::: Prodevelopment candidates have won in the last six mayoral elections\nattributes(Chu) == prodevelopment ::: Chu is a prodevelopment candidate\nattributes(Lewis) == limits_on_development ::: Lewis favors placing greater limits on development\n\n# Options\nQuestion ::: Which one of the following statements, if true, most weakens the argument?\nis_weakening(voter_concerns(overdevelopment) == true) ::: (Bensburg is facing serious new problems that most voters attribute to overdevelopment.)\nis_weakening(Exists([c:candidates], financial_backing(c) > financial_backing(Lewis))) ::: (Prodevelopment mayoral candidates in Bensburg generally attract more financial backing for their campaigns.)\nis_weakening(Exists([c:candidates], experience(c, national_politics) > experience(c, city_politics))) ::: (Lewis has extensive experience in national politics, but not in city politics.)\nis_weakening(Exists([c:candidates], Not(known_as_prodevelopment(c)))) ::: (Chu was not thought of as a prodevelopment politician before this election.)"
    ]
  },
  {
    "id": "test_57",
    "context": "Diplomat: Every major war in the last 200 years has been preceded by a short, sharp increase in the acquisition of weapons by the nations that subsequently became participants in those conflicts. Clearly, ttherefore, arms control agreements will preserve peace.",
    "question": "Of the following, which one most accurately describes a reasoning flaw in the diplomat's argument?",
    "options": [
      "The argument infers, merely from the claim that events of one type have for a long time consistently preceded events of a second type, that an event of the second type will not occur unless an event of the first type occurs.",
      "The argument reasons that, simply because weapons are used in war, a rapid, dramatic increase in the acquisition of weapons will always lead to war.",
      "The argument fails to consider that a short, sharp increase in the acquisition of weapons by a nation may be a response to the increased armament of neighboring nations.",
      "The argument draws a conclusion that simply restates a claim presented in support of that conclusion."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([major_war, weapons_increase, arms_control])\ncauses = Function([events, events] -> [bool])\n\n# Constraints\nForAll([w:events], Implies(w == major_war, Exists([i:events], And(i == weapons_increase, causes(i, w))))) ::: Every major war in the last 200 years has been preceded by a short, sharp increase in the acquisition of weapons\nForAll([a:events], Implies(a == arms_control, Not(Exists([w:events], And(w == major_war, causes(w, a)))))) ::: Arms control agreements will preserve peace\n\n# Options\nQuestion ::: Of the following, which one most accurately describes a reasoning flaw in the diplomat's argument?\nis_flaw(ForAll([w:events], Implies(w == major_war, Exists([i:events], And(i == weapons_increase, causes(i, w)))))) ::: (The argument infers, merely from the claim that events of one type have for a long time consistently preceded events of a second type, that an event of the second type will not occur unless an event of the first type occurs.\nis_flaw(ForAll([i:events], Implies(i == weapons_increase, Exists([w:events], And(w == major_war, causes(i, w)))))) ::: (The argument reasons that, simply because weapons are used in war, a rapid, dramatic increase in the acquisition of weapons will always lead to war.\nis_flaw(Exists([n:events], And(n == weapons_increase, causes(n, weapons_increase)))) ::: (The argument fails to consider that a short, sharp increase in the acquisition of weapons by a nation may be a response to the increased armament of neighboring nations.\nis_flaw(ForAll([c:events], Implies(c == arms_control, Not(Exists([w:events], And(w == major_war, causes(w, c))))))) ::: (The argument draws a conclusion that simply restates a claim presented in support of that conclusion."
    ]
  },
  {
    "id": "test_58",
    "context": "Generally speaking, if the same crop is sown in a field for several successive years, growth in the later years is poorer than growth in the earlier years, since nitrogen in the soil becomes depleted. Even though alfalfa is a nitrogen-fixing plant and thus increases the amount of nitrogen in the soil, surprisingly, it too, if planted in the same field year after year, grows less well in the later years than it does in the earlier years.",
    "question": "Which one of the following, if true, most helps to explain the similarity described above between alfalfa and non-nitrogen-fixing plants?",
    "options": [
      "Some kinds of plants grow more rapidly and are more productive when they are grown among other kinds of plants rather than being grown only among plants of their own kind.",
      "Alfalfa increases nitrogen in the soil in which it grows only if a certain type of soil bacteria is present in the soil.",
      "Alfalfa increases the amount of nitrogen in the soil by taking nitrogen from the air and releasing it in a form that is usable by most kinds of plants.",
      "Certain types of plants, including alfalfa, produce substances that accumulate in the soil and that are toxic to the plants that produce those substances."
    ],
    "raw_logic_programs": [
      "# Declarations\ncrops = EnumSort([alfalfa, non_nitrogen_fixing])\nsoil_conditions = EnumSort([nitrogen_depletion, toxic_substances, bacteria_presence])\ngrowth = Function([crops, soil_conditions] -> [bool])\n\n# Constraints\nForAll([c:crops], Implies(growth(c, nitrogen_depletion), Not(growth(c, toxic_substances)))) ::: Generally speaking, if the same crop is sown in a field for several successive years, growth in the later years is poorer than growth in the earlier years, since nitrogen in the soil becomes depleted\ngrowth(alfalfa, nitrogen_depletion) ::: Even though alfalfa is a nitrogen-fixing plant and thus increases the amount of nitrogen in the soil, surprisingly, it too, if planted in the same field year after year, grows less well in the later years than it does in the earlier years\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the similarity described above between alfalfa and non-nitrogen-fixing plants?\nis_explanation(growth(alfalfa, toxic_substances)) ::: (A) Some kinds of plants grow more rapidly and are more productive when they are grown among other kinds of plants rather than being grown only among plants of their own kind.\nis_explanation(Not(growth(alfalfa, bacteria_presence))) ::: (B) Alfalfa increases nitrogen in the soil in which it grows only if a certain type of soil bacteria is present in the soil.\nis_explanation(growth(alfalfa, nitrogen_depletion)) ::: (C) Alfalfa increases the amount of nitrogen in the soil by taking nitrogen from the air and releasing it in a form that is usable by most kinds of plants.\nis_explanation(growth(alfalfa, toxic_substances)) ::: (D) Certain types of plants, including alfalfa, produce substances that accumulate in the soil and that are toxic to the plants that produce those substances."
    ]
  },
  {
    "id": "test_59",
    "context": "Fines levied against those responsible for certain environmentally damaging accidents are now so high that it costs a company responsible for such an accident more to pay the fine than it would have cost to adopt measures that would have prevented the accident. Ttherefore, since businesses value their profits, those that might have such accidents will now install adequate environmental safeguards.",
    "question": "Which one of the following, if true, most seriously weakens the argument?",
    "options": [
      "Businesses generally greatly underestimate the risk of future accidents.",
      "Businesses are learning to exploit the public's environmental awareness in promoting themselves.",
      "Businesses generally do the environmentally \"right\" thing only if doing so makes good business sense.",
      "Businesses are as concerned with long-term as they are with short-term strategies for maximizing profits."
    ],
    "raw_logic_programs": [
      "# Declarations\nbusinesses = EnumSort([Business])\naccidents = EnumSort([Accident])\nmeasures = EnumSort([PreventiveMeasure])\nfines = Function([accidents] -> [int])\ncosts = Function([measures] -> [int])\nprofits = Function([businesses] -> [int])\ninstall_safeguards = Function([businesses] -> [bool])\n\n# Constraints\nForAll([a:accidents, m:measures], fines(a) > costs(m)) ::: Fines are higher than the cost of preventive measures\nForAll([b:businesses], install_safeguards(b) == True) ::: Businesses will install safeguards\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the argument?\nis_weakening(Exists([b:businesses], UnderestimateRisk(b))) ::: (A) Businesses generally greatly underestimate the risk of future accidents.\nis_weakening(Exists([b:businesses], ExploitAwareness(b))) ::: (B) Businesses are learning to exploit the public's environmental awareness in promoting themselves.\nis_weakening(Exists([b:businesses], Not(GoodBusinessSense(b)))) ::: (C) Businesses generally do the environmentally \"right\" thing only if doing so makes good business sense.\nis_weakening(Exists([b:businesses], LongTermStrategy(b))) ::: (D) Businesses are as concerned with long-term as they are with short-term strategies for maximizing profits."
    ]
  },
  {
    "id": "test_60",
    "context": "The region' s water authority is responding to the current drought by restricting residential water use. Yet reservoir levels are now at the same height they were during the drought ten years ago when no restrictions were put into effect and none proved necessary. Ttherefore, imposing restrictions now is clearly premature.",
    "question": "Which one of the following, if true, most seriously calls the conclusion above into question?",
    "options": [
      "The population of the region is approximately three times greater than it was ten years ago.",
      "The water-consuming home appliances and fixtures sold today are designed to use water more efficiently than those sold ten years ago.",
      "There are now more water storage reservoirs in the region than there were ten years ago.",
      "The price of water for residential use is significantly higher in the region than it is in regions that are not drought-stricken."
    ],
    "raw_logic_programs": [
      "# Declarations\npopulation_increase = Bool('population_increase')\nefficient_appliances = Bool('efficient_appliances')\nmore_reservoirs = Bool('more_reservoirs')\nhigher_water_price = Bool('higher_water_price')\n\n# Constraints\n# No specific constraints are given in the problem description, as it is an argument evaluation problem.\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously calls the conclusion above into question?\nis_serious(population_increase) ::: (The population of the region is approximately three times greater than it was ten years ago.\nis_serious(efficient_appliances) ::: (The water-consuming home appliances and fixtures sold today are designed to use water more efficiently than those sold ten years ago.\nis_serious(more_reservoirs) ::: (There are now more water storage reservoirs in the region than there were ten years ago.\nis_serious(higher_water_price) ::: (The price of water for residential use is significantly higher in the region than it is in regions that are not drought-stricken."
    ]
  },
  {
    "id": "test_61",
    "context": "Efficiency and redundancy are contradictory characteristics of linguistic systems; however, they can be used together to achieve usefulness and reliability in communication. If a spoken language is completely efficient, then every possible permutation of its basic language sounds can be an understandable word. However, if the human auditory system is an imperfect receptor of sounds, then it is not true that every possible permutation of a spoken language' s basic language sounds can be an understandable word.",
    "question": "If all of the statements above are true, which one of the following must also be true?",
    "options": [
      "If a spoken language were completely redundant, then it could not be useful.",
      "If the human auditory system is an imperfect receptor of sounds, then a spoken language cannot be completely efficient.",
      "Efficiency causes a spoken language to be useful and redundancy causes it to be reliable.",
      "If the human auditory system were a perfect receptor of sounds, then every permutation of language sounds would be an understandable word."
    ],
    "raw_logic_programs": [
      "# Declarations\nlanguage_efficiency = Bool('language_efficiency')\nauditory_system_imperfect = Bool('auditory_system_imperfect')\npermutation_understandable = Bool('permutation_understandable')\n\n# Constraints\nImplies(language_efficiency, permutation_understandable) ::: If a spoken language is completely efficient, then every possible permutation of its basic language sounds can be an understandable word\nImplies(auditory_system_imperfect, Not(permutation_understandable)) ::: If the human auditory system is an imperfect receptor of sounds, then it is not true that every possible permutation of a spoken language's basic language sounds can be an understandable word\n\n# Options\nQuestion ::: If all of the statements above are true, which one of the following must also be true?\nis_valid(Implies(auditory_system_imperfect, Not(language_efficiency))) ::: (If the human auditory system is an imperfect receptor of sounds, then a spoken language cannot be completely efficient.\nis_valid(Implies(Not(auditory_system_imperfect), permutation_understandable)) ::: (If the human auditory system were a perfect receptor of sounds, then every permutation of language sounds would be an understandable word."
    ]
  },
  {
    "id": "test_62",
    "context": "Researcher: Salmonella bacteria are a major cause of illness in humans who consume poultry. Young chicks that underwent a new treatment exhibited a lower incidence of Salmonella infection than did untreated chicks, although one week after the treatment was administered the treated chicks had higher concentrations of a variety of bacteria than did untreated chicks.",
    "question": "Which one of the following, if true, most helps to explain the concentrations of bacteria one week after the treatment?",
    "options": [
      "Levels of Salmonella bacteria in young chicks are generally not high to begin with.",
      "The bacteria found in the treated chicks were nonvirulent types whose growth is inhibited by Salmonella bacteria.",
      "Most chicks develop resistance to many harmful bacteria by the time they reach adulthood.",
      "The untreated chicks experienced a higher incidence of illness from infection by bacteria other than Salmonella than did treated chicks."
    ],
    "raw_logic_programs": [
      "# Declarations\nbacteria_types = EnumSort([Salmonella, Nonvirulent, Other])\nchicks = EnumSort([treated, untreated])\nconcentration = Function([chicks, bacteria_types] -> [int])\n\n# Constraints\nconcentration(treated, Salmonella) < concentration(untreated, Salmonella) ::: Treated chicks exhibited a lower incidence of Salmonella infection than untreated chicks\nconcentration(treated, Nonvirulent) > concentration(untreated, Nonvirulent) ::: Treated chicks had higher concentrations of a variety of bacteria than untreated chicks one week after treatment\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the concentrations of bacteria one week after the treatment?\nis_explanation(concentration(treated, Nonvirulent) > concentration(untreated, Nonvirulent)) ::: (A) Levels of Salmonella bacteria in young chicks are generally not high to begin with.\nis_explanation(concentration(treated, Nonvirulent) > concentration(untreated, Nonvirulent)) ::: (B) The bacteria found in the treated chicks were nonvirulent types whose growth is inhibited by Salmonella bacteria.\nis_explanation(concentration(treated, Nonvirulent) > concentration(untreated, Nonvirulent)) ::: (C) Most chicks develop resistance to many harmful bacteria by the time they reach adulthood.\nis_explanation(concentration(treated, Nonvirulent) > concentration(untreated, Nonvirulent)) ::: (D) The untreated chicks experienced a higher incidence of illness from infection by bacteria other than Salmonella than did treated chicks."
    ]
  },
  {
    "id": "test_63",
    "context": "The majority of people in city Y spend an increasing amount of money on exercise equipment after they graduate from high school. For almost all of the people in city Y, the proportion of their income spent on exercise equipment remains consistent throughout their lives.",
    "question": "The statements in the paragraph above, if true, most strongly support which of the following conclusions about people in city Y?",
    "options": [
      "As people in city Y grow older, they spend more time exercising than they did when they were younger.",
      "People in city Y tend to buy different types of exercise equipment after they graduate from high school.",
      "People in city Y normally have greater incomes than they did prior to graduating from high school.",
      "People in city Y generally spend more on exercise equipment than they do on other luxury items."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nevents = EnumSort([graduate_high_school, grow_older])\nexpenses = EnumSort([exercise_equipment, other_luxury_items])\nincome = Function([people, events] -> [int])\nspending = Function([people, expenses, events] -> [int])\n\n# Constraints\nForAll([p:people], spending(p, exercise_equipment, grow_older) > spending(p, exercise_equipment, graduate_high_school)) ::: The majority of people in city Y spend an increasing amount of money on exercise equipment after they graduate from high school\nForAll([p:people], spending(p, exercise_equipment, grow_older) / income(p, grow_older) == spending(p, exercise_equipment, graduate_high_school) / income(p, graduate_high_school)) ::: For almost all of the people in city Y, the proportion of their income spent on exercise equipment remains consistent throughout their lives\n\n# Options\nQuestion ::: The statements in the paragraph above, if true, most strongly support which of the following conclusions about people in city Y?\nis_supported(ForAll([p:people], income(p, grow_older) > income(p, graduate_high_school))) ::: (C) People in city Y normally have greater incomes than they did prior to graduating from high school."
    ]
  },
  {
    "id": "test_64",
    "context": "Munroe was elected in a landslide. It is impossible for Munroe to have been elected without both a fundamental shift in the sentiments of the electorate and a well-run campaign. Thus, one cannot avoid the conclusion that there has been a fundamental shift in the sentiments of the electorate.",
    "question": "Which one of the following arguments is most closely parallel in its reasoning to the argument above?",
    "options": [
      "No one can argue that the Park Street Cafe closed this year because its customer base was not satisfied. Even if its customer base was not satisfied, the Park Street Cafe would have closed only if it was facing strong competition.",
      "The Park Street Cafe closed this year. There was no reason for it to remain open if it was facing strong competition and had an unsatisfied customer base. So one cannot rule out the possibility that it was both facing strong competition and had an unsatisfied customer base.",
      "The Park Street Cafe closed this year even though its customer base was satisfied. So, because its customer base was satisfied, the only conclusion one can draw is that the Park Street Cafe closed because it was facing strong competition.",
      "The Park Street Cafe closed this year. So we must conclude that the Park Street Cafe was facing strong competition, since it would not have closed unless it was true both that it was facing strong competition and that its customer base was unsatisfied."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([Munroe_elected, Fundamental_shift, Well_run_campaign])\ncauses = Function([events] -> [bool])\n\n# Constraints\ncauses(Munroe_elected) == And(causes(Fundamental_shift), causes(Well_run_campaign)) ::: It is impossible for Munroe to have been elected without both a fundamental shift in the sentiments of the electorate and a well-run campaign\n\n# Options\nQuestion ::: Which one of the following arguments is most closely parallel in its reasoning to the argument above?\nis_parallel(And(causes(Park_Street_Cafe_closed), Not(causes(Unsatisfied_customer_base)), Implies(causes(Unsatisfied_customer_base), causes(Strong_competition)))) ::: (A)\nis_parallel(And(causes(Park_Street_Cafe_closed), Implies(And(causes(Strong_competition), causes(Unsatisfied_customer_base)), causes(Park_Street_Cafe_closed)))) ::: (B)\nis_parallel(And(causes(Park_Street_Cafe_closed), Not(causes(Unsatisfied_customer_base)), Implies(Not(causes(Unsatisfied_customer_base)), causes(Strong_competition)))) ::: (C)\nis_parallel(And(causes(Park_Street_Cafe_closed), Implies(And(causes(Strong_competition), causes(Unsatisfied_customer_base)), causes(Park_Street_Cafe_closed)))) ::: (D)"
    ]
  },
  {
    "id": "test_65",
    "context": "A recent survey indicates that the average number of books read annually per capita has declined in each of the last three years. However, it also found that most bookstores reported increased profits during the same period.",
    "question": "Each of the following, if true, helps to resolve the survey's apparently paradoxical results EXCEPT:",
    "options": [
      "Citing a lack of free time, many survey respondents indicated that they had canceled magazine subscriptions in favor of purchasing individual issues at bookstores when time permits.",
      "Due to the installation of sophisticated new antitheft equipment, the recent increase in shoplifting that has hit most retail businesses has left bookstores largely unaffected.",
      "Over the past few years many bookstores have capitalized on the lucrative coffee industry by installing coffee bars.",
      "Recent cutbacks in government spending have forced public libraries to purchase fewer popular contemporary novels."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nhelps_resolve = Function([statements] -> [bool])\n\n# Constraints\nhelps_resolve(A) ::: Citing a lack of free time, many survey respondents indicated that they had canceled magazine subscriptions in favor of purchasing individual issues at bookstores when time permits.\nhelps_resolve(B) ::: Due to the installation of sophisticated new antitheft equipment, the recent increase in shoplifting that has hit most retail businesses has left bookstores largely unaffected.\nhelps_resolve(C) ::: Over the past few years many bookstores have capitalized on the lucrative coffee industry by installing coffee bars.\nhelps_resolve(D) ::: Recent cutbacks in government spending have forced public libraries to purchase fewer popular contemporary novels.\n\n# Options\nQuestion ::: Each of the following, if true, helps to resolve the survey's apparently paradoxical results EXCEPT:\nis_exception(helps_resolve(A)) ::: (A)\nis_exception(helps_resolve(B)) ::: (B)\nis_exception(helps_resolve(C)) ::: (C)\nis_exception(helps_resolve(D)) ::: (D)"
    ]
  },
  {
    "id": "test_66",
    "context": "Jones: Because he is a superb athlete, Bob is qualified for admission to the Hall of Fame. Smith: But because Bob has used illegal drugs, he is a poor role model for young people. Ttherefore, Bob should not be admitted to the Hall of Fame.",
    "question": "Smith's conclusion depends on which of the following assumptions?",
    "options": [
      "Bob's use of illegal drugs has a negative effect on his athletic performance.",
      "Bob is interested in being admitted to the Hall of Fame.",
      "All athletes who are good role models for young people are qualified for admission to the Hall of Fame.",
      "Being an adequate role model for young people should be one of the criteria for admission to the Hall of Fame."
    ],
    "raw_logic_programs": [
      "# Declarations\nathlete = EnumSort([Bob])\ncriteria = EnumSort([superb_athlete, poor_role_model, hall_of_fame_qualified])\nassumptions = EnumSort([negative_effect, interest_in_admission, role_model_qualification, role_model_criteria])\n\n# Constraints\nhas_criteria = Function([athlete, criteria] -> [bool])\nForAll([a:athlete], has_criteria(a, superb_athlete)) ::: Bob is a superb athlete\nForAll([a:athlete], has_criteria(a, poor_role_model)) ::: Bob is a poor role model for young people\n\n# Options\nQuestion ::: Smith's conclusion depends on which of the following assumptions?\nis_assumption(assumptions(negative_effect)) ::: Bob's use of illegal drugs has a negative effect on his athletic performance.\nis_assumption(assumptions(interest_in_admission)) ::: Bob is interested in being admitted to the Hall of Fame.\nis_assumption(assumptions(role_model_qualification)) ::: All athletes who are good role models for young people are qualified for admission to the Hall of Fame.\nis_assumption(assumptions(role_model_criteria)) ::: Being an adequate role model for young people should be one of the criteria for admission to the Hall of Fame."
    ]
  },
  {
    "id": "test_67",
    "context": "Shipping Coordinator: If we send your shipment by air express, it will arrive tomorrow morning. If we send your shipment via ground carrier, it will arrive either tomorrow or the next day. Ground carrier is less expensive than air express, so which do you prefer? Customer: If I don' t choose air express, then I will not receive my shipment tomorrow, so I clearly have no choice but to spend the extra money and have it sent via air express.",
    "question": "The customer's response can best be explained on the assumption that she has misinterpreted the shipping coordinator to mean which one of the following?",
    "options": [
      "The greater the shipping cost, the faster the shipment will arrive.",
      "If the shipment is sent by air express, it will arrive tomorrow.",
      "Ground carrier is as reliable a shipping method as air express.",
      "Unless the shipment is sent by air express, it will not arrive tomorrow."
    ],
    "raw_logic_programs": [
      "# Declarations\nshipping_methods = EnumSort([air_express, ground_carrier])\narrival_times = EnumSort([tomorrow_morning, tomorrow, next_day])\ncosts = EnumSort([less_expensive, more_expensive])\npreference = Function([shipping_methods] -> [bool])\narrival = Function([shipping_methods] -> [arrival_times])\ncost = Function([shipping_methods] -> [costs])\n\n# Constraints\narrival(air_express) == tomorrow_morning ::: If we send your shipment by air express, it will arrive tomorrow morning\nOr(arrival(ground_carrier) == tomorrow, arrival(ground_carrier) == next_day) ::: If we send your shipment via ground carrier, it will arrive either tomorrow or the next day\ncost(ground_carrier) == less_expensive ::: Ground carrier is less expensive than air express\ncost(air_express) == more_expensive ::: Air express is more expensive than ground carrier\n\n# Options\nQuestion ::: The customer's response can best be explained on the assumption that she has misinterpreted the shipping coordinator to mean which one of the following?\nmisinterpretation(Implies(cost(air_express) > cost(ground_carrier), arrival(air_express) < arrival(ground_carrier))) ::: (The greater the shipping cost, the faster the shipment will arrive.\nmisinterpretation(arrival(air_express) == tomorrow) ::: (If the shipment is sent by air express, it will arrive tomorrow.\nmisinterpretation(ForAll([m:shipping_methods], arrival(m) == tomorrow)) ::: (Ground carrier is as reliable a shipping method as air express.\nmisinterpretation(Not(arrival(ground_carrier) == tomorrow)) ::: (Unless the shipment is sent by air express, it will not arrive tomorrow."
    ]
  },
  {
    "id": "test_68",
    "context": "Recently a court ruled that current law allows companies to reject a job applicant if working in the job would entail a 90 percent chance that the applicant would suffer a heart attack. The presiding judge justified the ruling, saying that it protected both employees and employers.",
    "question": "The use of this court ruling as part of the law could not be effective in regulating employment practices if which of the following were true?",
    "options": [
      "The number of people applying for jobs at a company might decline if the company, by screening applicants for risk of heart attack, seemed to suggest that the job entailed high risk of heart attack.",
      "No legally accepted methods exist for calculating the risk of a job applicant's having a heart attack as a result of being employed in any particular occupation.",
      "Some jobs might involve health risks other than the risk of heart attack.",
      "Employees who have a 90 percent chance of suffering a heart attack may be unaware that their risk is so great."
    ],
    "raw_logic_programs": [
      "# Declarations\napplicants = EnumSort([applicant1, applicant2, applicant3, applicant4])\njobs = EnumSort([job1, job2, job3])\nrisk = Function([applicants, jobs] -> [int])\nthreshold = 90\n\n# Constraints\nForAll([a:applicants, j:jobs], And(0 <= risk(a, j), risk(a, j) <= 100)) ::: The risk of a heart attack for each applicant in each job is between 0 and 100 percent\nForAll([a:applicants, j:jobs], Implies(risk(a, j) >= threshold, Not(eligible(a, j)))) ::: Companies can reject applicants if the risk is 90 percent or higher\n\n# Options\nQuestion ::: The use of this court ruling as part of the law could not be effective in regulating employment practices if which of the following were true?\nis_ineffective(ForAll([a:applicants, j:jobs], Not(Exists([m:methods], legal_method(m, a, j))))) ::: (No legally accepted methods exist for calculating the risk of a job applicant's having a heart attack as a result of being employed in any particular occupation.)"
    ]
  },
  {
    "id": "test_69",
    "context": "TrueSave is a mail-order company that ships electronic products from its warehouses to customers worldwide. The company' s shipping manager is proposing that customer orders be packed with newer, more expensive packing materials that virtually eliminate damage during shipping. The manager argues that overall costs would essentially remain unaffected, since the extra cost of the new packing materials roughly equals the current cost of replacing products returned by customers because they arrived in damaged condition.",
    "question": "Which of the following would it be most important to ascertain in determining whether implementing the shipping manager's proposal would have the argued-for effect on costs?",
    "options": [
      "Whether there are cases in which customers blame themselves for product damage that, though present on arrival of the product, is not discovered until later",
      "Whether a sizable proportion of returned items are returned because of damage already present when those items were packed for shipping",
      "Whether electronic products are damaged more frequently in transit than are most other products shipped by mail-order companies",
      "Whether the products shipped by TrueSave are more vulnerable to incurring damage during shipping than are typical electronic products"
    ],
    "raw_logic_programs": [
      "# Declarations\ncosts = EnumSort([current_cost, new_cost])\nfactors = EnumSort([customer_blame, pre_packing_damage, transit_damage, product_vulnerability])\neffect_on_costs = Function([factors] -> [bool])\n\n# Constraints\neffect_on_costs(customer_blame) ::: Whether there are cases in which customers blame themselves for product damage that, though present on arrival of the product, is not discovered until later\neffect_on_costs(pre_packing_damage) ::: Whether a sizable proportion of returned items are returned because of damage already present when those items were packed for shipping\neffect_on_costs(transit_damage) ::: Whether electronic products are damaged more frequently in transit than are most other products shipped by mail-order companies\neffect_on_costs(product_vulnerability) ::: Whether the products shipped by TrueSave are more vulnerable to incurring damage during shipping than are typical electronic products\n\n# Options\nQuestion ::: Which of the following would it be most important to ascertain in determining whether implementing the shipping manager's proposal would have the argued-for effect on costs?\nis_important(effect_on_costs(customer_blame)) ::: (A)\nis_important(effect_on_costs(pre_packing_damage)) ::: (B)\nis_important(effect_on_costs(transit_damage)) ::: (C)\nis_important(effect_on_costs(product_vulnerability)) ::: (D)"
    ]
  },
  {
    "id": "test_70",
    "context": "Rainwater contains hydrogen of a heavy form called deuterium. The deuterium content of wood reflects the deuterium content of rainwater available to trees during their growth. Wood from trees that grew between 16, 000 and 24, 000 years ago in North America contains significantly more deuterium than wood trees growing today. But water trapped in several North American caves that formed during that same early period contains significantly less deuterium than rainwater in North America today.",
    "question": "Which of the following, if true, most helps to reconcile the two findings?",
    "options": [
      "There is little deuterium in the North American caves other than the deuterium in the water trapped there.",
      "Wood with high deuterium content is no more likely to remain preserved for long periods than is wood with a low deuterium content.",
      "Exposure to water after a tree has died does not change the deuterium content of the wood.",
      "Trees draw on shallow groundwater from rain that falls during their growth, whereas water trapped in caves may have fallen as rainwater thousands of years before the caves formed."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([wood, cave_water])\ntime_periods = EnumSort([16000_to_24000_years_ago, today])\ndeuterium_content = Function([entities, time_periods] -> [int])\n\n# Constraints\ndeuterium_content(wood, 16000_to_24000_years_ago) > deuterium_content(wood, today) ::: Wood from trees that grew between 16,000 and 24,000 years ago contains significantly more deuterium than wood from trees growing today\ndeuterium_content(cave_water, 16000_to_24000_years_ago) < deuterium_content(cave_water, today) ::: Water trapped in caves from the same period contains significantly less deuterium than rainwater today\n\n# Options\nQuestion ::: Which of the following, if true, most helps to reconcile the two findings?\nis_reconciling(Trees_draw_on_shallow_groundwater) ::: (Trees draw on shallow groundwater from rain that falls during their growth, whereas water trapped in caves may have fallen as rainwater thousands of years before the caves formed)"
    ]
  },
  {
    "id": "test_71",
    "context": "Decreased reliance on fossil fuels is required if global warming is to be halted. The current reliance would decrease if economic incentives to develop alternative energy sources were present. So ending global warming requires offering economic incentives to develop alternative energy sources.",
    "question": "The flawed pattern of reasoning exhibited by the argument above most closely parallels that exhibited by which one of the following?",
    "options": [
      "Preventing abuse of prescription drugs requires expanding drug education efforts. Increased cooperation between schools and law enforcement agencies is needed if drug education efforts are to be expanded. So, if cooperation between law enforcement and schools increases, the abuse of prescription drugs will be prevented.",
      "Keeping good teachers is necessary for improving education. If teachers' salaries were improved, good teachers would remain in the profession. So an increase in teachers' salaries is necessary to improve education.",
      "Going to college is required for getting a professional job. Graduating from high school is necessary for going to college. So graduating from high school is necessary for getting a professional job.",
      "Daily exercise guarantees good health. Good health ensures a happy life. So daily exercise is required for good health."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D, E])\npremises = Function([statements] -> [bool])\n\n# Constraints\npremises(A) == (Decreased reliance on fossil fuels is required if global warming is to be halted) ::: Decreased reliance on fossil fuels is required if global warming is to be halted\npremises(B) == (The current reliance would decrease if economic incentives to develop alternative energy sources were present) ::: The current reliance would decrease if economic incentives to develop alternative energy sources were present\npremises(C) == (So ending global warming requires offering economic incentives to develop alternative energy sources) ::: So ending global warming requires offering economic incentives to develop alternative energy sources\n\n# Options\nQuestion ::: The flawed pattern of reasoning exhibited by the argument above most closely parallels that exhibited by which one of the following?\nis_parallel(Preventing abuse of prescription drugs requires expanding drug education efforts, Increased cooperation between schools and law enforcement agencies is needed if drug education efforts are to be expanded, So, if cooperation between law enforcement and schools increases, the abuse of prescription drugs will be prevented) ::: (A)\nis_parallel(Keeping good teachers is necessary for improving education, If teachers' salaries were improved, good teachers would remain in the profession, So an increase in teachers' salaries is necessary to improve education) ::: (B)\nis_parallel(Going to college is required for getting a professional job, Graduating from high school is necessary for going to college, So graduating from high school is necessary for getting a professional job) ::: (C)\nis_parallel(Daily exercise guarantees good health, Good health ensures a happy life, So daily exercise is required for good health) ::: (D)"
    ]
  },
  {
    "id": "test_72",
    "context": "Sometimes individuals must choose between two courses of action: one that most benefits the community and another that most benefits the person making the decision. Faced with such a choice, individuals tend to choose the course of action most beneficial to themselves. It is ttherefore a principle of good government to adjust the incentives and disincentives for private individuals so that such choices rarely arise, ensuring as far as possible that what is the best choice for individuals is the best choice for the community.",
    "question": "Which one of the following best illustrates an application of the cited principle of good government?",
    "options": [
      "In order to avoid electricity shortages that will occur unless electricity use in the city significantly decreases, the city government approves an increase in the electricity rate charged to city residents.",
      "In order to escape charges of favoritism, the city government awards the contract for a new courthouse to a different developer from the one who completed the new city hall, even though the contract bids from both developers were the same.",
      "In order to placate laid-off government workers who have demanded help in acquiring skills necessary for private industry jobs, the government diverts funds from existing social programs to a new job-training program.",
      "In order to satisfy a powerful law-and-order group, the legislature rejects a new bill protecting suspects' rights, despite the bill's popularity among voters in general."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([community, private_individuals])\nactions = EnumSort([benefit_community, benefit_individual])\nchoices = Function([individuals] -> [actions])\n\n# Constraints\nForAll([i:individuals], choices(i) == benefit_individual) ::: Individuals tend to choose the course of action most beneficial to themselves\nchoices(community) == benefit_community ::: The community benefits from actions that are best for the community\n\n# Options\nQuestion ::: Which one of the following best illustrates an application of the cited principle of good government?\nis_best_choice(choices(community) == benefit_community, choices(private_individuals) == benefit_community) ::: (A) In order to avoid electricity shortages that will occur unless electricity use in the city significantly decreases, the city government approves an increase in the electricity rate charged to city residents.\nis_best_choice(choices(community) == benefit_community, choices(private_individuals) == benefit_individual) ::: (B) In order to escape charges of favoritism, the city government awards the contract for a new courthouse to a different developer from the one who completed the new city hall, even though the contract bids from both developers were the same.\nis_best_choice(choices(community) == benefit_individual, choices(private_individuals) == benefit_community) ::: (C) In order to placate laid-off government workers who have demanded help in acquiring skills necessary for private industry jobs, the government diverts funds from existing social programs to a new job-training program.\nis_best_choice(choices(community) == benefit_individual, choices(private_individuals) == benefit_individual) ::: (D) In order to satisfy a powerful law-and-order group, the legislature rejects a new bill protecting suspects' rights, despite the bill's popularity among voters in general."
    ]
  },
  {
    "id": "test_73",
    "context": "Trainer: Research shows that when dogs are neutered in early puppyhood, their leg bones usually do not develop properly. Improper bone development leads in turn to problems with arthritis as dogs grow older. Thus, if you want to protect your dog from arthritis you should not neuter your dog until it is full-grown.",
    "question": "Of the following, which one is a criticism to which the reasoning in the trainer's argument is most vulnerable?",
    "options": [
      "It fails to address the effects of neutering in middle or late puppyhood.",
      "It fails to explain the connection between improper bone development and arthritis.",
      "It fails to consider the possibility that dogs with properly developed bones can develop arthritis.",
      "It fails to consider the possibility that the benefits of neutering a dog early might outweigh the risk of arthritis."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([trainer_argument])\ncriticisms = EnumSort([effect_of_neutering, connection_explanation, possibility_of_arthritis, benefits_vs_risks])\nvulnerable_to = Function([arguments] -> [criticisms])\n\n# Constraints\nvulnerable_to(trainer_argument) == effect_of_neutering ::: It fails to address the effects of neutering in middle or late puppyhood\nvulnerable_to(trainer_argument) == connection_explanation ::: It fails to explain the connection between improper bone development and arthritis\nvulnerable_to(trainer_argument) == possibility_of_arthritis ::: It fails to consider the possibility that dogs with properly developed bones can develop arthritis\nvulnerable_to(trainer_argument) == benefits_vs_risks ::: It fails to consider the possibility that the benefits of neutering a dog early might outweigh the risk of arthritis\n\n# Options\nQuestion ::: Of the following, which one is a criticism to which the reasoning in the trainer's argument is most vulnerable?\nis_vulnerable(vulnerable_to(trainer_argument) == effect_of_neutering) ::: (A)\nis_vulnerable(vulnerable_to(trainer_argument) == connection_explanation) ::: (B)\nis_vulnerable(vulnerable_to(trainer_argument) == possibility_of_arthritis) ::: (C)\nis_vulnerable(vulnerable_to(trainer_argument) == benefits_vs_risks) ::: (D)"
    ]
  },
  {
    "id": "test_74",
    "context": "Proponents of organic farming claim that using chemical fertilizers and pesticides in farming is harmful to local wildlife. To produce the same amount of food, however, more land must be under cultivation when organic farming techniques are used than when chemicals are used. Ttherefore, organic farming leaves less land available as habitat for local wildlife.",
    "question": "Which one of the following is an assumption on which the author's argument depends?",
    "options": [
      "Wildlife living near farms where chemicals are used will not ingest any food or water containing those chemicals.",
      "Chemical fertilizers and pesticides pose no health threat to wildlife.",
      "Land cultivated by organic farming methods no longer constitutes a habitat for wildlife.",
      "The same crops are grown on organic farms as on farms where chemicals are used."
    ],
    "raw_logic_programs": [
      "# Declarations\nwildlife_harm = Function([bool])  # Represents whether chemical farming harms wildlife\nland_cultivation = Function([bool])  # Represents whether more land is needed for organic farming\nhabitat_availability = Function([bool])  # Represents whether organic farming reduces habitat availability\nsame_crops = Function([bool])  # Represents whether the same crops are grown on both types of farms\n\n# Constraints\nwildlife_harm(True) ::: Using chemical fertilizers and pesticides in farming is harmful to local wildlife\nland_cultivation(True) ::: More land must be under cultivation when organic farming techniques are used\nhabitat_availability(True) ::: Organic farming leaves less land available as habitat for local wildlife\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the author's argument depends?\nis_assumption(Implies(land_cultivation(True), Not(habitat_availability(False)))) ::: (A) Wildlife living near farms where chemicals are used will not ingest any food or water containing those chemicals.\nis_assumption(Implies(wildlife_harm(False), Not(habitat_availability(False)))) ::: (B) Chemical fertilizers and pesticides pose no health threat to wildlife.\nis_assumption(Implies(land_cultivation(True), Not(habitat_availability(False)))) ::: (C) Land cultivated by organic farming methods no longer constitutes a habitat for wildlife.\nis_assumption(Implies(same_crops(True), Not(habitat_availability(False)))) ::: (D) The same crops are grown on organic farms as on farms where chemicals are used."
    ]
  },
  {
    "id": "test_75",
    "context": "A certain viral infection is widespread among children, and about 30 percent of children infected with the virus develop middle ear infections. Antibiotics, although effective in treating bacterial infections, have no effect on the virus. Yet when middle ear infections in children infected with the virus are treated with antibiotics, the ear infections often clear up.",
    "question": "Which one of the following most helps to explain the success of the treatments with antibiotics?",
    "options": [
      "Most viral infections are more difficult to treat than are most bacterial infections.",
      "Among children not infected with the virus, fewer than 30 percent develop middle ear infections.",
      "Children infected with the virus are particularly susceptible to bacteria that infect the middle ear.",
      "Many children who develop middle ear infections are not infected with the virus."
    ],
    "raw_logic_programs": [
      "# Declarations\nchildren = EnumSort([infected_with_virus, not_infected_with_virus])\ninfections = EnumSort([middle_ear_infection, no_middle_ear_infection])\ntreatments = EnumSort([antibiotics, no_treatment])\ncauses = EnumSort([viral, bacterial])\nsusceptibility = Function([children] -> [bool])\ninfection_cause = Function([children, infections] -> [causes])\ntreatment_effectiveness = Function([treatments, causes] -> [bool])\n\n# Constraints\nForAll([c:children], Count([i:infections], infection_cause(c, i) == viral) == 1) ::: Each child has exactly one cause for their infection\ntreatment_effectiveness(antibiotics, viral) == False ::: Antibiotics have no effect on viral infections\ntreatment_effectiveness(antibiotics, bacterial) == True ::: Antibiotics are effective on bacterial infections\nsusceptibility(infected_with_virus) == True ::: Children infected with the virus are particularly susceptible to bacteria that infect the middle ear\n\n# Options\nQuestion ::: Which one of the following most helps to explain the success of the treatments with antibiotics?\nis_explanation(susceptibility(infected_with_virus) == True) ::: (Children infected with the virus are particularly susceptible to bacteria that infect the middle ear.)"
    ]
  },
  {
    "id": "test_76",
    "context": "French divers recently found a large cave along the coast of the Mediterranean Sea. The cave is accessible only through an underwater tunnel. The interior of the cave is completely filled with seawater and contains numerous large stalagmites, which are stony pillars that form when drops of water fall repeatedly on a single spot on a cave floor, leaving behind mineral deposits that accumulate over time.",
    "question": "The information above most strongly supports which one of the following?",
    "options": [
      "The water level within the cave is higher now than it once was.",
      "The French divers were the first people who knew that the tunnel leading to the cave existed.",
      "Seawater in the Mediterranean has a lower mineral content now than it had when the stalagmites were being formed.",
      "There was once an entrance to the cave besides the underwater tunnel."
    ],
    "raw_logic_programs": [
      "# Declarations\ncave = EnumSort([interior, tunnel])\nfeatures = EnumSort([seawater, stalagmites])\ntime = EnumSort([past, present])\nknowledge = EnumSort([known, unknown])\nentrance = EnumSort([underwater_tunnel, other_entrance])\nmineral_content = Function([time] -> [float])\nwater_level = Function([time] -> [float])\ndiscovery = Function([cave] -> [knowledge])\n\n# Constraints\ndiscovery(tunnel) == unknown ::: The cave is accessible only through an underwater tunnel\nForAll([f:features], Exists([t:time], f == stalagmites)) ::: The interior of the cave contains numerous large stalagmites\nForAll([t:time], water_level(t) > 0) ::: The interior of the cave is completely filled with seawater\nForAll([t:time], mineral_content(t) > 0) ::: Stalagmites form when drops of water leave behind mineral deposits\n\n# Options\nQuestion ::: The information above most strongly supports which one of the following?\nis_supported(water_level(present) > water_level(past)) ::: (A) The water level within the cave is higher now than it once was.\nis_supported(discovery(tunnel) == known) ::: (B) The French divers were the first people who knew that the tunnel leading to the cave existed.\nis_supported(mineral_content(present) < mineral_content(past)) ::: (C) Seawater in the Mediterranean has a lower mineral content now than it had when the stalagmites were being formed.\nis_supported(Exists([e:entrance], e == other_entrance)) ::: (D) There was once an entrance to the cave besides the underwater tunnel."
    ]
  },
  {
    "id": "test_77",
    "context": "Principle: The executive in a given company whose compensation package is determined by advice of an external consultant is likely to be overcompensated if the consultant also has business interests with the company the executive manages.",
    "question": "Which one of the following judgments conforms most closely to the principle stated above?",
    "options": [
      "The president of the Troskco Corporation is probably not overpaid, since his total compensation package was determined by the Troskco board of directors without retaining the services of an external compensation consultant.",
      "The president of Troskco Corporation is probably overpaid, since the Troskco board of directors determined his compensation by following the advice of an external consultant who has many other contracts with Troskco.",
      "The president of the Troskco Corporation is probably overpaid, since his total annual compensation package was determined five years ago, when the company's profits were at an all-time high.",
      "The president of Troskco Corporation is definitely not overpaid, since the external consultant the board of directors retained to advise on executive salaries has no other contracts with Troskco."
    ],
    "raw_logic_programs": [
      "# Declarations\nexecutives = EnumSort([president_Troskco])\nconsultants = EnumSort([external_consultant])\ncompanies = EnumSort([Troskco])\ncompensation = Function([executives] -> [bool])\nadvice = Function([consultants, executives] -> [bool])\nbusiness_interests = Function([consultants, companies] -> [bool])\n\n# Constraints\nForAll([e:executives, c:consultants, comp:companies], \n       Implies(And(advice(c, e), business_interests(c, comp)), compensation(e))) ::: The executive is likely to be overcompensated if the consultant advising on their compensation has business interests with the company.\n\n# Options\nQuestion ::: Which one of the following judgments conforms most closely to the principle stated above?\nis_valid(Not(compensation(president_Troskco)) && Not(advice(external_consultant, president_Troskco))) ::: (The president of the Troskco Corporation is probably not overpaid, since his total compensation package was determined by the Troskco board of directors without retaining the services of an external compensation consultant.\nis_valid(compensation(president_Troskco) && advice(external_consultant, president_Troskco) && business_interests(external_consultant, Troskco)) ::: (The president of Troskco Corporation is probably overpaid, since the Troskco board of directors determined his compensation by following the advice of an external consultant who has many other contracts with Troskco.\nis_valid(compensation(president_Troskco) && Not(advice(external_consultant, president_Troskco))) ::: (The president of the Troskco Corporation is probably overpaid, since his total annual compensation package was determined five years ago, when the company's profits were at an all-time high.\nis_valid(Not(compensation(president_Troskco)) && advice(external_consultant, president_Troskco) && Not(business_interests(external_consultant, Troskco))) ::: (The president of Troskco Corporation is definitely not overpaid, since the external consultant the board of directors retained to advise on executive salaries has no other contracts with Troskco."
    ]
  },
  {
    "id": "test_78",
    "context": "For the period from the eighth century through the eleventh century, the shifting boundaries between Kingdom F and Kingdom G have not been well charted. Although a certain village in a border region between the two kingdoms usually belonged to Kingdom G, ninth-century artifacts found in the village were in the typical Kingdom F style of that time. It is unclear whether the village was actually a part of Kingdom F in the ninth century or whether it was a part of Kingdom G but had merely adopted Kingdom F' s artistic styles under Kingdom F' s cultural influence.",
    "question": "Which of the following would, if found in ninth-century sites in the village, best help in determining whether the village was a part of Kingdom F or Kingdom G in the ninth century?",
    "options": [
      "Some fragments of pottery made in the Kingdom G style from the seventh century out of materials only found in Kingdom F",
      "Numerous teeth from the ninth century with a chemical signature typical only of teeth from people who had grown up in the heart of Kingdom F",
      "A trading contract written in the Kingdom G dialect",
      "A drawing of a dwelling complex known to have existed on the border of Kingdom F and Kingdom G in the ninth century"
    ],
    "raw_logic_programs": [
      "# Declarations\nkingdoms = EnumSort([Kingdom_F, Kingdom_G])\nartifacts = EnumSort([pottery_fragments, teeth, trading_contract, drawing])\nfound_in_village = Function([artifacts] -> [bool])\norigin = Function([artifacts] -> [kingdoms])\n\n# Constraints\norigin(pottery_fragments) == Kingdom_G ::: Some fragments of pottery made in the Kingdom G style\norigin(teeth) == Kingdom_F ::: Numerous teeth with a chemical signature typical only of Kingdom F\norigin(trading_contract) == Kingdom_G ::: A trading contract written in the Kingdom G dialect\norigin(drawing) == None ::: A drawing of a dwelling complex on the border\n\n# Options\nQuestion ::: Which of the following would, if found in ninth-century sites in the village, best help in determining whether the village was a part of Kingdom F or Kingdom G in the ninth century?\nis_best_help(found_in_village(teeth) == True) ::: (B)"
    ]
  },
  {
    "id": "test_79",
    "context": "People have long been fascinated by the paranormal. Over the years, numerous researchers have investigated telepathy only to find that conclusive evidence for its existence has persistently evaded them. Despite this, there are still those who believe that there must be \"something in it\" since some research seems to support the view that telepathy exists. However, it can often be shown that other explanations that do comply with known laws can be given. Ttherefore, it is premature to conclude that telepathy is an alternative means of communication.",
    "question": "In the passage, the author",
    "options": [
      "supports the conclusion by pointing to the inadequacy of evidence for the opposite view",
      "draws a conclusion that is not supported by the premises",
      "rephrases the conclusion without offering any support for it",
      "supports the conclusion by describing particular experiments"
    ],
    "raw_logic_programs": [
      "# Declarations\nbeliefs = EnumSort([exists_telepathy, no_conclusive_evidence, alternative_explanations])\nsupport = Function([beliefs] -> [bool])\n\n# Constraints\nsupport(no_conclusive_evidence) ::: numerous researchers have investigated telepathy only to find that conclusive evidence for its existence has persistently evaded them\nsupport(alternative_explanations) ::: other explanations that do comply with known laws can be given\n\n# Options\nQuestion ::: In the passage, the author\nis_supported(support(no_conclusive_evidence) & Not(support(exists_telepathy))) ::: (A) supports the conclusion by pointing to the inadequacy of evidence for the opposite view\nis_supported(Not(support(no_conclusive_evidence) & support(alternative_explanations))) ::: (B) draws a conclusion that is not supported by the premises\nis_supported(Not(support(no_conclusive_evidence) | support(alternative_explanations))) ::: (C) rephrases the conclusion without offering any support for it\nis_supported(support(alternative_explanations)) ::: (D) supports the conclusion by describing particular experiments"
    ]
  },
  {
    "id": "test_80",
    "context": "A strong correlation exists between what people value and the way they act. For example, those who value wealth tend to choose higher-paying jobs in undesirable locations over lower-paying jobs in desirable locations. Thus, knowing what people value can help one predict their actions.",
    "question": "Which one of the following most accurately expresses the conclusion of the argument?",
    "options": [
      "Knowing how people behave allows one to infer what they value.",
      "People who value wealth tend to allow their desire for it to outweigh other concerns.",
      "No two people who value different things act the same way in identical circumstances.",
      "What people value can be a reliable indicator of how they will act."
    ],
    "raw_logic_programs": [
      "# Declarations\nvalues = EnumSort([wealth, other_values])\nactions = EnumSort([high_paying_job, low_paying_job])\npeople = EnumSort([person1, person2, person3])\nvalues_actions = Function([people] -> [values, actions])\n\n# Constraints\nForAll([p:people], Implies(values_actions(p) == (wealth, high_paying_job), values_actions(p) != (wealth, low_paying_job))) ::: those who value wealth tend to choose higher-paying jobs in undesirable locations over lower-paying jobs in desirable locations\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the conclusion of the argument?\nis_conclusion(ForAll([p:people], Implies(values_actions(p) == (wealth, high_paying_job), values_actions(p) != (wealth, low_paying_job)))) ::: (Knowing how people behave allows one to infer what they value.\nis_conclusion(ForAll([p:people], Implies(values_actions(p) == (wealth, high_paying_job), values_actions(p) != (wealth, low_paying_job)))) ::: (People who value wealth tend to allow their desire for it to outweigh other concerns.\nis_conclusion(ForAll([p1:people, p2:people], Implies(values_actions(p1) != values_actions(p2), actions(p1) != actions(p2)))) ::: (No two people who value different things act the same way in identical circumstances.\nis_conclusion(ForAll([p:people], Implies(values_actions(p) == (wealth, high_paying_job), values_actions(p) != (wealth, low_paying_job)))) ::: (What people value can be a reliable indicator of how they will act."
    ]
  },
  {
    "id": "test_81",
    "context": "Most people who are skilled banjo players are also skilled guitar players. But most people who are skilled guitar players are not skilled banjo players.",
    "question": "If the statements above are true, which one of the following must also be true?",
    "options": [
      "There are more people who are skilled at playing the guitar than there are people who are skilled at playing the banjo.",
      "There are more people who are skilled at playing the banjo than there are people who are skilled at playing the guitar.",
      "A person trying to learn how to play the guitar is more likely to succeed in doing so than is a person trying to learn how to play the banjo.",
      "There are more people who are skilled at playing both the guitar and the banjo than there are people who are skilled at playing only one of the two instruments."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nskills = EnumSort([banjo, guitar])\nskilled = Function([people, skills] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(skilled(p, banjo), skilled(p, guitar))) ::: Most people who are skilled banjo players are also skilled guitar players\nForAll([p:people], Implies(skilled(p, guitar), Not(skilled(p, banjo)))) ::: Most people who are skilled guitar players are not skilled banjo players\n\n# Options\nQuestion ::: If the statements above are true, which one of the following must also be true?\nis_true(Count([p:people], skilled(p, guitar)) > Count([p:people], skilled(p, banjo))) ::: (There are more people who are skilled at playing the guitar than there are people who are skilled at playing the banjo.\nis_true(Count([p:people], skilled(p, banjo)) > Count([p:people], skilled(p, guitar))) ::: (There are more people who are skilled at playing the banjo than there are people who are skilled at playing the guitar.\nis_true(Probability(skilled(person, guitar)) > Probability(skilled(person, banjo))) ::: (A person trying to learn how to play the guitar is more likely to succeed in doing so than is a person trying to learn how to play the banjo.\nis_true(Count([p:people], And(skilled(p, banjo), skilled(p, guitar))) > Count([p:people], Or(skilled(p, banjo), skilled(p, guitar)) - Count([p:people], And(skilled(p, banjo), skilled(p, guitar))))) ::: (There are more people who are skilled at playing both the guitar and the banjo than there are people who are skilled at playing only one of the two instruments."
    ]
  },
  {
    "id": "test_82",
    "context": "Bird watcher: The decrease in the mourning-dove population in this area is probably a result of the loss of nesting habitat. Many mourning doves had formerly nested in the nearby orchards, but after overhead sprinklers were installed in the orchards last year, the doves ceased building nests there.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Blue jays that had nested in the orchards also ceased doing so after the sprinklers were installed.",
      "The trees in the nearby orchards were the only type of trees in the area attractive to nesting mourning doves.",
      "Mourning doves were recently designated a migratory game species, meaning that they can be legally hunted.",
      "Many residents of the area fill their bird feeders with canola or wheat, which are appropriate seeds for attracting mourning doves."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([mourning_doves, blue_jays])\nevents = EnumSort([nesting, ceased_nesting])\nlocations = EnumSort([orchards, other_areas])\ncauses = EnumSort([loss_of_habitat, hunting, food_availability])\nfactors = Function([species, events, locations] -> [bool])\ncausal_relation = Function([causes, events] -> [bool])\n\n# Constraints\nfactors(mourning_doves, ceased_nesting, orchards) ::: Mourning doves ceased nesting in the orchards\ncausal_relation(loss_of_habitat, factors(mourning_doves, ceased_nesting, orchards)) ::: The decrease in the mourning-dove population is probably a result of the loss of nesting habitat\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nis_strongest(And(factors(blue_jays, ceased_nesting, orchards), causal_relation(loss_of_habitat, factors(blue_jays, ceased_nesting, orchards)))) ::: (A) Blue jays that had nested in the orchards also ceased doing so after the sprinklers were installed.\nis_strongest(And(factors(mourning_doves, nesting, orchards), Not(factors(mourning_doves, nesting, other_areas)))) ::: (B) The trees in the nearby orchards were the only type of trees in the area attractive to nesting mourning doves.\nis_strongest(causal_relation(hunting, factors(mourning_doves, ceased_nesting, orchards))) ::: (C) Mourning doves were recently designated a migratory game species, meaning that they can be legally hunted.\nis_strongest(causal_relation(food_availability, factors(mourning_doves, nesting, other_areas))) ::: (D) Many residents of the area fill their bird feeders with canola or wheat, which are appropriate seeds for attracting mourning doves."
    ]
  },
  {
    "id": "test_83",
    "context": "Babies who can hear and have hearing parents who expose them to speech begin to babble at a certain age as a precursor to speaking. In the same way, deaf babies with deaf parents who communicate with them and with each other by signing begin to babble in signs at the same age. That is, they make repetitive hand gestures that constitute, within the language system of signs, the analogue of repeated syllables in speech.",
    "question": "The information above, if accurate, can best be used as evidence against which one of the following hypotheses?",
    "options": [
      "Names of persons or things are the simplest words in a language, since babies use them before using the names of actions or processes.",
      "The making of hand gestures by hearing babies who have hearing parents should be interpreted as a part of their developing language.",
      "The development of language competency in babies depends primarily on the physical maturation of the vocal tract, a process that requires speech-oriented vocal activity.",
      "In babbling, babies are unaware that the sound or gesture combinations they use can be employed in a purposive way."
    ],
    "raw_logic_programs": [
      "# Declarations\nbabies = EnumSort([hearing_babies, deaf_babies])\nparents = EnumSort([hearing_parents, deaf_parents])\ncommunication = EnumSort([speech, signing])\nbabble = Function([babies, parents, communication] -> [bool])\n\n# Constraints\nbabble(hearing_babies, hearing_parents, speech) ::: Babies who can hear and have hearing parents who expose them to speech begin to babble at a certain age\nbabble(deaf_babies, deaf_parents, signing) ::: Deaf babies with deaf parents who communicate with them and with each other by signing begin to babble in signs at the same age\n\n# Options\nQuestion ::: The information above, if accurate, can best be used as evidence against which one of the following hypotheses?\nis_evidence_against(Exists([b:babies, p:parents], babble(b, p, speech) == True)) ::: (A) Names of persons or things are the simplest words in a language, since babies use them before using the names of actions or processes.\nis_evidence_against(Exists([b:babies, p:parents], babble(b, p, speech) == True)) ::: (B) The making of hand gestures by hearing babies who have hearing parents should be interpreted as a part of their developing language.\nis_evidence_against(ForAll([b:babies, p:parents], Implies(babble(b, p, speech), communication == speech))) ::: (C) The development of language competency in babies depends primarily on the physical maturation of the vocal tract, a process that requires speech-oriented vocal activity.\nis_evidence_against(Exists([b:babies, p:parents], babble(b, p, signing) == True)) ::: (D) In babbling, babies are unaware that the sound or gesture combinations they use can be employed in a purposive way."
    ]
  },
  {
    "id": "test_84",
    "context": "Since anyone who makes an agreement has an obligation to fulfill the terms of that agreement, it follows that anyone who is obligated to perform an action has agreed to perform that action. Hence, saying that one has a legal obligation to perform a given action is the same as saying that one is required to fulfill one' s agreement to perform that action.",
    "question": "Which one of the following statements most accurately characterizes the argument's reasoning flaws?",
    "options": [
      "The argument rests on an ambiguous use of the term \"action, \" and it fails to consider the possibility that people are sometimes unwilling to perform actions that they have agreed to perform.",
      "The argument contains a premise that is logically equivalent to its conclusion, and it takes for granted that there are only certain actions that one should agree to perform.",
      "The argument fails to make a crucial distinction between an action one is legally obligated to perform and an action with good consequences, and it takes for granted that everything true of legal obligations is true of obligations generally.",
      "The argument treats a condition that is sufficient to make something an obligation as also a requirement for something to be an obligation, and it takes for granted that any obligation to perform an action is a legal obligation."
    ],
    "raw_logic_programs": [
      "# Declarations\nterms = EnumSort([agreement, obligation, action])\nconditions = Function([terms] -> [bool])\n\n# Constraints\nForAll([t:terms], Implies(conditions(agreement), conditions(obligation))) ::: anyone who makes an agreement has an obligation to fulfill the terms of that agreement\nForAll([t:terms], Implies(conditions(obligation), conditions(agreement))) ::: anyone who is obligated to perform an action has agreed to perform that action\n\n# Options\nQuestion ::: Which one of the following statements most accurately characterizes the argument's reasoning flaws?\nis_flawed(ambiguous_use_of_term(\"action\") and fails_to_consider(\"unwillingness to perform agreed actions\")) ::: (The argument rests on an ambiguous use of the term \"action,\" and it fails to consider the possibility that people are sometimes unwilling to perform actions that they have agreed to perform.)\nis_flawed(premise_equivalent_to_conclusion and takes_for_granted(\"only certain actions should be agreed to\")) ::: (The argument contains a premise that is logically equivalent to its conclusion, and it takes for granted that there are only certain actions that one should agree to perform.)\nis_flawed(fails_to_distinguish(\"legal obligation vs. good consequences\") and takes_for_granted(\"legal obligations are the same as general obligations\")) ::: (The argument fails to make a crucial distinction between an action one is legally obligated to perform and an action with good consequences, and it takes for granted that everything true of legal obligations is true of obligations generally.)\nis_flawed(treats_sufficient_condition_as_requirement and takes_for_granted(\"any obligation is a legal obligation\")) ::: (The argument treats a condition that is sufficient to make something an obligation as also a requirement for something to be an obligation, and it takes for granted that any obligation to perform an action is a legal obligation.)"
    ]
  },
  {
    "id": "test_85",
    "context": "State researchers have found that since the oil price increases of the 1970s, there has been a decline in home energy consumption. They concluded that almost all of the decline has been achieved through reduced standards of living and changes in the way people spend their time.",
    "question": "Each of the following, if true, would support the conclusion above EXCEPT:",
    "options": [
      "At least 59 percent of households maintained a lower indoor temperature than they had been accustomed to maintain on very cold days.",
      "Members of at least 60 percent of households showered for shorter periods of time than they had previously.",
      "More than 39 percent of households were able to decrease energy costs substantially by having relatively inexpensive work done to improve the efficiency of their existing heating systems.",
      "Sales of portable heaters rose as families concentrated their winter activities in a limited number of rooms."
    ],
    "raw_logic_programs": [
      "# Declarations\nhouseholds = EnumSort([household1, household2, ..., householdN])  # Represents different households\nactions = EnumSort([lower_temperature, shorter_showers, improve_efficiency, use_portable_heaters])\nsupports_conclusion = Function([households, actions] -> [bool])\n\n# Constraints\nForAll([h:households], Or(supports_conclusion(h, lower_temperature), supports_conclusion(h, shorter_showers))) ::: At least 59 percent of households maintained a lower indoor temperature than they had been accustomed to maintain on very cold days, and members of at least 60 percent of households showered for shorter periods of time than they had previously\nForAll([h:households], supports_conclusion(h, use_portable_heaters)) ::: Sales of portable heaters rose as families concentrated their winter activities in a limited number of rooms\n\n# Options\nQuestion ::: Each of the following, if true, would support the conclusion above EXCEPT:\nis_exception(Exists([h:households], supports_conclusion(h, lower_temperature))) ::: (A)\nis_exception(Exists([h:households], supports_conclusion(h, shorter_showers))) ::: (B)\nis_exception(Exists([h:households], supports_conclusion(h, improve_efficiency))) ::: (C)\nis_exception(Exists([h:households], supports_conclusion(h, use_portable_heaters))) ::: (D)"
    ]
  },
  {
    "id": "test_86",
    "context": "What defines the offenses of libel, discrimination, and harassment is more the motivation than the act itself. Since finding evidence of motivation in these acts is difficult, judges must often apply relevant laws without specific guiding criteria. Ttherefore, public trust in judges is essential to public satisfaction with the outcome of trials involving these offenses.",
    "question": "Which one of the following most accurately describes the role played in the argument by the statement that what defines some offenses is more the motivation than the act?",
    "options": [
      "It is specified as a feature of certain offenses that makes determination that an offense has occurred difficult.",
      "It is cited as the reason that not all legal proceedings are settled reliably by judges.",
      "It is offered as evidence that some illegal actions can never be determined to be such.",
      "It is offered as evidence that a precise specification of the characteristics of certain offenses would increase public satisfaction with judges' rulings."
    ],
    "raw_logic_programs": [
      "# Declarations\noffenses = EnumSort([libel, discrimination, harassment])\nfactors = EnumSort([motivation, act])\nevidence = Function([offenses] -> [factors])\ntrust = Function([bool])\nsatisfaction = Function([bool])\n\n# Constraints\nForAll([o:offenses], evidence(o) == motivation) ::: What defines the offenses of libel, discrimination, and harassment is more the motivation than the act itself\nForAll([o:offenses], Not(Exists([f:factors], evidence(o) == f))) ::: Finding evidence of motivation in these acts is difficult\ntrust() == satisfaction() ::: Public trust in judges is essential to public satisfaction with the outcome of trials involving these offenses\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the argument by the statement that what defines some offenses is more the motivation than the act?\nis_specified_as_feature(ForAll([o:offenses], evidence(o) == motivation)) ::: (It is specified as a feature of certain offenses that makes determination that an offense has occurred difficult.\nis_cited_as_reason(Not(ForAll([o:offenses], Exists([f:factors], evidence(o) == f)))) ::: (It is cited as the reason that not all legal proceedings are settled reliably by judges.\nis_offered_as_evidence(Not(Exists([o:offenses], Exists([f:factors], evidence(o) == f)))) ::: (It is offered as evidence that some illegal actions can never be determined to be such.\nis_offered_as_evidence(ForAll([o:offenses], evidence(o) == motivation)) ::: (It is offered as evidence that a precise specification of the characteristics of certain offenses would increase public satisfaction with judges' rulings."
    ]
  },
  {
    "id": "test_87",
    "context": "Riders who wear bicycle helmets can greatly reduce the risk of significant injury. Ttherefore, doctors working in an emergency room can expect that, out of cyclists admitted to hospitals, those wearing bicycle helmets will have injuries that are less severe than will those not wearing a helmet.",
    "question": "Which of the following is necessary to evaluate the argument?",
    "options": [
      "Whether the bicycling activities of cyclists using a helmet differs from the activities of those not wearing a helmet",
      "The durability of bicycle helmets over the course of many years",
      "The probability that those cyclists admitted to an emergency room have suffered similar accidents in the past",
      "The number of medical staff who are in the emergency room when an injured cyclist arrives"
    ],
    "raw_logic_programs": [
      "# Declarations\ncyclists = EnumSort([helmet_wearers, non_helmet_wearers])\ninjury_severity = Function([cyclists] -> [int])\n\n# Constraints\nForAll([c:cyclists], injury_severity(c) >= 0) ::: Injury severity is a non-negative integer\n\n# Options\nQuestion ::: Which of the following is necessary to evaluate the argument?\nis_necessary(Exists([c1:cyclists, c2:cyclists], And(c1 != c2, injury_severity(c1) != injury_severity(c2)))) ::: (A) Whether the bicycling activities of cyclists using a helmet differs from the activities of those not wearing a helmet\nis_necessary(Exists([c:cyclists], injury_severity(c) > 0)) ::: (B) The durability of bicycle helmets over the course of many years\nis_necessary(Exists([c:cyclists], injury_severity(c) == injury_severity(c))) ::: (C) The probability that those cyclists admitted to an emergency room have suffered similar accidents in the past\nis_necessary(Exists([c:cyclists], injury_severity(c) >= 0)) ::: (D) The number of medical staff who are in the emergency room when an injured cyclist arrives"
    ]
  },
  {
    "id": "test_88",
    "context": "The higher the altitude, the thinner the air. Since Mexico City' s altitude is higher than that of Panama City, the air must be thinner in Mexico City than in Panama City.",
    "question": "Which one of the following arguments is most similar in its reasoning to the argument above?",
    "options": [
      "The older a tree, the more rings it has. The tree in Lou's yard is older than the tree in Theresa's yard. Ttherefore, the tree in Lou's yard must have more rings than does the tree in Theresa's yard.",
      "The bigger the vocabulary a language has, the harder it is to learn. English is harder to learn than Italian. Ttherefore, English must have a bigger vocabulary than Italian.",
      "The more egg whites used and the longer they are beaten, the fluffier the meringue. Since Lydia used more egg whites in her meringue than Joseph used in his, Lydia's meringue must be fluffier than Joseph's.",
      "The people who run the fastest marathons these days are faster than the people who ran the fastest marathons ten years ago. Charles is a marathon runner. So Charles must run faster marathons these days than he did ten years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([Mexico_City, Panama_City, Lou_Tree, Theresa_Tree, English, Italian, Lydia_Meringue, Joseph_Meringue, Charles])\nproperties = EnumSort([altitude, air_thinness, age, rings, vocabulary_size, difficulty, egg_whites, fluffiness, speed])\nrelation = Function([entities, properties] -> [int])\n\n# Constraints\nForAll([e1:entities, e2:entities, p:properties], Implies(relation(e1, p) > relation(e2, p), relation(e1, p + 1) > relation(e2, p + 1))) ::: The higher the altitude, the thinner the air\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its reasoning to the argument above?\nis_similar(ForAll([e1:entities, e2:entities], Implies(relation(e1, age) > relation(e2, age), relation(e1, rings) > relation(e2, rings)))) ::: (A)\nis_similar(ForAll([e1:entities, e2:entities], Implies(relation(e1, difficulty) > relation(e2, difficulty), relation(e1, vocabulary_size) > relation(e2, vocabulary_size)))) ::: (B)\nis_similar(ForAll([e1:entities, e2:entities], Implies(relation(e1, egg_whites) > relation(e2, egg_whites), relation(e1, fluffiness) > relation(e2, fluffiness)))) ::: (C)\nis_similar(ForAll([e1:entities, e2:entities], Implies(relation(e1, speed) > relation(e2, speed), relation(e1, speed) > relation(e2, speed)))) ::: (D)"
    ]
  },
  {
    "id": "test_89",
    "context": "The rate at which a road wears depends on various factors, including climate, amount of traffic, and the size and weight of the vehicles using it. The only land transportation to Rittland's seaport is via a divided highway, one side carrying traffic to the seaport and one carrying traffic away from it. The side leading to the seaport has worn faster, even though each side has carried virtually the same amount of traffic, consisting mainly of large trucks.",
    "question": "Which of the following, if true, most helps to explain the difference in the rate of wear?",
    "options": [
      "Wear on the highway that serves Rittland's seaport is considerably greater during the cold winter months.",
      "A greater tonnage of goods is exported from Rittland's seaport than is imported through it.",
      "The volume of traffic to and from Rittland's seaport has increased beyond the intended capacity of the highway that serves it.",
      "Wear on the side of the highway that leads to Rittland's seaport has encouraged people to take buses to the seaport rather than driving there in their own automobiles."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([climate, traffic_amount, vehicle_size_weight])\nhighway_sides = EnumSort([to_seaport, from_seaport])\nwear_rate = Function([highway_sides] -> [int])\n\n# Constraints\nwear_rate(to_seaport) > wear_rate(from_seaport) ::: The side leading to the seaport has worn faster\nForAll([f:factors], wear_rate(to_seaport) == wear_rate(from_seaport)) ::: Each side has carried virtually the same amount of traffic, consisting mainly of large trucks\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the difference in the rate of wear?\nis_explanation(wear_rate(to_seaport) > wear_rate(from_seaport), \"Wear on the highway that serves Rittland's seaport is considerably greater during the cold winter months.\") ::: (A)\nis_explanation(wear_rate(to_seaport) > wear_rate(from_seaport), \"A greater tonnage of goods is exported from Rittland's seaport than is imported through it.\") ::: (B)\nis_explanation(wear_rate(to_seaport) > wear_rate(from_seaport), \"The volume of traffic to and from Rittland's seaport has increased beyond the intended capacity of the highway that serves it.\") ::: (C)\nis_explanation(wear_rate(to_seaport) > wear_rate(from_seaport), \"Wear on the side of the highway that leads to Rittland's seaport has encouraged people to take buses to the seaport rather than driving there in their own automobiles.\") ::: (D)"
    ]
  },
  {
    "id": "test_90",
    "context": "The scientific theory of evolution has challenged the view of human origin as divine creation and sees us as simply descended from the same ancestors as the apes. While science and technology have provided brilliant insights into our world and eased our everyday life, they have simultaneously deprived us of a view in which our importance is assured. Thus, while science has given us many things, it has taken away much that is also greatly valued.",
    "question": "Which one of the following is assumed in the passage?",
    "options": [
      "The need of people to feel important is now met by science and technology.",
      "The assurance that people are important is highly valued.",
      "Science and technology are of less value than religion.",
      "The world was a better place before the advent of science and technology."
    ],
    "raw_logic_programs": [
      "# Declarations\nbeliefs = EnumSort([divine_creation, evolution])\nvalues = EnumSort([importance_assurance, scientific_insight])\neffects = Function([values] -> [bool])\n\n# Constraints\neffects(scientific_insight) == True ::: Science and technology have provided brilliant insights into our world and eased our everyday life\neffects(importance_assurance) == False ::: They have simultaneously deprived us of a view in which our importance is assured\n\n# Options\nQuestion ::: Which one of the following is assumed in the passage?\nis_assumed(effects(importance_assurance) == True) ::: (The assurance that people are important is highly valued.)\nis_assumed(effects(scientific_insight) == False) ::: (The need of people to feel important is now met by science and technology.)\nis_assumed(importance_assurance > scientific_insight) ::: (Science and technology are of less value than religion.)\nis_assumed(effects(divine_creation) == True) ::: (The world was a better place before the advent of science and technology.)"
    ]
  },
  {
    "id": "test_91",
    "context": "Train service suffers when a railroad combines commuter and freight service. By dividing its attention between its freight and commuter customers, a railroad serves neither particularly well. Ttherefore, if a railroad is going to be a successful business, then it must concentrate exclusively on one of these two markets.",
    "question": "For the argument to be logically correct, it must make which of the of the following assumptions?",
    "options": [
      "Railroad commuters rarely want freight service as well.",
      "The first priority of a railroad is to be a successful business.",
      "Commuter and freight service have little in common with each other.",
      "Unless a railroad serves its customers well, it will not be a successful business."
    ],
    "raw_logic_programs": [
      "# Declarations\nrailroad = EnumSort([commuter, freight])\nservice_quality = Function([railroad] -> [bool])\nsuccessful_business = Function([railroad] -> [bool])\n\n# Constraints\nForAll([r:railroad], Implies(service_quality(r), successful_business(r))) ::: If a railroad is going to be a successful business, then it must concentrate exclusively on one of these two markets\n\n# Options\nQuestion ::: For the argument to be logically correct, it must make which of the following assumptions?\nis_assumption(ForAll([r:railroad], Implies(Not(service_quality(r)), Not(successful_business(r))))) ::: (Unless a railroad serves its customers well, it will not be a successful business)"
    ]
  },
  {
    "id": "test_92",
    "context": "At Funston Stores, a salesperson' s salary is comprised solely of commissions from sales. A particular salesperson' s annual salary was lower in 2009 than in 2008. In both years, all of this salesperson' s sales were of only one item, product X, and he made the same number of product X sales in both years. The commission percentage for all Funston salespeople has remained unchanged over the past ten years.",
    "question": "The information above most strongly supports which of the following?",
    "options": [
      "The price of product X dropped from 2008 to 2009.",
      "Through all of Funston Stores, the overall number of sales of product X declined from 2008 to 2009",
      "The commission percentage that Funston store salespeople earn is lower compared to the percentage of salespeople at similar stores.",
      "This salesperson would have earned a higher salary if her sales were in more than one product."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([2008, 2009])\nsalesperson = EnumSort([salesperson])\nproducts = EnumSort([product_X])\nsales = Function([salesperson, years] -> [int])\nsalary = Function([salesperson, years] -> [int])\ncommission_percentage = Function([salesperson] -> [float])\nprice = Function([products, years] -> [float])\n\n# Constraints\nForAll([y:years], sales(salesperson, y) == sales(salesperson, 2008)) ::: The salesperson made the same number of product X sales in both years\ncommission_percentage(salesperson) == commission_percentage(salesperson) ::: The commission percentage for all Funston salespeople has remained unchanged over the past ten years\nsalary(salesperson, 2009) < salary(salesperson, 2008) ::: The salesperson's annual salary was lower in 2009 than in 2008\n\n# Options\nQuestion ::: The information above most strongly supports which of the following?\nis_supported(price(product_X, 2009) < price(product_X, 2008)) ::: (The price of product X dropped from 2008 to 2009.\nis_supported(Exists([s:salesperson], sales(s, 2009) < sales(s, 2008))) ::: (Through all of Funston Stores, the overall number of sales of product X declined from 2008 to 2009\nis_supported(commission_percentage(salesperson) < commission_percentage(salesperson)) ::: (The commission percentage that Funston store salespeople earn is lower compared to the percentage of salespeople at similar stores.\nis_supported(Exists([p:products], sales(salesperson, 2008) > 0)) ::: (This salesperson would have earned a higher salary if her sales were in more than one product."
    ]
  },
  {
    "id": "test_93",
    "context": "Tanco, a leather manufacturer, uses large quantities of common salt to preserve animal hides. New environmental regulations have significantly increased the cost of disposing of salt water that results from this use, and, in consequence, Tanco is considering a plan to use potassium chloride in place of common salt. Research has shown that Tanco could reprocess the by-product of potassium chloride use to yield a crop fertilizer, leaving a relatively small volume of waste for disposal.",
    "question": "In determining the impact on company profits of using potassium chloride in place of common salt, it would be important for Tanco to research all of the following EXCEPT:",
    "options": [
      "How closely does leather that results when common salt is used to preserve hides resemble that which results when potassium chloride is used?",
      "What difference, if any, is there between the cost of the common salt needed to preserve a given quantity of animal hides and the cost of the potassium chloride needed to preserve the same quantity of hides?",
      "To what extent is the equipment involved in preserving animal hides using common salt suitable for preserving animal hides using potassium chloride?",
      "Are the chemical properties that make potassium chloride an effective means for preserving animal hides the same as those that make common salt an effective means for doing so?"
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([leather_quality, cost_difference, equipment_suitability, chemical_properties])\nresearch_needed = Function([factors] -> [bool])\n\n# Constraints\nForAll([f:factors], research_needed(f)) ::: Tanco needs to research all factors impacting the use of potassium chloride\n\n# Options\nQuestion ::: In determining the impact on company profits of using potassium chloride in place of common salt, it would be important for Tanco to research all of the following EXCEPT:\nis_exception(Not(research_needed(leather_quality))) ::: (How closely does leather that results when common salt is used to preserve hides resemble that which results when potassium chloride is used?\nis_exception(Not(research_needed(cost_difference))) ::: (What difference, if any, is there between the cost of the common salt needed to preserve a given quantity of animal hides and the cost of the potassium chloride needed to preserve the same quantity of hides?\nis_exception(Not(research_needed(equipment_suitability))) ::: (To what extent is the equipment involved in preserving animal hides using common salt suitable for preserving animal hides using potassium chloride?\nis_exception(Not(research_needed(chemical_properties))) ::: (Are the chemical properties that make potassium chloride an effective means for preserving animal hides the same as those that make common salt an effective means for doing so?"
    ]
  },
  {
    "id": "test_94",
    "context": "Vargonia has just introduced a legal requirement that student-teacher ratios in government-funded schools not exceed a certain limit. All Vargonian children are entitled to education, free of charge, in these schools When a recession occurs and average incomes fall, the number of children enrolled in government-funded schools tends to increase. Ttherefore, though most employment opportunities contract in economic recessions, getting a teaching job in Vargonia' s government-funded schools will not be made more difficult by a recession.",
    "question": "Which of the following would be most important to in order to evaluate the argument?",
    "options": [
      "Whether in Vargonia there are any schools not funded by the government that offer children an education free of charge",
      "Whether the number of qualified applicants for teaching positions in government-funded schools increases significantly during economic recessions",
      "What proportion of Vargonia's workers currently hold jobs as teachers in government-funded schools",
      "Whether in the past a number of government-funded schools in Vargonia have had student-teacher ratios well in excess of the new limit"
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([student_teacher_ratio, enrollment, teaching_jobs, recession, qualified_applicants, non_gov_schools, current_teachers, past_ratios])\nfunctions = Function([variables] -> [bool])\n\n# Constraints\nfunctions(student_teacher_ratio) ::: Vargonia has a legal requirement that student-teacher ratios in government-funded schools not exceed a certain limit\nfunctions(enrollment) ::: All Vargonian children are entitled to education, free of charge, in government-funded schools\nfunctions(teaching_jobs) ::: Getting a teaching job in Vargonia's government-funded schools will not be made more difficult by a recession\nfunctions(recession) ::: When a recession occurs and average incomes fall, the number of children enrolled in government-funded schools tends to increase\n\n# Options\nQuestion ::: Which of the following would be most important to evaluate the argument?\nis_important(functions(non_gov_schools)) ::: (Whether in Vargonia there are any schools not funded by the government that offer children an education free of charge)\nis_important(functions(qualified_applicants)) ::: (Whether the number of qualified applicants for teaching positions in government-funded schools increases significantly during economic recessions)\nis_important(functions(current_teachers)) ::: (What proportion of Vargonia's workers currently hold jobs as teachers in government-funded schools)\nis_important(functions(past_ratios)) ::: (Whether in the past a number of government-funded schools in Vargonia have had student-teacher ratios well in excess of the new limit)"
    ]
  },
  {
    "id": "test_95",
    "context": "Dinosaur expert: Some paleontologists have claimed that birds are descendants of a group of dinosaurs called dromeosaurs. They appeal to the fossil record, which indicates that dromeosaurs have characteristics more similar to birds than do most dinosaurs. But there is a fatal flaw in their argument; the earliest bird fossils that have been discovered date back tens of millions of years farther than the oldest known dromeosaur fossils. Thus the paleontologists' claim is false.",
    "question": "The expert's argument depends on assuming which one of the following?",
    "options": [
      "Dromeosaurs are dissimilar to birds in many significant ways.",
      "Dromeosaurs and birds could have common ancestors .",
      "Known fossils indicate the relative dates of origin of birds and dromeosaurs.",
      "Knowledge of dromeosaur fossils and the earliest bird fossils is complete."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([dromeosaurs_dissimilar, common_ancestors, fossils_indicate_dates, knowledge_complete])\ndepends_on = Function([statements] -> [bool])\n\n# Constraints\ndepends_on(fossils_indicate_dates) ::: The expert's argument depends on assuming that known fossils indicate the relative dates of origin of birds and dromeosaurs.\n\n# Options\nQuestion ::: The expert's argument depends on assuming which one of the following?\nis_true(depends_on(dromeosaurs_dissimilar)) ::: (A) Dromeosaurs are dissimilar to birds in many significant ways.\nis_true(depends_on(common_ancestors)) ::: (B) Dromeosaurs and birds could have common ancestors.\nis_true(depends_on(fossils_indicate_dates)) ::: (C) Known fossils indicate the relative dates of origin of birds and dromeosaurs.\nis_true(depends_on(knowledge_complete)) ::: (D) Knowledge of dromeosaur fossils and the earliest bird fossils is complete."
    ]
  },
  {
    "id": "test_96",
    "context": "When teaching art students about the use of color, teachers should use colored paper rather than paint in their demonstrations. Colored paper is preferable because it readily permits a repeated use of exactly the same color in different compositions, which allows for a precise comparison of that color' s impact in varying contexts. With paint, however, it is difficult to mix exactly the same color twice, and the varying textures of the applied paint can interfere with the pure effect of the color itself.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "It is important that art students understand how the effects of using colored paper in various compositions differ from those of using paint in those compositions.",
      "Changing light conditions have less of an effect on the apparent color of a piece of paper than on the apparent color of a sample of paint.",
      "Observing the impacts of colors across varying contexts helps students to learn about the use of color.",
      "Two pieces of paper of exactly the same color will have the same effect in a given context, even if they are of different textures."
    ],
    "raw_logic_programs": [
      "# Declarations\nassumptions = EnumSort([A, B, C, D])\n\n# Constraints\nargument = \"Teachers should use colored paper rather than paint in their demonstrations because colored paper allows for a repeated use of exactly the same color in different compositions, enabling precise comparison of that color's impact in varying contexts.\"\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_required_assumption(assumptions(A)) ::: (A) It is important that art students understand how the effects of using colored paper in various compositions differ from those of using paint in those compositions.\nis_required_assumption(assumptions(B)) ::: (B) Changing light conditions have less of an effect on the apparent color of a piece of paper than on the apparent color of a sample of paint.\nis_required_assumption(assumptions(C)) ::: (C) Observing the impacts of colors across varying contexts helps students to learn about the use of color.\nis_required_assumption(assumptions(D)) ::: (D) Two pieces of paper of exactly the same color will have the same effect in a given context, even if they are of different textures."
    ]
  },
  {
    "id": "test_97",
    "context": "Artist: Almost everyone in this country really wants to be an artist even though they may have to work other jobs to pay the rent. After all, just about everyone I know hopes to someday be able to make a living as a painter, musician, or poet even if they currently work as dishwashers or discount store clerks.",
    "question": "The reasoning in the artist's argument is flawed in that the argument",
    "options": [
      "presumes that what is true of each person in a country is also true of the country's population as a whole",
      "fails to make a needed distinction between wanting to be an artist and making a living as an artist",
      "bases its conclusion on a sample that is unlikely to accurately represent people in the country as a whole",
      "contains a premise that presupposes the truth of the conclusion"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, ..., personN])  # Represents individuals in the country\nprofessions = EnumSort([artist, painter, musician, poet, dishwasher, clerk])\nwants_to_be = Function([people] -> [bool])  # Whether a person wants to be an artist\ncurrent_job = Function([people] -> [professions])  # Current job of a person\n\n# Constraints\nForAll([p:people], Or(wants_to_be(p), Not(wants_to_be(p)))) ::: Each person either wants to be an artist or not\nForAll([p:people], Or(current_job(p) == dishwasher, current_job(p) == clerk, current_job(p) == painter, current_job(p) == musician, current_job(p) == poet)) ::: Each person has a current job\n\n# Options\nQuestion ::: The reasoning in the artist's argument is flawed in that the argument\nis_flawed(ForAll([p:people], wants_to_be(p)) == wants_to_be_all(people)) ::: (A) presumes that what is true of each person in a country is also true of the country's population as a whole\nis_flawed(Exists([p:people], And(wants_to_be(p), Not(current_job(p) == artist)))) ::: (B) fails to make a needed distinction between wanting to be an artist and making a living as an artist\nis_flawed(Sample(people) != people) ::: (C) bases its conclusion on a sample that is unlikely to accurately represent people in the country as a whole\nis_flawed(Implies(ForAll([p:people], wants_to_be(p)), wants_to_be_all(people))) ::: (D) contains a premise that presupposes the truth of the conclusion"
    ]
  },
  {
    "id": "test_98",
    "context": "Government official: Clearly, censorship exists if we, as citizens, are not allowed to communicate what we are ready to communicate at our own expense or if other citizens are not permitted access to our communications at their own expense. Public unwillingness to provide funds for certain kinds of scientific, scholarly, or artistic activities cannot, ttherefore, be described as censorship.",
    "question": "The flawed reasoning in the government official's argument is most parallel to that in which one of the following?",
    "options": [
      "There is no doubt that a deed is heroic if the doer risks his or her own life to benefit another person. Thus an action is not heroic if the only thing it endangers is the reputation of the doer.",
      "Acrophobia, usually defined as a morbid fear of heights, can also mean a morbid fear of sharp objects. Since both fears have the same name, they undoubtedly have the same origin.",
      "Since there is more to good manners than simply using polite forms of address, it is not possible to say on first meeting a person whether or not that person has good manners.",
      "All actions that cause unnecessary harm to others are unjust; so if a just action causes harm to others, that action must be necessary."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([censorship, communication, public_funding, scientific_activities, scholarly_activities, artistic_activities])\nactions = EnumSort([allowed, not_allowed, permitted, not_permitted, provided, not_provided])\nreasoning = Function([concepts, actions] -> [bool])\n\n# Constraints\nreasoning(censorship, exists) == Or(reasoning(communication, not_allowed), reasoning(communication, not_permitted)) ::: Censorship exists if communication is not allowed or not permitted\nreasoning(public_funding, not_provided) == Not(reasoning(censorship, exists)) ::: Public unwillingness to provide funds is not censorship\n\n# Options\nQuestion ::: The flawed reasoning in the government official's argument is most parallel to that in which one of the following?\nis_parallel(And(reasoning(heroic_deed, exists) == reasoning(risk, life), reasoning(heroic_deed, not_exists) == reasoning(risk, reputation))) ::: (A)\nis_parallel(And(reasoning(acrophobia, defined) == reasoning(fear, heights), reasoning(acrophobia, same_origin) == reasoning(fear, sharp_objects))) ::: (B)\nis_parallel(And(reasoning(good_manners, more_than) == reasoning(politeness, forms), reasoning(good_manners, not_possible) == reasoning(first_meeting, judgment))) ::: (C)\nis_parallel(And(reasoning(unjust_action, causes_harm) == reasoning(action, unnecessary), reasoning(just_action, causes_harm) == reasoning(action, necessary))) ::: (D)"
    ]
  },
  {
    "id": "test_99",
    "context": "The consequences of surgical errors can be devastating, and no one would want to risk surgery unless it was performed by someone highly competent to perform surgery. General surgeons have special training and expertise that make them extremely competent to perform surgery. Ttherefore, surgery at the hands of anyone other than a general surgeon involves highly undesirable risks.",
    "question": "The reasoning in the argument is flawed because the argument fails to consider the possibility that",
    "options": [
      "general surgeons are not the only doctors competent to perform surgery",
      "the competence of the doctor performing surgery does not guarantee a successful outcome",
      "factors in addition to competence are relevant when choosing a doctor",
      "risk is not the only factor in deciding whether to have surgery"
    ],
    "raw_logic_programs": [
      "# Declarations\ncompetence = Function([str] -> [bool])\nrisk = Function([str] -> [bool])\ngeneral_surgeon = Function([str] -> [bool])\nperforms_surgery = Function([str] -> [bool])\n\n# Constraints\nForAll([d:str], Implies(general_surgeon(d), competence(d))) ::: General surgeons have special training and expertise that make them extremely competent to perform surgery\nForAll([d:str], Implies(Not(general_surgeon(d)), risk(d))) ::: Surgery at the hands of anyone other than a general surgeon involves highly undesirable risks\n\n# Options\nQuestion ::: The reasoning in the argument is flawed because the argument fails to consider the possibility that\nExists([d:str], And(Not(general_surgeon(d)), competence(d))) ::: (A) general surgeons are not the only doctors competent to perform surgery\nExists([d:str], And(competence(d), Not(performs_surgery(d)))) ::: (B) the competence of the doctor performing surgery does not guarantee a successful outcome\nExists([d:str], And(competence(d), Not(risk(d)))) ::: (C) factors in addition to competence are relevant when choosing a doctor\nExists([d:str], And(risk(d), Not(performs_surgery(d)))) ::: (D) risk is not the only factor in deciding whether to have surgery"
    ]
  },
  {
    "id": "test_100",
    "context": "By dating fossils of pollen and beetles, which returned after an Ice Age glacier left an area, it is possible to establish an approximate date when a warmer climate developed. In one glacial area, it appears from the insect record that a warm climate developed immediately after the melting of the glacier. From the pollen record, however, it appears that the warm climate did not develop until long after the glacier disappeared.",
    "question": "Each one of the following, if true, helps to explain the apparent discrepancy EXCEPT:",
    "options": [
      "Since plants spread unevenly in a new climate, researchers can mistake gaps in the pollen record as evidence of no new overall growth.",
      "Beetles can survive in a relatively barren postglacial area by scavenging.",
      "Beetles are among the oldest insect species and are much older than many warm-weather plants.",
      "Warm-weather plants cannot establish themselves as quickly as can beetles in a new environment."
    ],
    "raw_logic_programs": [
      "# Declarations\nfossils = EnumSort([pollen, beetles])\nevents = EnumSort([glacier_melt, warm_climate])\nrecords = Function([fossils] -> [events])\n\n# Constraints\nrecords(beetles) == warm_climate ::: From the insect record, a warm climate developed immediately after the melting of the glacier\nrecords(pollen) == glacier_melt ::: From the pollen record, the warm climate did not develop until long after the glacier disappeared\n\n# Options\nQuestion ::: Each one of the following, if true, helps to explain the apparent discrepancy EXCEPT:\nis_exception(is_sat(records(pollen) == warm_climate)) ::: (A) Since plants spread unevenly in a new climate, researchers can mistake gaps in the pollen record as evidence of no new overall growth.\nis_exception(is_sat(records(beetles) == glacier_melt)) ::: (B) Beetles can survive in a relatively barren postglacial area by scavenging.\nis_exception(is_sat(records(beetles) == glacier_melt)) ::: (C) Beetles are among the oldest insect species and are much older than many warm-weather plants.\nis_exception(is_sat(records(pollen) == glacier_melt)) ::: (D) Warm-weather plants cannot establish themselves as quickly as can beetles in a new environment."
    ]
  },
  {
    "id": "test_101",
    "context": "The coach of the Eagles used a computer analysis to determine the best combinations of players for games. The analysis revealed that the team has lost only when Jennifer was not playing. Although no computer was needed to discover this information, this sort of information is valuable, and in this case it confirms that Jennifer' s presence in the game will ensure that the Eagles will win.",
    "question": "The argument above is most vulnerable to criticism on the grounds that it",
    "options": [
      "presumes, without providing justification, that a player's contribution to a team's win or loss can be reliably quantified and analyzed by computer",
      "draws conclusions about applications of computer analyses to sports from the evidence of a single case",
      "draws a conclusion about the value of computer analyses from a case in which computer analysis provided no facts beyond what was already known",
      "presumes, without providing justification, that occurrences that have coincided in the past must continue to coincide"
    ],
    "raw_logic_programs": [
      "# Declarations\nargument = EnumSort([Jennifer, Eagles, ComputerAnalysis])\noutcomes = EnumSort([win, lose])\npresence = Function([argument] -> [bool])\nresult = Function([argument] -> [outcomes])\n\n# Constraints\nForAll([g:argument], Implies(Not(presence(Jennifer)), result(Eagles) == lose)) ::: The team has lost only when Jennifer was not playing\nForAll([g:argument], Implies(presence(Jennifer), result(Eagles) == win)) ::: Jennifer's presence in the game will ensure that the Eagles will win\n\n# Options\nQuestion ::: The argument above is most vulnerable to criticism on the grounds that it\nis_vulnerable(presumes_without_justification(quantifiable_contribution(Jennifer))) ::: (A) presumes, without providing justification, that a player's contribution to a team's win or loss can be reliably quantified and analyzed by computer\nis_vulnerable(draws_conclusions_single_case(ComputerAnalysis)) ::: (B) draws conclusions about applications of computer analyses to sports from the evidence of a single case\nis_vulnerable(draws_conclusion_no_new_facts(ComputerAnalysis)) ::: (C) draws a conclusion about the value of computer analyses from a case in which computer analysis provided no facts beyond what was already known\nis_vulnerable(presumes_without_justification(coincidence_past_future)) ::: (D) presumes, without providing justification, that occurrences that have coincided in the past must continue to coincide"
    ]
  },
  {
    "id": "test_102",
    "context": "A birth is more likely to be difficult when the mother is over the age of 40 than when she is younger. Regardless of the mother' s age, a person whose birth was difficult is more likely to be ambidextrous than is a person whose birth was not difficult. Since other causes of ambidexterity are not related to the mother' s age, there must be more ambidextrous people who were born to women over 40 than there are ambidextrous people who were born to younger women.",
    "question": "The argument is most vulnerable to which one of the following criticisms?",
    "options": [
      "It assumes what it sets out to establish.",
      "It does not state how old a child must be before its handedness can be determined.",
      "It neglects to explain how difficulties during birth can result in a child's ambidexterity.",
      "It overlooks the possibility that fewer children are born to women over 40 than to women under 40."
    ],
    "raw_logic_programs": [
      "# Declarations\nage_groups = EnumSort([over_40, under_40])\nbirth_difficulty = EnumSort([difficult, not_difficult])\nhandedness = EnumSort([ambidextrous, not_ambidextrous])\nbirths = Function([age_groups, birth_difficulty, handedness] -> [int])\n\n# Constraints\nForAll([a:age_groups], births(a, difficult, ambidextrous) > births(a, not_difficult, ambidextrous)) ::: a person whose birth was difficult is more likely to be ambidextrous than is a person whose birth was not difficult\nbirths(over_40, difficult, ambidextrous) > births(under_40, difficult, ambidextrous) ::: more ambidextrous people who were born to women over 40 than there are ambidextrous people who were born to younger women\n\n# Options\nQuestion ::: The argument is most vulnerable to which one of the following criticisms?\nis_vulnerable(It assumes what it sets out to establish) ::: (A)\nis_vulnerable(It does not state how old a child must be before its handedness can be determined) ::: (B)\nis_vulnerable(It neglects to explain how difficulties during birth can result in a child's ambidexterity) ::: (C)\nis_vulnerable(It overlooks the possibility that fewer children are born to women over 40 than to women under 40) ::: (D)"
    ]
  },
  {
    "id": "test_103",
    "context": "Food labeling regulation: Food of a type that does not ordinarily contain fat cannot be labeled \"nonfat\" unless most people mistakenly believe the food ordinarily contains fat. If most people mistakenly believe that a food ordinarily contains fat, the food may be labeled \"nonfat\" if the label also states that the food ordinarily contains no fat.",
    "question": "Which one of the following situations violates the food labeling regulation?",
    "options": [
      "Although most people are aware that lasagna ordinarily contains fat, Lester's Lasagna, which contains no fat, is not labeled \"nonfat. \"",
      "Although most people are aware that applesauce does not ordinarily contain fat, Lester's Applesauce is labeled \"nonfat. \"",
      "Although most garlic baguettes contain fat, Lester's Garlic Baguettes are labeled \"nonfat. \"",
      "Although most people know that bran flakes do not normally contain fat, Lester's Bran Flakes are not labeled \"nonfat. \""
    ],
    "raw_logic_programs": [
      "# Declarations\nfoods = EnumSort([lasagna, applesauce, garlic_baguettes, bran_flakes])\ncontains_fat = Function([foods] -> [bool])\nlabeled_nonfat = Function([foods] -> [bool])\nmistaken_belief = Function([foods] -> [bool])\n\n# Constraints\nForAll([f:foods], Implies(Not(contains_fat(f)), Not(labeled_nonfat(f)) || mistaken_belief(f))) ::: Food of a type that does not ordinarily contain fat cannot be labeled \"nonfat\" unless most people mistakenly believe the food ordinarily contains fat\nForAll([f:foods], Implies(mistaken_belief(f), labeled_nonfat(f) == (Not(contains_fat(f))))) ::: If most people mistakenly believe that a food ordinarily contains fat, the food may be labeled \"nonfat\" if the label also states that the food ordinarily contains no fat\n\n# Options\nQuestion ::: Which one of the following situations violates the food labeling regulation?\nis_violation(And(Not(mistaken_belief(lasagna)), Not(contains_fat(lasagna)), Not(labeled_nonfat(lasagna)))) ::: (A)\nis_violation(And(Not(mistaken_belief(applesauce)), Not(contains_fat(applesauce)), labeled_nonfat(applesauce))) ::: (B)\nis_violation(And(contains_fat(garlic_baguettes), labeled_nonfat(garlic_baguettes))) ::: (C)\nis_violation(And(Not(mistaken_belief(bran_flakes)), Not(contains_fat(bran_flakes)), Not(labeled_nonfat(bran_flakes)))) ::: (D)"
    ]
  },
  {
    "id": "test_104",
    "context": "It is commonly held among marketing experts that in a nonexpanding market a company' s best strategy is to go after a bigger share of the market and that the best way to do this is to run comparative advertisements that emphasize weaknesses in the products of rivals. In the stagnant market for food oil, soybean-oil and palm-oil producers did wage a two-year battle with comparative advertisements about the deleterious effect on health of each other' s products. These campaigns, however, had little effect on respective market shares; rather, they stopped many people from buying any edible oils at all.",
    "question": "The statements above most strongly support the conclusion that comparative advertisements",
    "options": [
      "should under no circumstances be used as a retaliatory measure",
      "carry the risk of causing a contraction of the market at which they are aimed",
      "increase a company's market share in all cases in which that company's products are clearly superior to the products of rivals",
      "should not be used in a market that is expanding or likely to expand"
    ],
    "raw_logic_programs": [
      "# Declarations\nmarkets = EnumSort([expanding, nonexpanding, stagnant])\nadvertisements = EnumSort([comparative, non_comparative])\neffects = EnumSort([increase_share, decrease_share, no_effect, market_contraction])\n\n# Constraints\nForAll([m:markets], Exists([a:advertisements], Exists([e:effects], True))) ::: Each market type can have different effects from advertisements\nForAll([a:advertisements], Implies(a == comparative, Exists([m:markets], m == nonexpanding))) ::: Comparative advertisements are typically used in nonexpanding markets\nExists([m:markets], And(m == stagnant, Exists([a:advertisements], a == comparative))) ::: In the stagnant market for food oil, comparative advertisements were used\nForAll([m:markets], Implies(m == stagnant, Exists([e:effects], e == market_contraction))) ::: In the stagnant market, the effect was a contraction of the market\n\n# Options\nQuestion ::: The statements above most strongly support the conclusion that comparative advertisements\nis_supported(Exists([e:effects], e == market_contraction)) ::: (B) carry the risk of causing a contraction of the market at which they are aimed"
    ]
  },
  {
    "id": "test_105",
    "context": "Robinson: Wexell says that the museum wasted its money in purchasing props and costumes from famous stage productions, because such items have no artistic significance outside the context of a performance. But many of the props and costumes are too old and fragile for use in a performance. So clearly, the museum did not waste its money, for displaying these items is the only way of making them available to the public.",
    "question": "The reasoning in Robinson's argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "offers anecdotal evidence insufficient to support a general claim",
      "attacks the person making the argument rather than the substance of the argument",
      "gives reasons that do not address the point made in Wexell's argument",
      "takes a condition that is sufficient for the conclusion to be true as one that is necessary for the conclusion to be true"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Robinson, Wexell])\nclaims = EnumSort([wasted_money, no_artistic_significance, too_old_for_performance, only_way_to_display])\nsupports = Function([arguments, claims] -> [bool])\n\n# Constraints\nsupports(Wexell, wasted_money) ::: Wexell claims that the museum wasted its money\nsupports(Wexell, no_artistic_significance) ::: Wexell claims that props and costumes have no artistic significance outside a performance\nsupports(Robinson, too_old_for_performance) ::: Robinson claims that many props and costumes are too old and fragile for use in a performance\nsupports(Robinson, only_way_to_display) ::: Robinson claims that displaying is the only way to make them available to the public\n\n# Options\nQuestion ::: The reasoning in Robinson's argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(supports(Robinson, anecdotal_evidence)) ::: (offers anecdotal evidence insufficient to support a general claim)\nis_vulnerable(attacks_person(Wexell)) ::: (attacks the person making the argument rather than the substance of the argument)\nis_vulnerable(does_not_address(Wexell, no_artistic_significance)) ::: (gives reasons that do not address the point made in Wexell's argument)\nis_vulnerable(sufficient_as_necessary(Robinson, only_way_to_display)) ::: (takes a condition that is sufficient for the conclusion to be true as one that is necessary for the conclusion to be true)"
    ]
  },
  {
    "id": "test_106",
    "context": "The Calex Telecommunications Company is planning to introduce cellular telephone service into isolated coastal areas of Caladia, a move which will require considerable investment. However, the only significant economic activity in these areas is small-scale coffee farming, and none of the coffee farmers make enough money to afford the monthly service fees that Calex would have to charge to make a profit. Nevertheless, Calex contends that making the service available to these farmers will be profitable.",
    "question": "Which of the following, if true, provides the strongest support for Calex's contention?",
    "options": [
      "Currently, Caladian coffee farmers are forced to sell their coffee to local buyers at whatever price those buyers choose to pay because the farmers are unable to remain in contact with outside buyers who generally offer higher prices.",
      "In the coastal areas of Caladia where Calex proposes to introduce cellular telephone service, there is currently no fixed-line telephone service because fixed-line companies do not believe that they could recoup their investment.",
      "Calex has for years made a profit on cellular telephone service in Caladia's capital city, which is not far from the coastal region.",
      "A cellular telephone company can break even with a considerably smaller number of subscribers than a fixed-line company can, even in areas such as the Caladian coast, where there is no difficult terrain to drive up the costs of installing fixed lines."
    ],
    "raw_logic_programs": [
      "# Declarations\neconomic_activities = EnumSort([small_scale_coffee_farming])\nareas = EnumSort([isolated_coastal_areas])\nservices = EnumSort([cellular_telephone_service])\ncompanies = EnumSort([Calex])\nbuyers = EnumSort([local_buyers, outside_buyers])\nprofits = EnumSort([profitable, not_profitable])\naffordability = EnumSort([affordable, not_affordable])\ninvestment = EnumSort([considerable_investment])\nservice_availability = Function([areas, services] -> [bool])\neconomic_activity = Function([areas] -> [economic_activities])\nafford_service = Function([economic_activities] -> [affordability])\nprofitability = Function([companies, services, areas] -> [profits])\ncontact_with_buyers = Function([economic_activities, buyers] -> [bool])\n\n# Constraints\neconomic_activity(isolated_coastal_areas) == small_scale_coffee_farming ::: The only significant economic activity in these areas is small-scale coffee farming\nafford_service(small_scale_coffee_farming) == not_affordable ::: None of the coffee farmers make enough money to afford the monthly service fees\nprofitability(Calex, cellular_telephone_service, isolated_coastal_areas) == profitable ::: Calex contends that making the service available to these farmers will be profitable\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest support for Calex's contention?\nis_strong_support(contact_with_buyers(small_scale_coffee_farming, outside_buyers) == false) ::: (Currently, Caladian coffee farmers are forced to sell their coffee to local buyers at whatever price those buyers choose to pay because the farmers are unable to remain in contact with outside buyers who generally offer higher prices.\nis_strong_support(service_availability(isolated_coastal_areas, fixed_line_telephone_service) == false) ::: (In the coastal areas of Caladia where Calex proposes to introduce cellular telephone service, there is currently no fixed-line telephone service because fixed-line companies do not believe that they could recoup their investment.\nis_strong_support(profitability(Calex, cellular_telephone_service, capital_city) == profitable) ::: (Calex has for years made a profit on cellular telephone service in Caladia's capital city, which is not far from the coastal region.\nis_strong_support(break_even_subscribers(cellular_telephone_service) < break_even_subscribers(fixed_line_telephone_service)) ::: (A cellular telephone company can break even with a considerably smaller number of subscribers than a fixed-line company can, even in areas such as the Caladian coast, where there is no difficult terrain to drive up the costs of installing fixed lines."
    ]
  },
  {
    "id": "test_107",
    "context": "Barr: The National Tea Association cites tea' s recent visibility in advertising and magazine articles as evidence of tea' s increasing popularity. However, a neutral polling company, the Survey Group, has tracked tea sales at numerous stores for the last 20 years and has found no change in the amount of tea sold. We can thus conclude that tea is no more popular now than it ever was.",
    "question": "Which one of the following, if true, most seriously weakens Barr's argument?",
    "options": [
      "The National Tea Association has announced that it plans to carry out its own retail survey in the next year.",
      "A survey by an unrelated polling organization shows that the public is generally receptive to the idea of trying new types of tea.",
      "The stores from which the Survey Group collected information about tea sales are all located in the same small region of the country.",
      "Tea has been the subject of an expensive and efficient advertising campaign funded, in part, by the National Tea Association."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Barr, National_Tea_Association])\nevidence = EnumSort([advertising_visibility, sales_data])\npolling_companies = EnumSort([Survey_Group, Unrelated_Organization])\nstores = EnumSort([same_region, different_regions])\ncampaigns = EnumSort([expensive_campaign, no_campaign])\nconclusion = EnumSort([tea_popularity_increasing, tea_popularity_constant])\n\n# Constraints\ncites(National_Tea_Association, advertising_visibility) ::: The National Tea Association cites tea's recent visibility in advertising and magazine articles as evidence of tea's increasing popularity\ntracks(Survey_Group, sales_data) ::: The Survey Group has tracked tea sales at numerous stores for the last 20 years\nfinds(Survey_Group, sales_data, no_change) ::: The Survey Group found no change in the amount of tea sold\nconcludes(Barr, tea_popularity_constant) ::: Barr concludes that tea is no more popular now than it ever was\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens Barr's argument?\nis_weakening(collects(Survey_Group, same_region)) ::: (The stores from which the Survey Group collected information about tea sales are all located in the same small region of the country.)\nis_weakening(shows(Unrelated_Organization, public_receptive)) ::: (A survey by an unrelated polling organization shows that the public is generally receptive to the idea of trying new types of tea.)\nis_weakening(announces(National_Tea_Association, plans_survey)) ::: (The National Tea Association has announced that it plans to carry out its own retail survey in the next year.)\nis_weakening(funds(National_Tea_Association, expensive_campaign)) ::: (Tea has been the subject of an expensive and efficient advertising campaign funded, in part, by the National Tea Association.)"
    ]
  },
  {
    "id": "test_108",
    "context": "Leachate is a solution, frequently highly contaminated, that develops when water permeates a landfill site. If and only if the landfill' s capacity to hold liquids is exceeded does the leachate escape into the environment, generally in unpredictable quantities. A method must be found for disposing of leachate. Most landfill leachate is sent directly to sewage treatment plants, but not all sewage plants are capable of handling the highly contaminated water.",
    "question": "Which one of the following can be inferred from the passage?",
    "options": [
      "If leachate does not escape from a landfill into the environment, then the landfill's capacity to hold liquids has not been exceeded.",
      "The ability to predict the volume of escaping landfill leachate would help solve the disposal problem.",
      "If any water permeates a landfill, leachate will escape into the environment.",
      "Some landfill leachate is sent to sewage treatment plants that are incapable of handling it."
    ],
    "raw_logic_programs": [
      "# Declarations\nlandfill_capacity_exceeded = Bool('landfill_capacity_exceeded')\nleachate_escapes = Bool('leachate_escapes')\nsewage_plant_capable = Function('sewage_plant_capable', BoolSort())\nleachate_sent_to_plant = Function('leachate_sent_to_plant', BoolSort())\n\n# Constraints\nleachate_escapes == landfill_capacity_exceeded ::: If and only if the landfill's capacity to hold liquids is exceeded does the leachate escape into the environment\nForAll([p:BoolSort()], Implies(leachate_sent_to_plant(p), Not(sewage_plant_capable(p)))) ::: Not all sewage plants are capable of handling the highly contaminated water\n\n# Options\nQuestion ::: Which one of the following can be inferred from the passage?\nis_inferred(Implies(Not(leachate_escapes), Not(landfill_capacity_exceeded))) ::: (If leachate does not escape from a landfill into the environment, then the landfill's capacity to hold liquids has not been exceeded.\nis_inferred(Exists([v:BoolSort()], Implies(leachate_escapes, v))) ::: (The ability to predict the volume of escaping landfill leachate would help solve the disposal problem.\nis_inferred(ForAll([w:BoolSort()], Implies(w, leachate_escapes))) ::: (If any water permeates a landfill, leachate will escape into the environment.\nis_inferred(Exists([p:BoolSort()], And(leachate_sent_to_plant(p), Not(sewage_plant_capable(p))))) ::: (Some landfill leachate is sent to sewage treatment plants that are incapable of handling it."
    ]
  },
  {
    "id": "test_109",
    "context": "Although most builders do not consider the experimental building material papercrete to be a promising material for large-scale construction, those who regularly work with it, primarily on small-scale projects, think otherwise. Since those who regularly use papercrete are familiar with the properties of the material, it is likely that papercrete is indeed promising for large-scale construction.",
    "question": "The argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "confuses what is promising for small-scale construction with what is promising for large-scale construction",
      "presumes that what the majority of builders thinks is promising must in fact be promising",
      "does not consider the views of the builders who have the most experience working with the material",
      "fails to consider that most builders might not regularly use papercrete precisely because they are familiar with its properties"
    ],
    "raw_logic_programs": [
      "# Declarations\nbuilders = EnumSort([most_builders, regular_users])\nprojects = EnumSort([small_scale, large_scale])\nmaterial = EnumSort([papercrete])\nopinion = Function([builders, projects] -> [bool])\n\n# Constraints\nopinion(most_builders, large_scale) == False ::: Most builders do not consider papercrete promising for large-scale construction\nopinion(regular_users, small_scale) == True ::: Those who regularly work with papercrete think it is promising for small-scale projects\nopinion(regular_users, large_scale) == True ::: Those who regularly work with papercrete think it is promising for large-scale construction\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(Confuses(opinion(regular_users, small_scale), opinion(regular_users, large_scale))) ::: (A) confuses what is promising for small-scale construction with what is promising for large-scale construction\nis_vulnerable(Presumes(opinion(most_builders, large_scale) == True)) ::: (B) presumes that what the majority of builders thinks is promising must in fact be promising\nis_vulnerable(DoesNotConsider(opinion(regular_users, large_scale))) ::: (C) does not consider the views of the builders who have the most experience working with the material\nis_vulnerable(FailsToConsider(Not(opinion(most_builders, small_scale)))) ::: (D) fails to consider that most builders might not regularly use papercrete precisely because they are familiar with its properties"
    ]
  },
  {
    "id": "test_110",
    "context": "Economic growth accelerates business demand for the development of new technologies. Businesses supplying these new technologies are relatively few, while those wishing to buy them are many. Yet an acceleration of technological change can cause suppliers as well as buyers of new technologies to fail.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "The development of new technologies may accelerate economic growth in general.",
      "Economic growth increases business failures.",
      "Businesses that adopt new technologies are most likely to prosper in a period of general economic growth.",
      "Businesses that supply new technologies may not always benefit from economic growth."
    ],
    "raw_logic_programs": [
      "# Declarations\neconomic_growth = Bool('economic_growth')\nbusiness_demand = Bool('business_demand')\nnew_technologies = Bool('new_technologies')\nsuppliers_few = Bool('suppliers_few')\nbuyers_many = Bool('buyers_many')\ntechnological_change = Bool('technological_change')\nsuppliers_fail = Bool('suppliers_fail')\nbuyers_fail = Bool('buyers_fail')\n\n# Constraints\neconomic_growth == True ::: Economic growth accelerates business demand for the development of new technologies\nbusiness_demand == True ::: Economic growth accelerates business demand for the development of new technologies\nnew_technologies == True ::: Economic growth accelerates business demand for the development of new technologies\nsuppliers_few == True ::: Businesses supplying these new technologies are relatively few\nbuyers_many == True ::: Businesses wishing to buy them are many\ntechnological_change == True ::: An acceleration of technological change can cause suppliers as well as buyers of new technologies to fail\nsuppliers_fail == True ::: An acceleration of technological change can cause suppliers as well as buyers of new technologies to fail\nbuyers_fail == True ::: An acceleration of technological change can cause suppliers as well as buyers of new technologies to fail\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(Implies(economic_growth, new_technologies)) ::: (A) The development of new technologies may accelerate economic growth in general.\nis_supported(Implies(economic_growth, Or(suppliers_fail, buyers_fail))) ::: (B) Economic growth increases business failures.\nis_supported(Implies(And(economic_growth, new_technologies), Not(suppliers_fail))) ::: (C) Businesses that adopt new technologies are most likely to prosper in a period of general economic growth.\nis_supported(Implies(And(economic_growth, suppliers_few), suppliers_fail)) ::: (D) Businesses that supply new technologies may not always benefit from economic growth."
    ]
  },
  {
    "id": "test_111",
    "context": "The use of radar detectors in commercial vehicles was banned because commercial truck and bus drivers were using these devices to drive faster than the posted speed limit without fear of arrest. Since drivers of noncommercial vehicles also use radar detectors and since speeding decreases safety for any vehicle, use of radar detectors should also be banned in noncommercial vehicles to increase safety.",
    "question": "Which of the following, if true, most strongly supports the argument above?",
    "options": [
      "Traffic accidents involving a truck or bus generally pose a greater threat of injury or death than do other accidents.",
      "The ban on radar detectors in commercial vehicles has been effective in deterring them from speeding.",
      "In many places airplanes or helicopters are used rather than radar to locate vehicles traveling faster than the posted speed limit.",
      "Radar detectors are sometimes set off by devices other than the law enforcement devices that the radar detectors were built to detect."
    ],
    "raw_logic_programs": [
      "# Declarations\nvehicles = EnumSort([commercial, noncommercial])\nactions = EnumSort([use_radar_detector, do_not_use_radar_detector])\neffects = EnumSort([increase_safety, decrease_safety])\ndrivers = EnumSort([truck_bus_drivers, noncommercial_drivers])\npolicies = EnumSort([ban_radar_detectors, no_ban])\n\n# Constraints\nForAll([d:drivers], Implies(actions(d) == use_radar_detector, effects(d) == decrease_safety)) ::: Speeding decreases safety for any vehicle\nactions(truck_bus_drivers) == do_not_use_radar_detector ::: The use of radar detectors in commercial vehicles was banned\nForAll([d:drivers], Implies(actions(d) == do_not_use_radar_detector, effects(d) == increase_safety)) ::: Banning radar detectors increases safety\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the argument above?\nis_strong_support(Implies(policies(noncommercial) == ban_radar_detectors, effects(noncommercial_drivers) == increase_safety)) ::: (A) Traffic accidents involving a truck or bus generally pose a greater threat of injury or death than do other accidents.\nis_strong_support(Implies(policies(noncommercial) == ban_radar_detectors, actions(noncommercial_drivers) == do_not_use_radar_detector)) ::: (B) The ban on radar detectors in commercial vehicles has been effective in deterring them from speeding.\nis_strong_support(Implies(policies(noncommercial) == ban_radar_detectors, effects(noncommercial_drivers) == increase_safety)) ::: (C) In many places airplanes or helicopters are used rather than radar to locate vehicles traveling faster than the posted speed limit.\nis_strong_support(Implies(policies(noncommercial) == ban_radar_detectors, effects(noncommercial_drivers) == increase_safety)) ::: (D) Radar detectors are sometimes set off by devices other than the law enforcement devices that the radar detectors were built to detect."
    ]
  },
  {
    "id": "test_112",
    "context": "Millions of female bats rear their pups in Bracken Cave. Although the mothers all leave the cave nightly, on their return each mother is almost always swiftly reunited with her own pup. Since the bats' calls are their only means of finding one another, and a bat pup cannot distinguish the call of its mother from that of any other adult bat, it is clear that each mother bat can recognize the call of her pup.",
    "question": "The argument seeks to do which one of the following?",
    "options": [
      "conclude that members of two groups are likely to share a certain ability because of other characteristics they share",
      "establish the validity of one explanation for a phenomenon by excluding alternative explanations",
      "derive a general conclusion about all members of a group from facts known about representative members of that group",
      "support, by describing a suitable mechanism, the hypothesis that a certain phenomenon can occur"
    ],
    "raw_logic_programs": [
      "# Declarations\nbats = EnumSort([mother, pup])\nabilities = EnumSort([recognize_call])\nhas_ability = Function([bats, abilities] -> [bool])\n\n# Constraints\nForAll([b:bats], has_ability(b, recognize_call)) ::: Each mother bat can recognize the call of her pup\n\n# Options\nQuestion ::: The argument seeks to do which one of the following?\nis_valid(And(has_ability(mother, recognize_call), Not(has_ability(pup, recognize_call)))) ::: (A) conclude that members of two groups are likely to share a certain ability because of other characteristics they share\nis_valid(Exists([b:bats], has_ability(b, recognize_call))) ::: (B) establish the validity of one explanation for a phenomenon by excluding alternative explanations\nis_valid(ForAll([b:bats], has_ability(b, recognize_call))) ::: (C) derive a general conclusion about all members of a group from facts known about representative members of that group\nis_valid(Exists([b:bats], has_ability(b, recognize_call))) ::: (D) support, by describing a suitable mechanism, the hypothesis that a certain phenomenon can occur"
    ]
  },
  {
    "id": "test_113",
    "context": "A successful clothing department store, in a central downtown location of a certain city, is of a limited size and has grown so much over the past year that it needs to expand. There are a few other slightly larger available retail lots in the downtown regions for sale, but the prices per square foot are quite high. The management finds that cost per square foot of lots in a suburb a few miles from downtown is almost half of that in the downtown region, so they plan to relocate there to save costs.",
    "question": "Which of the following, if true, most seriously undermines this plan?",
    "options": [
      "Almost all of the store's other locations, in other metropolitan regions throughout the state, are in downtown areas; very few are in suburbs.",
      "The lot for the suburb location will require a sprawling parking lot.",
      "Some of the available downtown locations, though only a few blocks away, would be closest to entirely different bus and subway lines.",
      "Consumers from the city who do not own cars will have to pay bus fare to commute to this store now."
    ],
    "raw_logic_programs": [
      "# Declarations\nlocations = EnumSort([downtown, suburb])\nfactors = EnumSort([cost_per_square_foot, parking_lot, public_transport_access, consumer_access])\nimpact = Function([factors] -> [bool])\n\n# Constraints\nimpact(cost_per_square_foot) == True ::: The cost per square foot in the suburb is almost half of that in the downtown region\nimpact(parking_lot) == True ::: The lot for the suburb location will require a sprawling parking lot\nimpact(public_transport_access) == False ::: Some of the available downtown locations would be closest to entirely different bus and subway lines\nimpact(consumer_access) == False ::: Consumers from the city who do not own cars will have to pay bus fare to commute to this store now\n\n# Options\nQuestion ::: Which of the following, if true, most seriously undermines this plan?\nis_undermining(impact(consumer_access) == True) ::: (Almost all of the store's other locations, in other metropolitan regions throughout the state, are in downtown areas; very few are in suburbs.\nis_undermining(impact(parking_lot) == True) ::: (The lot for the suburb location will require a sprawling parking lot.\nis_undermining(impact(public_transport_access) == True) ::: (Some of the available downtown locations, though only a few blocks away, would be closest to entirely different bus and subway lines.\nis_undermining(impact(consumer_access) == True) ::: (Consumers from the city who do not own cars will have to pay bus fare to commute to this store now."
    ]
  },
  {
    "id": "test_114",
    "context": "An advertisement states: Like Danaxil, all headache pills can stop your headache. But when you are in pain, you want relief right away. Danaxil is for you -- no headache pill stops pain more quickly. Evelyn and Jane are each suffering from a headache. Suppose Evelyn takes Danaxil and Jane takes its leading competitor.",
    "question": "Which one of the following can be properly concluded from the claims in the advertisement?",
    "options": [
      "Evelyn's headache pain will be relieved more quickly than Jane's.",
      "Evelyn's headache pain will be relieved, but Jane's will not.",
      "Jane will be taking Danaxil for relief from headache pain.",
      "Evelyn's headache will be relieved at least as quickly as Jane's."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Evelyn, Jane])\npills = EnumSort([Danaxil, competitor])\ntakes = Function([people] -> [pills])\nrelief_time = Function([pills] -> [int])\n\n# Constraints\nForAll([p:pills], relief_time(p) >= 0) ::: Relief time is non-negative\nrelief_time(Danaxil) <= relief_time(competitor) ::: No headache pill stops pain more quickly than Danaxil\n\n# Options\nQuestion ::: Which one of the following can be properly concluded from the claims in the advertisement?\nis_valid(relief_time(takes(Evelyn)) < relief_time(takes(Jane))) ::: (Evelyn's headache pain will be relieved more quickly than Jane's.)\nis_valid(And(relief_time(takes(Evelyn)) < infinity, relief_time(takes(Jane)) == infinity)) ::: (Evelyn's headache pain will be relieved, but Jane's will not.)\nis_valid(takes(Jane) == Danaxil) ::: (Jane will be taking Danaxil for relief from headache pain.)\nis_valid(relief_time(takes(Evelyn)) <= relief_time(takes(Jane))) ::: (Evelyn's headache will be relieved at least as quickly as Jane's.)"
    ]
  },
  {
    "id": "test_115",
    "context": "Last month OCF, Inc. , announced what it described as a unique new product: an adjustable computer workstation. Three days later ErgoTech unveiled an almost identical product. The two companies claim that the similarities are coincidental and occurred because the designers independently reached the same solution to the same problem. The similarities are too fundamental to be mere coincidence, however. The two products not only look alike, but they also work alike. Both are oddly shaped with identically placed control panels with the same types of controls. Both allow the same types of adjustments and the same types of optional enhancements.",
    "question": "The main point of the argument is that",
    "options": [
      "the two products have many characteristics in common",
      "product designers sometimes reach the same solution to a given problem without consulting each other",
      "ErgoTech must have copied the design of its new product from OCF's design",
      "the similarities between the two products are not coincidental"
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([OCF, ErgoTech])\nproducts = EnumSort([adjustable_workstation])\nfeatures = EnumSort([appearance, functionality, control_panel, adjustments, enhancements])\nsimilarities = Function([products, features] -> [bool])\n\n# Constraints\nForAll([f:features], And(similarities(adjustable_workstation, f))) ::: The two products not only look alike, but they also work alike. Both are oddly shaped with identically placed control panels with the same types of controls. Both allow the same types of adjustments and the same types of optional enhancements.\n\n# Options\nQuestion ::: The main point of the argument is that\nis_main_point(similarities(adjustable_workstation, appearance) && similarities(adjustable_workstation, functionality) && similarities(adjustable_workstation, control_panel) && similarities(adjustable_workstation, adjustments) && similarities(adjustable_workstation, enhancements)) ::: (the two products have many characteristics in common)\nis_main_point(Exists([d1:designers, d2:designers], And(d1 != d2, same_solution(d1, d2)))) ::: (product designers sometimes reach the same solution to a given problem without consulting each other)\nis_main_point(copied_design(ErgoTech, OCF)) ::: (ErgoTech must have copied the design of its new product from OCF's design)\nis_main_point(Not(coincidental(similarities(adjustable_workstation, appearance) && similarities(adjustable_workstation, functionality) && similarities(adjustable_workstation, control_panel) && similarities(adjustable_workstation, adjustments) && similarities(adjustable_workstation, enhancements)))) ::: (the similarities between the two products are not coincidental)"
    ]
  },
  {
    "id": "test_116",
    "context": "Supply shortages and signs of growing demand are driving cocoa prices upward. Unusually severe weather in cocoa-producing regions-too much rain in Brazil and too little in West Africa-has limited production. Further, Europe and North America recently reported stronger demand for cocoa. In the first quarter, grinding of cocoa beans-the first stage in processing cocoa for chocolate-rose 8. 1 percent in Europe and 16 percent in North America. Analysts have concluded that cocoa' s price will continue to rise at least into the near future.",
    "question": "Which of the following would, if true, most strengthen the reasoning above?",
    "options": [
      "It takes new cocoa trees five or six years before they start bearing fruit.",
      "Ground cocoa beans can be stored for long periods before they spoil.",
      "Several European and North American manufacturers that use cocoa have recently improved their processing capacity.",
      "Governments in Europe and North America are likely to change current restrictions on cocoa imports."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([cocoa_trees, ground_cocoa_beans, manufacturers, government_restrictions])\neffects = EnumSort([bearing_fruit, storage, processing_capacity, import_restrictions])\nstrengthens = Function([variables] -> [effects])\n\n# Constraints\nForAll([v:variables], Exists([e:effects], strengthens(v) == e)) ::: Each variable has an effect that could potentially strengthen the reasoning\n\n# Options\nQuestion ::: Which of the following would, if true, most strengthen the reasoning above?\nstrengthens(cocoa_trees) == bearing_fruit ::: (It takes new cocoa trees five or six years before they start bearing fruit.)\nstrengthens(ground_cocoa_beans) == storage ::: (Ground cocoa beans can be stored for long periods before they spoil.)\nstrengthens(manufacturers) == processing_capacity ::: (Several European and North American manufacturers that use cocoa have recently improved their processing capacity.)\nstrengthens(government_restrictions) == import_restrictions ::: (Governments in Europe and North America are likely to change current restrictions on cocoa imports.)"
    ]
  },
  {
    "id": "test_117",
    "context": "In the United States, of the people who moved from one state to another when they retired, the percentage who retired to Florida has decreased by three percentage points over the past ten years. Since many local businesses in Florida cater to retirees, these declines are likely to have a noticeably negative economic effect on these businesses and ttherefore on the economy of Florida.",
    "question": "Which of the following, if true, most seriously weakens the argument given?",
    "options": [
      "People were more likely to retire to North Carolina from another state last year than people were ten years ago.",
      "Florida attracts more people who move from one state to another when they retire than does any other state.",
      "People who moved from one state to another when they retired moved a greater distance, on average, last year than such people did ten years ago.",
      "The number of people who moved from one state to another when they retired has increased significantly over the past ten years."
    ],
    "raw_logic_programs": [
      "# Declarations\nstates = EnumSort([Florida, North_Carolina, Other])\ntime_periods = EnumSort([ten_years_ago, last_year])\nretirees = Function([states, time_periods] -> [int])\nbusinesses = Function([states] -> [economic_effect])\n\n# Constraints\nretirees(Florida, last_year) < retirees(Florida, ten_years_ago) - 3 ::: the percentage who retired to Florida has decreased by three percentage points over the past ten years\nbusinesses(Florida) == negative ::: declines are likely to have a noticeably negative economic effect on these businesses and therefore on the economy of Florida\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument given?\nis_weakening(retirees(North_Carolina, last_year) > retirees(North_Carolina, ten_years_ago)) ::: (A) People were more likely to retire to North Carolina from another state last year than people were ten years ago.\nis_weakening(retirees(Florida, last_year) > retirees(Other, last_year)) ::: (B) Florida attracts more people who move from one state to another when they retire than does any other state.\nis_weakening(average_distance(last_year) > average_distance(ten_years_ago)) ::: (C) People who moved from one state to another when they retired moved a greater distance, on average, last year than such people did ten years ago.\nis_weakening(total_retirees(last_year) > total_retirees(ten_years_ago)) ::: (D) The number of people who moved from one state to another when they retired has increased significantly over the past ten years."
    ]
  },
  {
    "id": "test_118",
    "context": "Prediction, the hallmark of the natural sciences, appears to have been made possible by reducing phenomena to mathematical expressions. Some social scientists also want the power to predict accurately and assume they ought to perform the same reduction. But this would be a mistake; it would neglect data that are not easily mathematized and thereby would only distort the social phenomena.",
    "question": "Which one of the following most accurately expresses the main conclusion of the argument?",
    "options": [
      "Phenomena in the social sciences should not be reduced to mathematical formulas.",
      "Mathematics plays a more important role in the natural sciences than it does in the social sciences.",
      "There is a need in the social sciences to improve the ability to predict.",
      "Prediction is responsible for the success of the natural sciences."
    ],
    "raw_logic_programs": [
      "# Declarations\nphenomena = EnumSort([natural_sciences, social_sciences])\nactions = EnumSort([reduce_to_math, not_reduce_to_math])\nimportance = EnumSort([important, not_important])\nrole = Function([phenomena] -> [importance])\naction_taken = Function([phenomena] -> [actions])\n\n# Constraints\nrole(natural_sciences) == important ::: Mathematics plays a more important role in the natural sciences\nrole(social_sciences) == not_important ::: than it does in the social sciences\naction_taken(natural_sciences) == reduce_to_math ::: Prediction in natural sciences is made possible by reducing phenomena to mathematical expressions\naction_taken(social_sciences) == not_reduce_to_math ::: Reducing social phenomena to mathematical expressions would neglect data and distort the phenomena\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the main conclusion of the argument?\nis_main_conclusion(action_taken(social_sciences) == not_reduce_to_math) ::: (Phenomena in the social sciences should not be reduced to mathematical formulas.\nis_main_conclusion(role(natural_sciences) == important) ::: (Mathematics plays a more important role in the natural sciences than it does in the social sciences.\nis_main_conclusion(Exists([p:phenomena], action_taken(p) == reduce_to_math)) ::: (There is a need in the social sciences to improve the ability to predict.\nis_main_conclusion(action_taken(natural_sciences) == reduce_to_math) ::: (Prediction is responsible for the success of the natural sciences."
    ]
  },
  {
    "id": "test_119",
    "context": "Hynson: Families of the deceased who sue hospitals for wrongful death due to misdiagnosis are searching for someone to blame. The best option for the family would be to get a second opinion while the deceased person was still alive. Relying 100% on a doctor' s diagnosis is irresponsible. Martinez: Wrongful death cases for misdiagnosis are set in place for accountability on physicians and their attention to their patients. A physician can only be accused of wrongful death if it is deemed that a misdiagnosis would not have been overlooked by a competent physician.",
    "question": "Martinez responds to Hynson's argument by",
    "options": [
      "Providing a second interpretation for an event described in Hynson's argument.",
      "Providing evidence that undermines one of the premises of Hynson's argument.",
      "Arguing that the opinion supported in Hynson's argument could have disagreeable consequences.",
      "Disputing that Hynson's argument could be used to support a case that is inconsistent with the opinion of Hynson."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Hynson, Martinez])\nactions = EnumSort([interpretation, evidence, consequences, dispute])\nresponds = Function([arguments] -> [actions])\n\n# Constraints\nresponds(Hynson) == interpretation ::: Hynson's argument involves providing a perspective on the actions of families of the deceased\nresponds(Martinez) == evidence ::: Martinez provides evidence regarding the accountability of physicians in wrongful death cases\n\n# Options\nQuestion ::: Martinez responds to Hynson's argument by\nis_correct(responds(Martinez) == interpretation) ::: (Providing a second interpretation for an event described in Hynson's argument.\nis_correct(responds(Martinez) == evidence) ::: (Providing evidence that undermines one of the premises of Hynson's argument.\nis_correct(responds(Martinez) == consequences) ::: (Arguing that the opinion supported in Hynson's argument could have disagreeable consequences.\nis_correct(responds(Martinez) == dispute) ::: (Disputing that Hynson's argument could be used to support a case that is inconsistent with the opinion of Hynson."
    ]
  },
  {
    "id": "test_120",
    "context": "Anthropologist: There is no direct evidence that diamonds were traded between the ancient nations of Zaraf and Mogali, but the fact that a law setting tariffs on diamond imports from Zaraf was enacted during the reign of the fourth Mogalian Emperor does suggest that during that period a diamond trade was conducted. Political Scientist: Your reasoning is flawed. During the reign of the fourth Emperor, Mogali may well have imported diamonds from Zaraf; but certainly on today' s statute books, there remain many laws regulating activities that were once common but in which people no longer engage.",
    "question": "The political scientist's response to the anthropologist's reasoning does which one of the following?",
    "options": [
      "It points out the dissimilar roles that law plays in societies that are distinct from one another.",
      "It implies an analogy between the present and the past.",
      "It distinguishes between what has been established as a certainty and what has been established as a possibility.",
      "It establishes explicit criteria that must be used in evaluating indirect evidence."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([anthropologist, political_scientist])\nstatements = EnumSort([direct_evidence, law_enacted, diamond_trade, laws_regulating_activities])\nroles = EnumSort([certainty, possibility])\n\n# Constraints\nImplies(statements(direct_evidence) == False, statements(diamond_trade) == True) ::: Anthropologist: There is no direct evidence that diamonds were traded, but a law suggests a diamond trade was conducted\nImplies(statements(law_enacted) == True, Or(statements(diamond_trade) == True, statements(laws_regulating_activities) == True)) ::: Political Scientist: A law may indicate past activities that are no longer engaged in\n\n# Options\nQuestion ::: The political scientist's response to the anthropologist's reasoning does which one of the following?\nis_valid(Implies(statements(law_enacted) == True, statements(laws_regulating_activities) == True)) ::: (It points out the dissimilar roles that law plays in societies that are distinct from one another.\nis_valid(Implies(statements(law_enacted) == True, statements(diamond_trade) == True)) ::: (It implies an analogy between the present and the past.\nis_valid(Implies(statements(diamond_trade) == True, roles(certainty) == False)) ::: (It distinguishes between what has been established as a certainty and what has been established as a possibility.\nis_valid(Implies(statements(law_enacted) == True, roles(possibility) == True)) ::: (It establishes explicit criteria that must be used in evaluating indirect evidence."
    ]
  },
  {
    "id": "test_121",
    "context": "Toxicologist: Recent research has shown that dioxin causes cancer in rats. Although similar research has never been done on humans, and probably never will be, the use of dioxin should be completely banned.",
    "question": "That dioxin causes cancer in rats figures in the argument in which one of the following ways?",
    "options": [
      "It is presented as a finding that motivates the course of action advocated in the conclusion.",
      "It is presented as evidence for the claim that similar research has never been done on humans.",
      "It is presented as evidence for the claim that similar research will never be done on humans.",
      "It is presented as the hazard that the researcher is concerned with preventing."
    ],
    "raw_logic_programs": [
      "# Declarations\nargument_elements = EnumSort([dioxin_causes_cancer_in_rats, research_on_humans, course_of_action, hazard_prevention])\nroles = EnumSort([finding, evidence, hazard])\n\n# Constraints\nrole(dioxin_causes_cancer_in_rats) == finding ::: It is presented as a finding\nrole(research_on_humans) == evidence ::: It is presented as evidence for the claim that similar research has never been done on humans\nrole(course_of_action) == finding ::: It motivates the course of action advocated in the conclusion\nrole(hazard_prevention) == hazard ::: It is presented as the hazard that the researcher is concerned with preventing\n\n# Options\nQuestion ::: That dioxin causes cancer in rats figures in the argument in which one of the following ways?\nis_valid(role(dioxin_causes_cancer_in_rats) == finding) ::: (It is presented as a finding that motivates the course of action advocated in the conclusion.\nis_valid(role(dioxin_causes_cancer_in_rats) == evidence) ::: (It is presented as evidence for the claim that similar research has never been done on humans.\nis_valid(role(dioxin_causes_cancer_in_rats) == evidence) ::: (It is presented as evidence for the claim that similar research will never be done on humans.\nis_valid(role(dioxin_causes_cancer_in_rats) == hazard) ::: (It is presented as the hazard that the researcher is concerned with preventing."
    ]
  },
  {
    "id": "test_122",
    "context": "The attribution of the choral work Lacrimae to the composer Pescard (1400-1474) has been regarded as tentative, since it was based on a single treatise from the early 1500' s that named Pescard as the composer. Recently, several musical treatises from the late 1500' s have come to light, all of which name Pescard as the composer of Lacrimae. Unfortunately, these newly discovered treatises lend no support to the attribution of Lacrimae to Pescard, since __.",
    "question": "Which of the following most logically completes the argument?",
    "options": [
      "the treatise from the early 1500's misidentifies the composers of some of the musical works it considers",
      "there are works that can conclusively be attributed to Pescard that are not even mentioned in the treatise from the early 1500's",
      "the later treatises probably had no source for their attribution other than the earlier treatise",
      "the author of the treatise from the early 1500's had no very strong evidence on which to base the identification of Pescard as the composer of Lacrimae"
    ],
    "raw_logic_programs": [
      "# Declarations\ntreatises = EnumSort([early_1500s, late_1500s])\ncomposer = EnumSort([Pescard])\nwork = EnumSort([Lacrimae])\nattribution = Function([treatises, work] -> [composer])\n\n# Constraints\nattribution(early_1500s, Lacrimae) == Pescard ::: the treatise from the early 1500's names Pescard as the composer\nForAll([t:treatises], attribution(t, Lacrimae) == Pescard) ::: all treatises name Pescard as the composer of Lacrimae\n\n# Options\nQuestion ::: Which of the following most logically completes the argument?\nis_logical(attribution(late_1500s, Lacrimae) == attribution(early_1500s, Lacrimae)) ::: (the later treatises probably had no source for their attribution other than the earlier treatise)"
    ]
  },
  {
    "id": "test_123",
    "context": "Healthy lungs produce a natural antibiotic that protects them from infection by routinely killing harmful bacteria on airway surfaces. People with cystic fibrosis, however, are unable to fight off such bacteria, even though their lungs produce normal amounts of the antibiotic. The fluid on airway surfaces in the lungs of people with cystic fibrosis has an abnormally high salt concentration; accordingly, scientists hypothesize that the high salt concentration is what makes the antibiotic ineffective.",
    "question": "Which of the following, if true, most strongly supports the scientists' hypothesis?",
    "options": [
      "A sample of the antibiotic was capable of killing bacteria in an environment with an unusually low concentration of salt.",
      "When lung tissue from people with cystic fibrosis is maintained in a solution with a normal salt concentration, the tissue can resist bacteria.",
      "Many lung infections can be treated by applying synthetic antibiotics to the airway surfaces.",
      "When the salt concentration of the fluid on the airway surfaces of healthy people is raised artificially, the salt concentration soon returns to normal."
    ],
    "raw_logic_programs": [
      "# Declarations\nantibiotic_effectiveness = Function([salt_concentration] -> [bool])\nlung_tissue_resistance = Function([salt_concentration] -> [bool])\nsynthetic_antibiotic_effectiveness = Function([lung_condition] -> [bool])\nsalt_concentration_normalization = Function([salt_concentration] -> [bool])\n\n# Constraints\nantibiotic_effectiveness(normal) == True ::: Healthy lungs produce a natural antibiotic that protects them from infection\nantibiotic_effectiveness(high) == False ::: People with cystic fibrosis are unable to fight off bacteria due to high salt concentration\nlung_tissue_resistance(normal) == True ::: Lung tissue can resist bacteria in a normal salt concentration\nsynthetic_antibiotic_effectiveness(infected) == True ::: Many lung infections can be treated by applying synthetic antibiotics\nsalt_concentration_normalization(high) == True ::: Salt concentration returns to normal after being artificially raised\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the scientists' hypothesis?\nis_strong_support(antibiotic_effectiveness(low) == True) ::: (A) A sample of the antibiotic was capable of killing bacteria in an environment with an unusually low concentration of salt.\nis_strong_support(lung_tissue_resistance(normal) == True) ::: (B) When lung tissue from people with cystic fibrosis is maintained in a solution with a normal salt concentration, the tissue can resist bacteria.\nis_strong_support(synthetic_antibiotic_effectiveness(infected) == True) ::: (C) Many lung infections can be treated by applying synthetic antibiotics to the airway surfaces.\nis_strong_support(salt_concentration_normalization(high) == True) ::: (D) When the salt concentration of the fluid on the airway surfaces of healthy people is raised artificially, the salt concentration soon returns to normal."
    ]
  },
  {
    "id": "test_124",
    "context": "Veterinarians generally derive some of their income from selling several manufacturers' lines of pet-care products. Knowing that pet owners rarely throw away mail from their pet' s veterinarian unread, one manufacturer of pet-care products offered free promotional materials on its products to veterinarians for mailing to their clients. Very few veterinarians accepted the offer, however, even though the manufacturer's products are of high quality.",
    "question": "Which of the following, if true, most helps to explain the veterinarian's reaction to the manufacturer's promotional scheme?",
    "options": [
      "Most of the veterinarians to whom the free promotional materials were offered were already selling the manufacturer's pet-care products to their clients.",
      "The manufacturer's products, unlike most equally good competing products sold by veterinarians, are also available in pet stores and in supermarkets.",
      "The special promotional materials were intended as a supplement to the manufacturer's usual promotional activities rather than as a replacement for them.",
      "Veterinarians sometimes recommend that pet owners use products formulated for people when no suitable product specially formulated for animals is available."
    ],
    "raw_logic_programs": [
      "# Declarations\nveterinarians = EnumSort([Vet1, Vet2, Vet3, Vet4, Vet5])  # Example enumeration of veterinarians\nmanufacturers = EnumSort([Manufacturer1])  # The manufacturer offering the promotional materials\nproducts = EnumSort([Product1, Product2, Product3])  # Example enumeration of products\nsells = Function([veterinarians, products] -> [bool])  # Whether a veterinarian sells a product\npromotional_materials_offered = Function([veterinarians] -> [bool])  # Whether promotional materials were offered to a veterinarian\naccepted_offer = Function([veterinarians] -> [bool])  # Whether a veterinarian accepted the promotional offer\n\n# Constraints\nForAll([v:veterinarians], promotional_materials_offered(v)) ::: The manufacturer offered free promotional materials to veterinarians\nForAll([v:veterinarians], Not(accepted_offer(v))) ::: Very few veterinarians accepted the offer\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the veterinarian's reaction to the manufacturer's promotional scheme?\nis_explanation(ForAll([v:veterinarians], sells(v, Product1))) ::: (A) Most of the veterinarians to whom the free promotional materials were offered were already selling the manufacturer's pet-care products to their clients.\nis_explanation(ForAll([v:veterinarians], Not(sells(v, Product1)) && sells(v, Product2))) ::: (B) The manufacturer's products, unlike most equally good competing products sold by veterinarians, are also available in pet stores and in supermarkets.\nis_explanation(True) ::: (C) The special promotional materials were intended as a supplement to the manufacturer's usual promotional activities rather than as a replacement for them.\nis_explanation(True) ::: (D) Veterinarians sometimes recommend that pet owners use products formulated for people when no suitable product specially formulated for animals is available."
    ]
  },
  {
    "id": "test_125",
    "context": "If you have a large amount of money in the bank, your spending power is great. If your spending power is great, you are happy. So if you have a large amount of money in the bank, you are happy.",
    "question": "Which one of the following most closely parallels the reasoning in the argument above?",
    "options": [
      "If you swim energetically, your heart rate increases. If your heart rate increases, you are overexcited. So if you swim energetically, you are overexcited.",
      "If you take a great deal of exercise, you are physically fit. If you take a great deal of exercise, you are exhausted. So if you are physically fit, you are exhausted.",
      "If you drink too much alcohol, you will feel sick. If you drink too much alcohol, you will have no money left. So if you have no money left, you will feel sick.",
      "If you have a large amount of money in the bank, you are confident about the future. If you are optimistic by nature, you are confident about the future. So if you have a large amount of money in the bank, you are optimistic by nature."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([large_money, great_spending_power, happy])\nimplies = Function([conditions, conditions] -> [bool])\n\n# Constraints\nimplies(large_money, great_spending_power) ::: If you have a large amount of money in the bank, your spending power is great\nimplies(great_spending_power, happy) ::: If your spending power is great, you are happy\nimplies(large_money, happy) ::: So if you have a large amount of money in the bank, you are happy\n\n# Options\nQuestion ::: Which one of the following most closely parallels the reasoning in the argument above?\nis_parallel(implies(swim_energetically, heart_rate_increases), implies(heart_rate_increases, overexcited), implies(swim_energetically, overexcited)) ::: (A)\nis_parallel(implies(exercise, physically_fit), implies(exercise, exhausted), implies(physically_fit, exhausted)) ::: (B)\nis_parallel(implies(drink_alcohol, feel_sick), implies(drink_alcohol, no_money), implies(no_money, feel_sick)) ::: (C)\nis_parallel(implies(large_money, confident_future), implies(optimistic_nature, confident_future), implies(large_money, optimistic_nature)) ::: (D)"
    ]
  },
  {
    "id": "test_126",
    "context": "Psychologist: The obligation to express gratitude cannot be fulfilled anonymously. However much society may have changed over the centuries, human psychology is still driven primarily by personal interaction. Thus, the important social function of positively reinforcing those behaviors that have beneficial consequences for others can be served only if the benefactor knows the source of the gratitude.",
    "question": "Which one of the following most accurately describes the role played in the psychologist's argument by the claim that the obligation to express gratitude cannot be fulfilled anonymously?",
    "options": [
      "It is an illustration of a premise that is used to support the argument's conclusion.",
      "It is used to counter a consideration that might be taken to undermine the argument's conclusion.",
      "It is used to support indirectly a claim that the argument in turn uses to support directly the conclusion.",
      "It is the conclusion that the argument is intended to support."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `claims = EnumSort([obligation_anonymity, human_psychology, social_function])`\n- `roles = EnumSort([illustration, counter, indirect_support, conclusion])`\n- `plays_role = Function([claims] -> [roles])`\n\n# Constraints\n- `plays_role(obligation_anonymity) == illustration` ::: The obligation to express gratitude cannot be fulfilled anonymously is an illustration of a premise that is used to support the argument's conclusion.\n- `plays_role(human_psychology) == indirect_support` ::: Human psychology is still driven primarily by personal interaction is used to support indirectly a claim that the argument in turn uses to support directly the conclusion.\n- `plays_role(social_function) == conclusion` ::: The important social function of positively reinforcing those behaviors that have beneficial consequences for others can be served only if the benefactor knows the source of the gratitude is the conclusion that the argument is intended to support.\n\n# Options\n- `Question` ::: Which one of the following most accurately describes the role played in the psychologist's argument by the claim that the obligation to express gratitude cannot be fulfilled anonymously?\n- `is_accurate(plays_role(obligation_anonymity) == illustration)` ::: (A) It is an illustration of a premise that is used to support the argument's conclusion.\n- `is_accurate(plays_role(obligation_anonymity) == counter)` ::: (B) It is used to counter a consideration that might be taken to undermine the argument's conclusion.\n- `is_accurate(plays_role(obligation_anonymity) == indirect_support)` ::: (C) It is used to support indirectly a claim that the argument in turn uses to support directly the conclusion.\n- `is_accurate(plays_role(obligation_anonymity) == conclusion)` ::: (D) It is the conclusion that the argument is intended to support."
    ]
  },
  {
    "id": "test_127",
    "context": "To protect beachfront buildings from ocean storms, ocean resorts have built massive seawalls between beaches and the buildings. Not only do the seawalls block off some buildings' ocean view, but the beaches themselves become ever narrower, because sand can no longer creep inland as storms erode it at the water' s edge.",
    "question": "If the information is correct, which of the following conclusions is most strongly supported on the basis of it?",
    "options": [
      "The conservation of beaches for future generations should be the overriding goal of shore management at ocean coasts.",
      "Seawalls constructed to protect beachfront buildings will not themselves eventually be damaged by storms and will not require, if they are to protect the buildings, expensive repair or replacement.",
      "Trying to protect beachfront buildings by constructing seawalls is counterproductive in the long run for an oceanfront community wishing to maintain itself as a beach resort.",
      "Even when beaches are heavily used by people, they are necessary to the survival of the many wild species that use them."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([seawalls_block_view, beaches_narrow, sand_cannot_creep_inland, storms_erode_sand])\nconclusions = EnumSort([conserve_beaches, seawalls_not_damaged, seawalls_counterproductive, beaches_necessary_for_wildlife])\nsupports = Function([statements, conclusions] -> [bool])\n\n# Constraints\nsupports(seawalls_block_view, seawalls_counterproductive) ::: Seawalls block off some buildings' ocean view\nsupports(beaches_narrow, seawalls_counterproductive) ::: Beaches become narrower\nsupports(sand_cannot_creep_inland, seawalls_counterproductive) ::: Sand can no longer creep inland\nsupports(storms_erode_sand, seawalls_counterproductive) ::: Storms erode sand at the water's edge\n\n# Options\nQuestion ::: If the information is correct, which of the following conclusions is most strongly supported on the basis of it?\nis_strongly_supported(supports(seawalls_block_view, seawalls_counterproductive) and supports(beaches_narrow, seawalls_counterproductive) and supports(sand_cannot_creep_inland, seawalls_counterproductive) and supports(storms_erode_sand, seawalls_counterproductive)) ::: (C) Trying to protect beachfront buildings by constructing seawalls is counterproductive in the long run for an oceanfront community wishing to maintain itself as a beach resort."
    ]
  },
  {
    "id": "test_128",
    "context": "Activist: Food producers irradiate food in order to prolong its shelf life. Five animal studies were recently conducted to investigate whether this process alters food in a way that could be dangerous to people who eat it. The studies concluded that irradiated food is safe for humans to eat. However, because these studies were subsequently found by a panel of independent scientists to be seriously flawed in their methodology, it follows that irradiated food is not safe for human consumption.",
    "question": "The reasoning in the activist's argument is flawed because that argument",
    "options": [
      "fails to consider the possibility that what is safe for animals might not always be safe for human beings",
      "treats a failure to prove a claim as constituting proof of the denial of that claim",
      "fails to consider the possibility that even a study whose methodology has no serious flaws nonetheless might provide only weak support for its conclusion",
      "fails to establish that the independent scientists know more about food irradiation than do the people who produced the five studies"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([activist, studies, panel])\nclaims = EnumSort([irradiated_food_safe, irradiated_food_not_safe, flawed_methodology])\nconcludes = Function([arguments] -> [claims])\n\n# Constraints\nconcludes(activist) == irradiated_food_not_safe ::: Activist concludes that irradiated food is not safe for human consumption\nconcludes(studies) == irradiated_food_safe ::: Studies concluded that irradiated food is safe for humans to eat\nconcludes(panel) == flawed_methodology ::: Panel found the studies to be seriously flawed in their methodology\n\n# Options\nQuestion ::: The reasoning in the activist's argument is flawed because that argument\nis_flawed(treats_failure_as_proof(concludes(panel) == flawed_methodology, concludes(activist) == irradiated_food_not_safe)) ::: (treats a failure to prove a claim as constituting proof of the denial of that claim)\nis_flawed(fails_to_consider(concludes(studies) == irradiated_food_safe, concludes(activist) == irradiated_food_not_safe)) ::: (fails to consider the possibility that what is safe for animals might not always be safe for human beings)\nis_flawed(fails_to_consider(concludes(panel) == flawed_methodology, weak_support(concludes(studies) == irradiated_food_safe))) ::: (fails to consider the possibility that even a study whose methodology has no serious flaws nonetheless might provide only weak support for its conclusion)\nis_flawed(fails_to_establish(knowledge(panel), knowledge(studies))) ::: (fails to establish that the independent scientists know more about food irradiation than do the people who produced the five studies)"
    ]
  },
  {
    "id": "test_129",
    "context": "Physicists attempting to create new kinds of atoms often do so by fusing together two existing atoms. For such fusion to occur, the two atoms must collide with enough energy -- thatis, at high enough speeds -- to overcome the electromagnetic force by which atoms repel each other. But if the energy with which two atoms collide greatly exceeds the minimum required for the fusion to take place, the excess energy will be converted into heat, making the resulting new atom very hot. And the hotter the atom is, the greater the chance that it will immediately split apart again.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "When physicists create new kinds of atoms by fusing together two existing atoms, the new atoms usually split apart again immediately.",
      "The stronger the electromagnetic force by which two atoms repel each other, the hotter any new atom will be that is created by the fusion of those two atoms.",
      "Whenever two existing atoms are made to collide and fuse together into a new atom, little energy is produced in the collision unless the new atom immediately splits apart.",
      "If two atoms collide with considerably more energy than is needed for fusion to take place, the new atom will be likely to i^mmediately split apart again."
    ],
    "raw_logic_programs": [
      "# Declarations\natoms = EnumSort([atom1, atom2, new_atom])\nenergy = Function([atoms] -> [real])\nfusion_possible = Function([atoms, atoms] -> [bool])\nsplits_apart = Function([atoms] -> [bool])\n\n# Constraints\nForAll([a1:atoms, a2:atoms], Implies(fusion_possible(a1, a2), energy(a1) + energy(a2) >= min_fusion_energy)) ::: For such fusion to occur, the two atoms must collide with enough energy\nForAll([a1:atoms, a2:atoms], Implies(energy(a1) + energy(a2) > min_fusion_energy, splits_apart(new_atom))) ::: If the energy with which two atoms collide greatly exceeds the minimum required for the fusion to take place, the excess energy will be converted into heat, making the resulting new atom very hot\nForAll([a:atoms], Implies(splits_apart(a), energy(a) > min_fusion_energy)) ::: The hotter the atom is, the greater the chance that it will immediately split apart again\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(ForAll([a1:atoms, a2:atoms], Implies(fusion_possible(a1, a2), splits_apart(new_atom)))) ::: (A)\nis_supported(ForAll([a1:atoms, a2:atoms], Implies(stronger_electromagnetic_force(a1, a2), energy(new_atom) > energy(a1) + energy(a2)))) ::: (B)\nis_supported(ForAll([a1:atoms, a2:atoms], Implies(fusion_possible(a1, a2), energy(new_atom) < energy(a1) + energy(a2)))) ::: (C)\nis_supported(ForAll([a1:atoms, a2:atoms], Implies(energy(a1) + energy(a2) >> min_fusion_energy, splits_apart(new_atom)))) ::: (D)"
    ]
  },
  {
    "id": "test_130",
    "context": "Syndicated political columnists often use their newspaper columns to try to persuade readers to vote a certain way. However, their efforts to persuade voters rarely succeed, for by the time such a column appears, nearly all who will vote in the election will have already made a decision about which candidate to vote for.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "People who regularly read columns by syndicated political columnists mainly read those written by columnists with whom they already largely agree.",
      "Syndicated columnists influence the votes of most of their readers who have not yet decided which candidate to vote for.",
      "The attempts of syndicated political columnists to persuade readers to vote a certain way in an election can instead cause them to vote a different way.",
      "People rarely can be persuaded to change their minds about which candidate to vote for once they have made a decision."
    ],
    "raw_logic_programs": [
      "# Declarations\nvoters = EnumSort([decided, undecided])\ncolumnists = EnumSort([syndicated])\ninfluence = Function([columnists, voters] -> [bool])\n\n# Constraints\nForAll([v:voters], Or(v == decided, v == undecided)) ::: Voters are either decided or undecided\nForAll([c:columnists], Not(influence(c, decided))) ::: Syndicated columnists do not influence decided voters\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_required(ForAll([c:columnists], ForAll([v:voters], Implies(v == undecided, influence(c, v))))) ::: (A) People who regularly read columns by syndicated political columnists mainly read those written by columnists with whom they already largely agree.\nis_required(Exists([c:columnists], Exists([v:voters], And(v == undecided, influence(c, v))))) ::: (B) Syndicated columnists influence the votes of most of their readers who have not yet decided which candidate to vote for.\nis_required(ForAll([c:columnists], ForAll([v:voters], Implies(influence(c, v), Not(influence(c, decided)))))) ::: (C) The attempts of syndicated political columnists to persuade readers to vote a certain way in an election can instead cause them to vote a different way.\nis_required(ForAll([v:voters], Implies(v == decided, Not(influence(columnists, v))))) ::: (D) People rarely can be persuaded to change their minds about which candidate to vote for once they have made a decision."
    ]
  },
  {
    "id": "test_131",
    "context": "At the request of Grove Park residents, speed bumps were installed on all streets in their neighborhood. However, although through traffic does cause noise and congestion in Grove Park, this remedy is blatantly unfair. The neighborhood is not a private community, and its streets were built with public funds, and thus all drivers have the right to use them whenever they please.",
    "question": "The reasoning in the argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "contains the tacit assumption that residents of neighborhoods should have the right to restrict traffic through their communities",
      "presumes, without providing justification, that speed bumps do prevent drivers from using the roads on which the bumps are found",
      "provides no evidence that drivers have complained about the new speed bumps in the neighborhood",
      "ignores the possibility that speed bumps may not reduce the speeds at which drivers drive through the neighborhood"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Grove_Park, speed_bumps, public_funds, drivers_rights])\ncriticism = EnumSort([tacit_assumption, presumption_without_justification, no_evidence_of_complaints, ignores_possibility])\nvulnerable_to_criticism = Function([arguments] -> [criticism])\n\n# Constraints\nvulnerable_to_criticism(Grove_Park) == tacit_assumption ::: contains the tacit assumption that residents of neighborhoods should have the right to restrict traffic through their communities\nvulnerable_to_criticism(speed_bumps) == presumption_without_justification ::: presumes, without providing justification, that speed bumps do prevent drivers from using the roads on which the bumps are found\nvulnerable_to_criticism(public_funds) == no_evidence_of_complaints ::: provides no evidence that drivers have complained about the new speed bumps in the neighborhood\nvulnerable_to_criticism(drivers_rights) == ignores_possibility ::: ignores the possibility that speed bumps may not reduce the speeds at which drivers drive through the neighborhood\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(vulnerable_to_criticism(Grove_Park) == tacit_assumption) ::: (A)\nis_vulnerable(vulnerable_to_criticism(speed_bumps) == presumption_without_justification) ::: (B)\nis_vulnerable(vulnerable_to_criticism(public_funds) == no_evidence_of_complaints) ::: (C)\nis_vulnerable(vulnerable_to_criticism(drivers_rights) == ignores_possibility) ::: (D)"
    ]
  },
  {
    "id": "test_132",
    "context": "Psychologist: People tend to make certain cognitive errors when they predict how a given event would affect their future happiness. But people should not necessarily try to rid themselves of this tendency. After all, in a visual context, lines that are actually parallel often appear to people as if they converge. If a surgeon offered to restructure your eyes and visual cortex so that parallel lines would no longer ever appear to converge, it would not be reasonable to take the surgeon up on the offer.",
    "question": "The psychologist's argument does which one of the following?",
    "options": [
      "attempts to establish a generalization and then uses that generalization to argue against a particular action",
      "argues that an action might not be appropriate by suggesting that a corresponding action in an analogous situation is not appropriate",
      "argues that two situations are similar by establishing that the same action would be reasonable in each situation",
      "attempts to refute a claim that a particular event is inevitable by establishing the possibility of an alternative event"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([cognitive_errors, visual_errors])\nactions = EnumSort([rid_tendency, restructure_eyes])\nsituations = EnumSort([cognitive_situation, visual_situation])\nappropriateness = Function([actions, situations] -> [bool])\n\n# Constraints\nForAll([s:situations], Exists([a:actions], appropriateness(a, s))) ::: Each situation has an action that is considered appropriate\nNot(appropriateness(restructure_eyes, visual_situation)) ::: It is not appropriate to restructure eyes in the visual situation\n\n# Options\nQuestion ::: The psychologist's argument does which one of the following?\nis_valid(And(Not(appropriateness(rid_tendency, cognitive_situation)), appropriateness(restructure_eyes, visual_situation))) ::: (A) attempts to establish a generalization and then uses that generalization to argue against a particular action\nis_valid(And(Not(appropriateness(rid_tendency, cognitive_situation)), Not(appropriateness(restructure_eyes, visual_situation)))) ::: (B) argues that an action might not be appropriate by suggesting that a corresponding action in an analogous situation is not appropriate\nis_valid(And(appropriateness(rid_tendency, cognitive_situation), appropriateness(restructure_eyes, visual_situation))) ::: (C) argues that two situations are similar by establishing that the same action would be reasonable in each situation\nis_valid(And(Not(appropriateness(rid_tendency, cognitive_situation)), Exists([a:actions], appropriateness(a, cognitive_situation)))) ::: (D) attempts to refute a claim that a particular event is inevitable by establishing the possibility of an alternative event"
    ]
  },
  {
    "id": "test_133",
    "context": "Many high school students interested in journalism think of journalism careers as involving glamorous international news gathering. But most journalists cover primarily local news, and the overwhelming majority of reporters work for local newspapers. Thus, high school career counselors should tell students who are interested in journalism what life is like for a typical reporter, that is, a reporter for a local newspaper.",
    "question": "Which one of the following principles would, if valid, most help to justify the reasoning above?",
    "options": [
      "One should not encourage people to seek unattainable goals if one wishes to maximize those people's chances to lead happy lives.",
      "Students who are choosing a career should be encouraged to try to reach the top levels of that career.",
      "Career counselors are not doing their job properly if they encourage people to make career choices that are initially appealing but that those people will later regret.",
      "A career counselor should try to disabuse students of any unrealistic conceptions they may have about the likely consequences of choosing a particular career."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([unattainable_goals, top_levels, regret_choices, disabuse_unrealistic])\nvalid = Function([principles] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description for the principles.\n\n# Options\nQuestion ::: Which one of the following principles would, if valid, most help to justify the reasoning above?\nis_valid(valid(disabuse_unrealistic)) ::: (A) A career counselor should try to disabuse students of any unrealistic conceptions they may have about the likely consequences of choosing a particular career.\nis_valid(valid(unattainable_goals)) ::: (B) One should not encourage people to seek unattainable goals if one wishes to maximize those people's chances to lead happy lives.\nis_valid(valid(top_levels)) ::: (C) Students who are choosing a career should be encouraged to try to reach the top levels of that career.\nis_valid(valid(regret_choices)) ::: (D) Career counselors are not doing their job properly if they encourage people to make career choices that are initially appealing but that those people will later regret."
    ]
  },
  {
    "id": "test_134",
    "context": "Politician: Nobody can deny that homelessness is a problem yet there seems to be little agreement on how to solve it. One thing, however is clear: ignoring the problem will not make it go away. Only if the government steps in and provides the homeless with housing will this problem disappear, and this necessitates increased taxation. For this reason, we should raise taxes.",
    "question": "Which one of the following principles, if valid, most supports the politician's argument?",
    "options": [
      "If a measure is required to solve a problem, then it should be adopted.",
      "Only if a measure is sufficient to solve a problem should it be adopted.",
      "Only if a measure is required to solve a problem should it be adopted.",
      "If a measure is sufficient to solve a problem, then it should be adopted."
    ],
    "raw_logic_programs": [
      "# Declarations\nproblems = EnumSort([homelessness])\nmeasures = EnumSort([government_housing, increased_taxation])\nactions = Function([measures] -> [bool])\nsolves = Function([measures, problems] -> [bool])\n\n# Constraints\nsolves(government_housing, homelessness) ::: Only if the government steps in and provides the homeless with housing will this problem disappear\nactions(increased_taxation) ::: this necessitates increased taxation\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most supports the politician's argument?\nis_valid(Implies(ForAll([p:problems], Exists([m:measures], solves(m, p))), ForAll([m:measures], actions(m)))) ::: (A) If a measure is required to solve a problem, then it should be adopted.\nis_valid(Implies(ForAll([m:measures], solves(m, homelessness)), ForAll([m:measures], actions(m)))) ::: (B) Only if a measure is sufficient to solve a problem should it be adopted.\nis_valid(Implies(Exists([m:measures], solves(m, homelessness)), ForAll([m:measures], actions(m)))) ::: (C) Only if a measure is required to solve a problem should it be adopted.\nis_valid(Implies(Exists([m:measures], solves(m, homelessness)), Exists([m:measures], actions(m)))) ::: (D) If a measure is sufficient to solve a problem, then it should be adopted."
    ]
  },
  {
    "id": "test_135",
    "context": "New evidence suggests that the collapse of Egypt' s old kingdom some 4, 000 years ago was caused by environmental catastrophe rather than internal social upheaval. Ocean sediments reveal a period of global cooling at the time, a condition generally associated with extended droughts. There were, no doubt, serious social problems in Egypt at the time, but they resulted from a severe dry spell.",
    "question": "Which one of the following, if true, would most strengthen the argument?",
    "options": [
      "Shortly after the collapse of the old kingdom, Egypt was thrust into a civil war that lasted most of the next two centuries.",
      "At the time of the collapse of the old kingdom, several isolated but well-established civilizations near Egypt underwent sudden declines.",
      "The social problems in Egypt's old kingdom at the time of its collapse were serious enough to have caused the collapse.",
      "Egyptian records recovered from the time of the collapse explicitly refer to the deteriorating conditions of the society."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([collapse, global_cooling, drought, social_problems])\ncauses = Function([events, events] -> [bool])\n\n# Constraints\ncauses(global_cooling, drought) ::: Ocean sediments reveal a period of global cooling at the time, a condition generally associated with extended droughts\ncauses(drought, social_problems) ::: There were, no doubt, serious social problems in Egypt at the time, but they resulted from a severe dry spell\ncauses(drought, collapse) ::: The collapse of Egypt's old kingdom was caused by environmental catastrophe\n\n# Options\nQuestion ::: Which one of the following, if true, would most strengthen the argument?\nis_strongest(causes(collapse, civil_war)) ::: (A) Shortly after the collapse of the old kingdom, Egypt was thrust into a civil war that lasted most of the next two centuries.\nis_strongest(Exists([c:events], And(c != collapse, causes(c, collapse)))) ::: (B) At the time of the collapse of the old kingdom, several isolated but well-established civilizations near Egypt underwent sudden declines.\nis_strongest(Not(causes(social_problems, collapse))) ::: (C) The social problems in Egypt's old kingdom at the time of its collapse were serious enough to have caused the collapse.\nis_strongest(Exists([c:events], And(c != collapse, causes(c, collapse)))) ::: (D) Egyptian records recovered from the time of the collapse explicitly refer to the deteriorating conditions of the society."
    ]
  },
  {
    "id": "test_136",
    "context": "Outbreaks of Rift Valley fever occur irregularly in East Africa, several years apart. When outbreaks do occur, they kill thousands of cattle. A livestock vaccine against the disease exists but is rarely used. It is too expensive for farmers to use routinely, and since it is not effective until a month after vaccination, administering it after an outbreak begins helps very little. Nevertheless, experts predict that use of the vaccine will increase significantly within the next few years.",
    "question": "Which of the following, if true, provides the strongest justification for the experts' prediction?",
    "options": [
      "Recently published research has shown that certain identifiable climatic conditions are almost invariably followed, within two to five months, by an outbreak of Rift Valley fever.",
      "When an outbreak of Rift Valley fever occurs, unaffected countries often refuse to import livestock from the countries affected by the outbreak.",
      "Rift Valley fever is spread by mosquitoes, but each outbreak is so widespread that it is impractical to control it by using insecticides.",
      "Many cattle farmers in East Africa are nomadic or live in remote villages, and such farmers, who have little access to modern veterinary medicine, are particularly hard hit by outbreaks of Rift Valley fever."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([climatic_conditions, import_refusal, mosquito_spread, remote_farmers])\njustification = Function([conditions] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the question is about finding the strongest justification.\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest justification for the experts' prediction?\nis_strongest(justification(climatic_conditions)) ::: (A) Recently published research has shown that certain identifiable climatic conditions are almost invariably followed, within two to five months, by an outbreak of Rift Valley fever.\nis_strongest(justification(import_refusal)) ::: (B) When an outbreak of Rift Valley fever occurs, unaffected countries often refuse to import livestock from the countries affected by the outbreak.\nis_strongest(justification(mosquito_spread)) ::: (C) Rift Valley fever is spread by mosquitoes, but each outbreak is so widespread that it is impractical to control it by using insecticides.\nis_strongest(justification(remote_farmers)) ::: (D) Many cattle farmers in East Africa are nomadic or live in remote villages, and such farmers, who have little access to modern veterinary medicine, are particularly hard hit by outbreaks of Rift Valley fever."
    ]
  },
  {
    "id": "test_137",
    "context": "Although all contemporary advertising tries to persuade, only a small portion of contemporary advertising can be considered morally reprehensible. It nevertheless follows that some attempts at persuasion can be regarded as morally reprehensible.",
    "question": "Which one of the following, in its logical features, most closely parallels the reasoning used in the passage?",
    "options": [
      "Some short poems are thematically pluralistic, since some sonnets are characterized by such pluralism, and all sonnets are short poems.",
      "A good manager always makes important decisions on the basis of adequate data, although of course some managers fail to do this. It follows that some managers are not good managers.",
      "There is a direct correlation between the number of times you repeat something and the degree to which you retain it. Ttherefore, repetition is always a critical factor in remembering.",
      "None of the chemicals used for cleaning the Sistine Chapel will affect the original dyes. Hence, the colors used by Michelangelo will be fully restored."
    ],
    "raw_logic_programs": [
      "# Declarations\nadvertising = EnumSort([contemporary, morally_reprehensible])\npersuasion = EnumSort([attempts, morally_reprehensible])\nrelation = Function([advertising] -> [bool])\npersuasion_relation = Function([persuasion] -> [bool])\n\n# Constraints\nForAll([a:advertising], Implies(relation(a), a == contemporary)) ::: all contemporary advertising tries to persuade\nExists([a:advertising], And(relation(a), a == morally_reprehensible)) ::: only a small portion of contemporary advertising can be considered morally reprehensible\nExists([p:persuasion], And(persuasion_relation(p), p == morally_reprehensible)) ::: some attempts at persuasion can be regarded as morally reprehensible\n\n# Options\nQuestion ::: Which one of the following, in its logical features, most closely parallels the reasoning used in the passage?\nis_parallel(Some(short_poems, thematically_pluralistic), Since(Some(sonnets, characterized_by_pluralism), All(sonnets, short_poems))) ::: (A)\nis_parallel(A_good_manager(always_makes_important_decisions_on_adequate_data), Although(Some(managers, fail_to_do_this), It_follows(Some(managers, not_good_managers)))) ::: (B)\nis_parallel(There_is_a_direct_correlation(between_repetition_and_retention), Therefore(repetition_is_always_critical_in_remembering)) ::: (C)\nis_parallel(None_of_the_chemicals(used_for_cleaning_Sistine_Chapel_affect_original_dyes), Hence(colors_used_by_Michelangelo_fully_restored)) ::: (D)"
    ]
  },
  {
    "id": "test_138",
    "context": "Consumer advocate: TMD, a pesticide used on peaches, shows no effects on human health when it is ingested in the amount present in the per capita peach consumption in this country. But while 80 percent of the population eat no peaches, others, including small children, consume much more than the national average, and thus ingest disproportionately large amounts of TMD. So even though the use of TMD on peaches poses minimal risk to most of the population, it has not been shown to be an acceptable practice.",
    "question": "Which one of the following principles, if valid, most helps to justify the consumer advocate's argumentation?",
    "options": [
      "Use of a pesticide is acceptable only if it is used for its intended purpose and the pesticide has been shown not to harm any portion of the population.",
      "The possibility that more data about a pesticide's health effects might reveal previously unknown risks at low doses warrants caution in assessing that pesticide's overall risks.",
      "The consequences of using a pesticide are unlikely to be acceptable when a majority of the population is likely to ingest it.",
      "Society has a special obligation to protect small children from pesticides unless average doses received by the population are low and have not been shown to be harmful to children's health."
    ],
    "raw_logic_programs": [
      "# Declarations\npopulation_segments = EnumSort([most_population, small_children])\npesticide_use = Function([population_segments] -> [bool])\nharmful_effects = Function([population_segments] -> [bool])\n\n# Constraints\nNot(harmful_effects(most_population)) ::: TMD shows no effects on human health for most of the population\nharmful_effects(small_children) ::: Small children ingest disproportionately large amounts of TMD\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the consumer advocate's argumentation?\nis_valid(And(pesticide_use(most_population), Not(harmful_effects(most_population)), Not(harmful_effects(small_children)))) ::: (Use of a pesticide is acceptable only if it is used for its intended purpose and the pesticide has been shown not to harm any portion of the population.\nis_valid(Exists([p:population_segments], And(pesticide_use(p), Not(harmful_effects(p))))) ::: (The possibility that more data about a pesticide's health effects might reveal previously unknown risks at low doses warrants caution in assessing that pesticide's overall risks.\nis_valid(And(pesticide_use(most_population), Not(harmful_effects(most_population)))) ::: (The consequences of using a pesticide are unlikely to be acceptable when a majority of the population is likely to ingest it.\nis_valid(And(pesticide_use(small_children), Not(harmful_effects(small_children)))) ::: (Society has a special obligation to protect small children from pesticides unless average doses received by the population are low and have not been shown to be harmful to children's health."
    ]
  },
  {
    "id": "test_139",
    "context": "Ethicist: Although science is frequently said to be morally neutral, it has a traditional value system of its own. For example, scientists sometimes foresee that a line of theoretical research they are pursuing will yield applications that could seriously harm people, animals, or the environment. Yet, according to science' s traditional value system, such consequences do not have to be considered in deciding whether to pursue that research. Ordinary morality, in contrast, requires that we take the foreseeable consequences of our actions into account whenever we are deciding what to do.",
    "question": "The ethicist's statements, if true, most strongly support which one of the following?",
    "options": [
      "It is possible for scientists to both adhere to the traditional values of their field and violate a principle of ordinary morality.",
      "Science is morally neutral because it assigns no value to the consequences of theoretical research.",
      "Scientists should not be held responsible for the consequences of their research.",
      "The uses and effects of scientifically acquired knowledge can never be adequately foreseen."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([science_morally_neutral, traditional_value_system, foresee_harm, ordinary_morality])\nconsequences = EnumSort([consider_consequences, not_consider_consequences])\nactions = EnumSort([pursue_research, not_pursue_research])\nmorality = EnumSort([adhere_traditional_values, violate_ordinary_morality])\n\n# Constraints\nForAll([s:statements], Implies(s == science_morally_neutral, not_consider_consequences)) ::: Science is frequently said to be morally neutral\nForAll([s:statements], Implies(s == traditional_value_system, not_consider_consequences)) ::: Science's traditional value system does not require considering consequences\nForAll([s:statements], Implies(s == foresee_harm, pursue_research)) ::: Scientists foresee harm but still pursue research\nForAll([s:statements], Implies(s == ordinary_morality, consider_consequences)) ::: Ordinary morality requires considering consequences\n\n# Options\nQuestion ::: The ethicist's statements, if true, most strongly support which one of the following?\nis_supported(And(adhere_traditional_values, violate_ordinary_morality)) ::: (It is possible for scientists to both adhere to the traditional values of their field and violate a principle of ordinary morality.\nis_supported(science_morally_neutral) ::: (Science is morally neutral because it assigns no value to the consequences of theoretical research.\nis_supported(Not(consider_consequences)) ::: (Scientists should not be held responsible for the consequences of their research.\nis_supported(Not(foresee_harm)) ::: (The uses and effects of scientifically acquired knowledge can never be adequately foreseen."
    ]
  },
  {
    "id": "test_140",
    "context": "Tarun: Researchers at a local university claim that 61 percent of the information transferred during a conversation is communicated through nonverbal signals. But this claim, like all such mathematically precise claims, is suspect, because claims of such exactitude could never be established by science. Shilpa: While precision is unobtainable in many areas of life, it is commonplace in others. Many scientific disciplines obtain extremely precise results, which should not be doubted merely because of their precision.",
    "question": "The statements above provide the most support for holding that Shilpa would disagree with Tarun about which one of the following statements?",
    "options": [
      "Some sciences can yield mathematically precise results that are not inherently suspect.",
      "The study of verbal and nonverbal communication is an area where one cannot expect great precision in one's research results.",
      "If inherently suspect claims are usually false, then the majority of claims made by scientists are false as well.",
      "Research might reveal that 61 percent of the information taken in during a conversation is communicated through nonverbal signals."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\npositions = EnumSort([agree, disagree])\nholds = Function([statements] -> [positions])\n\n# Constraints\nholds(A) == disagree ::: Shilpa would disagree with Tarun about the statement: Some sciences can yield mathematically precise results that are not inherently suspect.\nholds(B) == agree ::: Shilpa would agree with Tarun about the statement: The study of verbal and nonverbal communication is an area where one cannot expect great precision in one's research results.\nholds(C) == agree ::: Shilpa would agree with Tarun about the statement: If inherently suspect claims are usually false, then the majority of claims made by scientists are false as well.\nholds(D) == disagree ::: Shilpa would disagree with Tarun about the statement: Research might reveal that 61 percent of the information taken in during a conversation is communicated through nonverbal signals.\n\n# Options\nQuestion ::: The statements above provide the most support for holding that Shilpa would disagree with Tarun about which one of the following statements?\nis_disagree(holds(A) == disagree) ::: (A)\nis_disagree(holds(B) == disagree) ::: (B)\nis_disagree(holds(C) == disagree) ::: (C)\nis_disagree(holds(D) == disagree) ::: (D)"
    ]
  },
  {
    "id": "test_141",
    "context": "Max: Although doing so would be very costly, humans already possess the technology to build colonies on the Moon. As the human population increases and the amount of unoccupied space available for constructing housing on Earth diminishes, there will be a growing economic incentive to construct such colonies to house some of the population. Thus, such colonies will almost certainly be built and severe overcrowding on Earth relieved.",
    "question": "Max's argument is most vulnerable to criticism on which one of the following grounds?",
    "options": [
      "It takes for granted that the economic incentive to construct colonies on the Moon will grow sufficiently to cause such a costly project to be undertaken.",
      "It overlooks the possibility that colonies will be built on the Moon regardless of any economic incentive to construct such colonies to house some of the population.",
      "It overlooks the possibility that colonies on the Moon might themselves quickly become overcrowded.",
      "It takes for granted that the only way of relieving severe overcrowding on Earth is the construction of colonies on the Moon."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Max])\ncriticisms = EnumSort([economic_incentive, other_reasons, overcrowding_moon, only_solution])\nvulnerable_to = Function([arguments] -> [criticisms])\n\n# Constraints\nvulnerable_to(Max) == economic_incentive ::: Max's argument assumes that the economic incentive will be sufficient to justify the costly project.\n\n# Options\nQuestion ::: Max's argument is most vulnerable to criticism on which one of the following grounds?\nis_vulnerable(vulnerable_to(Max) == economic_incentive) ::: (It takes for granted that the economic incentive to construct colonies on the Moon will grow sufficiently to cause such a costly project to be undertaken.)\nis_vulnerable(vulnerable_to(Max) == other_reasons) ::: (It overlooks the possibility that colonies will be built on the Moon regardless of any economic incentive to construct such colonies to house some of the population.)\nis_vulnerable(vulnerable_to(Max) == overcrowding_moon) ::: (It overlooks the possibility that colonies on the Moon might themselves quickly become overcrowded.)\nis_vulnerable(vulnerable_to(Max) == only_solution) ::: (It takes for granted that the only way of relieving severe overcrowding on Earth is the construction of colonies on the Moon.)"
    ]
  },
  {
    "id": "test_142",
    "context": "Several Tyrannosaurus rex skeletons found in North America contain tooth marks that only a large carnivore could have made. At the time T. rex lived, it was the only large carnivore in North America. The tooth marks could have resulted only from combat or feeding. But such tooth marks would have been almost impossible to inflict on the skeleton of a live animal.",
    "question": "The information above most strongly supports which one of the following?",
    "options": [
      "At the time T. rex lived, it was common for carnivores to feed on other carnivores.",
      "T. rex sometimes engaged in intraspecies combat.",
      "T. rex sometimes engaged in cannibalism.",
      "At the time T. rex lived, there were large carnivores on continents other than North America."
    ],
    "raw_logic_programs": [
      "# Declarations\ncarnivores = EnumSort([T_rex])\nactivities = EnumSort([combat, feeding])\nmarks = Function([carnivores, activities] -> [bool])\n\n# Constraints\nForAll([c:carnivores], Or(marks(c, combat), marks(c, feeding))) ::: The tooth marks could have resulted only from combat or feeding\nForAll([c:carnivores], Not(marks(c, combat))) ::: Such tooth marks would have been almost impossible to inflict on the skeleton of a live animal\nmarks(T_rex, feeding) ::: At the time T. rex lived, it was the only large carnivore in North America\n\n# Options\nQuestion ::: The information above most strongly supports which one of the following?\nis_supported(marks(T_rex, feeding)) ::: (At the time T. rex lived, it was common for carnivores to feed on other carnivores.\nis_supported(marks(T_rex, combat)) ::: (T. rex sometimes engaged in intraspecies combat.\nis_supported(marks(T_rex, feeding)) ::: (T. rex sometimes engaged in cannibalism.\nis_supported(False) ::: (At the time T. rex lived, there were large carnivores on continents other than North America."
    ]
  },
  {
    "id": "test_143",
    "context": "In 1992 outlaw fishing boats began illegally harvesting lobsters from the territorial waters of the country of Belukia. Soon after, the annual tonnage of lobster legally harvested in Belukian waters began declining; in 1996, despite there being no reduction in the level of legal lobster fishing activity, the local catch was 9, 000 tons below pre-1992 levels. It is ttherefore highly likely that the outlaw fishing boats harvested about 9, 000 tons of lobster illegally that year.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "The illegal lobster harvesting was not so extensive that the population of catchable lobsters in Belukia's territorial waters had sharply declined by 1996.",
      "A significant proportion of Belukia's operators of licensed lobster-fishing boats went out of business between 1992 and 1996.",
      "The average annual lobster catch, in tons, of an outlaw fishing boat has increased steadily since 1992.",
      "The annual legal lobster harvest in Belukia in 1996 was not significantly less than 9, 000 tons."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([illegal_harvesting, legal_harvesting_decline, no_reduction_legal_activity, catch_decline_9000_tons])\nassumptions = EnumSort([no_population_decline, operators_out_of_business, increase_outlaw_catch, legal_harvest_not_less_than_9000])\n\n# Constraints\nAnd(events(illegal_harvesting), events(legal_harvesting_decline), events(no_reduction_legal_activity), events(catch_decline_9000_tons)) ::: In 1992 outlaw fishing boats began illegally harvesting lobsters, leading to a decline in legal harvest and a 9,000-ton shortfall in 1996\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(no_population_decline) ::: (The illegal lobster harvesting was not so extensive that the population of catchable lobsters in Belukia's territorial waters had sharply declined by 1996.)\nis_assumption(operators_out_of_business) ::: (A significant proportion of Belukia's operators of licensed lobster-fishing boats went out of business between 1992 and 1996.)\nis_assumption(increase_outlaw_catch) ::: (The average annual lobster catch, in tons, of an outlaw fishing boat has increased steadily since 1992.)\nis_assumption(legal_harvest_not_less_than_9000) ::: (The annual legal lobster harvest in Belukia in 1996 was not significantly less than 9,000 tons.)"
    ]
  },
  {
    "id": "test_144",
    "context": "The country of Ertland has never imported apples in any significant quantity because consumers there generally prefer the unique texture of Ertland-grown apples. Nevertheless, apple growers from Kosolia, a neighboring country, plan to sell their apples in Ertland by selling Kosolia-grown apples at half the price of local apples and promoting them as a nourishing, low-cost alternative.",
    "question": "Which of the following, if true, casts most doubt on the viability of the plan by Kosolia's apple growers to sell their apples in Ertland?",
    "options": [
      "Profit of Ertland-grown apples are high enough in Ertland that growers, wholesalers, and retailers there could easily afford to reduce the price at which these apples are sold.",
      "At times in the past, Ertland has exported significant quantities of apples to Kosolia.",
      "Some varieties of apples grown in Kosolia can be harvested throughout most of the year, whereas the varieties grown in Ertland can be harvested only during two months of the year.",
      "Most of the varieties of apples grown in Ertland were originally derived from common Kosolian varieties."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([Ertland, Kosolia])\napples = EnumSort([Ertland_grown, Kosolia_grown])\npreferences = Function([countries] -> [apples])\nprices = Function([apples] -> [float])\npromotions = Function([apples] -> [bool])\n\n# Constraints\npreferences(Ertland) == Ertland_grown ::: Consumers in Ertland generally prefer the unique texture of Ertland-grown apples\nprices(Kosolia_grown) == 0.5 * prices(Ertland_grown) ::: Kosolia-grown apples are sold at half the price of local apples\npromotions(Kosolia_grown) == True ::: Kosolia-grown apples are promoted as a nourishing, low-cost alternative\n\n# Options\nQuestion ::: Which of the following, if true, casts most doubt on the viability of the plan by Kosolia's apple growers to sell their apples in Ertland?\nis_doubtful(prices(Ertland_grown) > 0.5 * prices(Ertland_grown)) ::: (Profit of Ertland-grown apples are high enough in Ertland that growers, wholesalers, and retailers there could easily afford to reduce the price at which these apples are sold.\nis_doubtful(Exists([c:countries], exports(Ertland, c) > 0)) ::: (At times in the past, Ertland has exported significant quantities of apples to Kosolia.\nis_doubtful(Exists([v:apples], harvest_time(Kosolia_grown, v) > harvest_time(Ertland_grown, v))) ::: (Some varieties of apples grown in Kosolia can be harvested throughout most of the year, whereas the varieties grown in Ertland can be harvested only during two months of the year.\nis_doubtful(Exists([v:apples], derived_from(Ertland_grown, v) == Kosolia_grown)) ::: (Most of the varieties of apples grown in Ertland were originally derived from common Kosolian varieties."
    ]
  },
  {
    "id": "test_145",
    "context": "The painted spider spins webs that are much stickier than the webs spun by the other species of spiders that share the same habitat. Stickier webs are more efficient at trapping insects that fly into them. Spiders prey on insects by trapping them in their webs; ttherefore, it can be concluded that the painted spider is a more successful predator than its competitors.",
    "question": "Which one of the following, if true, most seriously weakens the argument?",
    "options": [
      "Butterflies and moths, which can shed scales, are especially unlikely to be trapped by spider webs that are not very sticky.",
      "Not all of the species of insects living in the painted spider's habitat are flying insects.",
      "Although the painted spider's venom does not kill insects quickly, it paralyzes them almost instantaneously.",
      "Stickier webs reflect more light, and so are more visible to insects, than are less-sticky webs."
    ],
    "raw_logic_programs": [
      "# Declarations\nspiders = EnumSort([painted_spider, other_spiders])\nweb_stickiness = Function([spiders] -> [bool])\nprey_efficiency = Function([spiders] -> [bool])\ninsect_types = EnumSort([flying_insects, non_flying_insects])\nweb_visibility = Function([spiders] -> [bool])\n\n# Constraints\nweb_stickiness(painted_spider) == True ::: The painted spider spins webs that are much stickier\nForAll([s:spiders], prey_efficiency(s) == web_stickiness(s)) ::: Stickier webs are more efficient at trapping insects\nprey_efficiency(painted_spider) == True ::: The painted spider is a more successful predator\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the argument?\nis_weakening(ForAll([i:insect_types], Implies(i == flying_insects, Not(prey_efficiency(painted_spider))))) ::: (A) Butterflies and moths, which can shed scales, are especially unlikely to be trapped by spider webs that are not very sticky.\nis_weakening(Exists([i:insect_types], i == non_flying_insects)) ::: (B) Not all of the species of insects living in the painted spider's habitat are flying insects.\nis_weakening(ForAll([s:spiders], prey_efficiency(s) == True)) ::: (C) Although the painted spider's venom does not kill insects quickly, it paralyzes them almost instantaneously.\nis_weakening(web_visibility(painted_spider) == True) ::: (D) Stickier webs reflect more light, and so are more visible to insects, than are less-sticky webs."
    ]
  },
  {
    "id": "test_146",
    "context": "To reduce waste of raw materials, the government of Sperland is considering requiring household appliances to be broken down for salvage when discarded. To cover the cost of salvage, the government is planning to charge a fee, which would be imposed when the appliance is first sold. Imposing the fee at the time of salvage would reduce waste more effectively, however, because consumers tend to keep old appliances longer if they are faced with a fee for discarding them.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "People who sell their used, working appliances to others would not need to pay the salvage fee.",
      "Increasing the cost of disposing of an appliance properly increases the incentive to dispose of it improperly.",
      "Many nonfunctioning appliances that are currently discarded could be repaired at relatively little expense.",
      "For people who have bought new appliances recently, the salvage fee would not need to be paid for a number of years."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nweakens = Function([arguments] -> [bool])\n\n# Constraints\nForAll([a:arguments], weakens(a) == False) ::: Initially assume no argument weakens the main argument\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nweakens(A) == True ::: (A) People who sell their used, working appliances to others would not need to pay the salvage fee.\nweakens(B) == True ::: (B) Increasing the cost of disposing of an appliance properly increases the incentive to dispose of it improperly.\nweakens(C) == True ::: (C) Many nonfunctioning appliances that are currently discarded could be repaired at relatively little expense.\nweakens(D) == True ::: (D) For people who have bought new appliances recently, the salvage fee would not need to be paid for a number of years."
    ]
  },
  {
    "id": "test_147",
    "context": "The element ytterbium increases its electrical resistance when subject to high mechanical stresses. This property has made it an indispensable component in a medical tool designed to measure the stress on bones, which can guide physicians in setting broken bones. Unfortunately, ytterbium is rare, found in only a few meager sources around the world. A steep market demand will cause the price to skyrocket, and this technology so helpful to physicians will become unaffordable.",
    "question": "Which of the following, if true, most seriously weakens the argument above?",
    "options": [
      "Just one mining company controls all the ytterbium that is imported into the United States, where these medical tools are manufactured.",
      "The largest source of ytterbium is in a relatively remote region of China.",
      "Some common alloys of tin also increase their electrical resistance under mechanical loads.",
      "Ytterbium is also used as an additive, in small quantities, to stainless steel and solid-state lasers."
    ],
    "raw_logic_programs": [
      "# Declarations\nelements = EnumSort([ytterbium, tin])\nproperties = EnumSort([increases_resistance])\nuses = EnumSort([medical_tools, stainless_steel, solid_state_lasers])\ncountries = EnumSort([United_States, China])\ncompanies = EnumSort([mining_company])\nsources = EnumSort([large, small, remote])\n\n# Constraints\nForAll([e:elements], Implies(e == ytterbium, properties(e) == increases_resistance)) ::: Ytterbium increases its electrical resistance when subject to high mechanical stresses\nForAll([e:elements], Implies(e == ytterbium, Exists([u:uses], u == medical_tools))) ::: Ytterbium is an indispensable component in a medical tool\nForAll([e:elements], Implies(e == ytterbium, Exists([s:sources], s == small))) ::: Ytterbium is rare, found in only a few meager sources\nForAll([e:elements], Implies(e == ytterbium, Exists([c:countries], c == China))) ::: The largest source of ytterbium is in a relatively remote region of China\nForAll([e:elements], Implies(e == ytterbium, Exists([c:companies], c == mining_company))) ::: Just one mining company controls all the ytterbium imported into the United States\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument above?\nis_weakening(Exists([e:elements], And(e == tin, properties(e) == increases_resistance))) ::: (Some common alloys of tin also increase their electrical resistance under mechanical loads.\nis_weakening(Exists([e:elements, u:uses], And(e == ytterbium, u == stainless_steel))) ::: (Ytterbium is also used as an additive, in small quantities, to stainless steel and solid-state lasers."
    ]
  },
  {
    "id": "test_148",
    "context": "Editorialist: Advertisers devote millions of dollars to the attempt to instill attitudes and desires that lead people to purchase particular products, and advertisers' techniques have been adopted by political strategists in democratic countries, who are paid to manipulate public opinion in every political campaign. Thus, the results of elections in democratic countries cannot be viewed as representing the unadulterated preferences of the people.",
    "question": "Which one of the following, if true, most strengthens the editorialist's argument?",
    "options": [
      "Unlike advertisements for consumer products, most of which only reinforce existing beliefs, political advertisements often change voters' beliefs.",
      "Advertisers' techniques are often apparent to the people to whom the advertisements are directed.",
      "People who neither watch television nor read any print media are more likely to vote than people who do one or both of these activities.",
      "Public opinion can be manipulated more easily by officials of nondemocratic governments than by those of democratic governments."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([advertisers, political_strategists])\neffects = EnumSort([reinforce_beliefs, change_beliefs, apparent_techniques, media_influence, manipulation_ease])\nstrengthens = Function([arguments, effects] -> [bool])\n\n# Constraints\nstrengthens(advertisers, reinforce_beliefs) ::: Advertisers' techniques often reinforce existing beliefs\nstrengthens(political_strategists, change_beliefs) ::: Political strategists' techniques often change voters' beliefs\nstrengthens(advertisers, apparent_techniques) ::: Advertisers' techniques are often apparent to the people\nstrengthens(media_influence, media_influence) ::: Media consumption influences voting likelihood\nstrengthens(manipulation_ease, manipulation_ease) ::: Public opinion is more easily manipulated in nondemocratic governments\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the editorialist's argument?\nis_strongest(strengthens(political_strategists, change_beliefs)) ::: (A) Unlike advertisements for consumer products, most of which only reinforce existing beliefs, political advertisements often change voters' beliefs.\nis_strongest(strengthens(advertisers, apparent_techniques)) ::: (B) Advertisers' techniques are often apparent to the people to whom the advertisements are directed.\nis_strongest(strengthens(media_influence, media_influence)) ::: (C) People who neither watch television nor read any print media are more likely to vote than people who do one or both of these activities.\nis_strongest(strengthens(manipulation_ease, manipulation_ease)) ::: (D) Public opinion can be manipulated more easily by officials of nondemocratic governments than by those of democratic governments."
    ]
  },
  {
    "id": "test_149",
    "context": "When a study of aspirin' s ability to prevent heart attacks in humans yielded positive results, researchers immediately submitted those results to a medical journal, which published them six weeks later. Had the results been published sooner, many of the heart attacks that occurred during the delay could have been prevented.",
    "question": "The conclusion drawn above would be most undermined if it were true that",
    "options": [
      "a person's risk of suffering a heart attack drops only after that person has taken aspirin regularly for two years",
      "the medical journal's staff worked overtime in order to publish the study's results as soon as possible",
      "studies of aspirin's usefulness in reducing heart attacks in laboratory animals remain inconclusive",
      "the medical journal's official policy is to publish articles only after an extensive review process"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([study_results, journal_submission, journal_publication, heart_attack_prevention])\ntime = Function([events] -> [int])\n\n# Constraints\ntime(journal_submission) < time(journal_publication) ::: researchers submitted results before publication\ntime(journal_publication) - time(journal_submission) == 6 ::: results were published six weeks after submission\ntime(heart_attack_prevention) > time(journal_publication) ::: heart attacks could have been prevented after publication\n\n# Options\nQuestion ::: The conclusion drawn above would be most undermined if it were true that\nis_undermined(time(heart_attack_prevention) - time(journal_publication) < 104) ::: (a person's risk of suffering a heart attack drops only after that person has taken aspirin regularly for two years)\nis_undermined(time(journal_publication) - time(journal_submission) < 6) ::: (the medical journal's staff worked overtime in order to publish the study's results as soon as possible)\nis_undermined(False) ::: (studies of aspirin's usefulness in reducing heart attacks in laboratory animals remain inconclusive)\nis_undermined(False) ::: (the medical journal's official policy is to publish articles only after an extensive review process)"
    ]
  },
  {
    "id": "test_150",
    "context": "In order to determine automobile insurance premiums for a driver, insurance companies calculate various risk factors; as the risk factors increase, so does the premium. Certain factors, such as the driver' s age and past accident history, play an important role in these calculations. Yet these premiums should also increase with the frequency with which a person drives. After all, a person' s chance of being involved in a mishap increases in proportion to the number of times that person drives.",
    "question": "Which one of the following, if true, most undermines the argument?",
    "options": [
      "People who drive infrequently are less likely to follow rules for safe driving than are people who drive frequently.",
      "People who drive frequently are more likely to become distracted while driving than are people who drive infrequently.",
      "People who drive infrequently are more likely to be involved in accidents that occur on small roads than in highway accidents.",
      "People who drive frequently are more likely to make long-distance trips in the course of a year than are people who drive infrequently."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrivers = EnumSort([frequent, infrequent])\nrisk_factors = EnumSort([age, accident_history, driving_frequency])\npremiums = Function([drivers, risk_factors] -> [int])\n\n# Constraints\nForAll([d:drivers, r:risk_factors], premiums(d, r) >= 0) ::: Insurance premiums are non-negative\nForAll([d:drivers], premiums(d, driving_frequency) > 0) ::: Premiums should increase with the frequency of driving\n\n# Options\nQuestion ::: Which one of the following, if true, most undermines the argument?\nis_undermining(ForAll([d:drivers], Implies(d == infrequent, premiums(d, driving_frequency) > premiums(frequent, driving_frequency)))) ::: (A) People who drive infrequently are less likely to follow rules for safe driving than are people who drive frequently.\nis_undermining(ForAll([d:drivers], Implies(d == frequent, premiums(d, driving_frequency) > premiums(infrequent, driving_frequency)))) ::: (B) People who drive frequently are more likely to become distracted while driving than are people who drive infrequently.\nis_undermining(ForAll([d:drivers], Implies(d == infrequent, premiums(d, accident_history) > premiums(frequent, accident_history)))) ::: (C) People who drive infrequently are more likely to be involved in accidents that occur on small roads than in highway accidents.\nis_undermining(ForAll([d:drivers], Implies(d == frequent, premiums(d, driving_frequency) > premiums(infrequent, driving_frequency)))) ::: (D) People who drive frequently are more likely to make long-distance trips in the course of a year than are people who drive infrequently."
    ]
  },
  {
    "id": "test_151",
    "context": "Travel agents are market intermediaries who make their living by gathering, organizing, and dispensing information about travel-related services that is not readily available to most consumers. Through new information technologies, such as the internet, much of this information can now be made directly available to consumers. Demand for the services of travel agents will be drastically reduced.",
    "question": "Which of the following, if true , most seriously weakens the argument ?",
    "options": [
      "The Internet and other new information technologies are currently used by a relatively small proportion of the population",
      "The amount of information available through the internet and other new information technologies is increasing faster than the capabilities of most consumers to process it",
      "Travel agents routinely use the internet and other new information technologies as sources for the information they obtain for their customers.",
      "Many people use travel-related services, such as airlines and hotels without consulting a travel agent ."
    ],
    "raw_logic_programs": [
      "# Declarations\nagents = EnumSort([TravelAgents])\ntechnologies = EnumSort([Internet, NewInformationTechnologies])\nservices = EnumSort([TravelRelatedServices])\nconsumers = EnumSort([Consumers])\ninformation = EnumSort([Information])\n\n# Constraints\nForAll([a:agents], Exists([i:information], And(gathers(a, i), organizes(a, i), dispenses(a, i)))) ::: Travel agents gather, organize, and dispense information about travel-related services\nForAll([i:information], Not(readily_available(i, consumers))) ::: Information is not readily available to most consumers\nForAll([t:technologies], Exists([i:information], directly_available(i, consumers, t))) ::: Through new information technologies, information can be made directly available to consumers\ndemand_reduction(agents) ::: Demand for the services of travel agents will be drastically reduced\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(Exists([t:technologies], small_proportion_of_population_uses(t))) ::: (The Internet and other new information technologies are currently used by a relatively small proportion of the population)\nis_weakening(Exists([i:information], And(available_through(t, i), faster_than_capabilities_to_process(consumers, i)))) ::: (The amount of information available through the internet and other new information technologies is increasing faster than the capabilities of most consumers to process it)\nis_weakening(Exists([a:agents, t:technologies], uses(a, t))) ::: (Travel agents routinely use the internet and other new information technologies as sources for the information they obtain for their customers.)\nis_weakening(Exists([s:services], uses_without_consulting_agent(consumers, s))) ::: (Many people use travel-related services, such as airlines and hotels without consulting a travel agent.)"
    ]
  },
  {
    "id": "test_152",
    "context": "Chairperson: The board of directors of our corporation should not allow the incentives being offered by two foreign governments to entice us to expand our operations into their countries without further consideration of the issue. Although there is an opportunity to increase our profits by expanding our operations there, neither of these countries is politically stable.",
    "question": "The chairperson's reasoning most closely conforms to which one of the following principles?",
    "options": [
      "Corporations should always be cautious about expanding operations into politically unstable countries.",
      "A corporation should never expand operations into countries that are politically unstable.",
      "Political stability is the most important consideration in deciding whether to expand operations into a country.",
      "Corporations should expand operations into countries when there is a chance of increasing profits."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([cautious_expansion, never_expand, stability_priority, profit_opportunity])\nreasoning = Function([principles] -> [bool])\n\n# Constraints\nreasoning(cautious_expansion) ::: Corporations should always be cautious about expanding operations into politically unstable countries\nreasoning(never_expand) ::: A corporation should never expand operations into countries that are politically unstable\nreasoning(stability_priority) ::: Political stability is the most important consideration in deciding whether to expand operations into a country\nreasoning(profit_opportunity) ::: Corporations should expand operations into countries when there is a chance of increasing profits\n\n# Options\nQuestion ::: The chairperson's reasoning most closely conforms to which one of the following principles?\nis_valid(reasoning(cautious_expansion)) ::: (A)\nis_valid(reasoning(never_expand)) ::: (B)\nis_valid(reasoning(stability_priority)) ::: (C)\nis_valid(reasoning(profit_opportunity)) ::: (D)"
    ]
  },
  {
    "id": "test_153",
    "context": "CEO: Our company raises chickens and adheres to the most stringent ethical standards known to man. All of the chickens live in cage-free environments with more than enough room to stretch their wings. The chicken feed consists of corn and soybean meal supplemented with essential vitamins. Hormones and steroids are strictly prohibited. In addition, the chickens receive regular attention from professional veterinarians. Activist: Your company' s chicken farm may meet the existing ethical standards, but those standards fail to adequately protect the chickens. Cage-free is misleading, given the fact that chickens basically live in a closed facility. At no point in their lives do chickens see the Sun and breathe fresh air. Chicken feed might not include hormones and steroids, but it is genetically-modified. Professional veterinarians treat the chickens, yet more than half of the flock does not survive before meeting maturity.",
    "question": "The CEO and activist would most likely agree on which one of the following statements?",
    "options": [
      "The ethical standards can be improved.",
      "Ethical standards are important.",
      "Chickens need time outside to lead happy lives.",
      "The current ethical standards are adequate."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([improve_standards, standards_important, chickens_need_outside, standards_adequate])\nagree = Function([statements] -> [bool])\n\n# Constraints\nagree(improve_standards) == False ::: The CEO and activist do not agree on improving standards, as the CEO believes they are already stringent, while the activist believes they are inadequate.\nagree(chickens_need_outside) == False ::: The CEO does not mention the need for chickens to be outside, while the activist criticizes the lack of outdoor time.\nagree(standards_adequate) == False ::: The CEO believes the standards are adequate, while the activist does not.\n\n# Options\nQuestion ::: The CEO and activist would most likely agree on which one of the following statements?\nis_true(agree(standards_important)) ::: (Ethical standards are important.)"
    ]
  },
  {
    "id": "test_154",
    "context": "Philosopher: Graham argues that since a person is truly happy only when doing something, the best life is a life that is full of activity. But we should not be persuaded by Graham' s argument. People sleep, and at least sometimes when sleeping, they are truly happy, even though they are not doing anything.",
    "question": "Which one of the following most accurately describes the role played in the philosopher's argument by the claim that at least sometimes when sleeping, people are truly happy, even though they are not doing anything?",
    "options": [
      "It is a premise of Graham's argument.",
      "It is an example intended to show that a premise of Graham's argument is false.",
      "It is an example intended to disprove the conclusion of Graham's argument.",
      "It is an analogy appealed to by Graham but that the philosopher rejects."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Graham, Philosopher])\nclaims = EnumSort([happy_when_doing, happy_when_sleeping, best_life_active])\nroles = EnumSort([premise, example_false_premise, example_disprove_conclusion, analogy_rejected])\nplays_role = Function([claims, arguments] -> [roles])\n\n# Constraints\nplays_role(happy_when_doing, Graham) == premise ::: Graham argues that a person is truly happy only when doing something\nplays_role(best_life_active, Graham) == conclusion ::: Graham concludes that the best life is a life full of activity\nplays_role(happy_when_sleeping, Philosopher) == example_false_premise ::: The philosopher uses the claim that people can be happy when sleeping to show a premise of Graham's argument is false\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the philosopher's argument by the claim that at least sometimes when sleeping, people are truly happy, even though they are not doing anything?\nis_role(plays_role(happy_when_sleeping, Philosopher) == premise) ::: (A) It is a premise of Graham's argument.\nis_role(plays_role(happy_when_sleeping, Philosopher) == example_false_premise) ::: (B) It is an example intended to show that a premise of Graham's argument is false.\nis_role(plays_role(happy_when_sleeping, Philosopher) == example_disprove_conclusion) ::: (C) It is an example intended to disprove the conclusion of Graham's argument.\nis_role(plays_role(happy_when_sleeping, Philosopher) == analogy_rejected) ::: (D) It is an analogy appealed to by Graham but that the philosopher rejects."
    ]
  },
  {
    "id": "test_155",
    "context": "Columnist: The failure of bicyclists to obey traffic regulations is a causal factor in more than one quarter of the traffic accidents involving bicycles. Since inadequate bicycle safety equipment is also a factor in more than a quarter of such accidents, bicyclists are at least partially responsible for more than half of the traffic accidents involving bicycles.",
    "question": "The columnist's reasoning is flawed in that it",
    "options": [
      "fails to consider that the severity of injuries to bicyclists from traffic accidents can vary widely",
      "fails to consider the possibility that more than one factor may contribute to a given accident",
      "improperly infers the presence of a causal connection on the basis of a correlation",
      "fails to provide the source of the figures it cites"
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([failure_to_obey, inadequate_equipment])\naccidents = EnumSort([accident1, accident2, accident3, ...])  # Representing traffic accidents involving bicycles\nresponsibility = Function([accidents] -> [bool])\n\n# Constraints\nForAll([a:accidents], Or(responsibility(a) == failure_to_obey, responsibility(a) == inadequate_equipment)) ::: The failure of bicyclists to obey traffic regulations and inadequate bicycle safety equipment are factors in more than a quarter of such accidents\n\n# Options\nQuestion ::: The columnist's reasoning is flawed in that it\nis_flawed(Exists([a:accidents], And(responsibility(a) == failure_to_obey, responsibility(a) == inadequate_equipment))) ::: (fails to consider the possibility that more than one factor may contribute to a given accident)\nis_flawed(ForAll([a:accidents], Implies(responsibility(a) == failure_to_obey, responsibility(a) != inadequate_equipment))) ::: (improperly infers the presence of a causal connection on the basis of a correlation)\nis_flawed(Exists([a:accidents], responsibility(a) == failure_to_obey)) ::: (fails to provide the source of the figures it cites)\nis_flawed(Exists([a:accidents], responsibility(a) == inadequate_equipment)) ::: (fails to consider that the severity of injuries to bicyclists from traffic accidents can vary widely)"
    ]
  },
  {
    "id": "test_156",
    "context": "Bell: Commentators in the media are wrong to criticize the policies Klein implemented. Although her policies are unpopular, they avoided an impending catastrophe. Klein is just the person we need making important decisions in the future. Soltan: Klein' s policies have been effective, but politics matters. In the future, important decisions will need to be made, and she will not have the political support to make them. So she should step down.",
    "question": "Bell and Soltan disagree with each other about which one of the following?",
    "options": [
      "Klein should step down.",
      "Klein's policies have been effective.",
      "There are important decisions to be made in the future.",
      "Klein's policies are unpopular."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([klein_should_step_down, policies_effective, important_decisions_future, policies_unpopular])\nbell_believes = Function([statements] -> [bool])\nsoltan_believes = Function([statements] -> [bool])\n\n# Constraints\nbell_believes(policies_unpopular) ::: Bell believes Klein's policies are unpopular\nbell_believes(important_decisions_future) ::: Bell believes there are important decisions to be made in the future\nbell_believes(Not(klein_should_step_down)) ::: Bell believes Klein should not step down\nsoltan_believes(policies_effective) ::: Soltan believes Klein's policies have been effective\nsoltan_believes(important_decisions_future) ::: Soltan believes there are important decisions to be made in the future\nsoltan_believes(klein_should_step_down) ::: Soltan believes Klein should step down\n\n# Options\nQuestion ::: Bell and Soltan disagree with each other about which one of the following?\nis_disagreement(bell_believes(klein_should_step_down) != soltan_believes(klein_should_step_down)) ::: (Klein should step down.)\nis_disagreement(bell_believes(policies_effective) != soltan_believes(policies_effective)) ::: (Klein's policies have been effective.)\nis_disagreement(bell_believes(important_decisions_future) != soltan_believes(important_decisions_future)) ::: (There are important decisions to be made in the future.)\nis_disagreement(bell_believes(policies_unpopular) != soltan_believes(policies_unpopular)) ::: (Klein's policies are unpopular.)"
    ]
  },
  {
    "id": "test_157",
    "context": "Leptin, a protein occurring naturally in the blood, appears to regulate how much fat the body carries by speeding up the metabolism and decreasing the appetite when the body has too much fat. Mice that do not naturally produce leptin have more fat than other mice, but lose fat rapidly when they are given leptin injections. Unfortunately, however, leptin cannot be used as a dietary supplement to control fat, since__.",
    "question": "Which of the following most logically completes the passage?",
    "options": [
      "the digestive system breaks down proteins before they can enter the bloodstream",
      "people with unusually low levels of leptin in their blood tend to have a high percentage of body fat",
      "the mice that do not naturally produce leptin were from a specially bred strain of mice",
      "mice whose bodies did produce leptin also lost some of their body fat when given leptin injections"
    ],
    "raw_logic_programs": [
      "# Declarations\nproteins = EnumSort([leptin])\nsubjects = EnumSort([mice, people])\nconditions = EnumSort([naturally_produce, do_not_naturally_produce, low_levels, high_fat])\neffects = EnumSort([more_fat, lose_fat, regulate_fat, ineffective_as_supplement])\nactions = EnumSort([injections, dietary_supplement])\nsystems = EnumSort([digestive, metabolic])\n\n# Constraints\nForAll([s:subjects], Implies(And(s == mice, conditions(s) == do_not_naturally_produce), effects(s) == more_fat)) ::: Mice that do not naturally produce leptin have more fat than other mice\nForAll([s:subjects], Implies(And(s == mice, actions(s) == injections), effects(s) == lose_fat)) ::: Mice lose fat rapidly when they are given leptin injections\nForAll([s:subjects], Implies(And(s == people, actions(s) == dietary_supplement), effects(s) == ineffective_as_supplement)) ::: Leptin cannot be used as a dietary supplement to control fat\n\n# Options\nQuestion ::: Which of the following most logically completes the passage?\nis_logical(ForAll([s:subjects], Implies(s == people, systems(s) == digestive))) ::: (the digestive system breaks down proteins before they can enter the bloodstream)\nis_logical(ForAll([s:subjects], Implies(And(s == people, conditions(s) == low_levels), conditions(s) == high_fat))) ::: (people with unusually low levels of leptin in their blood tend to have a high percentage of body fat)\nis_logical(ForAll([s:subjects], Implies(And(s == mice, conditions(s) == do_not_naturally_produce), s == specially_bred_strain))) ::: (the mice that do not naturally produce leptin were from a specially bred strain of mice)\nis_logical(ForAll([s:subjects], Implies(And(s == mice, conditions(s) == naturally_produce, actions(s) == injections), effects(s) == lose_fat))) ::: (mice whose bodies did produce leptin also lost some of their body fat when given leptin injections)"
    ]
  },
  {
    "id": "test_158",
    "context": "Astronomer: Observations of the Shoemaker-Levi comet on its collision course with Jupiter showed that the comet broke into fragments before entering Jupiter' s atmosphere in 1994, but they did not show how big those fragments were. Nevertheless, some indication of their size can be inferred from spectrographic analyses of Jupiter' s outer atmosphere. <b> After the fragments' entry, these analyses revealed unprecedented traces of sulfur. </b> The fragments themselves almost certainly contained no sulfur, but astronomers believe that the cloud layer below Jupiter' s outer atmosphere does contain sulfur. Since <b> sulfur would have seeped into the outer atmosphere if comet fragments had penetrated this cloud layer </b>, it is likely that some of the fragments were at least large enough to have passed through Jupiter' s outer atmosphere without being burned up.",
    "question": "In the astronomer's argument, the two portions in boldface play which of the following roles?",
    "options": [
      "The first is a circumstance for which the astronomer seeks to provide an explanation; the second acknowledges a consideration that weighs against the explanation provided by the astronomer",
      "The first is a claim that the astronomer seeks to show is true; the second provides evidence in support of the truth of that claim",
      "The first is a claim that the astronomer seeks to show is true; the second acknowledges a consideration that weighs against the truth of that claim",
      "The first and the second are each considerations advanced in support of the conclusion of the argument"
    ],
    "raw_logic_programs": [
      "# Declarations\nportions = EnumSort([first, second])\nroles = EnumSort([circumstance, claim, evidence, consideration, conclusion])\nplays_role = Function([portions] -> [roles])\n\n# Constraints\nplays_role(first) == circumstance ::: The first is a circumstance for which the astronomer seeks to provide an explanation\nplays_role(second) == consideration ::: The second acknowledges a consideration that weighs against the explanation provided by the astronomer\n\n# Options\nQuestion ::: In the astronomer's argument, the two portions in boldface play which of the following roles?\nis_correct(And(plays_role(first) == circumstance, plays_role(second) == consideration)) ::: (The first is a circumstance for which the astronomer seeks to provide an explanation; the second acknowledges a consideration that weighs against the explanation provided by the astronomer)\nis_correct(And(plays_role(first) == claim, plays_role(second) == evidence)) ::: (The first is a claim that the astronomer seeks to show is true; the second provides evidence in support of the truth of that claim)\nis_correct(And(plays_role(first) == claim, plays_role(second) == consideration)) ::: (The first is a claim that the astronomer seeks to show is true; the second acknowledges a consideration that weighs against the truth of that claim)\nis_correct(And(plays_role(first) == consideration, plays_role(second) == consideration)) ::: (The first and the second are each considerations advanced in support of the conclusion of the argument)"
    ]
  },
  {
    "id": "test_159",
    "context": "Scientists typically do their most creative work before the age of forty. It is commonly thought that this happens because aging by itself brings about a loss of creative capacity. However, studies show that <b> of scientists who produce highly creative work beyond the age of forty, a disproportionately large number entered their field at an older age than is usual </b>. Since by the age of forty the large majority of scientists have been working in their field for at least fifteen years, the studies' finding strongly suggests that the real reason why scientists over forty rarely produce highly creative work is not that they have aged but rather that <b> scientists over forty have generally spent too long in their field </b>.",
    "question": "In the argument given, the two portions in boldface play which of the following roles?",
    "options": [
      "The first is evidence that has been used to support an explanation that the argument challenges; the second is a competing explanation that the argument favors.",
      "The first provides evidence to support an explanation that the argument favors; the second is that explanation.",
      "The first is an objection that has been raised against a position defended in the argument; the second is that position.",
      "The first is a claim, the accuracy of which is at issue in the argument; the second is a conclusion drawn on the basis of that claim."
    ],
    "raw_logic_programs": [
      "# Declarations\nportions = EnumSort([first, second])\nroles = EnumSort([evidence_supporting_challenged_explanation, competing_explanation_favored, evidence_supporting_favored_explanation, explanation_favored, objection_against_position, position_defended, claim_at_issue, conclusion_drawn])\nplays_role = Function([portions] -> [roles])\n\n# Constraints\nplays_role(first) == evidence_supporting_favored_explanation ::: The first provides evidence to support an explanation that the argument favors\nplays_role(second) == explanation_favored ::: The second is that explanation\n\n# Options\nQuestion ::: In the argument given, the two portions in boldface play which of the following roles?\nis_correct(plays_role(first) == evidence_supporting_challenged_explanation, plays_role(second) == competing_explanation_favored) ::: (A)\nis_correct(plays_role(first) == evidence_supporting_favored_explanation, plays_role(second) == explanation_favored) ::: (B)\nis_correct(plays_role(first) == objection_against_position, plays_role(second) == position_defended) ::: (C)\nis_correct(plays_role(first) == claim_at_issue, plays_role(second) == conclusion_drawn) ::: (D)"
    ]
  },
  {
    "id": "test_160",
    "context": "Mayor of Otterville, a suburb of Center City: Outerville must grow if it is to survive, so, as we have agreed, efforts should be made to attract more residents. The best strategy for attracting residents is to renovate the train station. The numbers of jobs in Center City and of people who prefer to live in suburban towns are increasing. With the rise in tolls, driving into the city is becoming more expensive than train travel. Ttherefore, people want to live in towns where train travel is convenient and pleasant.",
    "question": "The argument leads to the conclusion that",
    "options": [
      "people who work in Center City but live in Otterville should commute by train rather than driving",
      "residents of Outerville who are in need of work should look for jobs in Center City",
      "the train station in Outerville should be renovated",
      "the town of Outerville should attract more residents"
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([grow_to_survive, attract_residents, renovate_station, increase_jobs, prefer_suburbs, rise_in_tolls, prefer_train, convenient_train, pleasant_train])\nconclusion = EnumSort([commute_by_train, look_for_jobs, renovate_station_conclusion, attract_residents_conclusion])\n\n# Constraints\ngrow_to_survive ::: Outerville must grow if it is to survive\nattract_residents ::: efforts should be made to attract more residents\nrenovate_station ::: The best strategy for attracting residents is to renovate the train station\nincrease_jobs ::: The numbers of jobs in Center City are increasing\nprefer_suburbs ::: The number of people who prefer to live in suburban towns is increasing\nrise_in_tolls ::: With the rise in tolls, driving into the city is becoming more expensive than train travel\nprefer_train ::: people want to live in towns where train travel is convenient and pleasant\nconvenient_train ::: train travel is convenient\npleasant_train ::: train travel is pleasant\n\n# Options\nQuestion ::: The argument leads to the conclusion that\nis_valid(renovate_station_conclusion) ::: (the train station in Outerville should be renovated)\nis_valid(attract_residents_conclusion) ::: (the town of Outerville should attract more residents)\nis_valid(commute_by_train) ::: (people who work in Center City but live in Otterville should commute by train rather than driving)\nis_valid(look_for_jobs) ::: (residents of Outerville who are in need of work should look for jobs in Center City)"
    ]
  },
  {
    "id": "test_161",
    "context": "Due to slow sales in the recent months, Bigger Box Company' s president has decided to decrease the amount of money that the company spends to fund the factory workers' cafeteria from $200, 000 per year to only $120, 000 in the coming year. However, the factory workers' cafeteria is unable to continue serving meals with less than $180, 000 per year. As the Bigger Box Company has flatly refused to give any more than $120, 000 this year to the factory workers' cafeteria, the cafeteria will not be serving meals this year.",
    "question": "This conclusion is correctly drawn if which of the following is assumed?",
    "options": [
      "The Bigger Box Company will also be cutting funding to other employee benefit and compensation programs.",
      "The Bigger Box Company is aware that the factory workers' cafeteria will be unable to serve meals if it does not receive at least $180, 000 in funding this year.",
      "The Bigger Box Company would go out of business if it gave more than $120, 000 this year to fund the factory workers' cafeteria.",
      "The factory workers' cafeteria will not receive the additional funding it needs to operate from any other source."
    ],
    "raw_logic_programs": [
      "# Declarations\nfunding = EnumSort([Bigger_Box_Company, Other_Sources])\ncafeteria_status = EnumSort([serving_meals, not_serving_meals])\nfunds_needed = Function([cafeteria_status] -> [int])\nfunds_provided = Function([funding] -> [int])\n\n# Constraints\nfunds_needed(serving_meals) == 180000 ::: The cafeteria needs at least $180,000 per year to serve meals\nfunds_provided(Bigger_Box_Company) == 120000 ::: Bigger Box Company provides $120,000 this year\nfunds_provided(Other_Sources) == 0 ::: Assume no other sources provide funding\n\n# Options\nQuestion ::: This conclusion is correctly drawn if which of the following is assumed?\nis_assumed(funds_provided(Other_Sources) == 0) ::: (The factory workers' cafeteria will not receive the additional funding it needs to operate from any other source.)"
    ]
  },
  {
    "id": "test_162",
    "context": "A product that represents a clear technological advance over competing products can generally command a high price. <b> Because technological advances tend to be quickly surpassed </b> and companies want to make large profits while they still can, <b> many companies charge the maximum possible price for such a product. </b> But large profits on the new product will give competitors a strong incentive to quickly match the new product' s capabilities. Consequently, the strategy to maximize overall profit from a new product is to charge less than the greatest possible price.",
    "question": "In the argument above, the two portions in boldface play which of the following roles?",
    "options": [
      "The first is a consideration raised to explain the appeal of a certain strategy; the second presents that strategy.",
      "The first is a consideration raised to support the strategy that the argument recommends; the second presents that strategy.",
      "The first is a consideration that has been used to justify pursuing a goal that the argument rejects; the second presents a course of action that has been adopted in pursuit of that goal.",
      "The first is an assumption, rejected by the argument, that has been used to justify a course of action; the second presents that course of action."
    ],
    "raw_logic_programs": [
      "# Declarations\nportions = EnumSort([first, second])\nroles = EnumSort([consideration_explain_strategy, consideration_support_strategy, consideration_justify_goal, assumption_rejected_course])\nstrategy = EnumSort([appeal_strategy, recommended_strategy, rejected_goal, adopted_course])\n\n# Constraints\nrole(first) == consideration_justify_goal ::: The first portion is a consideration that has been used to justify pursuing a goal that the argument rejects\nrole(second) == adopted_course ::: The second portion presents a course of action that has been adopted in pursuit of that goal\n\n# Options\nQuestion ::: In the argument above, the two portions in boldface play which of the following roles?\nis_correct(role(first) == consideration_explain_strategy, role(second) == appeal_strategy) ::: (The first is a consideration raised to explain the appeal of a certain strategy; the second presents that strategy.)\nis_correct(role(first) == consideration_support_strategy, role(second) == recommended_strategy) ::: (The first is a consideration raised to support the strategy that the argument recommends; the second presents that strategy.)\nis_correct(role(first) == consideration_justify_goal, role(second) == adopted_course) ::: (The first is a consideration that has been used to justify pursuing a goal that the argument rejects; the second presents a course of action that has been adopted in pursuit of that goal.)\nis_correct(role(first) == assumption_rejected_course, role(second) == adopted_course) ::: (The first is an assumption, rejected by the argument, that has been used to justify a course of action; the second presents that course of action.)"
    ]
  },
  {
    "id": "test_163",
    "context": "Harris: Currently, hybrid animals are not protected by international endangered-species regulations. But new techniques in genetic research suggest that the red wolf, long thought to be an independent species, is a hybrid of the coyote and the gray wolf. Hence, since the red wolf clearly deserves protection, these regulations should be changed to admit the protection of hybrids. Vogel: Yet hybrids do not need protection. Since a breeding population that arises through hybridization descends from independent species, if any such population were to die out, it could easily be revived by interbreeding members of the species from which the hybrid is descended.",
    "question": "Which one of the following is a point at issue between Harris and Vogel?",
    "options": [
      "whether the red wolf descends from the gray wolf and the coyote",
      "whether the packs of red wolves that currently exist are in danger of dying out",
      "whether there are some hybrids that ought to be protected by endangered-species regulations",
      "whether new techniques in genetic research should be used to determine which groups of animals constitute species and which constitute hybrids"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([red_wolf_descends, red_wolf_dying_out, hybrids_protected, genetic_research_use])\npositions = EnumSort([Harris, Vogel])\nagrees = Function([positions, statements] -> [bool])\n\n# Constraints\nagrees(Harris, red_wolf_descends) ::: Harris believes the red wolf is a hybrid of the coyote and the gray wolf\nagrees(Harris, hybrids_protected) ::: Harris believes hybrids should be protected by endangered-species regulations\nNot(agrees(Vogel, hybrids_protected)) ::: Vogel believes hybrids do not need protection\nagrees(Vogel, red_wolf_descends) ::: Vogel does not dispute the red wolf's hybrid status\n\n# Options\nQuestion ::: Which one of the following is a point at issue between Harris and Vogel?\nis_point_at_issue(agrees(Harris, red_wolf_descends) != agrees(Vogel, red_wolf_descends)) ::: (whether the red wolf descends from the gray wolf and the coyote)\nis_point_at_issue(agrees(Harris, red_wolf_dying_out) != agrees(Vogel, red_wolf_dying_out)) ::: (whether the packs of red wolves that currently exist are in danger of dying out)\nis_point_at_issue(agrees(Harris, hybrids_protected) != agrees(Vogel, hybrids_protected)) ::: (whether there are some hybrids that ought to be protected by endangered-species regulations)\nis_point_at_issue(agrees(Harris, genetic_research_use) != agrees(Vogel, genetic_research_use)) ::: (whether new techniques in genetic research should be used to determine which groups of animals constitute species and which constitute hybrids)"
    ]
  },
  {
    "id": "test_164",
    "context": "The term \"pit bull\" does not designate a breed of dog, as do the terms \"German shepherd\" and \"poodle. \" It is like the terms \"Seeing-Eye dog\" and \"police dog, \" which designate dogs according to what they do. If you take two German shepherds and place them side by side, you cannot tell by appearance alone which is the police dog and which is the Seeing-Eye dog.",
    "question": "Which one of the following is the main point of the passage?",
    "options": [
      "Some breeds of dogs cannot be distinguished from other breeds of dogs by appearance alone.",
      "A dog is a pit bull because of what it does, not because of its breed.",
      "German shepherds can function both as police dogs and as Seeing-Eye dogs.",
      "German shepherds can be pit bulls."
    ],
    "raw_logic_programs": [
      "# Declarations\nterms = EnumSort([pit_bull, German_shepherd, poodle, Seeing_Eye_dog, police_dog])\ndesignates = Function([terms] -> [bool])\nfunctions = Function([terms] -> [bool])\n\n# Constraints\nNot(designates(pit_bull)) ::: The term \"pit bull\" does not designate a breed of dog\ndesignates(German_shepherd) ::: The term \"German shepherd\" designates a breed of dog\ndesignates(poodle) ::: The term \"poodle\" designates a breed of dog\nNot(designates(Seeing_Eye_dog)) ::: The term \"Seeing-Eye dog\" does not designate a breed of dog\nNot(designates(police_dog)) ::: The term \"police dog\" does not designate a breed of dog\nfunctions(Seeing_Eye_dog) ::: \"Seeing-Eye dog\" designates dogs according to what they do\nfunctions(police_dog) ::: \"police dog\" designates dogs according to what they do\n\n# Options\nQuestion ::: Which one of the following is the main point of the passage?\nis_main_point(Not(designates(pit_bull)) && functions(pit_bull)) ::: (A dog is a pit bull because of what it does, not because of its breed.)\nis_main_point(Exists([t1:terms, t2:terms], And(designates(t1), designates(t2), t1 != t2, Not(functions(t1)), Not(functions(t2))))) ::: (Some breeds of dogs cannot be distinguished from other breeds of dogs by appearance alone.)\nis_main_point(Exists([t:terms], And(designates(German_shepherd), functions(t)))) ::: (German shepherds can function both as police dogs and as Seeing-Eye dogs.)\nis_main_point(Exists([t:terms], And(designates(German_shepherd), functions(pit_bull)))) ::: (German shepherds can be pit bulls.)"
    ]
  },
  {
    "id": "test_165",
    "context": "A recent survey of brand preferences showed that R-Bar Beans are considered the best of all brands among all age groups, leading both Texas T Beans and Aunt Sally' s Beans by a wide margin. However, the national sales figures show that Texas T and Aunt Sally' s each sold many more cans of beans last year than did R-Bar.",
    "question": "Each of the following would, by itself, help to resolve the apparent paradox described in the passage EXCEPT:",
    "options": [
      "The survey was carried out only in the small geographic area where R-Bar distributes its beans, not nationwide.",
      "Texas T Beans and Aunt Sally's Beans are each much less expensive than R-Bar Beans.",
      "R-Bar Beans were only introduced to the market three months prior to the calculation of sales figures, while Texas T Beans and Aunt Sally's Beans had been available for years.",
      "Some of the surveyed age groups showed more of a preference for R-Bar Beans than did others."
    ],
    "raw_logic_programs": [
      "# Declarations\nbrands = EnumSort([R_Bar, Texas_T, Aunt_Sally])\nage_groups = EnumSort([group1, group2, group3, group4, group5])\npreferences = Function([age_groups, brands] -> [int])\nsales = Function([brands] -> [int])\n\n# Constraints\nForAll([g:age_groups], preferences(g, R_Bar) > preferences(g, Texas_T)) ::: R-Bar Beans are considered the best of all brands among all age groups\nForAll([g:age_groups], preferences(g, R_Bar) > preferences(g, Aunt_Sally)) ::: R-Bar Beans are considered the best of all brands among all age groups\nsales(Texas_T) > sales(R_Bar) ::: Texas T sold many more cans than R-Bar\nsales(Aunt_Sally) > sales(R_Bar) ::: Aunt Sally's sold many more cans than R-Bar\n\n# Options\nQuestion ::: Each of the following would, by itself, help to resolve the apparent paradox described in the passage EXCEPT:\nis_exception(is_sat(Exists([g:age_groups], preferences(g, R_Bar) > preferences(g, Texas_T) > preferences(g, Aunt_Sally)))) ::: (The survey was carried out only in the small geographic area where R-Bar distributes its beans, not nationwide.\nis_exception(is_sat(sales(Texas_T) < sales(R_Bar) * 2)) ::: (Texas T Beans and Aunt Sally's Beans are each much less expensive than R-Bar Beans.\nis_exception(is_sat(sales(R_Bar) < sales(Texas_T) + sales(Aunt_Sally))) ::: (R-Bar Beans were only introduced to the market three months prior to the calculation of sales figures, while Texas T Beans and Aunt Sally's Beans had been available for years.\nis_exception(is_sat(Exists([g1:age_groups, g2:age_groups], And(g1 != g2, preferences(g1, R_Bar) > preferences(g2, R_Bar))))) ::: (Some of the surveyed age groups showed more of a preference for R-Bar Beans than did others."
    ]
  },
  {
    "id": "test_166",
    "context": "The brains of identical twins are genetically identical. When only one of a pair of identical twins is a schizophrenic, certain areas of the affected twin' s brain are smaller than corresponding areas in the brain of the unaffected twin. No such differences are found when neither twin is schizophrenic. Ttherefore, this discovery provides definitive evidence that schizophrenia is caused by damage to the physical structure of the brain.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "The brain of a person suffering from schizophrenia is smaller than the brain of anyone not suffering from schizophrenia.",
      "The relative smallness of certain parts of the brains of schizophrenics is not the result of schizophrenia or of medications used in its treatment.",
      "People who have an identical twin are no more likely to suffer from schizophrenia than those who do not.",
      "When a pair of identical twins both suffer from schizophrenia, their brains are the same size."
    ],
    "raw_logic_programs": [
      "# Declarations\ntwins = EnumSort([affected, unaffected])\nbrain_areas = EnumSort([area1, area2, area3, area4])  # Example areas\nsize = Function([twins, brain_areas] -> [int])\n\n# Constraints\nForAll([a:brain_areas], size(affected, a) < size(unaffected, a)) ::: When only one of a pair of identical twins is a schizophrenic, certain areas of the affected twin's brain are smaller than corresponding areas in the brain of the unaffected twin\nForAll([a:brain_areas], size(affected, a) == size(unaffected, a)) ::: No such differences are found when neither twin is schizophrenic\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(ForAll([a:brain_areas], size(affected, a) < size(unaffected, a) implies schizophrenia_causes_damage)) ::: (The brain of a person suffering from schizophrenia is smaller than the brain of anyone not suffering from schizophrenia.\nis_assumption(Not(Exists([a:brain_areas], size(affected, a) < size(unaffected, a) because_of_schizophrenia_or_medication))) ::: (The relative smallness of certain parts of the brains of schizophrenics is not the result of schizophrenia or of medications used in its treatment.\nis_assumption(ForAll([t:twins], identical_twins_no_more_likely_to_suffer)) ::: (People who have an identical twin are no more likely to suffer from schizophrenia than those who do not.\nis_assumption(ForAll([a:brain_areas], size(affected, a) == size(unaffected, a) when_both_suffer)) ::: (When a pair of identical twins both suffer from schizophrenia, their brains are the same size."
    ]
  },
  {
    "id": "test_167",
    "context": "If grain prices double then the average price of a loaf of bread will rise between 10 and 15 percent, whereas the price of grain-fed beef will come close to doubling.",
    "question": "Which one of the following would, if true, most contribute to an explanation of the phenomenon described above?",
    "options": [
      "Farmers engaged in very large-scale cattle production generally try to reduce the labor costs involved in the production and sale of beef.",
      "The vast majority of retail grocery outlets purchase the bread they sell from small independent bakers but purchase the meat they sell from large wholesale processing operations.",
      "The labor and marketing costs in producing and selling bread represent most of its cost, but the cost of feeding cattle represents most of the cost of producing beef.",
      "The wholesale price per pound of beef is approximately ten times the wholesale price per pound of bread."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([grain_prices, bread_price, beef_price])\neffects = Function([variables] -> [float])\n\n# Constraints\neffects(grain_prices) == 2.0 ::: If grain prices double\nAnd(1.10 <= effects(bread_price), effects(bread_price) <= 1.15) ::: the average price of a loaf of bread will rise between 10 and 15 percent\neffects(beef_price) == 2.0 ::: the price of grain-fed beef will come close to doubling\n\n# Options\nQuestion ::: Which one of the following would, if true, most contribute to an explanation of the phenomenon described above?\nis_explanatory(effects(labor_costs_beef) < effects(labor_costs_bread)) ::: (A) Farmers engaged in very large-scale cattle production generally try to reduce the labor costs involved in the production and sale of beef.\nis_explanatory(effects(purchase_bread) != effects(purchase_beef)) ::: (B) The vast majority of retail grocery outlets purchase the bread they sell from small independent bakers but purchase the meat they sell from large wholesale processing operations.\nis_explanatory(effects(labor_marketing_bread) > effects(feeding_costs_beef)) ::: (C) The labor and marketing costs in producing and selling bread represent most of its cost, but the cost of feeding cattle represents most of the cost of producing beef.\nis_explanatory(effects(wholesale_price_beef) > effects(wholesale_price_bread)) ::: (D) The wholesale price per pound of beef is approximately ten times the wholesale price per pound of bread."
    ]
  },
  {
    "id": "test_168",
    "context": "It is well known that many species adapt to their environment, but it is usually assumed that only the most highly evolved species alter their environment in ways that aid their own survival. However, this characteristic is actually quite common. Certain species of plankton, for example, generate a gas that is converted in the atmosphere into particles of sulfate. These particles cause water vapor to condense, thus forming clouds. Indeed, the formation of clouds over the ocean largely depends on the presence of these particles. More cloud cover means more sunlight is reflected, and so the Earth absorbs less heat. Thus plankton cause the surface of the Earth to be cooler and this benefits the plankton.",
    "question": "Of the following, which one most accurately expresses the main point of the argument?",
    "options": [
      "The extent of the cloud cover over the oceans is largely determined by the quantity of plankton in those oceans.",
      "The Earth would be far warmer than it is now if certain species of plankton became extinct.",
      "Improving their own chances of survival by altering the environment is not limited to the most highly evolved species.",
      "By altering their environment in ways that improve their chances of survival, certain species of plankton benefit the Earth as a whole."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([plankton, highly_evolved_species])\neffects = EnumSort([alter_environment, aid_survival])\nenvironmental_factors = EnumSort([cloud_cover, sunlight_reflection, earth_temperature])\ncauses = Function([species, effects] -> [bool])\ninfluences = Function([species, environmental_factors] -> [bool])\n\n# Constraints\ncauses(plankton, alter_environment) ::: Certain species of plankton alter their environment\ncauses(plankton, aid_survival) ::: Plankton alter their environment in ways that aid their own survival\nForAll([s:species], Implies(causes(s, alter_environment), causes(s, aid_survival))) ::: Altering the environment aids survival\ninfluences(plankton, cloud_cover) ::: Plankton influence cloud cover\ninfluences(plankton, sunlight_reflection) ::: Plankton influence sunlight reflection\ninfluences(plankton, earth_temperature) ::: Plankton influence Earth's temperature\n\n# Options\nQuestion ::: Of the following, which one most accurately expresses the main point of the argument?\nis_main_point(causes(plankton, alter_environment) & Not(causes(highly_evolved_species, alter_environment))) ::: (A) The extent of the cloud cover over the oceans is largely determined by the quantity of plankton in those oceans.\nis_main_point(Not(influences(plankton, earth_temperature))) ::: (B) The Earth would be far warmer than it is now if certain species of plankton became extinct.\nis_main_point(Not(causes(highly_evolved_species, alter_environment)) & causes(plankton, alter_environment)) ::: (C) Improving their own chances of survival by altering the environment is not limited to the most highly evolved species.\nis_main_point(causes(plankton, alter_environment) & influences(plankton, earth_temperature)) ::: (D) By altering their environment in ways that improve their chances of survival, certain species of plankton benefit the Earth as a whole."
    ]
  },
  {
    "id": "test_169",
    "context": "Antonia: The stock market is the best place to invest your money these days; although it is often volatile, it provides the opportunity to make a large profit quickly. Maria: I agree that the stock market provides the opportunity to make large profits quickly, but one is just as likely to take a huge loss. I think it is better to invest in savings bonds, which provide a constant, reliable income over many years.",
    "question": "Antonia's and Maria's statements provide the most support for holding that they disagree about whether",
    "options": [
      "it is preferable to pick an investment offering a reliable income over a riskier opportunity to make a large profit quickly",
      "the stock market provides the opportunity for an investor to make a constant, reliable income over many years",
      "it is safer to invest in savings bonds than to invest in the stock market",
      "the stock market is often volatile but provides the opportunity to make a large profit quickly"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Antonia, Maria])\npropositions = EnumSort([prefer_reliable_income, stock_market_reliable, safer_savings_bonds, stock_market_volatile])\n\n# Constraints\nasserts(Antonia, prefer_reliable_income) == False ::: Antonia does not prefer reliable income over riskier opportunities\nasserts(Maria, prefer_reliable_income) == True ::: Maria prefers reliable income over riskier opportunities\nasserts(Antonia, stock_market_reliable) == False ::: Antonia does not claim the stock market provides a reliable income\nasserts(Maria, stock_market_reliable) == False ::: Maria does not claim the stock market provides a reliable income\nasserts(Antonia, safer_savings_bonds) == False ::: Antonia does not claim savings bonds are safer\nasserts(Maria, safer_savings_bonds) == True ::: Maria claims savings bonds are safer\nasserts(Antonia, stock_market_volatile) == True ::: Antonia claims the stock market is volatile\nasserts(Maria, stock_market_volatile) == True ::: Maria agrees the stock market is volatile\n\n# Options\nQuestion ::: Antonia's and Maria's statements provide the most support for holding that they disagree about whether\nis_disagreement(prefer_reliable_income) ::: (it is preferable to pick an investment offering a reliable income over a riskier opportunity to make a large profit quickly)\nis_disagreement(stock_market_reliable) ::: (the stock market provides the opportunity for an investor to make a constant, reliable income over many years)\nis_disagreement(safer_savings_bonds) ::: (it is safer to invest in savings bonds than to invest in the stock market)\nis_disagreement(stock_market_volatile) ::: (the stock market is often volatile but provides the opportunity to make a large profit quickly)"
    ]
  },
  {
    "id": "test_170",
    "context": "Of all the surgeons practicing at the city hospital, the chief surgeon has the worst record in terms of the percentage of his patients who die either during or immediately following an operation performed by him. Paradoxically, the hospital' s administrators claim that he is the best surgeon currently working at the hospital.",
    "question": "Which one of the following, if true, goes farthest toward showing that the administrators' claim and the statistic cited might both be correct?",
    "options": [
      "The current chief surgeon has a better record of patients' surviving surgery than did his immediate predecessor.",
      "In appointing the current chief surgeon, the hospital administrators followed the practice, well established at the city hospital, of promoting one of the surgeons already on staff.",
      "Some of the younger surgeons on the city hospital's staff received part of their training from the current chief surgeon.",
      "At the city hospital those operations that inherently entail the greatest risk to the life of the patient are generally performed by the chief surgeon."
    ],
    "raw_logic_programs": [
      "# Declarations\nsurgeons = EnumSort([chief, others])\noperations = EnumSort([high_risk, low_risk])\nrecord = Function([surgeons, operations] -> [float])\nbest_surgeon = Function([surgeons] -> [bool])\n\n# Constraints\nrecord(chief, high_risk) < record(others, high_risk) ::: The chief surgeon has the worst record in terms of the percentage of his patients who die during or immediately following an operation\nbest_surgeon(chief) == True ::: The hospital's administrators claim that he is the best surgeon currently working at the hospital\n\n# Options\nQuestion ::: Which one of the following, if true, goes farthest toward showing that the administrators' claim and the statistic cited might both be correct?\nImplies(best_surgeon(chief), ForAll([o:operations], record(chief, o) < record(others, o))) ::: (A) The current chief surgeon has a better record of patients' surviving surgery than did his immediate predecessor.\nImplies(best_surgeon(chief), Exists([o:operations], record(chief, o) < record(others, o))) ::: (B) In appointing the current chief surgeon, the hospital administrators followed the practice, well established at the city hospital, of promoting one of the surgeons already on staff.\nImplies(best_surgeon(chief), Exists([o:operations], record(chief, o) < record(others, o))) ::: (C) Some of the younger surgeons on the city hospital's staff received part of their training from the current chief surgeon.\nImplies(best_surgeon(chief), ForAll([o:operations], record(chief, o) < record(others, o))) ::: (D) At the city hospital those operations that inherently entail the greatest risk to the life of the patient are generally performed by the chief surgeon."
    ]
  },
  {
    "id": "test_171",
    "context": "Activist: President Zagel should resign, because she is unable to govern effectively given the widespread belief that she rigged the election. President Zagel: Over the last decade, scandals have forced two presidents of this country to resign. If I were to resign, the rest of the world would see us as a country whose political system is hopelessly unstable. That would be unacceptable, so I must remain in office.",
    "question": "Which one of the following principles, if valid, most helps to justify the activist's argument in the face of President Zagel's argument?",
    "options": [
      "If it can be conclusively proven that an officeholder rigged an election, then that officeholder should be removed from office.",
      "If a president is involved in a scandal that is more serious than scandals that have forced previous leaders to resign, then that president should resign.",
      "The leader of a country should resign if doing so is likely to improve that country's international reputation for political stability.",
      "It is more important for a country to have a leader who can govern effectively than it is to be viewed by other countries as having a stable political system."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\narguments = EnumSort([activist, president])\nsupports = Function([principles, arguments] -> [bool])\n\n# Constraints\nsupports(P1, activist) ::: If it can be conclusively proven that an officeholder rigged an election, then that officeholder should be removed from office\nsupports(P2, activist) ::: If a president is involved in a scandal that is more serious than scandals that have forced previous leaders to resign, then that president should resign\nsupports(P3, activist) ::: The leader of a country should resign if doing so is likely to improve that country's international reputation for political stability\nsupports(P4, activist) ::: It is more important for a country to have a leader who can govern effectively than it is to be viewed by other countries as having a stable political system\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the activist's argument in the face of President Zagel's argument?\nis_most_justifying(supports(P1, activist)) ::: (A)\nis_most_justifying(supports(P2, activist)) ::: (B)\nis_most_justifying(supports(P3, activist)) ::: (C)\nis_most_justifying(supports(P4, activist)) ::: (D)"
    ]
  },
  {
    "id": "test_172",
    "context": "In one study of a particular plant species, 70 percent of the plants studied were reported as having patterned stems. In a second study, which covered approximately the same geographical area, only 40 percent of the plants of that species were reported as having patterned stems.",
    "question": "Which one of the following, if true, most helps to resolve the apparent discrepancy described above?",
    "options": [
      "The first study, but not the second study, also collected information about patterned stems in other plant species.",
      "The first study used a broader definition of \"patterned. \"",
      "The focus of the second study was patterned stems, while the first study collected information about patterned stems only as a secondary goal.",
      "The first study was carried out at the time of year when plants of the species are at their most populous."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudies = EnumSort([first_study, second_study])\npercent_patterned = Function([studies] -> [int])\n\n# Constraints\npercent_patterned(first_study) == 70 ::: 70 percent of the plants studied in the first study were reported as having patterned stems\npercent_patterned(second_study) == 40 ::: 40 percent of the plants studied in the second study were reported as having patterned stems\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent discrepancy described above?\nis_resolving(And(CollectsOtherSpecies(first_study), Not(CollectsOtherSpecies(second_study)))) ::: (The first study, but not the second study, also collected information about patterned stems in other plant species.\nis_resolving(BroaderDefinition(first_study)) ::: (The first study used a broader definition of \"patterned.\")\nis_resolving(And(FocusOnPatterned(second_study), Not(FocusOnPatterned(first_study)))) ::: (The focus of the second study was patterned stems, while the first study collected information about patterned stems only as a secondary goal.\nis_resolving(ConductedAtPeakPopulation(first_study)) ::: (The first study was carried out at the time of year when plants of the species are at their most populous."
    ]
  },
  {
    "id": "test_173",
    "context": "A ring of gas emitting X-rays flickering 450 times per second has been observed in a stable orbit around a black hole. In light of certain widely accepted physical theories, that rate of flickering can best be explained if the ring of gas has a radius of 49 kilometers. But the gas ring could not maintain an orbit so close to a black hole unless the black hole was spinning.",
    "question": "The statements above, if true, most strongly support which one of the following, assuming that the widely accepted physical theories referred to above are correct?",
    "options": [
      "The black hole that is within the ring of gas observed by the astronomers is spinning.",
      "X-rays emitted by rings of gas orbiting black holes cause those black holes to spin.",
      "Black holes that have orbiting rings of gas with radii greater than 49 kilometers are usually stationary.",
      "Only rings of gas that are in stable orbits around black holes emit flickering X-rays."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `black_hole`: Represents the black hole in question.\n- `gas_ring`: Represents the ring of gas emitting X-rays.\n- `flickering_rate`: Represents the rate of flickering of the X-rays.\n- `radius`: Represents the radius of the gas ring.\n- `spinning`: Represents whether the black hole is spinning.\n\n# Constraints\n- `flickering_rate(gas_ring) == 450`: The gas ring flickers 450 times per second.\n- `radius(gas_ring) == 49`: The radius of the gas ring is 49 kilometers.\n- `Implies(radius(gas_ring) == 49, spinning(black_hole))`: If the radius of the gas ring is 49 kilometers, the black hole must be spinning.\n\n# Options\nQuestion: The statements above, if true, most strongly support which one of the following, assuming that the widely accepted physical theories referred to above are correct?\n- `is_supported(spinning(black_hole))`: (The black hole that is within the ring of gas observed by the astronomers is spinning.)\n- `is_supported(Implies(emits_xrays(gas_ring), causes_spin(black_hole)))`: (X-rays emitted by rings of gas orbiting black holes cause those black holes to spin.)\n- `is_supported(Implies(radius(gas_ring) > 49, Not(spinning(black_hole))))`: (Black holes that have orbiting rings of gas with radii greater than 49 kilometers are usually stationary.)\n- `is_supported(Implies(stable_orbit(gas_ring), emits_xrays(gas_ring)))`: (Only rings of gas that are in stable orbits around black holes emit flickering X-rays.)"
    ]
  },
  {
    "id": "test_174",
    "context": "Alexander: The chemical waste dump outside our town should be cleaned up immediately. Admittedly, it will be very costly to convert that site into woodland, but we have a pressing obligation to redress the harm we have done to local forests and wildlife. Teresa: But our town' s first priority is the health of its people. So even if putting the dump there was environmentally disastrous, we should not spend our resources on correcting it unless it presents a significant health hazard to people. If it does, then we only need to remove that hazard.",
    "question": "Teresa's statement most closely conforms to which one of the following principles?",
    "options": [
      "Resources should be allocated only to satisfy goals that have the highest priority.",
      "No expense should be spared in protecting the community's health.",
      "Environmental destruction should be redressed only if it is in the economic interest of the community to do so.",
      "Environmental hazards that pose slight health risks to people should be rectified if the technology is available to do so."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([priority_allocation, no_expense_spared, economic_interest, rectify_if_technology_available])\nstatement = Function([principles] -> [bool])\n\n# Constraints\nstatement(priority_allocation) ::: Resources should be allocated only to satisfy goals that have the highest priority\nstatement(no_expense_spared) ::: No expense should be spared in protecting the community's health\nstatement(economic_interest) ::: Environmental destruction should be redressed only if it is in the economic interest of the community to do so\nstatement(rectify_if_technology_available) ::: Environmental hazards that pose slight health risks to people should be rectified if the technology is available to do so\n\n# Options\nQuestion ::: Teresa's statement most closely conforms to which one of the following principles?\nis_conform(statement(priority_allocation)) ::: (A)\nis_conform(statement(no_expense_spared)) ::: (B)\nis_conform(statement(economic_interest)) ::: (C)\nis_conform(statement(rectify_if_technology_available)) ::: (D)"
    ]
  },
  {
    "id": "test_175",
    "context": "Peraski: Although driving gas-guzzling automobiles produces a greater level of pollution than driving smaller cars, those of us who drive smaller cars when we could use a bicycle cannot speak out against the use of gas guzzlers. We would be revealing our hypocrisy. Jackson: I acknowledge I could do better in this area. But, it would be worse not to speak out against greater sources of pollution just because I am being hypocritical.",
    "question": "The dialogue provides the most support for the claim that Peraski and Jackson disagree over whether",
    "options": [
      "speaking out against the use of gas guzzlers despite driving in situations in which one could use a bicycle reveals hypocrisy",
      "there is no moral difference between driving a gas guzzler and driving a smaller car",
      "driving even a small car when one could use a bicycle contributes to the level of pollution",
      "one should speak out against polluting even if doing so reveals one's own hypocrisy"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Peraski, Jackson])\nactions = EnumSort([speak_out, drive_gas_guzzler, drive_small_car, use_bicycle])\nmoral_judgments = EnumSort([hypocritical, not_hypocritical, morally_indifferent, morally_different])\nopinions = Function([people, actions] -> [moral_judgments])\n\n# Constraints\nopinions(Peraski, speak_out) == hypocritical ::: Peraski believes speaking out against gas guzzlers while driving a small car when one could use a bicycle is hypocritical\nopinions(Jackson, speak_out) == not_hypocritical ::: Jackson believes it is not hypocritical to speak out against greater sources of pollution even if one is being hypocritical\n\n# Options\nQuestion ::: The dialogue provides the most support for the claim that Peraski and Jackson disagree over whether\nis_disagreement(opinions(Peraski, speak_out) == hypocritical, opinions(Jackson, speak_out) == not_hypocritical) ::: (speaking out against the use of gas guzzlers despite driving in situations in which one could use a bicycle reveals hypocrisy\nis_disagreement(opinions(Peraski, drive_gas_guzzler) == morally_indifferent, opinions(Jackson, drive_gas_guzzler) == morally_different) ::: (there is no moral difference between driving a gas guzzler and driving a smaller car\nis_disagreement(opinions(Peraski, drive_small_car) == morally_indifferent, opinions(Jackson, drive_small_car) == morally_different) ::: (driving even a small car when one could use a bicycle contributes to the level of pollution\nis_disagreement(opinions(Peraski, speak_out) == hypocritical, opinions(Jackson, speak_out) == not_hypocritical) ::: (one should speak out against polluting even if doing so reveals one's own hypocrisy"
    ]
  },
  {
    "id": "test_176",
    "context": "George: A well-known educator claims that children who are read to when they are very young are more likely to enjoy reading when they grow up than are children who were not read to. But this claim is clearly false. My cousin Emory was regularly read to as a child and as an adult he seldom reads for pleasure, whereas no one read to me and reading is now my favorite form of relaxation. Ursula: You and Emory prove nothing in this case. Your experience is enough to refute the claim that all avid adult readers were read to as children, but what the educator said about reading to children is not that sort of claim.",
    "question": "Which one of the following describes a flaw in George's reasoning?",
    "options": [
      "He attempts to refute a general claim by reference to nonconforming cases, although the claim is consistent with the occurrence of such cases.",
      "He fails to establish that the claim made by this particular educator accurately reflects the position held by the majority of educators.",
      "He treats his own experience and the experiences of other members of his own family as though they have more weight as evidence than do the experiences of other people.",
      "He overlooks the well-known fact that not all reading is equally relaxing."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([George, Emory])\nclaims = EnumSort([general_claim, specific_claim])\nexperiences = Function([individuals] -> [bool])\nrefutes = Function([claims, individuals] -> [bool])\n\n# Constraints\nrefutes(general_claim, George) ::: George attempts to refute a general claim\nrefutes(specific_claim, Ursula) ::: Ursula refutes the specific claim that all avid adult readers were read to as children\nexperiences(George) == True ::: George's experience is that he was not read to as a child but enjoys reading as an adult\nexperiences(Emory) == False ::: Emory's experience is that he was read to as a child but does not enjoy reading as an adult\n\n# Options\nQuestion ::: Which one of the following describes a flaw in George's reasoning?\nis_flaw(He attempts to refute a general claim by reference to nonconforming cases, although the claim is consistent with the occurrence of such cases.) ::: (A)\nis_flaw(He fails to establish that the claim made by this particular educator accurately reflects the position held by the majority of educators.) ::: (B)\nis_flaw(He treats his own experience and the experiences of other members of his own family as though they have more weight as evidence than do the experiences of other people.) ::: (C)\nis_flaw(He overlooks the well-known fact that not all reading is equally relaxing.) ::: (D)"
    ]
  },
  {
    "id": "test_177",
    "context": "In the late 1980' s, the population of sea otters in the North Pacific Ocean began to decline. Of the two plausible explanations for the decline-increased predation by killer whales or disease-disease is the more likely. After all, a concurrent sharp decline in the populations of seals and sea lions was almost certainly caused by a pollution-related disease, which could have spread to sea otters, whereas the population of killer whales did not change noticeably.",
    "question": "Which of the following, if true, most seriously weakens the reasoning?",
    "options": [
      "Along the Pacific coast of North America in the 1980's, sea otters were absent from many locations where they had been relatively common in former times.",
      "There is no indication that substantial numbers of sea otters migrated to other locations from the North Pacific in the 1980's.",
      "Killer whales in the North Pacific usually prey on seals and sea lions but will, when this food source is scarce, seek out other prey.",
      "The North Pacific populations of seals and sea lions cover a wider geographic area than does the population of sea otters."
    ],
    "raw_logic_programs": [
      "# Declarations\nexplanations = EnumSort([increased_predation, disease])\npopulations = EnumSort([sea_otters, seals, sea_lions, killer_whales])\nevents = EnumSort([decline, stable])\ncauses = Function([populations, events] -> [explanations])\n\n# Constraints\ncauses(sea_otters, decline) == disease ::: Disease is the more likely explanation for the decline in sea otters\ncauses(seals, decline) == disease ::: The decline in seals is almost certainly caused by a pollution-related disease\ncauses(sea_lions, decline) == disease ::: The decline in sea lions is almost certainly caused by a pollution-related disease\ncauses(killer_whales, stable) == increased_predation ::: The population of killer whales did not change noticeably\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the reasoning?\nis_weakening(causes(sea_otters, decline) == increased_predation) ::: (A) Along the Pacific coast of North America in the 1980's, sea otters were absent from many locations where they had been relatively common in former times.\nis_weakening(causes(sea_otters, decline) == increased_predation) ::: (B) There is no indication that substantial numbers of sea otters migrated to other locations from the North Pacific in the 1980's.\nis_weakening(causes(sea_otters, decline) == increased_predation) ::: (C) Killer whales in the North Pacific usually prey on seals and sea lions but will, when this food source is scarce, seek out other prey.\nis_weakening(causes(sea_otters, decline) == increased_predation) ::: (D) The North Pacific populations of seals and sea lions cover a wider geographic area than does the population of sea otters."
    ]
  },
  {
    "id": "test_178",
    "context": "Dwight is the manager of a mid-sized regional paper company. The company' s sales have declined for seven consecutive quarters. All of the paper company' s regional and national competitors have experienced a similar loss in revenue. Dwight instituted a mass layoff and successfully kept his company out of bankruptcy.",
    "question": "Which one of the following is most strongly supported by the passage?",
    "options": [
      "The paper industry's decline is due to the digitalization of business records.",
      "The paper industry is experiencing a fundamental change in demand.",
      "Mass layoffs were the only way to keep the company out of bankruptcy.",
      "Mid-sized regional paper companies will no longer exist in ten years."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([sales_decline, competitors_decline, mass_layoff, bankruptcy_avoidance])\ncauses = EnumSort([digitalization, fundamental_change, layoffs_necessary, extinction])\nsupports = Function([events, causes] -> [bool])\n\n# Constraints\nsupports(sales_decline, digitalization) ::: The paper industry's decline is due to the digitalization of business records\nsupports(sales_decline, fundamental_change) ::: The paper industry is experiencing a fundamental change in demand\nsupports(mass_layoff, layoffs_necessary) ::: Mass layoffs were the only way to keep the company out of bankruptcy\nsupports(sales_decline, extinction) ::: Mid-sized regional paper companies will no longer exist in ten years\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the passage?\nis_most_supported(supports(sales_decline, digitalization)) ::: (A)\nis_most_supported(supports(sales_decline, fundamental_change)) ::: (B)\nis_most_supported(supports(mass_layoff, layoffs_necessary)) ::: (C)\nis_most_supported(supports(sales_decline, extinction)) ::: (D)"
    ]
  },
  {
    "id": "test_179",
    "context": "Elena: While I was at the dog show, every dog that growled at me was a white poodle, and every white poodle I saw growled at me.",
    "question": "Which one of the following can be properly inferred from Elena's statement?",
    "options": [
      "All the white dogs that Elena saw growled at her.",
      "At the dog show, no gray dogs growled at Elena.",
      "Elena did not see any gray poodles at the dog show.",
      "There were no gray poodles at the dog show."
    ],
    "raw_logic_programs": [
      "# Declarations\ndogs = EnumSort([white_poodle, other_dogs])\ngrowled = Function([dogs] -> [bool])\nsaw = Function([dogs] -> [bool])\n\n# Constraints\nForAll([d:dogs], Implies(growled(d), d == white_poodle)) ::: Every dog that growled at Elena was a white poodle\nForAll([d:dogs], Implies(saw(d) and d == white_poodle, growled(d))) ::: Every white poodle Elena saw growled at her\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from Elena's statement?\nis_inferred(ForAll([d:dogs], Implies(saw(d) and d == white_poodle, growled(d)))) ::: (All the white dogs that Elena saw growled at her.)\nis_inferred(Not(Exists([d:dogs], And(d != white_poodle, growled(d))))) ::: (At the dog show, no gray dogs growled at Elena.)\nis_inferred(Not(Exists([d:dogs], And(d != white_poodle, saw(d))))) ::: (Elena did not see any gray poodles at the dog show.)\nis_inferred(Not(Exists([d:dogs], And(d != white_poodle, True)))) ::: (There were no gray poodles at the dog show.)"
    ]
  },
  {
    "id": "test_180",
    "context": "Zoos have served both as educational resources and as entertainment. Unfortunately, removing animals from their natural habitats to stock the earliest zoos reduced certain species' populations, endangering their survival. Today most zoo animals are obtained from captive breeding programs, and many zoos now maintain breeding stocks for continued propagation of various species. This makes possible efforts to reestablish endangered species in the wild.",
    "question": "Which one of the following statements is most strongly supported by the information above?",
    "options": [
      "No zoos exploit wild animals or endanger the survival of species.",
      "Nearly all of the animals in zoos today were born in captivity.",
      "Some specimens of endangered species are born and bred in zoos.",
      "Zoos have played an essential role in educating the public about endangered species."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([no_exploitation, born_in_captivity, endangered_born_in_zoos, educational_role])\nsupports = Function([statements] -> [bool])\n\n# Constraints\nAnd(\n    Not(supports(no_exploitation)),  # The passage does not claim that no zoos exploit wild animals or endanger species.\n    Not(supports(born_in_captivity)),  # The passage does not provide enough information to claim nearly all zoo animals were born in captivity.\n    supports(endangered_born_in_zoos),  # The passage supports that some endangered species are born and bred in zoos.\n    Not(supports(educational_role))  # The passage does not specifically claim zoos play an essential educational role.\n)\n\n# Options\nQuestion ::: Which one of the following statements is most strongly supported by the information above?\nis_supported(supports(no_exploitation)) ::: (A)\nis_supported(supports(born_in_captivity)) ::: (B)\nis_supported(supports(endangered_born_in_zoos)) ::: (C)\nis_supported(supports(educational_role)) ::: (D)"
    ]
  },
  {
    "id": "test_181",
    "context": "In a test of fuel efficiency, car X and car Y yielded the same average fuel mileage, even though car X was driven in a less fuel-efficient manner than car Y was. Thus, car X is more fuel efficient than car Y.",
    "question": "Which one of the following arguments is most similar in its reasoning to the argument above?",
    "options": [
      "Our hamster gained the same amount of weight as our neighbors' hamster, even though our hamster ate more than theirs. So it must be that our hamster burned more calories than theirs did.",
      "When on his bicycle, Roland makes better time coasting down a hill than pedaling on a horizontal path. So he would make even better time on the hills if he were to pedal rather than coast.",
      "When asked to judge the value of various pieces of antique furniture, I gave lower estimates on average than you did. So in those cases where we both gave the same estimate, I must have overestimated the piece's value.",
      "Jean demonstrates a high level of visual acuity when she wears prescription glasses. Thus, it must be that without those prescription glasses, she would demonstrate a lower level of visual acuity."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([argument1, argument2, argument3, argument4])\nconditions = EnumSort([condition1, condition2, condition3, condition4])\nconclusions = EnumSort([conclusion1, conclusion2, conclusion3, conclusion4])\nsimilarity = Function([arguments] -> [bool])\n\n# Constraints\n# Argument structure: condition1 and condition2 lead to conclusion1\n# Argument 1: Car X and Car Y have the same mileage, but Car X is less efficient, so Car X is more efficient.\n# Argument 2: Our hamster gained the same weight as the neighbor's, but ate more, so it burned more calories.\n# Argument 3: Roland coasts faster downhill than pedaling on flat, so pedaling downhill would be faster.\n# Argument 4: I gave lower estimates on average, so when we agreed, I overestimated.\n# Argument 5: Jean sees well with glasses, so without them, she sees worse.\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its reasoning to the argument above?\nsimilarity(argument1) == similarity(argument2) ::: (A)\nsimilarity(argument1) == similarity(argument3) ::: (B)\nsimilarity(argument1) == similarity(argument4) ::: (C)\nsimilarity(argument1) == similarity(argument5) ::: (D)"
    ]
  },
  {
    "id": "test_182",
    "context": "The student body at this university takes courses in a wide range of disciplines. Miriam is a student at this university, so she takes courses in a wide range of disciplines.",
    "question": "Which one of the following arguments exhibits flawed reasoning most similar to that exhibited by the argument above?",
    "options": [
      "All older automobiles need frequent oil changes. This car is new, so its oil need not be changed as frequently.",
      "The students at this school take mathematics. Miguel is a student at this school, so he takes mathematics.",
      "The editorial board of this law journal has written on many legal issues. Louise is on the editorial board, so she has written on many legal issues.",
      "The component parts of bulldozers are heavy. This machine is a bulldozer, so it is heavy."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Miriam, Miguel, Louise])\ngroups = EnumSort([student_body, school, editorial_board])\nactivities = EnumSort([wide_range_disciplines, mathematics, legal_issues])\nparticipates = Function([students, activities] -> [bool])\ngroup_participates = Function([groups, activities] -> [bool])\nmember_of = Function([students] -> [groups])\n\n# Constraints\ngroup_participates(student_body, wide_range_disciplines) ::: The student body at this university takes courses in a wide range of disciplines\nparticipates(Miriam, wide_range_disciplines) ::: Miriam is a student at this university, so she takes courses in a wide range of disciplines\n\n# Options\nQuestion ::: Which one of the following arguments exhibits flawed reasoning most similar to that exhibited by the argument above?\nis_similar_flawed_reasoning(\n    And(\n        group_participates(school, mathematics),\n        participates(Miguel, mathematics)\n    )\n) ::: (B)\nis_similar_flawed_reasoning(\n    And(\n        group_participates(editorial_board, legal_issues),\n        participates(Louise, legal_issues)\n    )\n) ::: (C)"
    ]
  },
  {
    "id": "test_183",
    "context": "Archeologists have discovered three sites showing conclusive evidence for the mastery of fire in Tanzania, from a period slightly after the time that <i>Homo habilis</i> was present in Africa. These sites clearly were founded by <i>Homo erectus</i>, the descendent species of <i>Homo habilis</i> that migrated north, out of Africa and into Asia. <i>Homo erectus</i> was known to have mastered fire, from ample evidence at sites in Asia. There is no reason to attribute mastery of fire to Homo ergaster, the descendent species of <i>Homo habilis</i> that remained in Africa.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "Homo ergaster inherited all cultural knowledge from Homo habilis, a species that did not have mastery of fire.",
      "Homo ergaster did not occupy regions as far south as Tanzania until well after the time of these three sites.",
      "The strain of migration provided the selective pressure motivating Homo erectus' mastery of fire.",
      "Before their migration, Homo erectus occupied African territory as far south as Tanzania."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([Homo_habilis, Homo_erectus, Homo_ergaster])\nsites = EnumSort([Tanzania, Asia])\nmastery_of_fire = Function([species, sites] -> [bool])\ndescendant = Function([species] -> [species])\n\n# Constraints\ndescendant(Homo_habilis) == Homo_erectus ::: Homo erectus is the descendant species of Homo habilis\ndescendant(Homo_habilis) == Homo_ergaster ::: Homo ergaster is the descendant species of Homo habilis\nmastery_of_fire(Homo_erectus, Asia) == True ::: Homo erectus was known to have mastered fire in Asia\nmastery_of_fire(Homo_erectus, Tanzania) == True ::: Sites in Tanzania were founded by Homo erectus, who mastered fire\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(ForAll([s:sites], Implies(descendant(Homo_habilis) == Homo_ergaster, Not(mastery_of_fire(Homo_ergaster, s))))) ::: (Homo ergaster inherited all cultural knowledge from Homo habilis, a species that did not have mastery of fire.\nis_assumption(Not(Exists([s:sites], And(s == Tanzania, mastery_of_fire(Homo_ergaster, s))))) ::: (Homo ergaster did not occupy regions as far south as Tanzania until well after the time of these three sites.\nis_assumption(Exists([s:sites], And(s == Asia, mastery_of_fire(Homo_erectus, s)))) ::: (The strain of migration provided the selective pressure motivating Homo erectus' mastery of fire.\nis_assumption(Exists([s:sites], And(s == Tanzania, mastery_of_fire(Homo_erectus, s)))) ::: (Before their migration, Homo erectus occupied African territory as far south as Tanzania."
    ]
  },
  {
    "id": "test_184",
    "context": "Fashion company executive: The number of competing brands of clothing is increasing much more quickly than is consumer demand for new clothing. As a result, it is becoming ever more for our clothing company to keep consumers focused on our products. To increase our sales, ttherefore, our company plans to introduce innovative, eye-catching lines of clothing much more frequently.",
    "question": "To evaluate whether the plan described by the executive would be likely to achieve its goal, it would be most useful to know which of the following?",
    "options": [
      "Why the number of competing brands of clothing is increasing more quickly than consumer demand for new clothing",
      "Whether other, competing clothing companies will more frequently introduce newlines of clothing",
      "To what extent consumers' attention tends to be focused on innovative, eye-catching products in other industries",
      "How much more likely most consumers are to buy innovative, eye-catching lines of clothing than they are to buy conventional, familiar clothing"
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([competing_brands_increase, consumer_demand_increase, consumer_focus, sales_increase, innovative_lines, competing_companies, consumer_attention, consumer_likelihood])\nfunctions = Function([variables] -> [bool])\n\n# Constraints\nfunctions(competing_brands_increase) ::: The number of competing brands of clothing is increasing\nfunctions(consumer_demand_increase) ::: Consumer demand for new clothing is increasing\nfunctions(consumer_focus) ::: Consumers are focused on our products\nfunctions(sales_increase) ::: Increase in sales\nfunctions(innovative_lines) ::: Introduction of innovative, eye-catching lines of clothing\nfunctions(competing_companies) ::: Competing clothing companies introduce new lines\nfunctions(consumer_attention) ::: Consumers' attention on innovative products in other industries\nfunctions(consumer_likelihood) ::: Likelihood of consumers buying innovative clothing\n\n# Options\nQuestion ::: To evaluate whether the plan described by the executive would be likely to achieve its goal, it would be most useful to know which of the following?\nis_useful(functions(competing_brands_increase) > functions(consumer_demand_increase)) ::: (A) Why the number of competing brands of clothing is increasing more quickly than consumer demand for new clothing\nis_useful(functions(competing_companies)) ::: (B) Whether other, competing clothing companies will more frequently introduce new lines of clothing\nis_useful(functions(consumer_attention)) ::: (C) To what extent consumers' attention tends to be focused on innovative, eye-catching products in other industries\nis_useful(functions(consumer_likelihood)) ::: (D) How much more likely most consumers are to buy innovative, eye-catching lines of clothing than they are to buy conventional, familiar clothing"
    ]
  },
  {
    "id": "test_185",
    "context": "Psychologist: Attention Deficit Hyperactivity Disorder (ADHD) is a brain disorder that prevents people from paying attention and controlling their impulses. Relatively recently, prescription drugs have become the most common treatment for ADHD. In patients suffering from ADHD, the drugs always increase the patients' impulse control and ability to pay attention. However, when prescribed to patients who do not suffer from ADHD, severe side effects and intense dependency can result. Determining whether a teenager is suffering from ADHD or mere teenage angst is difficult, if not impossible, and ttherefore, ADHD drugs should be banned.",
    "question": "To which one of the following propositions does the psychologist's reasoning most closely conform?",
    "options": [
      "Doctors overprescribe medication due to financial incentives.",
      "Popular wisdom cannot be trusted.",
      "Risk prevention should be the guiding priority.",
      "Drugs are an inherently risky treatment option."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([overprescribe, popular_wisdom_untrustworthy, risk_prevention_priority, drugs_inherently_risky])\nconforms_to = Function([propositions] -> [bool])\n\n# Constraints\nForAll([p:propositions], Not(conforms_to(p))) ::: Default assumption that the reasoning does not conform to any proposition\n\n# Options\nQuestion ::: To which one of the following propositions does the psychologist's reasoning most closely conform?\nconforms_to(risk_prevention_priority) ::: (C) Risk prevention should be the guiding priority."
    ]
  },
  {
    "id": "test_186",
    "context": "Journalist: Many people object to mandatory retirement at age 65 as being arbitrary, arguing that people over 65 make useful contributions. However, if those who reach 65 are permitted to continue working indefinitely, we will face unacceptable outcomes. First, young people entering the job market will not be able to obtain decent jobs in the professions for which they were trained, resulting in widespread dissatisfaction among the young. Second, it is not fair for those who have worked 40 or more years to deprive others of opportunities. Ttherefore, mandatory retirement should be retained.",
    "question": "The journalist's argument depends on assuming which one of the following?",
    "options": [
      "All young people entering the job market are highly trained professionals.",
      "Anyone who has worked 40 years is at least 65 years old.",
      "If people are forced to retire at age 65, there will be much dissatisfaction among at least some older people.",
      "If retirement ceases to be mandatory at age 65, at least some people will choose to work past age 65."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([young, older])\nage = Function([people] -> [int])\nworking = Function([people] -> [bool])\n\n# Constraints\nage(young) < 65 ::: Young people are under 65\nage(older) >= 65 ::: Older people are 65 or older\nForAll([p:people], Implies(age(p) >= 65, Not(working(p)))) ::: If people are forced to retire at age 65, they do not work\n\n# Options\nQuestion ::: The journalist's argument depends on assuming which one of the following?\nis_assumption(ForAll([p:people], Implies(working(p), age(p) >= 65))) ::: (A) All young people entering the job market are highly trained professionals.\nis_assumption(ForAll([p:people], Implies(age(p) >= 65, working(p)))) ::: (B) Anyone who has worked 40 years is at least 65 years old.\nis_assumption(Exists([p:people], And(age(p) >= 65, Not(working(p))))) ::: (C) If people are forced to retire at age 65, there will be much dissatisfaction among at least some older people.\nis_assumption(Exists([p:people], And(age(p) >= 65, working(p)))) ::: (D) If retirement ceases to be mandatory at age 65, at least some people will choose to work past age 65."
    ]
  },
  {
    "id": "test_187",
    "context": "A study of the dietary habits of a group of people who had recently developed cancer and a group without cancer found that during the previous five years the diets of the two groups' members closely matched each other in the amount of yogurt they contained. Yogurt contains galactose, which is processed in the body by an enzyme. In the people with cancer the levels of this enzyme were too low to process the galactose in the yogurt they were consuming. It can be concluded that galactose in amounts exceeding the body' s ability to process it is carcinogenic.",
    "question": "Of the following, which one constitutes the strongest objection to the reasoning in the argument?",
    "options": [
      "The argument overlooks the possibility that cancer causes low levels of the enzyme.",
      "The argument focuses on only one substance that can increase the risk of cancer, when it is well known that there are many such substances.",
      "The argument fails to consider whether the dietary habits of everyone in the two groups were the same in all other respects.",
      "The argument neglects to recommend that people with low levels of the enzyme avoid eating yogurt."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([cancer, no_cancer])\nsubstances = EnumSort([yogurt, galactose])\nenzyme_levels = Function([groups] -> [int])\ndietary_habits = Function([groups, substances] -> [int])\n\n# Constraints\nForAll([s:substances], dietary_habits(cancer, s) == dietary_habits(no_cancer, s)) ::: the diets of the two groups' members closely matched each other in the amount of yogurt\nenzyme_levels(cancer) < threshold ::: in the people with cancer the levels of this enzyme were too low to process the galactose\n\n# Options\nQuestion ::: Of the following, which one constitutes the strongest objection to the reasoning in the argument?\nis_strong_objection(Exists([g:groups], enzyme_levels(g) < threshold) -> cancer_causes_low_enzyme) ::: (The argument overlooks the possibility that cancer causes low levels of the enzyme.\nis_strong_objection(Exists([s:substances], s != galactose) -> increases_cancer_risk) ::: (The argument focuses on only one substance that can increase the risk of cancer, when it is well known that there are many such substances.\nis_strong_objection(Exists([s:substances], dietary_habits(cancer, s) != dietary_habits(no_cancer, s))) ::: (The argument fails to consider whether the dietary habits of everyone in the two groups were the same in all other respects.\nis_strong_objection(Exists([g:groups], enzyme_levels(g) < threshold) -> avoid_yogurt) ::: (The argument neglects to recommend that people with low levels of the enzyme avoid eating yogurt."
    ]
  },
  {
    "id": "test_188",
    "context": "People were asked in a survey how old they felt. They replied, almost unanimously despite a great diversity of ages, with a number that was 75 percent of their real age. There is, however, a problem in understanding this sort of response. For example, suppose it meant that a 48-year-old man was claiming to feel as he felt at 36. But at age 36 he would have said he felt like a man of 27, and at 27 he would have said he felt just over 20 and so on into childhood. And surely, that 48-year-old man did not mean to suggest that he felt like a child!",
    "question": "Which one of the following techniques of reasoning is employed in the argument?",
    "options": [
      "qualifying an overly sweeping generalization in light of a single, well chosen counterexample",
      "projecting from responses collected at one time from many individuals of widely different ages to hypothetical earlier responses of a single individual at some of those ages",
      "deriving a contradiction from a pair of statements in order to prove that at least one of those statements is false",
      "reinterpreting what certain people actually said in the light of what would, in the circumstances, have been the most reasonable thing for them to say"
    ],
    "raw_logic_programs": [
      "# Declarations\ntechniques = EnumSort([qualifying, projecting, deriving, reinterpreting])\nargument = Function([techniques] -> [bool])\n\n# Constraints\nargument(projecting) ::: The argument projects from responses collected at one time from many individuals of widely different ages to hypothetical earlier responses of a single individual at some of those ages\n\n# Options\nQuestion ::: Which one of the following techniques of reasoning is employed in the argument?\nis_valid(argument(qualifying)) ::: (qualifying an overly sweeping generalization in light of a single, well chosen counterexample)\nis_valid(argument(projecting)) ::: (projecting from responses collected at one time from many individuals of widely different ages to hypothetical earlier responses of a single individual at some of those ages)\nis_valid(argument(deriving)) ::: (deriving a contradiction from a pair of statements in order to prove that at least one of those statements is false)\nis_valid(argument(reinterpreting)) ::: (reinterpreting what certain people actually said in the light of what would, in the circumstances, have been the most reasonable thing for them to say)"
    ]
  },
  {
    "id": "test_189",
    "context": "At a large elementary school researchers studied a small group of children who successfully completed an experimental program in which they learned to play chess. The study found that most of the children who completed the program soon showed a significant increase in achievement levels in all of their schoolwork. Thus, it is likely that the reasoning power and spatial intuition exercised in chess-playing also contribute to achievement in many other areas of intellectual activity.",
    "question": "Which one of the following, if true, most tends to undermine the argument?",
    "options": [
      "Those children who began the program but who did not successfully complete it had lower preprogram levels of achievement than did those who eventually did successfully complete the program.",
      "Many of the children who completed the program subsequently sought membership on a school chess team that required a high grade average for membership.",
      "Some students who did not participate in the chess program had learned to play chess at home.",
      "At least some of the students who did not successfully complete the program were nevertheless more talented chess players than some of the students who did complete the program."
    ],
    "raw_logic_programs": [
      "# Declarations\nchildren = EnumSort([completed, not_completed, non_participants])\nattributes = EnumSort([preprogram_achievement, postprogram_achievement, chess_skill, grade_average])\nvalues = EnumSort([high, low, significant_increase, no_increase])\nhas_attribute = Function([children, attributes] -> [values])\n\n# Constraints\nForAll([c:children], Or(has_attribute(c, preprogram_achievement) == high, has_attribute(c, preprogram_achievement) == low)) ::: Each child has a preprogram achievement level\nForAll([c:children], Or(has_attribute(c, postprogram_achievement) == significant_increase, has_attribute(c, postprogram_achievement) == no_increase)) ::: Each child has a postprogram achievement level\nForAll([c:children], Or(has_attribute(c, chess_skill) == high, has_attribute(c, chess_skill) == low)) ::: Each child has a chess skill level\nForAll([c:children], Or(has_attribute(c, grade_average) == high, has_attribute(c, grade_average) == low)) ::: Each child has a grade average\n\n# Options\nQuestion ::: Which one of the following, if true, most tends to undermine the argument?\nis_undermining(And(has_attribute(not_completed, preprogram_achievement) == low, has_attribute(completed, preprogram_achievement) == high)) ::: (A)\nis_undermining(And(has_attribute(completed, grade_average) == high, has_attribute(completed, postprogram_achievement) == significant_increase)) ::: (B)\nis_undermining(Exists([c:children], And(c == non_participants, has_attribute(c, chess_skill) == high))) ::: (C)\nis_undermining(Exists([c1:children, c2:children], And(c1 == not_completed, c2 == completed, has_attribute(c1, chess_skill) == high, has_attribute(c2, chess_skill) == low))) ::: (D)"
    ]
  },
  {
    "id": "test_190",
    "context": "Defendants who can afford expensive private defense lawyers have a lower conviction rate than those who rely on court-appointed public defenders. This explains why criminals who commit lucrative crimes like embezzlement or insider trading are more successful at avoiding conviction than are street criminals.",
    "question": "The explanation offered above would be more persuasive if which one of the following were true?",
    "options": [
      "Most prosecutors are not competent to handle cases involving highly technical financial evidence and have more success in prosecuting cases of robbery or simple assault.",
      "The number of criminals convicted of street crimes is far greater than the number of criminals convicted of embezzlement or insider trading.",
      "The percentage of defendants who actually committed the crimes of which they are accused is no greater for publicly defended than for privately defended defendants.",
      "Many street crimes, such as drug dealing, are extremely lucrative and those committing them can afford expensive private lawyers."
    ],
    "raw_logic_programs": [
      "# Declarations\ndefendants = EnumSort([private_defense, public_defense])\ncrimes = EnumSort([lucrative, street])\nconviction_rate = Function([defendants, crimes] -> [float])\n\n# Constraints\nconviction_rate(private_defense, lucrative) < conviction_rate(public_defense, lucrative) ::: Defendants with private defense lawyers have a lower conviction rate for lucrative crimes\nconviction_rate(private_defense, street) < conviction_rate(public_defense, street) ::: Defendants with private defense lawyers have a lower conviction rate for street crimes\n\n# Options\nQuestion ::: The explanation offered above would be more persuasive if which one of the following were true?\nis_more_persuasive(ForAll([c:crimes], conviction_rate(public_defense, c) == conviction_rate(private_defense, c))) ::: (C) The percentage of defendants who actually committed the crimes of which they are accused is no greater for publicly defended than for privately defended defendants."
    ]
  },
  {
    "id": "test_191",
    "context": "Because dinosaurs were reptiles, scientists once assumed that, like all reptiles alive today, dinosaurs were cold-blooded. The recent discovery of dinosaur fossils in the northern arctic, however, has led a number of researchers to conclude that at least some dinosaurs might have been warm-blooded. These researchers point out that only warm-blooded animals could have withstood the frigid temperatures that are characteristic of arctic winters, whereas coldblooded animals would have frozen to death in the extreme cold.",
    "question": "Which one of the following, if true, weakens the researchers' argument?",
    "options": [
      "Experts on prehistoric climatic conditions believe that winter temperatures in the prehistoric northern arctic were not significantly different from what they are today.",
      "The arctic dinosaur fossils were found alongside fossils of plants known for their ability to withstand extremely cold temperatures.",
      "The number of fossils found together indicates herds of dinosaurs so large that they would need to migrate to find a continual food supply.",
      "Today's reptiles are generally confined to regions of temperate or even tropical climates."
    ],
    "raw_logic_programs": [
      "# Declarations\ndinosaurs = EnumSort([cold_blooded, warm_blooded])\nfossils = EnumSort([arctic_dinosaurs, arctic_plants])\nclimates = EnumSort([prehistoric_arctic, current_arctic])\nconditions = EnumSort([frigid, temperate, tropical])\nresearchers_conclusion = Function([dinosaurs] -> [bool])\n\n# Constraints\nresearchers_conclusion(warm_blooded) == True ::: Researchers conclude that at least some dinosaurs might have been warm-blooded\nForAll([d:dinosaurs], Implies(d == cold_blooded, Not(researchers_conclusion(d)))) ::: Cold-blooded animals would have frozen to death in the extreme cold\n\n# Options\nQuestion ::: Which one of the following, if true, weakens the researchers' argument?\nis_weakening(ForAll([c:climates], c == prehistoric_arctic == current_arctic)) ::: (A) Experts on prehistoric climatic conditions believe that winter temperatures in the prehistoric northern arctic were not significantly different from what they are today.\nis_weakening(Exists([f:fossils], f == arctic_plants)) ::: (B) The arctic dinosaur fossils were found alongside fossils of plants known for their ability to withstand extremely cold temperatures.\nis_weakening(Exists([f:fossils], f == arctic_dinosaurs)) ::: (C) The number of fossils found together indicates herds of dinosaurs so large that they would need to migrate to find a continual food supply.\nis_weakening(ForAll([c:conditions], c == temperate || c == tropical)) ::: (D) Today's reptiles are generally confined to regions of temperate or even tropical climates."
    ]
  },
  {
    "id": "test_192",
    "context": "Insect infestation drastically reduces the yield of coffee plants and is rampant throughout areas of the world where coffee plants are grown. The insects can be controlled with pesticides, but the pesticides can pose a health risk to people living nearby. The pesticides are thus unsuitable for small patches of coffee shrubs and trees in populated areas. Fortunately, most large coffee plantations are in isolated locations in which pesticides can be safely used. Ttherefore, most of the world' s coffee crop is not seriously threatened by insect infestation.",
    "question": "Which one of the following is an assumption upon which the argument depends?",
    "options": [
      "Large plantations produce most or all of the world's coffee.",
      "Insects are the only organism that threaten coffee plants on a worldwide scale.",
      "It will eventually be possible to breed strains of coffee plants that are resistant to insects.",
      "Insects multiply more slowly on large plantations than in small coffee plant patches."
    ],
    "raw_logic_programs": [
      "# Declarations\nplantations = EnumSort([large, small])\nlocations = EnumSort([isolated, populated])\nthreats = EnumSort([insects, other])\ncoffee_production = Function([plantations] -> [int])\npesticide_use = Function([locations] -> [bool])\nthreat_level = Function([threats, plantations] -> [bool])\n\n# Constraints\nForAll([p:plantations], coffee_production(p) > 0) ::: Each type of plantation produces some coffee\npesticide_use(isolated) == True ::: Pesticides can be safely used in isolated locations\npesticide_use(populated) == False ::: Pesticides are unsuitable for populated areas\nthreat_level(insects, small) == True ::: Insects threaten small patches of coffee plants\nthreat_level(insects, large) == False ::: Insects do not seriously threaten large plantations due to pesticide use\n\n# Options\nQuestion ::: Which one of the following is an assumption upon which the argument depends?\nis_assumption(coffee_production(large) > coffee_production(small)) ::: (A) Large plantations produce most or all of the world's coffee.\nis_assumption(ForAll([p:plantations], Not(threat_level(other, p)))) ::: (B) Insects are the only organism that threaten coffee plants on a worldwide scale.\nis_assumption(Exists([p:plantations], Not(threat_level(insects, p)))) ::: (C) It will eventually be possible to breed strains of coffee plants that are resistant to insects.\nis_assumption(ForAll([p:plantations], threat_level(insects, p) == False)) ::: (D) Insects multiply more slowly on large plantations than in small coffee plant patches."
    ]
  },
  {
    "id": "test_193",
    "context": "Soaking dried beans overnight before cooking them reduces cooking time. However, cooking without presoaking yields plumper beans. Ttherefore, when a bean dish' s quality is more important than the need to cook that dish quickly, beans should not be presoaked.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "The plumper the bean, the better it tastes.",
      "None of the other ingredients in the dish need to be presoaked.",
      "Plumper beans enhance the quality of a dish.",
      "A dish's appearance is as important as its taste."
    ],
    "raw_logic_programs": [
      "# Declarations\nquality = EnumSort([important, not_important])\ncooking_time = EnumSort([quick, not_quick])\nbean_state = EnumSort([plump, not_plump])\npresoaked = Function([bean_state] -> [bool])\ndish_quality = Function([bean_state] -> [quality])\n\n# Constraints\npresoaked(plump) == False ::: Cooking without presoaking yields plumper beans\npresoaked(not_plump) == True ::: Soaking dried beans overnight before cooking them reduces cooking time\ndish_quality(plump) == important ::: When a bean dish's quality is more important, beans should not be presoaked\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(dish_quality(plump) == important) ::: (The plumper the bean, the better it tastes.\nis_assumption(True) ::: (None of the other ingredients in the dish need to be presoaked.\nis_assumption(dish_quality(plump) == important) ::: (Plumper beans enhance the quality of a dish.\nis_assumption(False) ::: (A dish's appearance is as important as its taste."
    ]
  },
  {
    "id": "test_194",
    "context": "Economist: In any country, inflation occurs when the money supply grows more than the production of goods and services grows. Similarly, deflation occurs when the production of goods and services grows more than does the money supply. In my country, gold anchors the money supply, so the money supply is very stable. Hence, my country is very unlikely to experience significant inflation or deflation.",
    "question": "Which one of the following is an assumption on which the economist's argument depends?",
    "options": [
      "The production of goods and services in the economist's country is unlikely to grow markedly.",
      "Having stability in the production of goods and services is the most effective means of preventing inflation or deflation.",
      "Having an anchor such as gold is necessary for the stability of a country's money supply.",
      "A stable money supply is the most effective means of preventing inflation."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([economist_country])\nfactors = EnumSort([money_supply, production])\ngrowth = Function([countries, factors] -> [real])\n\n# Constraints\nForAll([c:countries], Implies(growth(c, money_supply) > growth(c, production), inflation(c))) ::: Inflation occurs when the money supply grows more than the production of goods and services\nForAll([c:countries], Implies(growth(c, production) > growth(c, money_supply), deflation(c))) ::: Deflation occurs when the production of goods and services grows more than the money supply\nForAll([c:countries], stable_money_supply(c)) ::: Gold anchors the money supply, so it is very stable\nForAll([c:countries], Implies(stable_money_supply(c), Not(inflation(c)) And Not(deflation(c)))) ::: A stable money supply implies unlikely significant inflation or deflation\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the economist's argument depends?\nis_assumption(ForAll([c:countries], Not(growth(c, production) > growth(c, money_supply)))) ::: (The production of goods and services in the economist's country is unlikely to grow markedly.\nis_assumption(ForAll([c:countries], stable_production(c))) ::: (Having stability in the production of goods and services is the most effective means of preventing inflation or deflation.\nis_assumption(ForAll([c:countries], Implies(Not(stable_money_supply(c)), Not(stable_money_supply(c))))) ::: (Having an anchor such as gold is necessary for the stability of a country's money supply.\nis_assumption(ForAll([c:countries], Implies(stable_money_supply(c), Not(inflation(c)) And Not(deflation(c))))) ::: (A stable money supply is the most effective means of preventing inflation."
    ]
  },
  {
    "id": "test_195",
    "context": "The prevalence of a simian virus has been directly correlated with population density in gorillas. Recent fieldwork in the Republic of Dunaga, based on capturing gorillas and testing the gorillas for the virus, has shown that Morgania Plain gorillas are more than twice as likely to be infected than are the Koluga Mountain gorillas. Nevertheless, the population density of Koluga gorillas is significantly greater than that of Morgania gorillas.",
    "question": "Which of the following could best account for the discrepancy noted above?",
    "options": [
      "Because of the Morgania gorilla's natural habitat and its less reclusive nature, researchers have tested a greater number of Morgania gorillas than Koluga gorillas.",
      "The Koluga and the Morgania both have similar markings on their backs but are classified as different subspecies.",
      "Infected Koluga gorillas behave very aggressively and are more difficult to subdue for testing.",
      "During periods of little rainfall, Koluga gorillas sometimes wander down into the plains in search of food."
    ],
    "raw_logic_programs": [
      "# Declarations\ngorilla_groups = EnumSort([Morgania, Koluga])\nvirus_status = EnumSort([infected, not_infected])\npopulation_density = Function([gorilla_groups] -> [int])\ninfection_rate = Function([gorilla_groups] -> [float])\ntested = Function([gorilla_groups] -> [int])\n\n# Constraints\ninfection_rate(Morgania) > 2 * infection_rate(Koluga) ::: Morgania gorillas are more than twice as likely to be infected than Koluga gorillas\npopulation_density(Koluga) > population_density(Morgania) ::: The population density of Koluga gorillas is significantly greater than that of Morgania gorillas\n\n# Options\nQuestion ::: Which of the following could best account for the discrepancy noted above?\nis_possible(tested(Morgania) > tested(Koluga)) ::: (A) Because of the Morgania gorilla's natural habitat and its less reclusive nature, researchers have tested a greater number of Morgania gorillas than Koluga gorillas.\nis_irrelevant() ::: (B) The Koluga and the Morgania both have similar markings on their backs but are classified as different subspecies.\nis_possible(Exists([g:gorilla_groups], And(virus_status(g) == infected, aggressive_behavior(g)))) ::: (C) Infected Koluga gorillas behave very aggressively and are more difficult to subdue for testing.\nis_irrelevant() ::: (D) During periods of little rainfall, Koluga gorillas sometimes wander down into the plains in search of food."
    ]
  },
  {
    "id": "test_196",
    "context": "In countries where government officials are neither selected by free elections nor open to criticism by a free press, the lives of citizens are controlled by policies they have had no role in creating. This is why such countries are prone to civil disorder, in spite of the veneer of calm such countries often present to a visitor. When people do not understand the purpose of the restrictions placed on their behavior they have a greater tendency to engage in civil disorder as an expression of their frustration.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Civil disorder does not generally occur in countries that have either free elections or a free press.",
      "Civil disorder cannot be prevented by security forces alone, however great the powers granted them by the government.",
      "A free press is better able to convey to citizens the purpose of government policy than is a press controlled by the government.",
      "People tend not to understand the purpose of restrictions unless they participate in their formulation."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([country1, country2, country3])\nattributes = EnumSort([free_elections, free_press, civil_disorder, citizen_control, policy_participation])\nhas_attribute = Function([countries, attributes] -> [bool])\n\n# Constraints\nForAll([c:countries], Implies(Not(has_attribute(c, free_elections)), has_attribute(c, citizen_control))) ::: In countries where government officials are neither selected by free elections nor open to criticism by a free press, the lives of citizens are controlled by policies they have had no role in creating\nForAll([c:countries], Implies(has_attribute(c, citizen_control), has_attribute(c, civil_disorder))) ::: This is why such countries are prone to civil disorder\nForAll([c:countries], Implies(Not(has_attribute(c, policy_participation)), has_attribute(c, civil_disorder))) ::: When people do not understand the purpose of the restrictions placed on their behavior they have a greater tendency to engage in civil disorder\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([c:countries], Implies(Or(has_attribute(c, free_elections), has_attribute(c, free_press)), Not(has_attribute(c, civil_disorder))))) ::: (A) Civil disorder does not generally occur in countries that have either free elections or a free press\nis_assumption(ForAll([c:countries], Implies(has_attribute(c, civil_disorder), Not(has_attribute(c, security_forces))))) ::: (B) Civil disorder cannot be prevented by security forces alone, however great the powers granted them by the government\nis_assumption(ForAll([c:countries], Implies(has_attribute(c, free_press), has_attribute(c, policy_participation)))) ::: (C) A free press is better able to convey to citizens the purpose of government policy than is a press controlled by the government\nis_assumption(ForAll([c:countries], Implies(Not(has_attribute(c, policy_participation)), Not(has_attribute(c, understanding_restrictions))))) ::: (D) People tend not to understand the purpose of restrictions unless they participate in their formulation"
    ]
  },
  {
    "id": "test_197",
    "context": "Chemical-company employee: A conservation group' s study of the pollutants released into the environment by 30 small chemical companies reveals that our company and four other companies together account for 60 percent of the total. Clearly, our company releases more pollutants than most chemical companies similar to us in size.",
    "question": "Which one of the following is an assumption required by the employee's argument?",
    "options": [
      "The four other companies mentioned by the employee do not together account for very close to 60 percent of the total pollution by the 30 companies.",
      "The employee's company does not produce chemicals whose processing naturally produces more pollutants than the chemicals produced by other small chemical companies.",
      "There is no significant variation in the quantities of pollutants released by the other 25 small chemical companies.",
      "The total pollution produced by all small chemical companies combined is not greatly outweighed by that produced by large chemical companies."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([company_1, company_2, company_3, company_4, company_5, company_6, company_7, company_8, company_9, company_10, company_11, company_12, company_13, company_14, company_15, company_16, company_17, company_18, company_19, company_20, company_21, company_22, company_23, company_24, company_25, company_26, company_27, company_28, company_29, company_30])\npollution = Function([companies] -> [int])\nour_company = company_1\n\n# Constraints\nSum([pollution(company) for company in companies]) == 100 ::: Total pollution is 100 percent\nSum([pollution(company) for company in [our_company, company_2, company_3, company_4, company_5]]) == 60 ::: Our company and four others account for 60 percent of the total\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the employee's argument?\nis_required(And(pollution(company_2) + pollution(company_3) + pollution(company_4) + pollution(company_5) < 60)) ::: (A) The four other companies mentioned by the employee do not together account for very close to 60 percent of the total pollution by the 30 companies.\nis_required(Not(Exists([c:companies], pollution(c) > pollution(our_company) & c != our_company))) ::: (B) The employee's company does not produce chemicals whose processing naturally produces more pollutants than the chemicals produced by other small chemical companies.\nis_required(ForAll([c:companies], pollution(c) == pollution(our_company) | c == our_company)) ::: (C) There is no significant variation in the quantities of pollutants released by the other 25 small chemical companies.\nis_required(Sum([pollution(company) for company in companies]) > Sum([pollution(company) for company in large_companies])) ::: (D) The total pollution produced by all small chemical companies combined is not greatly outweighed by that produced by large chemical companies."
    ]
  },
  {
    "id": "test_198",
    "context": "Sociologist: Widespread acceptance of the idea that individuals are incapable of looking after their own welfare is injurious to a democracy. So legislators who value democracy should not propose any law prohibiting behavior that is not harmful to anyone besides the person engaging in it. After all, the assumptions that appear to guide legislators will often become widely accepted.",
    "question": "The sociologist's argument requires the assumption that",
    "options": [
      "legislators often seem to be guided by the assumption that individuals are incapable of looking after their own welfare, even though these legislators also seem to value democracy",
      "people tend to believe what is believed by those who are prominent and powerful",
      "a legislator proposing a law prohibiting an act that can harm only the person performing the act will seem to be assuming that individuals are incapable of looking after their own welfare",
      "in most cases, behavior that is harmful to the person who engages in it is harmful to no one else"
    ],
    "raw_logic_programs": [
      "# Declarations\nlegislators = EnumSort([legislator1, legislator2, legislator3, ...])\nbeliefs = EnumSort([incapable_of_self_welfare, value_democracy])\nlaws = EnumSort([prohibit_self_harm_behavior])\nassumptions = Function([legislators] -> [beliefs])\npropose = Function([legislators, laws] -> [bool])\nacceptance = Function([beliefs] -> [bool])\n\n# Constraints\nForAll([l:legislators], Implies(propose(l, prohibit_self_harm_behavior), assumptions(l) == incapable_of_self_welfare)) ::: legislators who propose laws prohibiting self-harm behavior assume individuals are incapable of self-welfare\nForAll([b:beliefs], Implies(Exists([l:legislators], assumptions(l) == b), acceptance(b))) ::: assumptions guiding legislators often become widely accepted\n\n# Options\nQuestion ::: The sociologist's argument requires the assumption that\nis_required(Exists([l:legislators], And(assumptions(l) == incapable_of_self_welfare, assumptions(l) == value_democracy))) ::: (A)\nis_required(Exists([p:prominent_people], acceptance(beliefs(p)))) ::: (B)\nis_required(ForAll([l:legislators], Implies(propose(l, prohibit_self_harm_behavior), assumptions(l) == incapable_of_self_welfare))) ::: (C)\nis_required(ForAll([b:beliefs], Implies(b == incapable_of_self_welfare, Not(Exists([o:others], harm(o, b)))))) ::: (D)"
    ]
  },
  {
    "id": "test_199",
    "context": "Terrence Gurney suggests that because his books appeal to a wide audience, he is not given due credit for his literary achievements. Surely he is mistaken. Gurney' s books tell interesting stories, but the writing is flat, leaving no lasting impression on the reader. This is likely the reason that Gurney has not received praise for literary achievement.",
    "question": "Which one of the following most accurately states the argument's overall conclusion?",
    "options": [
      "Even though Terrence Gurney's books tell interesting stories, his writing is flat and leaves no lasting impression on the reader.",
      "Terrence Gurney is mistaken when he suggests that the wide appeal of his books has prevented him from being given due credit for his literary achievements.",
      "Terrence Gurney has not been given due credit for his literary achievements because his books appeal to such a wide audience.",
      "Terrence Gurney's books are not significant literary achievements."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([interesting_stories, flat_writing, no_lasting_impression, wide_audience_appeal, no_due_credit, mistaken_suggestion])\nconclusion = Function([statements] -> [bool])\n\n# Constraints\nconclusion(flat_writing) ::: Gurney's books tell interesting stories, but the writing is flat\nconclusion(no_lasting_impression) ::: The writing leaves no lasting impression on the reader\nconclusion(no_due_credit) ::: Gurney has not received praise for literary achievement\nconclusion(mistaken_suggestion) ::: Gurney is mistaken in his suggestion\n\n# Options\nQuestion ::: Which one of the following most accurately states the argument's overall conclusion?\nis_conclusion(conclusion(mistaken_suggestion)) ::: (Terrence Gurney is mistaken when he suggests that the wide appeal of his books has prevented him from being given due credit for his literary achievements.\nis_conclusion(conclusion(flat_writing)) ::: (Even though Terrence Gurney's books tell interesting stories, his writing is flat and leaves no lasting impression on the reader.\nis_conclusion(conclusion(no_due_credit)) ::: (Terrence Gurney has not been given due credit for his literary achievements because his books appeal to such a wide audience.\nis_conclusion(conclusion(no_lasting_impression)) ::: (Terrence Gurney's books are not significant literary achievements."
    ]
  },
  {
    "id": "test_200",
    "context": "According to the Tristate Transportation Authority, making certain improvements to the main commuter rail line would increase ridership dramatically. The authority plans to finance these improvements over the course of five years by raising automobile tolls on the two highway bridges along the route the rail line serves. Although the proposed improvements are indeed needed, the authority' s plan for securing the necessary funds should be rejected because it would unfairly force drivers to absorb the entire cost of something from which they receive no benefit.",
    "question": "Which of the following, if true, would cast the most doubt on the effectiveness of the authority's plan to finance the proposed improvements by increasing bridge tolls?",
    "options": [
      "When tolls were last increased on the two bridges in question, almost 20 percent of the regular commuter traffic switched to a slightly longer alternative route that has since been improved.",
      "The chairman of the authority is a member of the Tristate Automobile Club, which has registered strong opposition to the proposed toll increase.",
      "Whenever bridge tolls are increased, the authority must pay a private contractor to adjust the automated toll-collecting machines.",
      "Before the authority increases tolls on any of the area bridges, it is required by law to hold public hearings at which objections to the proposed increase can be raised."
    ],
    "raw_logic_programs": [
      "# Declarations\nbridges = EnumSort([bridge1, bridge2])\ntolls_increased = Function([bridges] -> [bool])\ncommuter_traffic = Function([bridges] -> [int])\nalternative_route_traffic = Function([bridges] -> [int])\ntoll_adjustment_cost = Function([bridges] -> [int])\npublic_hearings = Function([bridges] -> [bool])\n\n# Constraints\nForAll([b:bridges], tolls_increased(b) == True) ::: The authority plans to finance these improvements by raising automobile tolls on the two highway bridges\nForAll([b:bridges], commuter_traffic(b) > 0) ::: Regular commuter traffic exists on the bridges\n\n# Options\nQuestion ::: Which of the following, if true, would cast the most doubt on the effectiveness of the authority's plan to finance the proposed improvements by increasing bridge tolls?\nis_doubtful(Exists([b:bridges], commuter_traffic(b) * 0.2 <= alternative_route_traffic(b))) ::: (A) When tolls were last increased on the two bridges in question, almost 20 percent of the regular commuter traffic switched to a slightly longer alternative route that has since been improved.\nis_doubtful(False) ::: (B) The chairman of the authority is a member of the Tristate Automobile Club, which has registered strong opposition to the proposed toll increase.\nis_doubtful(Exists([b:bridges], toll_adjustment_cost(b) > 0)) ::: (C) Whenever bridge tolls are increased, the authority must pay a private contractor to adjust the automated toll-collecting machines.\nis_doubtful(Exists([b:bridges], public_hearings(b) == True)) ::: (D) Before the authority increases tolls on any of the area bridges, it is required by law to hold public hearings at which objections to the proposed increase can be raised."
    ]
  },
  {
    "id": "test_201",
    "context": "Financial success does not guarantee happiness. This claim is not mere proverbial wisdom but a fact verified by statistics. In a recently concluded survey, only one-third of the respondents who claimed to have achieved financial success reported that they were happy.",
    "question": "Which one of the following, if true, most strongly supports the conclusion drawn from the survey results?",
    "options": [
      "Most of the respondents who reported they were unhappy were in fact happy.",
      "The respondents who reported financial success were, for the most part, financially successful.",
      "Many of the respondents who claimed not to have achieved financial success reported that they were happy five years ago.",
      "Many of the respondents who failed to report financial success were in fact financially successful."
    ],
    "raw_logic_programs": [
      "# Declarations\nrespondents = EnumSort([financial_success, no_financial_success])\nhappiness = EnumSort([happy, unhappy])\nreported = Function([respondents] -> [happiness])\n\n# Constraints\nCount([r:respondents], reported(r) == happy) == 1/3 * Count([r:respondents], r == financial_success) ::: only one-third of the respondents who claimed to have achieved financial success reported that they were happy\n\n# Options\nQuestion ::: Which one of the following, if true, most strongly supports the conclusion drawn from the survey results?\nis_strong_support(Count([r:respondents], And(r == financial_success, reported(r) == unhappy)) > Count([r:respondents], And(r == financial_success, reported(r) == happy))) ::: (A) Most of the respondents who reported they were unhappy were in fact happy.\nis_strong_support(Count([r:respondents], r == financial_success) > Count([r:respondents], r == no_financial_success)) ::: (B) The respondents who reported financial success were, for the most part, financially successful.\nis_strong_support(Exists([r:respondents], And(r == no_financial_success, reported(r) == happy))) ::: (C) Many of the respondents who claimed not to have achieved financial success reported that they were happy five years ago.\nis_strong_support(Count([r:respondents], And(r == no_financial_success, reported(r) == financial_success)) > 0) ::: (D) Many of the respondents who failed to report financial success were in fact financially successful."
    ]
  },
  {
    "id": "test_202",
    "context": "Eugenia: Reliable tests have shown that Koolair brand refrigerators are the best-made of any of the major brands because they last longer and, on the whole, require fewer repairs than do refrigerators of any other major brand. Neil: That is impossible. I have owned refrigerators of several different major brands, including Koolair, and the Koolair needed more repairs than did any of the others.",
    "question": "The reasoning in Neil's response is flawed because he",
    "options": [
      "rejects a generalization on the basis of a single negative instance when that generalization has reasonable support and is not universal",
      "uses a pretense of authority in a technical field as the only support for his claim",
      "uses a different notion of a product's quality from that used by Eugenia",
      "contradicts Eugenia's claim on the basis of a snap judgment and without making any attempt to offer supporting argumentation"
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Eugenia, Neil])\nbrands = EnumSort([Koolair, Other])\nqualities = EnumSort([last_longer, fewer_repairs])\ntests = Function([brands, qualities] -> [bool])\nowned = Function([individuals, brands] -> [bool])\nrepairs_needed = Function([individuals, brands] -> [int])\n\n# Constraints\ntests(Koolair, last_longer) ::: Reliable tests have shown that Koolair brand refrigerators last longer\ntests(Koolair, fewer_repairs) ::: Reliable tests have shown that Koolair brand refrigerators require fewer repairs\nowned(Neil, Koolair) ::: Neil has owned a Koolair refrigerator\nForAll([b:brands], owned(Neil, b)) ::: Neil has owned refrigerators of several different major brands\nrepairs_needed(Neil, Koolair) > ForAll([b:brands], repairs_needed(Neil, b)) ::: Neil claims Koolair needed more repairs than any other brand he owned\n\n# Options\nQuestion ::: The reasoning in Neil's response is flawed because he\nis_flawed(rejects_generalization_on_single_instance) ::: (A) rejects a generalization on the basis of a single negative instance when that generalization has reasonable support and is not universal\nis_flawed(pretense_of_authority) ::: (B) uses a pretense of authority in a technical field as the only support for his claim\nis_flawed(different_notion_of_quality) ::: (C) uses a different notion of a product's quality from that used by Eugenia\nis_flawed(snap_judgment_without_support) ::: (D) contradicts Eugenia's claim on the basis of a snap judgment and without making any attempt to offer supporting argumentation"
    ]
  },
  {
    "id": "test_203",
    "context": "Executive: Our company is proud of its long history of good relations with its employees. In fact, a recent survey of our retirees proves that we treat our employees fairly, since 95 percent of the respondents reported that they had always been treated fairly during the course of their careers with us.",
    "question": "The executive's argument is flawed in that it",
    "options": [
      "presumes, without providing justification, that older methods of managing employees are superior to newer ones",
      "presents as its sole premise a claim that one would accept as true only if one already accepted the truth of the conclusion",
      "bases a generalization on a sample that may not be representative",
      "relies on evidence that cannot be verified"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([executive_argument])\nflaws = EnumSort([presumes_superiority, circular_reasoning, unrepresentative_sample, unverifiable_evidence])\nis_flawed = Function([arguments] -> [flaws])\n\n# Constraints\n# No specific constraints are needed for this problem as it is a single argument evaluation.\n\n# Options\nQuestion ::: The executive's argument is flawed in that it\nis_flawed(executive_argument) == presumes_superiority ::: (A) presumes, without providing justification, that older methods of managing employees are superior to newer ones\nis_flawed(executive_argument) == circular_reasoning ::: (B) presents as its sole premise a claim that one would accept as true only if one already accepted the truth of the conclusion\nis_flawed(executive_argument) == unrepresentative_sample ::: (C) bases a generalization on a sample that may not be representative\nis_flawed(executive_argument) == unverifiable_evidence ::: (D) relies on evidence that cannot be verified"
    ]
  },
  {
    "id": "test_204",
    "context": "State politicians are optimistic that the state' s economic downturn will not be as severe as had been predicted. Their hopes are bolstered by the data released last week: <b> the jobless rate declined two full percentage points in the last six months. </b> But, many economists have pointed out the flight of unemployed residents to the bordering states where jobs are plentiful. Furthermore, many out of work residents have been rehired at minimum wage: virtually all new jobs in the state in the past year have been minimum wage jobs. <b> Economists cast grave doubts on the economic well-being of the state. </b>",
    "question": "In the argument given, the two portions in boldface play which of the following roles?",
    "options": [
      "The first is evidence opposed to the conclusion; the second is an interpretation of the conclusion.",
      "The first is an interpretation that calls the conclusion into question; the second is that conclusion.",
      "The first is evidence taken to support a conclusion; the second is a position that opposes that conclusion.",
      "The first is a conclusion the argument calls into question; the second is the evidence that calls it into question."
    ],
    "raw_logic_programs": [
      "# Declarations\nportions = EnumSort([first, second])\nroles = EnumSort([evidence_opposed, interpretation_opposed, evidence_support, position_opposed, conclusion_questioned, evidence_questioned])\nplays_role = Function([portions] -> [roles])\n\n# Constraints\nplays_role(first) == evidence_support ::: The first portion is evidence taken to support a conclusion\nplays_role(second) == position_opposed ::: The second portion is a position that opposes that conclusion\n\n# Options\nQuestion ::: In the argument given, the two portions in boldface play which of the following roles?\nis_correct(plays_role(first) == evidence_opposed, plays_role(second) == interpretation_opposed) ::: (A)\nis_correct(plays_role(first) == interpretation_opposed, plays_role(second) == conclusion_questioned) ::: (B)\nis_correct(plays_role(first) == evidence_support, plays_role(second) == position_opposed) ::: (C)\nis_correct(plays_role(first) == conclusion_questioned, plays_role(second) == evidence_questioned) ::: (D)"
    ]
  },
  {
    "id": "test_205",
    "context": "Cartographer: Any beach, by definition, is on a body of water. So, the beaches in Scotch County are all on Crystal Lake.",
    "question": "The cartographer's conclusion follows logically if which one of the following is assumed?",
    "options": [
      "The beaches in Scotch County are on the same body of water.",
      "There is at least one beach on Crystal Lake.",
      "There is only one beach in Scotch County.",
      "Crystal Lake is the only body of water in Scotch County."
    ],
    "raw_logic_programs": [
      "# Declarations\nlocations = EnumSort([beach, body_of_water])\nplaces = EnumSort([Scotch_County, Crystal_Lake])\non = Function([locations, places] -> [bool])\n\n# Constraints\nForAll([b:locations], Implies(b == beach, Exists([w:locations], And(w == body_of_water, on(b, w))))) ::: Any beach, by definition, is on a body of water\n\n# Options\nQuestion ::: The cartographer's conclusion follows logically if which one of the following is assumed?\nis_assumed(ForAll([b:locations], Implies(on(b, Scotch_County), on(b, Crystal_Lake)))) ::: (The beaches in Scotch County are on the same body of water.\nis_assumed(Exists([b:locations], on(beach, Crystal_Lake))) ::: (There is at least one beach on Crystal Lake.\nis_assumed(Count([b:locations], on(b, Scotch_County)) == 1) ::: (There is only one beach in Scotch County.\nis_assumed(ForAll([w:locations], Implies(on(beach, Scotch_County), w == Crystal_Lake))) ::: (Crystal Lake is the only body of water in Scotch County."
    ]
  },
  {
    "id": "test_206",
    "context": "A film makes a profit if the number of people who see it is sufficient to generate revenues from ticket sales greater than the amount spent to make it. Hence, the primary goal of movie executives is to maximize the number of people who see a film. However, it is not the primary goal of television executives to maximize the number of viewers for their shows.",
    "question": "Which one of the following, if true, most helps to explain the difference between the goals of movie executives and those of television executives?",
    "options": [
      "More people are willing to see a film more than once than are willing to watch a television show more than once.",
      "The average cost of producing an hour of film is much greater than the average cost of producing an hour of television.",
      "Television shows make their profits from sponsors, who are chiefly concerned with the purchasing power of the people who watch a television show.",
      "There is no analog in television to the large profits that owners of movie theaters make by selling refreshments to their customers."
    ],
    "raw_logic_programs": [
      "# Declarations\nexecutives = EnumSort([movie, television])\ngoals = EnumSort([maximize_viewers, other])\nrevenue_sources = EnumSort([ticket_sales, sponsors, refreshments])\ncosts = EnumSort([film_production, tv_production])\n\n# Constraints\ngoal(movie) == maximize_viewers ::: The primary goal of movie executives is to maximize the number of people who see a film\ngoal(television) != maximize_viewers ::: It is not the primary goal of television executives to maximize the number of viewers for their shows\nrevenue_source(movie) == ticket_sales ::: Movies generate revenue from ticket sales\nrevenue_source(television) == sponsors ::: Television shows make their profits from sponsors\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the difference between the goals of movie executives and those of television executives?\nis_explanatory(More_people_see_film_multiple_times) ::: (A) More people are willing to see a film more than once than are willing to watch a television show more than once.\nis_explanatory(Film_costs_greater_than_TV_costs) ::: (B) The average cost of producing an hour of film is much greater than the average cost of producing an hour of television.\nis_explanatory(Sponsors_care_about_purchasing_power) ::: (C) Television shows make their profits from sponsors, who are chiefly concerned with the purchasing power of the people who watch a television show.\nis_explanatory(No_analog_to_refreshment_profits) ::: (D) There is no analog in television to the large profits that owners of movie theaters make by selling refreshments to their customers."
    ]
  },
  {
    "id": "test_207",
    "context": "Literary critic: Samuel Johnson argued that writers should refrain from attributing attractive qualities to immoral characters, since doing so increases the tendency of readers to emulate these characters. Works of fiction would be unrealistic, however, if writers were to follow Johnson' s advice.",
    "question": "The conclusion is properly drawn in the literary critic's argument if which one of the following is assumed?",
    "options": [
      "It is rarely evident which qualities of fictional characters are intended to be attractive qualities.",
      "In reality, all bad people have some attractive qualities.",
      "The attractive qualities of characters are more appealing than their immoral behavior.",
      "In reality, it is difficult to emulate fictional characters."
    ],
    "raw_logic_programs": [
      "# Declarations\nwriters = EnumSort([writers])\ncharacters = EnumSort([characters])\nqualities = EnumSort([attractive, immoral])\nattributes = Function([writers, characters, qualities] -> [bool])\nemulate = Function([readers, characters] -> [bool])\n\n# Constraints\nForAll([w:writers, c:characters], Implies(attributes(w, c, attractive), Not(attributes(w, c, immoral)))) ::: Samuel Johnson argued that writers should refrain from attributing attractive qualities to immoral characters\nForAll([w:writers, c:characters], Implies(attributes(w, c, attractive), emulate(readers, c))) ::: Attributing attractive qualities increases the tendency of readers to emulate these characters\n\n# Options\nQuestion ::: The conclusion is properly drawn in the literary critic's argument if which one of the following is assumed?\nis_assumed(ForAll([c:characters], Implies(attributes(writers, c, attractive), attributes(writers, c, realistic)))) ::: (A) It is rarely evident which qualities of fictional characters are intended to be attractive qualities.\nis_assumed(ForAll([c:characters], Implies(attributes(writers, c, immoral), attributes(writers, c, attractive)))) ::: (B) In reality, all bad people have some attractive qualities.\nis_assumed(ForAll([c:characters], Implies(attributes(writers, c, attractive), Not(attributes(writers, c, immoral))))) ::: (C) The attractive qualities of characters are more appealing than their immoral behavior.\nis_assumed(ForAll([c:characters], Not(emulate(readers, c)))) ::: (D) In reality, it is difficult to emulate fictional characters."
    ]
  },
  {
    "id": "test_208",
    "context": "There are rumors that the Premier will reshuffle the cabinet this week. However, every previous reshuffle that the Premier has made was preceded by meetings between the Premier and senior cabinet members. No such meetings have occurred or are planned. Ttherefore the rumors are most likely false.",
    "question": "Which one of the following most accurately expresses a principle of reasoning employed by the argument?",
    "options": [
      "If two statements are known to be inconsistent with each other and if one of the statements is known to be false, it cannot be deduced from these known facts that the other statement is true.",
      "Even if in the past a phenomenon was caused by particular circumstances, it is erroneous to assume that the phenomenon will recur only under the circumstances in which it previously occurred.",
      "A hypothesis is undermined when a state of affairs does not obtain that would be expected to obtain if the hypothesis were true.",
      "It is possible for a hypothesis to be false even though it is supported by all the available data."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([rumors_true, meetings_occurred])\ntruth_values = EnumSort([true, false])\nknown = Function([statements] -> [truth_values])\n\n# Constraints\nknown(meetings_occurred) == false ::: No such meetings have occurred or are planned\nForAll([s:statements], Implies(known(s) == true, s == rumors_true)) ::: If one of the statements is known to be true, it must be the rumors being true\n\n# Options\nQuestion ::: Which one of the following most accurately expresses a principle of reasoning employed by the argument?\nis_principle(Implies(And(known(rumors_true) == false, known(meetings_occurred) == false), rumors_true == false)) ::: (A hypothesis is undermined when a state of affairs does not obtain that would be expected to obtain if the hypothesis were true.)"
    ]
  },
  {
    "id": "test_209",
    "context": "Arts advocate: Few universities require that students who are specializing in science and technology take many art courses. However, real progress in science and technology requires an element of creativity, which the arts foster. Thus, to help science and technology students succeed in their careers, universities should increase the number of art courses required for them.",
    "question": "Which of the following would, if true, most strengthen the argument above?",
    "options": [
      "Universities required more art courses for science and technology students in the past.",
      "More students who are interested in art would specialize in science and technology if the number of art courses required for those programs were increased.",
      "Some of the most prominent scientists began their careers as artists.",
      "Participation in art courses increases students' creative thinking in their science and technology courses."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([science_technology, arts])\ncourses = EnumSort([art_courses, science_courses])\nparticipation = Function([students, courses] -> [bool])\n\n# Constraints\nForAll([s:students], Count([c:courses], participation(s, c)) >= 1) ::: Each student participates in at least one type of course\n\n# Options\nQuestion ::: Which of the following would, if true, most strengthen the argument above?\nis_strongest(Implies(participation(science_technology, art_courses), Increases(creativity))) ::: (Participation in art courses increases students' creative thinking in their science and technology courses)\nis_strongest(Implies(participation(arts, science_courses), Increases(science_interest))) ::: (More students who are interested in art would specialize in science and technology if the number of art courses required for those programs were increased)\nis_strongest(Implies(Started_as(artists, prominent_scientists), Increases(science_success))) ::: (Some of the most prominent scientists began their careers as artists)\nis_strongest(Implies(Required_more(art_courses, past), Increases(current_requirements))) ::: (Universities required more art courses for science and technology students in the past)"
    ]
  },
  {
    "id": "test_210",
    "context": "Amber -- fossilized tree resin sold as a gemstone -- is particularly valuable when it contains fossilized life forms. Forgers can create fake amber and, in an attempt to improve its value, often embed small, normal-appearing insects in it. Ttherefore, pieces that are sold as amber are far more likely to be fake if they contain normal-appearing insects than if they do not.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Amber is often sold by small shops and street vendors that take few precautions to ensure authenticity.",
      "Pieces of amber that contain fossilized life forms are generally larger than plain pieces of amber.",
      "It is very difficult to distinguish between genuine and fake amber without destroying some of it.",
      "Insects struggling to free themselves from tree resin are usually fossilized in awkward or grotesque positions."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([amber_with_insects, amber_without_insects])\nauthenticity = Function([arguments] -> [bool])\n\n# Constraints\nauthenticity(amber_with_insects) == False ::: Pieces that are sold as amber are far more likely to be fake if they contain normal-appearing insects than if they do not\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nstrengthens(authenticity(amber_with_insects) == False, authenticity(amber_without_insects) == True) ::: (Amber is often sold by small shops and street vendors that take few precautions to ensure authenticity.\nstrengthens(authenticity(amber_with_insects) == False, authenticity(amber_without_insects) == True) ::: (Pieces of amber that contain fossilized life forms are generally larger than plain pieces of amber.\nstrengthens(authenticity(amber_with_insects) == False, authenticity(amber_without_insects) == True) ::: (It is very difficult to distinguish between genuine and fake amber without destroying some of it.\nstrengthens(authenticity(amber_with_insects) == False, authenticity(amber_without_insects) == True) ::: (Insects struggling to free themselves from tree resin are usually fossilized in awkward or grotesque positions."
    ]
  },
  {
    "id": "test_211",
    "context": "Scientist: In testing whether a baby' s babbling is a linguistic task or just random sounds, researchers videotaped the mouths of babies as they babbled. They discovered that babbling babies open the right sides of their mouths wider than the left. Past studies have established that during nonlinguistic vocalizations people generally open the left side of the mouth wider. So babbling turns out to be a linguistic task.",
    "question": "Which one of the following most accurately describes how the scientist's argument proceeds?",
    "options": [
      "It describes an argument for a given conclusion and presents a counterargument to suggest that its conclusion is incorrect.",
      "It describes an explanation for some facts, counters assertions that the explanation is unlikely to be correct, and concludes that it is correct after all.",
      "It questions the adequacy of a generally accepted principle by providing evidence to undermine that principle, and offers a different principle in its place.",
      "It presents two possible interpretations of a phenomenon and provides evidence in support of one interpretation and against the other."
    ],
    "raw_logic_programs": [
      "# Declarations\nphenomena = EnumSort([babbling, nonlinguistic_vocalizations])\nsides = EnumSort([right, left])\nobservations = Function([phenomena] -> [sides])\nconclusion = Function([phenomena] -> [bool])\n\n# Constraints\nobservations(babbling) == right ::: Babbling babies open the right sides of their mouths wider than the left\nobservations(nonlinguistic_vocalizations) == left ::: During nonlinguistic vocalizations people generally open the left side of the mouth wider\n\n# Options\nQuestion ::: Which one of the following most accurately describes how the scientist's argument proceeds?\nis_accurate(And(conclusion(babbling), Not(conclusion(nonlinguistic_vocalizations)))) ::: (It presents two possible interpretations of a phenomenon and provides evidence in support of one interpretation and against the other.)"
    ]
  },
  {
    "id": "test_212",
    "context": "Jake: Companies have recently introduced antibacterial household cleaning products that kill common bacteria on surfaces like countertops and floors. It' s clear that people who want to minimize the amount of bacteria in their homes should use cleaning products that contain antibacterial agents. Karolinka: But studies also suggest that the use of these antibacterial cleaning products can be harmful, since common bacteria that survive the use of these products will eventually produce strains of bacteria that are resistant to antibiotics. That' s why antibacterial agents should not be used in household cleaning products.",
    "question": "The discussion above indicates that Jake and Karolinka agree with each other that which one of the following is true?",
    "options": [
      "Household cleaning products with antibacterial agents kill some common bacteria.",
      "The use of antibacterial agents in household cleaning products can produce antibioticresistant strains of bacteria.",
      "People should use household cleaning products with antibacterial agents to clean their homes.",
      "Common household bacteria are a serious health concern."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([kills_bacteria, produces_resistant_strains, should_use_antibacterial, bacteria_health_concern])\nagree = Function([statements] -> [bool])\n\n# Constraints\nagree(kills_bacteria) ::: Household cleaning products with antibacterial agents kill some common bacteria.\nNot(agree(produces_resistant_strains)) ::: The use of antibacterial agents in household cleaning products can produce antibiotic-resistant strains of bacteria.\nNot(agree(should_use_antibacterial)) ::: People should use household cleaning products with antibacterial agents to clean their homes.\nNot(agree(bacteria_health_concern)) ::: Common household bacteria are a serious health concern.\n\n# Options\nQuestion ::: The discussion above indicates that Jake and Karolinka agree with each other that which one of the following is true?\nis_true(agree(kills_bacteria)) ::: (Household cleaning products with antibacterial agents kill some common bacteria.\nis_true(agree(produces_resistant_strains)) ::: (The use of antibacterial agents in household cleaning products can produce antibiotic-resistant strains of bacteria.\nis_true(agree(should_use_antibacterial)) ::: (People should use household cleaning products with antibacterial agents to clean their homes.\nis_true(agree(bacteria_health_concern)) ::: (Common household bacteria are a serious health concern."
    ]
  },
  {
    "id": "test_213",
    "context": "India ranks fifth in the world production of coffee. Popular thought has long associated India with tea and especially with masala chai, but clearly, we need to recognize India as one of the great coffee-drinking nations as well.",
    "question": "This argument is flawed primarily because the author",
    "options": [
      "depends on popular thought rather than on documented research findings",
      "does not supply information about all beverages people drink in India",
      "does not specify the exact quantity of coffee produced by any nation",
      "fails to distinguish between coffee production and coffee consumption"
    ],
    "raw_logic_programs": [
      "# Declarations\nnations = EnumSort([India, OtherNations])\nattributes = EnumSort([production, consumption, association])\nranks = EnumSort([first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth])\nbeverages = EnumSort([coffee, tea, masala_chai])\n\n# Constraints\nrank(India, production, coffee) == fifth ::: India ranks fifth in the world production of coffee\nassociation(India, tea) == true ::: Popular thought has long associated India with tea\nassociation(India, masala_chai) == true ::: Popular thought has long associated India with masala chai\nassociation(India, coffee) == true ::: Recognize India as one of the great coffee-drinking nations\n\n# Options\nQuestion ::: This argument is flawed primarily because the author\nis_flawed(depends_on(popular_thought, not(documented_research))) ::: (A) depends on popular thought rather than on documented research findings\nis_flawed(lacks_information(all_beverages, India)) ::: (B) does not supply information about all beverages people drink in India\nis_flawed(lacks_specific_quantity(production, nations)) ::: (C) does not specify the exact quantity of coffee produced by any nation\nis_flawed(fails_to_distinguish(production, consumption)) ::: (D) fails to distinguish between coffee production and coffee consumption"
    ]
  },
  {
    "id": "test_214",
    "context": "Derek: We must exploit available resources in developing effective anticancer drugs such as the one made from mature Pacific yew trees. Although the yew population might be threatened, the trees should be harvested now, since an effective synthetic version of the yew' s anticancer chemical could take years to develop. Lola: Not only are mature yews very rare, but most are located in areas where logging is prohibited to protect the habitat of the endangered spotted owl. Despite our eagerness to take advantage or a new medical breakthrough, we should wait for a synthetic drug rather than threaten the survival of both the yew and the owl, which could have far-reaching consequences for an entire ecosystem.",
    "question": "Which one of the following is the main point at issue between Lola and Derek?",
    "options": [
      "whether the harvesting of available Pacific yews would have far-reaching environmental repercussions",
      "the extent of the environmental disaster that would result if both the Pacific yew and the spotted owl were to become extinct",
      "whether it is justifiable to wait until a synthetic drug can be developed when the capacity for producing the yew-derived drug already exists",
      "whether environmental considerations should ever have any weight when human lives are at stake"
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([Derek, Lola])\nissues = EnumSort([harvesting_repercussions, environmental_disaster_extent, justifiability_of_waiting, environmental_considerations_weight])\nagrees = Function([positions, issues] -> [bool])\n\n# Constraints\nagrees(Derek, harvesting_repercussions) == False ::: Derek does not agree that harvesting yews would have far-reaching environmental repercussions\nagrees(Lola, harvesting_repercussions) == True ::: Lola agrees that harvesting yews would have far-reaching environmental repercussions\nagrees(Derek, justifiability_of_waiting) == False ::: Derek does not agree that it is justifiable to wait for a synthetic drug\nagrees(Lola, justifiability_of_waiting) == True ::: Lola agrees that it is justifiable to wait for a synthetic drug\n\n# Options\nQuestion ::: Which one of the following is the main point at issue between Lola and Derek?\nis_main_issue(agrees(Derek, harvesting_repercussions) != agrees(Lola, harvesting_repercussions)) ::: (whether the harvesting of available Pacific yews would have far-reaching environmental repercussions)\nis_main_issue(agrees(Derek, environmental_disaster_extent) != agrees(Lola, environmental_disaster_extent)) ::: (the extent of the environmental disaster that would result if both the Pacific yew and the spotted owl were to become extinct)\nis_main_issue(agrees(Derek, justifiability_of_waiting) != agrees(Lola, justifiability_of_waiting)) ::: (whether it is justifiable to wait until a synthetic drug can be developed when the capacity for producing the yew-derived drug already exists)\nis_main_issue(agrees(Derek, environmental_considerations_weight) != agrees(Lola, environmental_considerations_weight)) ::: (whether environmental considerations should ever have any weight when human lives are at stake)"
    ]
  },
  {
    "id": "test_215",
    "context": "The consensus among astronomers, based upon observations of the surfaces of pulsars, is that pulsars are spinning balls of neutrons compressed into a sphere some 10 kilometers in diameter with a mass roughly equal to that of our sun. However, their observed properties are also consistent with some pulsars actually being filled with quarks, the building blocks of neutrons. Because the core of a quark-filled pulsar, unlike a neutron-filled one, would have an overall positive charge, it would attract a layer of negatively charged particles that could support a crust of neutrons.",
    "question": "The statement that the core of a quark-filled pulsar would have an overall positive charge plays which one of the following roles in the argument above?",
    "options": [
      "It helps explain how pulsars could have neutrons on their surface even if they were not entirely made up of neutrons.",
      "It helps explain why some pulsars would not be readily recognized as such by astronomers.",
      "It presents a new finding that challenges the consensus view of the structure of pulsars.",
      "It points out a problem with the view that pulsars have a mass roughly equal to that of our sun."
    ],
    "raw_logic_programs": [
      "# Declarations\npulsars = EnumSort([neutron_filled, quark_filled])\nproperties = EnumSort([positive_charge_core, neutron_surface, mass_equal_to_sun])\nobservations = Function([pulsars] -> [properties])\n\n# Constraints\nobservations(neutron_filled) == And(neutron_surface, mass_equal_to_sun) ::: Neutron-filled pulsars have a neutron surface and mass roughly equal to the sun\nobservations(quark_filled) == And(positive_charge_core, neutron_surface) ::: Quark-filled pulsars have a positive charge core and can support a neutron surface\n\n# Options\nQuestion ::: The statement that the core of a quark-filled pulsar would have an overall positive charge plays which one of the following roles in the argument above?\nis_explanation(positive_charge_core, neutron_surface) ::: (It helps explain how pulsars could have neutrons on their surface even if they were not entirely made up of neutrons.\nis_explanation(positive_charge_core, Not(neutron_surface)) ::: (It helps explain why some pulsars would not be readily recognized as such by astronomers.\nis_challenge(positive_charge_core, neutron_filled) ::: (It presents a new finding that challenges the consensus view of the structure of pulsars.\nis_problem(positive_charge_core, mass_equal_to_sun) ::: (It points out a problem with the view that pulsars have a mass roughly equal to that of our sun."
    ]
  },
  {
    "id": "test_216",
    "context": "Editorialist: News media rarely cover local politics thoroughly, and local political business is usually conducted secretively. These factors each tend to isolate local politicians from their electorates. This has the effect of reducing the chance that any particular act of resident participation will elicit a positive official response, which in turn discourages resident participation in local politics.",
    "question": "Which one of the following is most strongly supported by the editorialist's statements?",
    "options": [
      "Local political business should be conducted less secretively because this would avoid discouraging resident participation in local politics.",
      "More-frequent thorough coverage of local politics would reduce at least one source of discouragement from resident participation in local politics.",
      "If resident participation in local politics were not discouraged, this would cause local politicians to be less isolated from their electorate.",
      "Particular acts of resident participation would be likely to elicit a positive response from local politicians if those politicians were less isolated from their electorate."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([local_politics_secretive, media_covers_thoroughly, politicians_isolated, participation_discouraged, positive_response])\n\n# Constraints\nAnd(local_politics_secretive, Not(media_covers_thoroughly)) -> politicians_isolated ::: News media rarely cover local politics thoroughly, and local political business is usually conducted secretively, isolating politicians\npoliticians_isolated -> Not(positive_response) ::: Isolation reduces the chance of a positive response\nNot(positive_response) -> participation_discouraged ::: Lack of positive response discourages participation\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the editorialist's statements?\nis_supported(Not(local_politics_secretive) -> Not(participation_discouraged)) ::: (A) Local political business should be conducted less secretively because this would avoid discouraging resident participation in local politics.\nis_supported(media_covers_thoroughly -> Not(participation_discouraged)) ::: (B) More-frequent thorough coverage of local politics would reduce at least one source of discouragement from resident participation in local politics.\nis_supported(Not(participation_discouraged) -> Not(politicians_isolated)) ::: (C) If resident participation in local politics were not discouraged, this would cause local politicians to be less isolated from their electorate.\nis_supported(Not(politicians_isolated) -> positive_response) ::: (D) Particular acts of resident participation would be likely to elicit a positive response from local politicians if those politicians were less isolated from their electorate."
    ]
  },
  {
    "id": "test_217",
    "context": "Cities with healthy economies typically have plenty of job openings. Cities with high-technology businesses also tend to have healthy economies, so those in search of jobs should move to a city with high-technology businesses.",
    "question": "The reasoning in which one of the following is most similar to the reasoning in the argument above?",
    "options": [
      "Many antiques increase in value once they have had their ages authenticated by antique dealers. Since antique dealers tend to have plenty of valuable antiques, antique collectors who prefer to purchase the most valuable antiques should purchase antiques from antique dealers.",
      "Older antiques are usually the most valuable. Antique dealers generally authenticate the age of the antiques they sell, so those collectors who want the most valuable antiques should purchase their antiques from antique dealers.",
      "Many antique collectors know that antique dealers can authenticate the age of the antiques they sell. Since antiques that have had their ages authenticated are always the most valuable, most antique collectors who want antiques that are valuable tend to purchase their antiques from antique dealers.",
      "Antiques that have had their ages authenticated tend to be valuable. Since antique dealers generally carry antiques that have had their ages authenticated, those collectors who want antiques that are valuable should purchase their antiques from antique dealers."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([cities, economies, businesses, job_seekers])\nattributes = EnumSort([healthy, high_technology, job_openings])\nhas_attribute = Function([entities, attributes] -> [bool])\n\n# Constraints\nForAll([c:cities], Implies(has_attribute(c, healthy), has_attribute(c, job_openings))) ::: Cities with healthy economies typically have plenty of job openings\nForAll([b:businesses], Implies(has_attribute(b, high_technology), has_attribute(b, healthy))) ::: Cities with high-technology businesses also tend to have healthy economies\n\n# Options\nQuestion ::: The reasoning in which one of the following is most similar to the reasoning in the argument above?\nis_similar(ForAll([a:antiques], Implies(has_attribute(a, authenticated), has_attribute(a, valuable))) ::: (A)\nis_similar(ForAll([a:antiques], Implies(has_attribute(a, older), has_attribute(a, valuable))) ::: (B)\nis_similar(ForAll([a:antiques], Implies(has_attribute(a, authenticated), has_attribute(a, valuable))) ::: (C)\nis_similar(ForAll([a:antiques], Implies(has_attribute(a, authenticated), has_attribute(a, valuable))) ::: (D)"
    ]
  },
  {
    "id": "test_218",
    "context": "Many people joke about Friday the thirteenth being an unlucky day, but a study showed that in one year approximately 17 percent of people scheduled to fly canceled or did not show up for their flights on Friday the thirteenth -- a rate higher than that on any other day and date in that year. This shows that a significant percentage of the population would rather disrupt their travel plans than risk flying on a supposedly unlucky day.",
    "question": "Which one of the following statements, if true, most seriously weakens the argument?",
    "options": [
      "Surveys show that less than 5 percent of the population report that they believe that Friday the thirteenth is an unlucky day.",
      "Weather conditions at several major airports were severe on the Fridays that fell on the thirteenth in the year of the study.",
      "People who fly tend to be professionals who as a group are less superstitious than the general public.",
      "In the year of the study, automobile traffic was no lighter on Friday the thirteenth than on other Fridays."
    ],
    "raw_logic_programs": [
      "# Declarations\ndays = EnumSort([Friday_the_thirteenth, Other_days])\nevents = EnumSort([canceled_flights, severe_weather, superstitious_belief, traffic_volume])\npercentages = Function([days, events] -> [int])\n\n# Constraints\npercentages(Friday_the_thirteenth, canceled_flights) > percentages(Other_days, canceled_flights) ::: A higher percentage of people canceled or did not show up for flights on Friday the thirteenth compared to other days\n\n# Options\nQuestion ::: Which one of the following statements, if true, most seriously weakens the argument?\nis_weakening(percentages(Friday_the_thirteenth, superstitious_belief) < 5) ::: (A) Surveys show that less than 5 percent of the population report that they believe that Friday the thirteenth is an unlucky day.\nis_weakening(percentages(Friday_the_thirteenth, severe_weather) > 0) ::: (B) Weather conditions at several major airports were severe on the Fridays that fell on the thirteenth in the year of the study.\nis_weakening(percentages(Friday_the_thirteenth, superstitious_belief) < percentages(Other_days, superstitious_belief)) ::: (C) People who fly tend to be professionals who as a group are less superstitious than the general public.\nis_weakening(percentages(Friday_the_thirteenth, traffic_volume) == percentages(Other_days, traffic_volume)) ::: (D) In the year of the study, automobile traffic was no lighter on Friday the thirteenth than on other Fridays."
    ]
  },
  {
    "id": "test_219",
    "context": "A certain species of desert lizard digs tunnels in which to lay its eggs. The eggs must incubate inside the tunnel for several weeks before hatching, and they fail to hatch if they are disturbed at any time during this incubation period. Yet these lizards guard their tunnels for only a few days after laying their eggs.",
    "question": "Which of the following, if true, most helps explain why there is no need for lizards to guard their tunnels for more than a few days?",
    "options": [
      "The length of the incubation period varies somewhat from one tunnel to another.",
      "The eggs are at risk of being disturbed only during the brief egg-laying season when many lizards are digging in a relatively small area.",
      "The temperature and humidity within the tunnels will not be suitable for the incubating eggs unless the tunnels are plugged with sand immediately after the eggs are laid.",
      "The only way to disturb the eggs of this lizard species is by opening up one of the tunnels in which they are laid."
    ],
    "raw_logic_programs": [
      "# Declarations\nlizards = EnumSort([desert_lizard])\ntunnels = EnumSort([tunnel])\neggs = EnumSort([egg])\nincubation_period = Function([eggs] -> [int])\nguarding_period = Function([lizards, tunnels] -> [int])\ndisturbance_risk = Function([tunnels] -> [bool])\n\n# Constraints\nForAll([e:eggs], incubation_period(e) > guarding_period(desert_lizard, tunnel)) ::: The eggs must incubate inside the tunnel for several weeks before hatching, and they fail to hatch if they are disturbed at any time during this incubation period.\nForAll([t:tunnels], disturbance_risk(t) == False) ::: Yet these lizards guard their tunnels for only a few days after laying their eggs.\n\n# Options\nQuestion ::: Which of the following, if true, most helps explain why there is no need for lizards to guard their tunnels for more than a few days?\nis_explanation(disturbance_risk(tunnel) == True, \"The length of the incubation period varies somewhat from one tunnel to another.\") ::: (A)\nis_explanation(disturbance_risk(tunnel) == True, \"The eggs are at risk of being disturbed only during the brief egg-laying season when many lizards are digging in a relatively small area.\") ::: (B)\nis_explanation(disturbance_risk(tunnel) == True, \"The temperature and humidity within the tunnels will not be suitable for the incubating eggs unless the tunnels are plugged with sand immediately after the eggs are laid.\") ::: (C)\nis_explanation(disturbance_risk(tunnel) == True, \"The only way to disturb the eggs of this lizard species is by opening up one of the tunnels in which they are laid.\") ::: (D)"
    ]
  },
  {
    "id": "test_220",
    "context": "Cassie: In order to improve the quality of customer service provided by our real estate agency, we should reduce client loads -- the number of clients each agent is expected to serve at one time. Melvin: Although smaller client loads are desirable, reducing client loads at our agency is simply not feasible. We already find it very difficult to recruit enough qualified agents; recruiting even more agents, which would be necessary in order to reduce client loads, is out of the question.",
    "question": "Of the following, which one, if true, is the logically strongest counter that Cassie can make to Melvin's argument?",
    "options": [
      "Many of the real estate agency's current clients have expressed strong support for efforts to reduce client loads.",
      "Several recently conducted studies of real estate agencies have shown that small client loads are strongly correlated with high customer satisfaction ratings.",
      "Hiring extra support staff for the real estate agency's main office would have many of the same beneficial effects as reducing client loads.",
      "Since reducing client loads would improve working conditions for agents, reducing client loads would help recruit additional qualified agents to the real estate agency."
    ],
    "raw_logic_programs": [
      "# Declarations\nagents = EnumSort([Cassie, Melvin])\narguments = EnumSort([reduce_client_loads, recruit_more_agents, improve_customer_service, improve_working_conditions])\npositions = Function([agents] -> [arguments])\n\n# Constraints\npositions(Cassie) == reduce_client_loads ::: Cassie argues for reducing client loads to improve customer service\npositions(Melvin) == recruit_more_agents ::: Melvin argues that recruiting more agents is necessary to reduce client loads, but it's not feasible\n\n# Options\nQuestion ::: Of the following, which one, if true, is the logically strongest counter that Cassie can make to Melvin's argument?\nis_strongest_counter(positions(Cassie) == improve_working_conditions) ::: (Since reducing client loads would improve working conditions for agents, reducing client loads would help recruit additional qualified agents to the real estate agency.)\nis_strongest_counter(positions(Cassie) == improve_customer_service) ::: (Many of the real estate agency's current clients have expressed strong support for efforts to reduce client loads.)\nis_strongest_counter(positions(Cassie) == improve_customer_service) ::: (Several recently conducted studies of real estate agencies have shown that small client loads are strongly correlated with high customer satisfaction ratings.)\nis_strongest_counter(positions(Cassie) == improve_working_conditions) ::: (Hiring extra support staff for the real estate agency's main office would have many of the same beneficial effects as reducing client loads.)"
    ]
  },
  {
    "id": "test_221",
    "context": "Kitchen magazine plans to license the use of its name by a line of cookware. For a magazine, licensing the use of its name for products involves some danger, since if the products disappoint consumers, the magazine' s reputation suffers, with consequent reductions in circulation and advertising. However, experts have evaluated the cookware and found it superior to all other cookware advertised in Kitchen. Ttherefore, Kitchen can collect its licensing fee without endangering its other revenues.",
    "question": "The argument above assumes which of the following?",
    "options": [
      "Makers of cookware will not find Kitchen a less attractive advertising vehicle because the magazine's name is associated with a competing product.",
      "Kitchen will not license the use of its name for any products other than the line of cookware.",
      "Kitchen is one of the most prestigious cooking-related magazines.",
      "No other line of cookware is superior to that which will carry the Kitchen name."
    ],
    "raw_logic_programs": [
      "# Declarations\nmagazine = EnumSort([Kitchen])\nproducts = EnumSort([cookware])\nrevenue_sources = EnumSort([licensing_fee, circulation, advertising])\nevaluations = Function([products] -> [bool])\nassociated = Function([magazine, products] -> [bool])\nsuperior = Function([products, products] -> [bool])\n\n# Constraints\nevaluations(cookware) == True ::: experts have evaluated the cookware and found it superior to all other cookware advertised in Kitchen\nForAll([p:products], Implies(associated(Kitchen, p), superior(cookware, p))) ::: the cookware is superior to all other cookware advertised in Kitchen\n\n# Options\nQuestion ::: The argument above assumes which of the following?\nis_assumption(ForAll([p:products], Not(associated(Kitchen, p)) -> superior(cookware, p))) ::: (A) Makers of cookware will not find Kitchen a less attractive advertising vehicle because the magazine's name is associated with a competing product.\nis_assumption(ForAll([p:products], Not(associated(Kitchen, p)))) ::: (B) Kitchen will not license the use of its name for any products other than the line of cookware.\nis_assumption(Exists([m:magazine], associated(m, cookware))) ::: (C) Kitchen is one of the most prestigious cooking-related magazines.\nis_assumption(ForAll([p:products], superior(cookware, p))) ::: (D) No other line of cookware is superior to that which will carry the Kitchen name."
    ]
  },
  {
    "id": "test_222",
    "context": "Ythex has developed a small diesel engine that produces 30 percent less particulate pollution than the engine made by its main rival, Onez, now widely used in Marania; Ythex' s engine is well-suited for use in the thriving warehousing businesses in Marania, though it costs more than the Onez engine. The Maranian government plans to ban within the next two years the use of diesel engines with more than 80 percent of current diesel engine particulate emissions in Marania, and Onez will probably not be able to retool its engine to reduce emissions to reach this target. So if the ban is passed, the Ythex engine ought to sell well in Marania after that time.",
    "question": "Which of the following is an assumption on which the argument above depends?",
    "options": [
      "The other manufacturers of small diesel engines in Marania, if there are any, have not produced an engine as popular and clean running as Ythex's new engine.",
      "Ythex is likely to be able to reduce the cost of its small diesel engine within the next two years.",
      "Marania's warehousing and transshipment business buys more diesel engines of any size than other types of engines.",
      "The government's ban on high levels of pollution caused by diesel engines, if passed, will not be difficult to enforce."
    ],
    "raw_logic_programs": [
      "# Declarations\nengines = EnumSort([Ythex, Onez])\npollution_levels = EnumSort([less_than_80_percent, more_than_80_percent])\nmarket_conditions = EnumSort([ban_passed, ban_not_passed])\nsales = Function([engines, market_conditions] -> [bool])\n\n# Constraints\npollution(Ythex) == less_than_80_percent ::: Ythex's engine produces 30 percent less particulate pollution than Onez's engine\npollution(Onez) == more_than_80_percent ::: Onez's engine produces more than 80 percent of current diesel engine particulate emissions\nmarket_conditions == ban_passed ::: The Maranian government plans to ban engines with more than 80 percent emissions\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument above depends?\nis_assumption(ForAll([e:engines], Implies(pollution(e) == more_than_80_percent, Not(sales(e, ban_passed))))) ::: (A) The other manufacturers of small diesel engines in Marania, if there are any, have not produced an engine as popular and clean running as Ythex's new engine.\nis_assumption(Exists([e:engines], And(pollution(e) == less_than_80_percent, sales(e, ban_passed)))) ::: (B) Ythex is likely to be able to reduce the cost of its small diesel engine within the next two years.\nis_assumption(Exists([e:engines], And(pollution(e) == less_than_80_percent, sales(e, ban_passed)))) ::: (C) Marania's warehousing and transshipment business buys more diesel engines of any size than other types of engines.\nis_assumption(Exists([e:engines], And(pollution(e) == less_than_80_percent, sales(e, ban_passed)))) ::: (D) The government's ban on high levels of pollution caused by diesel engines, if passed, will not be difficult to enforce."
    ]
  },
  {
    "id": "test_223",
    "context": "Pat: E-mail fosters anonymity, which removes barriers to self-revelation. This promotes a degree of intimacy with strangers that would otherwise take years of direct personal contact to attain. Amar: Frankness is not intimacy. Intimacy requires a real social bond, and social bonds cannot be formed without direct personal contact.",
    "question": "The dialogue most strongly supports the claim that Pat and Amar disagree with each other about whether",
    "options": [
      "barriers to self-revelation hinder the initial growth of intimacy",
      "E-mail can increase intimacy between friends",
      "real social bonds always lead to intimacy",
      "intimacy between those who communicate with each other solely by e-mail is possible"
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([Pat, Amar])\nstatements = EnumSort([barriers_hinder_intimacy, email_increases_intimacy, real_bonds_lead_to_intimacy, email_intimacy_possible])\nagrees = Function([positions, statements] -> [bool])\n\n# Constraints\nagrees(Pat, barriers_hinder_intimacy) ::: Pat believes that barriers to self-revelation hinder the initial growth of intimacy\nagrees(Pat, email_increases_intimacy) ::: Pat believes that e-mail can increase intimacy\nagrees(Pat, email_intimacy_possible) ::: Pat believes that intimacy between those who communicate solely by e-mail is possible\nagrees(Amar, real_bonds_lead_to_intimacy) ::: Amar believes that real social bonds lead to intimacy\nNot(agrees(Amar, email_intimacy_possible)) ::: Amar believes that intimacy cannot be formed without direct personal contact\n\n# Options\nQuestion ::: The dialogue most strongly supports the claim that Pat and Amar disagree with each other about whether\nis_disagreement(agrees(Pat, barriers_hinder_intimacy), agrees(Amar, barriers_hinder_intimacy)) ::: (A) barriers to self-revelation hinder the initial growth of intimacy\nis_disagreement(agrees(Pat, email_increases_intimacy), agrees(Amar, email_increases_intimacy)) ::: (B) E-mail can increase intimacy between friends\nis_disagreement(agrees(Pat, real_bonds_lead_to_intimacy), agrees(Amar, real_bonds_lead_to_intimacy)) ::: (C) real social bonds always lead to intimacy\nis_disagreement(agrees(Pat, email_intimacy_possible), agrees(Amar, email_intimacy_possible)) ::: (D) intimacy between those who communicate with each other solely by e-mail is possible"
    ]
  },
  {
    "id": "test_224",
    "context": "If the public library shared by the adjacent towns of Redville and Glenwood were relocated from the library' s current, overcrowded building in central Redville to a larger, available building in central Glenwood, the library would then be within walking distance of a larger number of library users. That is because there are many more people living in central Glenwood than in central Redville, and people generally will walk to the library only if it is located close to their homes.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Many of the people who use the public library do not live in either Glenwood or Redville.",
      "The area covered by central Glenwood is approximately the same size as that covered by central Redville.",
      "The building that is available in Glenwood is smaller than an alternative building that is available in Redville.",
      "The distance that people currently walk to get to the library is farther than what is generally considered walking distance."
    ],
    "raw_logic_programs": [
      "# Declarations\ntowns = EnumSort([Redville, Glenwood])\nlocations = EnumSort([central, outskirts])\nlibrary_users = Function([towns, locations] -> [int])\ncurrent_location = Function([towns] -> [locations])\nnew_location = Function([towns] -> [locations])\n\n# Constraints\ncurrent_location(Redville) == central ::: The library's current location is in central Redville\nnew_location(Glenwood) == central ::: The library would be relocated to central Glenwood\nlibrary_users(Glenwood, central) > library_users(Redville, central) ::: There are many more people living in central Glenwood than in central Redville\nForAll([t:towns], Implies(current_location(t) == central, library_users(t, central) > library_users(t, outskirts))) ::: People generally will walk to the library only if it is located close to their homes\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nis_strongest(Exists([t:towns], Not(Or(current_location(t) == central, new_location(t) == central)))) ::: (A) Many of the people who use the public library do not live in either Glenwood or Redville\nis_strongest(And(current_location(Redville) == central, new_location(Glenwood) == central)) ::: (B) The area covered by central Glenwood is approximately the same size as that covered by central Redville\nis_strongest(Exists([t:towns], new_location(t) == central)) ::: (C) The building that is available in Glenwood is smaller than an alternative building that is available in Redville\nis_strongest(Exists([t:towns], current_location(t) == outskirts)) ::: (D) The distance that people currently walk to get to the library is farther than what is generally considered walking distance"
    ]
  },
  {
    "id": "test_225",
    "context": "Linguist: Some people have understood certain studies as showing that bilingual children have a reduced \"conceptual map\" because bilingualism overstresses the child' s linguistic capacities. Vocabulary tests taken by bilingual children appear to show that these children tend to have a smaller vocabulary than do most children of the same age group. But these studies are deeply flawed, since the tests were given in only one language. Dual-language tests revealed that the children often expressed a given concept with a word from only one of their two languages.",
    "question": "The linguist's argument proceeds by",
    "options": [
      "providing a different explanation for the apparent advantages of bilingualism from the explanation suggested by the results of certain studies",
      "pointing out a methodological error in the technique used to obtain the purported evidence of a problem with bilingualism",
      "offering evidence that undermines the use of any vocabulary test to provide information about a child's conceptual map",
      "offering evidence for the advantages of bilingualism over monolingualism"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([linguist_argument])\nexplanations = EnumSort([different_explanation, methodological_error, undermining_evidence, advantages_evidence])\nproceeds_by = Function([arguments] -> [explanations])\n\n# Constraints\nproceeds_by(linguist_argument) == methodological_error ::: The linguist's argument points out a methodological error in the technique used to obtain the purported evidence of a problem with bilingualism\n\n# Options\nQuestion ::: The linguist's argument proceeds by\nis_correct(proceeds_by(linguist_argument) == different_explanation) ::: (A) providing a different explanation for the apparent advantages of bilingualism from the explanation suggested by the results of certain studies\nis_correct(proceeds_by(linguist_argument) == methodological_error) ::: (B) pointing out a methodological error in the technique used to obtain the purported evidence of a problem with bilingualism\nis_correct(proceeds_by(linguist_argument) == undermining_evidence) ::: (C) offering evidence that undermines the use of any vocabulary test to provide information about a child's conceptual map\nis_correct(proceeds_by(linguist_argument) == advantages_evidence) ::: (D) offering evidence for the advantages of bilingualism over monolingualism"
    ]
  },
  {
    "id": "test_226",
    "context": "To keep one' s hands warm during the winter, one never needs gloves or mittens. One can always keep one' s hands warm simply by putting on an extra layer of clothing, such as a thermal undershirt or a sweater. After all, keeping one' s vital organs warm can keep one' s hands warm as well.",
    "question": "Which one of the following, if true, most weakens the argument?",
    "options": [
      "Keeping one's hands warm by putting on an extra layer of clothing is less effective than turning up the heat.",
      "Maintaining the temperature of your hands is far less important, physiologically, than maintaining the temperature of your torso.",
      "Wearing an extra layer of clothing will not keep one's hands warm at temperatures low enough to cause frostbite.",
      "Several layers of light garments will keep one's vital organs warmer than will one or two heavy garments."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([hands_warm, extra_layer, vital_organs_warm, gloves_mittens, frostbite])\nconditions = Function([variables] -> [bool])\n\n# Constraints\nconditions(hands_warm) == Or(conditions(extra_layer), conditions(gloves_mittens)) ::: One can always keep one's hands warm by putting on an extra layer of clothing or using gloves/mittens\nconditions(hands_warm) == conditions(vital_organs_warm) ::: Keeping one's vital organs warm can keep one's hands warm\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the argument?\nis_weakened(conditions(extra_layer) == False) ::: (Keeping one's hands warm by putting on an extra layer of clothing is less effective than turning up the heat.\nis_weakened(conditions(vital_organs_warm) == False) ::: (Maintaining the temperature of your hands is far less important, physiologically, than maintaining the temperature of your torso.\nis_weakened(conditions(extra_layer) == False) ::: (Wearing an extra layer of clothing will not keep one's hands warm at temperatures low enough to cause frostbite.\nis_weakened(conditions(vital_organs_warm) == True) ::: (Several layers of light garments will keep one's vital organs warmer than will one or two heavy garments."
    ]
  },
  {
    "id": "test_227",
    "context": "More and more law firms specializing in corporate taxes are paid on a contingency-fee basis. Under this arrangement, if a case is won, the firm usually receives more than it would have received if it had been paid on the alternate hourly rate basis. If the case is lost, the firm receives nothing. Most firms are likely to make more under the contingency-fee arrangement.",
    "question": "Which of the following, if true, would most strengthen the prediction above?",
    "options": [
      "Since the majority of firms specialize in certain kinds of cases, they are able to assess accurately their chances of winning each potential case",
      "Firms working under the contingency-fee arrangement take in fewer cases per year than do firms working under the hourly rate arrangement.",
      "Some litigation can last for years before any decision is reached, and, even then the decision may be appealed.",
      "Firms under the contingency-fee arrangement still pay their employees on an hourly basis"
    ],
    "raw_logic_programs": [
      "# Declarations\nfirms = EnumSort([firm1, firm2, firm3, ...])  # Represents different law firms\ncases = EnumSort([case1, case2, case3, ...])  # Represents different cases\npayment_methods = EnumSort([contingency_fee, hourly_rate])\noutcomes = EnumSort([won, lost])\nearnings = Function([firms, cases, payment_methods, outcomes] -> [int])\n\n# Constraints\nForAll([f:firms, c:cases], \n    If(outcomes(c) == won, \n        earnings(f, c, contingency_fee, won) > earnings(f, c, hourly_rate, won), \n        earnings(f, c, contingency_fee, lost) == 0)) ::: Under contingency-fee, if a case is won, the firm usually receives more; if lost, receives nothing\n\n# Options\nQuestion ::: Which of the following, if true, would most strengthen the prediction above?\nis_strengthened(ForAll([f:firms], \n    Sum([c:cases], earnings(f, c, contingency_fee, outcomes(c))) > \n    Sum([c:cases], earnings(f, c, hourly_rate, outcomes(c))))) ::: Most firms are likely to make more under the contingency-fee arrangement\nis_strengthened(ForAll([f:firms], \n    If(SpecializesInCertainCases(f), \n        CanAccuratelyAssessChances(f)))) ::: (A) Since the majority of firms specialize in certain kinds of cases, they are able to assess accurately their chances of winning each potential case\nis_strengthened(ForAll([f:firms], \n    If(WorksUnderContingencyFee(f), \n        TakesFewerCasesPerYear(f)))) ::: (B) Firms working under the contingency-fee arrangement take in fewer cases per year than do firms working under the hourly rate arrangement.\nis_strengthened(ForAll([f:firms], \n    If(LitigationLastsYears(c), \n        DecisionMayBeAppealed(c)))) ::: (C) Some litigation can last for years before any decision is reached, and, even then the decision may be appealed.\nis_strengthened(ForAll([f:firms], \n    If(WorksUnderContingencyFee(f), \n        PaysEmployeesHourly(f)))) ::: (D) Firms under the contingency-fee arrangement still pay their employees on an hourly basis"
    ]
  },
  {
    "id": "test_228",
    "context": "A diet whose protein comes from fish is much healthier than one whose protein comes from red meat. Yet if everyone were to adopt this healthier diet, most of the marine species on which it is based would become extinct, making it impossible. Hence, we should not recommend the universal adoption of such a diet.",
    "question": "The reasoning in which one of the following arguments most closely resembles that in the argument above?",
    "options": [
      "Some studies have provided evidence that taking a vitamin E supplement every day reduces one's risk of heart attack. However, it has not been conclusively established that vitamin E supplements are safe for all people. So we should not recommend that everyone take vitamin E supplements every day.",
      "If legislators spent less time campaigning, they would have more time to do the jobs for which they were elected. But if they did not spend so much time campaigning, they probably would not get reelected. So it is not surprising that legislators spend so much time campaigning.",
      "A consumer is better off when limiting purchases to what he or she truly needs and saving or investing any remaining income. If everyone did this, however, the economy would be thrown into a severe recession, thereby making saving and investing impossible for most people. So we should not recommend this spending pattern to everyone.",
      "If we restrict land development in wilderness areas, we help preserve many of the species that now inhabit these areas. But we also thereby reduce the proliferation of the admittedly smaller number of species, such as deer, that flourish in developed areas. So it is not always clear which areas should be designated as wilderness areas."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([diet_argument, vitamin_argument, legislator_argument, consumer_argument, land_development_argument])\noutcomes = EnumSort([healthier, extinction, reduced_risk, safety_concerns, more_time, reelection, better_off, recession, preservation, proliferation])\nrecommendations = Function([arguments] -> [bool])\nconsequences = Function([arguments] -> [outcomes])\n\n# Constraints\nconsequences(diet_argument) == extinction ::: If everyone adopts the healthier diet, marine species would become extinct\nNot(recommendations(diet_argument)) ::: We should not recommend the universal adoption of the healthier diet\n\nconsequences(vitamin_argument) == safety_concerns ::: It has not been conclusively established that vitamin E supplements are safe for all people\nNot(recommendations(vitamin_argument)) ::: We should not recommend that everyone take vitamin E supplements every day\n\nconsequences(legislator_argument) == reelection ::: If legislators did not spend so much time campaigning, they probably would not get reelected\nrecommendations(legislator_argument) ::: It is not surprising that legislators spend so much time campaigning\n\nconsequences(consumer_argument) == recession ::: If everyone limits purchases, the economy would be thrown into a severe recession\nNot(recommendations(consumer_argument)) ::: We should not recommend this spending pattern to everyone\n\nconsequences(land_development_argument) == proliferation ::: Reducing land development reduces the proliferation of species that flourish in developed areas\nrecommendations(land_development_argument) ::: It is not always clear which areas should be designated as wilderness areas\n\n# Options\nQuestion ::: The reasoning in which one of the following arguments most closely resembles that in the argument above?\nis_similar(consequences(diet_argument) == consequences(vitamin_argument) and recommendations(diet_argument) == recommendations(vitamin_argument)) ::: (A)\nis_similar(consequences(diet_argument) == consequences(legislator_argument) and recommendations(diet_argument) == recommendations(legislator_argument)) ::: (B)\nis_similar(consequences(diet_argument) == consequences(consumer_argument) and recommendations(diet_argument) == recommendations(consumer_argument)) ::: (C)\nis_similar(consequences(diet_argument) == consequences(land_development_argument) and recommendations(diet_argument) == recommendations(land_development_argument)) ::: (D)"
    ]
  },
  {
    "id": "test_229",
    "context": "Linguist: You philosophers say that we linguists do not have a deep understanding of language, but you have provided no evidence. Philosopher: Well, you have said that you believe that \"Joan and Ivan are siblings\" is identical in meaning to \"Ivan and Joan are siblings. \" But this cannot be the case, for the sentences are physically different; yet for two things to be identical, they must have all the same attributes.",
    "question": "Of the following, which one is the strongest logical counter that the linguist can make to the philosopher?",
    "options": [
      "Two sentences can be identical physically, and yet, depending on the context in which they are uttered, not be identical in meaning.",
      "Two things can have a few minor differences and still be identical.",
      "A linguist has more experience with language than a philosopher, and so is in a better position to answer such questions.",
      "The issue is not whether the two sentences are completely identical, but whether they mean the same thing."
    ],
    "raw_logic_programs": [
      "# Declarations\nsentences = EnumSort([Joan_Ivan_siblings, Ivan_Joan_siblings])\nattributes = EnumSort([physical, meaning])\nidentical = Function([sentences, attributes] -> [bool])\n\n# Constraints\nNot(identical(Joan_Ivan_siblings, physical) == identical(Ivan_Joan_siblings, physical)) ::: The sentences are physically different\nidentical(Joan_Ivan_siblings, meaning) == identical(Ivan_Joan_siblings, meaning) ::: The linguist believes the sentences are identical in meaning\n\n# Options\nQuestion ::: Of the following, which one is the strongest logical counter that the linguist can make to the philosopher?\nis_strongest_counter(Exists([a:attributes], identical(Joan_Ivan_siblings, a) == identical(Ivan_Joan_siblings, a))) ::: (Two sentences can be identical physically, and yet, depending on the context in which they are uttered, not be identical in meaning.\nis_strongest_counter(Exists([a:attributes], identical(Joan_Ivan_siblings, a) != identical(Ivan_Joan_siblings, a))) ::: (Two things can have a few minor differences and still be identical.\nis_strongest_counter(True) ::: (A linguist has more experience with language than a philosopher, and so is in a better position to answer such questions.\nis_strongest_counter(identical(Joan_Ivan_siblings, meaning) == identical(Ivan_Joan_siblings, meaning)) ::: (The issue is not whether the two sentences are completely identical, but whether they mean the same thing."
    ]
  },
  {
    "id": "test_230",
    "context": "Marine biologists have long thought that variation in the shell color of aquatic snails evolved as a protective camouflage against birds and other predators. Brown shells seem to be more frequent when the underlying seafloor is dark-colored and white shells more frequent when the underlying seafloor is light-colored. A new theory has been advanced, however, that claims that shell color is related to physiological stress associated with heat absorption. According to this theory, brown shells will be more prevalent in areas where the wave action of the sea is great and thus heat absorption from the Sun is minimized, whereas white shells will be more numerous in calmer waters where the snails will absorb more heat from the Sun' s rays.",
    "question": "Evidence that would strongly favor the new theory over the traditional theory would be the discovery of a large majority of",
    "options": [
      "dark-shelled snails in a calm inlet with a dark, rocky bottom and many predators",
      "light-shelled snails in a calm inlet with a white, sandy bottom and many predators",
      "light-shelled snails in an inlet with much wave action and a dark, rocky bottom",
      "light-shelled snails in a calm inlet with a dark, rocky bottom and many predators"
    ],
    "raw_logic_programs": [
      "# Declarations\nsnail_colors = EnumSort([brown, white])\nseafloor_colors = EnumSort([dark, light])\nwave_conditions = EnumSort([calm, wavy])\npredator_presence = EnumSort([many, few])\nsnail_distribution = Function([snail_colors, seafloor_colors, wave_conditions, predator_presence] -> [int])\n\n# Constraints\nForAll([sc:snail_colors, sf:seafloor_colors, wc:wave_conditions, pp:predator_presence], snail_distribution(sc, sf, wc, pp) >= 0) ::: The distribution of snails is non-negative\n\n# Options\nQuestion ::: Evidence that would strongly favor the new theory over the traditional theory would be the discovery of a large majority of\nis_strong_evidence(snail_distribution(brown, dark, calm, many) > snail_distribution(white, dark, calm, many)) ::: (A) dark-shelled snails in a calm inlet with a dark, rocky bottom and many predators\nis_strong_evidence(snail_distribution(white, light, calm, many) > snail_distribution(brown, light, calm, many)) ::: (B) light-shelled snails in a calm inlet with a white, sandy bottom and many predators\nis_strong_evidence(snail_distribution(white, dark, wavy, few) > snail_distribution(brown, dark, wavy, few)) ::: (C) light-shelled snails in an inlet with much wave action and a dark, rocky bottom\nis_strong_evidence(snail_distribution(white, dark, calm, many) > snail_distribution(brown, dark, calm, many)) ::: (D) light-shelled snails in a calm inlet with a dark, rocky bottom and many predators"
    ]
  },
  {
    "id": "test_231",
    "context": "Advertisement: Attention pond owners! Ninety-eight percent of mosquito larvae in a pond die within minutes after the pond has been treated with BTI. Yet BTI is not toxic to fish, birds, animals, plants, or beneficial insects. So by using BTI regularly to destroy their larvae, you can greatly reduce populations of pesky mosquitoes that hatch in your pond, and you can do so without diminishing the populations of fish, frogs, or beneficial insects in and around the pond.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "There are no insect pests besides mosquitoes that pond owners might want to eliminate from in and around their ponds.",
      "The fish, frogs, and beneficial insects in and around a pond-owner's pond do not depend on mosquito larvae as an important source of food.",
      "Populations of mosquitoes are not dependent on a single body of water within an area as a place for their larvae to hatch and develop.",
      "The effectiveness of BTI in destroying mosquito larvae in a pond does not require the pond owner's strict adherence to specific application procedures."
    ],
    "raw_logic_programs": [
      "# Declarations\npond_elements = EnumSort([mosquito_larvae, fish, frogs, beneficial_insects])\neffects = Function([pond_elements] -> [bool])\n\n# Constraints\neffects(mosquito_larvae) == True ::: Ninety-eight percent of mosquito larvae in a pond die within minutes after the pond has been treated with BTI\nForAll([e:pond_elements], Implies(e != mosquito_larvae, effects(e) == False)) ::: BTI is not toxic to fish, birds, animals, plants, or beneficial insects\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([e:pond_elements], Implies(e != mosquito_larvae, Not(effects(e))))) ::: (A) There are no insect pests besides mosquitoes that pond owners might want to eliminate from in and around their ponds.\nis_assumption(Not(Exists([e:pond_elements], e == mosquito_larvae))) ::: (B) The fish, frogs, and beneficial insects in and around a pond-owner's pond do not depend on mosquito larvae as an important source of food.\nis_assumption(Not(Exists([e:pond_elements], e == mosquito_larvae))) ::: (C) Populations of mosquitoes are not dependent on a single body of water within an area as a place for their larvae to hatch and develop.\nis_assumption(Exists([e:pond_elements], effects(e) == True)) ::: (D) The effectiveness of BTI in destroying mosquito larvae in a pond does not require the pond owner's strict adherence to specific application procedures."
    ]
  },
  {
    "id": "test_232",
    "context": "The best explanation for Mozart' s death involves the recently detected fracture in his skull. The crack, most likely the result of an accident, could have easily torn veins in his brain, allowing blood to leak into his brain. When such bleeding occurs in the brain and the blood dries, many of the brain' s faculties become damaged, commonly, though not immediately, leading to death. This explanation of Mozart' s death is bolstered by the fact that the fracture shows signs of partial healing.",
    "question": "The claim that the fracture shows signs of partial healing figures in the argument in which one of the following ways?",
    "options": [
      "It shows that the fracture did not occur after Mozart's death.",
      "It shows that Mozart's death occurred suddenly.",
      "It suggests that Mozart's death was accidental.",
      "It shows that Mozart's death could have been avoided."
    ],
    "raw_logic_programs": [
      "# Declarations\nargument_elements = EnumSort([fracture, death, healing, accident])\nroles = EnumSort([evidence, conclusion, suggestion, implication])\nfigures_in = Function([argument_elements] -> [roles])\n\n# Constraints\nfigures_in(fracture) == evidence ::: The fracture is evidence in the argument\nfigures_in(death) == conclusion ::: Mozart's death is the conclusion of the argument\nfigures_in(healing) == evidence ::: The healing is evidence in the argument\nfigures_in(accident) == suggestion ::: The accident is a suggestion in the argument\n\n# Options\nQuestion ::: The claim that the fracture shows signs of partial healing figures in the argument in which one of the following ways?\nfigures_in(healing) == evidence ::: (It shows that the fracture did not occur after Mozart's death.\nfigures_in(death) == conclusion ::: (It shows that Mozart's death occurred suddenly.\nfigures_in(accident) == suggestion ::: (It suggests that Mozart's death was accidental.\nfigures_in(death) == implication ::: (It shows that Mozart's death could have been avoided."
    ]
  },
  {
    "id": "test_233",
    "context": "The average literate person today spends significantly less time reading than the average literate person did 50 years ago, yet many more books are sold per year now than were sold 50 years ago.",
    "question": "Each of the following, if true, helps resolve the apparent discrepancy above EXCEPT:",
    "options": [
      "Books sold now tend to be shorter and easier to read than were books sold 50 years ago.",
      "People of 50 years ago were more likely than people are today to display large collections of books as a sign of education and good taste.",
      "The average scholar or other person who uses books professionally today owns and consults many more different books than did the average scholar or similar professional 50 years ago.",
      "People who read books 50 years ago were more likely to read books borrowed from libraries than are people who read books today."
    ],
    "raw_logic_programs": [
      "# Declarations\ntime_periods = EnumSort([today, fifty_years_ago])\nactivities = EnumSort([reading_time, books_sold])\npeople = EnumSort([average_literate_person, scholar, professional])\nbook_types = EnumSort([shorter_easier, longer_harder])\nbook_sources = EnumSort([owned, borrowed])\n\n# Constraints\naverage_reading_time(today, average_literate_person) < average_reading_time(fifty_years_ago, average_literate_person) ::: The average literate person today spends significantly less time reading than the average literate person did 50 years ago\nbooks_sold(today) > books_sold(fifty_years_ago) ::: Many more books are sold per year now than were sold 50 years ago\n\n# Options\nQuestion ::: Each of the following, if true, helps resolve the apparent discrepancy above EXCEPT:\nhelps_resolve(books_sold(today, shorter_easier) > books_sold(fifty_years_ago, longer_harder)) ::: (A) Books sold now tend to be shorter and easier to read than were books sold 50 years ago.\nhelps_resolve(people(fifty_years_ago, average_literate_person, owned) > people(today, average_literate_person, owned)) ::: (B) People of 50 years ago were more likely than people are today to display large collections of books as a sign of education and good taste.\nhelps_resolve(books_owned(today, scholar) > books_owned(fifty_years_ago, scholar)) ::: (C) The average scholar or other person who uses books professionally today owns and consults many more different books than did the average scholar or similar professional 50 years ago.\nhelps_resolve(people(fifty_years_ago, average_literate_person, borrowed) > people(today, average_literate_person, borrowed)) ::: (D) People who read books 50 years ago were more likely to read books borrowed from libraries than are people who read books today."
    ]
  },
  {
    "id": "test_234",
    "context": "Research into artificial intelligence will fail to produce truly intelligent machines unless the focus of the discipline is radically changed. Progress has been made in creating devices of tremendous computational sophistication, but the present focus on computational ability to the exclusion of other abilities will produce devices only as capable of displaying true intelligence as a human being would be who was completely devoid of emotional and other noncognitive responses.",
    "question": "Which one of the following most accurately expresses the main conclusion argued for above?",
    "options": [
      "The current focus of research into artificial intelligence will produce devices no more capable of displaying true intelligence than a person would be who lacked emotions and other noncognitive responses.",
      "If the current focus of research into artificial intelligence is not radically changed, this research will not be able to produce machines capable of true intelligence.",
      "Despite progress in creating machines of great computational sophistication, current research into artificial intelligence has failed to fulfill its objectives.",
      "If a machine is not capable of producing humanlike noncognitive responses, then it cannot be regarded as truly intelligent."
    ],
    "raw_logic_programs": [
      "# Declarations\nresearch_focus = EnumSort([current, radically_changed])\nintelligence = EnumSort([true_intelligence, not_true_intelligence])\nmachines = Function([research_focus] -> [intelligence])\n\n# Constraints\nmachines(current) == not_true_intelligence ::: The current focus of research into artificial intelligence will produce devices no more capable of displaying true intelligence than a person would be who lacked emotions and other noncognitive responses.\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the main conclusion argued for above?\nis_main_conclusion(machines(current) == not_true_intelligence) ::: (The current focus of research into artificial intelligence will produce devices no more capable of displaying true intelligence than a person would be who lacked emotions and other noncognitive responses.\nis_main_conclusion(Implies(machines(current) == not_true_intelligence, machines(radically_changed) == true_intelligence)) ::: (If the current focus of research into artificial intelligence is not radically changed, this research will not be able to produce machines capable of true intelligence.\nis_main_conclusion(And(machines(current) == not_true_intelligence, progress_in_computation)) ::: (Despite progress in creating machines of great computational sophistication, current research into artificial intelligence has failed to fulfill its objectives.\nis_main_conclusion(Implies(Not(humanlike_non_cognitive_responses), Not(true_intelligence))) ::: (If a machine is not capable of producing humanlike noncognitive responses, then it cannot be regarded as truly intelligent."
    ]
  },
  {
    "id": "test_235",
    "context": "Half of the subjects in an experiment-the experimental group-consumed large quantities of a popular artificial sweetener. Afterward, this group showed lower cognitive abilities than did the other half of the subjects-the control group. who did not consume the sweetener. The detrimental effects were attributed to an amino acid that is one of the sweetener' s principal constituents.",
    "question": "Which of the following, if true, would best help explain how the sweetener might produce the observed effect?",
    "options": [
      "The government's analysis of the artificial sweetener determined that it was sold in relatively pure form.",
      "Subjects in the experiment did not know whether they were consuming the sweetener or a second, harmless substance.",
      "The amino acid that is a constituent of the sweetener is also sold separately as a dietary supplement.",
      "A high level of the amino acid In the blood inhibits the synthesis of a substance required for normal brain functioning."
    ],
    "raw_logic_programs": [
      "# Declarations\nsubjects = EnumSort([experimental_group, control_group])\neffects = EnumSort([lower_cognitive_abilities, normal_cognitive_abilities])\nsubstances = EnumSort([sweetener, harmless_substance])\nconstituents = EnumSort([amino_acid])\nconsumed = Function([subjects] -> [substances])\ncognitive_ability = Function([subjects] -> [effects])\ncontains = Function([substances] -> [constituents])\ninhibits = Function([constituents] -> [bool])\n\n# Constraints\nconsumed(experimental_group) == sweetener ::: The experimental group consumed the sweetener\nconsumed(control_group) != sweetener ::: The control group did not consume the sweetener\ncognitive_ability(experimental_group) == lower_cognitive_abilities ::: The experimental group showed lower cognitive abilities\ncognitive_ability(control_group) == normal_cognitive_abilities ::: The control group showed normal cognitive abilities\ncontains(sweetener) == amino_acid ::: The sweetener contains an amino acid\ninhibits(amino_acid) == True ::: A high level of the amino acid inhibits the synthesis of a substance required for normal brain functioning\n\n# Options\nQuestion ::: Which of the following, if true, would best help explain how the sweetener might produce the observed effect?\nis_explanation(contains(sweetener) == amino_acid) ::: (The government's analysis of the artificial sweetener determined that it was sold in relatively pure form.)\nis_explanation(consumed(subjects) == substances) ::: (Subjects in the experiment did not know whether they were consuming the sweetener or a second, harmless substance.)\nis_explanation(contains(sweetener) == amino_acid) ::: (The amino acid that is a constituent of the sweetener is also sold separately as a dietary supplement.)\nis_explanation(inhibits(amino_acid) == True) ::: (A high level of the amino acid in the blood inhibits the synthesis of a substance required for normal brain functioning.)"
    ]
  },
  {
    "id": "test_236",
    "context": "Recently discovered fossil evidence casts doubt on the evolutionary theory that dinosaurs are more closely related to reptiles than to other classes of animals. Fossils show that some dinosaurs had hollow bones -- a feature found today only in warm-blooded creatures, such as birds, that have a high metabolic rate. Dinosaurs had well-developed senses of sight and hearing, which is not true of present-day cold-blooded creatures like reptiles. The highly arched mouth roof of some dinosaurs would have permitted them to breathe while eating, as fast-breathing animals, such as birds, need to do. Today, all fast-breathing animals are warm-blooded. Finally, fossils reveal that many dinosaurs had a pattern of growth typical of warm-blooded animals.",
    "question": "The argument in the passage proceeds by",
    "options": [
      "assuming that if all members of a category have a certain property then all things with that property belong to the category",
      "establishing a general principle that it then uses to draw a conclusion about a particular case",
      "presenting evidence that a past phenomenon is more similar to one rather than the other of two present-day phenomena",
      "dismissing a claim made about the present on the basis of historical evidence"
    ],
    "raw_logic_programs": [
      "# Declarations\ncategories = EnumSort([dinosaurs, reptiles, warm_blooded_creatures, birds])\nproperties = EnumSort([hollow_bones, well_developed_senses, highly_arched_mouth_roof, fast_breathing, warm_blooded_growth_pattern])\nhas_property = Function([categories, properties] -> [bool])\n\n# Constraints\nhas_property(dinosaurs, hollow_bones) ::: Fossils show that some dinosaurs had hollow bones\nForAll([c:categories], Implies(has_property(c, hollow_bones), c == warm_blooded_creatures)) ::: Hollow bones are found today only in warm-blooded creatures\nhas_property(dinosaurs, well_developed_senses) ::: Dinosaurs had well-developed senses of sight and hearing\nForAll([c:categories], Implies(Not(has_property(c, well_developed_senses)), c == reptiles)) ::: Present-day cold-blooded creatures like reptiles do not have well-developed senses\nhas_property(dinosaurs, highly_arched_mouth_roof) ::: The highly arched mouth roof of some dinosaurs\nForAll([c:categories], Implies(has_property(c, highly_arched_mouth_roof), c == fast_breathing)) ::: Highly arched mouth roof permits fast breathing\nForAll([c:categories], Implies(has_property(c, fast_breathing), c == warm_blooded_creatures)) ::: All fast-breathing animals are warm-blooded\nhas_property(dinosaurs, warm_blooded_growth_pattern) ::: Many dinosaurs had a pattern of growth typical of warm-blooded animals\n\n# Options\nQuestion ::: The argument in the passage proceeds by\nis_valid(ForAll([c:categories], Implies(ForAll([p:properties], has_property(c, p)), Exists([c2:categories], And(c2 != c, has_property(c2, p)))))) ::: (assuming that if all members of a category have a certain property then all things with that property belong to the category)\nis_valid(Exists([p:properties], ForAll([c:categories], Implies(has_property(c, p), c == warm_blooded_creatures)))) ::: (establishing a general principle that it then uses to draw a conclusion about a particular case)\nis_valid(Exists([c1:categories, c2:categories], And(c1 != c2, ForAll([p:properties], Implies(has_property(c1, p), has_property(c2, p)))))) ::: (presenting evidence that a past phenomenon is more similar to one rather than the other of two present-day phenomena)\nis_valid(Exists([c:categories], ForAll([p:properties], Implies(Not(has_property(c, p)), c == reptiles)))) ::: (dismissing a claim made about the present on the basis of historical evidence)"
    ]
  },
  {
    "id": "test_237",
    "context": "Bart: A mathematical problem that defied solution for hundreds of years has finally yielded to a supercomputer. The process by which the supercomputer derived the result is so complex, however, that no one can fully comprehend it. Consequently, the result is unacceptable. Anne: In scientific research, if the results of a test can be replicated in other tests, the results are acceptable even though the way they were derived might not be fully understood. Ttherefore, if a mathematical result derived by a supercomputer can be reproduced by other supercomputers following the same procedure, it is acceptable.",
    "question": "Bart's argument requires which one of the following assumptions?",
    "options": [
      "To be acceptable, the mathematical result in question must be reproduced on another supercomputer.",
      "The mathematical result in question is unacceptable because it was derived with the use of a supercomputer.",
      "The supercomputer cannot derive an acceptable solution to the mathematical problem in question.",
      "For the mathematical result in question to be acceptable, there must be someone who can fully comprehend the process by which it was derived."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Bart, Anne])\nassumptions = EnumSort([A, B, C, D])\nrequires = Function([arguments, assumptions] -> [bool])\n\n# Constraints\n# Bart's argument is that the result is unacceptable because it cannot be fully comprehended.\nrequires(Bart, D) ::: For the mathematical result in question to be acceptable, there must be someone who can fully comprehend the process by which it was derived.\n\n# Options\nQuestion ::: Bart's argument requires which one of the following assumptions?\nis_required(requires(Bart, A)) ::: (A) To be acceptable, the mathematical result in question must be reproduced on another supercomputer.\nis_required(requires(Bart, B)) ::: (B) The mathematical result in question is unacceptable because it was derived with the use of a supercomputer.\nis_required(requires(Bart, C)) ::: (C) The supercomputer cannot derive an acceptable solution to the mathematical problem in question.\nis_required(requires(Bart, D)) ::: (D) For the mathematical result in question to be acceptable, there must be someone who can fully comprehend the process by which it was derived."
    ]
  },
  {
    "id": "test_238",
    "context": "A healthy economy requires a strong financial sector, especially in regards to investment banks. The financial sector organizes and injects capital into the economy, allowing businesses to expand and hire more workers. In order to strengthen the financial sector, regulations must be relaxed to allow capital to flow more freely.",
    "question": "Which one of the following most strengthens the argument?",
    "options": [
      "Business growth and decreased unemployment are signs of a strong economy.",
      "The financial sector actively lobbies for cutting regulations.",
      "No heavily regulated financial sector has ever been strong",
      "Investment banks hold the highest market share in the financial sector."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([business_growth, financial_sector_lobbies, no_heavily_regulated_strong, investment_banks_market_share])\nstrengthens = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as it is more about evaluating which statement strengthens the argument.\n\n# Options\nQuestion ::: Which one of the following most strengthens the argument?\nstrengthens(no_heavily_regulated_strong) ::: (C) No heavily regulated financial sector has ever been strong\nstrengthens(business_growth) ::: (A) Business growth and decreased unemployment are signs of a strong economy\nstrengthens(financial_sector_lobbies) ::: (B) The financial sector actively lobbies for cutting regulations\nstrengthens(investment_banks_market_share) ::: (D) Investment banks hold the highest market share in the financial sector"
    ]
  },
  {
    "id": "test_239",
    "context": "The publisher of a best-selling self-help book had, in some promotional material, claimed that it showed readers how to become exceptionally successful. Of course, everyone knows that no book can deliver to the many what, by definition, must remain limited to the few: exceptional success. Thus, although it is clear that the publisher knowingly made a false claim, doing so should not be considered unethical in this case.",
    "question": "Which one of the following principles, if valid, most strongly supports the reasoning above?",
    "options": [
      "Knowingly making a false claim is unethical only if it is reasonable for people to accept the claim as true.",
      "Knowingly making a false claim is unethical if those making it derive a gain at the expense of those acting as if the claim were true.",
      "Knowingly making a false claim is unethical in only those cases in which those who accept the claim as true suffer a hardship greater than the gain they were anticipating.",
      "Knowingly making a false claim is unethical only if there is a possibility that someone will act as if the claim might be true."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([true_claim, false_claim])\nactions = EnumSort([ethical, unethical])\nprinciples = Function([claims] -> [actions])\n\n# Constraints\nprinciples(false_claim) == unethical ::: The publisher knowingly made a false claim\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most strongly supports the reasoning above?\nImplies(principles(false_claim) == unethical, Not(Exists([p:people], reasonable_to_accept(p, false_claim)))) ::: (A) Knowingly making a false claim is unethical only if it is reasonable for people to accept the claim as true.\nImplies(principles(false_claim) == unethical, Exists([p:people], gain_at_expense(p, false_claim))) ::: (B) Knowingly making a false claim is unethical if those making it derive a gain at the expense of those acting as if the claim were true.\nImplies(principles(false_claim) == unethical, Exists([p:people], hardship_greater_than_gain(p, false_claim))) ::: (C) Knowingly making a false claim is unethical in only those cases in which those who accept the claim as true suffer a hardship greater than the gain they were anticipating.\nImplies(principles(false_claim) == unethical, Exists([p:people], possibility_of_action(p, false_claim))) ::: (D) Knowingly making a false claim is unethical only if there is a possibility that someone will act as if the claim might be true."
    ]
  },
  {
    "id": "test_240",
    "context": "Anthropologists assert that cultures advance only when independence replaces dependence -- that is, only when imposition by outsiders is replaced by initiative from within. In other words, the natives of a culture are the only ones who can move that culture forward. Non-natives may provide valuable advice, but any imposition of their views threatens independence and thus progress. If one looks at individual schools as separate cultures, ttherefore, the key to educational progress is obvious: __.",
    "question": "Which one of the following best completes the passage?",
    "options": [
      "the more independent a school is, the more educational progress it will make",
      "outsiders must be prevented from participation in schools' efforts to advance",
      "some schools require more independence than others, depending on the initiative of their staffs and students",
      "individual schools must be independent of outside imposition"
    ],
    "raw_logic_programs": [
      "# Declarations\ncultures = EnumSort([native, non_native])\nactions = EnumSort([independence, dependence, imposition, initiative])\nschools = EnumSort([school1, school2, school3])\nprogress = Function([schools] -> [bool])\n\n# Constraints\nForAll([c:cultures], Implies(c == native, Exists([a:actions], a == initiative))) ::: Natives of a culture are the only ones who can move that culture forward\nForAll([c:cultures], Implies(c == non_native, Not(Exists([a:actions], a == imposition)))) ::: Non-natives may provide valuable advice, but any imposition of their views threatens independence and thus progress\nForAll([s:schools], Implies(Exists([a:actions], a == independence), progress(s))) ::: Cultures advance only when independence replaces dependence\n\n# Options\nQuestion ::: Which one of the following best completes the passage?\nis_best_completion(ForAll([s:schools], Implies(Exists([a:actions], a == independence), progress(s)))) ::: (the more independent a school is, the more educational progress it will make)\nis_best_completion(Not(Exists([c:cultures], Exists([a:actions], a == imposition)))) ::: (outsiders must be prevented from participation in schools' efforts to advance)\nis_best_completion(Exists([s:schools], Exists([a:actions], a == initiative))) ::: (some schools require more independence than others, depending on the initiative of their staffs and students)\nis_best_completion(ForAll([s:schools], Not(Exists([c:cultures], Exists([a:actions], a == imposition))))) ::: (individual schools must be independent of outside imposition)"
    ]
  },
  {
    "id": "test_241",
    "context": "We know that if life ever existed on the Moon, there would be signs of life there. But numerous excursions to the Moon have failed to provide us with any sign of life. So there has never been life on the Moon.",
    "question": "The pattern of reasoning in the argument above is most similar to that in which one of the following?",
    "options": [
      "If rodents are responsible for the lost grain from last year's harvest, we would find signs of rodents in the warehouses. And we have found signs of rodents there. So rodents are responsible for the lost grain.",
      "If we have any mayonnaise, it would be in the refrigerator. But the refrigerator is almost empty. So it is unlikely that we have mayonnaise.",
      "If their army is planning an attack, there would either be troop movements along the border or a transfer of weapons. But intelligence reports show no indication of either. So their army is not planning an attack.",
      "We know that the spy is a traitor. We do not know that the general is a traitor. So the general is not a spy."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([life_on_moon, signs_of_life, rodents_responsible, signs_of_rodents, mayonnaise, in_refrigerator, army_attack, troop_movements, transfer_of_weapons, spy_traitor, general_traitor])\nimplies = Function([propositions, propositions] -> [bool])\nnegation = Function([propositions] -> [bool])\n\n# Constraints\nimplies(life_on_moon, signs_of_life) ::: if life ever existed on the Moon, there would be signs of life there\nnegation(signs_of_life) ::: no sign of life on the Moon\nnegation(life_on_moon) ::: so there has never been life on the Moon\n\n# Options\nQuestion ::: The pattern of reasoning in the argument above is most similar to that in which one of the following?\nis_similar(And(implies(rodents_responsible, signs_of_rodents), signs_of_rodents, rodents_responsible)) ::: (A)\nis_similar(And(implies(mayonnaise, in_refrigerator), negation(in_refrigerator), negation(mayonnaise))) ::: (B)\nis_similar(And(implies(army_attack, Or(troop_movements, transfer_of_weapons)), negation(troop_movements), negation(transfer_of_weapons), negation(army_attack))) ::: (C)\nis_similar(And(spy_traitor, negation(general_traitor), negation(spy_traitor))) ::: (D)"
    ]
  },
  {
    "id": "test_242",
    "context": "Advertisement: When your car's engine is running at its normal operating temperature, any major brand of motor oil will protect it about as well as Tuff does. When the engine is cold, it is a different story: Tuff motor oil flows better at lower temperatures than its major competitors do. So, if you want your car's engine to have maximum protection, you should use Tuff.",
    "question": "which of the following, if true, most strengthens the argument in the advertisement?",
    "options": [
      "Tuff motor oil is manufactured at only one refinery and shipped from there to all markets.",
      "Tuff motor oil's share of the engine oil market peaked three years ago.",
      "Tuff motor oil is periodically supplied free of charge to automobile manufacturers to use in factory-new cars.",
      "Tuff motor oil provides above-average protection for engines that happen to overheat."
    ],
    "raw_logic_programs": [
      "# Declarations\nbrands = EnumSort([Tuff, Competitors])\nconditions = EnumSort([normal_temperature, cold_temperature])\nprotection = Function([brands, conditions] -> [bool])\n\n# Constraints\nForAll([b:brands], protection(b, normal_temperature)) ::: When your car's engine is running at its normal operating temperature, any major brand of motor oil will protect it about as well as Tuff does\nprotection(Tuff, cold_temperature) ::: Tuff motor oil flows better at lower temperatures than its major competitors do\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the argument in the advertisement?\nstrengthens(Exists([b:brands], And(b != Tuff, Not(protection(b, cold_temperature))))) ::: (A) Tuff motor oil is manufactured at only one refinery and shipped from there to all markets.\nstrengthens(Exists([b:brands], And(b != Tuff, Not(protection(b, cold_temperature))))) ::: (B) Tuff motor oil's share of the engine oil market peaked three years ago.\nstrengthens(Exists([b:brands], And(b != Tuff, Not(protection(b, cold_temperature))))) ::: (C) Tuff motor oil is periodically supplied free of charge to automobile manufacturers to use in factory-new cars.\nstrengthens(Exists([b:brands], And(b != Tuff, Not(protection(b, cold_temperature))))) ::: (D) Tuff motor oil provides above-average protection for engines that happen to overheat."
    ]
  },
  {
    "id": "test_243",
    "context": "In order for life to exist on the recently discovered planet P23, there must be water on the planet' s surface. But there is no water on P23' s surface, so there is no life on planet P23.",
    "question": "The pattern of reasoning in the argument above is most similar to that in which one of the following arguments?",
    "options": [
      "The price of real estate in a particular town is increasing. And if the town's economy were improving, the price of real estate there would increase. Thus, the town's economy is improving.",
      "Oil companies are not buying new drilling equipment. But if they were planning on increasing their drilling, they would be buying new drilling equipment. Thus, oil companies are not planning on increasing their drilling.",
      "A company must have efficient employees to be successful. And if a company's employees are knowledgeable and hardworking, then they are probably efficient. Thus, in order for a company to be successful, it must have knowledgeable and hardworking employees.",
      "The exports of a particular nation have recently decreased. But whenever that nation's exports decrease, its trade deficit increases. Thus, the nation's trade deficit has recently increased."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([water_on_surface, life_exists, economy_improving, real_estate_increasing, buying_equipment, planning_increase_drilling, efficient_employees, successful_company, knowledgeable_employees, hardworking_employees, exports_decrease, trade_deficit_increase])\narguments = Function([conditions] -> [bool])\n\n# Constraints\narguments(water_on_surface) == False ::: There is no water on P23's surface\narguments(life_exists) == Implies(arguments(water_on_surface), True) ::: In order for life to exist on P23, there must be water on the planet's surface\n\n# Options\nQuestion ::: The pattern of reasoning in the argument above is most similar to that in which one of the following arguments?\nis_similar(And(arguments(real_estate_increasing) == True, arguments(economy_improving) == Implies(arguments(real_estate_increasing), True))) ::: (A)\nis_similar(And(arguments(buying_equipment) == False, arguments(planning_increase_drilling) == Implies(arguments(buying_equipment), True))) ::: (B)\nis_similar(And(arguments(efficient_employees) == Implies(And(arguments(knowledgeable_employees), arguments(hardworking_employees)), True), arguments(successful_company) == Implies(arguments(efficient_employees), True))) ::: (C)\nis_similar(And(arguments(exports_decrease) == True, arguments(trade_deficit_increase) == Implies(arguments(exports_decrease), True))) ::: (D)"
    ]
  },
  {
    "id": "test_244",
    "context": "People who receive unsolicited advice from someone whose advantage would be served if that advice is taken should regard the proffered advice with skepticism unless there is good reason to think that their interests substantially coincide with those of the advice giver in the circumstance in question.",
    "question": "This principle, if accepted, would justify which one of the following judgments?",
    "options": [
      "Sara overhears Ron talking about a course he will be teaching and interrupts to recommend a textbook for his course. However, even though Sara and Ron each wrote a chapter of this textbook, since the book's editor is a personal friend of Sara's, Ron should investigate further before deciding whether it is the best textbook for his course.",
      "Mario wants to bring pastry to Yvette's party, and when he consults her Yvette suggests that he bring his favorite chocolate fudge brownies from the local bakery. However, since Yvette also prefers those brownies to any other pastry, Mario would be wise to check with others before following her recommendation.",
      "While shopping for a refrigerator, Ramon is approached by a salesperson who, on the basis of her personal experience, warns him against the least expensive model. However, the salesperson's commission increases with the price of the refrigerator sold, so Ramon should not reject the least expensive model on the salesperson's advice alone.",
      "Mei is buying fish for soup. Joel, who owns the fish market where Mei is a regular and valued customer, suggests a much less expensive fish than the fish Mei herself prefers. Since if Mei follows Joel's advice, Joel will make less profit on the sale than he would have otherwise, Mei should follow his recommendation."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([advice_receiver, advice_giver])\ninterests = Function([people] -> [bool])\nadvantage_served = Function([advice_giver] -> [bool])\ngood_reason = Function([advice_receiver, advice_giver] -> [bool])\nskepticism = Function([advice_receiver] -> [bool])\n\n# Constraints\nForAll([ar:people, ag:people], Implies(And(advantage_served(ag), Not(good_reason(ar, ag))), skepticism(ar))) ::: People should regard unsolicited advice with skepticism if the advice serves the giver's advantage unless there is good reason to think interests coincide.\n\n# Options\nQuestion ::: This principle, if accepted, would justify which one of the following judgments?\nis_justified(And(advantage_served(Sara), Not(good_reason(Ron, Sara)), skepticism(Ron))) ::: (A) Ron should investigate further before deciding on the textbook.\nis_justified(And(advantage_served(Yvette), Not(good_reason(Mario, Yvette)), skepticism(Mario))) ::: (B) Mario would be wise to check with others before following Yvette's recommendation.\nis_justified(And(advantage_served(salesperson), Not(good_reason(Ramon, salesperson)), skepticism(Ramon))) ::: (C) Ramon should not reject the least expensive model on the salesperson's advice alone.\nis_justified(Not(advantage_served(Joel)), Not(skepticism(Mei))) ::: (D) Mei should follow Joel's recommendation."
    ]
  },
  {
    "id": "test_245",
    "context": "Unless they are used as strictly temporary measures, rent-control ordinances (municipal regulations placing limits on rent increases) have several negative effects for renters. One of these is that the controls will bring about a shortage of rental units. This disadvantage for renters occurs over the long run, but the advantage -- smaller rent increases -- occurs immediately. In many municipalities, specifically in all those where tenants of rent-control units have a secure hold on political power and can get rent-control ordinances enacted or repealed, it is invariably the desire for short-term gain that guides those tenants in the exercise of that power.",
    "question": "If the statements above are true, which one of the following can be properly inferred from them?",
    "options": [
      "In many municipalities there is now, or eventually will be, a shortage of rental units.",
      "In many municipalities rent-control ordinances are repealed as soon as shortages of rental units arise.",
      "It is impossible for landlords to raise rents when rent controls are in effect.",
      "The only negative effect of rent control for renters is that it brings about a shortage of rental units."
    ],
    "raw_logic_programs": [
      "# Declarations\nmunicipalities = EnumSort([municipality1, municipality2, municipality3, ...])\neffects = EnumSort([shortage_of_rental_units, smaller_rent_increases])\ntime_periods = EnumSort([short_term, long_term])\npolitical_power = Function([municipalities] -> [bool])\nrent_control = Function([municipalities] -> [bool])\neffects_occur = Function([municipalities, effects, time_periods] -> [bool])\n\n# Constraints\nForAll([m:municipalities], Implies(rent_control(m), effects_occur(m, shortage_of_rental_units, long_term))) ::: Rent-control ordinances bring about a shortage of rental units over the long run\nForAll([m:municipalities], Implies(rent_control(m), effects_occur(m, smaller_rent_increases, short_term))) ::: Smaller rent increases occur immediately\nForAll([m:municipalities], Implies(political_power(m), Exists([t:time_periods], effects_occur(m, smaller_rent_increases, t)))) ::: In municipalities where tenants have political power, short-term gain guides their exercise of power\n\n# Options\nQuestion ::: If the statements above are true, which one of the following can be properly inferred from them?\nis_inferred(Exists([m:municipalities], effects_occur(m, shortage_of_rental_units, long_term))) ::: (A) In many municipalities there is now, or eventually will be, a shortage of rental units.\nis_inferred(ForAll([m:municipalities], Implies(effects_occur(m, shortage_of_rental_units, long_term), Not(rent_control(m))))) ::: (B) In many municipalities rent-control ordinances are repealed as soon as shortages of rental units arise.\nis_inferred(ForAll([m:municipalities], Not(effects_occur(m, smaller_rent_increases, short_term)))) ::: (C) It is impossible for landlords to raise rents when rent controls are in effect.\nis_inferred(ForAll([m:municipalities], Implies(rent_control(m), effects_occur(m, shortage_of_rental_units, long_term) == effects_occur(m, smaller_rent_increases, short_term)))) ::: (D) The only negative effect of rent control for renters is that it brings about a shortage of rental units."
    ]
  },
  {
    "id": "test_246",
    "context": "Nadia: Directors of films that depict historical figures and events have a responsibility to represent those figures and events in a manner that is as faithful as possible to the facts. Otherwise, directors are likely to produce biased or misleading presentations of such events that will be accepted by audiences as historical fact. Ariel: But even a historical film is and should be the expression of its director' s artistic sensibility. Rather than constrain directors, what must be done is to educate film audiences to see film as art rather than as history, thereby ensuring that historical films are not accepted uncritically as historical fact.",
    "question": "Which one of the following is the point at issue between Nadia and Ariel?",
    "options": [
      "whether the people who make up film audiences are likely to believe that what they see in films is an accurate depiction of historical figures and events",
      "whether directors of films that depict historical figures or events tend to misrepresent those figures and events",
      "whether it is possible for films that depict historical figures and events to be vehicles for a director's artistic sensibility",
      "whether film directors have an obligation to represent historical figures and events in a manner that is as faithful as possible to the facts"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Nadia, Ariel])\nissues = EnumSort([audience_belief, director_misrepresentation, artistic_sensibility, director_obligation])\nagrees = Function([statements, issues] -> [bool])\n\n# Constraints\nagrees(Nadia, director_obligation) ::: Nadia believes directors have an obligation to represent historical figures and events faithfully\nNot(agrees(Ariel, director_obligation)) ::: Ariel does not believe directors have such an obligation\nagrees(Ariel, artistic_sensibility) ::: Ariel believes films should be an expression of the director's artistic sensibility\nNot(agrees(Nadia, artistic_sensibility)) ::: Nadia does not prioritize artistic sensibility over factual representation\n\n# Options\nQuestion ::: Which one of the following is the point at issue between Nadia and Ariel?\nis_point_at_issue(agrees(Nadia, audience_belief) == agrees(Ariel, audience_belief)) ::: (whether the people who make up film audiences are likely to believe that what they see in films is an accurate depiction of historical figures and events\nis_point_at_issue(agrees(Nadia, director_misrepresentation) == agrees(Ariel, director_misrepresentation)) ::: (whether directors of films that depict historical figures or events tend to misrepresent those figures and events\nis_point_at_issue(agrees(Nadia, artistic_sensibility) == agrees(Ariel, artistic_sensibility)) ::: (whether it is possible for films that depict historical figures and events to be vehicles for a director's artistic sensibility\nis_point_at_issue(agrees(Nadia, director_obligation) == agrees(Ariel, director_obligation)) ::: (whether film directors have an obligation to represent historical figures and events in a manner that is as faithful as possible to the facts"
    ]
  },
  {
    "id": "test_247",
    "context": "Consumption of sugar affects the level of unmetabolized sugar in the blood; the level rises following consumption of sugar. Yet people who consume large amounts of sugar tend to have below-average levels of unmetabolized sugar in their blood.",
    "question": "Which one of the following, if true, helps most to resolve the apparent paradox described above?",
    "options": [
      "Consuming large amounts of sugar causes the body to secrete abnormally high amounts of insulin, a sugar-metabolizing enzyme.",
      "Persons who are overweight tend to have below- average levels of unmetabolized sugar in their blood.",
      "Fruits, vegetables, meats, and dairy products often contain as much sugar as sweets.",
      "Consuming large amounts of sugar can lead eventually to the failure of the body to produce enough insulin, a sugar-metabolizing enzyme."
    ],
    "raw_logic_programs": [
      "# Declarations\nsugar_consumption = EnumSort([low, high])\nsugar_level = EnumSort([below_average, average, above_average])\ninsulin_secretion = EnumSort([normal, high, low])\nbody_condition = EnumSort([healthy, overweight, insulin_failure])\nfood_type = EnumSort([fruits_vegetables, meats_dairy, sweets])\n\n# Constraints\nForAll([c:sugar_consumption], Implies(c == high, sugar_level == above_average)) ::: Consumption of sugar affects the level of unmetabolized sugar in the blood; the level rises following consumption of sugar\nForAll([c:sugar_consumption], Implies(c == high, sugar_level == below_average)) ::: People who consume large amounts of sugar tend to have below-average levels of unmetabolized sugar in their blood\n\n# Options\nQuestion ::: Which one of the following, if true, helps most to resolve the apparent paradox described above?\nis_resolving(Implies(sugar_consumption == high, insulin_secretion == high)) ::: (A) Consuming large amounts of sugar causes the body to secrete abnormally high amounts of insulin, a sugar-metabolizing enzyme\nis_resolving(Implies(body_condition == overweight, sugar_level == below_average)) ::: (B) Persons who are overweight tend to have below-average levels of unmetabolized sugar in their blood\nis_resolving(Implies(food_type == sweets, sugar_level == average)) ::: (C) Fruits, vegetables, meats, and dairy products often contain as much sugar as sweets\nis_resolving(Implies(sugar_consumption == high, body_condition == insulin_failure)) ::: (D) Consuming large amounts of sugar can lead eventually to the failure of the body to produce enough insulin, a sugar-metabolizing enzyme"
    ]
  },
  {
    "id": "test_248",
    "context": "Some games, such as chess and soccer, are competitive and played according to rules, but others, such as children' s games of make believe, are neither. Ttherefore, being competitive and involving rules are not essential to being a game.",
    "question": "Which one of the following is most similar in its logical features to the argument above?",
    "options": [
      "Most automobiles, and nearly all of those produced today, are gasoline-fueled and four-wheeled, but others, such as some experimental electric cars, are neither. Ttherefore, being gasoline-fueled and having four wheels are not essential to being an automobile.",
      "All North American bears eat meat. Some taxonomists, however, have theorized that the giant panda, which eats only bamboo shoots, is a kind of bear. Either these taxonomists are wrong or eating meat is not essential to being a bear.",
      "Both the gourmet and the glutton enjoy eating. However, one can be a glutton, but not a gourmet, without having an educated palate. Ttherefore, having an educated palate is essential to being a gourmet, but enjoying food is not.",
      "It is true that dogs occasionally eat vegetation, but if dogs were not carnivorous they would be shaped quite differently from the way they are. Ttherefore, being carnivorous is essential to being a dog."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([games, automobiles, bears, gourmets, dogs])\nfeatures = EnumSort([competitive, rules, gasoline_fueled, four_wheeled, meat_eating, educated_palate, carnivorous])\nhas_feature = Function([entities, features] -> [bool])\n\n# Constraints\nAnd(has_feature(games, competitive), has_feature(games, rules)) ::: Some games, such as chess and soccer, are competitive and played according to rules\nNot(And(has_feature(games, competitive), has_feature(games, rules))) ::: others, such as children's games of make believe, are neither\nNot(And(has_feature(automobiles, gasoline_fueled), has_feature(automobiles, four_wheeled))) ::: others, such as some experimental electric cars, are neither\nForAll([b:bears], has_feature(b, meat_eating)) ::: All North American bears eat meat\nNot(has_feature(bears, meat_eating)) ::: the giant panda, which eats only bamboo shoots, is a kind of bear\nForAll([g:gourmets], has_feature(g, educated_palate)) ::: having an educated palate is essential to being a gourmet\nNot(has_feature(gourmets, educated_palate)) ::: one can be a glutton, but not a gourmet, without having an educated palate\nForAll([d:dogs], has_feature(d, carnivorous)) ::: being carnivorous is essential to being a dog\nNot(has_feature(dogs, carnivorous)) ::: dogs occasionally eat vegetation\n\n# Options\nQuestion ::: Which one of the following is most similar in its logical features to the argument above?\nis_similar(And(has_feature(automobiles, gasoline_fueled), has_feature(automobiles, four_wheeled)), Not(And(has_feature(automobiles, gasoline_fueled), has_feature(automobiles, four_wheeled)))) ::: (A)\nis_similar(ForAll([b:bears], has_feature(b, meat_eating)), Not(has_feature(bears, meat_eating))) ::: (B)\nis_similar(ForAll([g:gourmets], has_feature(g, educated_palate)), Not(has_feature(gourmets, educated_palate))) ::: (C)\nis_similar(ForAll([d:dogs], has_feature(d, carnivorous)), Not(has_feature(dogs, carnivorous))) ::: (D)"
    ]
  },
  {
    "id": "test_249",
    "context": "Philosopher: To explain the causes of cultural phenomena, a social scientist needs data about several societies: one cannot be sure, for example, that a given political structure is brought about only by certain ecological or climatic factors unless one knows that there are no similarly structured societies not subject to those factors, and no societies that, though subject to those factors, are not so structured.",
    "question": "The claim that to explain the causes of cultural phenomena, a social scientist needs data about several societies plays which one of the following roles in the philosopher's reasoning?",
    "options": [
      "It is a dilemma that, it is argued, is faced by every social scientist because of the difficulty of determining whether a given cultural phenomenon is the cause or the effect of a given factor.",
      "It describes a problem that the philosopher claims is caused by the social scientist's need for certainty.",
      "It is a claim that the philosopher attempts to justify by appeal to the requirements for establishing the existence of one kind of causal relationship.",
      "It is a premise used to support a general theoretical claim about the nature of cause and effect relationships."
    ],
    "raw_logic_programs": [
      "# Declarations\nroles = EnumSort([dilemma, problem, claim, premise])\nreasoning = Function([roles] -> [bool])\n\n# Constraints\nreasoning(claim) ::: The claim that to explain the causes of cultural phenomena, a social scientist needs data about several societies\n\n# Options\nQuestion ::: The claim that to explain the causes of cultural phenomena, a social scientist needs data about several societies plays which one of the following roles in the philosopher's reasoning?\nis_justified_by(reasoning(claim)) ::: (It is a claim that the philosopher attempts to justify by appeal to the requirements for establishing the existence of one kind of causal relationship.)\nis_dilemma(reasoning(dilemma)) ::: (It is a dilemma that, it is argued, is faced by every social scientist because of the difficulty of determining whether a given cultural phenomenon is the cause or the effect of a given factor.)\nis_problem(reasoning(problem)) ::: (It describes a problem that the philosopher claims is caused by the social scientist's need for certainty.)\nis_premise(reasoning(premise)) ::: (It is a premise used to support a general theoretical claim about the nature of cause and effect relationships.)"
    ]
  },
  {
    "id": "test_250",
    "context": "An overwhelming proportion of the most productive employees at SaleCo' s regional offices work not eight hours a day, five days a week, as do other SaleCo employees, but rather ten hours a day, four days a week, with Friday off. Noting this phenomenon, SaleCo' s president plans to increase overall productivity by keeping the offices closed on Fridays and having all employees work the same schedule-ten hours a day, four days a week.",
    "question": "Which of the following, if true, provides the most reason to doubt that the president's plan, if implemented, will achieve its stated purpose?",
    "options": [
      "Every employee of SaleCo who has been there for at least a year is entitled to three weeks of vacation each year and must be paid his or her regular salary for that time off.",
      "Employees at SaleCo are compensated not on the basis of how many hours a week they work but on the basis of how productive they are during the hours they are at work.",
      "Working ten hours a day has allowed the most productive employees to work two hours alone each day in their respective offices relatively undisturbed by fellow employees.",
      "None of the employees who work four days a week had volunteered to work that schedule, but all were assigned to it by their supervisors."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([productive, other])\ndays = EnumSort([Monday, Tuesday, Wednesday, Thursday, Friday])\nwork_schedule = Function([employees] -> [days])\nproductivity = Function([employees] -> [int])\n\n# Constraints\nForAll([e:employees], Count([d:days], work_schedule(e, d)) == 4) ::: Employees work four days a week\nwork_schedule(productive) == [Monday, Tuesday, Wednesday, Thursday] ::: Productive employees work ten hours a day, four days a week, with Friday off\nwork_schedule(other) == [Monday, Tuesday, Wednesday, Thursday, Friday] ::: Other employees work eight hours a day, five days a week\n\n# Options\nQuestion ::: Which of the following, if true, provides the most reason to doubt that the president's plan, if implemented, will achieve its stated purpose?\nis_reason_to_doubt(Exists([e:employees], And(productivity(e) == high, work_schedule(e) == [Monday, Tuesday, Wednesday, Thursday, Friday]))) ::: (A)\nis_reason_to_doubt(Exists([e:employees], And(productivity(e) == high, work_schedule(e) == [Monday, Tuesday, Wednesday, Thursday]))) ::: (B)\nis_reason_to_doubt(Exists([e:employees], And(productivity(e) == high, work_schedule(e) == [Monday, Tuesday, Wednesday, Thursday], undisturbed_hours(e) == 2))) ::: (C)\nis_reason_to_doubt(Exists([e:employees], And(productivity(e) == high, work_schedule(e) == [Monday, Tuesday, Wednesday, Thursday], assigned_schedule(e) == true))) ::: (D)"
    ]
  },
  {
    "id": "test_251",
    "context": "Carla: Professors at public universities should receive paid leaves of absence to allow them to engage in research. Research not only advances human knowledge, but also improves professors' teaching by keeping them abreast of the latest information in their fields. David: But even if you are right about the beneficial effects of research, why should our limited resources be devoted to supporting professors taking time off from teaching?",
    "question": "David's response to Carla is most vulnerable to criticism on the grounds that it",
    "options": [
      "takes for granted that the only function of a university professor is teaching",
      "incorrectly takes Carla's remarks as claiming that all funding for professors comes from tax money",
      "ignores the part of Carla's remarks that could provide an answer to David's question",
      "takes for granted that providing the opportunity for research is the only function of paid leaves of absence"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Carla, David])\ncriticisms = EnumSort([teaching_only_function, tax_funding_assumption, ignores_answer, research_only_function])\n\n# Constraints\nasserts(Carla, research_advances_knowledge) ::: Carla asserts that research advances human knowledge\nasserts(Carla, research_improves_teaching) ::: Carla asserts that research improves professors' teaching\nquestions(David, resource_allocation) ::: David questions the allocation of resources for professors' research leaves\n\n# Options\nQuestion ::: David's response to Carla is most vulnerable to criticism on the grounds that it\nis_vulnerable(ignores_answer) ::: (ignores the part of Carla's remarks that could provide an answer to David's question)\nis_vulnerable(teaching_only_function) ::: (takes for granted that the only function of a university professor is teaching)\nis_vulnerable(tax_funding_assumption) ::: (incorrectly takes Carla's remarks as claiming that all funding for professors comes from tax money)\nis_vulnerable(research_only_function) ::: (takes for granted that providing the opportunity for research is the only function of paid leaves of absence)"
    ]
  },
  {
    "id": "test_252",
    "context": "Biologist: Lions and tigers are so similar to each other anatomically that their skeletons are virtually indistinguishable. But their behaviors are known to be quite different: tigers hunt only as solitary individuals, whereas lions hunt in packs. Thus, paleontologists cannot reasonably infer solely on the basis of skeletal anatomy that extinct predatory animals, such as certain dinosaurs, hunted in packs.",
    "question": "The conclusion is properly drawn if which one of the following is assumed?",
    "options": [
      "If any two animal species with virtually indistinguishable skeletal anatomy exhibit quite different hunting behaviors, then it is never reasonable to infer, based solely on the hunting behavior of those species, that the two species have the same skeletal anatomy.",
      "There have existed at least two species of extinct predatory dinosaurs that were so similar to each other that their skeletal anatomy is virtually indistinguishable.",
      "The skeletons of lions and tigers are at least somewhat similar in structure in certain key respects to the skeletons of at least some extinct predatory animals.",
      "If skeletal anatomy alone is ever an inadequate basis for inferring a particular species' hunting behavior, then it is never reasonable to infer, based on skeletal anatomy alone, that a species of animals hunted in packs."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([lions, tigers, extinct_predators])\nbehaviors = EnumSort([solitary, pack])\nanatomy_similarity = Function([species, species] -> [bool])\nhunting_behavior = Function([species] -> [behaviors])\n\n# Constraints\nanatomy_similarity(lions, tigers) == True ::: Lions and tigers are so similar to each other anatomically that their skeletons are virtually indistinguishable\nhunting_behavior(tigers) == solitary ::: Tigers hunt only as solitary individuals\nhunting_behavior(lions) == pack ::: Lions hunt in packs\n\n# Options\nQuestion ::: The conclusion is properly drawn if which one of the following is assumed?\nImplies(And(anatomy_similarity(lions, tigers), hunting_behavior(lions) != hunting_behavior(tigers)), Not(Exists([s:species], anatomy_similarity(s, extinct_predators) == True))) ::: (A) If any two animal species with virtually indistinguishable skeletal anatomy exhibit quite different hunting behaviors, then it is never reasonable to infer, based solely on the hunting behavior of those species, that the two species have the same skeletal anatomy.\nExists([s1:species, s2:species], And(s1 != s2, anatomy_similarity(s1, s2) == True)) ::: (B) There have existed at least two species of extinct predatory dinosaurs that were so similar to each other that their skeletal anatomy is virtually indistinguishable.\nExists([s:species], anatomy_similarity(lions, s) == True) ::: (C) The skeletons of lions and tigers are at least somewhat similar in structure in certain key respects to the skeletons of at least some extinct predatory animals.\nImplies(Not(Exists([s:species], anatomy_similarity(s, extinct_predators) == True)), Not(Exists([s:species], hunting_behavior(s) == pack))) ::: (D) If skeletal anatomy alone is ever an inadequate basis for inferring a particular species' hunting behavior, then it is never reasonable to infer, based on skeletal anatomy alone, that a species of animals hunted in packs."
    ]
  },
  {
    "id": "test_253",
    "context": "An advertising agency must leave its office building. To save overhead costs, it is considering setting up a \"virtual office\" instead of moving to an adjacent office building. Employees will do their work on computers, as they do now, but will do so at home, sharing their work with colleagues by communicating text and designs to colleagues' computers through telephone lines, receiving typed comments, and then revising the work until it is satisfactory.",
    "question": "Which of the following, if true, indicates a disadvantage of the virtual office plan?",
    "options": [
      "The agency can move its computers and associated equipment into employees' homes without purchasing any new equipment or requiring employees to purchase such equipment.",
      "The employees of the advertising agency are accustomed to autonomy in monitoring their own progress and productivity.",
      "Expressions and gestures in face-to-face exchanges are an important aid to employees in gauging the viability of new ideas they have proposed.",
      "To reach the current office building and return home, employees spend an average of one and a half hours per day commuting, usually in heavy traffic."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([employee1, employee2, employee3, employee4, employee5])  # Representing employees of the agency\nwork_modes = EnumSort([office, virtual])\ncommunication_modes = EnumSort([face_to_face, text_based])\nwork_environment = Function([employees] -> [work_modes])\ncommunication = Function([employees] -> [communication_modes])\n\n# Constraints\nForAll([e:employees], work_environment(e) == virtual) ::: Employees will do their work at home in a virtual office\nForAll([e:employees], communication(e) == text_based) ::: Employees will communicate through text and designs via telephone lines\n\n# Options\nQuestion ::: Which of the following, if true, indicates a disadvantage of the virtual office plan?\nis_disadvantage(Exists([e:employees], communication(e) == face_to_face)) ::: (Expressions and gestures in face-to-face exchanges are an important aid to employees in gauging the viability of new ideas they have proposed.)"
    ]
  },
  {
    "id": "test_254",
    "context": "For years the beautiful Renaissance buildings in Palitito have been damaged by exhaust from the many tour buses that come to the city. There has been little parking space, so most buses have idled at the curb during each stop on their tour, and idling produces as much exhaust as driving. The city has now provided parking that accommodates a third of the tour buses, so damage to Palitito' s buildings from the buses' exhaust will diminish significantly.",
    "question": "Which of the following, if true, most strongly supports the argument?",
    "options": [
      "More tourists come to Palitito by tour bus than by any other single means of transportation.",
      "Tour buses typically spend less than one-quarter of the time they are in Palitito transporting passengers from one site to another.",
      "Some of the tour buses that are unable to find parking drive around Palitito while their passengers are visiting a site.",
      "The exhaust from Palitito's few automobiles is not a significant threat to Palitito's buildings."
    ],
    "raw_logic_programs": [
      "# Declarations\nbuses = EnumSort([tour_buses, other_transport])\nactivities = EnumSort([idling, driving, parked])\nexhaust = Function([buses, activities] -> [int])\n\n# Constraints\nexhaust(tour_buses, idling) == exhaust(tour_buses, driving) ::: idling produces as much exhaust as driving\nexhaust(tour_buses, parked) == 0 ::: parked buses do not produce exhaust\nexhaust(other_transport, _) == 0 ::: other means of transportation do not produce significant exhaust\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the argument?\nis_strong_support(Count([b:buses], exhaust(b, idling) > exhaust(b, parked))) ::: (A) More tourists come to Palitito by tour bus than by any other single means of transportation.\nis_strong_support(Count([b:buses], exhaust(b, driving) < exhaust(b, idling))) ::: (B) Tour buses typically spend less than one-quarter of the time they are in Palitito transporting passengers from one site to another.\nis_strong_support(Count([b:buses], exhaust(b, driving) > exhaust(b, parked))) ::: (C) Some of the tour buses that are unable to find parking drive around Palitito while their passengers are visiting a site.\nis_strong_support(Count([b:buses], exhaust(b, idling) > exhaust(other_transport, _))) ::: (D) The exhaust from Palitito's few automobiles is not a significant threat to Palitito's buildings."
    ]
  },
  {
    "id": "test_255",
    "context": "There are tests to detect some of the rare genetic flaws that increase the likelihood of certain diseases. If these tests are performed, then a person with a rare genetic flaw that is detected can receive the appropriate preventive treatment. Since it costs the health-care system less to prevent a disease than to treat it after it has occurred, widespread genetic screening will reduce the overall cost of health care.",
    "question": "The argument assumes which one of the following?",
    "options": [
      "Most diseases linked to rare genetic flaws are preventable.",
      "The resources allocated by hospitals to the treatment of persons with diseases linked to genetic flaws will increase once screening is widely available.",
      "The cost of treating patients who would, in the absence of screening, develop diseases that are linked to rare genetic flaws would be more than the combined costs of widespread screening and preventive treatment.",
      "Even if the genetic tests are performed, many people whose rare genetic flaws are detected will develop diseases linked to the flaws as a consequence of not receiving the appropriate preventive treatment."
    ],
    "raw_logic_programs": [
      "# Declarations\ndiseases = EnumSort([disease1, disease2, disease3])  # Placeholder for diseases linked to rare genetic flaws\nflaws = EnumSort([flaw1, flaw2, flaw3])  # Placeholder for rare genetic flaws\npeople = EnumSort([person1, person2, person3])  # Placeholder for people being tested\ntests = Function([people] -> [bool])  # Whether a person is tested for genetic flaws\nhas_flaw = Function([people, flaws] -> [bool])  # Whether a person has a specific genetic flaw\ndevelops_disease = Function([people, diseases] -> [bool])  # Whether a person develops a disease\nreceives_treatment = Function([people, diseases] -> [bool])  # Whether a person receives preventive treatment\n\n# Constraints\nForAll([p:people, f:flaws], Implies(tests(p), Implies(has_flaw(p, f), Exists([d:diseases], receives_treatment(p, d))))) ::: If these tests are performed, then a person with a rare genetic flaw that is detected can receive the appropriate preventive treatment\nForAll([p:people, d:diseases], Implies(receives_treatment(p, d), Not(develops_disease(p, d)))) ::: Preventive treatment prevents the development of diseases\n\n# Options\nQuestion ::: The argument assumes which one of the following?\nis_assumed(ForAll([d:diseases], Implies(Exists([f:flaws], linked_to(d, f)), preventable(d)))) ::: (A) Most diseases linked to rare genetic flaws are preventable.\nis_assumed(ForAll([h:hospitals], Implies(widespread_screening, increases_resources(h)))) ::: (B) The resources allocated by hospitals to the treatment of persons with diseases linked to genetic flaws will increase once screening is widely available.\nis_assumed(ForAll([p:people], Implies(Not(tests(p)), cost_of_treatment(p) > cost_of_screening_and_prevention(p)))) ::: (C) The cost of treating patients who would, in the absence of screening, develop diseases that are linked to rare genetic flaws would be more than the combined costs of widespread screening and preventive treatment.\nis_assumed(Exists([p:people, f:flaws], And(tests(p), has_flaw(p, f), Not(receives_treatment(p, d)), develops_disease(p, d)))) ::: (D) Even if the genetic tests are performed, many people whose rare genetic flaws are detected will develop diseases linked to the flaws as a consequence of not receiving the appropriate preventive treatment."
    ]
  },
  {
    "id": "test_256",
    "context": "Manufacturing plants in Arundia have recently been acquired in substantial numbers by investors from abroad. Arundian politicians are proposing legislative action to stop such investment, justifying the proposal by arguing that foreign investors, opportunistically exploiting a recent fall in the value of the Arundian currency, were able to buy Arundian assets at less than their true value.",
    "question": "Which of the following, if true, casts the most serious doubt on the adequacy of the Arundian politicians' justification for the proposed legislation?",
    "options": [
      "The Arundian government originally welcomed the fall in the value of the Arundian currency because the fall made Arundian exports more competitive on international markets.",
      "In Concordia, a country broadly similar to Arundia, the share of manufacturing assets that is foreign- controlled is 60 percent higher than it is in Arundia.",
      "Without the recent fall in the value of the Arundian currency, many of the Arundian assets bought by foreign investors would have been beyond the financial reach of those investors.",
      "The true value of an investment is determined by the value of the profits from it, and the low value of the Arundian currency has depressed the value of any profits earned by foreign investors from Arundian assets."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([A, B, C, D])\ncasts_doubt = Function([propositions] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description for this type of problem.\n\n# Options\nQuestion ::: Which of the following, if true, casts the most serious doubt on the adequacy of the Arundian politicians' justification for the proposed legislation?\ncasts_doubt(A) ::: (The Arundian government originally welcomed the fall in the value of the Arundian currency because the fall made Arundian exports more competitive on international markets.\ncasts_doubt(B) ::: (In Concordia, a country broadly similar to Arundia, the share of manufacturing assets that is foreign-controlled is 60 percent higher than it is in Arundia.\ncasts_doubt(C) ::: (Without the recent fall in the value of the Arundian currency, many of the Arundian assets bought by foreign investors would have been beyond the financial reach of those investors.\ncasts_doubt(D) ::: (The true value of an investment is determined by the value of the profits from it, and the low value of the Arundian currency has depressed the value of any profits earned by foreign investors from Arundian assets."
    ]
  },
  {
    "id": "test_257",
    "context": "Sahira: To make a living from their art, artists of great potential would have to produce work that would gain widespread popular acclaim, instead of their best work. That is why governments are justified in subsidizing artists. Rahima: Your argument for subsidizing art depends on claiming that to gain widespread popular acclaim, artists must produce something other than their best work; but this need not be true.",
    "question": "In her argument, Rahima",
    "options": [
      "argues that a standard that she claims Sahira uses is self-contradictory",
      "accepts Sahira's conclusion, but for reasons different from those given by Sahira",
      "disputes an implicit assumption of Sahira's",
      "presents independent support for Sahira's argument"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Sahira, Rahima])\nclaims = EnumSort([subsidizing_justified, popular_acclaim_not_best_work])\nsupports = Function([arguments, claims] -> [bool])\n\n# Constraints\nsupports(Sahira, subsidizing_justified) ::: Sahira argues that governments are justified in subsidizing artists\nsupports(Sahira, popular_acclaim_not_best_work) ::: Sahira claims that to gain widespread popular acclaim, artists must produce something other than their best work\nNot(supports(Rahima, popular_acclaim_not_best_work)) ::: Rahima disputes the claim that to gain widespread popular acclaim, artists must produce something other than their best work\n\n# Options\nQuestion ::: In her argument, Rahima\nis_valid(disputes_an_implicit_assumption(Sahira)) ::: (C) disputes an implicit assumption of Sahira's"
    ]
  },
  {
    "id": "test_258",
    "context": "A recent magazine editorial criticizes psychologists for not attempting to establish the order in which different areas of the brain are activated during a cognitive task such as imagining the face of a friend. However, the editorial is unfair because there is currently no technology that can detect the order of activation of brain areas.",
    "question": "Which one of the following most closely conforms to the principle to which the reasoning in the passage conforms?",
    "options": [
      "The food industry has been unfairly criticized for attempting to preserve food longer by treating it with radiation. If food remained edible for longer, the cost of food would decrease substantially.",
      "CEOs of large companies have been unfairly criticized for not always using their knowledge of economic theory to run their companies. Economic theory is sometimes irrelevant to making wise corporate decisions.",
      "Utility companies have been unfairly criticized for not using nuclear fusion to meet the nation's electricity needs. There is no way to harness fusion that could produce enough electricity to supply even one small town.",
      "Construction companies have been unfairly criticized for using fewer layers of heating insulation in new houses than the number of layers used in previous years. Recent technology has made insulation more efficient, so fewer layers are required."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([psychologists, food_industry, CEOs, utility_companies, construction_companies])\ncriticisms = EnumSort([order_of_activation, food_preservation, economic_theory, nuclear_fusion, insulation_layers])\nreasons = EnumSort([no_technology, cost_decrease, irrelevance, no_harness, efficiency])\n\n# Constraints\ncriticized_for(psychologists, order_of_activation) ::: psychologists criticized for not establishing order of brain activation\ncriticized_for(food_industry, food_preservation) ::: food industry criticized for food preservation methods\ncriticized_for(CEOs, economic_theory) ::: CEOs criticized for not using economic theory\ncriticized_for(utility_companies, nuclear_fusion) ::: utility companies criticized for not using nuclear fusion\ncriticized_for(construction_companies, insulation_layers) ::: construction companies criticized for using fewer insulation layers\n\nreason(psychologists, no_technology) ::: no technology to detect order of activation\nreason(food_industry, cost_decrease) ::: food preservation decreases cost\nreason(CEOs, irrelevance) ::: economic theory sometimes irrelevant\nreason(utility_companies, no_harness) ::: no way to harness fusion\nreason(construction_companies, efficiency) ::: insulation more efficient\n\n# Options\nQuestion ::: Which one of the following most closely conforms to the principle to which the reasoning in the passage conforms?\nis_conform(criticized_for(utility_companies, nuclear_fusion) & reason(utility_companies, no_harness)) ::: (C) Utility companies have been unfairly criticized for not using nuclear fusion to meet the nation's electricity needs. There is no way to harness fusion that could produce enough electricity to supply even one small town."
    ]
  },
  {
    "id": "test_259",
    "context": "On their way from their nest to a food source, ants of most species leave a trail of chemicals called pheromones. The ants use the scent of the pheromones to guide themselves between the food and their nest. All pheromones evaporate without a trace almost immediately when temperatures rise above 45 degrees Celsius (113 degrees Fahrenheit), as is typical during afternoons in places such as the Sahara Desert.",
    "question": "The statements above, if true, most strongly support which one of the following?",
    "options": [
      "If any ants do not use pheromones to navigate between food and their nest, those ants use a different substance that does not evaporate in temperatures above 45 degrees Celsius.",
      "If any Saharan ants forage for food in the afternoon, those ants forage for food less efficiently when temperatures are above 45 degrees Celsius than they do when temperatures are lower.",
      "Most ants forage for food either only in the morning or only during the night.",
      "If any ants live in the Sahara Desert and forage for food at no time but in the afternoon, those ants generally do not use pheromones to guide themselves between food and their nest."
    ],
    "raw_logic_programs": [
      "# Declarations\nants = EnumSort([species])\ntimes = EnumSort([morning, afternoon, night])\nsubstances = EnumSort([pheromones, other_substance])\ntemperatures = EnumSort([below_45, above_45])\nforage = Function([ants, times] -> [bool])\nuse_substance = Function([ants, substances] -> [bool])\ntemperature_effect = Function([substances, temperatures] -> [bool])\n\n# Constraints\nForAll([a:ants], And(forage(a, morning) == True, forage(a, night) == True, forage(a, afternoon) == True)) ::: Ants forage for food at different times\nForAll([a:ants], use_substance(a, pheromones) == True) ::: Ants use pheromones to navigate\nForAll([s:substances], temperature_effect(s, above_45) == (s == pheromones)) ::: Pheromones evaporate above 45 degrees Celsius\n\n# Options\nQuestion ::: The statements above, if true, most strongly support which one of the following?\nis_supported(ForAll([a:ants], Implies(Not(use_substance(a, pheromones)), use_substance(a, other_substance) == True))) ::: (A) If any ants do not use pheromones to navigate between food and their nest, those ants use a different substance that does not evaporate in temperatures above 45 degrees Celsius.\nis_supported(ForAll([a:ants], Implies(forage(a, afternoon) == True, temperature_effect(pheromones, above_45) == True))) ::: (B) If any Saharan ants forage for food in the afternoon, those ants forage for food less efficiently when temperatures are above 45 degrees Celsius than they do when temperatures are lower.\nis_supported(ForAll([a:ants], Or(forage(a, morning) == True, forage(a, night) == True))) ::: (C) Most ants forage for food either only in the morning or only during the night.\nis_supported(ForAll([a:ants], Implies(forage(a, afternoon) == True, Not(use_substance(a, pheromones))))) ::: (D) If any ants live in the Sahara Desert and forage for food at no time but in the afternoon, those ants generally do not use pheromones to guide themselves between food and their nest."
    ]
  },
  {
    "id": "test_260",
    "context": "Several studies have shown that hospitals are not all equally successful: patients are much more likely to die in some of them than in others. Since the hospitals in the studies had approximately equal per-patient funding, differences in the quality of care provided by hospital staff are probably responsible for the differences in mortality rates.",
    "question": "Which one of the following, if true, casts the most doubt on the conclusion drawn above?",
    "options": [
      "Approximately the same surgical procedures were performed in each of the hospitals covered in the studies.",
      "Patient populations vary substantially in average severity of illness from hospital to hospital.",
      "The average number of years that staff members stay on at a given job varies considerably from one hospital to another.",
      "The staff in some of the hospitals studied had earned more advanced degrees, on average, than the staff in the other hospitals."
    ],
    "raw_logic_programs": [
      "# Declarations\nhospitals = EnumSort([Hospital1, Hospital2, Hospital3, ...])\nmortality_rate = Function([hospitals] -> [float])\nfunding = Function([hospitals] -> [float])\nquality_of_care = Function([hospitals] -> [float])\nseverity_of_illness = Function([hospitals] -> [float])\n\n# Constraints\nForAll([h:hospitals], funding(h) == constant_funding) ::: The hospitals in the studies had approximately equal per-patient funding\nExists([h1:hospitals, h2:hospitals], mortality_rate(h1) != mortality_rate(h2)) ::: Patients are much more likely to die in some hospitals than in others\nForAll([h:hospitals], quality_of_care(h) == f(mortality_rate(h))) ::: Differences in the quality of care are probably responsible for differences in mortality rates\n\n# Options\nQuestion ::: Which one of the following, if true, casts the most doubt on the conclusion drawn above?\nis_doubtful(ForAll([h:hospitals], severity_of_illness(h) == constant_severity)) ::: (A) Approximately the same surgical procedures were performed in each of the hospitals covered in the studies.\nis_doubtful(Exists([h1:hospitals, h2:hospitals], severity_of_illness(h1) != severity_of_illness(h2))) ::: (B) Patient populations vary substantially in average severity of illness from hospital to hospital.\nis_doubtful(Exists([h1:hospitals, h2:hospitals], staff_tenure(h1) != staff_tenure(h2))) ::: (C) The average number of years that staff members stay on at a given job varies considerably from one hospital to another.\nis_doubtful(Exists([h1:hospitals, h2:hospitals], staff_education(h1) != staff_education(h2))) ::: (D) The staff in some of the hospitals studied had earned more advanced degrees, on average, than the staff in the other hospitals."
    ]
  },
  {
    "id": "test_261",
    "context": "Art critic: The Woerner Journalism Award for criticism was given to Nan Paulsen for her reviews of automobiles. This is inappropriate. The criticism award should be given for criticism, which Paulsen' s reviews clearly were not. After all, cars are utilitarian things, not works of art. And objects that are not works of art do not reveal important truths about the culture that produced them.",
    "question": "Which one of the following principles, if valid, most helps to justify the reasoning in the art critic's argument?",
    "options": [
      "Unless a review is written for the purpose of revealing important truths about the writer's culture, that review should not be considered to be criticism.",
      "Reviews of objects cannot appropriately be considered to be criticism unless the objects reveal important truths about the culture that produced them.",
      "The Woerner Journalism Award for criticism should not be given to a writer who portrays utilitarian objects as works of art.",
      "All writing that reveals important truths about a culture should be considered to be criticism."
    ],
    "raw_logic_programs": [
      "# Declarations\nobjects = EnumSort([automobiles, works_of_art])\nreviews = Function([objects] -> [bool])\nreveals_truths = Function([objects] -> [bool])\n\n# Constraints\nNot(reveals_truths(automobiles)) ::: Automobiles do not reveal important truths about the culture that produced them\nreviews(works_of_art) ::: Reviews of works of art are considered criticism\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the reasoning in the art critic's argument?\nis_valid(Implies(Not(reveals_truths(automobiles)), Not(reviews(automobiles)))) ::: (A) Reviews of objects cannot appropriately be considered to be criticism unless the objects reveal important truths about the culture that produced them.\nis_valid(Implies(Not(reveals_truths(automobiles)), Not(reviews(automobiles)))) ::: (B) Reviews of objects cannot appropriately be considered to be criticism unless the objects reveal important truths about the culture that produced them.\nis_valid(Implies(reviews(automobiles), Not(reveals_truths(automobiles)))) ::: (C) The Woerner Journalism Award for criticism should not be given to a writer who portrays utilitarian objects as works of art.\nis_valid(Implies(reveals_truths(works_of_art), reviews(works_of_art))) ::: (D) All writing that reveals important truths about a culture should be considered to be criticism."
    ]
  },
  {
    "id": "test_262",
    "context": "Of all the photographs taken of him at his wedding, there was one that John and his friends sharply disagreed about. His friends all said that this particular picture did not much resemble him, but John said that on the contrary it was the only photograph that did.",
    "question": "Which one of the following, if true about the photograph, most helps to explain John's disagreement with his friends?",
    "options": [
      "It was unique in showing John's face reflected in a mirror, the photographer having taken the photograph over John's shoulder.",
      "It was one of only a few taken at the wedding that showed no one but John.",
      "It, unlike the other photographs of John, showed him in the style of dress he and his friends usually wear rather than the formal clothes he wore at the ceremony.",
      "It was the only photograph taken of John at his wedding for which the photographer has used a flash."
    ],
    "raw_logic_programs": [
      "# Declarations\nphotographs = EnumSort([photo1, photo2, photo3, photo4])\nfeatures = EnumSort([mirror_reflection, only_john, usual_style, flash_used])\nresembles_john = Function([photographs] -> [bool])\nfeature_present = Function([photographs, features] -> [bool])\n\n# Constraints\nForAll([p:photographs], Or(feature_present(p, mirror_reflection), feature_present(p, only_john), feature_present(p, usual_style), feature_present(p, flash_used))) ::: Each photograph has at least one distinguishing feature\n\n# Options\nQuestion ::: Which one of the following, if true about the photograph, most helps to explain John's disagreement with his friends?\nis_explanation(And(feature_present(photo1, mirror_reflection), resembles_john(photo1))) ::: (A) It was unique in showing John's face reflected in a mirror, the photographer having taken the photograph over John's shoulder.\nis_explanation(And(feature_present(photo1, only_john), resembles_john(photo1))) ::: (B) It was one of only a few taken at the wedding that showed no one but John.\nis_explanation(And(feature_present(photo1, usual_style), resembles_john(photo1))) ::: (C) It, unlike the other photographs of John, showed him in the style of dress he and his friends usually wear rather than the formal clothes he wore at the ceremony.\nis_explanation(And(feature_present(photo1, flash_used), resembles_john(photo1))) ::: (D) It was the only photograph taken of John at his wedding for which the photographer has used a flash."
    ]
  },
  {
    "id": "test_263",
    "context": "Dentist: I recommend brushing one' s teeth after every meal to remove sugars that facilitate the growth of certain bacteria; these bacteria produce acid that dissolves minerals in tooth enamel, resulting in cavities. And when brushing is not practical, I recommend chewing gum -- even gum that contains sugar -- to prevent the formation of cavities.",
    "question": "Which one of the following, if true, would most help to reconcile the dentist's apparently paradoxical recommendations?",
    "options": [
      "Sugars can be on teeth for as long as 24 hours before the teeth-damaging bacteria whose growth they facilitate begin to proliferate.",
      "Chewing gum stimulates the production of saliva, which reduces acidity in the mouth and helps remineralize tooth enamel.",
      "A piece of chewing gum that contains sugar contains far less sugar than does the average meal.",
      "Chewing gum exercises and relaxes the jaw muscles and so contributes to the overall health of the oral tract."
    ],
    "raw_logic_programs": [
      "# Declarations\nrecommendations = EnumSort([brushing, chewing_gum])\neffects = EnumSort([remove_sugars, stimulate_saliva, less_sugar, exercise_jaw])\ncauses = EnumSort([bacteria_growth, acid_production, cavity_prevention])\nreconciles = Function([recommendations, effects] -> [causes])\n\n# Constraints\nreconciles(brushing, remove_sugars) == cavity_prevention ::: Brushing removes sugars that facilitate bacteria growth, preventing cavities\nreconciles(chewing_gum, stimulate_saliva) == cavity_prevention ::: Chewing gum stimulates saliva production, reducing acidity and preventing cavities\n\n# Options\nQuestion ::: Which one of the following, if true, would most help to reconcile the dentist's apparently paradoxical recommendations?\nis_helpful(reconciles(chewing_gum, stimulate_saliva)) ::: (B) Chewing gum stimulates the production of saliva, which reduces acidity in the mouth and helps remineralize tooth enamel\nis_helpful(reconciles(chewing_gum, less_sugar)) ::: (C) A piece of chewing gum that contains sugar contains far less sugar than does the average meal\nis_helpful(reconciles(chewing_gum, exercise_jaw)) ::: (D) Chewing gum exercises and relaxes the jaw muscles and so contributes to the overall health of the oral tract"
    ]
  },
  {
    "id": "test_264",
    "context": "That wall is supported by several joists. The only thing that can have caused the bulge that the wall now has is a broken joist. Ttherefore, at least one of the joists is broken.",
    "question": "Which one of the following arguments is most similar in logical features to the argument above?",
    "options": [
      "The first piece must have been the easiest, since it was the only piece in the entire concert in which the orchestra did not make many mistakes",
      "The emotion of the music is the only thing that can have caused the conductor to look so angry just then, since the orchestra was playing perfectly.",
      "At least one of the players in the orchestra must have made a mistake, since nothing else would have made the conductor grimace in the way she just did.",
      "One of the orchestra's players must be able to play the harp, since in one of the pieces they are playing at next week's concert the composer specified that a harp should be played."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\ncauses = EnumSort([broken_joist, easiest_piece, music_emotion, player_mistake, harp_player])\neffects = EnumSort([wall_bulge, few_mistakes, conductor_angry, conductor_grimace, harp_specified])\ncauses_effects = Function([causes] -> [effects])\n\n# Constraints\ncauses_effects(broken_joist) == wall_bulge ::: The only thing that can have caused the bulge that the wall now has is a broken joist\ncauses_effects(easiest_piece) == few_mistakes ::: The first piece must have been the easiest, since it was the only piece in the entire concert in which the orchestra did not make many mistakes\ncauses_effects(music_emotion) == conductor_angry ::: The emotion of the music is the only thing that can have caused the conductor to look so angry just then\ncauses_effects(player_mistake) == conductor_grimace ::: At least one of the players in the orchestra must have made a mistake, since nothing else would have made the conductor grimace in the way she just did\ncauses_effects(harp_player) == harp_specified ::: One of the orchestra's players must be able to play the harp, since in one of the pieces they are playing at next week's concert the composer specified that a harp should be played\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in logical features to the argument above?\nis_similar(causes_effects(broken_joist) == wall_bulge) ::: (A)\nis_similar(causes_effects(music_emotion) == conductor_angry) ::: (B)\nis_similar(causes_effects(player_mistake) == conductor_grimace) ::: (C)\nis_similar(causes_effects(harp_player) == harp_specified) ::: (D)"
    ]
  },
  {
    "id": "test_265",
    "context": "Judge: The case before me involves a plaintiff and three codefendants. The plaintiff has applied to the court for an order permitting her to question each defendant without their codefendants or their codefendants' legal counsel being present. Two of the codefendants, however, share the same legal counsel. The court will not order any codefendant to find new legal counsel. Ttherefore, the order requested by the plaintiff cannot be granted.",
    "question": "The conclusion of the judge's argument is most strongly supported if which one of the following principles is assumed to hold?",
    "options": [
      "A court cannot issue an order that forces legal counsel to disclose information revealed by a client.",
      "Defendants have the right to have their legal counsel present when being questioned.",
      "A defendant's legal counsel has the right to question the plaintiff.",
      "A plaintiff in a legal case should never be granted a right that is denied to a defendant."
    ],
    "raw_logic_programs": [
      "# Declarations\nplaintiff = EnumSort([Plaintiff])\ndefendants = EnumSort([Defendant1, Defendant2, Defendant3])\nlegal_counsel = Function([defendants] -> [bool])\nquestioning = Function([plaintiff, defendants] -> [bool])\n\n# Constraints\nExists([d1:defendants, d2:defendants], And(d1 != d2, legal_counsel(d1) == legal_counsel(d2))) ::: Two of the codefendants share the same legal counsel\nForAll([d:defendants], Not(legal_counsel(d) == False)) ::: The court will not order any codefendant to find new legal counsel\n\n# Options\nQuestion ::: The conclusion of the judge's argument is most strongly supported if which one of the following principles is assumed to hold?\nis_supported(ForAll([d:defendants], Not(questioning(Plaintiff, d)))) ::: (A court cannot issue an order that forces legal counsel to disclose information revealed by a client.\nis_supported(ForAll([d:defendants], Exists([c:legal_counsel], c == True))) ::: (Defendants have the right to have their legal counsel present when being questioned.\nis_supported(Exists([c:legal_counsel], c == True)) ::: (A defendant's legal counsel has the right to question the plaintiff.\nis_supported(ForAll([p:plaintiff], Exists([d:defendants], questioning(p, d) == False))) ::: (A plaintiff in a legal case should never be granted a right that is denied to a defendant."
    ]
  },
  {
    "id": "test_266",
    "context": "Of all the houses in the city' s historic district, the house that once belonged to the Tyler family is the most famous by far. Since the historic district is the most famous district in the city, the Tyler house must be the city' s most famous house.",
    "question": "The flawed reasoning in the argument above most closely parallels the flawed reasoning in which one of the following?",
    "options": [
      "Of all the fish stores in the harbor area, Miller's Fish Market has the most exotic selection of fish. Since there are many more fish stores in the harbor area than anywhere else in the city, Miller's Fish Market must have the most exotic selection of fish in the city.",
      "Of all the peaks in the coastal mountain range, Mount Williams is the tallest. Since the tallest peaks in the entire region are in the coastal mountain range, Mount Williams must be the region's tallest peak.",
      "Of all the flowers grown in the university's botanical garden, the Oakland roses are the most beautiful. Since the university's botanical garden is the most beautiful garden in the region, the Oakland roses grown in the garden must be the most beautiful flowers grown in the entire region.",
      "Susan Coleman is the oldest of the three children in her family. Since the three Coleman children are each older than any of the other children who live in their building, Susan Coleman must be the oldest child now living in the building."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([houses, districts, fish_stores, areas, peaks, ranges, flowers, gardens, children, families])\nattributes = EnumSort([famous, exotic, tall, beautiful, old])\nrelation = Function([entities, attributes] -> [bool])\n\n# Constraints\nrelation(houses, famous) ::: The house that once belonged to the Tyler family is the most famous by far\nrelation(districts, famous) ::: The historic district is the most famous district in the city\n\n# Options\nQuestion ::: The flawed reasoning in the argument above most closely parallels the flawed reasoning in which one of the following?\nis_parallel(And(relation(fish_stores, exotic), relation(areas, exotic))) ::: (A)\nis_parallel(And(relation(peaks, tall), relation(ranges, tall))) ::: (B)\nis_parallel(And(relation(flowers, beautiful), relation(gardens, beautiful))) ::: (C)\nis_parallel(And(relation(children, old), relation(families, old))) ::: (D)"
    ]
  },
  {
    "id": "test_267",
    "context": "All advertising attempts to tie positive attitudes with their product. Companies experiencing a backlash would be wise to invest in a large marketing campaign. Advertising is especially important if potential customers have neutral or negative attitudes toward the product.",
    "question": "What is the argument's conclusion?",
    "options": [
      "Advertising is extremely important.",
      "Advertising is especially important if potential customers have neutral or negative attitudes toward the product.",
      "Companies experiencing a backlash would be wise to invest in a large marketing campaign.",
      "Advertising is extremely manipulative."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([advertising_important, advertising_important_neutral_negative, invest_large_campaign, advertising_manipulative])\nconclusion = Function([statements] -> [bool])\n\n# Constraints\nconclusion(advertising_important) ::: Advertising is extremely important.\nconclusion(advertising_important_neutral_negative) ::: Advertising is especially important if potential customers have neutral or negative attitudes toward the product.\nconclusion(invest_large_campaign) ::: Companies experiencing a backlash would be wise to invest in a large marketing campaign.\nconclusion(advertising_manipulative) ::: Advertising is extremely manipulative.\n\n# Options\nQuestion ::: What is the argument's conclusion?\nis_conclusion(conclusion(advertising_important)) ::: (Advertising is extremely important.\nis_conclusion(conclusion(advertising_important_neutral_negative)) ::: (Advertising is especially important if potential customers have neutral or negative attitudes toward the product.\nis_conclusion(conclusion(invest_large_campaign)) ::: (Companies experiencing a backlash would be wise to invest in a large marketing campaign.\nis_conclusion(conclusion(advertising_manipulative)) ::: (Advertising is extremely manipulative."
    ]
  },
  {
    "id": "test_268",
    "context": "In order to avoid causing inadvertent harm to their neighbors, householders ought to evade politely or refuse to answer a stranger' s questions regarding their neighbors, unless the stranger provides some proof of being a government official pursuing official inquiries, in which case the questions should be answered truthfully.",
    "question": "In which one of the following situations does Mary act in accordance with the principle above?",
    "options": [
      "A man claiming to be a private detective asked Mary whether her neighbor ever entertained guests overnight. Mary, though unsure of the facts, said that her neighbor never did so, and later told the neighbor about the suspicious questioner.",
      "A woman claiming to be an insurance adjuster asked Mary whether her neighbor owned any vehicles other than the ones currently parked in the neighbor's driveway. Mary answered that the adjuster would have to ask her neighbor as she herself did not really know.",
      "When asked by a confused-looking couple whether the house next door belonged to a Mr. Brown, who, they said, was expecting them for dinner, Mary answered that it did not, and pointed out Mr. Brown's house.",
      "Immigration officers, showing valid identification and asserting that they were on official business, asked Mary whether a neighbor who belonged to a local church that offered sanctuary to refugees lacking visas had sheltered any such refugees. Mary gave an evasive answer and warned her neighbor."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Mary])\nstrangers = EnumSort([private_detective, insurance_adjuster, confused_couple, immigration_officers])\nneighbors = EnumSort([neighbor])\nquestions = EnumSort([entertain_guests, own_vehicles, house_owner, shelter_refugees])\nresponses = EnumSort([evade, refuse, answer_truthfully, answer_falsely])\nofficial_status = Function([strangers] -> [bool])\nresponse_given = Function([people, strangers, questions] -> [responses])\n\n# Constraints\nForAll([s:strangers, q:questions], Implies(Not(official_status(s)), Or(response_given(Mary, s, q) == evade, response_given(Mary, s, q) == refuse))) ::: Householders should evade or refuse to answer unless the stranger is a government official\nForAll([s:strangers, q:questions], Implies(official_status(s), response_given(Mary, s, q) == answer_truthfully)) ::: If the stranger is a government official, answer truthfully\n\n# Options\nQuestion ::: In which one of the following situations does Mary act in accordance with the principle above?\nis_accordance(response_given(Mary, private_detective, entertain_guests) == answer_falsely) ::: (A)\nis_accordance(response_given(Mary, insurance_adjuster, own_vehicles) == refuse) ::: (B)\nis_accordance(response_given(Mary, confused_couple, house_owner) == answer_falsely) ::: (C)\nis_accordance(response_given(Mary, immigration_officers, shelter_refugees) == evade) ::: (D)"
    ]
  },
  {
    "id": "test_269",
    "context": "A conservation group in the United States is trying to change the long-standing image of bats as frightening creatures. The group contends that bats are feared and persecuted solely because they are shy animals that are active only at night.",
    "question": "Which of the following, if true, would cast the most serious doubt on the accuracy of the group's contention?",
    "options": [
      "Bats are regarded as frightening creatures not only in the United States but also in Europe, Africa, and South America.",
      "Raccoons and owls are shy and active only at night, yet they are not generally feared and persecuted.",
      "People know more about the behavior of other greatly feared animal species, such as lions, alligators, and snakes, than they do about the behavior of bats.",
      "Bats are the chief consumers of nocturnal insects and thus can help make their hunting territory more pleasant for humans."
    ],
    "raw_logic_programs": [
      "# Declarations\nanimals = EnumSort([bats, raccoons, owls, lions, alligators, snakes])\nregions = EnumSort([United_States, Europe, Africa, South_America])\nattributes = EnumSort([shy, nocturnal, feared, persecuted])\nbehavior = Function([animals, attributes] -> [bool])\nfeared_in_region = Function([animals, regions] -> [bool])\n\n# Constraints\nForAll([a:animals], And(behavior(a, shy), behavior(a, nocturnal)) -> behavior(a, feared) & behavior(a, persecuted)) ::: The group contends that bats are feared and persecuted solely because they are shy animals that are active only at night\n\n# Options\nQuestion ::: Which of the following, if true, would cast the most serious doubt on the accuracy of the group's contention?\nis_doubtful(And(feared_in_region(bats, Europe), feared_in_region(bats, Africa), feared_in_region(bats, South_America))) ::: (A) Bats are regarded as frightening creatures not only in the United States but also in Europe, Africa, and South America\nis_doubtful(And(behavior(raccoons, shy), behavior(raccoons, nocturnal), Not(behavior(raccoons, feared)), Not(behavior(raccoons, persecuted)), behavior(owls, shy), behavior(owls, nocturnal), Not(behavior(owls, feared)), Not(behavior(owls, persecuted)))) ::: (B) Raccoons and owls are shy and active only at night, yet they are not generally feared and persecuted\nis_doubtful(Exists([a:animals], And(behavior(a, feared), Not(behavior(a, shy)), Not(behavior(a, nocturnal))))) ::: (C) People know more about the behavior of other greatly feared animal species, such as lions, alligators, and snakes, than they do about the behavior of bats\nis_doubtful(False) ::: (D) Bats are the chief consumers of nocturnal insects and thus can help make their hunting territory more pleasant for humans"
    ]
  },
  {
    "id": "test_270",
    "context": "Because addictive drugs are physically harmful, their use by athletes is never justified. Purists, however, claim that taking massive doses of even such nonaddictive drugs as aspirin and vitamins before competing should also be prohibited because they are unnatural. This is ridiculous; almost everything in sports is unnatural, from high-tech running shoes to padded boxing gloves to highly-specialized bodybuilding machines. Yet, none of these is prohibited on the basis of its being unnatural. Furthermore, we should be attending to far more serious problems that plague modern sports and result in unnecessary deaths and injuries. Ttherefore, the use of nonaddictive drugs by athletes should not be prohibited.",
    "question": "Which one of the following statements, if true, would be the strongest challenge to the author's conclusion?",
    "options": [
      "Addictive drugs are just as unnatural as nonaddictive drugs like aspirin and vitamins.",
      "There would be more unnecessary deaths and injuries if it were not for running shoes, boxing gloves, and bodybuilding machines.",
      "Taking massive doses of aspirin or vitamins can be physically harmful.",
      "Massive doses of aspirin and vitamins enhance athletic performance."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrugs = EnumSort([addictive, nonaddictive])\neffects = EnumSort([physically_harmful, unnatural, performance_enhancing])\nuse_by_athletes = Function([drugs] -> [bool])\neffects_of_drugs = Function([drugs] -> [effects])\n\n# Constraints\neffects_of_drugs(addictive) == physically_harmful ::: Addictive drugs are physically harmful\nNot(use_by_athletes(addictive)) ::: Use of addictive drugs by athletes is never justified\neffects_of_drugs(nonaddictive) == unnatural ::: Nonaddictive drugs like aspirin and vitamins are considered unnatural by purists\n\n# Options\nQuestion ::: Which one of the following statements, if true, would be the strongest challenge to the author's conclusion?\nis_strong_challenge(effects_of_drugs(addictive) == unnatural) ::: (Addictive drugs are just as unnatural as nonaddictive drugs like aspirin and vitamins.)\nis_strong_challenge(Not(effects_of_drugs(nonaddictive) == performance_enhancing)) ::: (There would be more unnecessary deaths and injuries if it were not for running shoes, boxing gloves, and bodybuilding machines.)\nis_strong_challenge(effects_of_drugs(nonaddictive) == physically_harmful) ::: (Taking massive doses of aspirin or vitamins can be physically harmful.)\nis_strong_challenge(effects_of_drugs(nonaddictive) == performance_enhancing) ::: (Massive doses of aspirin and vitamins enhance athletic performance.)"
    ]
  },
  {
    "id": "test_271",
    "context": "Smoking in bed has long been the main cause of home fires. Despite a significant decline in cigarette smoking in the last two decades, however, there has been no comparable decline in the number of people killed in home fires.",
    "question": "Each one of the following statements, if true over the last two decades, helps to resolve the apparent discrepancy above EXCEPT:",
    "options": [
      "Compared to other types of home fires, home fires caused by smoking in bed usually cause relatively little damage before they are extinguished.",
      "Home fires caused by smoking in bed often break out after the home's occupants have fallen asleep.",
      "Smokers who smoke in bed tend to be heavy smokers who are less likely to quit smoking than are smokers who do not smoke in bed.",
      "Population densities have increased, with the result that one home fire can cause more deaths than in previous decades."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nhelps_resolve = Function([statements] -> [bool])\n\n# Constraints\nhelps_resolve(A) ::: Compared to other types of home fires, home fires caused by smoking in bed usually cause relatively little damage before they are extinguished\nhelps_resolve(B) ::: Home fires caused by smoking in bed often break out after the home's occupants have fallen asleep\nhelps_resolve(C) ::: Smokers who smoke in bed tend to be heavy smokers who are less likely to quit smoking than are smokers who do not smoke in bed\nhelps_resolve(D) ::: Population densities have increased, with the result that one home fire can cause more deaths than in previous decades\n\n# Options\nQuestion ::: Each one of the following statements, if true over the last two decades, helps to resolve the apparent discrepancy above EXCEPT:\nis_exception(helps_resolve(A)) ::: (A)\nis_exception(helps_resolve(B)) ::: (B)\nis_exception(helps_resolve(C)) ::: (C)\nis_exception(helps_resolve(D)) ::: (D)"
    ]
  },
  {
    "id": "test_272",
    "context": "It is widely believed that by age 80, perception and memory are each significantly reduced from their functioning levels at age 30. However, a recent study showed no difference in the abilities of 80-year-olds and 30-year-olds to play a card game devised to test perception and memory. Ttherefore, the belief that perception and memory are significantly reduced by age 80 is false.",
    "question": "The reasoning above is most vulnerable to criticism on the grounds that it fails to consider the possibility that",
    "options": [
      "playing the study's card game perfectly requires fairly low levels of perception and memory",
      "perception and memory are interrelated in ways of which we are not currently aware",
      "the belief that 80-year-olds' perception and memory are reduced results from prejudice against senior citizens",
      "card games are among the most difficult cognitive tasks one can attempt to perform"
    ],
    "raw_logic_programs": [
      "# Declarations\nages = EnumSort([age_30, age_80])\nabilities = EnumSort([perception, memory])\ncard_game = Function([ages] -> [bool])\nbelief = Function([ages, abilities] -> [bool])\n\n# Constraints\nForAll([a:ages], belief(a, perception) == (a == age_30)) ::: It is widely believed that by age 80, perception is significantly reduced from its functioning level at age 30\nForAll([a:ages], belief(a, memory) == (a == age_30)) ::: It is widely believed that by age 80, memory is significantly reduced from its functioning level at age 30\nAnd(card_game(age_30), card_game(age_80)) ::: A recent study showed no difference in the abilities of 80-year-olds and 30-year-olds to play a card game devised to test perception and memory\n\n# Options\nQuestion ::: The reasoning above is most vulnerable to criticism on the grounds that it fails to consider the possibility that\nis_vulnerable(Exists([a:ages], card_game(a) == (belief(a, perception) == False))) ::: (A) playing the study's card game perfectly requires fairly low levels of perception and memory\nis_vulnerable(Exists([a:ages], belief(a, perception) == belief(a, memory))) ::: (B) perception and memory are interrelated in ways of which we are not currently aware\nis_vulnerable(Exists([a:ages], belief(a, perception) == False && belief(a, memory) == False)) ::: (C) the belief that 80-year-olds' perception and memory are reduced results from prejudice against senior citizens\nis_vulnerable(Exists([a:ages], card_game(a) == False)) ::: (D) card games are among the most difficult cognitive tasks one can attempt to perform"
    ]
  },
  {
    "id": "test_273",
    "context": "Dana intentionally watered the plant every other day. But since the plant was a succulent, and needed dry soil, the frequent watering killed the plant. Ttherefore Dana intentionally killed the plant.",
    "question": "Which one of the following arguments exhibits a flawed pattern of reasoning most similar to the flawed pattern of reasoning exhibited in the argument above?",
    "options": [
      "Jack stole $10 from Kelly and bet it on a race. The bet returned $100 to Jack. Ttherefore Jack really stole $100 from Kelly.",
      "Celeste knows that coffee is grown in the mountains in Peru and that Peru is in South America. Ttherefore Celeste should know that coffee is grown in South America.",
      "The power plant raised the water temperature, and whatever raised the water temperature is responsible for the decrease in fish. Ttherefore the power plant is responsible for the decrease in fish.",
      "The restaurant owner decided to take an item off her restaurant's menu. This decision disappointed Jerry because that item was his favorite dish. Ttherefore the restaurant owner decided to disappoint Jerry."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([watered, killed])\nintentions = Function([actions] -> [bool])\n\n# Constraints\nintentions(watered) == True ::: Dana intentionally watered the plant every other day\nintentions(killed) == False ::: Dana did not intentionally kill the plant\n\n# Options\nQuestion ::: Which one of the following arguments exhibits a flawed pattern of reasoning most similar to the flawed pattern of reasoning exhibited in the argument above?\nis_similar_flawed_pattern(\n    And(intentions(stole_10) == True, intentions(stole_100) == False)\n) ::: (A) Jack stole $10 from Kelly and bet it on a race. The bet returned $100 to Jack. Therefore Jack really stole $100 from Kelly.\nis_similar_flawed_pattern(\n    And(intentions(knows_coffee) == True, intentions(knows_south_america) == False)\n) ::: (B) Celeste knows that coffee is grown in the mountains in Peru and that Peru is in South America. Therefore Celeste should know that coffee is grown in South America.\nis_similar_flawed_pattern(\n    And(intentions(raised_temp) == True, intentions(decrease_fish) == False)\n) ::: (C) The power plant raised the water temperature, and whatever raised the water temperature is responsible for the decrease in fish. Therefore the power plant is responsible for the decrease in fish.\nis_similar_flawed_pattern(\n    And(intentions(take_off_menu) == True, intentions(disappoint_jerry) == False)\n) ::: (D) The restaurant owner decided to take an item off her restaurant's menu. This decision disappointed Jerry because that item was his favorite dish. Therefore the restaurant owner decided to disappoint Jerry."
    ]
  },
  {
    "id": "test_274",
    "context": "Insurance that was to become effective at 9 A. M. on a certain date was taken out on the life of a flight attendant. He died on that date at 10 A. M. local time, which was two hours before 9 A. M. in the time zone where the policy had been purchased. The insurance company contended that the policy had not become effective; a representative of the flight attendant' s beneficiary, his mother, countered by arguing that the policy amount should be paid because the attendant had been his mother' s sole support, and she was ill.",
    "question": "The representative's argument is flawed as a counter to the insurance company's contention because",
    "options": [
      "it makes an unwarranted distinction between family obligations and business obligations",
      "a cause and its effect are mistaken for each other",
      "it appeals to the emotion of pity rather than addressing the issue raised",
      "it substitutes an attack on a person for the giving of reasons"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([insurance_company, representative])\nissues = EnumSort([policy_effectiveness, emotional_appeal, family_obligations, business_obligations])\ncontentions = Function([arguments] -> [issues])\n\n# Constraints\ncontentions(insurance_company) == policy_effectiveness ::: The insurance company contended that the policy had not become effective\ncontentions(representative) == emotional_appeal ::: The representative argued that the policy amount should be paid because the attendant had been his mother’s sole support, and she was ill\n\n# Options\nQuestion ::: The representative's argument is flawed as a counter to the insurance company's contention because\nis_flawed(contentions(representative) == family_obligations) ::: (it makes an unwarranted distinction between family obligations and business obligations)\nis_flawed(contentions(representative) == policy_effectiveness) ::: (a cause and its effect are mistaken for each other)\nis_flawed(contentions(representative) == emotional_appeal) ::: (it appeals to the emotion of pity rather than addressing the issue raised)\nis_flawed(contentions(representative) == business_obligations) ::: (it substitutes an attack on a person for the giving of reasons)"
    ]
  },
  {
    "id": "test_275",
    "context": "Principle: If a food product contains ingredients whose presence most consumers of that product would be upset to discover in it, then the food should be labeled as containing those ingredients. Application: Crackly Crisps need not be labeled as containing genetically engineered ingredients, since most consumers of Crackly Crisps would not care if they discovered that fact.",
    "question": "The application of the principle is most vulnerable to criticism on the grounds that it",
    "options": [
      "fails to address the possibility that consumers of a specific food may not be representative of consumers of food in general",
      "confuses a claim that under certain conditions a certain action should be taken with a claim that the action need not be taken in the absence of those conditions",
      "fails to address the possibility that the genetically engineered ingredients in Crackly Crisps may have been proven safe for human consumption",
      "implicitly makes use of a value judgment that is incompatible with the principle being applied"
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciple = Function([food_product, ingredients] -> [bool])\napplication = Function([food_product, ingredients] -> [bool])\nconsumers_upset = Function([food_product, ingredients] -> [bool])\nlabeled = Function([food_product, ingredients] -> [bool])\n\n# Constraints\nForAll([fp, ing], Implies(consumers_upset(fp, ing), labeled(fp, ing))) ::: If a food product contains ingredients whose presence most consumers of that product would be upset to discover in it, then the food should be labeled as containing those ingredients\nNot(consumers_upset(Crackly_Crisps, genetically_engineered_ingredients)) ::: Most consumers of Crackly Crisps would not care if they discovered that fact\n\n# Options\nQuestion ::: The application of the principle is most vulnerable to criticism on the grounds that it\nis_vulnerable(fails_to_address_representative(consumers_of_specific_food, consumers_of_food_in_general)) ::: (A)\nis_vulnerable(confuses_claim(conditions_action, absence_conditions_action)) ::: (B)\nis_vulnerable(fails_to_address_proven_safe(genetically_engineered_ingredients, Crackly_Crisps)) ::: (C)\nis_vulnerable(incompatible_value_judgment(principle, application)) ::: (D)"
    ]
  },
  {
    "id": "test_276",
    "context": "Last year a record number of new manufacturing jobs were created. Will this year bring another record? Well, a new manufacturing job is created either within an existing company or by the start-up of a new company. Within existing firms, new jobs have been created this year at well below last year' s record pace. At the same time, there is considerable evidence that the number of new companies starting up will be no higher this year than it was last year, and surely <b> the new companies starting up this year will create no more jobs per company than did last year' s start-ups </b>. Clearly, it can be concluded that <b> the number of new jobs created this year will fall short of last year' s record </b>.",
    "question": "In the argument given, the two portions in boldface play which of the following roles?",
    "options": [
      "The first is a prediction that, if accurate, would provide support for the main conclusion of the argument; the second is a conclusion drawn in order to support that main conclusion.",
      "The first is a claim that has been advanced in support of a position that the argument opposes; the second is a claim advanced in support of the main conclusion of the argument.",
      "The first is a prediction that, if accurate, would provide support for the main conclusion of the argument; the second is that main conclusion.",
      "The first is an objection that the argument rejects; the second presents a conclusion that could be drawn if that objection were allowed to stand."
    ],
    "raw_logic_programs": [
      "# Declarations\nroles = EnumSort([prediction, claim, conclusion, objection])\nportions = EnumSort([first, second])\nplays_role = Function([portions] -> [roles])\n\n# Constraints\nplays_role(first) == prediction ::: The first is a prediction\nplays_role(second) == conclusion ::: The second is a conclusion\n\n# Options\nQuestion ::: In the argument given, the two portions in boldface play which of the following roles?\nis_correct(And(plays_role(first) == prediction, plays_role(second) == conclusion)) ::: (The first is a prediction that, if accurate, would provide support for the main conclusion of the argument; the second is that main conclusion.)\nis_correct(And(plays_role(first) == claim, plays_role(second) == claim)) ::: (The first is a claim that has been advanced in support of a position that the argument opposes; the second is a claim advanced in support of the main conclusion of the argument.)\nis_correct(And(plays_role(first) == prediction, plays_role(second) == conclusion)) ::: (The first is a prediction that, if accurate, would provide support for the main conclusion of the argument; the second is that main conclusion.)\nis_correct(And(plays_role(first) == objection, plays_role(second) == conclusion)) ::: (The first is an objection that the argument rejects; the second presents a conclusion that could be drawn if that objection were allowed to stand.)"
    ]
  },
  {
    "id": "test_277",
    "context": "Playing eighteenth-century music on the instruments of that period provides valuable information about how the music originally sounded. Eighteenth-century instruments cannot be played without being restored, however, and restoring such an instrument destroys all of the information that researchers could obtain from it about eighteenth-century instrument-making techniques.",
    "question": "If the statements above are true, which of the following must be true on the basis of them?",
    "options": [
      "Eighteenth-century instruments that have been restored can provide information only about how eighteenth-century music originally sounded",
      "An eighteenth-century instrument cannot serve as a source of new information about eighteenth-century instrument-making techniques once it can be played",
      "Eighteenth-century instruments are the only source of information about the instrument-making techniques of that period.",
      "An eighteenth-century instrument that has not been restored can provide more information than can one that has been restored."
    ],
    "raw_logic_programs": [
      "# Declarations\ninstruments = EnumSort([restored, not_restored])\ninformation = EnumSort([music_sound, instrument_making])\n\n# Constraints\nForAll([i:instruments], Implies(i == restored, information == music_sound)) ::: Restored instruments provide information only about how music originally sounded\nForAll([i:instruments], Implies(i == not_restored, information == instrument_making)) ::: Non-restored instruments provide information about instrument-making techniques\n\n# Options\nQuestion ::: If the statements above are true, which of the following must be true on the basis of them?\nis_must_true(Implies(restored, information == music_sound)) ::: (Eighteenth-century instruments that have been restored can provide information only about how eighteenth-century music originally sounded\nis_must_true(Implies(restored, Not(information == instrument_making))) ::: (An eighteenth-century instrument cannot serve as a source of new information about eighteenth-century instrument-making techniques once it can be played\nis_must_true(ForAll([i:instruments], Implies(i == not_restored, information == instrument_making))) ::: (Eighteenth-century instruments are the only source of information about the instrument-making techniques of that period.\nis_must_true(Implies(not_restored, information == instrument_making)) ::: (An eighteenth-century instrument that has not been restored can provide more information than can one that has been restored."
    ]
  },
  {
    "id": "test_278",
    "context": "Economists have long explained the rapid economic growth in state P by pointing to state P' s tourism industry, which attracts visitors to state P' s sandy beaches and picturesque state parks. However, recent economic studies on state P show that the money brought in by tourists is far less than economists had originally thought and is not nearly enough to adequately explain the rapid economic growth of state P.",
    "question": "If the statements above are true, they provide the most support for which of the following statements?",
    "options": [
      "Other industries in state P bring more money into the state than the tourism industry.",
      "The rapid economic growth in state P is not as great as economists originally thought.",
      "The tourism industry is not the only cause of state P's rapid economic growth.",
      "State P's sandy beaches and picturesque state parks are not state P's only tourist attractions."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([tourism_industry_not_only_cause, other_industries_bring_more_money, growth_not_as_great, beaches_parks_not_only_attractions])\n\n# Constraints\ntourism_industry_revenue < expected_revenue ::: the money brought in by tourists is far less than economists had originally thought\ntourism_industry_revenue < required_revenue_for_growth ::: the money brought in by tourists is not nearly enough to adequately explain the rapid economic growth\n\n# Options\nQuestion ::: If the statements above are true, they provide the most support for which of the following statements?\nis_supported(tourism_industry_not_only_cause) ::: (The tourism industry is not the only cause of state P's rapid economic growth.\nis_supported(other_industries_bring_more_money) ::: (Other industries in state P bring more money into the state than the tourism industry.\nis_supported(growth_not_as_great) ::: (The rapid economic growth in state P is not as great as economists originally thought.\nis_supported(beaches_parks_not_only_attractions) ::: (State P's sandy beaches and picturesque state parks are not state P's only tourist attractions."
    ]
  },
  {
    "id": "test_279",
    "context": "The qwerty keyboard became the standard keyboard with the invention of the typewriter and remains the standard for typing devices today. If an alternative known as the Dvorak keyboard were today' s standard, typists would type significantly faster. Nevertheless, it is not practical to switch to the Dvorak keyboard because the cost to society of switching, in terms of time, money, and frustration, would be greater than the benefits that would be ultimately gained from faster typing.",
    "question": "The example above best illustrates which one of the following propositions?",
    "options": [
      "The fact that a standard is already in wide use can be a crucial factor in making it a more practical choice than an alternative.",
      "People often remain with an entrenched standard rather than move to a more efficient alternative simply because they dislike change.",
      "People usually settle on a standard because that standard is more efficient than any alternatives.",
      "The emotional cost associated with change is a factor that sometimes outweighs financial considerations."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([\n    \"The fact that a standard is already in wide use can be a crucial factor in making it a more practical choice than an alternative.\",\n    \"People often remain with an entrenched standard rather than move to a more efficient alternative simply because they dislike change.\",\n    \"People usually settle on a standard because that standard is more efficient than any alternatives.\",\n    \"The emotional cost associated with change is a factor that sometimes outweighs financial considerations.\"\n])\n\n# Constraints\ncurrent_standard = \"qwerty\"\nalternative_standard = \"Dvorak\"\nfaster_typing = True\nswitching_costs = [\"time\", \"money\", \"frustration\"]\nbenefits = [\"faster typing\"]\n\n# Options\nQuestion ::: The example above best illustrates which one of the following propositions?\nis_best_illustration(propositions[0]) ::: (A)\nis_best_illustration(propositions[1]) ::: (B)\nis_best_illustration(propositions[2]) ::: (C)\nis_best_illustration(propositions[3]) ::: (D)"
    ]
  },
  {
    "id": "test_280",
    "context": "Recent epidemiological studies report that Country X has the lowest incidence of disease P of any country. Nevertheless, residents of Country X who are reported to have contracted disease P are much more likely to die from it than are residents of any other country.",
    "question": "Which one of the following, if true, most helps to resolve the apparent discrepancy described above?",
    "options": [
      "Most of the fatal cases of disease P found in Country X involve people who do not reside in Country X.",
      "There are several forms of disease P, some of which are more contagious than others.",
      "Because of its climate, more potentially fatal illnesses occur in Country X than in many other countries.",
      "In Country X, diagnosis of disease P seldom occurs except in the most severe cases of the disease."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([CountryX, OtherCountries])\ndisease_status = EnumSort([contracted, not_contracted])\noutcome = EnumSort([survived, died])\ncases = Function([countries, disease_status] -> [int])\nfatal_cases = Function([countries] -> [int])\ndiagnosis_severity = Function([countries] -> [bool])\n\n# Constraints\ncases(CountryX, contracted) < cases(OtherCountries, contracted) ::: Country X has the lowest incidence of disease P\nfatal_cases(CountryX) > fatal_cases(OtherCountries) ::: Residents of Country X who contract disease P are more likely to die\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent discrepancy described above?\nis_resolving(Most_of_fatal_cases_involve_non_residents(CountryX)) ::: (A)\nis_resolving(Several_forms_of_disease_P_varying_contagiousness()) ::: (B)\nis_resolving(More_potentially_fatal_illnesses_occur_in_CountryX()) ::: (C)\nis_resolving(Diagnosis_in_CountryX_occurs_in_severe_cases()) ::: (D)"
    ]
  },
  {
    "id": "test_281",
    "context": "It might seem that an airline could increase profits by reducing airfares on all its flights in order to encourage discretionary travel and thus fill planes. Offers of across-the-board discount fares have, indeed, resulted in the sale of large numbers of reduced-price tickets. Nevertheless such offers have, in the past, actually cut the airline' s profits.",
    "question": "Which one of the following, if true, most helps to resolve the apparent discrepancy described above?",
    "options": [
      "Fares for trips between a large city and a small city are higher than those for trips between two large cities even when the distances involved are the same.",
      "Across-the-board discounts in fares tend to decrease revenues on flights that are normally filled, but they fail to attract passengers to unpopular flights.",
      "Fewer than 10 percent of all air travelers make no attempt to seek out discount fares.",
      "It is difficult to devise an advertising campaign that makes the public aware of across-the-board discount fares while fully explaining the restrictions applied to those discount fares."
    ],
    "raw_logic_programs": [
      "# Declarations\nflights = EnumSort([filled, unpopular])\nfares = EnumSort([reduced, normal])\nprofits = Function([flights, fares] -> [int])\n\n# Constraints\nForAll([f:flights], profits(f, reduced) < profits(f, normal)) ::: Offers of across-the-board discount fares have, in the past, actually cut the airline's profits\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent discrepancy described above?\nis_resolving(And(profits(filled, reduced) < profits(filled, normal), profits(unpopular, reduced) == profits(unpopular, normal))) ::: (A) Across-the-board discounts in fares tend to decrease revenues on flights that are normally filled, but they fail to attract passengers to unpopular flights\nis_resolving(False) ::: (B) Fares for trips between a large city and a small city are higher than those for trips between two large cities even when the distances involved are the same\nis_resolving(False) ::: (C) Fewer than 10 percent of all air travelers make no attempt to seek out discount fares\nis_resolving(False) ::: (D) It is difficult to devise an advertising campaign that makes the public aware of across-the-board discount fares while fully explaining the restrictions applied to those discount fares"
    ]
  },
  {
    "id": "test_282",
    "context": "Scientist: Rattlesnakes prey on young California ground squirrels. Protective adult squirrels harass a threatening rattlesnake by puffing up their tails and wagging them. New results show that the squirrel' s tail also heats up when harassing a rattlesnake. Since rattlesnakes have an infrared sensing organ that detects body heat, the heating up of the squirrel' s tail probably plays a role in repelling rattlesnakes.",
    "question": "Which one of the following, if true, most helps to support the scientist's hypothesis?",
    "options": [
      "Rattlesnakes react much more defensively when confronted with a squirrel whose tail is heated up than when confronted with one whose tail is not.",
      "Squirrels puff up their tails and wag them when they attempt to attract the attention of other squirrels.",
      "Mammals such as the California ground squirrel have no organ for sensing infrared energy.",
      "Rattlesnakes do not have the ability to increase the temperature of their tails."
    ],
    "raw_logic_programs": [
      "# Declarations\nsquirrels = EnumSort([young, adult])\nactions = EnumSort([puff_up_tail, wag_tail, heat_up_tail])\nrattlesnakes = EnumSort([threatening, non_threatening])\nreactions = EnumSort([defensive, non_defensive])\ninfrared_sensing = Function([rattlesnakes] -> [bool])\nsquirrel_action = Function([squirrels, actions] -> [bool])\nrattlesnake_reaction = Function([rattlesnakes, reactions] -> [bool])\n\n# Constraints\nForAll([r:rattlesnakes], infrared_sensing(r) == True) ::: Rattlesnakes have an infrared sensing organ that detects body heat\nForAll([s:squirrels], And(squirrel_action(s, puff_up_tail), squirrel_action(s, wag_tail))) ::: Protective adult squirrels harass a threatening rattlesnake by puffing up their tails and wagging them\nsquirrel_action(adult, heat_up_tail) ::: New results show that the squirrel's tail also heats up when harassing a rattlesnake\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to support the scientist's hypothesis?\nis_supportive(ForAll([r:rattlesnakes], Implies(squirrel_action(adult, heat_up_tail), rattlesnake_reaction(r, defensive)))) ::: (A) Rattlesnakes react much more defensively when confronted with a squirrel whose tail is heated up than when confronted with one whose tail is not\nis_supportive(Exists([s:squirrels], squirrel_action(s, puff_up_tail))) ::: (B) Squirrels puff up their tails and wag them when they attempt to attract the attention of other squirrels\nis_supportive(Not(Exists([m:mammals], infrared_sensing(m)))) ::: (C) Mammals such as the California ground squirrel have no organ for sensing infrared energy\nis_supportive(Not(Exists([r:rattlesnakes], squirrel_action(r, heat_up_tail)))) ::: (D) Rattlesnakes do not have the ability to increase the temperature of their tails"
    ]
  },
  {
    "id": "test_283",
    "context": "To prevent harbor porpoises from getting tangled in its nets and suffocating, a fishing company installed acoustic alarms on all its boats that fish in waters off Massachusetts. The sound emitted temporarily disorients the porpoises and frightens them away. Since the installation of the alarms, the average number of porpoises caught in the company' s nets has dropped from eight to one per month. The alarms, ttherefore, are saving the lives of harbor porpoises in those waters.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "The cost of installing acoustic alarms on fishing boats is less than the cost of repairing nets damaged by harbor porpoises.",
      "Environmentalists advocate the use of acoustic alarms as a means of protecting the harbor porpoise population.",
      "The use of acoustic alarms increases the number of commercial fish caught by the fishing company's boats.",
      "When disoriented, harbor porpoises are not significantly more likely to be killed by other boats."
    ],
    "raw_logic_programs": [
      "# Declarations\nboats = EnumSort([boat1, boat2, ..., boatN])  # Assuming a finite number of boats\nalarms_installed = Function([boats] -> [bool])\ncaught_porpoises = Function([boats] -> [int])\n\n# Constraints\nForAll([b:boats], alarms_installed(b)) ::: Acoustic alarms are installed on all boats\nForAll([b:boats], caught_porpoises(b) >= 0) ::: The number of porpoises caught is non-negative\nSum([b:boats], caught_porpoises(b)) == 1 ::: The average number of porpoises caught is now one per month\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(ForAll([b:boats], Not(alarms_installed(b)) -> caught_porpoises(b) >= 8)) ::: (The cost of installing acoustic alarms on fishing boats is less than the cost of repairing nets damaged by harbor porpoises.\nis_assumption(ForAll([b:boats], alarms_installed(b) -> caught_porpoises(b) < 8)) ::: (Environmentalists advocate the use of acoustic alarms as a means of protecting the harbor porpoise population.\nis_assumption(ForAll([b:boats], alarms_installed(b) -> caught_porpoises(b) < 8)) ::: (The use of acoustic alarms increases the number of commercial fish caught by the fishing company's boats.\nis_assumption(ForAll([b:boats], alarms_installed(b) -> Not(Exists([other_boat:boats], other_boat != b && caught_porpoises(other_boat) > caught_porpoises(b))))) ::: (When disoriented, harbor porpoises are not significantly more likely to be killed by other boats."
    ]
  },
  {
    "id": "test_284",
    "context": "Some argue that because attaining governmental power in democracies requires building majority coalitions, it is a necessary evil that policymakers do not adhere rigorously to principle when dealing with important issues, but rather shift policies as they try to please different constituents at different times. But it is precisely this behavior that allows a democracy to adapt more easily to serve public interests, and thus it is more a benefit than an evil.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "Democracies appear to be more flexible than nondemocratic forms of government, but are not actually so.",
      "In dealing with an important issue, policymakers in a democracy appeal to a principle in dealing with an issue only when that principle has majority support.",
      "In the formulation of government policy, the advantage conferred by adaptability to diverse or fluctuating public interests outweighs the detriment associated with a lack of strict fidelity to principle.",
      "Government policymakers cannot retain power if they ignore any of the various factions of their original winning coalition."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `forms_of_government = EnumSort([democracy, nondemocracy])`\n- `issues = EnumSort([important_issue])`\n- `policymakers = EnumSort([democratic_policymaker])`\n- `principles = EnumSort([principle])`\n- `constituents = EnumSort([majority, minority])`\n- `policies = Function([policymakers, issues] -> [principles])`\n- `support = Function([constituents, principles] -> [bool])`\n- `adaptability = Function([forms_of_government] -> [bool])`\n- `fidelity_to_principle = Function([policymakers] -> [bool])`\n- `public_interest = Function([forms_of_government] -> [bool])`\n\n# Constraints\n- `ForAll([p:policymakers, i:issues], Exists([c:constituents], support(c, policies(p, i))))` ::: Policymakers shift policies to please different constituents.\n- `ForAll([f:forms_of_government], adaptability(f) == (f == democracy))` ::: Democracies are adaptable to serve public interests.\n- `ForAll([p:policymakers], fidelity_to_principle(p) == False)` ::: Policymakers do not adhere rigorously to principle.\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\n- `is_assumption(ForAll([f:forms_of_government], adaptability(f) == (f == democracy)))` ::: (Democracies appear to be more flexible than nondemocratic forms of government, but are not actually so.\n- `is_assumption(ForAll([p:policymakers, i:issues], Implies(policies(p, i) == principle, support(majority, principle))))` ::: (In dealing with an important issue, policymakers in a democracy appeal to a principle in dealing with an issue only when that principle has majority support.\n- `is_assumption(ForAll([f:forms_of_government], public_interest(f) == (f == democracy)))` ::: (In the formulation of government policy, the advantage conferred by adaptability to diverse or fluctuating public interests outweighs the detriment associated with a lack of strict fidelity to principle.\n- `is_assumption(ForAll([p:policymakers], Exists([c:constituents], support(c, policies(p, important_issue)))))` ::: (Government policymakers cannot retain power if they ignore any of the various factions of their original winning coalition."
    ]
  },
  {
    "id": "test_285",
    "context": "Physician: The hormone melatonin has shown promise as a medication for sleep disorders when taken in synthesized form. Because the long-term side effects of synthetic melatonin are unknown, however, I cannot recommend its use at this time. Patient: Your position is inconsistent with your usual practice. You prescribe many medications that you know have serious side effects, so concern about side effects cannot be the real reason you will not prescribe melatonin.",
    "question": "The patient's argument is flawed because it fails to consider that",
    "options": [
      "known risks can be weighed against known benefits, but unknown risks cannot",
      "the side effects of a medication can take some time to manifest themselves",
      "sleep disorders, if left untreated, might lead to serious medical complications",
      "the side effects of synthetic melatonin might be different from those of naturally produced melatonin"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([physician, patient])\nconsiderations = EnumSort([known_risks_vs_known_benefits, time_to_manifest_side_effects, untreated_sleep_disorders, difference_in_side_effects])\nflaw = Function([arguments] -> [considerations])\n\n# Constraints\nflaw(patient) == known_risks_vs_known_benefits ::: The patient's argument is flawed because it fails to consider that known risks can be weighed against known benefits, but unknown risks cannot\n\n# Options\nQuestion ::: The patient's argument is flawed because it fails to consider that\nis_flaw(flaw(patient) == known_risks_vs_known_benefits) ::: (A) known risks can be weighed against known benefits, but unknown risks cannot\nis_flaw(flaw(patient) == time_to_manifest_side_effects) ::: (B) the side effects of a medication can take some time to manifest themselves\nis_flaw(flaw(patient) == untreated_sleep_disorders) ::: (C) sleep disorders, if left untreated, might lead to serious medical complications\nis_flaw(flaw(patient) == difference_in_side_effects) ::: (D) the side effects of synthetic melatonin might be different from those of naturally produced melatonin"
    ]
  },
  {
    "id": "test_286",
    "context": "Despite the enormous number of transactions processed daily by banks nowadays, if a customer' s bank account is accidentally credited with a large sum of money, it is extremely unlikely that the error will not be detected by the bank' s internal audit procedures.",
    "question": "Which one of the following, if true, most strongly supports the claim above?",
    "options": [
      "Recent changes in banking standards require that customers present identification both when making deposits into their accounts and when making withdrawals from their accounts.",
      "The development of sophisticated security software has rendered bank computers nearly impervious to tampering by computer hackers.",
      "The average ratio of bank auditors to customer accounts has slowly increased over the past 100 years.",
      "Banks initially process all transactions using one set of computer programs, but then use a different set of programs to double-check large transactions."
    ],
    "raw_logic_programs": [
      "# Declarations\ntransactions = EnumSort([detected, undetected])\nauditors = EnumSort([present, absent])\nprograms = EnumSort([initial, double_check])\nerrors = Function([transactions] -> [bool])\nauditing = Function([auditors] -> [bool])\nprocessing = Function([programs] -> [bool])\n\n# Constraints\nerrors(detected) == True ::: It is extremely unlikely that the error will not be detected by the bank's internal audit procedures\n\n# Options\nQuestion ::: Which one of the following, if true, most strongly supports the claim above?\nis_supportive(auditing(present) == True) ::: (A) Recent changes in banking standards require that customers present identification both when making deposits into their accounts and when making withdrawals from their accounts.\nis_supportive(processing(double_check) == True) ::: (B) The development of sophisticated security software has rendered bank computers nearly impervious to tampering by computer hackers.\nis_supportive(auditing(present) == True) ::: (C) The average ratio of bank auditors to customer accounts has slowly increased over the past 100 years.\nis_supportive(processing(double_check) == True) ::: (D) Banks initially process all transactions using one set of computer programs, but then use a different set of programs to double-check large transactions."
    ]
  },
  {
    "id": "test_287",
    "context": "Cocoa grown organically on trees within the shade of the rain forest canopy commands a premium price. However, acquiring and maintaining the certification that allows the crop to be sold as organically grown is very time-consuming and laborious. Meanwhile, the price premium for the grower is about 30 percent, whereas cocoa trees grown in full sun using standard techniques can have twice the yield of organic, shade-grown trees. Financially, ttherefore, standard techniques are the better choice for the farmer.",
    "question": "Which of the following, if true, most seriously weakens the arguement?",
    "options": [
      "Cocoa trees grown using standard techniques require costly applications of fertilizer and pesticides, unlike shade-grown trees.",
      "Cocoa is not the only cash crop that can be raised on plots that leave the rain forest canopy overhead essentially intact.",
      "Although organically grown cocoa has long commanded a price premium over cocoa grown using standard techniques, its price has fluctuated considerably during that period.",
      "Cocoa can be grown only in a climate that has the temperature and moisture characteristics of a tropical rain forest."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([cocoa_trees, standard_techniques, organic_shade_grown, price_premium, yield, costs, certification, climate])\nfactors = Function([variables] -> [bool])\n\n# Constraints\nfactors(organic_shade_grown) == True ::: Cocoa grown organically on trees within the shade of the rain forest canopy commands a premium price\nfactors(certification) == True ::: Acquiring and maintaining the certification that allows the crop to be sold as organically grown is very time-consuming and laborious\nfactors(price_premium) == 0.3 ::: The price premium for the grower is about 30 percent\nfactors(yield) == 2 * factors(organic_shade_grown) ::: Cocoa trees grown in full sun using standard techniques can have twice the yield of organic, shade-grown trees\nfactors(standard_techniques) == True ::: Financially, therefore, standard techniques are the better choice for the farmer\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(factors(costs) == True) ::: (A) Cocoa trees grown using standard techniques require costly applications of fertilizer and pesticides, unlike shade-grown trees\nis_weakening(factors(climate) == True) ::: (B) Cocoa is not the only cash crop that can be raised on plots that leave the rain forest canopy overhead essentially intact\nis_weakening(factors(price_premium) == fluctuating) ::: (C) Although organically grown cocoa has long commanded a price premium over cocoa grown using standard techniques, its price has fluctuated considerably during that period\nis_weakening(factors(climate) == True) ::: (D) Cocoa can be grown only in a climate that has the temperature and moisture characteristics of a tropical rain forest"
    ]
  },
  {
    "id": "test_288",
    "context": "Company president: Our consultants report that, in general, the most efficient managers have excellent time management skills. Thus, to improve productivity I recommend that we make available to our middle-level managers a seminar to train them in techniques of time management.",
    "question": "Each of the following, if true, would weaken the support for the company president's recommendation EXCEPT:",
    "options": [
      "Most managers who are already efficient do not need to improve their productivity.",
      "Most managers at other companies who have attended time management seminars are still unproductive.",
      "Most managers who are efficient have never attended a time management seminar.",
      "The consultants use the same criteria to evaluate managers' efficiency as they do to evaluate their time management skills."
    ],
    "raw_logic_programs": [
      "# Declarations\nmanagers = EnumSort([efficient, middle_level, attended_seminar])\nskills = EnumSort([time_management, productivity])\nevaluates = Function([managers, skills] -> [bool])\n\n# Constraints\nForAll([m:managers], Implies(evaluates(m, time_management), evaluates(m, productivity))) ::: The most efficient managers have excellent time management skills\nForAll([m:managers], Implies(evaluates(m, time_management), Or(evaluates(m, productivity), Not(evaluates(m, productivity))))) ::: To improve productivity, train middle-level managers in time management\n\n# Options\nQuestion ::: Each of the following, if true, would weaken the support for the company president's recommendation EXCEPT:\nis_weakens(ForAll([m:managers], Implies(evaluates(m, efficient), Not(evaluates(m, productivity))))) ::: (A) Most managers who are already efficient do not need to improve their productivity.\nis_weakens(ForAll([m:managers], Implies(evaluates(m, attended_seminar), Not(evaluates(m, productivity))))) ::: (B) Most managers at other companies who have attended time management seminars are still unproductive.\nis_weakens(ForAll([m:managers], Implies(evaluates(m, efficient), Not(evaluates(m, attended_seminar))))) ::: (C) Most managers who are efficient have never attended a time management seminar.\nis_not_weakens(ForAll([m:managers], Implies(evaluates(m, efficient), evaluates(m, time_management)))) ::: (D) The consultants use the same criteria to evaluate managers' efficiency as they do to evaluate their time management skills."
    ]
  },
  {
    "id": "test_289",
    "context": "The heavy traffic in Masana is a growing drain on the city' s economy--the clogging of the streets of the central business district alone cost the economy more than $1. 2 billion over the past year. In order to address this problem, officials plan to introduce congestion pricing, by which drivers would pay to enter the city's most heavily trafficked areas during the busiest times of the day.",
    "question": "Which of the following, if true, would most strongly indicate that the plan will be a success?",
    "options": [
      "Approximately one-fifth of the vehicles in the central business district are in transit from one side of the city to the other.",
      "Planners expect that, without congestion pricing, traffic in Masana is likely to grow by 6 percent in the next five years.",
      "Several studies have shown that a reduction in traffic of 15 percent in Masana could result in 5, 500 or more new jobs.",
      "In other urban areas, congestion pricing has strongly encouraged carpooling (sharing of rides by private commuters)."
    ],
    "raw_logic_programs": [
      "# Declarations\nareas = EnumSort([central_business_district, other_areas])\ntimes = EnumSort([busiest_times, other_times])\nvehicles = EnumSort([transit_vehicles, other_vehicles])\neffects = EnumSort([reduction_in_traffic, increase_in_jobs, encouragement_of_carpooling])\nplan_success = Function([effects] -> [bool])\n\n# Constraints\nForAll([a:areas, t:times], Exists([v:vehicles], And(v == transit_vehicles, a == central_business_district, t == busiest_times))) ::: Approximately one-fifth of the vehicles in the central business district are in transit from one side of the city to the other\nExists([e:effects], e == reduction_in_traffic) ::: Planners expect that, without congestion pricing, traffic in Masana is likely to grow by 6 percent in the next five years\nExists([e:effects], e == increase_in_jobs) ::: Several studies have shown that a reduction in traffic of 15 percent in Masana could result in 5,500 or more new jobs\nExists([e:effects], e == encouragement_of_carpooling) ::: In other urban areas, congestion pricing has strongly encouraged carpooling (sharing of rides by private commuters)\n\n# Options\nQuestion ::: Which of the following, if true, would most strongly indicate that the plan will be a success?\nis_success(plan_success(reduction_in_traffic)) ::: (A)\nis_success(plan_success(increase_in_jobs)) ::: (B)\nis_success(plan_success(encouragement_of_carpooling)) ::: (C)"
    ]
  },
  {
    "id": "test_290",
    "context": "Normally, political candidates send out campaign material in order to influence popular opinion. But the recent ads for Ebsen' s campaign were sent to too few households to serve this purpose effectively. The ads were evidently sent out to test their potential to influence popular opinion. They covered a wide variety of topics, and Ebsen' s campaign has been spending heavily on follow-up to gauge their effect on recipients.",
    "question": "Which one of the following most accurately expresses the conclusion drawn in the argument above?",
    "options": [
      "Ebsen's campaign has been spending heavily on follow-up surveys to gauge the ads' effect on recipients.",
      "The recent ads for Ebsen's campaign covered a wide variety of topics.",
      "The recent ads for Ebsen's campaign were sent out to test their potential to influence popular opinion.",
      "The recent ads for Ebsen's campaign were sent to too few households to influence popular opinion effectively."
    ],
    "raw_logic_programs": [
      "# Declarations\ncampaigns = EnumSort([Ebsen])\nactions = EnumSort([send_ads, test_potential, gauge_effect])\ntopics = EnumSort([variety])\nhouseholds = EnumSort([few, many])\neffectiveness = EnumSort([effective, ineffective])\nspending = EnumSort([heavy, light])\n\n# Constraints\nForAll([c:campaigns], Exists([a:actions], a == send_ads)) ::: Normally, political candidates send out campaign material\nForAll([c:campaigns], Exists([h:households], h == few)) ::: The recent ads for Ebsen's campaign were sent to too few households\nForAll([c:campaigns], Exists([e:effectiveness], e == ineffective)) ::: to influence popular opinion effectively\nForAll([c:campaigns], Exists([a:actions], a == test_potential)) ::: The ads were evidently sent out to test their potential to influence popular opinion\nForAll([c:campaigns], Exists([t:topics], t == variety)) ::: They covered a wide variety of topics\nForAll([c:campaigns], Exists([s:spending], s == heavy)) ::: Ebsen's campaign has been spending heavily on follow-up\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the conclusion drawn in the argument above?\nis_conclusion(Exists([a:actions], a == gauge_effect)) ::: (Ebsen's campaign has been spending heavily on follow-up surveys to gauge the ads' effect on recipients.)\nis_conclusion(Exists([t:topics], t == variety)) ::: (The recent ads for Ebsen's campaign covered a wide variety of topics.)\nis_conclusion(Exists([a:actions], a == test_potential)) ::: (The recent ads for Ebsen's campaign were sent out to test their potential to influence popular opinion.)\nis_conclusion(Exists([h:households], h == few)) ::: (The recent ads for Ebsen's campaign were sent to too few households to influence popular opinion effectively.)"
    ]
  },
  {
    "id": "test_291",
    "context": "Sally: I cannot study at a university where there is an alcohol problem, so unless something is done about the alcohol problem at this university, I' ll have to transfer to a university where there are no fraternities. Yolanda: I don' t agree that fraternities are responsible for the alcohol problem at this university. Alcohol problems exist at all universities, including those where there are no fraternities. We all should become more aware of alcohol abuse. It' s not simply a fraternity problem; it' s a cultural problem.",
    "question": "Which one of the following is an assumption on which Sally's argument depends?",
    "options": [
      "Nothing will be done about the alcohol problem at Sally's university.",
      "There could be universities that have no alcohol problems.",
      "Most universities have fraternities.",
      "Alcohol problems are becoming more widespread at universities."
    ],
    "raw_logic_programs": [
      "# Declarations\nuniversities = EnumSort([Sallys_university, Transfer_university])\nproblems = EnumSort([alcohol_problem, no_alcohol_problem])\nfraternities = EnumSort([has_fraternities, no_fraternities])\nconditions = Function([universities] -> [problems, fraternities])\n\n# Constraints\nconditions(Sallys_university) == (alcohol_problem, has_fraternities) ::: Sally's current university has an alcohol problem and fraternities\nconditions(Transfer_university) == (no_alcohol_problem, no_fraternities) ::: Sally's transfer university has no alcohol problem and no fraternities\n\n# Options\nQuestion ::: Which one of the following is an assumption on which Sally's argument depends?\nis_assumption(conditions(Sallys_university) == alcohol_problem) ::: (A) Nothing will be done about the alcohol problem at Sally's university.\nis_assumption(Exists([u:universities], conditions(u) == no_alcohol_problem)) ::: (B) There could be universities that have no alcohol problems.\nis_assumption(Exists([u:universities], conditions(u) == has_fraternities)) ::: (C) Most universities have fraternities.\nis_assumption(ForAll([u:universities], conditions(u) == alcohol_problem)) ::: (D) Alcohol problems are becoming more widespread at universities."
    ]
  },
  {
    "id": "test_292",
    "context": "Phytonutrients, found in fresh fruits and vegetables, have beneficial effects on the human cardiovascular system. Because heart disease is a major health concern, American doctors should encourage all people, especially those with heart disease, to eat a diet high in fresh fruits and vegetables.",
    "question": "Which of the following, if true, provides the most support for the argument above?",
    "options": [
      "smoking cigarettes is a much more serious health risk than the lack of fresh fruits and vegetables in one's diet",
      "folks with heart disease who eat few or no fresh fruits and vegetables have heart attacks at a much higher rate than do the folks who eat those foods.",
      "the combination of soluble and insoluble fibers found in whole grains also support heart health",
      "a large percentage of those who suffer heart disease in the United States do not live close to large agricultural area where fruits and vegetables are grown"
    ],
    "raw_logic_programs": [
      "# Declarations\nphytonutrients = EnumSort([fresh_fruits, fresh_vegetables])\nhealth_effects = EnumSort([beneficial, neutral, harmful])\ndiet = Function([phytonutrients] -> [health_effects])\nheart_disease = BoolSort()\nencouragement = Function([BoolSort()] -> [BoolSort()])\n\n# Constraints\nForAll([p:phytonutrients], diet(p) == beneficial) ::: Phytonutrients, found in fresh fruits and vegetables, have beneficial effects on the human cardiovascular system\nheart_disease == True ::: Heart disease is a major health concern\nencouragement(heart_disease) == True ::: American doctors should encourage all people, especially those with heart disease, to eat a diet high in fresh fruits and vegetables\n\n# Options\nQuestion ::: Which of the following, if true, provides the most support for the argument above?\nis_supportive(Exists([p:phytonutrients], And(diet(p) == beneficial, heart_disease == True))) ::: (A) smoking cigarettes is a much more serious health risk than the lack of fresh fruits and vegetables in one's diet\nis_supportive(Exists([p:phytonutrients], And(diet(p) == beneficial, heart_disease == True, encouragement(heart_disease) == True))) ::: (B) folks with heart disease who eat few or no fresh fruits and vegetables have heart attacks at a much higher rate than do the folks who eat those foods.\nis_supportive(Exists([p:phytonutrients], And(diet(p) == beneficial, heart_disease == True))) ::: (C) the combination of soluble and insoluble fibers found in whole grains also support heart health\nis_supportive(Exists([p:phytonutrients], And(diet(p) == beneficial, heart_disease == True))) ::: (D) a large percentage of those who suffer heart disease in the United States do not live close to large agricultural area where fruits and vegetables are grown"
    ]
  },
  {
    "id": "test_293",
    "context": "A study found that when rating the educational value of specific children' s television shows parents tend to base their judgments primarily on how much they themselves enjoyed the shows, and rarely took into account the views of educational psychologists as to the shows' educational value. Accordingly, if the psychologists' views are sound, parents have little reason to trust their own ratings of the educational value of children' s television shows.",
    "question": "The argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "takes for granted that the educational value of a television show should be the only consideration for a parent trying to decide whether a child should watch the show",
      "fails to rule out the possibility that parents' ratings of the shows based on their own enjoyment coincide closely with the educational psychologists' views of the shows' educational values",
      "takes for granted that educational psychologists are the only people who can judge the educational value of children's television shows with a high degree of accuracy",
      "takes for granted that parents do not enjoy the same sort of children's television shows that children themselves enjoy"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([parents, psychologists])\ncriteria = EnumSort([enjoyment, educational_value])\nratings = Function([arguments, criteria] -> [bool])\n\n# Constraints\nForAll([c:criteria], ratings(parents, c) == (c == enjoyment)) ::: parents base their judgments primarily on how much they themselves enjoyed the shows\nForAll([c:criteria], ratings(psychologists, c) == (c == educational_value)) ::: psychologists' views are based on educational value\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(Exists([c:criteria], ratings(parents, c) == ratings(psychologists, c))) ::: (fails to rule out the possibility that parents' ratings of the shows based on their own enjoyment coincide closely with the educational psychologists' views of the shows' educational values)"
    ]
  },
  {
    "id": "test_294",
    "context": "An association between two types of conditions does not establish that conditions of one type cause conditions of the other type. Even persistent and inviolable association is inconclusive; such association is often due to conditions of both types being effects of the same kind of cause.",
    "question": "Which one of the following judgments most closely conforms to the principle stated above?",
    "options": [
      "People who have high blood pressure tend to be overweight. But before we draw any inferences, we should consider that an unhealthy lifestyle can cause high blood pressure, and weight gain can result from living unhealthily.",
      "In some areas, there is a high correlation between ice cream consumption and the crime rate. Some researchers have proposed related third factors, but we cannot rule out that the correlation is purely coincidental.",
      "Some people claim that rapid growth of the money supply is what causes inflation. But this is a naive view. What these people do not realize is that growth in the money supply and inflation are actually one and the same phenomenon.",
      "People's moods seem to vary with the color of the clothes they wear. Dark colors are associated with gloomy moods, and bright colors are associated with cheerful moods. This correlation resolves nothing, however. We cannot say whether it is the colors that cause the moods or the converse."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([type1, type2])\ncauses = EnumSort([cause1, cause2, cause3])\nassociation = Function([conditions, conditions] -> [bool])\neffect = Function([conditions, causes] -> [bool])\n\n# Constraints\nForAll([c1:conditions, c2:conditions], Implies(association(c1, c2), Not(effect(c1, c2)))) ::: An association between two types of conditions does not establish causation\nForAll([c1:conditions, c2:conditions], Implies(association(c1, c2), Exists([cause:causes], And(effect(c1, cause), effect(c2, cause))))) ::: Association is often due to both being effects of the same cause\n\n# Options\nQuestion ::: Which one of the following judgments most closely conforms to the principle stated above?\nis_conformant(And(association(high_blood_pressure, overweight), Exists([cause:causes], And(effect(high_blood_pressure, cause), effect(overweight, cause))))) ::: (A)\nis_conformant(And(association(ice_cream_consumption, crime_rate), Exists([cause:causes], And(effect(ice_cream_consumption, cause), effect(crime_rate, cause))))) ::: (B)\nis_conformant(And(association(money_supply_growth, inflation), Exists([cause:causes], And(effect(money_supply_growth, cause), effect(inflation, cause))))) ::: (C)\nis_conformant(And(association(mood, clothing_color), Exists([cause:causes], And(effect(mood, cause), effect(clothing_color, cause))))) ::: (D)"
    ]
  },
  {
    "id": "test_295",
    "context": "Aroca County' s public schools are supported primarily by taxes on property. The county plans to eliminate the property tax and support schools with a new three percent sales tax on all retail items sold in the county. Three percent of current retail sales is less than the amount collected through property taxes, but implementation of the plan would not necessarily reduce the amount of money going to Aroca County public schools, because __.",
    "question": "Which if the following, if true, most logically completes the argument?",
    "options": [
      "retailers in Aroca County are not likely to absorb the sales tax by reducing the pretax price of their goods",
      "many Aroca County residents have already left the county because of its high property taxes",
      "a shopping mall likely to draw shoppers from neighboring counties , which have much higher sales-tax rates, is about to open in Aroca county",
      "a significant proportion of parents of Aroca County public school students do not own their homes and consequently do not pay property taxes"
    ],
    "raw_logic_programs": [
      "# Declarations\ntax_types = EnumSort([property_tax, sales_tax])\nfactors = EnumSort([retailers_absorb_tax, residents_leave, new_shopping_mall, non_homeowner_parents])\nsupports_schools = Function([tax_types] -> [bool])\ninfluences = Function([factors] -> [bool])\n\n# Constraints\nsupports_schools(property_tax) == True ::: Aroca County's public schools are supported primarily by taxes on property\nsupports_schools(sales_tax) == False ::: Three percent of current retail sales is less than the amount collected through property taxes\n\n# Options\nQuestion ::: Which of the following, if true, most logically completes the argument?\ninfluences(new_shopping_mall) == True ::: (a shopping mall likely to draw shoppers from neighboring counties, which have much higher sales-tax rates, is about to open in Aroca county)\ninfluences(retailers_absorb_tax) == False ::: (retailers in Aroca County are not likely to absorb the sales tax by reducing the pretax price of their goods)\ninfluences(residents_leave) == False ::: (many Aroca County residents have already left the county because of its high property taxes)\ninfluences(non_homeowner_parents) == False ::: (a significant proportion of parents of Aroca County public school students do not own their homes and consequently do not pay property taxes)"
    ]
  },
  {
    "id": "test_296",
    "context": "Clothes dryers manufactured by Archway Appliances, Inc. are of poor quality. Crucial bolts are missing and some sections are assembled in the wrong order, thereby creating a shock and fire hazard. Concern for safety and quality is conspicuously lacking. So Archway must use shoddy, substandard components in its clothes dryers.",
    "question": "The argument is most vulnerable to criticism on the grounds that it fails to consider the possibility that",
    "options": [
      "Archway's dryers consistently perform well and enjoy considerable customer loyalty",
      "Archway's other product lines exhibit careful and safe assembly and use high-quality components",
      "a shoddily constructed appliance can be made of high-quality parts",
      "there is not a single known case of an Archway dryer starting a fire or electrocuting someone"
    ],
    "raw_logic_programs": [
      "# Declarations\nargument = EnumSort([Archway_dryers, Archway_other_products, Shoddy_construction, High_quality_parts, No_fire_cases])\nvulnerable_to_criticism = Function([argument] -> [bool])\n\n# Constraints\nvulnerable_to_criticism(Archway_dryers) ::: Clothes dryers manufactured by Archway Appliances, Inc. are of poor quality\nvulnerable_to_criticism(Shoddy_construction) ::: Crucial bolts are missing and some sections are assembled in the wrong order, thereby creating a shock and fire hazard\nvulnerable_to_criticism(High_quality_parts) ::: So Archway must use shoddy, substandard components in its clothes dryers\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it fails to consider the possibility that\nis_valid(vulnerable_to_criticism(Archway_dryers)) ::: (Archway's dryers consistently perform well and enjoy considerable customer loyalty)\nis_valid(vulnerable_to_criticism(Archway_other_products)) ::: (Archway's other product lines exhibit careful and safe assembly and use high-quality components)\nis_valid(vulnerable_to_criticism(Shoddy_construction)) ::: (a shoddily constructed appliance can be made of high-quality parts)\nis_valid(vulnerable_to_criticism(No_fire_cases)) ::: (there is not a single known case of an Archway dryer starting a fire or electrocuting someone)"
    ]
  },
  {
    "id": "test_297",
    "context": "Before their larvae hatch, each parental pair of Nicrophorus beetles buries the carcass of a small vertebrate nearby. For several days after the larvae hatch, both beetles feed their voracious larvae from the carcass, which is entirely consumed within a week. Since both parents help with feeding, larvae should benefit from both parents' presence; however, removing one parent before the hatching results in larvae that grow both larger and heavier than they otherwise would be.",
    "question": "Which one of the following, if true, best helps to explain why removing one parent resulted in larger, heavier larvae?",
    "options": [
      "Two beetles can find and bury a larger carcass than can a single beetle.",
      "Beetle parents usually take turns feeding their larvae, so that there is always one provider available and one at rest.",
      "Both parents use the carcass as their own food supply for as long as they stay with the larvae.",
      "After a week, the larvae are capable of finding other sources of food and feeding themselves."
    ],
    "raw_logic_programs": [
      "# Declarations\nbeetles = EnumSort([parent1, parent2])\nlarvae = EnumSort([larvae_group])\nactions = EnumSort([bury_carcass, feed_larvae, consume_carcass])\ncarcass_size = Function([beetles] -> [int])\nlarvae_growth = Function([larvae] -> [int])\n\n# Constraints\nForAll([b:beetles], Exists([a:actions], a == bury_carcass)) ::: Each parental pair of beetles buries the carcass\nForAll([b:beetles], Exists([a:actions], a == feed_larvae)) ::: Both beetles feed their larvae\nExists([a:actions], a == consume_carcass) ::: The carcass is entirely consumed within a week\nlarvae_growth(larvae_group) > larvae_growth(larvae_group) - 1 ::: Removing one parent results in larger, heavier larvae\n\n# Options\nQuestion ::: Which one of the following, if true, best helps to explain why removing one parent resulted in larger, heavier larvae?\nis_explanation(carcass_size(parent1) + carcass_size(parent2) > carcass_size(parent1)) ::: (A) Two beetles can find and bury a larger carcass than can a single beetle.\nis_explanation(Exists([b:beetles], And(feed_larvae(b), Not(feed_larvae(b))))) ::: (B) Beetle parents usually take turns feeding their larvae, so that there is always one provider available and one at rest.\nis_explanation(ForAll([b:beetles], consume_carcass)) ::: (C) Both parents use the carcass as their own food supply for as long as they stay with the larvae.\nis_explanation(larvae_growth(larvae_group) > larvae_growth(larvae_group) - 1) ::: (D) After a week, the larvae are capable of finding other sources of food and feeding themselves."
    ]
  },
  {
    "id": "test_298",
    "context": "Studies have shown that an automobile that runs on a blend of 85% ethanol/15% gasoline gets better mileage than an otherwise similar car equipped with a gasoline engine. Many American legislators have concluded that an increase in tax incentives for ethanol production would lessen our dependence on foreign oil.",
    "question": "Which of the following, if true, casts the most doubt upon the validity of the legislators' conclusion?",
    "options": [
      "It takes 1. 5 gallons of oil to produce 1 gallon of ethanol.",
      "Electric cars are cheaper to operate than cars running on the ethanol fuel mix.",
      "It costs thousands of dollars to retrofit an automobile to run on the ethanol fuel mix.",
      "The ethanol/gasoline blend emits more pollution that regular gasoline."
    ],
    "raw_logic_programs": [
      "# Declarations\nethanol_production = Function([gallons_of_oil] -> [gallons_of_ethanol])\ncar_type = EnumSort([ethanol_blend, gasoline, electric])\ncost = Function([car_type] -> [int])\npollution = Function([car_type] -> [int])\nretrofit_cost = Function([car_type] -> [int])\n\n# Constraints\nethanol_production(1.5) == 1 ::: It takes 1.5 gallons of oil to produce 1 gallon of ethanol\ncost(electric) < cost(ethanol_blend) ::: Electric cars are cheaper to operate than cars running on the ethanol fuel mix\nretrofit_cost(ethanol_blend) > 0 ::: It costs thousands of dollars to retrofit an automobile to run on the ethanol fuel mix\npollution(ethanol_blend) > pollution(gasoline) ::: The ethanol/gasoline blend emits more pollution than regular gasoline\n\n# Options\nQuestion ::: Which of the following, if true, casts the most doubt upon the validity of the legislators' conclusion?\nis_most_doubtful(ethanol_production(1.5) == 1) ::: (A)\nis_most_doubtful(cost(electric) < cost(ethanol_blend)) ::: (B)\nis_most_doubtful(retrofit_cost(ethanol_blend) > 0) ::: (C)\nis_most_doubtful(pollution(ethanol_blend) > pollution(gasoline)) ::: (D)"
    ]
  },
  {
    "id": "test_299",
    "context": "A group of scientists studying calcium metabolism in laboratory rats discovered that removing the rats' parathyroid glands resulted in the rats' having substantially lower than normal levels of calcium in their blood. This discovery led the scientists to hypothesize that the function of the parathyroid gland is to regulate the level of calcium in the blood by raising that level when it falls below the normal range. In a further experiment, the scientists removed not only the parathyroid gland but also the adrenal gland from rats. They made the surprising discovery that the level of calcium in the rats' blood decreased much less sharply than when the parathyroid gland alone was removed.",
    "question": "Which one of the following, if true, explains the surprising discovery in a way most consistent with the scientists' hypothesis?",
    "options": [
      "The absence of a parathyroid gland causes the adrenal gland to increase the level of calcium in the blood.",
      "If the adrenal gland, and no other gland, of a rat were removed, the rat's calcium level would remain stable.",
      "The adrenal gland acts to lower the level of calcium in the blood.",
      "The adrenal gland and the parathyroid gland play the same role in regulating calcium blood levels."
    ],
    "raw_logic_programs": [
      "# Declarations\nglands = EnumSort([parathyroid, adrenal])\neffects = EnumSort([increase, decrease, stable])\ncalcium_level = Function([glands] -> [effects])\n\n# Constraints\ncalcium_level(parathyroid) == increase ::: The function of the parathyroid gland is to regulate the level of calcium in the blood by raising that level when it falls below the normal range.\ncalcium_level(adrenal) == decrease ::: The adrenal gland acts to lower the level of calcium in the blood.\n\n# Options\nQuestion ::: Which one of the following, if true, explains the surprising discovery in a way most consistent with the scientists' hypothesis?\nis_explanation(calcium_level(adrenal) == increase) ::: (The absence of a parathyroid gland causes the adrenal gland to increase the level of calcium in the blood.\nis_explanation(calcium_level(adrenal) == stable) ::: (If the adrenal gland, and no other gland, of a rat were removed, the rat's calcium level would remain stable.\nis_explanation(calcium_level(adrenal) == decrease) ::: (The adrenal gland acts to lower the level of calcium in the blood.\nis_explanation(calcium_level(adrenal) == increase) ::: (The adrenal gland and the parathyroid gland play the same role in regulating calcium blood levels."
    ]
  },
  {
    "id": "test_300",
    "context": "A consumer magazine surveyed people who had sought a psychologist' s help with a personal problem. Of those responding who had received treatment for 6 months or less, 20 percent claimed that treatment \"made things a lot better. \" Of those responding who had received longer treatment, 36 percent claimed that treatment \"made things a lot better. \" Ttherefore, psychological treatment lasting more than 6 months is more effective than shorter-term treatment.",
    "question": "Which one of the following, if true, most seriously weakens the argument?",
    "options": [
      "Patients who had received treatment for longer than 6 months were more likely to respond to the survey than were those who had received treatment for a shorter time.",
      "Many psychologists encourage their patients to receive treatment for longer than 6 months.",
      "Of the respondents who had received treatment for longer than 6 months, 10 percent said that treatment made things worse.",
      "Patients who feel they are doing well in treatment tend to remain in treatment, while those who are doing poorly tend to quit earlier."
    ],
    "raw_logic_programs": [
      "# Declarations\ntreatment_duration = EnumSort([shorter_than_6_months, longer_than_6_months])\nresponse = EnumSort([made_things_a_lot_better, made_things_worse, no_change])\nsurveyed = Function([treatment_duration] -> [response])\n\n# Constraints\nsurveyed(shorter_than_6_months) == made_things_a_lot_better ::: 20 percent claimed that treatment \"made things a lot better\" for 6 months or less\nsurveyed(longer_than_6_months) == made_things_a_lot_better ::: 36 percent claimed that treatment \"made things a lot better\" for longer treatment\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the argument?\nis_weakening(Patients_who_had_received_treatment_for_longer_than_6_months_were_more_likely_to_respond_to_the_survey_than_were_those_who_had_received_treatment_for_a_shorter_time) ::: (A)\nis_weakening(Many_psychologists_encourage_their_patients_to_receive_treatment_for_longer_than_6_months) ::: (B)\nis_weakening(Of_the_respondents_who_had_received_treatment_for_longer_than_6_months_10_percent_said_that_treatment_made_things_worse) ::: (C)\nis_weakening(Patients_who_feel_they_are_doing_well_in_treatment_tend_to_remain_in_treatment_while_those_who_are_doing_poorly_tend_to_quit_earlier) ::: (D)"
    ]
  },
  {
    "id": "test_301",
    "context": "Disposable diapers, while a convenience, are an environmental disaster. If people would use cloth diapers instead of those made of disposable paper, much less paper would be produced saving millions of trees each year. Ttherefore, people should go back to buying, washing and reusing cloth diapers and Earth's precious natural resources would not be consumed so rapidly.",
    "question": "This argument depends of which of the following assumptions?",
    "options": [
      "The current trend in infant care is doing things \"the old-fashioned way. \"",
      "The annual cost to the consumer of using cloth diapers is only 20% the annual cost of using disposable diapers.",
      "Cloth diapers are never disposed of.",
      "The process of washing cloth diapers consumes less natural resources than that of using disposable diapers."
    ],
    "raw_logic_programs": [
      "# Declarations\nresources = EnumSort([paper, cloth, natural_resources])\ndiapers = EnumSort([disposable, cloth])\nactions = EnumSort([buying, washing, reusing])\nconsumption = Function([diapers, actions] -> [resources])\n\n# Constraints\nForAll([d:diapers], Exists([a:actions], consumption(d, a) == natural_resources)) ::: Each type of diaper involves consumption of natural resources\nconsumption(disposable, buying) == paper ::: Disposable diapers involve paper consumption when buying\nconsumption(cloth, buying) != paper ::: Cloth diapers do not involve paper consumption when buying\n\n# Options\nQuestion ::: This argument depends on which of the following assumptions?\nis_assumption(Exists([a:actions], consumption(cloth, a) < consumption(disposable, buying))) ::: (The process of washing cloth diapers consumes less natural resources than that of using disposable diapers.)"
    ]
  },
  {
    "id": "test_302",
    "context": "Many scholars are puzzled about who created the seventeenth-century abridgment of Shakespeare' s Hamlet contained in the First Quarto. Two facts about the work shed light on this question. First, the person who undertook the abridgment clearly did not possess a copy of Hamlet. Second, the abridgment contains a very accurate rendering of the speeches of one of the characters, but a slipshod handling of all the other parts.",
    "question": "Which one of the following statements is most supported by the information above?",
    "options": [
      "The abridgement was prepared by a spectator of a performance of Hamlet.",
      "The abridgment was created to make Hamlet easier to produce on stage.",
      "The abridgment was produced by an actor who had played a role in Hamlet.",
      "The abridgment was produced by an actor who was trying to improve the play."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([spectator, easier_production, actor_role, actor_improvement])\nsupports = Function([statements] -> [bool])\n\n# Constraints\nAnd(\n    Not(supports(easier_production)),  # The abridgment was not necessarily created to make Hamlet easier to produce on stage\n    Not(supports(actor_improvement))  # The abridgment was not necessarily produced by an actor trying to improve the play\n) \n\n# Options\nQuestion ::: Which one of the following statements is most supported by the information above?\nis_supported(supports(spectator)) ::: (The abridgement was prepared by a spectator of a performance of Hamlet.)\nis_supported(supports(actor_role)) ::: (The abridgment was produced by an actor who had played a role in Hamlet.)"
    ]
  },
  {
    "id": "test_303",
    "context": "For puppies aged four to six weeks whose mothers have been the primary caregivers, the following is true: When the puppies are crying due to hunger or other similar discomfort, merely smelling the mother' s scent will lead to a temporary halt in crying, while the scent of other dogs does not have this effect.",
    "question": "Which one of the following is most reasonably supported by the information above?",
    "options": [
      "Often only a primary caregiver can provide comfort to a puppy.",
      "Puppies more easily learn to recognize the scents of their mothers than the scents of other dogs.",
      "Puppies associate the scent of the primary caregiver with relief from discomfort.",
      "Discomfort in puppies is best relieved by detecting the mother's scent."
    ],
    "raw_logic_programs": [
      "# Declarations\npuppies = EnumSort([puppy])\ncaregivers = EnumSort([mother, other_dog])\ncrying_due_to = EnumSort([hunger, discomfort])\nscent_effect = Function([puppies, caregivers, crying_due_to] -> [bool])\n\n# Constraints\nForAll([p:puppies, c:crying_due_to], scent_effect(p, mother, c) == True) ::: Merely smelling the mother's scent will lead to a temporary halt in crying\nForAll([p:puppies, c:crying_due_to], scent_effect(p, other_dog, c) == False) ::: The scent of other dogs does not have this effect\n\n# Options\nQuestion ::: Which one of the following is most reasonably supported by the information above?\nis_supported(Exists([p:puppies], ForAll([c:crying_due_to], scent_effect(p, mother, c) == True))) ::: (A) Often only a primary caregiver can provide comfort to a puppy.\nis_supported(Exists([p:puppies], ForAll([c:crying_due_to], scent_effect(p, mother, c) == True))) ::: (B) Puppies more easily learn to recognize the scents of their mothers than the scents of other dogs.\nis_supported(Exists([p:puppies], ForAll([c:crying_due_to], scent_effect(p, mother, c) == True))) ::: (C) Puppies associate the scent of the primary caregiver with relief from discomfort.\nis_supported(Exists([p:puppies], ForAll([c:crying_due_to], scent_effect(p, mother, c) == True))) ::: (D) Discomfort in puppies is best relieved by detecting the mother's scent."
    ]
  },
  {
    "id": "test_304",
    "context": "The human back contains many discs that help the spine maintain its flexibility. The only condition that could cause this patient' s severe back pain is a herniated disc. Ttherefore, at least one of the discs in the patient' s back is herniated.",
    "question": "Which one of the following arguments is most similar in its logical features to the argument above?",
    "options": [
      "Students do well on exams only when they like the subject matter, since students tend to score lower on exams testing subject matter that they dislike.",
      "The tears on the athlete's face could only have been caused by joy, since he came in first place.",
      "The pitcher must have grown tired by the seventh inning because that is the only inning where he threw no strikes.",
      "At least one answer on the test must be wrong, since nothing else would cause Mary to receive an A- on the test."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([herniated_disc, other_conditions])\ncauses = Function([conditions] -> [bool])\n\n# Constraints\ncauses(herniated_disc) == True ::: The only condition that could cause this patient's severe back pain is a herniated disc\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its logical features to the argument above?\nis_similar(Exists([c:conditions], causes(c) == True)) ::: (A) Students do well on exams only when they like the subject matter, since students tend to score lower on exams testing subject matter that they dislike.\nis_similar(Exists([c:conditions], causes(c) == True)) ::: (B) The tears on the athlete's face could only have been caused by joy, since he came in first place.\nis_similar(Exists([c:conditions], causes(c) == True)) ::: (C) The pitcher must have grown tired by the seventh inning because that is the only inning where he threw no strikes.\nis_similar(Exists([c:conditions], causes(c) == True)) ::: (D) At least one answer on the test must be wrong, since nothing else would cause Mary to receive an A- on the test."
    ]
  },
  {
    "id": "test_305",
    "context": "Only experienced salespeople will be able to meet the company' s selling quota. Thus, I must not count as an experienced salesperson, since I will be able to sell only half the quota.",
    "question": "The pattern of flawed reasoning exhibited by the argument above is most similar to that exhibited by which one of the following?",
    "options": [
      "As this tree before us is a giant redwood, it follows that we must be in a northern latitude, since it is only in northern latitudes that one finds giant redwoods.",
      "Only music lovers take this class. Thus, since Hillary is not taking this class, she apparently does not love music.",
      "Only accomplished mountain climbers can scale El Capitan. Thus, Michelle must be able to scale El Capitan, since she is an accomplished mountain climber.",
      "Only on Fridays are employees allowed to dress casually. Today is Friday but Hector is dressed formally. So he must not be going to work."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([I])\nsales_quota = EnumSort([full_quota, half_quota])\nexperience = EnumSort([experienced, not_experienced])\nmeets_quota = Function([people] -> [sales_quota])\nis_experienced = Function([people] -> [experience])\n\n# Constraints\nForAll([p:people], Implies(is_experienced(p) == experienced, meets_quota(p) == full_quota)) ::: Only experienced salespeople will be able to meet the company’s selling quota\nmeets_quota(I) == half_quota ::: I will be able to sell only half the quota\n\n# Options\nQuestion ::: The pattern of flawed reasoning exhibited by the argument above is most similar to that exhibited by which one of the following?\nis_similar(Implies(And(tree == giant_redwood, location == northern_latitude), True)) ::: (A)\nis_similar(Implies(And(class == music_lovers, student != Hillary), True)) ::: (B)\nis_similar(Implies(And(climber == accomplished, can_scale == El_Capitan), True)) ::: (C)\nis_similar(Implies(And(day == Friday, dress == formal), not_working == Hector)) ::: (D)"
    ]
  },
  {
    "id": "test_306",
    "context": "If the purpose of laws is to contribute to people' s happiness, we have a basis for criticizing existing laws as well as proposing new laws. Hence, if that is not the purpose, then we have no basis for the evaluation of existing laws, from which we must conclude that existing laws acquire legitimacy simply because they are the laws.",
    "question": "The reasoning in the argument is flawed in that the argument",
    "options": [
      "takes a sufficient condition for a state of affairs to be a necessary condition for it",
      "draws a conclusion about how the world actually is on the basis of claims about how it should be",
      "infers a causal relationship from the mere presence of a correlation",
      "trades on the use of a term in one sense in a premise and in a different sense in the conclusion"
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([sufficient_condition, necessary_condition, causal_relationship, correlation, term_usage])\nargument_flaws = Function([conditions] -> [bool])\n\n# Constraints\nargument_flaws(sufficient_condition) ::: takes a sufficient condition for a state of affairs to be a necessary condition for it\nargument_flaws(necessary_condition) ::: draws a conclusion about how the world actually is on the basis of claims about how it should be\nargument_flaws(causal_relationship) ::: infers a causal relationship from the mere presence of a correlation\nargument_flaws(correlation) ::: trades on the use of a term in one sense in a premise and in a different sense in the conclusion\n\n# Options\nQuestion ::: The reasoning in the argument is flawed in that the argument\nis_flawed(argument_flaws(sufficient_condition)) ::: (A)\nis_flawed(argument_flaws(necessary_condition)) ::: (B)\nis_flawed(argument_flaws(causal_relationship)) ::: (C)\nis_flawed(argument_flaws(correlation)) ::: (D)"
    ]
  },
  {
    "id": "test_307",
    "context": "The population of Megacity, a sprawling metropolis in Remsland, has grown at a fairly steady rate for over a century. A hundred years ago, poor sanitation in the city caused high mortality rates among the city' s inhabitants, and what fueled the population increase was immigration from rural villages. This immigration has continued and even increased. Moreover, in recent decades, city sanitation has improved enormously. Yet the city' s population growth has not significantly accelerated.",
    "question": "Which of the following, if true, most helps to explain why the city's population growth rate has not changed?",
    "options": [
      "Megacity has long offered better employment prospects than most rural areas.",
      "Mortality rates that were associated with poor sanitation in Megacity a hundred years ago were orders of magnitude higher than are mortality rates associated with vehicular traffic, which is currently a major cause of death in the city.",
      "The great majority of immigrants to Remsland settle in Megacity, at least initially.",
      "For several decades, Megacity, as distinct from the countryside, has had a steadily declining birth rate."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([employment_prospects, historical_mortality_rates, immigrant_settlement, declining_birth_rate])\nexplains = Function([factors] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as this is an explanation-based question.\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain why the city's population growth rate has not changed?\nis_explanatory(explains(declining_birth_rate)) ::: (D)\nis_explanatory(explains(employment_prospects)) ::: (A)\nis_explanatory(explains(historical_mortality_rates)) ::: (B)\nis_explanatory(explains(immigrant_settlement)) ::: (C)"
    ]
  },
  {
    "id": "test_308",
    "context": "Many large department stores in Montalia now provide shopping carts for their customers. Since customers using shopping carts tend to buy more than those without shopping carts, most of these stores are experiencing strong sales growth, while most other department stores are not. Ttherefore, in order to boost sales, managers of Jerrod' s, Montalia' s premier department store, are planning to purchase shopping carts and make them available to the store' s customers next month.",
    "question": "Which of the following, if true, casts most doubt whether the managers' plan, if implemented, will achieve its goal?",
    "options": [
      "Since most customers associate shopping carts with low-quality discount stores, Jerrod's high-quality image would likely suffer if shopping carts were introduced.",
      "Because the unemployment rate has declined to very low levels, Jerrod's now has to pay significantly higher wages in order to retain its staff.",
      "Shopping carts are not very expensive, but they generally need to be replaced every few years.",
      "Stores that make shopping carts available to their customers usually have to hire people to retrieve the carts from parking areas."
    ],
    "raw_logic_programs": [
      "# Declarations\nstores = EnumSort([large_department_stores, Jerrods])\nfactors = EnumSort([shopping_carts, sales_growth, high_quality_image, customer_perception])\neffects = Function([stores, factors] -> [bool])\n\n# Constraints\neffects(large_department_stores, shopping_carts) == True ::: Many large department stores in Montalia now provide shopping carts\neffects(large_department_stores, sales_growth) == True ::: Most of these stores are experiencing strong sales growth\neffects(Jerrods, shopping_carts) == False ::: Jerrod's does not currently provide shopping carts\n\n# Options\nQuestion ::: Which of the following, if true, casts most doubt whether the managers' plan, if implemented, will achieve its goal?\nImplies(effects(Jerrods, shopping_carts), Not(effects(Jerrods, high_quality_image))) ::: (A) Since most customers associate shopping carts with low-quality discount stores, Jerrod's high-quality image would likely suffer if shopping carts were introduced.\nImplies(effects(Jerrods, shopping_carts), effects(Jerrods, sales_growth)) ::: (B) Because the unemployment rate has declined to very low levels, Jerrod's now has to pay significantly higher wages in order to retain its staff.\nImplies(effects(Jerrods, shopping_carts), True) ::: (C) Shopping carts are not very expensive, but they generally need to be replaced every few years.\nImplies(effects(Jerrods, shopping_carts), True) ::: (D) Stores that make shopping carts available to their customers usually have to hire people to retrieve the carts from parking areas."
    ]
  },
  {
    "id": "test_309",
    "context": "Ariel: Government art subsidies never benefit art, for art' s role is to challenge society' s values. A society' s values, however, are expressed by its government, and artists cannot challenge the very institution upon which they depend. Sasha: I agree that art should challenge society' s values. However, by its very nature, a democratic government respects dissent and encourages challenges to its own values. Ttherefore, in a democratic society, government art subsidies ensure that artists can be fully committed to their work while expressing themselves freely.",
    "question": "The dialogue most supports the claim that Ariel and Sasha disagree with each other about whether",
    "options": [
      "a society's values are expressed by its government",
      "art subsidies provided by a democratic government benefit art",
      "art's role is to challenge society's values",
      "artists can express themselves freely in a nondemocratic society"
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([Ariel, Sasha])\nstatements = EnumSort([society_values_expressed_by_government, democratic_subsidies_benefit_art, art_challenges_values, free_expression_in_nondemocratic_society])\nagrees = Function([positions, statements] -> [bool])\n\n# Constraints\nagrees(Ariel, society_values_expressed_by_government) ::: Ariel believes a society's values are expressed by its government\nNot(agrees(Ariel, democratic_subsidies_benefit_art)) ::: Ariel believes government art subsidies never benefit art\nagrees(Ariel, art_challenges_values) ::: Ariel believes art's role is to challenge society's values\n\nagrees(Sasha, democratic_subsidies_benefit_art) ::: Sasha believes democratic government art subsidies benefit art\nagrees(Sasha, art_challenges_values) ::: Sasha believes art should challenge society's values\n\n# Options\nQuestion ::: The dialogue most supports the claim that Ariel and Sasha disagree with each other about whether\nis_disagreement(agrees(Ariel, society_values_expressed_by_government) == agrees(Sasha, society_values_expressed_by_government)) ::: (a society's values are expressed by its government)\nis_disagreement(agrees(Ariel, democratic_subsidies_benefit_art) == agrees(Sasha, democratic_subsidies_benefit_art)) ::: (art subsidies provided by a democratic government benefit art)\nis_disagreement(agrees(Ariel, art_challenges_values) == agrees(Sasha, art_challenges_values)) ::: (art's role is to challenge society's values)\nis_disagreement(agrees(Ariel, free_expression_in_nondemocratic_society) == agrees(Sasha, free_expression_in_nondemocratic_society)) ::: (artists can express themselves freely in a nondemocratic society)"
    ]
  },
  {
    "id": "test_310",
    "context": "It is now clear that the ancient Egyptians were the first society to produce alcoholic beverages. It had been thought that the ancient Babylonians were the first; they had mastered the process of fermentation for making wine as early as 1500 B. C. However, archaeologists have discovered an Egyptian cup dating from 2000 B. C. whose sides depict what appears to be an Egyptian brewery, and whose chemical residue reveals that it contained a form of alcoholic beer.",
    "question": "The reasoning above is most vulnerable to criticism on which one of the following grounds?",
    "options": [
      "It makes a generalization about Egyptian society based on a sample so small that it is likely to be unrepresentative.",
      "It ignores the possibility that the first known instance of a kind is not the first instance of that kind.",
      "It uses the term \"alcoholic beverage\" in a different sense in the premises than in the conclusion.",
      "It presumes, without providing justification, that because one society developed a technology before another, the development in the latter was dependent on the development in the former."
    ],
    "raw_logic_programs": [
      "# Declarations\nsocieties = EnumSort([Egyptians, Babylonians])\nbeverages = EnumSort([alcoholic_beverages])\nevidence = Function([societies] -> [bool])\n\n# Constraints\nevidence(Egyptians) == True ::: Archaeologists have discovered an Egyptian cup dating from 2000 B.C. with evidence of alcoholic beer\nevidence(Babylonians) == True ::: The ancient Babylonians mastered the process of fermentation for making wine as early as 1500 B.C.\n\n# Options\nQuestion ::: The reasoning above is most vulnerable to criticism on which one of the following grounds?\nis_vulnerable(Exists([s:societies], evidence(s) == True) -> ForAll([s:societies], evidence(s) == True)) ::: (It makes a generalization about Egyptian society based on a sample so small that it is likely to be unrepresentative.\nis_vulnerable(Exists([s:societies], evidence(s) == True) -> Not(Exists([s:societies], evidence(s) == False))) ::: (It ignores the possibility that the first known instance of a kind is not the first instance of that kind.\nis_vulnerable(evidence(Egyptians) == True -> evidence(Babylonians) == False) ::: (It uses the term \"alcoholic beverage\" in a different sense in the premises than in the conclusion.\nis_vulnerable(evidence(Egyptians) == True -> evidence(Babylonians) == True) ::: (It presumes, without providing justification, that because one society developed a technology before another, the development in the latter was dependent on the development in the former."
    ]
  },
  {
    "id": "test_311",
    "context": "Wealth is not a good thing, for good things cause no harm at all, yet wealth is often harmful to people.",
    "question": "Which one of the following arguments is most similar in its pattern of reasoning to the argument above?",
    "options": [
      "Alex loves to golf, and no one in the chess club loves to golf. It follows that Alex is not in the chess club.",
      "Growth in industry is not a good thing for our town. Although the economy might improve, the pollution would be unbearable.",
      "There is usually more traffic at this time of day, unless it is a holiday. But since today is not a holiday, it is surprising that there is so little traffic.",
      "Isabella must be a contented baby. She smiles a great deal and hardly ever cries, like all happy people."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([wealth_argument, alex_argument, growth_argument, traffic_argument, isabella_argument])\npremises = EnumSort([good_things_no_harm, wealth_harmful, alex_golf, chess_club, growth_pollution, economy_improve, traffic_holiday, isabella_smiles, isabella_cries])\nconclusions = EnumSort([wealth_not_good, alex_not_chess, growth_not_good, traffic_surprising, isabella_contented])\nreasoning_patterns = EnumSort([pattern1, pattern2, pattern3, pattern4, pattern5])\nuses_pattern = Function([arguments] -> [reasoning_patterns])\n\n# Constraints\nuses_pattern(wealth_argument) == pattern1 ::: Wealth is not a good thing, for good things cause no harm at all, yet wealth is often harmful to people.\nuses_pattern(alex_argument) == pattern1 ::: Alex loves to golf, and no one in the chess club loves to golf. It follows that Alex is not in the chess club.\nuses_pattern(growth_argument) == pattern1 ::: Growth in industry is not a good thing for our town. Although the economy might improve, the pollution would be unbearable.\nuses_pattern(traffic_argument) == pattern3 ::: There is usually more traffic at this time of day, unless it is a holiday. But since today is not a holiday, it is surprising that there is so little traffic.\nuses_pattern(isabella_argument) == pattern4 ::: Isabella must be a contented baby. She smiles a great deal and hardly ever cries, like all happy people.\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its pattern of reasoning to the argument above?\nis_similar(uses_pattern(alex_argument) == uses_pattern(wealth_argument)) ::: (A)\nis_similar(uses_pattern(growth_argument) == uses_pattern(wealth_argument)) ::: (B)\nis_similar(uses_pattern(traffic_argument) == uses_pattern(wealth_argument)) ::: (C)\nis_similar(uses_pattern(isabella_argument) == uses_pattern(wealth_argument)) ::: (D)"
    ]
  },
  {
    "id": "test_312",
    "context": "Environmentalist: Efforts to attain an overall reduction in carbon use by convincing people to focus on their personal use of fossil fuels cannot achieve that goal. Even if most people changed their behavior, changes in personal use of fossil fuels cannot produce the needed reductions in carbon use. Only government policies can produce change on the required scale.",
    "question": "The environmentalist's argument requires assuming which one of the following?",
    "options": [
      "People who are concerned about environmental issues are more likely to support political candidates who support environmental issues.",
      "The calculations needed to determine how best to minimize one's personal use of fossil fuels are too difficult for individuals to carry out on their own.",
      "Convincing most people to focus on their personal use of fossil fuels would not lead to their successfully pressuring the government into implementing policies that reduce carbon use.",
      "Efforts to convince people to focus on reducing their personal use of fossil fuels have been made only by those who are not currently involved in framing government policy."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([individuals, government])\nactions = EnumSort([personal_use_reduction, policy_implementation])\neffects = EnumSort([carbon_reduction])\n\n# Constraints\nForAll([p:people], Exists([a:actions], a == personal_use_reduction)) ::: Efforts to attain an overall reduction in carbon use by convincing people to focus on their personal use of fossil fuels\nForAll([p:people], Not(Exists([e:effects], e == carbon_reduction))) ::: Changes in personal use of fossil fuels cannot produce the needed reductions in carbon use\nExists([a:actions], a == policy_implementation) ::: Only government policies can produce change on the required scale\n\n# Options\nQuestion ::: The environmentalist's argument requires assuming which one of the following?\nis_required(Implies(Exists([p:people], p == individuals), Not(Exists([a:actions], a == policy_implementation)))) ::: (C) Convincing most people to focus on their personal use of fossil fuels would not lead to their successfully pressuring the government into implementing policies that reduce carbon use."
    ]
  },
  {
    "id": "test_313",
    "context": "Researchers studying artificial sweeteners have long claimed that the perception of sweetness is determined by the activation of a single type of receptor on the tongue called a sweetness receptor. They have also claimed that any given individual molecule of substance can activate at most one sweetness receptor and that the fewer molecules that are required to activate a receptor, the sweeter that substance will be perceived to be. Now, the researchers claim to have discovered a substance of which only one molecule is needed to activate any sweetness receptor.",
    "question": "Which one of the following conclusions is most strongly supported by the researchers' claims, if all of those claims are true?",
    "options": [
      "The more molecules of a substance that are required to activate a single sweetness receptor, the more bitter that substance will be perceived to be.",
      "A substance that does not activate a sweetness receptor will activate a taste receptor of another type.",
      "The more sweetness receptors a person has on his or her tongue, the more likely it is that that person will find sweet sensations pleasurable.",
      "No substance will be found that is perceived to be sweeter than the substance the researchers have discovered."
    ],
    "raw_logic_programs": [
      "# Declarations\nreceptors = EnumSort([sweetness_receptor])\nsubstances = EnumSort([substance])\nactivation = Function([substances, receptors] -> [int])\n\n# Constraints\nForAll([s:substances], Count([r:receptors], activation(s, r) <= 1)) ::: any given individual molecule of substance can activate at most one sweetness receptor\nForAll([s:substances], Exists([r:receptors], activation(s, r) == 1)) ::: the fewer molecules that are required to activate a receptor, the sweeter that substance will be perceived to be\nExists([s:substances], ForAll([r:receptors], activation(s, r) == 1)) ::: researchers claim to have discovered a substance of which only one molecule is needed to activate any sweetness receptor\n\n# Options\nQuestion ::: Which one of the following conclusions is most strongly supported by the researchers' claims, if all of those claims are true?\nis_supported(ForAll([s:substances], Exists([r:receptors], activation(s, r) > 1) -> Not(sweeter_than(s, discovered_substance)))) ::: (D) No substance will be found that is perceived to be sweeter than the substance the researchers have discovered."
    ]
  },
  {
    "id": "test_314",
    "context": "In an experiment, scientists changed a single gene in cloned flies of a certain species. These cloned flies lacked the eye cells that give flies ultraviolet vision, even though cloned siblings with unaltered, otherwise identical genes had normal vision. Thus, scientists have shown that flies of this species lacking ultraviolet vision must have some damage to this gene.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "Ultraviolet vision is an environmentally influenced trait in the species of flies in the experiment.",
      "The gene change had no effect on the flies other than the lack of ultraviolet vision cells.",
      "Ultraviolet vision is a trait found in all species of flies.",
      "No other gene in the flies in the experiment is required for the formation of the ultraviolet vision cells."
    ],
    "raw_logic_programs": [
      "# Declarations\ngenes = EnumSort([altered, unaltered])\ntraits = EnumSort([ultraviolet_vision, normal_vision])\nflies = EnumSort([cloned_with_altered_gene, cloned_with_unaltered_gene])\nhas_trait = Function([flies, traits] -> [bool])\n\n# Constraints\nhas_trait(cloned_with_unaltered_gene, normal_vision) ::: cloned siblings with unaltered, otherwise identical genes had normal vision\nNot(has_trait(cloned_with_altered_gene, ultraviolet_vision)) ::: cloned flies with altered gene lacked the eye cells for ultraviolet vision\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_required(ForAll([f:flies], Implies(has_trait(f, ultraviolet_vision), Not(has_trait(f, altered))))) ::: (A) Ultraviolet vision is an environmentally influenced trait in the species of flies in the experiment.\nis_required(ForAll([f:flies], Implies(has_trait(f, altered), Not(has_trait(f, ultraviolet_vision))))) ::: (B) The gene change had no effect on the flies other than the lack of ultraviolet vision cells.\nis_required(Exists([f:flies], has_trait(f, ultraviolet_vision))) ::: (C) Ultraviolet vision is a trait found in all species of flies.\nis_required(ForAll([f:flies], Implies(has_trait(f, ultraviolet_vision), Not(has_trait(f, altered))))) ::: (D) No other gene in the flies in the experiment is required for the formation of the ultraviolet vision cells."
    ]
  },
  {
    "id": "test_315",
    "context": "A random sample or shoppers responded to the questions contained in a marketing survey. Six months later, another random sample of shoppers responded to exactly the same questions, except that the questions were now arranged in a different order. The pattern of responses to many individual questions was greatly different, thus demonstrating that a question will sometimes elicit different responses depending only on what question precedes it.",
    "question": "The argument above depends on which of the following assumptions?",
    "options": [
      "There was no motive for the second survey except that of discovering whether the ordering of the questions mattered.",
      "The first sample of shoppers did not have any individuals in common with the survey sample of six months later.",
      "Shoppers who respond to a marketing survey do not generally remember six months later what responses they gave.",
      "The survey was not composed of questions to which shoppers would give different responses at different times of the year."
    ],
    "raw_logic_programs": [
      "# Declarations\nsamples = EnumSort([first_sample, second_sample])\nquestions = EnumSort([q1, q2, ..., qn])  # Assuming n questions\nresponses = Function([samples, questions] -> [response_type])  # response_type represents the type of response\n\n# Constraints\nForAll([q:questions], responses(first_sample, q) != responses(second_sample, q)) ::: The pattern of responses to many individual questions was greatly different\n\n# Options\nQuestion ::: The argument above depends on which of the following assumptions?\nis_assumption(ForAll([q:questions], responses(first_sample, q) == responses(second_sample, q))) ::: (A) There was no motive for the second survey except that of discovering whether the ordering of the questions mattered.\nis_assumption(Not(Exists([s:samples], responses(s, q) == responses(s, q)))) ::: (B) The first sample of shoppers did not have any individuals in common with the survey sample of six months later.\nis_assumption(ForAll([s:samples], Not(Exists([q:questions], responses(s, q) == responses(s, q))))) ::: (C) Shoppers who respond to a marketing survey do not generally remember six months later what responses they gave.\nis_assumption(Not(Exists([q:questions], responses(first_sample, q) != responses(second_sample, q)))) ::: (D) The survey was not composed of questions to which shoppers would give different responses at different times of the year."
    ]
  },
  {
    "id": "test_316",
    "context": "Problem: If Shayna congratulates Daniel on his award, she will misrepresent her true feelings. However, if Shayna does not congratulate Daniel, she will hurt his feelings. Principle: One should never be insincere about one' s feelings, except possibly where one believes that the person with whom one is speaking would prefer kindness to honesty.",
    "question": "The principle, if valid, most helps to justify the reasoning in which one of the following arguments concerning the problem?",
    "options": [
      "Daniel's feelings would be hurt if he knew that congratulations from Shayna were insincere, so Shayna should not congratulate him.",
      "Shayna has no opinion about whether Daniel would prefer kindness to honesty, so she should not congratulate him.",
      "If Shayna congratulates Daniel, she will avoid hurting his feelings, so she should congratulate him.",
      "Shayna believes that kindness should be preferred to dishonesty when speaking to others, so she should not tell Daniel her true feelings."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Shayna, Daniel])\nactions = EnumSort([congratulate, not_congratulate])\nfeelings = EnumSort([hurt, not_hurt])\nsincerity = EnumSort([sincere, insincere])\npreferences = EnumSort([kindness, honesty])\nbelieves = Function([people, preferences] -> [bool])\nresults = Function([actions, feelings] -> [bool])\nrepresents = Function([actions] -> [sincerity])\n\n# Constraints\nImplies(represents(congratulate) == insincere, results(congratulate) == hurt) ::: If Shayna congratulates Daniel insincerely, it will hurt his feelings\nImplies(represents(not_congratulate) == sincere, results(not_congratulate) == hurt) ::: If Shayna does not congratulate Daniel, it will hurt his feelings\nForAll([p:preferences], Implies(believes(Shayna, p), p == kindness)) ::: Shayna believes kindness should be preferred to dishonesty\n\n# Options\nQuestion ::: The principle, if valid, most helps to justify the reasoning in which one of the following arguments concerning the problem?\nis_justified(Implies(results(congratulate) == hurt, represents(congratulate) == insincere)) ::: (A) Daniel's feelings would be hurt if he knew that congratulations from Shayna were insincere, so Shayna should not congratulate him.\nis_justified(Not(believes(Shayna, kindness)), represents(congratulate) == insincere) ::: (B) Shayna has no opinion about whether Daniel would prefer kindness to honesty, so she should not congratulate him.\nis_justified(results(congratulate) == not_hurt, represents(congratulate) == sincere) ::: (C) If Shayna congratulates Daniel, she will avoid hurting his feelings, so she should congratulate him.\nis_justified(believes(Shayna, kindness), represents(not_congratulate) == sincere) ::: (D) Shayna believes that kindness should be preferred to dishonesty when speaking to others, so she should not tell Daniel her true feelings."
    ]
  },
  {
    "id": "test_317",
    "context": "Although nondairy coffee lighteners made with coconut oil contain 2 grams of saturated fat per tablespoon, or 7 times more than does whole milk, those lighteners usually contain no cholesterol. Yet one tablespoon of such lighteners causes the consumer' s blood cholesterol to rise to a higher level than does an identical amount of whole milk, which contains 2 milligrams of cholesterol per tablespoon. Manufacturers of coffee lighteners based on coconut oil claim that their products usually cause the typical consumer' s blood cholesterol to rise to a lower level than does the use of whole milk as a lightener.",
    "question": "Which one of the following, if true, provides the most support for the manufacturers' claim?",
    "options": [
      "Consumers typically add to their coffee substantially smaller quantities of coconut oil-based lighteners than of whole milk.",
      "Consumers of lighteners made with coconut oil who avoid other high-cholesterol foods and exercise more than average tend to have lower-than-average blood cholesterol levels.",
      "Coffee is frequently consumed with pastries and other rich desserts that themselves result in high blood cholesterol levels.",
      "Most consumers are convinced that whole dairy products increase blood cholesterol and that nondairy coffee lighteners do not."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([lightener, whole_milk])\neffects = Function([variables] -> [int])\n\n# Constraints\neffects(lightener) > effects(whole_milk) ::: One tablespoon of such lighteners causes the consumer's blood cholesterol to rise to a higher level than does an identical amount of whole milk\neffects(whole_milk) > effects(lightener) ::: Manufacturers claim that their products usually cause the typical consumer's blood cholesterol to rise to a lower level than does the use of whole milk\n\n# Options\nQuestion ::: Which one of the following, if true, provides the most support for the manufacturers' claim?\nis_supportive(Consumers typically add to their coffee substantially smaller quantities of coconut oil-based lighteners than of whole milk) ::: (A)\nis_supportive(Consumers of lighteners made with coconut oil who avoid other high-cholesterol foods and exercise more than average tend to have lower-than-average blood cholesterol levels) ::: (B)\nis_supportive(Coffee is frequently consumed with pastries and other rich desserts that themselves result in high blood cholesterol levels) ::: (C)\nis_supportive(Most consumers are convinced that whole dairy products increase blood cholesterol and that nondairy coffee lighteners do not) ::: (D)"
    ]
  },
  {
    "id": "test_318",
    "context": "A running track with a hard surface makes for greater running speed than a soft one, at least under dry conditions, because even though step length is shorter on a hard surface, the time the runner' s foot remains in contact with the running surface is less with a hard surface.",
    "question": "Which one of the following, if true, is evidence that the explanation given above is only a partial one?",
    "options": [
      "To remain in top condition, a soft track surface requires different maintenance procedures than does a hard one.",
      "The tracks at which the world's fastest running times have been recorded are located well above sea level, where the air is relatively thin.",
      "In general, taller runners have greater average step length than shorter runners do.",
      "Hard tracks enhance a runner's speed by making it easier for the runner to maintain a posture that minimizes wind resistance."
    ],
    "raw_logic_programs": [
      "# Declarations\nsurfaces = EnumSort([hard, soft])\nconditions = EnumSort([dry, wet])\nfactors = EnumSort([step_length, contact_time, posture, wind_resistance])\neffects = Function([surfaces, conditions, factors] -> [bool])\n\n# Constraints\neffects(hard, dry, step_length) == False ::: step length is shorter on a hard surface\neffects(hard, dry, contact_time) == True ::: the time the runner's foot remains in contact with the running surface is less with a hard surface\n\n# Options\nQuestion ::: Which one of the following, if true, is evidence that the explanation given above is only a partial one?\nis_partial(Exists([f:factors], effects(hard, dry, f) == True)) ::: (A) To remain in top condition, a soft track surface requires different maintenance procedures than does a hard one.\nis_partial(Exists([f:factors], effects(hard, dry, f) == True)) ::: (B) The tracks at which the world's fastest running times have been recorded are located well above sea level, where the air is relatively thin.\nis_partial(Exists([f:factors], effects(hard, dry, f) == True)) ::: (C) In general, taller runners have greater average step length than shorter runners do.\nis_partial(Exists([f:factors], effects(hard, dry, f) == True)) ::: (D) Hard tracks enhance a runner's speed by making it easier for the runner to maintain a posture that minimizes wind resistance."
    ]
  },
  {
    "id": "test_319",
    "context": "Of the five bill collectors at Apex Collection Agency, Mr. Young has the highest rate of unsuccessful collections. Yet Mr. Young is the best bill collector on the agency' s staff.",
    "question": "Which one of the following, if true, most helps to resolve the apparent discrepancy?",
    "options": [
      "None of the bill collectors at the agency has been on the agency's staff longer than Mr. Young has.",
      "The other four bill collectors at the agency all consider Mr. Young to be a very capable bill collector.",
      "Mr. Young's rate of collections per year has remained fairly steady in the last few years.",
      "Mr. Young is assigned the majority of the most difficult cases at the agency."
    ],
    "raw_logic_programs": [
      "# Declarations\ncollectors = EnumSort([Mr_Young, Collector2, Collector3, Collector4, Collector5])\nperformance = Function([collectors] -> [int])\ndifficulty = Function([collectors] -> [int])\n\n# Constraints\nForAll([c:collectors], performance(c) >= 0) ::: Each collector has a non-negative performance rate\nperformance(Mr_Young) == Max([performance(c) for c in collectors]) ::: Mr. Young is the best bill collector\nperformance(Mr_Young) == Min([performance(c) for c in collectors]) ::: Mr. Young has the highest rate of unsuccessful collections\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent discrepancy?\nis_resolving(difficulty(Mr_Young) == Max([difficulty(c) for c in collectors])) ::: (Mr. Young is assigned the majority of the most difficult cases at the agency.)"
    ]
  },
  {
    "id": "test_320",
    "context": "Although Stillwater Pond has been polluted by farm runoff for years, several species of fish still live there. The local fishing guide says that \"the most populous fish species in the pond is also the one that has adapted best to living in polluted water. \" So if, as recent studies suggest, the most populous fish species in the pond is the bullhead catfish, then it must be that the local fishing guide believes that the species of fish in the pond that has adapted best to living in polluted water is the bullhead catfish.",
    "question": "The argument above is most vulnerable to criticism on the grounds that it",
    "options": [
      "fails to take into account the possibility that the local fishing guide mistakenly believes that some fish species other than the bullhead catfish is the most populous fish species in Stillwater Pond",
      "fails to take into account the possibility that the catfish in Stillwater Pond had to adapt very little to survive in polluted water",
      "takes for granted that the local fishing guide believes that Stillwater Pond has been polluted by farm runoff for years",
      "fails to take into account the possibility that the recent studies on fish populations in Stillwater Pond are inaccurate"
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([bullhead_catfish, other_species])\nbeliefs = Function([species] -> [bool])\nmost_populous = Function([species] -> [bool])\nbest_adapted = Function([species] -> [bool])\n\n# Constraints\nForAll([s:species], Implies(most_populous(s), beliefs(s))) ::: The local fishing guide believes that the most populous fish species is the best adapted to polluted water\nmost_populous(bullhead_catfish) ::: Recent studies suggest that the most populous fish species is the bullhead catfish\n\n# Options\nQuestion ::: The argument above is most vulnerable to criticism on the grounds that it\nis_vulnerable(Exists([s:species], And(Not(most_populous(s)), beliefs(s)))) ::: (fails to take into account the possibility that the local fishing guide mistakenly believes that some fish species other than the bullhead catfish is the most populous fish species in Stillwater Pond\nis_vulnerable(Not(best_adapted(bullhead_catfish))) ::: (fails to take into account the possibility that the catfish in Stillwater Pond had to adapt very little to survive in polluted water\nis_vulnerable(Not(beliefs(bullhead_catfish))) ::: (takes for granted that the local fishing guide believes that Stillwater Pond has been polluted by farm runoff for years\nis_vulnerable(Not(most_populous(bullhead_catfish))) ::: (fails to take into account the possibility that the recent studies on fish populations in Stillwater Pond are inaccurate"
    ]
  },
  {
    "id": "test_321",
    "context": "If the standards committee has a quorum, then the general assembly will begin at 6: 00 P. M. today. If the awards committee has a quorum, then the general assembly will begin at 7: 00 P. M. today.",
    "question": "Which one of the following statements follows logically from the statements above?",
    "options": [
      "If the standards committee has a quorum, then foe awards committee does not have a quorum.",
      "If the general assembly does not begin at 6:00 P. M. today, then the awards committee has a quorum.",
      "If the general assembly does not begin at 7:00 P. M. today, then the standards committee has a quorum.",
      "If the general assembly begins at 6:00 RM. today, then the standards committee has a quorum"
    ],
    "raw_logic_programs": [
      "# Declarations\ncommittees = EnumSort([standards, awards])\ntimes = EnumSort([six_pm, seven_pm])\nquorum = Function([committees] -> [bool])\nassembly_begins = Function([times] -> [bool])\n\n# Constraints\nImplies(quorum(standards), assembly_begins(six_pm)) ::: If the standards committee has a quorum, then the general assembly will begin at 6:00 P.M. today\nImplies(quorum(awards), assembly_begins(seven_pm)) ::: If the awards committee has a quorum, then the general assembly will begin at 7:00 P.M. today\n\n# Options\nQuestion ::: Which one of the following statements follows logically from the statements above?\nImplies(quorum(standards), Not(quorum(awards))) ::: (A) If the standards committee has a quorum, then the awards committee does not have a quorum.\nImplies(Not(assembly_begins(six_pm)), quorum(awards)) ::: (B) If the general assembly does not begin at 6:00 P.M. today, then the awards committee has a quorum.\nImplies(Not(assembly_begins(seven_pm)), quorum(standards)) ::: (C) If the general assembly does not begin at 7:00 P.M. today, then the standards committee has a quorum.\nImplies(assembly_begins(six_pm), quorum(standards)) ::: (D) If the general assembly begins at 6:00 P.M. today, then the standards committee has a quorum."
    ]
  },
  {
    "id": "test_322",
    "context": "A company' s two divisions performed with remarkable consistency over the past three years: in each of those years, the pharmaceuticals division has accounted for roughly 20 percent of dollar sales and 40 percent of profits, and the chemicals division for the balance.",
    "question": "Regarding the past three years, which of the following can properly be inferred from the statement above?",
    "options": [
      "The pharmaceuticals division has faced stiffer competition in its markets than has the chemicals division.",
      "Total dollar sales for each of the company's divisions have remained roughly constant.",
      "The chemicals division has realized lower profits per dollar of sales than has the pharmaceuticals division.",
      "The product mix offered by each of the company's divisions has remained unchanged."
    ],
    "raw_logic_programs": [
      "# Declarations\ndivisions = EnumSort([pharmaceuticals, chemicals])\nmetrics = EnumSort([dollar_sales, profits])\nyears = EnumSort([year1, year2, year3])\npercentage = Function([divisions, metrics, years] -> [int])\n\n# Constraints\nForAll([y:years], And(percentage(pharmaceuticals, dollar_sales, y) == 20, percentage(pharmaceuticals, profits, y) == 40)) ::: Pharmaceuticals division accounts for 20% of dollar sales and 40% of profits each year\nForAll([y:years], And(percentage(chemicals, dollar_sales, y) == 80, percentage(chemicals, profits, y) == 60)) ::: Chemicals division accounts for the balance each year\n\n# Options\nQuestion ::: Regarding the past three years, which of the following can properly be inferred from the statement above?\nis_inferred(ForAll([y:years], percentage(pharmaceuticals, dollar_sales, y) < percentage(chemicals, dollar_sales, y))) ::: (The pharmaceuticals division has faced stiffer competition in its markets than has the chemicals division.\nis_inferred(ForAll([y:years], percentage(pharmaceuticals, dollar_sales, y) == percentage(pharmaceuticals, dollar_sales, year1))) ::: (Total dollar sales for each of the company's divisions have remained roughly constant.\nis_inferred(ForAll([y:years], percentage(chemicals, profits, y) < percentage(pharmaceuticals, profits, y))) ::: (The chemicals division has realized lower profits per dollar of sales than has the pharmaceuticals division.\nis_inferred(ForAll([y:years], And(percentage(pharmaceuticals, dollar_sales, y) == percentage(pharmaceuticals, dollar_sales, year1), percentage(chemicals, dollar_sales, y) == percentage(chemicals, dollar_sales, year1)))) ::: (The product mix offered by each of the company's divisions has remained unchanged."
    ]
  },
  {
    "id": "test_323",
    "context": "In the past ten years, there have been several improvements in mountain-climbing equipment. These improvements have made the sport both safer and more enjoyable for experienced climbers. Despite these improvements, however, the rate of mountain-climbing injuries has doubled in the past ten years.",
    "question": "If all of the statements above are true, which of the following, if true, best reconciles their apparent discrepancy?",
    "options": [
      "Although the rate of mountain-climbing injuries has increased, the rate of mountain-climbing deaths has not changed.",
      "Mountain climbing, although a dangerous sport, does not normally result in injury to the experienced climber.",
      "Many climbers, lulled into a false sense of security, use the new equipment to attempt climbing feats of which they are not capable.",
      "Some mountain-climbing injuries are caused by unforeseeable weather conditions. ."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([improvements, safer_enjoyable, injuries_doubled])\nreconciliations = EnumSort([deaths_unchanged, experienced_safe, false_security, weather_conditions])\ntrue_statement = Function([statements] -> [bool])\ntrue_reconciliation = Function([reconciliations] -> [bool])\n\n# Constraints\ntrue_statement(improvements) ::: There have been several improvements in mountain-climbing equipment.\ntrue_statement(safer_enjoyable) ::: These improvements have made the sport both safer and more enjoyable for experienced climbers.\ntrue_statement(injuries_doubled) ::: The rate of mountain-climbing injuries has doubled in the past ten years.\n\n# Options\nQuestion ::: If all of the statements above are true, which of the following, if true, best reconciles their apparent discrepancy?\nis_best_reconciliation(true_reconciliation(false_security)) ::: (Many climbers, lulled into a false sense of security, use the new equipment to attempt climbing feats of which they are not capable.)\nis_best_reconciliation(true_reconciliation(deaths_unchanged)) ::: (Although the rate of mountain-climbing injuries has increased, the rate of mountain-climbing deaths has not changed.)\nis_best_reconciliation(true_reconciliation(experienced_safe)) ::: (Mountain climbing, although a dangerous sport, does not normally result in injury to the experienced climber.)\nis_best_reconciliation(true_reconciliation(weather_conditions)) ::: (Some mountain-climbing injuries are caused by unforeseeable weather conditions.)"
    ]
  },
  {
    "id": "test_324",
    "context": "Petrochemical industry officials have said that the extreme pressure exerted on plant managers during the last five years to improve profits by cutting costs has done nothing to impair the industry's ability to operate safely. However, environmentalists contend that the recent rash of serious oil spills and accidents at petrochemical plants is traceable to cost-cutting measures.",
    "question": "Which of the following, if true, would provide the strongest support for the position held by industry officials?",
    "options": [
      "There is evidence that the most damaging of the recent oil spills would have been prevented had cost-cutting measures not been instituted.",
      "Despite major cutbacks in most other areas of operation, the petrochemical industry has devoted more of its resources to environmental and safety measures in the last five years than in the preceding five years.",
      "Petrochemical industry unions recently demanded that additional money be spent on safety and environment protection measures, but the unions readily abandoned those demands in exchange for job security.",
      "Both the large fines and adverse publicity generated by the most recent oil spills have prompted the petrochemical industry to increase the resources devoted to oil-spill prevention."
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([industry_officials, environmentalists])\nstatements = EnumSort([cost_cutting_not_impair_safety, rash_of_spills_due_to_cost_cutting])\nevidence = EnumSort([evidence_prevent_spills, more_resources_to_safety, unions_abandon_safety_demands, increased_resources_due_to_fines])\nsupports = Function([positions, evidence] -> [bool])\n\n# Constraints\nsupports(industry_officials, more_resources_to_safety) ::: Despite major cutbacks in most other areas of operation, the petrochemical industry has devoted more of its resources to environmental and safety measures in the last five years than in the preceding five years\n\n# Options\nQuestion ::: Which of the following, if true, would provide the strongest support for the position held by industry officials?\nis_strongest_support(supports(industry_officials, evidence_prevent_spills)) ::: (A)\nis_strongest_support(supports(industry_officials, more_resources_to_safety)) ::: (B)\nis_strongest_support(supports(industry_officials, unions_abandon_safety_demands)) ::: (C)\nis_strongest_support(supports(industry_officials, increased_resources_due_to_fines)) ::: (D)"
    ]
  },
  {
    "id": "test_325",
    "context": "Columnist: There are certain pesticides that, even though they have been banned for use in the United States for nearly 30 years, are still manufactured there and exported to other countries. In addition to jeopardizing the health of people in these other countries, this practice greatly increases the health risk to U. S. consumers, for these pesticides are often used on agricultural products imported into the United States.",
    "question": "Which one of the following, if true, most seriously weakens the columnist's argument?",
    "options": [
      "The United States is not the only country that manufactures and exports the pesticides that are banned for use in the United States.",
      "Trace amounts of some of the pesticides banned for use in the United States can be detected in the soil where they were used 30 years ago.",
      "Most of the pesticides that are manufactured in the United States and exported are not among those banned for use in the United States.",
      "There are many pesticides that are banned for use in other countries that are not banned for use in the United States."
    ],
    "raw_logic_programs": [
      "# Declarations\npesticides = EnumSort([banned_US, not_banned_US])\ncountries = EnumSort([US, other_countries])\nmanufactures = Function([countries, pesticides] -> [bool])\nexports = Function([countries, pesticides] -> [bool])\nimports = Function([countries, pesticides] -> [bool])\nhealth_risk = Function([countries] -> [bool])\n\n# Constraints\nForAll([p:pesticides], Implies(manufactures(US, p), exports(US, p))) ::: Pesticides manufactured in the US are exported\nForAll([p:pesticides], Implies(exports(other_countries, p), imports(US, p))) ::: Pesticides exported by other countries are imported into the US\nForAll([p:pesticides], Implies(imports(US, p), health_risk(US))) ::: Imported pesticides pose a health risk to US consumers\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the columnist's argument?\nis_weakening(And(manufactures(other_countries, banned_US), exports(other_countries, banned_US))) ::: (The United States is not the only country that manufactures and exports the pesticides that are banned for use in the United States.\nis_weakening(Exists([p:pesticides], And(p == banned_US, TraceAmountsDetected(p)))) ::: (Trace amounts of some of the pesticides banned for use in the United States can be detected in the soil where they were used 30 years ago.\nis_weakening(ForAll([p:pesticides], Implies(manufactures(US, p), Not(p == banned_US)))) ::: (Most of the pesticides that are manufactured in the United States and exported are not among those banned for use in the United States.\nis_weakening(Exists([p:pesticides], And(p == banned_US, Not(banned_in_other_countries(p))))) ::: (There are many pesticides that are banned for use in other countries that are not banned for use in the United States."
    ]
  },
  {
    "id": "test_326",
    "context": "Researcher: Accurate readings of air pollution are expensive to obtain. Lichens are complex plantlike organisms that absorb airborne pollutants and so may offer a cheaper way to monitor air quality. To investigate this, I harvested lichens at sites plagued by airborne copper pollution, determined the lichens' copper concentration, and compared the results with those acquired using mechanical monitoring devices. The lichens were as accurate as the best equipment available. Thus, lichens can effectively replace expensive pollution-monitoring devices without loss of information.",
    "question": "Which one of the following, if true, most strengthens the researcher's argument?",
    "options": [
      "Lichens absorb all other significant air pollutants in a manner similar to their absorption of copper.",
      "Copper particles are a component of air pollution in several locales.",
      "Mechanical monitoring devices have not already been installed in areas where air pollution is a serious problem.",
      "Lichens can easily be grown in laboratories."
    ],
    "raw_logic_programs": [
      "# Declarations\npollutants = EnumSort([copper, other_pollutants])\nmonitoring_methods = EnumSort([lichens, mechanical_devices])\naccuracy = Function([monitoring_methods, pollutants] -> [bool])\n\n# Constraints\naccuracy(lichens, copper) == accuracy(mechanical_devices, copper) ::: The lichens were as accurate as the best equipment available for copper\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the researcher's argument?\nis_strongest(ForAll([p:pollutants], accuracy(lichens, p) == accuracy(mechanical_devices, p))) ::: (A) Lichens absorb all other significant air pollutants in a manner similar to their absorption of copper\nis_strongest(Exists([l:locales], copper in air_pollution(l))) ::: (B) Copper particles are a component of air pollution in several locales\nis_strongest(Not(Exists([l:locales], mechanical_devices_installed(l)))) ::: (C) Mechanical monitoring devices have not already been installed in areas where air pollution is a serious problem\nis_strongest(Exists([l:labs], lichens_grown(l))) ::: (D) Lichens can easily be grown in laboratories"
    ]
  },
  {
    "id": "test_327",
    "context": "Joan got A' s on all her homework assignments, so if she had gotten an A on her term paper, she could pass the course even without doing the class presentation. Unfortunately, she did not get an A on her term paper, so it is obvious that she will have to do the class presentation to pass the course.",
    "question": "The argument's reasoning is questionable because the argument",
    "options": [
      "presupposes without justification that Joan's not getting an A on her term paper prevents her from passing the course without doing the class presentation",
      "fails to take into account the possibility that some students get A's on their term papers but do not pass the course",
      "ignores the possibility that Joan must either have an A on her term paper or do the class presentation to pass the course",
      "overlooks the importance of class presentations to a student's overall course grade"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Joan])\nassignments = EnumSort([homework, term_paper, class_presentation])\ngrades = EnumSort([A, not_A])\npass_course = Function([students] -> [bool])\ngrade = Function([students, assignments] -> [grades])\n\n# Constraints\nForAll([s:students], grade(s, homework) == A) ::: Joan got A's on all her homework assignments\nForAll([s:students], Implies(grade(s, term_paper) == A, pass_course(s))) ::: if she had gotten an A on her term paper, she could pass the course even without doing the class presentation\nForAll([s:students], grade(s, term_paper) != A) ::: she did not get an A on her term paper\nForAll([s:students], Implies(Not(pass_course(s)), grade(s, class_presentation) == A)) ::: she will have to do the class presentation to pass the course\n\n# Options\nQuestion ::: The argument's reasoning is questionable because the argument\nis_questionable(ForAll([s:students], Implies(grade(s, term_paper) != A, Not(pass_course(s))))) ::: (presupposes without justification that Joan's not getting an A on her term paper prevents her from passing the course without doing the class presentation\nis_questionable(Exists([s:students], And(grade(s, term_paper) == A, Not(pass_course(s))))) ::: (fails to take into account the possibility that some students get A's on their term papers but do not pass the course\nis_questionable(ForAll([s:students], Or(grade(s, term_paper) == A, grade(s, class_presentation) == A))) ::: (ignores the possibility that Joan must either have an A on her term paper or do the class presentation to pass the course\nis_questionable(Exists([s:students], grade(s, class_presentation) == A)) ::: (overlooks the importance of class presentations to a student's overall course grade"
    ]
  },
  {
    "id": "test_328",
    "context": "Candle Corporation' s television stations are likely to have more income from advertisers than previously. This is because advertisers prefer to reach people in the 18- to 49-year-old age group and the number of people in that group watching Candle television is increasing. Furthermore, among Candle viewers, the percentage of viewers 18 to 49 years old is increasing.",
    "question": "Which of the following, if true, would most strengthen the argument that Candle Corporation will receive more income from advertisers?",
    "options": [
      "There will be increasingly more advertisements on television that are directed at viewers who are over 49 years old.",
      "Among people over 49 years old, fewer viewers of Candle stations buy products advertised on television than do viewers of other stations",
      "People 18 to 49 years old generally have less disposable income to spend than do people over 49 years old.",
      "Advertisers carefully monitor the demographic characteristics of television audiences and purchase advertising time to reach the audiences they prefer to reach."
    ],
    "raw_logic_programs": [
      "# Declarations\nage_groups = EnumSort([under_18, age_18_to_49, over_49])\nviewers = Function([age_groups] -> [int])\nadvertising_income = Function() -> [int]\n\n# Constraints\nviewers(age_18_to_49) > 0 ::: the number of people in the 18- to 49-year-old age group watching Candle television is increasing\nForAll([a:age_groups], viewers(a) >= 0) ::: the number of viewers in each age group is non-negative\nadvertising_income() > 0 ::: Candle Corporation's television stations are likely to have more income from advertisers\n\n# Options\nQuestion ::: Which of the following, if true, would most strengthen the argument that Candle Corporation will receive more income from advertisers?\nis_strongest(ForAll([a:age_groups], Implies(a == age_18_to_49, viewers(a) > viewers(over_49)))) ::: (There will be increasingly more advertisements on television that are directed at viewers who are over 49 years old.\nis_strongest(ForAll([a:age_groups], Implies(a == over_49, viewers(a) < viewers(age_18_to_49)))) ::: (Among people over 49 years old, fewer viewers of Candle stations buy products advertised on television than do viewers of other stations\nis_strongest(ForAll([a:age_groups], Implies(a == age_18_to_49, viewers(a) < viewers(over_49)))) ::: (People 18 to 49 years old generally have less disposable income to spend than do people over 49 years old.\nis_strongest(Exists([a:age_groups], And(a == age_18_to_49, viewers(a) > 0))) ::: (Advertisers carefully monitor the demographic characteristics of television audiences and purchase advertising time to reach the audiences they prefer to reach."
    ]
  },
  {
    "id": "test_329",
    "context": "The trees always blossom in May if April rainfall exceeds 5 centimeters. If April rainfall exceeds 5 centimeters, then the reservoirs are always full on May 1. The reservoirs were not full this May 1 and thus the trees will not blossom this May.",
    "question": "Which one of the following exhibits a flawed pattern of reasoning most similar to the flawed pattern of reasoning in the argument above?",
    "options": [
      "The jar reaches optimal temperature if it is held over the burner for 2 minutes. The contents of the jar liquefy immediately if the jar is at optimal temperature. The jar was held over the burner for 2 minutes, so the contents of the jar must have liquefied immediately.",
      "A book is classified \"special\" if it is more than 200 years old. If a book was set with wooden type, then it is more than 200 years old. This book is not classified \"special, \" so it is not printed with wooden type.",
      "If the garlic is in the pantry, then it is still fresh. And the potatoes are on the basement stairs if the garlic is in the pantry. The potatoes are not on the basement stairs, so the garlic is not still fresh.",
      "If the kiln is too hot, then the plates will crack. If the plates crack, then the artisan must redo the order. The artisan need not redo the order. Thus, the kiln was not too hot."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([April_rainfall_exceeds_5cm, Trees_blossom_in_May, Reservoirs_full_on_May_1])\nconditions = Function([events] -> [bool])\n\n# Constraints\nImplies(conditions(April_rainfall_exceeds_5cm), conditions(Trees_blossom_in_May)) ::: The trees always blossom in May if April rainfall exceeds 5 centimeters\nImplies(conditions(April_rainfall_exceeds_5cm), conditions(Reservoirs_full_on_May_1)) ::: If April rainfall exceeds 5 centimeters, then the reservoirs are always full on May 1\nNot(conditions(Reservoirs_full_on_May_1)) ::: The reservoirs were not full this May 1\nNot(conditions(Trees_blossom_in_May)) ::: Thus the trees will not blossom this May\n\n# Options\nQuestion ::: Which one of the following exhibits a flawed pattern of reasoning most similar to the flawed pattern of reasoning in the argument above?\nis_similar_flawed_pattern(\n    Implies(conditions(Jar_held_over_burner_2_minutes), conditions(Jar_reaches_optimal_temperature)),\n    Implies(conditions(Jar_reaches_optimal_temperature), conditions(Jar_contents_liquefy_immediately)),\n    conditions(Jar_held_over_burner_2_minutes),\n    conditions(Jar_contents_liquefy_immediately)\n) ::: (A)\n\nis_similar_flawed_pattern(\n    Implies(conditions(Book_more_than_200_years_old), conditions(Book_classified_special)),\n    Implies(conditions(Book_set_with_wooden_type), conditions(Book_more_than_200_years_old)),\n    Not(conditions(Book_classified_special)),\n    Not(conditions(Book_set_with_wooden_type))\n) ::: (B)\n\nis_similar_flawed_pattern(\n    Implies(conditions(Garlic_in_pantry), conditions(Garlic_still_fresh)),\n    Implies(conditions(Garlic_in_pantry), conditions(Potatoes_on_basement_stairs)),\n    Not(conditions(Potatoes_on_basement_stairs)),\n    Not(conditions(Garlic_still_fresh))\n) ::: (C)\n\nis_similar_flawed_pattern(\n    Implies(conditions(Kiln_too_hot), conditions(Plates_crack)),\n    Implies(conditions(Plates_crack), conditions(Artisan_redo_order)),\n    Not(conditions(Artisan_redo_order)),\n    Not(conditions(Kiln_too_hot))\n) ::: (D)"
    ]
  },
  {
    "id": "test_330",
    "context": "Maize contains the vitamin niacin, but not in a form the body can absorb. Pellagra is a disease that results from niacin deficiency. When maize was introduced into southern Europe from the Americas in the eighteenth century, it quickly became a dietary staple, and many Europeans who came to subsist primarily on maize developed pellagra. Pellagra was virtually unknown at that time in the Americas, however, even among people who subsisted primarily on maize.",
    "question": "Which of the following, if true, most helps to explain the contrasting incidence of pellagra described above?",
    "options": [
      "Traditional ways of preparing maize in the Americas convert maize's niacin into a nutritionally useful form.",
      "Before the discovery of pellagra's link with niacin, it was widely believed that the disease was an infection that could be transmitted from person to person.",
      "Maize grown in the Americas contained more niacin than maize grown in Europe did.",
      "In southern Europe many of the people who consumed maize also ate niacin-rich foods."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([Americas, Europe])\nconditions = EnumSort([pellagra, no_pellagra])\ndiet = Function([regions] -> [conditions])\nniacin_form = Function([regions] -> [bool])  # True if niacin is in a nutritionally useful form\n\n# Constraints\ndiet(Americas) == no_pellagra ::: Pellagra was virtually unknown in the Americas\ndiet(Europe) == pellagra ::: Many Europeans developed pellagra\nForAll([r:regions], Implies(diet(r) == pellagra, Not(niacin_form(r)))) ::: Pellagra results from niacin deficiency\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the contrasting incidence of pellagra described above?\nis_explanation(niacin_form(Americas) == True) ::: (A) Traditional ways of preparing maize in the Americas convert maize's niacin into a nutritionally useful form.\nis_explanation(False) ::: (B) Before the discovery of pellagra's link with niacin, it was widely believed that the disease was an infection that could be transmitted from person to person.\nis_explanation(False) ::: (C) Maize grown in the Americas contained more niacin than maize grown in Europe did.\nis_explanation(False) ::: (D) In southern Europe many of the people who consumed maize also ate niacin-rich foods."
    ]
  },
  {
    "id": "test_331",
    "context": "If a motor is sound-insulated, then it is quiet enough to use in home appliances. If a motor is quiet enough to use in home appliances, then it can be used in institutional settings. None of the motors manufactured by EM Industries are quiet enough to use in home appliances.",
    "question": "If the statements above are true, which one of the following must be true?",
    "options": [
      "None of the motors manufactured by EM Industries can be used in institutional settings.",
      "None of the motors manufactured by EM Industries are sound-insulated.",
      "If a motor can be used in institutional settings, then it is sound-insulated.",
      "At least some of the motors manufactured by EM Industries can be used in institutional settings."
    ],
    "raw_logic_programs": [
      "# Declarations\nmotors = EnumSort([EM_Industries])\nproperties = EnumSort([sound_insulated, quiet_for_home, usable_in_institutional])\nhas_property = Function([motors, properties] -> [bool])\n\n# Constraints\nForAll([m:motors], Implies(has_property(m, sound_insulated), has_property(m, quiet_for_home))) ::: If a motor is sound-insulated, then it is quiet enough to use in home appliances\nForAll([m:motors], Implies(has_property(m, quiet_for_home), has_property(m, usable_in_institutional))) ::: If a motor is quiet enough to use in home appliances, then it can be used in institutional settings\nForAll([m:motors], Not(has_property(m, quiet_for_home))) ::: None of the motors manufactured by EM Industries are quiet enough to use in home appliances\n\n# Options\nQuestion ::: If the statements above are true, which one of the following must be true?\nForAll([m:motors], Not(has_property(m, usable_in_institutional))) ::: (A) None of the motors manufactured by EM Industries can be used in institutional settings.\nForAll([m:motors], Not(has_property(m, sound_insulated))) ::: (B) None of the motors manufactured by EM Industries are sound-insulated.\nForAll([m:motors], Implies(has_property(m, usable_in_institutional), has_property(m, sound_insulated))) ::: (C) If a motor can be used in institutional settings, then it is sound-insulated.\nExists([m:motors], has_property(m, usable_in_institutional)) ::: (D) At least some of the motors manufactured by EM Industries can be used in institutional settings."
    ]
  },
  {
    "id": "test_332",
    "context": "President of the Regional Chamber of Commerce: We are all aware of the painful fact that almost no new businesses have moved into our region or started up here over the last ten years. But the Planning Board is obviously guilty of a gross exaggeration in its recent estimate that businesses are leaving the region at the rate of about four a week. After all, there were never more than about one thousand businesses in the region, so if they were really leaving at such a rate, they would all have been gone long ago.",
    "question": "The argument is most vulnerable to criticism on the ground that it",
    "options": [
      "confuses a claim about a rate of change within a system with a claim about the absolute size of the system",
      "treats a claim about what is currently the case as if it were a claim about what has been the case for an extended period",
      "focuses on what is going out of a system while ignoring the issue of what is coming into the system",
      "argues against a position simply by showing that the position serves the interest of the Planning Board"
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([rate_of_change, absolute_size, current_case, extended_period, outflow, inflow, interest_position])\nargument = Function([claims] -> [bool])\n\n# Constraints\nargument(rate_of_change) ::: confuses a claim about a rate of change within a system with a claim about the absolute size of the system\nargument(current_case) ::: treats a claim about what is currently the case as if it were a claim about what has been the case for an extended period\nargument(outflow) ::: focuses on what is going out of a system while ignoring the issue of what is coming into the system\nargument(interest_position) ::: argues against a position simply by showing that the position serves the interest of the Planning Board\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the ground that it\nis_vulnerable(argument(rate_of_change)) ::: (A)\nis_vulnerable(argument(current_case)) ::: (B)\nis_vulnerable(argument(outflow)) ::: (C)\nis_vulnerable(argument(interest_position)) ::: (D)"
    ]
  },
  {
    "id": "test_333",
    "context": "Politician: Some cities have reversed the decay of aging urban areas by providing tax incentives and zoning variances that encourage renovation and revitalization in selected areas. But such legislation should not be commended. Its principal beneficiaries have turned out to be well-to-do professionals who could afford the cost of restoring deteriorating buildings; the long-term residents these programs were intended to help now face displacement due to increased rent and taxes.",
    "question": "Which one of the following principles, if valid, most helps to justify the politician's criticism?",
    "options": [
      "The wealthier members of a community should not have undue influence on its governance.",
      "Evaluation of legislation should take into account actual results, not intentions alone.",
      "Laws that give advantage to the well-to-do can also benefit society as a whole.",
      "A community's tax laws and zoning regulations should apply equally to all individuals within selected areas."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\nvalid = Function([principles] -> [bool])\n\n# Constraints\nvalid(P1) ::: The wealthier members of a community should not have undue influence on its governance.\nvalid(P2) ::: Evaluation of legislation should take into account actual results, not intentions alone.\nvalid(P3) ::: Laws that give advantage to the well-to-do can also benefit society as a whole.\nvalid(P4) ::: A community's tax laws and zoning regulations should apply equally to all individuals within selected areas.\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the politician's criticism?\nis_justified(valid(P1)) ::: (A)\nis_justified(valid(P2)) ::: (B)\nis_justified(valid(P3)) ::: (C)\nis_justified(valid(P4)) ::: (D)"
    ]
  },
  {
    "id": "test_334",
    "context": "A typical gasoline-powered lawn mower emits about as much air-polluting material per hour of use as does an automobile. Collectively, such mowers contribute significantly to summer air pollution. Since electric mowers emit no air pollutants, people can help reduce air pollution by choosing electric mowers over gasoline ones whenever feasible.",
    "question": "Which one of the following, if true, provides the most support for the argument?",
    "options": [
      "Lawns help to clean the air, replacing pollutants with oxygen.",
      "Producing the power to run an electric mower for an hour causes less air pollution than does running an automobile for an hour.",
      "Lawn mowers are used for fewer hours per year than are automobiles.",
      "Most manufacturers of gasoline lawn mowers are trying to redesign their mowers to reduce the emission of air pollutants."
    ],
    "raw_logic_programs": [
      "# Declarations\nlawn_mowers = EnumSort([gasoline, electric])\npollution = Function([lawn_mowers] -> [int])\n\n# Constraints\npollution(gasoline) > 0 ::: Gasoline-powered lawn mowers emit air-polluting material\npollution(electric) == 0 ::: Electric mowers emit no air pollutants\n\n# Options\nQuestion ::: Which one of the following, if true, provides the most support for the argument?\nis_supportive(pollution(electric) < pollution(gasoline)) ::: (A) Lawns help to clean the air, replacing pollutants with oxygen.\nis_supportive(pollution(electric) < pollution(gasoline)) ::: (B) Producing the power to run an electric mower for an hour causes less air pollution than does running an automobile for an hour.\nis_supportive(pollution(electric) < pollution(gasoline)) ::: (C) Lawn mowers are used for fewer hours per year than are automobiles.\nis_supportive(pollution(electric) < pollution(gasoline)) ::: (D) Most manufacturers of gasoline lawn mowers are trying to redesign their mowers to reduce the emission of air pollutants."
    ]
  },
  {
    "id": "test_335",
    "context": "Reviewer: The book Art' s Decline argues that European painters today lack skills that were common among European painters of preceding centuries. In this the book must be right, since its analysis of 100 paintings, 50 old and 50 contemporary, demonstrates convincingly that none of the contemporary paintings are executed as skillfully as the older paintings.",
    "question": "Which of the following points to the most serious logical flaw in the reviewer's argument?",
    "options": [
      "The particular methods currently used by European painters could require less artistic skill than do methods used by painters in other parts of the world.",
      "The title of the book could cause readers to accept the book's thesis even before they read the analysis of the paintings that supports it.",
      "The paintings chosen by the book's author for analysis could be those that most support the book's thesis.",
      "A reader who was not familiar with the language of art criticism might not be convinced by the book's analysis of the 100 paintings."
    ],
    "raw_logic_programs": [
      "# Declarations\nbooks = EnumSort([Arts_Decline])\npaintings = EnumSort([old, contemporary])\nskills = Function([paintings] -> [bool])\nanalysis = Function([books, paintings] -> [bool])\n\n# Constraints\nForAll([p:paintings], analysis(Arts_Decline, p)) ::: The book's analysis includes 100 paintings, 50 old and 50 contemporary\nForAll([p:paintings], Implies(p == old, skills(p))) ::: The old paintings are executed skillfully\nForAll([p:paintings], Implies(p == contemporary, Not(skills(p)))) ::: The contemporary paintings are not executed as skillfully as the older paintings\n\n# Options\nQuestion ::: Which of the following points to the most serious logical flaw in the reviewer's argument?\nis_flaw(Exists([p:paintings], analysis(Arts_Decline, p) == (p == contemporary))) ::: (The particular methods currently used by European painters could require less artistic skill than do methods used by painters in other parts of the world.\nis_flaw(Exists([b:books], b == Arts_Decline)) ::: (The title of the book could cause readers to accept the book's thesis even before they read the analysis of the paintings that supports it.\nis_flaw(Exists([p:paintings], analysis(Arts_Decline, p) == (p == old))) ::: (The paintings chosen by the book's author for analysis could be those that most support the book's thesis.\nis_flaw(Exists([p:paintings], Not(analysis(Arts_Decline, p)))) ::: (A reader who was not familiar with the language of art criticism might not be convinced by the book's analysis of the 100 paintings."
    ]
  },
  {
    "id": "test_336",
    "context": "It has been hypothesized that dinosaurs became extinct simply because they grew too large and slow to function effectively as predators, but this cannot be right. If that hypothesis were correct, then small dinosaurs would have survived even though their large counterparts died off. But it is an undisputed fact that all dinosaurs -- even very small ones -- became extinct.",
    "question": "The argument above proceeds by",
    "options": [
      "refuting a hypothesis by showing that one of the consequences suggested by that hypothesis is false",
      "introducing a hypothesis and then questioning the accuracy of the data on which it is based",
      "refuting a hypothesis by showing that it is impossible to produce evidence to the contrary",
      "disputing a hypothesis by offering a plausible competing explanation"
    ],
    "raw_logic_programs": [
      "# Declarations\nhypothesis = EnumSort([dinosaurs_extinct_due_to_size])\ndinosaurs = EnumSort([small_dinosaurs, large_dinosaurs])\nextinct = Function([dinosaurs] -> [bool])\n\n# Constraints\nForAll([d:dinosaurs], extinct(d)) ::: It is an undisputed fact that all dinosaurs -- even very small ones -- became extinct\nImplies(hypothesis == dinosaurs_extinct_due_to_size, Not(extinct(small_dinosaurs))) ::: If the hypothesis were correct, then small dinosaurs would have survived\n\n# Options\nQuestion ::: The argument above proceeds by\nis_valid(And(hypothesis == dinosaurs_extinct_due_to_size, extinct(small_dinosaurs))) ::: (refuting a hypothesis by showing that one of the consequences suggested by that hypothesis is false)\nis_valid(Not(extinct(small_dinosaurs))) ::: (introducing a hypothesis and then questioning the accuracy of the data on which it is based)\nis_valid(Not(Exists([d:dinosaurs], Not(extinct(d))))) ::: (refuting a hypothesis by showing that it is impossible to produce evidence to the contrary)\nis_valid(Exists([d:dinosaurs], Not(extinct(d)))) ::: (disputing a hypothesis by offering a plausible competing explanation)"
    ]
  },
  {
    "id": "test_337",
    "context": "A product that represents a clear technological advance over competing products can generally command a high price. Because <b> technological advances tend to be quickly surpassed </b> and companies want to make large profits while they still can, <b> many companies charge the maximum possible price for such a product. </b> But large profits on the new product will give competitors a strong incentive to quickly match the new product' s capabilities. Consequently, the strategy to maximize overall profit from a new product is to charge less than the greatest possible price.",
    "question": "In the argument above, the two portions in <b> boldface </b> play which of the following roles?",
    "options": [
      "The first is a consideration raised to argue that a certain strategy is counterproductive; the second presents that strategy.",
      "The first is a consideration that has been used to justify adopting a certain strategy; the second presents the intended outcome of that strategy.",
      "The first is a consideration raised to help explain the popularity of a certain strategy; the second presents that strategy.",
      "The first is an assumption, rejected by the argument, that has been used to justify a course of action; the second presents that course of action."
    ],
    "raw_logic_programs": [
      "# Declarations\nportions = EnumSort([first, second])\nroles = EnumSort([consideration, strategy, outcome, assumption])\nplays_role = Function([portions] -> [roles])\n\n# Constraints\nplays_role(first) == consideration ::: The first portion is a consideration\nplays_role(second) == strategy ::: The second portion presents a strategy\n\n# Options\nQuestion ::: In the argument above, the two portions in boldface play which of the following roles?\nis_correct(And(plays_role(first) == consideration, plays_role(second) == strategy)) ::: (The first is a consideration raised to help explain the popularity of a certain strategy; the second presents that strategy.)\nis_correct(And(plays_role(first) == consideration, plays_role(second) == outcome)) ::: (The first is a consideration that has been used to justify adopting a certain strategy; the second presents the intended outcome of that strategy.)\nis_correct(And(plays_role(first) == assumption, plays_role(second) == strategy)) ::: (The first is an assumption, rejected by the argument, that has been used to justify a course of action; the second presents that course of action.)\nis_correct(And(plays_role(first) == consideration, plays_role(second) == strategy)) ::: (The first is a consideration raised to argue that a certain strategy is counterproductive; the second presents that strategy.)"
    ]
  },
  {
    "id": "test_338",
    "context": "Opponent of offshore oil drilling: The projected benefits of drilling new oil wells in certain areas in the outer continental shelf are not worth the risk of environmental disaster. The oil already being extracted from these areas currently provides only 4 percent of our country' s daily oil requirement, and the new wells would only add one-half of 1 percent. Proponent of offshore oil drilling: Don' t be ridiculous! You might just as well argue that new farms should not be allowed, since no new farm could supply the total food needs of our country for more than a few minutes.",
    "question": "The drilling proponent's reply to the drilling opponent proceeds by",
    "options": [
      "claiming that the statistics cited as evidence by the drilling opponent are factually inaccurate",
      "offering evidence in support of drilling that is more decisive than is the evidence offered by the drilling opponent",
      "citing as parallel to the argument made by the drilling opponent an argument in which the conclusion is strikingly unsupported",
      "pointing out that the drilling opponent's argument is a misapplication of a frequently legitimate way of arguing"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([drilling_opponent, drilling_proponent])\nclaims = EnumSort([statistics_inaccurate, more_decisive_evidence, parallel_argument, misapplication_of_argument])\nsupports = Function([arguments] -> [claims])\n\n# Constraints\nsupports(drilling_opponent) == statistics_inaccurate ::: The drilling opponent's argument is based on statistics about oil supply.\nsupports(drilling_proponent) == parallel_argument ::: The drilling proponent's reply cites a parallel argument about farms.\n\n# Options\nQuestion ::: The drilling proponent's reply to the drilling opponent proceeds by\nis_correct(supports(drilling_proponent) == statistics_inaccurate) ::: (claiming that the statistics cited as evidence by the drilling opponent are factually inaccurate)\nis_correct(supports(drilling_proponent) == more_decisive_evidence) ::: (offering evidence in support of drilling that is more decisive than is the evidence offered by the drilling opponent)\nis_correct(supports(drilling_proponent) == parallel_argument) ::: (citing as parallel to the argument made by the drilling opponent an argument in which the conclusion is strikingly unsupported)\nis_correct(supports(drilling_proponent) == misapplication_of_argument) ::: (pointing out that the drilling opponent's argument is a misapplication of a frequently legitimate way of arguing)"
    ]
  },
  {
    "id": "test_339",
    "context": "An analysis of the number and severity of health problems among the population of a certain community showed that elderly people who were born in the community and resided there all their lives had significantly worse health than elderly people who had moved there within the past five years.",
    "question": "Each of the following, if true, contributes to an explanation of the difference in health between these two groups EXCEPT:",
    "options": [
      "Changes in one's environment tend to have a beneficial effect on one's health.",
      "Although most people who have moved into the community are young, most people who have lived in the community all their lives are elderly.",
      "People who have the means to relocate tend to be in better-than-average health.",
      "People in good health are more likely to move to new communities than are people in poor health."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([born_and_resided, moved_recently])\nfactors = EnumSort([environment_change, age_distribution, relocation_means, health_motivation])\ncontributes_to_explanation = Function([factors] -> [bool])\n\n# Constraints\nForAll([f:factors], contributes_to_explanation(f)) ::: Each factor contributes to an explanation of the difference in health between the two groups\n\n# Options\nQuestion ::: Each of the following, if true, contributes to an explanation of the difference in health between these two groups EXCEPT:\nis_exception(contributes_to_explanation(environment_change)) ::: (A) Changes in one's environment tend to have a beneficial effect on one's health.\nis_exception(contributes_to_explanation(age_distribution)) ::: (B) Although most people who have moved into the community are young, most people who have lived in the community all their lives are elderly.\nis_exception(contributes_to_explanation(relocation_means)) ::: (C) People who have the means to relocate tend to be in better-than-average health.\nis_exception(contributes_to_explanation(health_motivation)) ::: (D) People in good health are more likely to move to new communities than are people in poor health."
    ]
  },
  {
    "id": "test_340",
    "context": "Folklorist: Oral traditions are often preferable to written ones. Exclusive dependence on speech improves the memory; literate populations grow sluggish in recall, running to written sources whenever they need information. Because writing has no limits, it can proliferate to the point where writer and reader both become confused. Since oral traditions are dependent on memory, what is useless and irrelevant is quickly eradicated.",
    "question": "Which one of the following principles, if valid, most helps to justify the folklorist's argumentation?",
    "options": [
      "Ideas that cannot be discussed clearly should not be discussed at all.",
      "Economy of expression is to be preferred over verbosity.",
      "Literate populations need to make efforts to communicate efficiently.",
      "Accuracy in communication breeds mental self-reliance."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([clear_discussion, economy_expression, efficient_communication, mental_self_reliance])\njustifies = Function([principles] -> [bool])\n\n# Constraints\n# No specific constraints are given for the principles themselves, as the problem is about justifying the argumentation.\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the folklorist's argumentation?\nis_valid(justifies(economy_expression)) ::: (Economy of expression is to be preferred over verbosity.)\nis_valid(justifies(mental_self_reliance)) ::: (Accuracy in communication breeds mental self-reliance.)"
    ]
  },
  {
    "id": "test_341",
    "context": "Since mosquito larvae are aquatic, outbreaks of mosquito-borne diseases typically increase after extended periods of wet weather. An exception to this generalization, however, occurs in areas where mosquitoes breed primarily in wetland habitats. In these areas, outbreaks of mosquito-borne diseases are worse after periods of drought.",
    "question": "Which one of the following, if true, most helps to resolve the apparent discrepancy described above?",
    "options": [
      "Periods of drought in wetland habitats create conditions conducive to the emergence of new plant growth.",
      "Wetland habitats host a wider variety of mosquito species than do other areas where mosquitoes breed.",
      "Wetland habitats contain numerous aquatic insects that prey on mosquito larvae.",
      "The use of insecticides is typically prohibited in wetland habitats."
    ],
    "raw_logic_programs": [
      "# Declarations\nhabitats = EnumSort([wetland, non_wetland])\nweather_conditions = EnumSort([wet, drought])\ndisease_outbreaks = Function([habitats, weather_conditions] -> [bool])\n\n# Constraints\nForAll([h:habitats], disease_outbreaks(h, wet) == True) ::: Outbreaks of mosquito-borne diseases typically increase after extended periods of wet weather\ndisease_outbreaks(wetland, drought) == True ::: In wetland habitats, outbreaks of mosquito-borne diseases are worse after periods of drought\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent discrepancy described above?\nis_resolving(Periods of drought in wetland habitats create conditions conducive to the emergence of new plant growth) ::: (A)\nis_resolving(Wetland habitats host a wider variety of mosquito species than do other areas where mosquitoes breed) ::: (B)\nis_resolving(Wetland habitats contain numerous aquatic insects that prey on mosquito larvae) ::: (C)\nis_resolving(The use of insecticides is typically prohibited in wetland habitats) ::: (D)"
    ]
  },
  {
    "id": "test_342",
    "context": "When feeding, aquatic birds known as phalaropes often spin rapidly on the water' s surface, pecking for food during each revolution. To execute these spins, phalaropes kick one leg harder than the other. This action creates upwelling currents. Because plankton on which phalaropes feed typically occurs in greater quantities well below the surface, it is hypothesized that by spinning phalaropes gain access to food that would otherwise be beyond their reach.",
    "question": "Which of the following, if true, most strongly supports the hypothesis?",
    "options": [
      "Phalaropes rarely feed while on land.",
      "Phalaropes do not usually spin when food is abundant at the surface.",
      "A given phalarope spins exclusively either to the right or to the left.",
      "Different phalaropes spin at somewhat different rates."
    ],
    "raw_logic_programs": [
      "# Declarations\nbirds = EnumSort([phalaropes])\nactions = EnumSort([spin, not_spin])\nconditions = EnumSort([food_abundant_surface, food_not_abundant_surface])\nhypothesis = Function([birds, actions, conditions] -> [bool])\n\n# Constraints\nForAll([b:birds], Exists([a:actions, c:conditions], hypothesis(b, a, c))) ::: Phalaropes spin to gain access to food that would otherwise be beyond their reach\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the hypothesis?\nis_strong_support(hypothesis(phalaropes, spin, food_not_abundant_surface)) ::: (Phalaropes do not usually spin when food is abundant at the surface)\nis_strong_support(hypothesis(phalaropes, not_spin, food_abundant_surface)) ::: (Phalaropes rarely feed while on land)\nis_strong_support(hypothesis(phalaropes, spin, food_abundant_surface)) ::: (A given phalarope spins exclusively either to the right or to the left)\nis_strong_support(hypothesis(phalaropes, spin, food_not_abundant_surface)) ::: (Different phalaropes spin at somewhat different rates)"
    ]
  },
  {
    "id": "test_343",
    "context": "In the recent election, a country' s voters overwhelmingly chose Adler over Burke. Voters knew that Burke offered more effective strategies for dealing with most of the country' s problems. Moreover, Burke has a long public record of successful government service that testifies to competence and commitment. It was well known, however, that Burke' s environmental policy coincided with the interests of the country' s most dangerous polluter, whereas Adler proposed a policy of strict environmental regulation.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "Offering effective strategies for dealing with a country's problems is more important in winning an election than having a long record of successful government service.",
      "Voters realized that their country's natural resources are rapidly being depleted.",
      "Throughout their respective political careers, Adler has been more committed to taking measures to protect the country's environment than Burke has been.",
      "The concern of the country's voters for the environment played an important role in Adler's election."
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([Adler, Burke])\nattributes = EnumSort([effective_strategies, successful_record, environmental_policy])\npositions = EnumSort([pro_environment, pro_polluter])\nvoters_preference = Function([candidates, attributes] -> [bool])\nenvironmental_stance = Function([candidates] -> [positions])\n\n# Constraints\nvoters_preference(Burke, effective_strategies) ::: Burke offered more effective strategies for dealing with most of the country’s problems\nvoters_preference(Burke, successful_record) ::: Burke has a long public record of successful government service\nenvironmental_stance(Burke) == pro_polluter ::: Burke’s environmental policy coincided with the interests of the country’s most dangerous polluter\nenvironmental_stance(Adler) == pro_environment ::: Adler proposed a policy of strict environmental regulation\nvoters_preference(Adler, environmental_policy) ::: Voters overwhelmingly chose Adler over Burke\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(voters_preference(Adler, environmental_policy)) ::: (The concern of the country's voters for the environment played an important role in Adler's election.)\nis_supported(environmental_stance(Adler) == pro_environment) ::: (Throughout their respective political careers, Adler has been more committed to taking measures to protect the country's environment than Burke has been.)\nis_supported(voters_preference(Burke, effective_strategies) > voters_preference(Burke, successful_record)) ::: (Offering effective strategies for dealing with a country's problems is more important in winning an election than having a long record of successful government service.)\nis_supported(voters_preference(Adler, environmental_policy) > voters_preference(Burke, effective_strategies)) ::: (Voters realized that their country's natural resources are rapidly being depleted.)"
    ]
  },
  {
    "id": "test_344",
    "context": "In comparison to the standard typewriter keyboard, the EFCO keyboard, which places the most-used keys nearest the typist's strongest fingers, allows faster typing and results in less fatigue. Ttherefore, replacement of standard keyboards with the EFCO keyboard will result in an immediate reduction of typing costs.",
    "question": "Which of the following, if true, would most weaken the conclusion drawn above?",
    "options": [
      "The more training and experience an employee has had with the standard keyboard, the more costly it is to train that employee to use the EFCO keyboard.",
      "Novice typists can learn to use the EFCO keyboard in about the same amount of time that it takes them to learn to use the standard keyboard.",
      "The number of businesses and government agencies that use EFCO keyboards is increasing each year.",
      "People who use both standard and EFCO keyboards report greater difficulty in the transition from the EFCO keyboard to the standard keyboard than in the transition from the standard keyboard to the EFCO keyboard."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([novice, experienced])\nkeyboards = EnumSort([standard, EFCO])\ntraining_cost = Function([employees, keyboards] -> [int])\ntyping_cost = Function([keyboards] -> [int])\n\n# Constraints\nForAll([k:keyboards], typing_cost(k) >= 0) ::: Typing costs are non-negative\nForAll([e:employees, k:keyboards], training_cost(e, k) >= 0) ::: Training costs are non-negative\n\n# Options\nQuestion ::: Which of the following, if true, would most weaken the conclusion drawn above?\nis_weakened(ForAll([e:employees], training_cost(e, EFCO) > training_cost(e, standard))) ::: (A) The more training and experience an employee has had with the standard keyboard, the more costly it is to train that employee to use the EFCO keyboard.\nis_weakened(Exists([e:employees], training_cost(e, EFCO) == training_cost(e, standard))) ::: (B) Novice typists can learn to use the EFCO keyboard in about the same amount of time that it takes them to learn to use the standard keyboard.\nis_weakened(Exists([k:keyboards], typing_cost(k) < typing_cost(standard))) ::: (C) The number of businesses and government agencies that use EFCO keyboards is increasing each year.\nis_weakened(Exists([e:employees], training_cost(e, standard) > training_cost(e, EFCO))) ::: (D) People who use both standard and EFCO keyboards report greater difficulty in the transition from the EFCO keyboard to the standard keyboard than in the transition from the standard keyboard to the EFCO keyboard."
    ]
  },
  {
    "id": "test_345",
    "context": "From the tenth century until around the year 1500, there were Norse settlers living in Greenland. During that time, average yearly temperatures fell slightly worldwide, and some people claim that this temperature drop wiped out the Norse settlements by rendering Greenland too cold for human habitation. But this explanation cannot be correct, because Inuit settlers from North America, who were living in Greenland during the time the Norse settlers were there, continued to thrive long after 1500.",
    "question": "Which one of the following if true, most helps explain why the Norse settlements in Greenland disappeared while the Inuit settlements survived?",
    "options": [
      "The drop in average yearly temperature was smaller in Greenland than it was in the world as a whole.",
      "There were settlements in North America during the fifteenth century that were most likely founded by Norse settlers who had come from Greenland.",
      "The Norse community in Norway continued to thrive long after 1500.",
      "The Norse settlers' diet, unlike that of the Inuit, was based primarily on livestock and crops that were unable to survive the temperature drop."
    ],
    "raw_logic_programs": [
      "# Declarations\nsettlers = EnumSort([Norse, Inuit])\nfactors = EnumSort([temperature, diet, migration])\neffects = Function([settlers, factors] -> [bool])\n\n# Constraints\neffects(Norse, temperature) == True ::: The temperature drop affected the Norse settlers\neffects(Inuit, temperature) == False ::: The temperature drop did not affect the Inuit settlers\neffects(Norse, diet) == True ::: The Norse settlers' diet was affected by the temperature drop\neffects(Inuit, diet) == False ::: The Inuit settlers' diet was not affected by the temperature drop\neffects(Norse, migration) == True ::: There were migrations from Greenland by Norse settlers\neffects(Inuit, migration) == False ::: The Inuit settlers did not migrate from Greenland\n\n# Options\nQuestion ::: Which one of the following if true, most helps explain why the Norse settlements in Greenland disappeared while the Inuit settlements survived?\nis_explanatory(effects(Norse, diet) == True) ::: (The Norse settlers' diet, unlike that of the Inuit, was based primarily on livestock and crops that were unable to survive the temperature drop.)\nis_explanatory(effects(Norse, temperature) == False) ::: (The drop in average yearly temperature was smaller in Greenland than it was in the world as a whole.)\nis_explanatory(effects(Norse, migration) == True) ::: (There were settlements in North America during the fifteenth century that were most likely founded by Norse settlers who had come from Greenland.)\nis_explanatory(effects(Norse, temperature) == False) ::: (The Norse community in Norway continued to thrive long after 1500.)"
    ]
  },
  {
    "id": "test_346",
    "context": "Because postage rates are rising, Home Decorator magazine plans to maximize its profits by reducing by one-half the number of issues it publishes each year. The quality of articles, the number of articles published per year, and the subscription price will not change. Market research shows that neither subscribers nor advertisers will be lost if the magazine' s plan is instituted.",
    "question": "Which of the following, if true, provides the strongest evidence that the magazine's profits are likely to decline if the plan is instituted?",
    "options": [
      "Production costs for the magazine are expected to remain stable.",
      "With the new postage rates, a typical issue under the proposed plan would cost about one-third more to mail than a typical current issue would.",
      "Most of the advertisers that purchase advertising space In the magazine will continue to spend the same amount on advertising per issue as they have in the past.",
      "Many of the magazine's long-time subscribers would continue their subscriptions even if the subscription price were increased."
    ],
    "raw_logic_programs": [
      "# Declarations\nissues = EnumSort([current, proposed])\ncosts = Function([issues] -> [float])\nadvertising_revenue = Function([issues] -> [float])\nsubscription_revenue = Function([issues] -> [float])\nprofit = Function([issues] -> [float])\n\n# Constraints\nForAll([i:issues], profit(i) == subscription_revenue(i) + advertising_revenue(i) - costs(i)) ::: Profit is calculated as revenue minus costs\nsubscription_revenue(current) == subscription_revenue(proposed) ::: The subscription price and number of articles remain unchanged\nadvertising_revenue(current) == advertising_revenue(proposed) ::: Market research shows advertisers will not be lost\ncosts(current) < costs(proposed) ::: With the new postage rates, a typical issue under the proposed plan would cost about one-third more to mail than a typical current issue would\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest evidence that the magazine's profits are likely to decline if the plan is instituted?\nis_strongest_evidence(profit(proposed) < profit(current)) ::: (Production costs for the magazine are expected to remain stable.\nis_strongest_evidence(profit(proposed) < profit(current)) ::: (With the new postage rates, a typical issue under the proposed plan would cost about one-third more to mail than a typical current issue would.\nis_strongest_evidence(profit(proposed) < profit(current)) ::: (Most of the advertisers that purchase advertising space In the magazine will continue to spend the same amount on advertising per issue as they have in the past.\nis_strongest_evidence(profit(proposed) < profit(current)) ::: (Many of the magazine's long-time subscribers would continue their subscriptions even if the subscription price were increased."
    ]
  },
  {
    "id": "test_347",
    "context": "Commentator: In last week' s wreck involving one of Acme Engines' older locomotives, the engineer lost control of the train when his knee accidentally struck a fuel shut-down switch. Acme claims it is not liable because it never realized that the knee-level switches were a safety hazard. When asked why it relocated knee-level switches in its newer locomotives, Acme said engineers had complained that they were simply inconvenient. However, it is unlikely that Acme would have spent the $500, 000 it took to relocate switches in the newer locomotives merely because of inconvenience. Thus, Acme Engines should be held liable for last week' s wreck.",
    "question": "The point that Acme Engines spent $500, 000 relocating knee-level switches in its newer locomotives is offered in the commentator's argument as",
    "options": [
      "an explanation of why the train wreck occurred",
      "proof that the engineer is not at all responsible for the train wreck",
      "evidence that knee-level switches are not in fact hazardous",
      "an indication that Acme Engines had been aware of the potential dangers of knee-level switches before the wreck occurred"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Acme, commentator])\nclaims = EnumSort([safety_hazard, inconvenience, liability, cost])\nactions = EnumSort([relocate_switches, train_wreck])\nreasons = Function([arguments, actions] -> [claims])\n\n# Constraints\nreasons(Acme, relocate_switches) == inconvenience ::: Acme claims the relocation was due to inconvenience\nreasons(commentator, relocate_switches) == cost ::: Commentator argues the cost indicates awareness of hazard\nreasons(commentator, train_wreck) == liability ::: Commentator argues Acme should be liable for the wreck\n\n# Options\nQuestion ::: The point that Acme Engines spent $500,000 relocating knee-level switches in its newer locomotives is offered in the commentator's argument as\nis_reason(reasons(commentator, relocate_switches) == safety_hazard) ::: (an explanation of why the train wreck occurred)\nis_reason(reasons(commentator, train_wreck) == liability) ::: (proof that the engineer is not at all responsible for the train wreck)\nis_reason(reasons(Acme, relocate_switches) == inconvenience) ::: (evidence that knee-level switches are not in fact hazardous)\nis_reason(reasons(commentator, relocate_switches) == safety_hazard) ::: (an indication that Acme Engines had been aware of the potential dangers of knee-level switches before the wreck occurred)"
    ]
  },
  {
    "id": "test_348",
    "context": "Two computer companies, Garnet and Renco, each pay Salcor to provide health insurance for their employees. Because early treatment of high cholesterol can prevent strokes that would otherwise occur several years later, Salcor encourages Garnet employees to have their cholesterol levels tested and to obtain early treatment for high cholesterol. Renco employees generally remain with Renco only for a few years, however. Ttherefore, Salcor lacks any financial incentive to provide similar encouragement to Renco employees.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "People often obtain early treatment for high cholesterol on their own.",
      "Garnet hires a significant number of former employees of Renco.",
      "Renco employees are not, on average, significantly younger than Garnet employees.",
      "Early treatment of high cholesterol does not eliminate the possibility of a stroke later in life."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([Garnet, Renco])\nemployees = EnumSort([Garnet_employees, Renco_employees])\nactions = EnumSort([encourage_testing, no_encouragement])\ntreatment_effect = EnumSort([prevents_strokes, does_not_prevent_strokes])\nemployment_duration = EnumSort([short_term, long_term])\nhiring_practices = EnumSort([hires_former_Renco, does_not_hire_former_Renco])\n\n# Constraints\nForAll([c:companies], Exists([e:employees], And(e == Garnet_employees, actions(e) == encourage_testing))) ::: Salcor encourages Garnet employees to have their cholesterol levels tested\nForAll([e:employees], Implies(e == Renco_employees, actions(e) == no_encouragement)) ::: Salcor lacks any financial incentive to provide similar encouragement to Renco employees\nForAll([e:employees], Implies(e == Renco_employees, employment_duration(e) == short_term)) ::: Renco employees generally remain with Renco only for a few years\ntreatment_effect == prevents_strokes ::: Early treatment of high cholesterol can prevent strokes\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(Exists([e:employees], And(e == Renco_employees, actions(e) == encourage_testing))) ::: (A) People often obtain early treatment for high cholesterol on their own.\nis_weakening(hiring_practices == hires_former_Renco) ::: (B) Garnet hires a significant number of former employees of Renco.\nis_weakening(Exists([e:employees], And(e == Renco_employees, employment_duration(e) == long_term))) ::: (C) Renco employees are not, on average, significantly younger than Garnet employees.\nis_weakening(treatment_effect == does_not_prevent_strokes) ::: (D) Early treatment of high cholesterol does not eliminate the possibility of a stroke later in life."
    ]
  },
  {
    "id": "test_349",
    "context": "The Earth's rivers constantly carry dissolved salts into its oceans. Clearly, ttherefore, by taking the resulting increase in salt levels in the oceans over the past hundred years and then determining how many centuries of such increases it would have taken the oceans to reach current salt levels from a hypothetical initial salt-free state, the maximum age of the Earth's oceans can be accurately estimated.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "There is no method superior to that based on salt levels for estimating the maximum age of the Earth's oceans",
      "There are salts that leach into the Earth's oceans directly from the ocean floor",
      "The quantities of dissolved salts deposited by rivers in the Earth's oceans have not been unusually large during the past hundred years",
      "At any given time, all the Earth's rivers have about the same salt levels"
    ],
    "raw_logic_programs": [
      "# Declarations\nrivers = EnumSort([river1, river2, ..., riverN])  # Representing all rivers\ntime_periods = EnumSort([past_hundred_years, other_periods])\nsalt_sources = EnumSort([rivers, ocean_floor])\nsalt_levels = Function([time_periods, salt_sources] -> [real])\n\n# Constraints\nForAll([r:rivers], salt_levels(past_hundred_years, r) > 0) ::: The Earth's rivers constantly carry dissolved salts into its oceans\nForAll([t:time_periods], salt_levels(t, ocean_floor) == 0) ::: Assuming no direct leaching from the ocean floor\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(ForAll([t:time_periods], salt_levels(t, rivers) == salt_levels(past_hundred_years, rivers))) ::: (The quantities of dissolved salts deposited by rivers in the Earth's oceans have not been unusually large during the past hundred years)\nis_assumption(Exists([s:salt_sources], salt_levels(past_hundred_years, s) > 0)) ::: (There are salts that leach into the Earth's oceans directly from the ocean floor)\nis_assumption(ForAll([r:rivers], salt_levels(past_hundred_years, r) == salt_levels(other_periods, r))) ::: (At any given time, all the Earth's rivers have about the same salt levels)\nis_assumption(Not(Exists([m:methods], superior_method(m)))) ::: (There is no method superior to that based on salt levels for estimating the maximum age of the Earth's oceans)"
    ]
  },
  {
    "id": "test_350",
    "context": "Consumer activist: By allowing major airlines to abandon, as they promptly did, all but their most profitable routes, the government' s decision to cease regulation of the airline industry has worked to the disadvantage of everyone who lacks access to a large metropolitan airport. Industry representative: On the contrary, where major airlines moved out, regional airlines have moved in and, as a consequence, there are more flights into and out of most small airports now than before the change in regulatory policy.",
    "question": "The industry representative's argument will not provide an effective answer to the consumer activist's claim unless which one of the following is true?",
    "options": [
      "Any policy that leads to an increase in the number of competitors in a given field works to the long-term advantage of consumers.",
      "No small airport has fewer flights now than it did before the change in policy regarding regulation of the airline industry.",
      "Policies that result in an increase in the number of flights to which consumers have easy access do not generally work to the disadvantage of consumers.",
      "Regional airlines charge less to fly a given route now than the major airlines charged when they flew the same route."
    ],
    "raw_logic_programs": [
      "# Declarations\nairports = EnumSort([large_metropolitan, small])\nairlines = EnumSort([major, regional])\nflights = Function([airports, airlines] -> [int])\n\n# Constraints\nForAll([a:airports], flights(a, major) >= 0) ::: Major airlines have flights from each airport\nForAll([a:airports], flights(a, regional) >= 0) ::: Regional airlines have flights from each airport\nflights(small, major) == 0 ::: Major airlines abandoned all but their most profitable routes, affecting small airports\n\n# Options\nQuestion ::: The industry representative's argument will not provide an effective answer to the consumer activist's claim unless which one of the following is true?\nis_true(ForAll([a:airports], flights(a, regional) > flights(a, major))) ::: (A) Any policy that leads to an increase in the number of competitors in a given field works to the long-term advantage of consumers.\nis_true(flights(small, regional) > flights(small, major)) ::: (B) No small airport has fewer flights now than it did before the change in policy regarding regulation of the airline industry.\nis_true(Exists([a:airports], flights(a, regional) > flights(a, major))) ::: (C) Policies that result in an increase in the number of flights to which consumers have easy access do not generally work to the disadvantage of consumers.\nis_true(ForAll([a:airports], flights(a, regional) < flights(a, major))) ::: (D) Regional airlines charge less to fly a given route now than the major airlines charged when they flew the same route."
    ]
  },
  {
    "id": "test_351",
    "context": "In order to raise revenue, the federal government planned a tax amnesty program that allows tax delinquents to pay all owed tax without added financial penalty. However, economists projected that the federal government would collect a far lower percentage of total tax owed by delinquents than did state governments implementing similar programs.",
    "question": "Which of the following, if true, would most contribute to an explanation of the economists' projections?",
    "options": [
      "Tax amnesty programs are only successful if they are widely publicized.",
      "Unlike most federal tax delinquents, most state tax delinquents fail to pay state tax because of an oversight rather than a decision not to pay.",
      "Most people who honestly pay their state tax are equally honest in paying their federal tax.",
      "The state tax rate varies considerably from state to state, but the federal tax is levied according to laws which apply to citizens of all the states."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([federal, state])\ndelinquents = EnumSort([oversight, decision_not_to_pay])\nsuccess = Function([entities] -> [bool])\nreason = Function([entities] -> [delinquents])\n\n# Constraints\nsuccess(state) == True ::: State tax amnesty programs are successful\nreason(state) == oversight ::: Most state tax delinquents fail to pay due to oversight\nreason(federal) == decision_not_to_pay ::: Most federal tax delinquents fail to pay due to a decision not to pay\n\n# Options\nQuestion ::: Which of the following, if true, would most contribute to an explanation of the economists' projections?\nis_explanation(success(federal) == False) ::: (Tax amnesty programs are only successful if they are widely publicized.\nis_explanation(reason(federal) == decision_not_to_pay) ::: (Unlike most federal tax delinquents, most state tax delinquents fail to pay state tax because of an oversight rather than a decision not to pay.\nis_explanation(ForAll([p:entities], honest(p) == True)) ::: (Most people who honestly pay their state tax are equally honest in paying their federal tax.\nis_explanation(ForAll([p:entities], tax_rate(p) == varies)) ::: (The state tax rate varies considerably from state to state, but the federal tax is levied according to laws which apply to citizens of all the states."
    ]
  },
  {
    "id": "test_352",
    "context": "Journalist: Scientists took blood samples from two large, diverse groups of volunteers. All the volunteers in one group reported that they enjoyed eating vegetables, whereas all those in the other group disliked vegetables. When the blood samples from the group that disliked vegetables were analyzed, it was discovered that all the volunteers in that group had a gene in common, the XRV2G gene. This strongly suggests that a dislike of vegetables is, at least in some cases, genetically determined.",
    "question": "The journalist's argument is most vulnerable to criticism on which one of the following grounds?",
    "options": [
      "It overlooks the possibility that even if a dislike of vegetables is genetically determined, it may be strongly influenced by genes other than the XRV2G gene.",
      "It overlooks the possibility that even when one phenomenon always produces another phenomenon, the latter phenomenon may often be present when the former is absent.",
      "It overlooks the possibility that the volunteers in one or both of the two groups may not have been representative of the human population as a whole in one or more respects.",
      "It takes for granted that the volunteers in the group that enjoyed eating vegetables did not also all have the XRV2G gene in common."
    ],
    "raw_logic_programs": [
      "# Declarations\nvolunteers = EnumSort([enjoy_vegetables, dislike_vegetables])\ngenes = EnumSort([XRV2G])\nhas_gene = Function([volunteers] -> [bool])\n\n# Constraints\nForAll([v:volunteers], Or(has_gene(v) == True, has_gene(v) == False)) ::: Each volunteer either has or does not have the XRV2G gene\nForAll([v:volunteers], If(v == dislike_vegetables, has_gene(v) == True, True)) ::: All volunteers in the group that disliked vegetables had the XRV2G gene\n\n# Options\nQuestion ::: The journalist's argument is most vulnerable to criticism on which one of the following grounds?\nis_vulnerable(Exists([g:genes], And(g != XRV2G, has_gene(dislike_vegetables) == True))) ::: (A) It overlooks the possibility that even if a dislike of vegetables is genetically determined, it may be strongly influenced by genes other than the XRV2G gene.\nis_vulnerable(Exists([v:volunteers], And(has_gene(v) == False, v == dislike_vegetables))) ::: (B) It overlooks the possibility that even when one phenomenon always produces another phenomenon, the latter phenomenon may often be present when the former is absent.\nis_vulnerable(Exists([v:volunteers], Not(Representative(v)))) ::: (C) It overlooks the possibility that the volunteers in one or both of the two groups may not have been representative of the human population as a whole in one or more respects.\nis_vulnerable(has_gene(enjoy_vegetables) == True) ::: (D) It takes for granted that the volunteers in the group that enjoyed eating vegetables did not also all have the XRV2G gene in common."
    ]
  },
  {
    "id": "test_353",
    "context": "Patrick usually provides child care for six children. Parents leave their children at Patrick' s house in the morning and pick them up after work. At the end of each workweek, the parents pay Patrick at an hourly rate for the child care provided that week. The weekly income Patrick receives is usually adequate but not always uniform, particularly in the winter, when children are likely to get sick and be unpredictably absent.",
    "question": "Which of the following plans, if put into effect, has the best prospect of making Patrick's weekly income both uniform and adequate?",
    "options": [
      "Increase the hourly rate to a level that would provide adequate income even in a week when half of the children Patrick usually cares for are absent.",
      "Replace payment by actual hours of child care provided with a fixed weekly fee based upon the number of hours of child care that Patrick would typically be expected to provide.",
      "Hire a full-time helper and invest in facilities for providing child care to sick children.",
      "Increase the number of hours made available for child care each day, so that parents can leave their children in Patrick's care for a longer period each day at the current hourly rate."
    ],
    "raw_logic_programs": [
      "# Declarations\nplans = EnumSort([increase_rate, fixed_weekly_fee, hire_helper, increase_hours])\nincome = Function([plans] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, so we focus on evaluating the options.\n\n# Options\nQuestion ::: Which of the following plans, if put into effect, has the best prospect of making Patrick's weekly income both uniform and adequate?\nis_best_plan(income(increase_rate)) ::: (A) Increase the hourly rate to a level that would provide adequate income even in a week when half of the children Patrick usually cares for are absent.\nis_best_plan(income(fixed_weekly_fee)) ::: (B) Replace payment by actual hours of child care provided with a fixed weekly fee based upon the number of hours of child care that Patrick would typically be expected to provide.\nis_best_plan(income(hire_helper)) ::: (C) Hire a full-time helper and invest in facilities for providing child care to sick children.\nis_best_plan(income(increase_hours)) ::: (D) Increase the number of hours made available for child care each day, so that parents can leave their children in Patrick's care for a longer period each day at the current hourly rate."
    ]
  },
  {
    "id": "test_354",
    "context": "Editorial: The legislature is considering allowing oil drilling in the Cape Simmons Nature Preserve. Supporters claim that, because modern drilling methods will be used, there will be no damage to the environment. However, that claim is easily disproven by looking at nearby Alphin Bay, where oil drilling began five years ago. The land there is marred by industrial sprawl, drilling platforms, and thousands of miles of roads and pipelines.",
    "question": "Which one of the following, if true, most strengthens the argument in the editorial?",
    "options": [
      "Oil drilling is only one of several industrial activities that takes place at Alphin Bay.",
      "The Cape Simmons Nature Preserve is one of the few areas of pristine wilderness in the region.",
      "There have been no significant changes in oil drilling methods in the last five years.",
      "The companies drilling for oil at Alphin Bay never claimed that drilling there would not cause any environmental damage."
    ],
    "raw_logic_programs": [
      "# Declarations\nlocations = EnumSort([Cape_Simmons, Alphin_Bay])\nactivities = EnumSort([oil_drilling, industrial_sprawl, drilling_platforms, roads_pipelines])\ntime_periods = EnumSort([five_years_ago, present])\nclaims = Function([locations, activities, time_periods] -> [bool])\nenvironmental_damage = Function([locations] -> [bool])\n\n# Constraints\nclaims(Alphin_Bay, oil_drilling, five_years_ago) == True ::: Oil drilling began five years ago at Alphin Bay\nenvironmental_damage(Alphin_Bay) == True ::: The land at Alphin Bay is marred by industrial sprawl, drilling platforms, and thousands of miles of roads and pipelines\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument in the editorial?\nis_strongest(And(claims(Alphin_Bay, oil_drilling, present) == True, Not(environmental_damage(Alphin_Bay)))) ::: (A) Oil drilling is only one of several industrial activities that takes place at Alphin Bay.\nis_strongest(environmental_damage(Cape_Simmons) == False) ::: (B) The Cape Simmons Nature Preserve is one of the few areas of pristine wilderness in the region.\nis_strongest(ForAll([t:time_periods], claims(Alphin_Bay, oil_drilling, t) == claims(Alphin_Bay, oil_drilling, five_years_ago))) ::: (C) There have been no significant changes in oil drilling methods in the last five years.\nis_strongest(Not(claims(Alphin_Bay, oil_drilling, five_years_ago))) ::: (D) The companies drilling for oil at Alphin Bay never claimed that drilling there would not cause any environmental damage."
    ]
  },
  {
    "id": "test_355",
    "context": "Mayor: the commuters from the nearby suburb of Coldstream perennially complain of a difficult commute to our downtown region. To address these concerns, we should install high-speed toll collector on the interstate between here and Coldstream, thus relieving any traffic snarls caused by the hand-operated toll booths. Civil engineer: Over 95% of commuters from Coldstream take local roads, not the interstate, to our downtown region.",
    "question": "The civil engineer uses which of the following techniques in responding to the mayor?",
    "options": [
      "presenting evidence that the proposed solution would have damaging unforeseen consequences",
      "suggesting, by analogy, that the argument might not support the conclusion",
      "citing evidence that calls into question the assumption of the argument",
      "questioning whether the methods recommended would work in practice"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([mayor, civil_engineer])\ntechniques = EnumSort([evidence_damaging_consequences, analogy_argument, evidence_question_assumption, question_methods])\n\n# Constraints\nassertion(mayor) == \"install high-speed toll collector to relieve traffic snarls\"\nassertion(civil_engineer) == \"over 95% of commuters take local roads, not the interstate\"\n\n# Options\nQuestion ::: The civil engineer uses which of the following techniques in responding to the mayor?\nis_technique_used(civil_engineer, evidence_damaging_consequences) ::: (A) presenting evidence that the proposed solution would have damaging unforeseen consequences\nis_technique_used(civil_engineer, analogy_argument) ::: (B) suggesting, by analogy, that the argument might not support the conclusion\nis_technique_used(civil_engineer, evidence_question_assumption) ::: (C) citing evidence that calls into question the assumption of the argument\nis_technique_used(civil_engineer, question_methods) ::: (D) questioning whether the methods recommended would work in practice"
    ]
  },
  {
    "id": "test_356",
    "context": "A book tour will be successful if it is well publicized and the author is an established writer. Julia is an established writer, and her book tour was successful. So her book tour must have been well publicized.",
    "question": "Which one of the following exhibits a pattern of flawed reasoning most closely parallel to the pattern of flawed reasoning exhibited by the argument above?",
    "options": [
      "A house will suffer from dry rot and poor drainage only if it is built near a high water table. This house suffers from dry rot and has poor drainage. Thus, it must have been built near a high water table.",
      "If one wears a suit that has double vents and narrow lapels, one will be fashionably dressed. The suit that Joseph wore to dinner last night had double vents and narrow lapels, so Joseph must have been fashionably dressed.",
      "If cacti are kept in the shade and watered more than twice weekly, they will die. This cactus was kept in the shade, and it is now dead. Ttherefore, it must have been watered more than twice weekly.",
      "This recipe will turn out only if one follows it exactly and uses high-quality ingredients. Arthur followed the recipe exactly and it turned out. Thus, Arthur must have used high-quality ingredients."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([book_tour, house_condition, fashion, cactus, recipe])\nconditions = EnumSort([well_publicized, high_water_table, fashionably_dressed, overwatered, high_quality_ingredients])\noutcomes = EnumSort([successful, dry_rot_and_poor_drainage, fashionably_dressed, dead, turned_out])\n\n# Constraints\nsuccessful(book_tour) == And(well_publicized(book_tour), established_writer(book_tour)) ::: A book tour will be successful if it is well publicized and the author is an established writer\nestablished_writer(book_tour) ::: Julia is an established writer\nsuccessful(book_tour) ::: her book tour was successful\nwell_publicized(book_tour) ::: So her book tour must have been well publicized\n\n# Options\nQuestion ::: Which one of the following exhibits a pattern of flawed reasoning most closely parallel to the pattern of flawed reasoning exhibited by the argument above?\nis_parallel(And(dry_rot_and_poor_drainage(house_condition), high_water_table(house_condition))) ::: (A) A house will suffer from dry rot and poor drainage only if it is built near a high water table. This house suffers from dry rot and has poor drainage. Thus, it must have been built near a high water table.\nis_parallel(And(fashionably_dressed(fashion), double_vents_and_narrow_lapels(fashion))) ::: (B) If one wears a suit that has double vents and narrow lapels, one will be fashionably dressed. The suit that Joseph wore to dinner last night had double vents and narrow lapels, so Joseph must have been fashionably dressed.\nis_parallel(And(dead(cactus), overwatered(cactus))) ::: (C) If cacti are kept in the shade and watered more than twice weekly, they will die. This cactus was kept in the shade, and it is now dead. Therefore, it must have been watered more than twice weekly.\nis_parallel(And(turned_out(recipe), high_quality_ingredients(recipe))) ::: (D) This recipe will turn out only if one follows it exactly and uses high-quality ingredients. Arthur followed the recipe exactly and it turned out. Thus, Arthur must have used high-quality ingredients."
    ]
  },
  {
    "id": "test_357",
    "context": "In several countries, to slow global warming, many farmers are planting trees on their land because of government incentives. These incentives arose from research indicating that vegetation absorbs carbon dioxide that might otherwise trap heat in the atmosphere. A recent study, however, indicates that trees absorb and store carbon dioxide less effectively than native grasses. Ttherefore, these incentives are helping to hasten global warming.",
    "question": "The argument requires the assumption that",
    "options": [
      "land that has been deforested seldom later sustains native grasses",
      "most farmers do not plant any trees on their land unless there is an incentive to do so",
      "some of the trees planted in response to the incentives are planted where native grasses would otherwise be growing",
      "trees not only absorb carbon dioxide but also emit it"
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([land, farmers, trees, native_grasses, incentives, global_warming, carbon_dioxide])\nfunctions = Function([variables] -> [bool])\n\n# Constraints\nfunctions(trees) == True ::: Trees are being planted due to government incentives\nfunctions(incentives) == True ::: Incentives arose from research indicating vegetation absorbs carbon dioxide\nfunctions(native_grasses) == True ::: Native grasses absorb and store carbon dioxide more effectively than trees\nfunctions(global_warming) == True ::: Incentives are helping to hasten global warming\n\n# Options\nQuestion ::: The argument requires the assumption that\nis_assumption(functions(land) == False) ::: (land that has been deforested seldom later sustains native grasses)\nis_assumption(functions(farmers) == False) ::: (most farmers do not plant any trees on their land unless there is an incentive to do so)\nis_assumption(functions(trees) == True) ::: (some of the trees planted in response to the incentives are planted where native grasses would otherwise be growing)\nis_assumption(functions(carbon_dioxide) == True) ::: (trees not only absorb carbon dioxide but also emit it)"
    ]
  },
  {
    "id": "test_358",
    "context": "Merton: A study showed that people who live on very busy streets have higher rates of heart disease than average. I conclude that this elevated rate of heart disease is caused by air pollution from automobile exhaust. Ortiz: Are you sure? Do we know whether people living on busy streets have other lifestyle factors that are especially conducive to heart disease?",
    "question": "Ortiz criticizes Merton's argument by",
    "options": [
      "contending that Merton needs to take into account other effects of air pollution",
      "claiming that Merton misunderstands a crucial aspect of the study's findings",
      "suggesting that alternative explanations for the study's findings need to be ruled out",
      "raising a question about the validity of the study that Merton cites"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Merton, Ortiz])\nfactors = EnumSort([air_pollution, lifestyle_factors, study_validity, study_findings])\ncriticizes = Function([arguments, factors] -> [bool])\n\n# Constraints\ncriticizes(Merton, air_pollution) ::: Merton concludes that elevated heart disease rates are caused by air pollution\ncriticizes(Ortiz, lifestyle_factors) ::: Ortiz questions whether lifestyle factors are conducive to heart disease\n\n# Options\nQuestion ::: Ortiz criticizes Merton's argument by\nis_valid(criticizes(Ortiz, air_pollution)) ::: (contending that Merton needs to take into account other effects of air pollution)\nis_valid(criticizes(Ortiz, study_findings)) ::: (claiming that Merton misunderstands a crucial aspect of the study's findings)\nis_valid(criticizes(Ortiz, lifestyle_factors)) ::: (suggesting that alternative explanations for the study's findings need to be ruled out)\nis_valid(criticizes(Ortiz, study_validity)) ::: (raising a question about the validity of the study that Merton cites)"
    ]
  },
  {
    "id": "test_359",
    "context": "Oceanologist: Recently an unprecedented number of dead dolphins washed ashore along the mid-Atlantic coast. In the blood of over half of the dolphins, marine biologists discovered a brevotoxin that had been emitted by the alga Ptychodiscus brevis, in what is known as a red tide. Additionally, polychlorinated biphenyls (PCB), a toxic industrial compound, was also found in the dolphin's blood. A reasonable conclusion, and indeed one many have drawn, is that the dolphins were simply victims of the brevotoxin. Nonetheless, brevotoxins, by themselves, are not lethal to dolphins, though they do tax the dolphins system. Furthermore, most dolphins have some accumulated brevotoxins in their blood without suffering any ill health effects. Ttherefore, the brevotoxins alone cannot explain the mass beaching of dead dolphins.",
    "question": "Which of the following, if true, does most to help explain the oceanologist's doubt that the brevotoxins were the primary cause of the dolphins washing upon shore?",
    "options": [
      "While PCB can cause metabolic imbalances in dolphins so that they stop eating prematurely, the dose of PCB a dolphin encounters in the wild is unlikely to pose a lethal threat to a dolphin.",
      "Shortly before the dolphins washed ashore, a major oil spill not only caused algae to release brevotoxins but also released an array of deleterious industrial pollutants, including PCB.",
      "Scientists, near to the site of the beached dolphins, discovered a group of beach sea otters exhibiting similar symptoms as the dolphins.",
      "PCB and brevotoxins exercise different effects on an organism, with PCB causing visible lesions."
    ],
    "raw_logic_programs": [
      "# Declarations\ntoxins = EnumSort([brevotoxin, PCB])\neffects = EnumSort([lethal, non_lethal, metabolic_imbalance, visible_lesions])\ndolphins = EnumSort([dolphin1, dolphin2, ..., dolphinN])  # Representing each dolphin\n\n# Constraints\nForAll([d:dolphins], Exists([t:toxins], has_toxin(d, t))) ::: Each dolphin has at least one toxin in their blood\nForAll([d:dolphins], has_toxin(d, brevotoxin) -> effect(brevotoxin) == non_lethal) ::: Brevotoxins alone are not lethal to dolphins\nForAll([d:dolphins], has_toxin(d, PCB) -> effect(PCB) == metabolic_imbalance) ::: PCB can cause metabolic imbalances\nExists([d:dolphins], has_toxin(d, brevotoxin) & has_toxin(d, PCB)) ::: Some dolphins have both brevotoxin and PCB\n\n# Options\nQuestion ::: Which of the following, if true, does most to help explain the oceanologist's doubt that the brevotoxins were the primary cause of the dolphins washing upon shore?\nis_explanatory(While PCB can cause metabolic imbalances in dolphins so that they stop eating prematurely, the dose of PCB a dolphin encounters in the wild is unlikely to pose a lethal threat to a dolphin.) ::: (A)\nis_explanatory(Shortly before the dolphins washed ashore, a major oil spill not only caused algae to release brevotoxins but also released an array of deleterious industrial pollutants, including PCB.) ::: (B)\nis_explanatory(Scientists, near to the site of the beached dolphins, discovered a group of beach sea otters exhibiting similar symptoms as the dolphins.) ::: (C)\nis_explanatory(PCB and brevotoxins exercise different effects on an organism, with PCB causing visible lesions.) ::: (D)"
    ]
  },
  {
    "id": "test_360",
    "context": "There are already more great artworks in the world than any human being could appreciate in a lifetime, works capable of satisfying virtually any taste imaginable. Thus, contemporary artists, all of whom believe that their works enable many people to feel more aesthetically fulfilled than they otherwise could, are mistaken.",
    "question": "The argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "overlooks the possibility that not all contemporary artists believe that their works enable many people to feel more aesthetically fulfilled than they otherwise could",
      "presumes, without providing justification, that most human beings are inclined to take the time to appreciate many great artworks",
      "overlooks the possibility that the work of at least one contemporary artist is appreciated by many people whose access to the great majority of other artworks is severely restricted",
      "presumes, without providing justification, that the number and variety of great artworks already in the world affects the amount of aesthetic fulfillment derivable from any contemporary artwork"
    ],
    "raw_logic_programs": [
      "# Declarations\nartworks = EnumSort([great_artworks, contemporary_artworks])\nartists = EnumSort([contemporary_artists])\nbeliefs = Function([artists] -> [bool])\nappreciation = Function([artworks] -> [bool])\n\n# Constraints\nForAll([a:artworks], appreciation(a)) ::: There are already more great artworks in the world than any human being could appreciate in a lifetime\nForAll([a:artists], beliefs(a)) ::: contemporary artists believe that their works enable many people to feel more aesthetically fulfilled than they otherwise could\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(overlooks(Exists([a:artists], Not(beliefs(a))))) ::: overlooks the possibility that not all contemporary artists believe that their works enable many people to feel more aesthetically fulfilled than they otherwise could\nis_vulnerable(presumes(ForAll([h:humans], appreciation(great_artworks)))) ::: presumes, without providing justification, that most human beings are inclined to take the time to appreciate many great artworks\nis_vulnerable(overlooks(Exists([a:artworks], And(appreciation(a), restricted_access(a))))) ::: overlooks the possibility that the work of at least one contemporary artist is appreciated by many people whose access to the great majority of other artworks is severely restricted\nis_vulnerable(presumes(ForAll([a:artworks], affects(a, contemporary_artworks)))) ::: presumes, without providing justification, that the number and variety of great artworks already in the world affects the amount of aesthetic fulfillment derivable from any contemporary artwork"
    ]
  },
  {
    "id": "test_361",
    "context": "Politician: Unless our nation redistributes wealth, we will be unable to alleviate economic injustice and our current system will lead inevitably to intolerable economic inequities. If the inequities become intolerable, those who suffer from the injustice will resort to violence to coerce social reform. It is our nation' s responsibility to do whatever is necessary to alleviate conditions that would otherwise give rise to violent attempts at social reform.",
    "question": "The statements above logically commit the politician to which one of the following conclusions?",
    "options": [
      "Politicians must base decisions on political expediency rather than on abstract moral principles.",
      "The need for political reform never justifies a resort to violent remedies.",
      "It is our nation's responsibility to redistribute wealth.",
      "Economic injustice need not be remedied unless it leads to intolerable social conditions."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([redistribute_wealth, alleviate_injustice, intolerable_inequities, resort_to_violence, responsibility])\nactions = EnumSort([do_whatever_necessary, redistribute_wealth_action])\nresults = EnumSort([alleviate_conditions, give_rise_to_violence])\n\n# Constraints\nImplies(Not(redistribute_wealth), And(Not(alleviate_injustice), intolerable_inequities)) ::: Unless our nation redistributes wealth, we will be unable to alleviate economic injustice and our current system will lead inevitably to intolerable economic inequities\nImplies(intolerable_inequities, resort_to_violence) ::: If the inequities become intolerable, those who suffer from the injustice will resort to violence to coerce social reform\nImplies(responsibility, do_whatever_necessary) ::: It is our nation' s responsibility to do whatever is necessary to alleviate conditions that would otherwise give rise to violent attempts at social reform\n\n# Options\nQuestion ::: The statements above logically commit the politician to which one of the following conclusions?\nis_committed(responsibility == redistribute_wealth_action) ::: (It is our nation's responsibility to redistribute wealth)\nis_committed(Not(resort_to_violence)) ::: (The need for political reform never justifies a resort to violent remedies)\nis_committed(do_whatever_necessary) ::: (Politicians must base decisions on political expediency rather than on abstract moral principles)\nis_committed(Not(alleviate_injustice)) ::: (Economic injustice need not be remedied unless it leads to intolerable social conditions)"
    ]
  },
  {
    "id": "test_362",
    "context": "Grasses and woody plants are planted on dirt embankments to keep the embankments from eroding. The embankments are mowed to keep the grasses from growing too tall; as a result, clippings pile up. These piles of clippings smother the woody plants, causing their roots, which serve to keep the embankments from eroding, to rot; they also attract rodents that burrow into the dirt and damage the woody plants' roots. Ttherefore, bringing in predators to eradicate the rodents will prevent erosion of the embankments.",
    "question": "Which one of the following is an error of reasoning in the argument?",
    "options": [
      "An action that would eliminate one cause of a problem is treated as if it would solve the entire problem.",
      "The conclusion is no more than a restatement of one of the pieces of evidence provided to support it.",
      "A highly general proposal is based only on an unrepresentative set of facts.",
      "Two events that merely co-occur are treated as if one caused the other."
    ],
    "raw_logic_programs": [
      "# Declarations\nproblems = EnumSort([erosion, clippings, rodents])\nactions = EnumSort([mowing, bringing_predators])\neffects = Function([actions, problems] -> [bool])\n\n# Constraints\neffects(mowing, clippings) ::: Mowing causes clippings to pile up\neffects(clippings, erosion) ::: Clippings smother woody plants, causing erosion\neffects(rodents, erosion) ::: Rodents burrow and damage roots, causing erosion\neffects(bringing_predators, rodents) ::: Bringing in predators eradicates rodents\n\n# Options\nQuestion ::: Which one of the following is an error of reasoning in the argument?\nis_error(effects(bringing_predators, erosion) == False) ::: (An action that would eliminate one cause of a problem is treated as if it would solve the entire problem.\nis_error(effects(bringing_predators, erosion) == effects(rodents, erosion)) ::: (The conclusion is no more than a restatement of one of the pieces of evidence provided to support it.\nis_error(Exists([p:problems], effects(bringing_predators, p) == True) == False) ::: (A highly general proposal is based only on an unrepresentative set of facts.\nis_error(And(effects(rodents, erosion), effects(bringing_predators, rodents)) == False) ::: (Two events that merely co-occur are treated as if one caused the other."
    ]
  },
  {
    "id": "test_363",
    "context": "Only reducing the number of customers at the Fairhaven branch of the Tax Center by 15 percent will allow the center to reduce the significant waiting time that many of their clients experience. The Tax Center in Brookerton, 30 miles away, would-if expanded-provide an attractive alternative for 30 percent of the customers currently using the Fairhaven Tax Center. Nevertheless, the Tax Center CEO has rejected the proposal to expand the Brookerton branch, claiming that it will not end the long wait times at the Fairhaven branch.",
    "question": "Which of the following, if true, most helps to justify the CEO's position?",
    "options": [
      "Sending more customers to Brookerton would increase traffic along the roads to that city, making the driving time longer.",
      "Customers who have stood in line for more than five minutes are likely to spend significantly less money on services than those who do not have to wait.",
      "Brookerton is a small town in which numerous other local businesses would benefit from increased business at the Brookerton Tax Center.",
      "Sixty-five percent of Fairhaven customers cite the dedicated staff as the primary reason for returning to that Tax Center."
    ],
    "raw_logic_programs": [
      "# Declarations\ncustomers = EnumSort([Fairhaven, Brookerton])\npercent_reduction = Function([customers] -> [int])\n\n# Constraints\npercent_reduction(Fairhaven) == 15 ::: Only reducing the number of customers at the Fairhaven branch by 15 percent will reduce waiting time\npercent_reduction(Brookerton) == 30 ::: Brookerton would provide an attractive alternative for 30 percent of Fairhaven customers if expanded\n\n# Options\nQuestion ::: Which of the following, if true, most helps to justify the CEO's position?\nis_justified(Sending more customers to Brookerton would increase traffic along the roads to that city, making the driving time longer) ::: (A)\nis_justified(Customers who have stood in line for more than five minutes are likely to spend significantly less money on services than those who do not have to wait) ::: (B)\nis_justified(Brookerton is a small town in which numerous other local businesses would benefit from increased business at the Brookerton Tax Center) ::: (C)\nis_justified(Sixty-five percent of Fairhaven customers cite the dedicated staff as the primary reason for returning to that Tax Center) ::: (D)"
    ]
  },
  {
    "id": "test_364",
    "context": "Barnes: The two newest employees at this company have salaries that are too high for the simple tasks normally assigned to new employees and duties that are too complex for inexperienced workers. Hence, the salaries and the complexity of the duties of these two newest employees should be reduced.",
    "question": "Which one of the following is an assumption on which Barnes's argument depends?",
    "options": [
      "The two newest employees are not experienced at their occupations.",
      "The duties of the two newest employees are not less complex than any others in the company.",
      "The salaries of the two newest employees are no higher than the salaries that other companies pay for workers with a similar level of experience.",
      "Barnes was not hired at a higher-than-average starting salary."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([newest_employee1, newest_employee2])\ntasks = EnumSort([simple, complex])\nsalaries = EnumSort([high, appropriate])\nduties = EnumSort([simple, complex])\nassigned_tasks = Function([employees] -> [tasks])\nemployee_salaries = Function([employees] -> [salaries])\nemployee_duties = Function([employees] -> [duties])\n\n# Constraints\nForAll([e:employees], assigned_tasks(e) == simple) ::: The two newest employees have simple tasks\nForAll([e:employees], employee_salaries(e) == high) ::: The two newest employees have high salaries\nForAll([e:employees], employee_duties(e) == complex) ::: The two newest employees have complex duties\n\n# Options\nQuestion ::: Which one of the following is an assumption on which Barnes's argument depends?\nis_assumption(ForAll([e:employees], Not(experienced(e)))) ::: (A) The two newest employees are not experienced at their occupations.\nis_assumption(ForAll([e:employees], Not(Exists([other:employees], employee_duties(e) < employee_duties(other))))) ::: (B) The duties of the two newest employees are not less complex than any others in the company.\nis_assumption(ForAll([e:employees], employee_salaries(e) <= salaries_of_similar_experience(e))) ::: (C) The salaries of the two newest employees are no higher than the salaries that other companies pay for workers with a similar level of experience.\nis_assumption(Not(hired_at_higher_than_average_salary(Barnes))) ::: (D) Barnes was not hired at a higher-than-average starting salary."
    ]
  },
  {
    "id": "test_365",
    "context": "Editorial: Cell-phone usage on buses and trains is annoying to other passengers. This suggests that recent proposals to allow use of cell phones on airplanes are ill-advised. Cell-phone use would be far more upsetting on airplanes than it is on buses and trains. Airline passengers are usually packed in tightly. And if airline passengers are offended by the cell-phone excesses of their seatmates, they often cannot move to another seat.",
    "question": "Which one of the following most accurately describes the role played in the editorial's argument by the statement that cell-phone use would be far more upsetting on airplanes than it is on buses and trains?",
    "options": [
      "It is a premise that indirectly supports the main conclusion of the argument by supporting a premise for that conclusion.",
      "It is the main conclusion of the argument.",
      "It is a conclusion for which support is provided and that itself is used in turn to directly support the argument's main conclusion.",
      "It is a claim that the argument tries to rebut."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([cell_phone_annoying_buses_trains, proposals_ill_advised, more_upsetting_airplanes, passengers_packed_tightly, cannot_move_seat])\nroles = EnumSort([premise_indirect_support, main_conclusion, conclusion_supporting_main, rebuttal])\nrole_of_statement = Function([statements] -> [roles])\n\n# Constraints\nrole_of_statement(cell_phone_annoying_buses_trains) == premise_indirect_support ::: Cell-phone usage on buses and trains is annoying to other passengers\nrole_of_statement(proposals_ill_advised) == main_conclusion ::: Recent proposals to allow use of cell phones on airplanes are ill-advised\nrole_of_statement(more_upsetting_airplanes) == conclusion_supporting_main ::: Cell-phone use would be far more upsetting on airplanes than it is on buses and trains\nrole_of_statement(passengers_packed_tightly) == premise_indirect_support ::: Airline passengers are usually packed in tightly\nrole_of_statement(cannot_move_seat) == premise_indirect_support ::: If airline passengers are offended by the cell-phone excesses of their seatmates, they often cannot move to another seat\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the editorial's argument by the statement that cell-phone use would be far more upsetting on airplanes than it is on buses and trains?\nis_accurate(role_of_statement(more_upsetting_airplanes) == premise_indirect_support) ::: (It is a premise that indirectly supports the main conclusion of the argument by supporting a premise for that conclusion.\nis_accurate(role_of_statement(more_upsetting_airplanes) == main_conclusion) ::: (It is the main conclusion of the argument.\nis_accurate(role_of_statement(more_upsetting_airplanes) == conclusion_supporting_main) ::: (It is a conclusion for which support is provided and that itself is used in turn to directly support the argument's main conclusion.\nis_accurate(role_of_statement(more_upsetting_airplanes) == rebuttal) ::: (It is a claim that the argument tries to rebut."
    ]
  },
  {
    "id": "test_366",
    "context": "In ancient Mesopotamia, prior to 2900 B. C. , wheat was cultivated in considerable quantities, but after 2900 B. C. production of that grain began to decline as the production of barley increased sharply. Some historians who study ancient Mesopotamia contend that the decline in wheat production was due to excessive irrigation, lack of drainage, and the consequent accumulation of salt residues in the soil.",
    "question": "Which one of the following, if true, most helps to support the historians' contention concerning the reasons for the decline in wheat production in ancient Mesopotamia?",
    "options": [
      "The cultivation of barley requires considerably less water than does the cultivation of wheat.",
      "Literary and archaeological evidence indicates that in the period following 2900 B. C. , barley became the principal grain in the diet of most of the inhabitants of Mesopotamia.",
      "Prior to 2900 B. C. , barley was cultivated along with wheat, but the amount of barley produced was far less than the amount of wheat produced.",
      "Barley has much greater resistance to the presence of salt in soil than does wheat."
    ],
    "raw_logic_programs": [
      "# Declarations\ngrains = EnumSort([wheat, barley])\nfactors = EnumSort([irrigation, drainage, salt_residues])\nproduction_decline = Function([grains] -> [bool])\ncauses_decline = Function([factors] -> [bool])\n\n# Constraints\nproduction_decline(wheat) == True ::: Production of wheat began to decline after 2900 B.C.\nproduction_decline(barley) == False ::: Production of barley increased sharply after 2900 B.C.\nForAll([f:factors], causes_decline(f) == True) ::: Excessive irrigation, lack of drainage, and salt residues are considered causes for the decline in wheat production\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to support the historians' contention concerning the reasons for the decline in wheat production in ancient Mesopotamia?\nis_supportive(causes_decline(irrigation) == True) ::: (The cultivation of barley requires considerably less water than does the cultivation of wheat.\nis_supportive(causes_decline(drainage) == True) ::: (Literary and archaeological evidence indicates that in the period following 2900 B.C., barley became the principal grain in the diet of most of the inhabitants of Mesopotamia.\nis_supportive(causes_decline(salt_residues) == True) ::: (Barley has much greater resistance to the presence of salt in soil than does wheat."
    ]
  },
  {
    "id": "test_367",
    "context": "Yolanda: Gaining access to computers without authorization and manipulating the data and programs they contain is comparable to joyriding in stolen cars; both involve breaking into private property and treating it recklessly. Joyriding, however, is the more dangerous crime because it physically endangers people, whereas only intellectual property is harmed in the case of computer crimes. Arjun: I disagree! For example, unauthorized use of medical records systems in hospitals could damage data systems on which human lives depend, and ttherefore computer crimes also cause physical harm to people.",
    "question": "An issue in dispute between Yolanda and Arjun is",
    "options": [
      "whether the unauthorized use of computers is as dangerous to people as is joyriding",
      "whether the unauthorized manipulation of computer data involves damage to private property",
      "whether damage to physical property is more criminal than damage to intellectual property",
      "whether treating private property recklessly is ever a dangerous crime"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([unauthorized_use_dangerous, unauthorized_manipulation_damage, physical_vs_intellectual_damage, reckless_treatment_dangerous])\npositions = EnumSort([Yolanda, Arjun])\nagrees = Function([positions, statements] -> [bool])\n\n# Constraints\nagrees(Yolanda, unauthorized_use_dangerous) == False ::: Yolanda believes unauthorized use of computers is less dangerous than joyriding\nagrees(Arjun, unauthorized_use_dangerous) == True ::: Arjun believes unauthorized use of computers can be as dangerous as joyriding\nagrees(Yolanda, unauthorized_manipulation_damage) == True ::: Yolanda believes unauthorized manipulation involves damage to private property\nagrees(Arjun, unauthorized_manipulation_damage) == True ::: Arjun believes unauthorized manipulation involves damage to private property\nagrees(Yolanda, physical_vs_intellectual_damage) == True ::: Yolanda believes damage to physical property is more criminal than damage to intellectual property\nagrees(Arjun, physical_vs_intellectual_damage) == False ::: Arjun does not necessarily agree with Yolanda on this point\nagrees(Yolanda, reckless_treatment_dangerous) == True ::: Yolanda believes treating private property recklessly is dangerous\nagrees(Arjun, reckless_treatment_dangerous) == True ::: Arjun believes treating private property recklessly is dangerous\n\n# Options\nQuestion ::: An issue in dispute between Yolanda and Arjun is\nis_dispute(agrees(Yolanda, unauthorized_use_dangerous) != agrees(Arjun, unauthorized_use_dangerous)) ::: (whether the unauthorized use of computers is as dangerous to people as is joyriding)\nis_dispute(agrees(Yolanda, unauthorized_manipulation_damage) != agrees(Arjun, unauthorized_manipulation_damage)) ::: (whether the unauthorized manipulation of computer data involves damage to private property)\nis_dispute(agrees(Yolanda, physical_vs_intellectual_damage) != agrees(Arjun, physical_vs_intellectual_damage)) ::: (whether damage to physical property is more criminal than damage to intellectual property)\nis_dispute(agrees(Yolanda, reckless_treatment_dangerous) != agrees(Arjun, reckless_treatment_dangerous)) ::: (whether treating private property recklessly is ever a dangerous crime)"
    ]
  },
  {
    "id": "test_368",
    "context": "Some philosophers explain visual perception by suggesting that when we visually perceive an object, a mental image of that object forms in our mind. However, this hypothesis cannot be correct, since it would require an inner self visually perceiving the newly formed mental image; this would in turn require that the inner self have a mental image of that mental image, and so on. But such an infinite regress is absurd.",
    "question": "Which one of the following arguments is most similar in its pattern of reasoning to the argument above?",
    "options": [
      "The claim that any scientific theory is adequate as long as it agrees with all the empirical data cannot be correct. For there are an infinite number of theories all of which account equally well for the empirical data, and they cannot all be true at the same time.",
      "Some historians claim that no theory is ever genuinely new; no matter how clever a theory is, there is always a precedent theory that contains its gist. But if this were true, then every theory would have a precedent theory containing its gist, and this precedent theory would also have a precedent theory, and so on, without end. Since this is clearly impossible, the historians' claim must be false.",
      "Some people claim that the first library was the library of Alexandria, which for many centuries contained the largest collection of books in the world. However, Alexandria's collection was itself put together from smaller collections, small libraries in themselves. It follows that the library of Alexandria was not the first in the world.",
      "Some engineers define a structure's foundation as that part of the structure that supports the rest of the structure. This definition is unfortunate, however, because it evokes the suggestion that the foundation itself does not have any support, which, of course, is absurd."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nreasoning_pattern = Function([arguments] -> [bool])\n\n# Constraints\nreasoning_pattern(A) == False ::: The claim that any scientific theory is adequate as long as it agrees with all the empirical data cannot be correct. For there are an infinite number of theories all of which account equally well for the empirical data, and they cannot all be true at the same time.\nreasoning_pattern(B) == True ::: Some historians claim that no theory is ever genuinely new; no matter how clever a theory is, there is always a precedent theory that contains its gist. But if this were true, then every theory would have a precedent theory containing its gist, and this precedent theory would also have a precedent theory, and so on, without end. Since this is clearly impossible, the historians' claim must be false.\nreasoning_pattern(C) == False ::: Some people claim that the first library was the library of Alexandria, which for many centuries contained the largest collection of books in the world. However, Alexandria's collection was itself put together from smaller collections, small libraries in themselves. It follows that the library of Alexandria was not the first in the world.\nreasoning_pattern(D) == False ::: Some engineers define a structure's foundation as that part of the structure that supports the rest of the structure. This definition is unfortunate, however, because it evokes the suggestion that the foundation itself does not have any support, which, of course, is absurd.\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its pattern of reasoning to the argument above?\nis_similar(reasoning_pattern(A)) ::: (A)\nis_similar(reasoning_pattern(B)) ::: (B)\nis_similar(reasoning_pattern(C)) ::: (C)\nis_similar(reasoning_pattern(D)) ::: (D)"
    ]
  },
  {
    "id": "test_369",
    "context": "A study of 20, 000 20- to 64-year-olds found that people' s satisfaction with their incomes is not strongly correlated with the amount they make. People tend to live in neighborhoods of people from their same economic class, and the study shows that people' s satisfaction with their incomes depends largely on how favorably their incomes compare with those of their neighbors.",
    "question": "The statements above, if true, most strongly support which one of the following hypotheses?",
    "options": [
      "An increase in everyone's incomes is not likely to greatly increase people's levels of satisfaction with their own incomes.",
      "People with high incomes are consistently more satisfied with their incomes than are people in the middle class.",
      "Satisfaction with income is strongly correlated with neighborhood.",
      "In general, people's income levels have little effect on their level of satisfaction with life as a whole."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, ..., person20000])\nincome_levels = EnumSort([low, middle, high])\nneighborhoods = Function([people] -> [income_levels])\nsatisfaction = Function([people] -> [real])\nincome = Function([people] -> [real])\n\n# Constraints\nForAll([p:people], neighborhoods(p) == income_levels(income(p))) ::: People tend to live in neighborhoods of people from their same economic class\nForAll([p:people], satisfaction(p) == Compare(income(p), Average([n:people], neighborhoods(n) == neighborhoods(p), income(n)))) ::: People’s satisfaction with their incomes depends largely on how favorably their incomes compare with those of their neighbors\n\n# Options\nQuestion ::: The statements above, if true, most strongly support which one of the following hypotheses?\nis_supported(ForAll([p:people], Increase(income(p)) does not greatly increase satisfaction(p))) ::: (A) An increase in everyone's incomes is not likely to greatly increase people's levels of satisfaction with their own incomes.\nis_supported(ForAll([p1, p2:people], Implies(income(p1) > income(p2), satisfaction(p1) > satisfaction(p2)))) ::: (B) People with high incomes are consistently more satisfied with their incomes than are people in the middle class.\nis_supported(ForAll([p:people], satisfaction(p) is strongly correlated with neighborhoods(p))) ::: (C) Satisfaction with income is strongly correlated with neighborhood.\nis_supported(ForAll([p:people], income(p) has little effect on overall life satisfaction(p))) ::: (D) In general, people's income levels have little effect on their level of satisfaction with life as a whole."
    ]
  },
  {
    "id": "test_370",
    "context": "In Borania many people who want to quit smoking wear nicotine skin patches, which deliver small doses of nicotine through the skin. Beginning next month, these patches can be purchased without a doctor' s prescription. Although nonprescription patches will be no more effective than those obtained by prescription and will be equally expensive, patch manufacturers are nevertheless predicting that the patches' new nonprescription status will boost sales, which have slowed considerably in recent years.",
    "question": "Which of the following, if true in Borania, most strongly supports the manufacturers' prediction?",
    "options": [
      "Several nonprescription aids aimed at helping people to quit smoking have been widely available for a number of years.",
      "People who use nicotine skin patches have approximately the same rate of success in quitting smoking as do people who use other aids aimed at helping people to quit smoking.",
      "Most people who wanted to quit smoking and who found the nicotine skin patch helpful in quitting have quit.",
      "Many smokers who want to quit smoking feel that they cannot afford to visit a doctor for a prescription."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `patch_status`: EnumSort([prescription, nonprescription])\n- `sales`: Function([patch_status] -> [int])\n- `afford_doctor`: Function([bool] -> [int])\n\n# Constraints\n- `sales(prescription) <= sales(nonprescription)`: The prediction is that nonprescription status will boost sales.\n- `afford_doctor(false) > 0`: Many smokers who want to quit smoking feel that they cannot afford to visit a doctor for a prescription.\n\n# Options\nQuestion: Which of the following, if true in Borania, most strongly supports the manufacturers' prediction?\n- `is_strong_support(afford_doctor(false) > 0)`: (D) Many smokers who want to quit smoking feel that they cannot afford to visit a doctor for a prescription."
    ]
  },
  {
    "id": "test_371",
    "context": "Letter to the Editor: Your article on effective cockroach control states that vexone is effective against only one of the more than 4, 000 cockroach species that infest North America: the German cockroach. In actuality, vexone has been utilized effectively for almost a decade against all of the species that infest North America. In testing our product, Roach Ender, which contains vexone, we have conducted many well-documented studies that prove this fact.",
    "question": "Each of the following statements conflicts with the letter writer's view EXCEPT:",
    "options": [
      "Vexone is effective against only two species of cockroach that infest North America.",
      "Not all of the major species of cockroach that infest North America can be controlled by Roach Ender.",
      "Every species of cockroach that infests North America can be controlled by vexone.",
      "Roach Ender was tested against exactly 4, 000 cockroach species that infest North America."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([species1, species2, ..., species4000])\nproducts = EnumSort([vexone, roach_ender])\ncontrols = Function([products, species] -> [bool])\n\n# Constraints\nForAll([s:species], controls(vexone, s)) ::: vexone is effective against all species that infest North America\nForAll([s:species], controls(roach_ender, s)) ::: Roach Ender, which contains vexone, is effective against all species that infest North America\n\n# Options\nQuestion ::: Each of the following statements conflicts with the letter writer's view EXCEPT:\nis_consistent(Exists([s1:species, s2:species], And(controls(vexone, s1), controls(vexone, s2), Not(controls(vexone, species3))))) ::: (Vexone is effective against only two species of cockroach that infest North America.\nis_consistent(Exists([s:species], Not(controls(roach_ender, s)))) ::: (Not all of the major species of cockroach that infest North America can be controlled by Roach Ender.\nis_consistent(ForAll([s:species], controls(vexone, s))) ::: (Every species of cockroach that infests North America can be controlled by vexone.\nis_consistent(Count([s:species], controls(roach_ender, s)) == 4000) ::: (Roach Ender was tested against exactly 4,000 cockroach species that infest North America."
    ]
  },
  {
    "id": "test_372",
    "context": "Residents of a coastal community are resisting the efforts of one family to build a large house on the family' s land. Although the house would not violate any town codes, the land in question is depicted in a painting by a famous and beloved landscape painter who recently died. Residents argue that the house would alter the pristine landscape and hence damage the community' s artistic and historic heritage.",
    "question": "Which one of the following principles, if valid, most helps to justify the reasoning of the residents opposed to building the house?",
    "options": [
      "Every possible effort should be made to preserve historic buildings that are well known and well loved.",
      "In historic communities, the building and zoning regulations should prohibit construction that obstructs access to historic sites.",
      "Communities that seek to preserve undeveloped areas of landscape or historic neighborhoods should purchase those properties for the public trust.",
      "The right to build on one's own property is constrained by the artistic and historical interests of the community at large."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([preserve_historic_buildings, prohibit_construction_obstructing_access, purchase_for_public_trust, constrain_right_to_build])\nreasoning = Function([principles] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the task is to identify which principle justifies the reasoning.\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the reasoning of the residents opposed to building the house?\nis_valid(reasoning(constrain_right_to_build)) ::: (The right to build on one's own property is constrained by the artistic and historical interests of the community at large.)\nis_valid(reasoning(preserve_historic_buildings)) ::: (Every possible effort should be made to preserve historic buildings that are well known and well loved.)\nis_valid(reasoning(prohibit_construction_obstructing_access)) ::: (In historic communities, the building and zoning regulations should prohibit construction that obstructs access to historic sites.)\nis_valid(reasoning(purchase_for_public_trust)) ::: (Communities that seek to preserve undeveloped areas of landscape or historic neighborhoods should purchase those properties for the public trust.)"
    ]
  },
  {
    "id": "test_373",
    "context": "The return of organic wastes to the soil is a good solution to waste disposal problems only if the wastes are nontoxic and not too much energy is expended in transporting them. In small-scale organic farming, the wastes are nontoxic and not too much energy is expended in transporting them. Hence, returning organic wastes to the soil is a good way for small-scale organic farms to solve their waste disposal problems.",
    "question": "Which one of the following exhibits flawed reasoning most similar to the flawed reasoning exhibited by the argument above?",
    "options": [
      "Plants thrive if they get an abundance of moisture, light, and nutrients. In greenhouses, plants get an optimal combination of all three, which is why commercially produced plants are so healthy when you first buy them.",
      "A meal is nutritious only if it includes both carbohydrates and protein. Almost 80 percent of the calories in what I ate for lunch were from fat, so what I ate for lunch was not nutritious.",
      "To be viable, a business idea must be clear, cost- effective, practical, and responsive to a market demand. Your idea for a website information service has all these properties, so it is viable.",
      "When every country has equal access to markets, which will be the case 20 years from now, globalization of markets will provide a way for each country to optimize its use of resources. So, globalization of markets will show the desired results 20 years from now."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([nontoxic, low_energy])\nfarming_types = EnumSort([small_scale, large_scale])\nsolution = Function([farming_types] -> [bool])\n\n# Constraints\nForAll([f:farming_types], Implies(And(conditions(nontoxic), conditions(low_energy)), solution(f))) ::: The return of organic wastes to the soil is a good solution to waste disposal problems only if the wastes are nontoxic and not too much energy is expended in transporting them\nAnd(conditions(nontoxic), conditions(low_energy)) ::: In small-scale organic farming, the wastes are nontoxic and not too much energy is expended in transporting them\n\n# Options\nQuestion ::: Which one of the following exhibits flawed reasoning most similar to the flawed reasoning exhibited by the argument above?\nis_similar_flaw(Implies(And(conditions(moisture), conditions(light), conditions(nutrients)), healthy(plants))) ::: (A)\nis_similar_flaw(Implies(And(conditions(carbohydrates), conditions(protein)), nutritious(meal))) ::: (B)\nis_similar_flaw(Implies(And(conditions(clear), conditions(cost_effective), conditions(practical), conditions(responsive)), viable(business))) ::: (C)\nis_similar_flaw(Implies(And(conditions(equal_access), conditions(globalization)), optimize(resources))) ::: (D)"
    ]
  },
  {
    "id": "test_374",
    "context": "The United States' economy continues to grow. Over the last decade, the country' s Gross Domestic Product -- the monetary value of all finished goods and services produced within a country ' s borders -- has increased by between 2 and 4 percent. The United States' economy is guaranteed to grow between 2 and 4 percent next year.",
    "question": "The flawed reasoning in which of the following arguments most mirrors the flawed reasoning presented in the argument above:",
    "options": [
      "Last year Alexandra finished as the top salesperson at her company. She will undoubtedly be the top salesperson next year.",
      "Ted is obsessed with apple pie. He's consumed one whole pie every day for the last decade. Ted will probably eat a whole apple pie tomorrow.",
      "Tito is the top ranked surfer in the world. Las Vegas bookmakers listed him as a big favorite to win the upcoming invitational tournament. Tito is more likely to win the invitational than any other surfer.",
      "George always brushes his teeth right before getting into bed. His bedtime routine has remained the same for two decades. It's more probable than not that George brushes his teeth right before getting into bed tomorrow night."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Alexandra, Ted, Tito, George])\nflawed_reasoning = Function([arguments] -> [bool])\n\n# Constraints\nflawed_reasoning(Alexandra) ::: Last year Alexandra finished as the top salesperson at her company. She will undoubtedly be the top salesperson next year.\nflawed_reasoning(Ted) ::: Ted is obsessed with apple pie. He's consumed one whole pie every day for the last decade. Ted will probably eat a whole apple pie tomorrow.\nflawed_reasoning(Tito) ::: Tito is the top ranked surfer in the world. Las Vegas bookmakers listed him as a big favorite to win the upcoming invitational tournament. Tito is more likely to win the invitational than any other surfer.\nflawed_reasoning(George) ::: George always brushes his teeth right before getting into bed. His bedtime routine has remained the same for two decades. It's more probable than not that George brushes his teeth right before getting into bed tomorrow night.\n\n# Options\nQuestion ::: The flawed reasoning in which of the following arguments most mirrors the flawed reasoning presented in the argument above:\nis_mirror(flawed_reasoning(Alexandra)) ::: (A)\nis_mirror(flawed_reasoning(Ted)) ::: (B)\nis_mirror(flawed_reasoning(Tito)) ::: (C)\nis_mirror(flawed_reasoning(George)) ::: (D)"
    ]
  },
  {
    "id": "test_375",
    "context": "West: Of our company' s three quality control inspectors, Haynes is clearly the worst. Of the appliances that were returned to us last year because of quality control defects, half were inspected by Haynes. Young: But Haynes inspects significantly more than half the appliances we sell each year.",
    "question": "Young responds to West's argument by",
    "options": [
      "denying one of the argument's presuppositions",
      "questioning the relevance of West's conclusion",
      "contending that the argument presupposes what it is trying to prove",
      "arguing for a less extreme version of West's conclusion"
    ],
    "raw_logic_programs": [
      "# Declarations\ninspectors = EnumSort([Haynes, Other1, Other2])\nappliances = EnumSort([inspected, returned])\ninspects = Function([inspectors] -> [int])\nreturns = Function([inspectors] -> [int])\n\n# Constraints\nreturns(Haynes) == 0.5 * Total(returns) ::: Of the appliances that were returned to us last year because of quality control defects, half were inspected by Haynes\ninspects(Haynes) > 0.5 * Total(inspects) ::: Haynes inspects significantly more than half the appliances we sell each year\n\n# Options\nQuestion ::: Young responds to West's argument by\ndenies_presupposition(returns(Haynes) == 0.5 * Total(returns)) ::: (denying one of the argument's presuppositions)\nquestions_relevance(returns(Haynes) == 0.5 * Total(returns)) ::: (questioning the relevance of West's conclusion)\npresupposes_argument(returns(Haynes) == 0.5 * Total(returns)) ::: (contending that the argument presupposes what it is trying to prove)\nargues_less_extreme(returns(Haynes) == 0.5 * Total(returns)) ::: (arguing for a less extreme version of West's conclusion)"
    ]
  },
  {
    "id": "test_376",
    "context": "Keaton is a better doctor than Bachman. A good doctor should act professional, have an empathetic attitude toward his or her patients, and demonstrate attentiveness to each specific case. One downside is that Keaton is constantly booked, so it' s hard to get an appointment to see her, and it' s also difficult for her to focus if she' s had an especially busy day.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "Keaton will have more time after the end of the year is over to see her patients.",
      "Bachman gives to local charities to help sick children and Keaton does not.",
      "Bachman is professional, empathetic, and has more time than Keaton to see patients.",
      "Keaton has been a doctor much longer than Bachman has been a doctor."
    ],
    "raw_logic_programs": [
      "# Declarations\ndoctors = EnumSort([Keaton, Bachman])\nqualities = EnumSort([professional, empathetic, attentive])\nbetter_doctor = Function([doctors] -> [bool])\nhas_quality = Function([doctors, qualities] -> [bool])\navailability = Function([doctors] -> [int])  # Represents the time available to see patients\n\n# Constraints\nbetter_doctor(Keaton) == True ::: Keaton is a better doctor than Bachman\nForAll([q:qualities], has_quality(Keaton, q)) ::: A good doctor should act professional, have an empathetic attitude, and demonstrate attentiveness\navailability(Keaton) < availability(Bachman) ::: Keaton is constantly booked, so it's hard to get an appointment\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(availability(Keaton) > availability(Bachman)) ::: (A) Keaton will have more time after the end of the year is over to see her patients.\nis_weakening(has_quality(Bachman, empathetic) & Not(has_quality(Keaton, empathetic))) ::: (B) Bachman gives to local charities to help sick children and Keaton does not.\nis_weakening(And(has_quality(Bachman, professional), has_quality(Bachman, empathetic), availability(Bachman) > availability(Keaton))) ::: (C) Bachman is professional, empathetic, and has more time than Keaton to see patients.\nis_weakening(True) ::: (D) Keaton has been a doctor much longer than Bachman has been a doctor."
    ]
  },
  {
    "id": "test_377",
    "context": "Premature babies who receive regular massages are more active than premature babies who do not. Even when all the babies drink the same amount of milk, the massaged babies gain more weight than do the unmassaged babies. This is puzzling because a more active person generally requires a greater food intake to maintain or gain weight.",
    "question": "Which of the following, if true, best reconciles the apparent discrepancy described above?",
    "options": [
      "Premature babies require a daily intake of nutrients that is significantly higher than that required by babies who were not born prematurely.",
      "Increased activity leads to increased levels of hunger, especially when food intake is not also increased.",
      "Increased activity causes the intestines of premature babies to mature more quickly, enabling the babies to digest and absorb more of the nutrients in the milk they drink.",
      "Massage increases premature babies' curiosity about their environment, and curiosity leads to increased activity."
    ],
    "raw_logic_programs": [
      "# Declarations\nbabies = EnumSort([massaged, unmassaged])\nactivities = EnumSort([active, inactive])\nweight_gain = Function([babies] -> [bool])\nmilk_intake = Function([babies] -> [int])\nnutrient_absorption = Function([babies] -> [int])\n\n# Constraints\nweight_gain(massaged) == True ::: massaged babies gain more weight\nweight_gain(unmassaged) == False ::: unmassaged babies gain less weight\nmilk_intake(massaged) == milk_intake(unmassaged) ::: all babies drink the same amount of milk\nactivities(massaged) == active ::: massaged babies are more active\nactivities(unmassaged) == inactive ::: unmassaged babies are less active\n\n# Options\nQuestion ::: Which of the following, if true, best reconciles the apparent discrepancy described above?\nis_reconciliation(nutrient_absorption(massaged) > nutrient_absorption(unmassaged)) ::: (C) Increased activity causes the intestines of premature babies to mature more quickly, enabling the babies to digest and absorb more of the nutrients in the milk they drink."
    ]
  },
  {
    "id": "test_378",
    "context": "For newborns of age four to six weeks whose mothers have been the primary caregivers, the following is true: When the newborns are crying due to hunger or other similar discomfort, merely hearing the mother' s voice will lead to a temporary halt in crying, while the voices of others do not have this effect.",
    "question": "Which one of the following is most reasonably supported by the information above?",
    "options": [
      "Discomfort in newborns is best relieved by hearing the mother's voice.",
      "A mother's voice is the first thing a baby learns to recognize.",
      "Often only a primary caregiver can provide comfort to a newborn.",
      "Babies associate the voice of the primary caregiver with release from discomfort."
    ],
    "raw_logic_programs": [
      "# Declarations\nnewborns = EnumSort([newborn])\ncaregivers = EnumSort([mother, other])\ncrying_reasons = EnumSort([hunger, discomfort])\neffects = EnumSort([temporary_halt, no_effect])\nhears_voice = Function([newborns, caregivers, crying_reasons] -> [effects])\n\n# Constraints\nForAll([n:newborns, r:crying_reasons], hears_voice(n, mother, r) == temporary_halt) ::: When the newborns are crying due to hunger or other similar discomfort, merely hearing the mother's voice will lead to a temporary halt in crying\nForAll([n:newborns, r:crying_reasons], hears_voice(n, other, r) == no_effect) ::: The voices of others do not have this effect\n\n# Options\nQuestion ::: Which one of the following is most reasonably supported by the information above?\nis_supported(Exists([n:newborns, r:crying_reasons], hears_voice(n, mother, r) == temporary_halt)) ::: (Discomfort in newborns is best relieved by hearing the mother's voice.\nis_supported(False) ::: (A mother's voice is the first thing a baby learns to recognize.\nis_supported(False) ::: (Often only a primary caregiver can provide comfort to a newborn.\nis_supported(Exists([n:newborns, r:crying_reasons], hears_voice(n, mother, r) == temporary_halt)) ::: (Babies associate the voice of the primary caregiver with release from discomfort."
    ]
  },
  {
    "id": "test_379",
    "context": "A newly developed light bulb is much more cost-effective than conventional light bulbs: it costs only about 3 times what a conventional light bulb costs but it lasts up to 10 times as long as a conventional light bulb. Despite the manufacturer' s intense efforts to publicize the advantages of the new bulb, one analyst predicts that these new bulbs will prove to sell very poorly.",
    "question": "Each of the following, if true, provides support for the analyst's prediction EXCEPT:",
    "options": [
      "The light generated by the new bulb is in the yellow range of the spectrum, a type of artificial light most people find unappealing.",
      "The new bulb is to be marketed in several different quantities, ranging from packages containing one bulb to packages containing four bulbs.",
      "A competing manufacturer is about to introduce a light bulb that lasts 10 times as long as a conventional bulb but costs less than a conventional bulb.",
      "Most people who purchase light bulbs prefer to buy inexpensive light bulbs rather than more durable but expensive light bulbs."
    ],
    "raw_logic_programs": [
      "# Declarations\nbulbs = EnumSort([new_bulb, conventional_bulb, competing_bulb])\nattributes = EnumSort([cost, lifespan, appeal])\nvalues = EnumSort([high, low, medium])\nhas_attribute = Function([bulbs, attributes] -> [values])\n\n# Constraints\nhas_attribute(new_bulb, cost) == high ::: The new bulb costs about 3 times what a conventional light bulb costs\nhas_attribute(new_bulb, lifespan) == high ::: The new bulb lasts up to 10 times as long as a conventional light bulb\nhas_attribute(conventional_bulb, cost) == low ::: Conventional bulbs have a lower cost\nhas_attribute(conventional_bulb, lifespan) == low ::: Conventional bulbs have a shorter lifespan\nhas_attribute(competing_bulb, lifespan) == high ::: Competing bulb lasts 10 times as long as a conventional bulb\nhas_attribute(competing_bulb, cost) == low ::: Competing bulb costs less than a conventional bulb\n\n# Options\nQuestion ::: Each of the following, if true, provides support for the analyst's prediction EXCEPT:\nis_exception(has_attribute(new_bulb, appeal) == low) ::: The light generated by the new bulb is in the yellow range of the spectrum, a type of artificial light most people find unappealing\nis_exception(True) ::: The new bulb is to be marketed in several different quantities, ranging from packages containing one bulb to packages containing four bulbs\nis_exception(has_attribute(competing_bulb, lifespan) == high and has_attribute(competing_bulb, cost) == low) ::: A competing manufacturer is about to introduce a light bulb that lasts 10 times as long as a conventional bulb but costs less than a conventional bulb\nis_exception(has_attribute(new_bulb, cost) == high and has_attribute(new_bulb, lifespan) == high and has_attribute(conventional_bulb, cost) == low) ::: Most people who purchase light bulbs prefer to buy inexpensive light bulbs rather than more durable but expensive light bulbs"
    ]
  },
  {
    "id": "test_380",
    "context": "Counselor: Hagerle sincerely apologized to the physician for lying to her. So Hagerle owes me a sincere apology as well, because Hagerle told the same lie to both of us.",
    "question": "Which one of the following principles, if valid, most helps to justify the counselor's reasoning?",
    "options": [
      "A person should not apologize to someone for telling a lie unless he or she can sincerely apologize to all others to whom the lie was told.",
      "Someone is owed a sincere apology for having been lied to by a person if someone else has already received a sincere apology for the same lie from that same person.",
      "If someone tells the same lie to two different people, then neither of those lied to is owed an apology unless both are.",
      "It is good to apologize for having done something wrong to a person if one is capable of doing so sincerely."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Hagerle, Physician, Counselor])\napologized = Function([people, people] -> [bool])\nsincere = Function([people, people] -> [bool])\n\n# Constraints\napologized(Hagerle, Physician) == True ::: Hagerle apologized to the physician\nsincere(Hagerle, Physician) == True ::: Hagerle's apology to the physician was sincere\napologized(Hagerle, Counselor) == False ::: Hagerle has not apologized to the counselor\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the counselor's reasoning?\nis_valid(ForAll([p1:people, p2:people, p3:people], Implies(And(apologized(p1, p2), sincere(p1, p2), apologized(p1, p3)), sincere(p1, p3)))) ::: (A) A person should not apologize to someone for telling a lie unless he or she can sincerely apologize to all others to whom the lie was told.\nis_valid(ForAll([p1:people, p2:people, p3:people], Implies(And(apologized(p1, p2), sincere(p1, p2)), sincere(p1, p3)))) ::: (B) Someone is owed a sincere apology for having been lied to by a person if someone else has already received a sincere apology for the same lie from that same person.\nis_valid(ForAll([p1:people, p2:people, p3:people], Implies(And(apologized(p1, p2), apologized(p1, p3)), And(sincere(p1, p2), sincere(p1, p3))))) ::: (C) If someone tells the same lie to two different people, then neither of those lied to is owed an apology unless both are.\nis_valid(ForAll([p1:people, p2:people], Implies(apologized(p1, p2), sincere(p1, p2)))) ::: (D) It is good to apologize for having done something wrong to a person if one is capable of doing so sincerely."
    ]
  },
  {
    "id": "test_381",
    "context": "Editorial: The government should not fund any part of its health services with lottery revenue. These health services are essential to our community, but lottery revenue could decline at some time in the future, leaving the government scrambling to make up a budget shortfall.",
    "question": "The argument in the editorial most closely conforms to which one of the following principles?",
    "options": [
      "Governments should spend more of their revenue on essential services than on nonessential services.",
      "At least some lottery revenue must be set aside in case of budget shortfalls in the future.",
      "Governments should consider all health services to be essential to the community.",
      "Essential government services must be funded from reliable sources of revenue."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\narguments = Function([principles] -> [bool])\n\n# Constraints\narguments(P1) ::: Governments should spend more of their revenue on essential services than on nonessential services\narguments(P2) ::: At least some lottery revenue must be set aside in case of budget shortfalls in the future\narguments(P3) ::: Governments should consider all health services to be essential to the community\narguments(P4) ::: Essential government services must be funded from reliable sources of revenue\n\n# Options\nQuestion ::: The argument in the editorial most closely conforms to which one of the following principles?\nis_closest(arguments(P1)) ::: (A)\nis_closest(arguments(P2)) ::: (B)\nis_closest(arguments(P3)) ::: (C)\nis_closest(arguments(P4)) ::: (D)"
    ]
  },
  {
    "id": "test_382",
    "context": "The earliest Mayan pottery found at Colha, in Belize, is about 3, 000 years old. Recently, however, 4, 500-year-old stone agricultural implements were unearthed at Colha. These implements resemble Mayan stone implements of a much later period, also found at Colha. Moreover, the implements' designs are strikingly different from the designs of stone implements produced by other cultures known to have inhabited the area in prehistoric times. Ttherefore, there were surely Mayan settlements in Colha 4, 500 years ago.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "Successor cultures at a given site often adopt the style of agricultural implements used by earlier inhabitants of the same site.",
      "Archaeological evidence indicates that some of the oldest stone implements found at Colha were used to cut away vegetation after controlled burning of trees to open areas of swampland for cultivation.",
      "Ceramic ware is not known to have been used by the Mayan people to make agricultural implements.",
      "Carbon-dating of corn pollen in Colha indicates that agriculture began there around 4, 500 years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\nartifacts = EnumSort([pottery, stone_implements])\nages = EnumSort([3000_years, 4500_years])\ncultures = EnumSort([Mayan, other_cultures])\nevidence = Function([artifacts, ages] -> [cultures])\n\n# Constraints\nevidence(pottery, 3000_years) == Mayan ::: The earliest Mayan pottery found at Colha is about 3,000 years old\nevidence(stone_implements, 4500_years) == Mayan ::: 4,500-year-old stone agricultural implements resemble Mayan stone implements of a much later period\nForAll([c:cultures], Not(evidence(stone_implements, 4500_years) == c) if c != Mayan) ::: The implements' designs are strikingly different from the designs of stone implements produced by other cultures\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nweakens(Successor_cultures_adopt_styles) ::: (A) Successor cultures at a given site often adopt the style of agricultural implements used by earlier inhabitants of the same site.\nweakens(Oldest_stone_implements_usage) ::: (B) Archaeological evidence indicates that some of the oldest stone implements found at Colha were used to cut away vegetation after controlled burning of trees to open areas of swampland for cultivation.\nweakens(Ceramic_ware_usage) ::: (C) Ceramic ware is not known to have been used by the Mayan people to make agricultural implements.\nweakens(Carbon_dating_of_corn_pollen) ::: (D) Carbon-dating of corn pollen in Colha indicates that agriculture began there around 4,500 years ago."
    ]
  },
  {
    "id": "test_383",
    "context": "A certain cultivated herb is one of a group of closely related plants that thrive in soil with high concentrations of metals that are toxic to most other plants. Agronomists studying the growth of this herb have discovered that it produces large amounts of histidine, an amino acid that, in test-tube solutions, renders these metals chemically inert. Hence, the herb's high histidine production must be the key feature that allows it to grow in metal-rich soils.",
    "question": "In evaluating the argument, it would be most important to determine which of the following?",
    "options": [
      "Whether the herb's high level of histidine production is associated with an unusually low level of production of some other amino acid",
      "Whether others of the closely related group of plants also produce histidine in large quantities",
      "Whether the concentration of histidine in the growing herb declines as the plant approaches maturity",
      "Whether the herb can thrive in soil that does not have high concentrations of the toxic metals"
    ],
    "raw_logic_programs": [
      "# Declarations\nherb = EnumSort([cultivated_herb])\nproperties = EnumSort([high_histidine_production, low_other_amino_acid_production, histidine_decline_maturity, thrive_non_metal_soil])\nrelated_plants = EnumSort([closely_related_plants])\nproduces = Function([herb, properties] -> [bool])\nproduces_related = Function([related_plants, properties] -> [bool])\n\n# Constraints\nproduces(cultivated_herb, high_histidine_production) ::: The cultivated herb produces large amounts of histidine\nForAll([p:properties], Implies(produces(cultivated_herb, p), Not(produces_related(closely_related_plants, p)))) ::: The argument assumes the unique property of the cultivated herb is not shared by related plants\n\n# Options\nQuestion ::: In evaluating the argument, it would be most important to determine which of the following?\nis_important(Exists([p:properties], And(p == low_other_amino_acid_production, produces(cultivated_herb, p)))) ::: (A) Whether the herb's high level of histidine production is associated with an unusually low level of production of some other amino acid\nis_important(Exists([p:properties], And(p == high_histidine_production, produces_related(closely_related_plants, p)))) ::: (B) Whether others of the closely related group of plants also produce histidine in large quantities\nis_important(Exists([p:properties], And(p == histidine_decline_maturity, produces(cultivated_herb, p)))) ::: (C) Whether the concentration of histidine in the growing herb declines as the plant approaches maturity\nis_important(Exists([p:properties], And(p == thrive_non_metal_soil, produces(cultivated_herb, p)))) ::: (D) Whether the herb can thrive in soil that does not have high concentrations of the toxic metals"
    ]
  },
  {
    "id": "test_384",
    "context": "Wildlife management experts should not interfere with the natural habitats of creatures in the wild, because manipulating the environment to make it easier for an endangered species to survive in a habitat invariably makes it harder for nonendangered species to survive in that habitat.",
    "question": "The argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "overlooks the possibility that saving an endangered species in a habitat is incompatible with preserving the overall diversity of species in that habitat",
      "fails to recognize that a nonendangered species can easily become an endangered species",
      "takes for granted that preserving a currently endangered species in a habitat does not have higher priority than preserving species in that habitat that are not endangered",
      "fails to consider that wildlife management experts probably know best how to facilitate the survival of an endangered species in a habitat"
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies_status = EnumSort([endangered, nonendangered])\nhabitat = EnumSort([natural, manipulated])\npriority = Function([species_status] -> [int])\n\n# Constraints\nForAll([h:habitat], Implies(h == manipulated, Exists([s:species_status], And(s == endangered, Not(Exists([s2:species_status], And(s2 == nonendangered, priority(s2) > priority(s)))))))) ::: manipulating the environment to make it easier for an endangered species to survive in a habitat invariably makes it harder for nonendangered species to survive\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(Exists([s:species_status], And(s == endangered, Not(Exists([s2:species_status], And(s2 == nonendangered, priority(s2) > priority(s)))))) ::: (overlooks the possibility that saving an endangered species in a habitat is incompatible with preserving the overall diversity of species in that habitat\nis_vulnerable(Exists([s:species_status], And(s == nonendangered, priority(s) < priority(endangered)))) ::: (fails to recognize that a nonendangered species can easily become an endangered species\nis_vulnerable(ForAll([s:species_status], Implies(s == endangered, priority(s) <= priority(nonendangered)))) ::: (takes for granted that preserving a currently endangered species in a habitat does not have higher priority than preserving species in that habitat that are not endangered\nis_vulnerable(Not(Exists([s:species_status], And(s == endangered, priority(s) > priority(nonendangered))))) ::: (fails to consider that wildlife management experts probably know best how to facilitate the survival of an endangered species in a habitat"
    ]
  },
  {
    "id": "test_385",
    "context": "The efficiency of microwave ovens in destroying the harmful bacteria frequently found in common foods is diminished by the presence of salt in the food being cooked. When heated in a microwave oven, the interior of unsalted food reaches temperatures high enough to kill bacteria that cause food poisoning, but the interior of salted food does not. Scientists theorize that salt effectively blocks the microwaves from heating the interior.",
    "question": "Which one of the following conclusions is most supported by the information above?",
    "options": [
      "Salt is the primary cause of food poisoning resulting from food that is heated in microwave ovens.",
      "The danger of food poisoning can be lessened if salt is not used to prepare foods that are to be cooked in a microwave oven.",
      "The kinds of bacteria that cause food poisoning are more likely to be found on the exterior of food than in the interior of food.",
      "The incidence of serious food poisoning would be significantly reduced if microwave ovens were not used by consumers to cook or reheat food."
    ],
    "raw_logic_programs": [
      "# Declarations\nbacteria_presence = EnumSort([interior, exterior])\nfood_type = EnumSort([salted, unsalted])\nmicrowave_effect = Function([food_type, bacteria_presence] -> [bool])\n\n# Constraints\nForAll([f:food_type], microwave_effect(f, exterior) == True) ::: Microwaves affect the exterior of both salted and unsalted food\nmicrowave_effect(unsalted, interior) == True ::: The interior of unsalted food reaches temperatures high enough to kill bacteria\nmicrowave_effect(salted, interior) == False ::: The interior of salted food does not reach temperatures high enough to kill bacteria\n\n# Options\nQuestion ::: Which one of the following conclusions is most supported by the information above?\nis_supported(microwave_effect(unsalted, interior) == True) ::: (B) The danger of food poisoning can be lessened if salt is not used to prepare foods that are to be cooked in a microwave oven.\nis_supported(microwave_effect(salted, interior) == False) ::: (A) Salt is the primary cause of food poisoning resulting from food that is heated in microwave ovens.\nis_supported(Exists([b:bacteria_presence], microwave_effect(salted, b) == False)) ::: (C) The kinds of bacteria that cause food poisoning are more likely to be found on the exterior of food than in the interior of food.\nis_supported(Not(Exists([f:food_type], ForAll([b:bacteria_presence], microwave_effect(f, b) == True)))) ::: (D) The incidence of serious food poisoning would be significantly reduced if microwave ovens were not used by consumers to cook or reheat food."
    ]
  },
  {
    "id": "test_386",
    "context": "In the summer of 1936 a polling service telephoned 10, 000 United States voters and asked how they planned to vote in the coming presidential election. The survey sample included a variety of respondents -- rural and urban, male and female, from every state. The poll predicted that Alfred Landon would soundly defeat Franklin Roosevelt. Nevertheless, Roosevelt won in a landslide.",
    "question": "Which one of the following, if true, best explains why the poll's prediction was inaccurate?",
    "options": [
      "No effort was made to determine the respondents' political affiliations.",
      "Only people who would be qualified to vote by election time were interviewed, so the survey sample was not representative of the overall United States population.",
      "Because the poll asked only for respondents' candidate preference, it collected no information concerning their reasons for favoring Landon or Roosevelt.",
      "The survey sample was representative only of people who could afford telephones at a time when phone ownership was less common than it is today."
    ],
    "raw_logic_programs": [
      "# Declarations\nvoters = EnumSort([rural, urban, male, female, state])\ncandidates = EnumSort([Landon, Roosevelt])\nrespondents = Function([voters] -> [bool])\npredicted_winner = Function([candidates] -> [bool])\n\n# Constraints\nForAll([v:voters], respondents(v)) ::: The survey sample included a variety of respondents -- rural and urban, male and female, from every state\npredicted_winner(Landon) ::: The poll predicted that Alfred Landon would soundly defeat Franklin Roosevelt\nNot(predicted_winner(Roosevelt)) ::: The poll did not predict Roosevelt's victory\n\n# Options\nQuestion ::: Which one of the following, if true, best explains why the poll's prediction was inaccurate?\nis_explanation(NoEffortPoliticalAffiliations) ::: (A) No effort was made to determine the respondents' political affiliations\nis_explanation(NotRepresentativeOverallPopulation) ::: (B) Only people who would be qualified to vote by election time were interviewed, so the survey sample was not representative of the overall United States population\nis_explanation(NoInformationReasons) ::: (C) Because the poll asked only for respondents' candidate preference, it collected no information concerning their reasons for favoring Landon or Roosevelt\nis_explanation(RepresentativePhoneOwners) ::: (D) The survey sample was representative only of people who could afford telephones at a time when phone ownership was less common than it is today"
    ]
  },
  {
    "id": "test_387",
    "context": "The downtown area of the city of Stannicton is bustling during the work day, but when all the downtown workers (many of whom live in outlying suburbs) go home, the downtown area, now relatively empty, becomes a haven for crime. Many citizens have reported being attacked in the downtown area in the evening; typically, the assailants do not live downtown but rather come from other neighborhoods. The mayor of Stannicton has charged the city police to reduce the evening downtown crime rate. Police cars patrol the downtown area in the evenings, and the police can monitor any suspicious individual they see, but they can' t possibly be on every block at once. In order to extend their \"range\", the police have established a crime-watch phone number so that downtown residents can report to the police any suspicious-looking individual not from the downtown neighborhood, allowing the police to monitor this individual. The police chief feels the establishment of the crime-watch number will play an important part in reducing the evening downtown crime rate.",
    "question": "Which of the following, if true, would provide most support for the prediction that the establishment of the crime-watch number will have its intended effect?",
    "options": [
      "Many of the citizens of downtown work during the day and must shop and do laundry at night, so they have a vested interest in seeing the crime rate drop.",
      "During the day time, police patrols seldom go downtown, which is bustling with traffic, and instead cruise the other neighborhoods of Stannicton.",
      "Most of the would-be assailants themselves have mobile phones, and are able to make calls as they move around the downtown neighborhood.",
      "While almost all would-be assailants look suspicious and are not from the downtown neighborhood, not everyone who fits that description on the downtown streets in the evening is a would-be assailant."
    ],
    "raw_logic_programs": [
      "# Declarations\ncitizens = EnumSort([downtown_residents, non_downtown_residents])\nactivities = EnumSort([work, shop, do_laundry, patrol, report_suspicious, commit_crime])\ntimes = EnumSort([day, evening])\nlocations = EnumSort([downtown, other_neighborhoods])\nactions = Function([citizens, activities, times, locations] -> [bool])\n\n# Constraints\nForAll([c:citizens, a:activities, t:times, l:locations], actions(c, a, t, l) == False) ::: Initialize all actions to false\nForAll([c:citizens], actions(c, work, day, downtown) == True) ::: Downtown is bustling during the work day\nForAll([c:citizens], actions(c, commit_crime, evening, downtown) == True) ::: Downtown becomes a haven for crime in the evening\nForAll([c:citizens], actions(c, report_suspicious, evening, downtown) == True) ::: Crime-watch number allows reporting of suspicious individuals\nForAll([c:citizens], actions(c, patrol, evening, downtown) == True) ::: Police patrol downtown in the evenings\n\n# Options\nQuestion ::: Which of the following, if true, would provide most support for the prediction that the establishment of the crime-watch number will have its intended effect?\nis_supportive(Exists([c:citizens], And(actions(c, shop, evening, downtown), actions(c, do_laundry, evening, downtown)))) ::: (A) Many of the citizens of downtown work during the day and must shop and do laundry at night, so they have a vested interest in seeing the crime rate drop.\nis_supportive(Exists([c:citizens], actions(c, patrol, day, other_neighborhoods))) ::: (B) During the day time, police patrols seldom go downtown, which is bustling with traffic, and instead cruise the other neighborhoods of Stannicton.\nis_supportive(Exists([c:citizens], actions(c, commit_crime, evening, downtown))) ::: (C) Most of the would-be assailants themselves have mobile phones, and are able to make calls as they move around the downtown neighborhood.\nis_supportive(Exists([c:citizens], And(actions(c, report_suspicious, evening, downtown), Not(actions(c, commit_crime, evening, downtown))))) ::: (D) While almost all would-be assailants look suspicious and are not from the downtown neighborhood, not everyone who fits that description on the downtown streets in the evening is a would-be assailant."
    ]
  },
  {
    "id": "test_388",
    "context": "Consultant: The dramatic improvements in productivity achieved during the Industrial Revolution resulted in large part from standardization of processes and procedures coupled with centralization of planning and decision making. Yet, in recent years, many already productive companies have further improved their productivity by giving individual employees greater influence in decision making and in how they do their work.",
    "question": "Which one of the following, if true, most helps to resolve the apparent paradox in the consultant's statements?",
    "options": [
      "Most of the increases in industrial productivity that have occurred in recent years have been due to the introduction of advanced technology like industrial robots.",
      "The innovations of the Industrial Revolution are only now being applied in those companies in which individual employees have traditionally been entirely in control of how they do their work.",
      "Increased productivity is not the only benefit of giving individual employees greater control over their work; job satisfaction increases as well.",
      "Increases in productivity in highly productive companies depend on management's broad application of innovative ideas solicited from individual employees about their work."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Industrial_Revolution, Recent_Years])\nfactors = EnumSort([standardization, centralization, employee_influence, technology, job_satisfaction, innovative_ideas])\nproductivity = Function([statements] -> [bool])\ninfluence = Function([factors, statements] -> [bool])\n\n# Constraints\nAnd(influence(standardization, Industrial_Revolution), influence(centralization, Industrial_Revolution)) ::: The dramatic improvements in productivity during the Industrial Revolution resulted from standardization and centralization\ninfluence(employee_influence, Recent_Years) ::: Recent improvements in productivity are due to giving employees greater influence\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent paradox in the consultant's statements?\nis_resolving(And(influence(technology, Recent_Years), Not(influence(employee_influence, Recent_Years)))) ::: (A)\nis_resolving(And(influence(standardization, Recent_Years), Not(influence(employee_influence, Recent_Years)))) ::: (B)\nis_resolving(And(influence(job_satisfaction, Recent_Years), Not(influence(employee_influence, Recent_Years)))) ::: (C)\nis_resolving(And(influence(innovative_ideas, Recent_Years), influence(employee_influence, Recent_Years))) ::: (D)"
    ]
  },
  {
    "id": "test_389",
    "context": "The Transit Authority' s proposal to increase fares by 40 percent must be implemented. Admittedly, this fare increase will impose a hardship on some bus and subway riders. But if the fare is not increased, service will have to be cut severely and that would result in an unacceptably large loss of ridership.",
    "question": "The passage employs which one of the following argumentative strategies?",
    "options": [
      "It arrives at its conclusion indirectly by providing reasons for rejecting an alternative course of action.",
      "It justifies the conclusion by showing that such a course of action has proven effective in the past.",
      "It shows that a proponent of any alternative position would be forced into a contradiction.",
      "It explains why the recommended course of action would not be subject to the objections raised against the alternative."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([fare_increase, service_cut])\nstrategies = EnumSort([reject_alternative, past_effectiveness, force_contradiction, explain_advantage])\nemploys_strategy = Function([arguments] -> [strategies])\n\n# Constraints\nemploys_strategy(fare_increase) == reject_alternative ::: The proposal to increase fares is justified by rejecting the alternative of cutting service\n\n# Options\nQuestion ::: The passage employs which one of the following argumentative strategies?\nis_valid(employs_strategy(fare_increase) == reject_alternative) ::: (It arrives at its conclusion indirectly by providing reasons for rejecting an alternative course of action.)\nis_valid(employs_strategy(fare_increase) == past_effectiveness) ::: (It justifies the conclusion by showing that such a course of action has proven effective in the past.)\nis_valid(employs_strategy(fare_increase) == force_contradiction) ::: (It shows that a proponent of any alternative position would be forced into a contradiction.)\nis_valid(employs_strategy(fare_increase) == explain_advantage) ::: (It explains why the recommended course of action would not be subject to the objections raised against the alternative.)"
    ]
  },
  {
    "id": "test_390",
    "context": "On the basis of relatively minor morphological differences, some scientists suggest that Neanderthals should be considered a species distinct from Cro-Magnons, the forerunners of modern humans. Yet the fact that the tools used by these two groups of hominids living in different environments were of exactly the same type indicates uncanny behavioral similarities, for only if they faced the same daily challenges and met them in the same way would they have used such similar tools. This suggests that they were members of the same species, and that the morphological differences are due merely to their having lived in different environments.",
    "question": "If the statements above are true, then each of the following could be true EXCEPT:",
    "options": [
      "The daily challenges with which an environment confronts its inhabitants are unique to that environment.",
      "Use of similar tools is required if members of two distinct groups of tool-making hominids are to be considered members of the same species.",
      "Morphological differences between the members of two populations do not guarantee that the two populations do not belong to the same species.",
      "Through much of their coexistence, Cro-Magnons and Neanderthals were geographically isolated from one another."
    ],
    "raw_logic_programs": [
      "# Declarations\nhominids = EnumSort([Neanderthals, CroMagnons])\nenvironments = EnumSort([environment1, environment2])\ntools = Function([hominids, environments] -> [bool])\nspecies = Function([hominids] -> [bool])\n\n# Constraints\nForAll([h:hominids, e:environments], tools(h, e)) ::: The tools used by these two groups of hominids living in different environments were of exactly the same type\nForAll([h:hominids], species(h)) ::: This suggests that they were members of the same species\n\n# Options\nQuestion ::: If the statements above are true, then each of the following could be true EXCEPT:\nis_exception(is_sat(ForAll([e:environments], Exists([h:hominids], Not(tools(h, e)))))) ::: (The daily challenges with which an environment confronts its inhabitants are unique to that environment.\nis_exception(is_sat(Exists([h1:hominids, h2:hominids], And(h1 != h2, Not(species(h1)), Not(species(h2)), ForAll([e:environments], tools(h1, e) == tools(h2, e)))))) ::: (Use of similar tools is required if members of two distinct groups of tool-making hominids are to be considered members of the same species.\nis_exception(is_sat(Exists([h1:hominids, h2:hominids], And(h1 != h2, Not(species(h1)), Not(species(h2)), ForAll([e:environments], tools(h1, e) != tools(h2, e)))))) ::: (Morphological differences between the members of two populations do not guarantee that the two populations do not belong to the same species.\nis_exception(is_sat(Exists([h1:hominids, h2:hominids], And(h1 != h2, Not(species(h1)), Not(species(h2)), Exists([e1:environments, e2:environments], And(e1 != e2, tools(h1, e1), tools(h2, e2))))))) ::: (Through much of their coexistence, Cro-Magnons and Neanderthals were geographically isolated from one another."
    ]
  },
  {
    "id": "test_391",
    "context": "To improve the long-term savings rate of the citizens of Levaska, the country' s legislature decided to implement a plan that allows investors to save up to $1, 000 per year in special accounts without paying taxes on the interest earned unless withdrawals are made before the investor reaches age sixty-five. Withdrawals from these accounts prior to age sixty-five would result in the investor' s having to pay taxes on all the accumulated interest at the time of withdrawal.",
    "question": "Which of the following, if true, most strongly supports the prediction that the legislature's plan will have its intended effect?",
    "options": [
      "During the ten years prior to implementation of the plan, Levaskans deposited an increasingly smaller percentage of their annual income in long-term savings accounts.",
      "The majority of people choosing to take advantage of the tax-free savings accounts will withdraw their money prior to age sixty-five.",
      "People who are not citizens of Levaska are not eligible to invest in the tax-free savings accounts, even if their income is taxable in Levaska.",
      "A significant number of the citizens of Levaska will invest in the tax-free savings accounts well before they reach the age of sixty-five."
    ],
    "raw_logic_programs": [
      "# Declarations\ncitizens = EnumSort([Levaskan, Non_Levaskan])\nactions = EnumSort([deposit, withdraw])\nages = EnumSort([before_65, at_or_after_65])\naccounts = EnumSort([tax_free, regular])\ninvests = Function([citizens, accounts, actions, ages] -> [bool])\n\n# Constraints\nForAll([c:citizens], Or(invests(c, tax_free, deposit, before_65), invests(c, tax_free, deposit, at_or_after_65))) ::: Citizens can deposit in tax-free accounts\nForAll([c:citizens], Implies(invests(c, tax_free, withdraw, before_65), invests(c, tax_free, deposit, before_65))) ::: Withdrawals before age 65 result in taxes on accumulated interest\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the prediction that the legislature's plan will have its intended effect?\nis_supportive(Exists([c:citizens], And(invests(c, tax_free, deposit, before_65), Not(invests(c, tax_free, withdraw, before_65))))) ::: (A significant number of the citizens of Levaska will invest in the tax-free savings accounts well before they reach the age of sixty-five.)"
    ]
  },
  {
    "id": "test_392",
    "context": "Long-distance runners use two different kinds of cognitive strategies: \"associative\" and \"dissociative. \" Associative strategies involve attending closely to physical sensations, while dissociative strategies involve mostly ignoring physical sensations. Associative strategies, unlike dissociative ones, require so much concentration that they result in mental exhaustion lasting more than a day. Since it is important for long-distance runners to enter a race mentally refreshed, __ .",
    "question": "Which one of the following most logically completes the argument?",
    "options": [
      "unless they regularly train using associative strategies, long-distance runners should use dissociative strategies during races",
      "maximizing the benefits of training for long-distance running involves frequently alternating associative and dissociative strategies",
      "in long-distance running, dissociative strategies are generally more effective for a day's training run than are associative strategies",
      "long-distance runners should not rely heavily on associative strategies during training the day before they run in a race"
    ],
    "raw_logic_programs": [
      "# Declarations\nstrategies = EnumSort([associative, dissociative])\neffects = EnumSort([mental_exhaustion, mental_refreshment])\nuse_strategy = Function([strategies] -> [effects])\n\n# Constraints\nuse_strategy(associative) == mental_exhaustion ::: Associative strategies require so much concentration that they result in mental exhaustion lasting more than a day\nuse_strategy(dissociative) != mental_exhaustion ::: Dissociative strategies involve mostly ignoring physical sensations and do not result in mental exhaustion\n\n# Options\nQuestion ::: Which one of the following most logically completes the argument?\nis_logical(Implies(Not(Exists([t:training], use_strategy(associative) == t)), use_strategy(dissociative) == mental_refreshment)) ::: (A) unless they regularly train using associative strategies, long-distance runners should use dissociative strategies during races\nis_logical(Implies(Exists([t:training], And(use_strategy(associative) == t, use_strategy(dissociative) == t)), maximizing_benefits)) ::: (B) maximizing the benefits of training for long-distance running involves frequently alternating associative and dissociative strategies\nis_logical(Implies(Exists([t:training], use_strategy(dissociative) == t), more_effective)) ::: (C) in long-distance running, dissociative strategies are generally more effective for a day's training run than are associative strategies\nis_logical(Implies(Exists([t:training], use_strategy(associative) == t), Not(use_strategy(associative) == mental_refreshment))) ::: (D) long-distance runners should not rely heavily on associative strategies during training the day before they run in a race"
    ]
  },
  {
    "id": "test_393",
    "context": "It is a mistake to conclude, as some have, that ancient people did not know what moral rights were simply because no known ancient language has an expression correctly translatable as \"a moral right. \" This would be like saying that a person who discovers a wild fruit tree and returns repeatedly to harvest from it and study it has no idea what the fruit is until naming it or learning its name.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "The name or expression that is used to identify something cannot provide any information about the nature of the thing that is identified.",
      "A person who repeatedly harvests from a wild fruit tree and studies it has some idea of what the fruit is even before knowing a name for the fruit.",
      "To know the name of something is to know what that thing is.",
      "People who first discover what something is know it better than do people who merely know the name of the thing."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([moral_right, fruit])\nactions = EnumSort([discover, name, know])\npeople = EnumSort([ancient_people, modern_people, person])\n\n# Constraints\nForAll([c:concepts, p:people], Implies(actions(discover, p, c), actions(know, p, c))) ::: Discovering something implies knowing it\nForAll([c:concepts, p:people], Not(actions(name, p, c)) == Not(actions(know, p, c))) ::: Not naming something does not imply not knowing it\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_required(ForAll([c:concepts], Not(actions(name, person, c)) == Not(actions(know, person, c)))) ::: (The name or expression that is used to identify something cannot provide any information about the nature of the thing that is identified.\nis_required(Exists([c:concepts], And(actions(discover, person, c), Not(actions(name, person, c)), actions(know, person, c)))) ::: (A person who repeatedly harvests from a wild fruit tree and studies it has some idea of what the fruit is even before knowing a name for the fruit.\nis_required(ForAll([c:concepts], actions(name, person, c) == actions(know, person, c))) ::: (To know the name of something is to know what that thing is.\nis_required(ForAll([c:concepts], Implies(actions(discover, person, c), actions(know, person, c)))) ::: (People who first discover what something is know it better than do people who merely know the name of the thing."
    ]
  },
  {
    "id": "test_394",
    "context": "Historian: In the antebellum period before the American Civil War, the Northern states opposed the expansion of slavery in the recently acquired Western territories. The South' s agrarian economy depended on its four million African slaves, and the South worried that failing to expand slavery into the new territories would lead to an abolitionist controlled Congress. The abolition of slavery would have entirely upended the South' s political and economic power. Tensions between the North and South erupted in Kansas in the 1850s, commonly referred to as Bleeding Kansas. Less than two years before the start of the Civil War, John Brown attempted to launch a slave insurrection at Harper' s Ferry, further solidifying Southern fears that the North intended to abolish slavery. Other historians claim that the cause of the Civil War involved principles of federalism, like states' rights, but the only right truly in dispute was slavery. Every other right implicated slavery whether directly or indirectly.",
    "question": "Which one of the following most accurately represents the author's conclusion?",
    "options": [
      "Bleeding Kansas and John Brown's slave insurrection foreshadowed the eventual war.",
      "The role of slavery in causing the American Civil War cannot be overstated.",
      "The Southern economy relied on slavery.",
      "The dispute over slavery contributed to the American Civil War."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([Bleeding_Kansas, John_Brown_Insurrection, Civil_War])\nfactors = EnumSort([slavery, federalism, states_rights])\ncauses = Function([events] -> [factors])\n\n# Constraints\ncauses(Civil_War) == slavery ::: The role of slavery in causing the American Civil War cannot be overstated\ncauses(Bleeding_Kansas) == slavery ::: Tensions between the North and South erupted in Kansas in the 1850s, commonly referred to as Bleeding Kansas\ncauses(John_Brown_Insurrection) == slavery ::: John Brown attempted to launch a slave insurrection at Harper's Ferry, further solidifying Southern fears\n\n# Options\nQuestion ::: Which one of the following most accurately represents the author's conclusion?\nis_conclusion(causes(Civil_War) == slavery) ::: (The role of slavery in causing the American Civil War cannot be overstated)\nis_conclusion(causes(Bleeding_Kansas) == slavery) ::: (Bleeding Kansas and John Brown's slave insurrection foreshadowed the eventual war)\nis_conclusion(causes(Civil_War) == slavery) ::: (The Southern economy relied on slavery)\nis_conclusion(causes(Civil_War) == slavery) ::: (The dispute over slavery contributed to the American Civil War)"
    ]
  },
  {
    "id": "test_395",
    "context": "Politician: Union leaders argue that increases in multinational control of manufacturing have shifted labor to nations without strong worker protections, resulting in a corresponding global decrease in workers' average wages. Given that these leaders have a vested interest in seeing wages remain high, they would naturally want to convince legislators to oppose multinational control. Thus, legislators should reject this argument.",
    "question": "The reasoning in the politician's argument is flawed in that the argument",
    "options": [
      "treats circumstances potentially affecting the union leaders' argument as sufficient to discredit those leaders' argument",
      "presumes, without providing evidence, that leaders of all unions argue against increases in multinational control of manufacturing",
      "treats the mere fact that certain people are union members as sufficient to cast doubt on all of the viewpoints expressed by those people",
      "presumes, without providing justification, that anyone whose political motivations are clearly discernible is an unreliable source of information to legislators"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([union_leaders_argument, politicians_argument])\nflaws = EnumSort([circumstances_sufficient_to_discredit, presumes_without_evidence, treats_union_members_as_doubtful, presumes_motivations_as_unreliable])\nreasoning_flawed = Function([arguments] -> [flaws])\n\n# Constraints\nreasoning_flawed(politicians_argument) == circumstances_sufficient_to_discredit ::: treats circumstances potentially affecting the union leaders' argument as sufficient to discredit those leaders' argument\nreasoning_flawed(politicians_argument) == presumes_without_evidence ::: presumes, without providing evidence, that leaders of all unions argue against increases in multinational control of manufacturing\nreasoning_flawed(politicians_argument) == treats_union_members_as_doubtful ::: treats the mere fact that certain people are union members as sufficient to cast doubt on all of the viewpoints expressed by those people\nreasoning_flawed(politicians_argument) == presumes_motivations_as_unreliable ::: presumes, without providing justification, that anyone whose political motivations are clearly discernible is an unreliable source of information to legislators\n\n# Options\nQuestion ::: The reasoning in the politician's argument is flawed in that the argument\nis_flawed(reasoning_flawed(politicians_argument) == circumstances_sufficient_to_discredit) ::: (A)\nis_flawed(reasoning_flawed(politicians_argument) == presumes_without_evidence) ::: (B)\nis_flawed(reasoning_flawed(politicians_argument) == treats_union_members_as_doubtful) ::: (C)\nis_flawed(reasoning_flawed(politicians_argument) == presumes_motivations_as_unreliable) ::: (D)"
    ]
  },
  {
    "id": "test_396",
    "context": "Neither a rising standard of living nor balanced trade, by itself, establishes a country's ability to compete in the international marketplace. Both are required simultaneously since standards of living can rise because of growing trade deficits and trade can be balanced by means of a decline in a country's standard of living.",
    "question": "If the facts stated in the passage above are true, a proper test of a country's ability to be competitive is its ability to",
    "options": [
      "balance its trade while its standard of living falls",
      "increase trade deficits while its standard of living rises",
      "decrease trade deficits while its standard of living falls",
      "balance its trade while its standard of living rises"
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([rising_standard_of_living, balanced_trade])\noutcomes = EnumSort([ability_to_compete, inability_to_compete])\ntest = Function([conditions] -> [outcomes])\n\n# Constraints\nForAll([c:conditions], And(test(c) == ability_to_compete, test(c) == inability_to_compete)) ::: Neither a rising standard of living nor balanced trade, by itself, establishes a country's ability to compete\ntest([rising_standard_of_living, balanced_trade]) == ability_to_compete ::: Both are required simultaneously\n\n# Options\nQuestion ::: If the facts stated in the passage above are true, a proper test of a country's ability to be competitive is its ability to\nis_valid(test([balanced_trade, rising_standard_of_living]) == ability_to_compete) ::: (balance its trade while its standard of living rises)\nis_invalid(test([balanced_trade, rising_standard_of_living]) == inability_to_compete) ::: (balance its trade while its standard of living falls)\nis_invalid(test([rising_standard_of_living, balanced_trade]) == inability_to_compete) ::: (increase trade deficits while its standard of living rises)\nis_invalid(test([balanced_trade, rising_standard_of_living]) == inability_to_compete) ::: (decrease trade deficits while its standard of living falls)"
    ]
  },
  {
    "id": "test_397",
    "context": "In one-round sealed-bid auctions, each prospective buyer submits in strict confidence a single bid, and the sale goes to the highest bidder. A reserve price -- a minimum price below which there will be no sale -- can be set by the seller as protection against a token bid, which is an unreasonably low bid sometimes made by a bidder who gambles that there will be no other bid. Paradoxically, such protection is most needed when extremely desirable items are auctioned off this way.",
    "question": "Which one of the following, if true about one-round sealed-bid auctions, most helps to explain why the generalization characterized above as paradoxical holds?",
    "options": [
      "The reserve price on an extremely desirable item is generally set high enough to yield a profit for the seller even if the winning bid just matches it.",
      "Prospective buyers tend to believe that, in order to be successful, a bid on an extremely desirable item would have to be so high as not to make economic sense.",
      "The identity of unsuccessful bidders is not disclosed unless those bidders themselves choose to disclose it.",
      "The bidder who submitted the winning bid on an item cannot, on being informed of this fact, decline acceptance of the item in favor of the next-highest bidder."
    ],
    "raw_logic_programs": [
      "# Declarations\nbidders = EnumSort([bidder1, bidder2, bidder3, bidder4])\nitems = EnumSort([desirable_item, other_item])\nbids = Function([bidders, items] -> [int])\nreserve_price = Function([items] -> [int])\nwinning_bid = Function([items] -> [int])\n\n# Constraints\nForAll([i:items], winning_bid(i) == Max([b:bidders], bids(b, i))) ::: The sale goes to the highest bidder\nForAll([i:items], winning_bid(i) >= reserve_price(i)) ::: A reserve price is set by the seller as protection against a token bid\n\n# Options\nQuestion ::: Which one of the following, if true about one-round sealed-bid auctions, most helps to explain why the generalization characterized above as paradoxical holds?\nis_explanation(ForAll([i:items], reserve_price(i) >= expected_profit(i))) ::: (A) The reserve price on an extremely desirable item is generally set high enough to yield a profit for the seller even if the winning bid just matches it.\nis_explanation(ForAll([b:bidders], bids(b, desirable_item) > expected_value(b, desirable_item))) ::: (B) Prospective buyers tend to believe that, in order to be successful, a bid on an extremely desirable item would have to be so high as not to make economic sense.\nis_explanation(ForAll([b:bidders], Not(disclosed(b)))) ::: (C) The identity of unsuccessful bidders is not disclosed unless those bidders themselves choose to disclose it.\nis_explanation(ForAll([b:bidders], Not(decline_winning_bid(b)))) ::: (D) The bidder who submitted the winning bid on an item cannot, on being informed of this fact, decline acceptance of the item in favor of the next-highest bidder."
    ]
  },
  {
    "id": "test_398",
    "context": "George: Throughout the 1980s and early 1990s, hardly anyone learned ballroom dancing. Why is it that a large number of people now take ballroom dancing lessons? Boris: It' s because, beginning in 1995, many people learned the merengue and several related ballroom dances. Because these dances are so popular, other ballroom dances are now catching on.",
    "question": "Boris's response to George is most vulnerable to criticism because it fails to",
    "options": [
      "account for the beginning of the revival of interest in ballroom dancing",
      "demonstrate that all types of ballroom dancing are currently popular",
      "show that the people who learned the merengue are the same people who are now interested in other ballroom dances",
      "explain why ballroom dancing was so unpopular before 1995"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([George, Boris])\ntime_periods = EnumSort([1980s, early_1990s, 1995, now])\ndances = EnumSort([ballroom, merengue, related_ballroom])\nlearns = Function([people, time_periods, dances] -> [bool])\n\n# Constraints\nForAll([p:people, d:dances], Not(learns(p, 1980s, d))) ::: Hardly anyone learned ballroom dancing in the 1980s\nForAll([p:people, d:dances], Not(learns(p, early_1990s, d))) ::: Hardly anyone learned ballroom dancing in the early 1990s\nExists([p:people], learns(p, 1995, merengue)) ::: Many people learned the merengue beginning in 1995\nForAll([p:people], Implies(learns(p, 1995, merengue), learns(p, now, ballroom))) ::: Because these dances are so popular, other ballroom dances are now catching on\n\n# Options\nQuestion ::: Boris's response to George is most vulnerable to criticism because it fails to\nis_vulnerable(Exists([p:people], learns(p, 1980s, ballroom))) ::: (account for the beginning of the revival of interest in ballroom dancing\nis_vulnerable(ForAll([p:people], learns(p, now, ballroom))) ::: (demonstrate that all types of ballroom dancing are currently popular\nis_vulnerable(ForAll([p:people], Implies(learns(p, 1995, merengue), learns(p, now, ballroom)))) ::: (show that the people who learned the merengue are the same people who are now interested in other ballroom dances\nis_vulnerable(Exists([p:people], Not(learns(p, 1980s, ballroom)))) ::: (explain why ballroom dancing was so unpopular before 1995"
    ]
  },
  {
    "id": "test_399",
    "context": "Humankind would not have survived, as it clearly has, if our ancestors had not been motivated by the desire to sacrifice themselves when doing so would ensure the survival of their children or other close relatives. But since even this kind of sacrifice is a form of altruism, it follows that our ancestors were at least partially altruistic.",
    "question": "Which one of the following arguments is most similar in its reasoning to the argument above?",
    "options": [
      "Students do not raise their grades if they do not increase the amount of time they spend studying. Increased study time requires good time management. However, some students do raise their grades. So some students manage their time well.",
      "The natural resources used by human beings will be depleted if they are not replaced by alternative materials. But since such replacement generally requires more power, the resources used to create that power will become depleted.",
      "Organisms are capable of manufacturing their own carbohydrate supply if they do not consume other organisms to obtain it. So plants that consume insects must be incapable of photosynthesis, the means by which most plants produce their carbohydrate supplies.",
      "If fragile ecosystems are not protected by government action their endemic species will perish, for endemic species are by definition those that exist nowhere else but in those ecosystems."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\npremises = Function([arguments] -> [bool])\nconclusions = Function([arguments] -> [bool])\n\n# Constraints\npremises(A) == (Exists([x], And(motivated_by_sacrifice(x), ensures_survival(x)))) ::: Humankind would not have survived if our ancestors had not been motivated by the desire to sacrifice themselves when doing so would ensure the survival of their children or other close relatives\nconclusions(A) == (Exists([x], altruistic(x))) ::: It follows that our ancestors were at least partially altruistic\n\npremises(B) == (Exists([x], And(not_raise_grades(x), not_increase_study_time(x)))) ::: Students do not raise their grades if they do not increase the amount of time they spend studying\nconclusions(B) == (Exists([x], manage_time_well(x))) ::: So some students manage their time well\n\npremises(C) == (Exists([x], And(depleted_resources(x), not_replaced(x)))) ::: The natural resources used by human beings will be depleted if they are not replaced by alternative materials\nconclusions(C) == (Exists([x], depleted_power_resources(x))) ::: The resources used to create that power will become depleted\n\npremises(D) == (Exists([x], And(manufacture_carbohydrates(x), not_consume_organisms(x)))) ::: Organisms are capable of manufacturing their own carbohydrate supply if they do not consume other organisms to obtain it\nconclusions(D) == (Exists([x], incapable_photosynthesis(x))) ::: So plants that consume insects must be incapable of photosynthesis\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its reasoning to the argument above?\nis_similar_reasoning(premises(B), conclusions(B)) ::: (A)\nis_similar_reasoning(premises(C), conclusions(C)) ::: (B)\nis_similar_reasoning(premises(D), conclusions(D)) ::: (C)\nis_similar_reasoning(premises(D), conclusions(D)) ::: (D)"
    ]
  },
  {
    "id": "test_400",
    "context": "Studies have shown that specialty sports foods contain exactly the same nutrients in the same quantities as do common foods from the grocery store. Moreover, sports foods cost from two to three times more than regular foods. So very few athletes would buy sports foods were it not for expensive advertising campaigns.",
    "question": "Which one of the following, if true, most weakens the argument?",
    "options": [
      "Sports foods can nutritionally substitute for regular meals.",
      "Regular foods contain vitamins and minerals that are essential to developing strength and endurance.",
      "Sports foods are occasionally used by world- famous athletes.",
      "Sports foods are easier than regular foods to carry and consume during training and competition."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([sports_foods_substitute, regular_foods_vitamins, sports_foods_used_by_athletes, sports_foods_easier_to_carry])\nweakens = Function([arguments] -> [bool])\n\n# Constraints\nForAll([a:arguments], weakens(a) == False) ::: Initially assume none of the arguments weaken the main argument\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the argument?\nweakens(sports_foods_substitute) == False ::: (Sports foods can nutritionally substitute for regular meals.\nweakens(regular_foods_vitamins) == False ::: (Regular foods contain vitamins and minerals that are essential to developing strength and endurance.\nweakens(sports_foods_used_by_athletes) == False ::: (Sports foods are occasionally used by world-famous athletes.\nweakens(sports_foods_easier_to_carry) == True ::: (Sports foods are easier than regular foods to carry and consume during training and competition."
    ]
  },
  {
    "id": "test_401",
    "context": "Essayist: The existence of a moral order in the universe -- i. e. , an order in which bad is always eventually punished and good rewarded -- depends upon human souls being immortal. In some cultures this moral order is regarded as the result of a karma that controls how one is reincarnated, in others it results from the actions of a supreme being who metes out justice to people after their death. But however a moral order is represented, if human souls are immortal, then it follows that the bad will be punished.",
    "question": "Which one of the following most accurately describes a flaw in the essayist's reasoning?",
    "options": [
      "The argument treats two fundamentally different conceptions of a moral order as essentially the same.",
      "From the assertion that something is necessary to a moral order, the argument concludes that that thing is sufficient for an element of the moral order to be realized.",
      "The argument's conclusion is presupposed in the definition it gives of a moral order.",
      "From the claim that the immortality of human souls implies that there is a moral order in the universe, the argument concludes that there being a moral order in the universe implies that human souls are immortal."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([moral_order, immortality, punishment, reward])\ncultures = EnumSort([karma, supreme_being])\nrelations = Function([concepts, concepts] -> [bool])\nbeliefs = Function([cultures, concepts] -> [bool])\n\n# Constraints\nrelations(moral_order, immortality) ::: The existence of a moral order depends upon human souls being immortal\nForAll([c:cultures], beliefs(c, moral_order)) ::: In some cultures, a moral order is represented by karma or a supreme being\nrelations(immortality, punishment) ::: If human souls are immortal, then the bad will be punished\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the essayist's reasoning?\nis_flaw(The argument treats two fundamentally different conceptions of a moral order as essentially the same) ::: (A)\nis_flaw(From the assertion that something is necessary to a moral order, the argument concludes that that thing is sufficient for an element of the moral order to be realized) ::: (B)\nis_flaw(The argument's conclusion is presupposed in the definition it gives of a moral order) ::: (C)\nis_flaw(From the claim that the immortality of human souls implies that there is a moral order in the universe, the argument concludes that there being a moral order in the universe implies that human souls are immortal) ::: (D)"
    ]
  },
  {
    "id": "test_402",
    "context": "No mathematician today would flatly refuse to accept the results of an enormous computation as an adequate demonstration of the truth of a theorem. In 1976, however, this was not the case. Some mathematicians at that time refused to accept the results of a complex computer demonstration of a very simple mapping theorem. Although some mathematicians still hold a strong belief that a simple theorem ought to have a short, simple proof, in fact, some simple theorems have required enormous proofs.",
    "question": "If all of the statements in the passage are true, which one of the following must also be true?",
    "options": [
      "Some individuals who do not believe that a simple theorem ought to have a simple proof would not be willing to accept the results of an enormous computation as proof of a complex theorem.",
      "Some nonmathematicians do not believe that a simple theorem ought to have a simple proof.",
      "Today, some individuals who refuse to accept the results of an enormous computation as a demonstration of the truth of a theorem believe that a simple theorem ought to have a simple proof.",
      "Today, some mathematicians who believe that a simple theorem ought to have a simple proof would consider accepting the results of an enormous computation as a demonstration of the truth of a theorem."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([mathematicians, nonmathematicians])\nbeliefs = EnumSort([simple_proof, complex_proof])\nacceptance = EnumSort([accept, refuse])\ntime_periods = EnumSort([today, past])\n\nbelieves = Function([individuals, beliefs] -> [bool])\naccepts = Function([individuals, time_periods] -> [acceptance])\n\n# Constraints\nForAll([i:individuals], Or(believes(i, simple_proof), believes(i, complex_proof))) ::: Each individual has a belief about simple theorems and proofs\nForAll([i:individuals], Or(accepts(i, today) == accept, accepts(i, today) == refuse)) ::: Each individual either accepts or refuses computational proofs today\nForAll([i:individuals], Or(accepts(i, past) == accept, accepts(i, past) == refuse)) ::: Each individual either accepted or refused computational proofs in the past\nExists([i:individuals], And(accepts(i, past) == refuse, believes(i, simple_proof))) ::: In 1976, some mathematicians refused computational proofs and believed in simple proofs\nExists([i:individuals], And(accepts(i, today) == accept, believes(i, simple_proof))) ::: Today, some mathematicians believe in simple proofs but accept computational proofs\n\n# Options\nQuestion ::: If all of the statements in the passage are true, which one of the following must also be true?\nis_must_true(Exists([i:individuals], And(Not(believes(i, simple_proof)), accepts(i, today) == refuse))) ::: (A) Some individuals who do not believe that a simple theorem ought to have a simple proof would not be willing to accept the results of an enormous computation as proof of a complex theorem.\nis_must_true(Exists([i:nonmathematicians], Not(believes(i, simple_proof)))) ::: (B) Some nonmathematicians do not believe that a simple theorem ought to have a simple proof.\nis_must_true(Exists([i:individuals], And(accepts(i, today) == refuse, believes(i, simple_proof)))) ::: (C) Today, some individuals who refuse to accept the results of an enormous computation as a demonstration of the truth of a theorem believe that a simple theorem ought to have a simple proof.\nis_must_true(Exists([i:mathematicians], And(believes(i, simple_proof), accepts(i, today) == accept))) ::: (D) Today, some mathematicians who believe that a simple theorem ought to have a simple proof would consider accepting the results of an enormous computation as a demonstration of the truth of a theorem."
    ]
  },
  {
    "id": "test_403",
    "context": "In one study, engineering students who prepared for an exam by using toothpicks and string did no worse than similar students who prepared by using an expensive computer with sophisticated graphics. In another study, military personnel who trained on a costly high-tech simulator performed no better on a practical exam than did similar personnel who trained using an inexpensive cardboard model. So one should not always purchase technologically advanced educational tools.",
    "question": "Which one of the following principles, if valid, most helps to justify the reasoning above?",
    "options": [
      "One should not invest in expensive teaching aids unless there are no other tools that are less expensive and at least as effective.",
      "Spending large sums of money on educational tools is at least as justified for nonmilitary training as it is for military training.",
      "One should use different educational tools to teach engineering to civilians than are used to train military personnel.",
      "One should always provide students with a variety of educational materials so that each student can find the materials that best suit that student's learning style."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\nvalid = Function([principles] -> [bool])\n\n# Constraints\nvalid(P1) ::: One should not invest in expensive teaching aids unless there are no other tools that are less expensive and at least as effective\nvalid(P2) ::: Spending large sums of money on educational tools is at least as justified for nonmilitary training as it is for military training\nvalid(P3) ::: One should use different educational tools to teach engineering to civilians than are used to train military personnel\nvalid(P4) ::: One should always provide students with a variety of educational materials so that each student can find the materials that best suit that student's learning style\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the reasoning above?\nis_justified(valid(P1)) ::: (A)\nis_justified(valid(P2)) ::: (B)\nis_justified(valid(P3)) ::: (C)\nis_justified(valid(P4)) ::: (D)"
    ]
  },
  {
    "id": "test_404",
    "context": "Pamela: Business has an interest in enabling employees to care for children, because those children will be the customers, employees, and managers of the future. Ttherefore, businesses should adopt policies, such as day-care benefits, that facilitate parenting. Lee: No individual company, though, will be patronized, staffed, and managed only by its own employees' children, so it would not be to a company' s advantage to provide such benefits to employees when other companies do not.",
    "question": "In which one of the following pairs consisting of argument and objection does the objection function most similarly to the way Lee's objection functions in relation to Pamela's argument?",
    "options": [
      "Humanity needs clean air to breathe, so each person should make an effort to avoid polluting the air. Objection: The air one person breathes is affected mainly by pollution caused by others, so it makes no sense to act alone to curb air pollution.",
      "New roads will not serve to relieve this area's traffic congestion, because new roads would encourage new construction and generate additional traffic. Objection: Failure to build new roads would mean that traffic congestion would strangle the area even earlier.",
      "Human social institutions have always changed, so even if we do not know what those changes will be, we do know that the social institutions of the future will differ from those of the past. Objection:The existence of change in the past does not ensure that there will always be change in the future.",
      "Advertised discounts on products draw customers' attention to the products, so advertised discounts benefit sales. Objection: Customers already planning to purchase a product accelerate buying to take advantage of advertised discounts, and thus subsequent sales suffer."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Pamela, Lee])\nobjections = EnumSort([Objection1, Objection2, Objection3, Objection4])\nfunctions = Function([arguments, objections] -> [bool])\n\n# Constraints\nfunctions(Pamela, Objection1) ::: Humanity needs clean air to breathe, so each person should make an effort to avoid polluting the air. Objection: The air one person breathes is affected mainly by pollution caused by others, so it makes no sense to act alone to curb air pollution.\nfunctions(Pamela, Objection2) ::: New roads will not serve to relieve this area's traffic congestion, because new roads would encourage new construction and generate additional traffic. Objection: Failure to build new roads would mean that traffic congestion would strangle the area even earlier.\nfunctions(Pamela, Objection3) ::: Human social institutions have always changed, so even if we do not know what those changes will be, we do know that the social institutions of the future will differ from those of the past. Objection: The existence of change in the past does not ensure that there will always be change in the future.\nfunctions(Pamela, Objection4) ::: Advertised discounts on products draw customers' attention to the products, so advertised discounts benefit sales. Objection: Customers already planning to purchase a product accelerate buying to take advantage of advertised discounts, and thus subsequent sales suffer.\n\n# Options\nQuestion ::: In which one of the following pairs consisting of argument and objection does the objection function most similarly to the way Lee's objection functions in relation to Pamela's argument?\nis_similar(functions(Pamela, Objection1)) ::: (A)\nis_similar(functions(Pamela, Objection2)) ::: (B)\nis_similar(functions(Pamela, Objection3)) ::: (C)\nis_similar(functions(Pamela, Objection4)) ::: (D)"
    ]
  },
  {
    "id": "test_405",
    "context": "The number of applications for teaching positions in Newtown' s public schools was 5. 7 percent lower in 1993 than in 1985 and 5. 9 percent lower in 1994 than in 1985. Despite a steadily growing student population and an increasing number of teacher resignations, however, Newtown does not face a teacher shortage in the late 1990' s.",
    "question": "Which of the following, if true, would contribute most to an explanation of the apparent discrepancy above?",
    "options": [
      "New housing developments planned for Newtown are slated for occupancy in 1997 and are expected to increase the number of elementary school students in Newtown's public schools by 12 percent.",
      "In 1993 Newtown's public schools received 40 percent more applications for teaching positions than there were positions available.",
      "The Newtown school board does not contemplate increasing the ratio of students to teachers in the 1990's.",
      "Teachers' colleges in and near Newtown produced fewer graduates in 1994 than in 1993."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([1985, 1993, 1994])\napplications = Function([years] -> [int])\nstudent_population = Function([years] -> [int])\nteacher_resignations = Function([years] -> [int])\nteacher_shortage = Function([years] -> [bool])\n\n# Constraints\napplications(1993) == applications(1985) * 0.943 ::: The number of applications for teaching positions in Newtown's public schools was 5.7 percent lower in 1993 than in 1985\napplications(1994) == applications(1985) * 0.941 ::: The number of applications for teaching positions in Newtown's public schools was 5.9 percent lower in 1994 than in 1985\nForAll([y:years], student_population(y) > student_population(1985)) ::: Despite a steadily growing student population\nForAll([y:years], teacher_resignations(y) > teacher_resignations(1985)) ::: and an increasing number of teacher resignations\nNot(teacher_shortage(1990s)) ::: Newtown does not face a teacher shortage in the late 1990's\n\n# Options\nQuestion ::: Which of the following, if true, would contribute most to an explanation of the apparent discrepancy above?\nis_explanation(applications(1993) > positions_available(1993) * 1.4) ::: (In 1993 Newtown's public schools received 40 percent more applications for teaching positions than there were positions available.)\nis_explanation(student_population(1997) == student_population(1995) * 1.12) ::: (New housing developments planned for Newtown are slated for occupancy in 1997 and are expected to increase the number of elementary school students in Newtown's public schools by 12 percent.)\nis_explanation(Not(increase_student_teacher_ratio(1990s))) ::: (The Newtown school board does not contemplate increasing the ratio of students to teachers in the 1990's.)\nis_explanation(teacher_college_graduates(1994) < teacher_college_graduates(1993)) ::: (Teachers' colleges in and near Newtown produced fewer graduates in 1994 than in 1993.)"
    ]
  },
  {
    "id": "test_406",
    "context": "Publishing executive: Our company must sell at least 100, 000 books to make a profit this year. However, it is unlikely that we will sell that many, since of the twelve titles we will sell, the one with the best sales prospects, a novel, is unlikely to sell as many as 100, 000 copies.",
    "question": "The publishing executive's argument is most vulnerable to criticism because it overlooks the possibility that",
    "options": [
      "the publishing company will sell considerably fewer than 100, 000 copies of the novel",
      "what is true of the overall profitability of a publishing company is not true of its profitability in a particular year",
      "the publishing company will not make a profit even if it sells more than 100, 000 books",
      "what is true of the sales prospects of the publishing company's individual titles is not true of the sales prospects of the group of titles as a whole"
    ],
    "raw_logic_programs": [
      "# Declarations\ntitles = EnumSort([novel, other_titles])\nsales = Function([titles] -> [int])\ntotal_sales = Function([] -> [int])\n\n# Constraints\ntotal_sales() == Sum([t:titles], sales(t)) ::: The total sales is the sum of sales of all titles\nsales(novel) < 100000 ::: The novel, which has the best sales prospects, is unlikely to sell as many as 100,000 copies\ntotal_sales() < 100000 ::: It is unlikely that the company will sell at least 100,000 books\n\n# Options\nQuestion ::: The publishing executive's argument is most vulnerable to criticism because it overlooks the possibility that\nis_overlooked(total_sales() >= 100000) ::: (the publishing company will sell considerably fewer than 100,000 copies of the novel\nis_overlooked(total_sales() < 100000) ::: (what is true of the overall profitability of a publishing company is not true of its profitability in a particular year\nis_overlooked(total_sales() > 100000) ::: (the publishing company will not make a profit even if it sells more than 100,000 books\nis_overlooked(Exists([t:titles], sales(t) >= 100000)) ::: (what is true of the sales prospects of the publishing company's individual titles is not true of the sales prospects of the group of titles as a whole"
    ]
  },
  {
    "id": "test_407",
    "context": "One view of scientific revolutions is that they are brought about by new scientific observations; another is that they are scientific versions of popular ideas. If popular ideas lead to revolutionary scientific ideas, then revolutionary scientific ideas should be immediately accepted by the nonscientific public. However, if the driving force in the production of revolutionary scientific ideas is scientific observations, then similarity between those scientific ideas and popular ideas is coincidence. Nearly all revolutionary ideas in science have met with years of rejection from the nonscientific community.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "Scientific ideas that resemble popular ideas are revolutionary.",
      "New observations made in science are always rejected by the nonscientific community.",
      "Revolutionary scientific ideas are rarely rejected by the scientific community.",
      "Popular ideas rarely lead to the development of revolutionary scientific ideas."
    ],
    "raw_logic_programs": [
      "# Declarations\nscientific_ideas = EnumSort([revolutionary, non_revolutionary])\ncauses = EnumSort([popular_ideas, scientific_observations])\nacceptance = EnumSort([immediate, delayed])\ncommunity = EnumSort([scientific, nonscientific])\nrejection = Function([scientific_ideas, community] -> [bool])\ncause_of_revolution = Function([scientific_ideas] -> [causes])\nacceptance_time = Function([scientific_ideas] -> [acceptance])\n\n# Constraints\nForAll([si:scientific_ideas], Implies(cause_of_revolution(si) == popular_ideas, acceptance_time(si) == immediate)) ::: If popular ideas lead to revolutionary scientific ideas, then revolutionary scientific ideas should be immediately accepted by the nonscientific public\nForAll([si:scientific_ideas], Implies(cause_of_revolution(si) == scientific_observations, acceptance_time(si) == delayed)) ::: If the driving force in the production of revolutionary scientific ideas is scientific observations, then similarity between those scientific ideas and popular ideas is coincidence\nForAll([si:scientific_ideas], rejection(si, nonscientific) == True) ::: Nearly all revolutionary ideas in science have met with years of rejection from the nonscientific community\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(ForAll([si:scientific_ideas], Implies(cause_of_revolution(si) == popular_ideas, rejection(si, nonscientific) == False))) ::: (A) Scientific ideas that resemble popular ideas are revolutionary.\nis_supported(ForAll([si:scientific_ideas], Implies(cause_of_revolution(si) == scientific_observations, rejection(si, nonscientific) == True))) ::: (B) New observations made in science are always rejected by the nonscientific community.\nis_supported(ForAll([si:scientific_ideas], Implies(rejection(si, scientific) == False, cause_of_revolution(si) == scientific_observations))) ::: (C) Revolutionary scientific ideas are rarely rejected by the scientific community.\nis_supported(ForAll([si:scientific_ideas], Implies(rejection(si, nonscientific) == True, cause_of_revolution(si) == scientific_observations))) ::: (D) Popular ideas rarely lead to the development of revolutionary scientific ideas."
    ]
  },
  {
    "id": "test_408",
    "context": "United States manufacturers currently produce most of the world' s solar-power generators--most of which are exported to Europe. However, European manufacturers are emerging and probably will ultimately capture much of the European market. The United States government is funding initiatives intended to encourage use of solar power within the United States. If these initiatives succeed in increasing the demand for solar-power generators in the United States, United States manufacturers will probably maintain significant production levels, since __.",
    "question": "Which of the following most logically completes the argument?",
    "options": [
      "European governments are currently undertaking initiatives to stimulate the use of solar power within Europe",
      "just as European manufacturers enjoy certain competitive advantages in Europe, so do United States manufacturers in the United States",
      "the efficiency of solar-power generators in converting energy from the Sun into electric power is not improving as fast as it once did",
      "some United States manufacturers have been substantially increasing their output over the last several years"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([United_States, Europe])\nmanufacturers = EnumSort([US_manufacturers, European_manufacturers])\nmarkets = EnumSort([US_market, European_market])\ninitiatives = Function([countries] -> [bool])\ndemand = Function([markets] -> [int])\nproduction_levels = Function([manufacturers] -> [int])\ncompetitive_advantages = Function([manufacturers, markets] -> [bool])\n\n# Constraints\ninitiatives(United_States) == True ::: The United States government is funding initiatives intended to encourage use of solar power within the United States\ndemand(US_market) > 0 ::: If these initiatives succeed in increasing the demand for solar-power generators in the United States\nproduction_levels(US_manufacturers) > 0 ::: United States manufacturers will probably maintain significant production levels\n\n# Options\nQuestion ::: Which of the following most logically completes the argument?\nis_logical(competitive_advantages(US_manufacturers, US_market) == True) ::: (B) just as European manufacturers enjoy certain competitive advantages in Europe, so do United States manufacturers in the United States"
    ]
  },
  {
    "id": "test_409",
    "context": "Journalist: In late 1994, the present government of the Republic of Bellam came into power. Each year since then, about thirty journalists have been imprisoned for printing articles that criticize the government. In 1994, under the old government, only six journalists were imprisoned for criticizing the government. So the old government was more tolerant of criticism by the press than the new one is. Politician: But in 1994 only six journalists criticized the government, and now journalists routinely do.",
    "question": "The politician challenges the journalist's argument by doing which of the following?",
    "options": [
      "Pointing out that the argument illegitimately draws a general conclusion on the basis of a sample of only a few cases",
      "Introducing evidence that undermines an assumption of the journalist's argument",
      "Questioning the accuracy of the evidence presented in support of the journalist's conclusion",
      "Presenting data that extend further into the past than the journalist's data"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([journalist, politician])\nactions = EnumSort([draws_general_conclusion, introduces_evidence, questions_accuracy, presents_data])\nchallenges = Function([arguments] -> [actions])\n\n# Constraints\nchallenges(journalist) == draws_general_conclusion ::: The journalist draws a general conclusion based on the number of journalists imprisoned.\nchallenges(politician) == introduces_evidence ::: The politician introduces evidence that undermines an assumption of the journalist's argument.\n\n# Options\nQuestion ::: The politician challenges the journalist's argument by doing which of the following?\nis_valid(challenges(politician) == draws_general_conclusion) ::: (A) Pointing out that the argument illegitimately draws a general conclusion on the basis of a sample of only a few cases\nis_valid(challenges(politician) == introduces_evidence) ::: (B) Introducing evidence that undermines an assumption of the journalist's argument\nis_valid(challenges(politician) == questions_accuracy) ::: (C) Questioning the accuracy of the evidence presented in support of the journalist's conclusion\nis_valid(challenges(politician) == presents_data) ::: (D) Presenting data that extend further into the past than the journalist's data"
    ]
  },
  {
    "id": "test_410",
    "context": "The southern half of a certain region of the earth was covered entirely by water during the Cretaceous period, the last 75 million years of the Mesozoic era, the era when dinosaurs roamed the earth. Dinosaurs lived only on land. Thus, plesiosaurs -- swimming reptiles that lived during the Cretaceous period exclusively -- were not dinosaurs. No single species of dinosaur lived throughout the entire Mesozoic era.",
    "question": "If the statements in the passage are true, each of the following could be true EXCEPT:",
    "options": [
      "Plesiosaurs did not inhabit the southern half of the region during the Cretaceous period.",
      "Plesiosaurs did not inhabit the southern half of the region before the Cretaceous period.",
      "Dinosaurs did not inhabit the northern half of the region during the Cretaceous period.",
      "Dinosaurs inhabited the southern half of the region throughout the entire Mesozoic era."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([southern_half, northern_half])\neras = EnumSort([Cretaceous, Mesozoic])\ncreatures = EnumSort([plesiosaurs, dinosaurs])\ninhabit = Function([creatures, regions, eras] -> [bool])\n\n# Constraints\nForAll([c:creatures], Not(inhabit(c, southern_half, Cretaceous))) ::: The southern half of a certain region was covered entirely by water during the Cretaceous period\nForAll([c:creatures], Implies(c == dinosaurs, Not(inhabit(c, southern_half, Cretaceous)))) ::: Dinosaurs lived only on land\nForAll([c:creatures], Implies(c == plesiosaurs, Not(inhabit(c, southern_half, Mesozoic)))) ::: Plesiosaurs lived during the Cretaceous period exclusively\nForAll([c:creatures], Implies(c == dinosaurs, Exists([e:eras], Not(inhabit(c, southern_half, e))))) ::: No single species of dinosaur lived throughout the entire Mesozoic era\n\n# Options\nQuestion ::: If the statements in the passage are true, each of the following could be true EXCEPT:\nis_exception(is_sat(Not(inhabit(plesiosaurs, southern_half, Cretaceous)))) ::: (A)\nis_exception(is_sat(Not(inhabit(plesiosaurs, southern_half, Mesozoic)))) ::: (B)\nis_exception(is_sat(Not(inhabit(dinosaurs, northern_half, Cretaceous)))) ::: (C)\nis_exception(is_sat(ForAll([e:eras], inhabit(dinosaurs, southern_half, e)))) ::: (D)"
    ]
  },
  {
    "id": "test_411",
    "context": "Most politicians are liars. Timothy is a politician, but he never lies. As a result, Timothy is the best politician in the country.",
    "question": "Which one of the following best describes how the argument proceeds?",
    "options": [
      "It starts with a generalization and then identifies an exception, which is the basis for its conclusion.",
      "It starts with a hard rule and then identifies an exception, which is the basis for its conclusion.",
      "It starts with a hard rule and then applies the rule to a specific situation.",
      "It starts with a generalization, provides additional evidence, and then draws an unsupported conclusion."
    ],
    "raw_logic_programs": [
      "# Declarations\npoliticians = EnumSort([Timothy])\nattributes = EnumSort([liar, best])\nhas_attribute = Function([politicians, attributes] -> [bool])\n\n# Constraints\nForAll([p:politicians], Implies(p != Timothy, has_attribute(p, liar))) ::: Most politicians are liars\nNot(has_attribute(Timothy, liar)) ::: Timothy is a politician, but he never lies\nhas_attribute(Timothy, best) ::: As a result, Timothy is the best politician in the country\n\n# Options\nQuestion ::: Which one of the following best describes how the argument proceeds?\nis_best_description(\"It starts with a generalization and then identifies an exception, which is the basis for its conclusion.\") ::: (A)\nis_best_description(\"It starts with a hard rule and then identifies an exception, which is the basis for its conclusion.\") ::: (B)\nis_best_description(\"It starts with a hard rule and then applies the rule to a specific situation.\") ::: (C)\nis_best_description(\"It starts with a generalization, provides additional evidence, and then draws an unsupported conclusion.\") ::: (D)"
    ]
  },
  {
    "id": "test_412",
    "context": "A study has recently shown that happier employees are more productive. Employees at Davis Industries are more productive over the course of the business day than those at Saturnine Corporation. Ttherefore, we can conclude that Davis Industries' employees must be happier than those at Saturnine Corp.",
    "question": "The argument is most vulnerable to which of the following criticisms?",
    "options": [
      "The evidence it uses is simply a paraphrase of its main conclusion.",
      "It claims that a conclusion is true without distinguishing this conclusion from the conditions that gave rise to it.",
      "It concludes that the consequence of one set of circumstances would not be produced by another.",
      "It assumes that a phenomenon is the effect of an unrelated yet correlated phenomenon."
    ],
    "raw_logic_programs": [
      "# Declarations\nhappiness = Function([str] -> [bool])\nproductivity = Function([str] -> [bool])\ncompanies = EnumSort([\"Davis Industries\", \"Saturnine Corporation\"])\n\n# Constraints\nForAll([c:companies], Implies(happiness(c), productivity(c))) ::: A study has recently shown that happier employees are more productive\nproductivity(\"Davis Industries\") > productivity(\"Saturnine Corporation\") ::: Employees at Davis Industries are more productive over the course of the business day than those at Saturnine Corporation\n\n# Options\nQuestion ::: The argument is most vulnerable to which of the following criticisms?\nis_vulnerable(Implies(productivity(\"Davis Industries\") > productivity(\"Saturnine Corporation\"), happiness(\"Davis Industries\") > happiness(\"Saturnine Corporation\"))) ::: (The evidence it uses is simply a paraphrase of its main conclusion.\nis_vulnerable(Implies(productivity(\"Davis Industries\") > productivity(\"Saturnine Corporation\"), Not(happiness(\"Davis Industries\") > happiness(\"Saturnine Corporation\")))) ::: (It claims that a conclusion is true without distinguishing this conclusion from the conditions that gave rise to it.\nis_vulnerable(Implies(Not(productivity(\"Davis Industries\") > productivity(\"Saturnine Corporation\")), happiness(\"Davis Industries\") > happiness(\"Saturnine Corporation\"))) ::: (It concludes that the consequence of one set of circumstances would not be produced by another.\nis_vulnerable(Implies(productivity(\"Davis Industries\") > productivity(\"Saturnine Corporation\"), Not(happiness(\"Davis Industries\") > happiness(\"Saturnine Corporation\")))) ::: (It assumes that a phenomenon is the effect of an unrelated yet correlated phenomenon."
    ]
  },
  {
    "id": "test_413",
    "context": "It is true of both men and women that those who marry as young adults live longer than those who never marry. This does not show that marriage causes people to live longer, since, as compared with other people of the same age, young adults who are about to get married have fewer of the unhealthy habits that can cause a person to have a shorter life, most notably smoking and immoderate drinking of alcohol.",
    "question": "Which of the following, if true, most strengthens the argument above?",
    "options": [
      "A person who smokes is much more likely than a nonsmoker to marry a person who smokes at the time of marriage, and the same is true for people who drink alcohol immoderately.",
      "Marriage tends to cause people to engage less regularly in sports that involve risk of bodily harm.",
      "Among people who as young adults neither drink alcohol immoderately nor smoke, those who never marry live as long as those who marry.",
      "Among people who marry as young adults, most of those who give up an unhealthy habit after marriage do not resume the habit later in life."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([men, women])\nmarital_status = EnumSort([married_young, never_married])\nhabits = EnumSort([smoking, immoderate_drinking])\nlife_expectancy = Function([people, marital_status] -> [int])\nunhealthy_habits = Function([people, marital_status] -> [habits])\n\n# Constraints\nForAll([p:people], life_expectancy(p, married_young) > life_expectancy(p, never_married)) ::: Those who marry as young adults live longer than those who never marry\nForAll([p:people], Count([h:habits], unhealthy_habits(p, married_young) == h) < Count([h:habits], unhealthy_habits(p, never_married) == h)) ::: Young adults who are about to get married have fewer unhealthy habits\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the argument above?\nis_strongest(ForAll([p:people], Implies(unhealthy_habits(p, married_young) == smoking, unhealthy_habits(p, never_married) == smoking))) ::: (A) A person who smokes is much more likely than a nonsmoker to marry a person who smokes at the time of marriage, and the same is true for people who drink alcohol immoderately.\nis_strongest(ForAll([p:people], Implies(marital_status(p) == married_young, less_risky_sports(p)))) ::: (B) Marriage tends to cause people to engage less regularly in sports that involve risk of bodily harm.\nis_strongest(ForAll([p:people], Implies(And(Not(unhealthy_habits(p, married_young) == smoking), Not(unhealthy_habits(p, married_young) == immoderate_drinking)), life_expectancy(p, married_young) == life_expectancy(p, never_married)))) ::: (C) Among people who as young adults neither drink alcohol immoderately nor smoke, those who never marry live as long as those who marry.\nis_strongest(ForAll([p:people], Implies(And(marital_status(p) == married_young, gives_up_habit(p)), Not(resumes_habit(p))))) ::: (D) Among people who marry as young adults, most of those who give up an unhealthy habit after marriage do not resume the habit later in life."
    ]
  },
  {
    "id": "test_414",
    "context": "Sid: The sign says \"Keep off the grass. \" Micki: I know, but just one person walking across the grass doesn' t hurt it. Sid: Your statement is false. If everyone believed as you do, everyone would walk across the grass, and the grass would die.",
    "question": "Sid's argument is questionable in that it",
    "options": [
      "discounts the fact that there may be circumstances under which hurting the grass is justified",
      "attempts to undermine a statement by calling into question the character of the person making the statement",
      "contradicts itself by treating a statement that the arguer does not believe as though it were a statement believed by everyone",
      "treats a statement about the consequences of an action as though it were instead about the consequences of everyone believing the statement"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Sid_statement, Micki_statement])\nbeliefs = EnumSort([individual, everyone])\nactions = EnumSort([walk_across_grass, not_walk_across_grass])\nconsequences = EnumSort([grass_hurt, grass_not_hurt, grass_die])\n\n# Constraints\nForAll([b:beliefs], Implies(b == individual, Micki_statement == walk_across_grass)) ::: Micki believes that just one person walking across the grass doesn’t hurt it\nForAll([b:beliefs], Implies(b == everyone, Sid_statement == grass_die)) ::: Sid argues that if everyone believed as Micki does, the grass would die\n\n# Options\nQuestion ::: Sid's argument is questionable in that it\nis_questionable(ForAll([b:beliefs], Implies(b == individual, Exists([a:actions], a == walk_across_grass) -> consequences == grass_hurt))) ::: (discounts the fact that there may be circumstances under which hurting the grass is justified)\nis_questionable(ForAll([b:beliefs], Implies(b == individual, Exists([a:actions], a == walk_across_grass) -> consequences == grass_not_hurt))) ::: (attempts to undermine a statement by calling into question the character of the person making the statement)\nis_questionable(ForAll([b:beliefs], Implies(b == everyone, Exists([a:actions], a == walk_across_grass) -> consequences == grass_die))) ::: (contradicts itself by treating a statement that the arguer does not believe as though it were a statement believed by everyone)\nis_questionable(ForAll([b:beliefs], Implies(b == everyone, Exists([a:actions], a == walk_across_grass) -> consequences == grass_die))) ::: (treats a statement about the consequences of an action as though it were instead about the consequences of everyone believing the statement)"
    ]
  },
  {
    "id": "test_415",
    "context": "Sickles found at one archaeological site had scratched blades, but those found at a second site did not. Since sickle blades always become scratched whenever they are used to harvest grain, this evidence shows that the sickles found at the first site were used to harvest grain, but the sickles found at the second site were not.",
    "question": "Which one of the following, if shown to be a realistic possibility, would undermine the argument?",
    "options": [
      "The scratches on the blades of the sickles found at the first site resulted from something other than harvesting grain.",
      "The sickles found at the first site were made by the same people who made the sickles found at the second site.",
      "Some sickles that have not yet been found at the first site do not have scratched blades.",
      "Sickles at both sites had ritual uses whether or not those sickles were used to harvest grain."
    ],
    "raw_logic_programs": [
      "# Declarations\nsites = EnumSort([first_site, second_site])\nsickles = EnumSort([scratched, not_scratched])\nused_for_grain = Function([sites] -> [bool])\n\n# Constraints\nused_for_grain(first_site) == True ::: Sickles found at the first site had scratched blades, indicating they were used to harvest grain\nused_for_grain(second_site) == False ::: Sickles found at the second site did not have scratched blades, indicating they were not used to harvest grain\n\n# Options\nQuestion ::: Which one of the following, if shown to be a realistic possibility, would undermine the argument?\nis_undermining(Exists([s:sickles], And(s == scratched, used_for_grain(first_site) == False))) ::: (The scratches on the blades of the sickles found at the first site resulted from something other than harvesting grain.)\nis_undermining(Exists([s:sickles], And(s == not_scratched, used_for_grain(first_site) == True))) ::: (The sickles found at the first site were made by the same people who made the sickles found at the second site.)\nis_undermining(Exists([s:sickles], And(s == not_scratched, used_for_grain(first_site) == True))) ::: (Some sickles that have not yet been found at the first site do not have scratched blades.)\nis_undermining(Exists([s:sickles], And(s == scratched, used_for_grain(first_site) == False, used_for_grain(second_site) == False))) ::: (Sickles at both sites had ritual uses whether or not those sickles were used to harvest grain.)"
    ]
  },
  {
    "id": "test_416",
    "context": "Reading is a worthwhile activity. People should only engage in worthwhile activities. Ttherefore, all people should read.",
    "question": "Which one of the following most closely parallels the reasoning of the argument above?",
    "options": [
      "If you spend all your time working, you will have a lot of money. But you will have no time for fun. Ttherefore, if you have a lot of money, you have no fun.",
      "Oranges are high in vitamin C. People need to have vitamin C in their diets. Ttherefore, all people should eat oranges.",
      "If you skydive, you will not live to a ripe old age. But you will be bored unless you skydive. Ttherefore, if you live to a ripe old age, you will be bored.",
      "If you do not try to walk, you will not learn how to walk. But you will never fall if you don't learn to walk. Ttherefore, all people should learn to walk."
    ],
    "raw_logic_programs": [
      "# Declarations\nactivities = EnumSort([reading, working, having_fun, eating_oranges, skydiving, walking])\npeople = EnumSort([all_people])\nengage = Function([people, activities] -> [bool])\nworthwhile = Function([activities] -> [bool])\n\n# Constraints\nworthwhile(reading) ::: Reading is a worthwhile activity\nForAll([a:activities], Implies(worthwhile(a), ForAll([p:people], engage(p, a)))) ::: People should only engage in worthwhile activities\n\n# Options\nQuestion ::: Which one of the following most closely parallels the reasoning of the argument above?\nis_parallel(And(worthwhile(eating_oranges), ForAll([p:people], engage(p, eating_oranges)))) ::: (Oranges are high in vitamin C. People need to have vitamin C in their diets. Therefore, all people should eat oranges.)\nis_parallel(And(worthwhile(walking), ForAll([p:people], engage(p, walking)))) ::: (If you do not try to walk, you will not learn how to walk. But you will never fall if you don't learn to walk. Therefore, all people should learn to walk.)"
    ]
  },
  {
    "id": "test_417",
    "context": "If the budget does not allow for more dairy inspectors to be hired, most of the large dairies in the central valley will not meet federal standards governing the disposal of natural wastes, which can seep into streams and groundwater. The new district budget, however, does not allow for the hiring of more dairy inspectors. Consequently, most of the district' s drinking water is likely to become polluted.",
    "question": "The conclusion above follows logically if which one of the following is assumed?",
    "options": [
      "If most of the dairies in the central valley meet federal standards for the disposal of natural wastes, it is unlikely that most of the district's drinking water will become polluted.",
      "Most of the district's drinking water is likely to become polluted if most of the large dairies in the central valley do not meet federal standards for the disposal of natural wastes.",
      "To keep all the drinking water in the district clean requires more dairy inspectors to monitor the dairies' disposal of natural wastes.",
      "If none of the large dairies in the central valley meets federal standards for the disposal of natural wastes, most of the district's drinking water is likely to become polluted."
    ],
    "raw_logic_programs": [
      "# Declarations\ndairies = EnumSort([large_dairies])\nstandards = EnumSort([meet_standards, not_meet_standards])\nwater_quality = EnumSort([polluted, not_polluted])\ninspectors = EnumSort([hired, not_hired])\ndisposal = Function([dairies] -> [standards])\nwater = Function([dairies] -> [water_quality])\nbudget = Function([] -> [inspectors])\n\n# Constraints\nbudget() == not_hired ::: The new district budget does not allow for the hiring of more dairy inspectors\nForAll([d:dairies], Implies(budget() == not_hired, disposal(d) == not_meet_standards)) ::: If the budget does not allow for more dairy inspectors to be hired, most of the large dairies in the central valley will not meet federal standards\n\n# Options\nQuestion ::: The conclusion above follows logically if which one of the following is assumed?\nis_assumed(ForAll([d:dairies], Implies(disposal(d) == meet_standards, water(d) == not_polluted))) ::: (A) If most of the dairies in the central valley meet federal standards for the disposal of natural wastes, it is unlikely that most of the district's drinking water will become polluted.\nis_assumed(ForAll([d:dairies], Implies(disposal(d) == not_meet_standards, water(d) == polluted))) ::: (B) Most of the district's drinking water is likely to become polluted if most of the large dairies in the central valley do not meet federal standards for the disposal of natural wastes.\nis_assumed(ForAll([d:dairies], Implies(water(d) == not_polluted, budget() == hired))) ::: (C) To keep all the drinking water in the district clean requires more dairy inspectors to monitor the dairies' disposal of natural wastes.\nis_assumed(ForAll([d:dairies], Implies(disposal(d) == not_meet_standards, water(d) == polluted))) ::: (D) If none of the large dairies in the central valley meets federal standards for the disposal of natural wastes, most of the district's drinking water is likely to become polluted."
    ]
  },
  {
    "id": "test_418",
    "context": "Dreams are composed of disjointed images from memory on which superficial stories are imposed. They do not have psychological significance, however, because they arise as merely a result of chemical processes that cause visual images to be recalled while the brain categorizes, compares, and stores away the day' s experiences.",
    "question": "The argument above is vulnerable to criticism if it is true that",
    "options": [
      "dreams would be more coherent than they are if they had psychological significance.",
      "both the categorizing of experiences and the imposition of stories are events with psychological significance.",
      "dreaming must have a biological basis if dreaming is essential to adequate sleep.",
      "a dream cannot be communicated unless the dreamer has awakened."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([categorizing, imposing_stories, chemical_processes])\nsignificance = Function([events] -> [bool])\n\n# Constraints\nNot(significance(chemical_processes)) ::: Dreams do not have psychological significance because they arise as a result of chemical processes\n\n# Options\nQuestion ::: The argument above is vulnerable to criticism if it is true that\nis_vulnerable(And(significance(categorizing), significance(imposing_stories))) ::: (B) both the categorizing of experiences and the imposition of stories are events with psychological significance\nis_vulnerable(If(dreams_have_significance, dreams_are_coherent)) ::: (A) dreams would be more coherent than they are if they had psychological significance\nis_vulnerable(If(dreaming_is_essential, dreaming_has_biological_basis)) ::: (C) dreaming must have a biological basis if dreaming is essential to adequate sleep\nis_vulnerable(If(dream_cannot_be_communicated, dreamer_has_awakened)) ::: (D) a dream cannot be communicated unless the dreamer has awakened"
    ]
  },
  {
    "id": "test_419",
    "context": "Burr Incorporated spends approximately 20% of its budget on employee benefits. In an effort to curb costs, Human Resources has decided to run a pilot program with volunteer employees, in which volunteers received a 5% raise in pay for a 25% reduction in benefits. During the first year of the pilot program, the volunteers' productivity matched or exceeded their previous performance. Burr Inc. has concluded that implementing the pilot program company-wide will not only save Burr money, but also increase productivity.",
    "question": "Which of the following, if true, would provide the strongest justification for Burr Inc. not to implement the pilot program company-wide?",
    "options": [
      "Other companies that have implemented similar programs successfully have all been much smaller than Burr Inc.",
      "Alternatives to cutting benefits might be able to save Burr Inc. more than 5% of what the company pays in salary and benefits.",
      "Promotions amongst those in the volunteer group were contingent upon their performance while in this group.",
      "55% of the employees who chose to take part in the pilot program were under the age of 30 and so were less worried about retirement benefits being cut."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([volunteers, non_volunteers])\nfactors = EnumSort([budget, productivity, promotions, demographics])\neffects = Function([factors] -> [bool])\n\n# Constraints\neffects(budget) == True ::: Burr Inc. believes the pilot program will save money\neffects(productivity) == True ::: Burr Inc. believes the pilot program will increase productivity\neffects(promotions) == False ::: Promotions amongst those in the volunteer group were contingent upon their performance while in this group\neffects(demographics) == False ::: 55% of the employees who chose to take part in the pilot program were under the age of 30\n\n# Options\nQuestion ::: Which of the following, if true, would provide the strongest justification for Burr Inc. not to implement the pilot program company-wide?\nis_strong_justification(effects(budget) == False) ::: (Other companies that have implemented similar programs successfully have all been much smaller than Burr Inc.\nis_strong_justification(effects(budget) == False) ::: (Alternatives to cutting benefits might be able to save Burr Inc. more than 5% of what the company pays in salary and benefits.\nis_strong_justification(effects(promotions) == True) ::: (Promotions amongst those in the volunteer group were contingent upon their performance while in this group.\nis_strong_justification(effects(demographics) == True) ::: (55% of the employees who chose to take part in the pilot program were under the age of 30 and so were less worried about retirement benefits being cut."
    ]
  },
  {
    "id": "test_420",
    "context": "Therapists who treat violent criminals cannot both respect their clients' right to confidentiality and be sincerely concerned for the welfare of victims of future violent crimes. Reporting a client' s unreported crimes violates the client' s trust, but remaining silent leaves the dangerous client out of prison, free to commit more crimes.",
    "question": "Which one of the following, if true, most weakens the argument?",
    "options": [
      "Criminals are no more likely to receive therapy in prison than they are out of prison.",
      "A therapist who has gained a violent criminal's trust can persuade that criminal not to commit repeat offenses.",
      "The right of victims of violent crimes to compensation is as important as the right of criminals in therapy to confidentiality.",
      "Victims of future violent crimes also have a right to confidentiality should they need therapy."
    ],
    "raw_logic_programs": [
      "# Declarations\ntherapists = EnumSort([therapist])\nclients = EnumSort([violent_criminal])\nrights = EnumSort([confidentiality, concern_for_victims])\nactions = EnumSort([report_crimes, remain_silent])\ntrust = Function([therapists, clients] -> [bool])\nconcern = Function([therapists] -> [bool])\nrespect = Function([therapists, rights] -> [bool])\n\n# Constraints\nForAll([t:therapists], Not(And(respect(t, confidentiality), concern(t)))) ::: Therapists cannot both respect confidentiality and be concerned for victims\nForAll([t:therapists, c:clients], Implies(report_crimes(t, c), Not(trust(t, c)))) ::: Reporting crimes violates trust\nForAll([t:therapists, c:clients], Implies(remain_silent(t, c), Not(concern(t)))) ::: Remaining silent leaves the client free to commit more crimes\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the argument?\nis_weakening(Exists([t:therapists, c:clients], persuade_not_to_commit(t, c))) ::: (A therapist who has gained a violent criminal's trust can persuade that criminal not to commit repeat offenses.)\nis_weakening(Exists([c:clients], Not(receive_therapy_in_prison(c)))) ::: (Criminals are no more likely to receive therapy in prison than they are out of prison.)\nis_weakening(Exists([v:victims], right_to_compensation(v) == right_to_confidentiality(c))) ::: (The right of victims of violent crimes to compensation is as important as the right of criminals in therapy to confidentiality.)\nis_weakening(Exists([v:victims], right_to_confidentiality(v))) ::: (Victims of future violent crimes also have a right to confidentiality should they need therapy.)"
    ]
  },
  {
    "id": "test_421",
    "context": "So-called environmentalists have argued that the proposed Golden Lake Development would interfere with bird-migration patterns. However, the fact that these same people have raised environmental objections to virtually every development proposal brought before the council in recent years indicates that their expressed concern for bird migration patterns is nothing but a mask for their antidevelopment, antiprogress agenda. Their claim, ttherefore, should be dismissed without further consideration.",
    "question": "Which one of the following questionable argumentative techniques is employed in the passage?",
    "options": [
      "assuming that what is true of a group as a whole is necessarily true of each member of that group",
      "rejecting the conclusion of an argument on the basis of a claim about the motives of those advancing the argument",
      "misrepresenting evidence that supports the position the argument is intended to refute",
      "using a few exceptional cases as the basis for a claim about what is true in general"
    ],
    "raw_logic_programs": [
      "# Declarations\nargument_techniques = EnumSort([\n    \"assuming_group_to_individual\",\n    \"rejecting_based_on_motives\",\n    \"misrepresenting_evidence\",\n    \"using_exceptional_cases\"\n])\n\n# Constraints\nargument_uses_technique = Function([argument_techniques] -> [bool])\n\n# Options\nQuestion ::: Which one of the following questionable argumentative techniques is employed in the passage?\nargument_uses_technique(\"assuming_group_to_individual\") ::: (assuming that what is true of a group as a whole is necessarily true of each member of that group)\nargument_uses_technique(\"rejecting_based_on_motives\") ::: (rejecting the conclusion of an argument on the basis of a claim about the motives of those advancing the argument)\nargument_uses_technique(\"misrepresenting_evidence\") ::: (misrepresenting evidence that supports the position the argument is intended to refute)\nargument_uses_technique(\"using_exceptional_cases\") ::: (using a few exceptional cases as the basis for a claim about what is true in general)"
    ]
  },
  {
    "id": "test_422",
    "context": "Chapin: Commentators have noted with concern the recent electoral success by extremist parties in several democratic countries. But these successes pose no threat to democracy in those countries. The extremists have won pluralities, not majorities. Furthermore, they have won only when the moderate parties were preoccupied with arguing among themselves.",
    "question": "Which one of the following, if assumed, enables Chapin's conclusion to be properly drawn?",
    "options": [
      "Members of moderate parties who consider extremist parties to be a serious threat to democracy will sometimes put aside their differences with each other to oppose them.",
      "Parties that win pluralities but not majorities never directly or indirectly effect changes in their country's political arrangements.",
      "People are not always supporting a move toward an extremist government when they vote for extremist parties in democratic elections.",
      "Countries in which extremist parties win pluralities sometimes have democratic governments as strong as those in countries that lack extremist parties."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([country1, country2, country3])\nparties = EnumSort([extremist, moderate])\nelections = Function([countries] -> [parties])\nplurality = Function([countries] -> [bool])\nmajority = Function([countries] -> [bool])\npreoccupied = Function([countries] -> [bool])\nthreat_to_democracy = Function([countries] -> [bool])\n\n# Constraints\nForAll([c:countries], Implies(elections(c) == extremist, And(plurality(c), Not(majority(c))))) ::: Extremists have won pluralities, not majorities\nForAll([c:countries], Implies(elections(c) == extremist, preoccupied(c))) ::: Extremists have won only when moderate parties were preoccupied\n\n# Options\nQuestion ::: Which one of the following, if assumed, enables Chapin's conclusion to be properly drawn?\nis_valid(ForAll([c:countries], Implies(And(plurality(c), Not(majority(c))), Not(threat_to_democracy(c))))) ::: (A) Members of moderate parties who consider extremist parties to be a serious threat to democracy will sometimes put aside their differences with each other to oppose them.\nis_valid(ForAll([c:countries], Implies(plurality(c), Not(threat_to_democracy(c))))) ::: (B) Parties that win pluralities but not majorities never directly or indirectly effect changes in their country's political arrangements.\nis_valid(ForAll([c:countries], Implies(elections(c) == extremist, Not(threat_to_democracy(c))))) ::: (C) People are not always supporting a move toward an extremist government when they vote for extremist parties in democratic elections.\nis_valid(ForAll([c:countries], Implies(elections(c) == extremist, Not(threat_to_democracy(c))))) ::: (D) Countries in which extremist parties win pluralities sometimes have democratic governments as strong as those in countries that lack extremist parties."
    ]
  },
  {
    "id": "test_423",
    "context": "Consumer: The latest Connorly Report suggests that Ocksenfrey prepackaged meals are virtually devoid of nutritional value. But the Connorly Report is commissioned by Danto Foods, Ocksenfrey' s largest corporate rival, and early drafts of the report are submitted for approval to Danto Foods' public relations department. Because of the obvious bias of this report, it is clear that Ocksenfrey' s prepackaged meals really are nutritious.",
    "question": "The reasoning in the consumer's argument is most vulnerable to criticism on the grounds that the argument",
    "options": [
      "presumes, without providing justification, that Danto Foods' public relations department would not approve a draft of a report that was hostile to Danto Foods' products",
      "draws a conclusion based solely on an unrepresentative sample of Ocksenfrey's products",
      "fails to provide evidence that Danto Foods' prepackaged meals are not more nutritious than Ocksenfrey's are",
      "treats evidence that there is an apparent bias as evidence that the Connorly Report's claims are false"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([consumer_argument])\ncriticisms = EnumSort([bias_assumption, unrepresentative_sample, lack_of_comparison, bias_as_falsity])\nvulnerable_to = Function([arguments] -> [criticisms])\n\n# Constraints\nvulnerable_to(consumer_argument) == bias_as_falsity ::: The reasoning in the consumer's argument is most vulnerable to criticism on the grounds that the argument treats evidence that there is an apparent bias as evidence that the Connorly Report's claims are false\n\n# Options\nQuestion ::: The reasoning in the consumer's argument is most vulnerable to criticism on the grounds that the argument\nis_vulnerable(vulnerable_to(consumer_argument) == bias_assumption) ::: (presumes, without providing justification, that Danto Foods' public relations department would not approve a draft of a report that was hostile to Danto Foods' products\nis_vulnerable(vulnerable_to(consumer_argument) == unrepresentative_sample) ::: (draws a conclusion based solely on an unrepresentative sample of Ocksenfrey's products\nis_vulnerable(vulnerable_to(consumer_argument) == lack_of_comparison) ::: (fails to provide evidence that Danto Foods' prepackaged meals are not more nutritious than Ocksenfrey's are\nis_vulnerable(vulnerable_to(consumer_argument) == bias_as_falsity) ::: (treats evidence that there is an apparent bias as evidence that the Connorly Report's claims are false"
    ]
  },
  {
    "id": "test_424",
    "context": "Most universities today offer students a more in-depth and cosmopolitan education than ever before. Until recently, for example, most university history courses required only the reading of textbooks that hardly mentioned the history of Africa or Asia after the ancient periods, or the history of the Americas' indigenous cultures. The history courses at most universities no longer display such limitations.",
    "question": "Which one of the following, if true, most strengthens the argument above?",
    "options": [
      "The history courses that university students find most interesting are comprehensive in their coverage of various periods and cultures.",
      "University students who in their history courses are required only to read textbooks covering the history of a single culture will not get an in-depth and cosmopolitan education from these courses alone.",
      "The extent to which the textbooks of university history courses are culturally inclusive is a strong indication of the extent to which students at those universities get an in-depth and cosmopolitan education.",
      "Many students at universities whose history courses require the reading of books covering all periods and world cultures participate in innovative study-abroad programs."
    ],
    "raw_logic_programs": [
      "# Declarations\nuniversities = EnumSort([University])\ncourses = EnumSort([HistoryCourse])\ntextbooks = EnumSort([Textbook])\nregions = EnumSort([Africa, Asia, IndigenousCultures, OtherRegions])\nperiods = EnumSort([Ancient, Modern])\ncoverage = Function([textbooks, regions, periods] -> [bool])\nrequired_reading = Function([courses, textbooks] -> [bool])\noffers_course = Function([universities, courses] -> [bool])\n\n# Constraints\nForAll([u:universities, c:courses], Implies(offers_course(u, c), Exists([t:textbooks], required_reading(c, t)))) ::: Most universities today offer students a more in-depth and cosmopolitan education than ever before\nForAll([c:courses, t:textbooks], Implies(required_reading(c, t), Or(coverage(t, Africa, Modern), coverage(t, Asia, Modern), coverage(t, IndigenousCultures, Modern)))) ::: The history courses at most universities no longer display such limitations\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument above?\nis_strongest(ForAll([c:courses], Implies(Exists([t:textbooks], required_reading(c, t)), comprehensive_coverage(c)))) ::: (A) The history courses that university students find most interesting are comprehensive in their coverage of various periods and cultures.\nis_strongest(ForAll([c:courses], Implies(Exists([t:textbooks], required_reading(c, t)), Not(single_culture_coverage(c))))) ::: (B) University students who in their history courses are required only to read textbooks covering the history of a single culture will not get an in-depth and cosmopolitan education from these courses alone.\nis_strongest(ForAll([c:courses], Implies(Exists([t:textbooks], required_reading(c, t)), culturally_inclusive(t)))) ::: (C) The extent to which the textbooks of university history courses are culturally inclusive is a strong indication of the extent to which students at those universities get an in-depth and cosmopolitan education.\nis_strongest(ForAll([u:universities], Implies(Exists([c:courses], offers_course(u, c)), study_abroad_programs(u)))) ::: (D) Many students at universities whose history courses require the reading of books covering all periods and world cultures participate in innovative study-abroad programs."
    ]
  },
  {
    "id": "test_425",
    "context": "A commonly accepted myth is that left-handed people are more prone to cause accidents than are right-handed people. But this is, in fact, just a myth, as is indicated by the fact that more household accidents are caused by right-handed people than are caused by left-handed people.",
    "question": "The reasoning is flawed because the argument",
    "options": [
      "makes a distinction where there is no real difference between the things distinguished",
      "uses the word \"accidents\" in two different senses",
      "gives wholly irrelevant evidence and simply disparages an opposing position by calling it a \"myth\"",
      "takes no account of the relative frequency of left-handed people in the population as a whole"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([left_handed, right_handed])\naccidents = Function([people] -> [int])\n\n# Constraints\naccidents(right_handed) > accidents(left_handed) ::: more household accidents are caused by right-handed people than by left-handed people\n\n# Options\nQuestion ::: The reasoning is flawed because the argument\nis_flawed_due_to(ignores_relative_frequency) ::: (takes no account of the relative frequency of left-handed people in the population as a whole)"
    ]
  },
  {
    "id": "test_426",
    "context": "In the past, every ten-percentage-point increase in cigarette prices in the country of Coponia has decreased per capita sales of cigarettes by four percent. Coponia is about to raise taxes on cigarettes by 9 cents per pack. The average price of cigarettes in Coponia is and has been for more than a year 90 cents per pack. So the tax hike stands an excellent chance of reducing per capita sales of cigarettes by four percent.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "The number of people in Coponia who smoke cigarettes has remained relatively constant for the past several years.",
      "Tobacco companies are unlikely to reduce their profit per pack of cigarettes to avoid an increase in the cost per pack to consumers in Coponia.",
      "Previous increases in cigarette prices in Coponia have generally been due to increases in taxes on cigarettes.",
      "Any decrease in per capita sales of cigarettes in Coponia will result mainly from an increase in the number of people who quit smoking entirely."
    ],
    "raw_logic_programs": [
      "# Declarations\nprice_increase = Real('price_increase')  # Represents the percentage increase in cigarette prices\nsales_decrease = Real('sales_decrease')  # Represents the percentage decrease in per capita sales\ntax_increase = Real('tax_increase')  # Represents the increase in tax per pack\ncurrent_price = Real('current_price')  # Represents the current price per pack\nassumptions = EnumSort(['constant_smokers', 'no_profit_reduction', 'tax_causes_price_increase', 'quit_smoking'])\n\n# Constraints\nprice_increase == 10 ::: Every ten-percentage-point increase in cigarette prices\nsales_decrease == 4 ::: Decreases per capita sales of cigarettes by four percent\ntax_increase == 9 ::: Coponia is about to raise taxes on cigarettes by 9 cents per pack\ncurrent_price == 90 ::: The average price of cigarettes in Coponia is 90 cents per pack\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(assumptions.constant_smokers) ::: (The number of people in Coponia who smoke cigarettes has remained relatively constant for the past several years.)\nis_assumption(assumptions.no_profit_reduction) ::: (Tobacco companies are unlikely to reduce their profit per pack of cigarettes to avoid an increase in the cost per pack to consumers in Coponia.)\nis_assumption(assumptions.tax_causes_price_increase) ::: (Previous increases in cigarette prices in Coponia have generally been due to increases in taxes on cigarettes.)\nis_assumption(assumptions.quit_smoking) ::: (Any decrease in per capita sales of cigarettes in Coponia will result mainly from an increase in the number of people who quit smoking entirely.)"
    ]
  },
  {
    "id": "test_427",
    "context": "Many major scientific discoveries of the past were the product of serendipity, the chance discovery of valuable findings that investigators had not purposely sought. Now, however, scientific research tends to be so costly that investigators are heavily dependent on large grants to fund their research. Because such grants require investigators to provide the grant sponsors with clear projections of the outcome of the proposed research, investigators ignore anything that does not directly bear on the funded research. Ttherefore, under the prevailing circumstances, serendipity can no longer play a role in scientific discovery.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "All scientific investigators who provide grant sponsors with clear projections of the outcome of their research receive at least some of the grants for which they apply.",
      "In the past few scientific investigators attempted to make clear predictions of the outcome of their research.",
      "Only findings that an investigator purposely seeks can directly bear on that investigator's research.",
      "In general the most valuable scientific discoveries are the product of serendipity."
    ],
    "raw_logic_programs": [
      "# Declarations\ninvestigators = EnumSort([Investigator])\nfindings = EnumSort([Valuable, NotValuable])\nresearch = EnumSort([Funded, NotFunded])\noutcomes = EnumSort([Sought, NotSought])\ndiscoveries = EnumSort([Serendipitous, NotSerendipitous])\n\n# Constraints\nForAll([i:investigators], Implies(research(i) == Funded, outcomes(i) == Sought)) ::: Investigators with funded research provide clear projections of outcomes\nForAll([i:investigators], Implies(outcomes(i) == Sought, findings(i) == Valuable)) ::: Only sought outcomes are considered valuable\nForAll([i:investigators], Implies(findings(i) == Valuable, discoveries(i) == NotSerendipitous)) ::: Valuable findings are not serendipitous under current circumstances\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([i:investigators], Implies(outcomes(i) == Sought, findings(i) == Valuable))) ::: (A) All scientific investigators who provide grant sponsors with clear projections of the outcome of their research receive at least some of the grants for which they apply.\nis_assumption(Exists([i:investigators], outcomes(i) == NotSought)) ::: (B) In the past few scientific investigators attempted to make clear predictions of the outcome of their research.\nis_assumption(ForAll([i:investigators], Implies(outcomes(i) == NotSought, findings(i) == NotValuable))) ::: (C) Only findings that an investigator purposely seeks can directly bear on that investigator's research.\nis_assumption(Exists([i:investigators], discoveries(i) == Serendipitous)) ::: (D) In general the most valuable scientific discoveries are the product of serendipity."
    ]
  },
  {
    "id": "test_428",
    "context": "In many corporations, employees are being replaced by automated equipment in order to save money. However, many workers who lose their jobs to automation will need government assistance to survive, and the same corporations that are laying people off will eventually pay for that assistance through increased taxes and unemployment insurance payments.",
    "question": "Which of the following, if true, most strengthens the author's argument?",
    "options": [
      "Many corporations that have failed to automate have seen their profits decline.",
      "The initial investment in machinery for automation is often greater than the short-term savings in labor costs.",
      "Many workers who have already lost their jobs to automation have been unable to find new jobs.",
      "Taxes and unemployment insurance are also paid by corporations that are not automating."
    ],
    "raw_logic_programs": [
      "# Declarations\ncorporations = EnumSort([automating, not_automating])\nemployees = EnumSort([employed, unemployed])\ncosts = EnumSort([initial_investment, short_term_savings, taxes, unemployment_insurance])\neffects = EnumSort([profit_decline, job_loss, government_assistance])\n\n# Constraints\nForAll([c:corporations], Exists([e:employees], And(e == unemployed, c == automating))) ::: Employees are being replaced by automated equipment\nForAll([e:employees], Implies(e == unemployed, Exists([g:effects], g == government_assistance))) ::: Many workers who lose their jobs to automation will need government assistance\nForAll([c:corporations], Implies(c == automating, Exists([t:costs], Or(t == taxes, t == unemployment_insurance)))) ::: Corporations that are laying people off will eventually pay for that assistance through increased taxes and unemployment insurance payments\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the author's argument?\nis_strongest(Exists([c:corporations], And(c == not_automating, Exists([p:effects], p == profit_decline)))) ::: (A)\nis_strongest(Exists([c:corporations], And(c == automating, Exists([i:costs], i == initial_investment)))) ::: (B)\nis_strongest(Exists([e:employees], And(e == unemployed, Exists([j:effects], j == job_loss)))) ::: (C)\nis_strongest(Exists([c:corporations], And(c == not_automating, Exists([t:costs], Or(t == taxes, t == unemployment_insurance))))) ::: (D)"
    ]
  },
  {
    "id": "test_429",
    "context": "Psychiatrist: Take any visceral emotion you care to consider. There are always situations in which it is healthy to try to express that emotion. So, there are always situations in which it is healthy to try to express one' s anger.",
    "question": "The conclusion of the argument follows logically if which one of the following is assumed?",
    "options": [
      "Anger is always expressible.",
      "An emotion is visceral only if it is healthy to express.",
      "Anger is a visceral emotion.",
      "Some kinds of emotions are unhealthy to express."
    ],
    "raw_logic_programs": [
      "# Declarations\nemotions = EnumSort([visceral, non_visceral])\nemotion_type = Function([str] -> [emotions])\nhealthy_to_express = Function([str] -> [bool])\n\n# Constraints\nForAll([e:str], Implies(emotion_type(e) == visceral, Exists([s:str], healthy_to_express(e)))) ::: There are always situations in which it is healthy to try to express any visceral emotion.\n\n# Options\nQuestion ::: The conclusion of the argument follows logically if which one of the following is assumed?\nis_assumed(healthy_to_express(\"anger\")) ::: (Anger is always expressible.)\nis_assumed(ForAll([e:str], Implies(emotion_type(e) == visceral, healthy_to_express(e)))) ::: (An emotion is visceral only if it is healthy to express.)\nis_assumed(emotion_type(\"anger\") == visceral) ::: (Anger is a visceral emotion.)\nis_assumed(Exists([e:str], Not(healthy_to_express(e)))) ::: (Some kinds of emotions are unhealthy to express.)"
    ]
  },
  {
    "id": "test_430",
    "context": "Among multiparty democracies, those with the fewest parties will have the most-productive legislatures. The fewer the number of parties in a democracy, the more issues each must take a stand on. A political party that must take stands on a wide variety of issues has to prioritize those issues; this promotes a tendency to compromise.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "The legislatures of nondemocracies are less productive than are those of democracies.",
      "Legislators in a multiparty democracy never all agree on important issues.",
      "The tendency to compromise makes the legislative process more productive.",
      "The fewer the number of a nation's political parties, the more important it is that those parties can compromise with each other."
    ],
    "raw_logic_programs": [
      "# Declarations\ndemocracies = EnumSort([multiparty, fewest_parties])\nlegislatures = EnumSort([productive, less_productive])\nissues = EnumSort([wide_variety, few_variety])\ntendency = EnumSort([compromise, no_compromise])\n\n# Constraints\nForAll([d:democracies], Implies(d == fewest_parties, legislatures(d) == productive)) ::: Among multiparty democracies, those with the fewest parties will have the most-productive legislatures\nForAll([d:democracies], Implies(d == fewest_parties, issues(d) == wide_variety)) ::: The fewer the number of parties in a democracy, the more issues each must take a stand on\nForAll([d:democracies], Implies(issues(d) == wide_variety, tendency(d) == compromise)) ::: A political party that must take stands on a wide variety of issues has to prioritize those issues; this promotes a tendency to compromise\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(Implies(tendency(compromise), legislatures(productive))) ::: (The tendency to compromise makes the legislative process more productive.\nis_assumption(Implies(legislatures(less_productive), Not(democracies(multiparty)))) ::: (The legislatures of nondemocracies are less productive than are those of democracies.\nis_assumption(Not(Exists([d:democracies], ForAll([i:issues], tendency(d) == no_compromise)))) ::: (Legislators in a multiparty democracy never all agree on important issues.\nis_assumption(Implies(democracies(fewest_parties), tendency(compromise))) ::: (The fewer the number of a nation's political parties, the more important it is that those parties can compromise with each other."
    ]
  },
  {
    "id": "test_431",
    "context": "Teachers at high school Y were provided with a new science curriculum that has been used for the past five years in place of the previous curriculum. During the last five years, scores on the science portion of the state' s standardized test have improved dramatically. On the basis of these test results, the school district has concluded that the new science curriculum was more effective than the old curriculum, at least in the short term, in improving students' learning of science.",
    "question": "Each of the following, if true, weakens the school district's argument EXCEPT:",
    "options": [
      "In the last few years, the school district has focused on increasing parental involvement in its students' education.",
      "The local school district has recently replaced most of the science teachers in the district with younger and more innovative teachers.",
      "The science portion of the state's standardized test also changed five years ago and now focuses more on the scientific knowledge that most students learn outside the classroom.",
      "The local school district also instituted a new mathematics curriculum that has produced improved scores on the state's standardized tests."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([parental_involvement, teacher_replacement, test_change, math_curriculum, science_curriculum_effectiveness])\neffects = EnumSort([weaken, not_weaken])\nimpact = Function([factors] -> [effects])\n\n# Constraints\nimpact(parental_involvement) == weaken ::: In the last few years, the school district has focused on increasing parental involvement in its students' education.\nimpact(teacher_replacement) == weaken ::: The local school district has recently replaced most of the science teachers in the district with younger and more innovative teachers.\nimpact(test_change) == weaken ::: The science portion of the state's standardized test also changed five years ago and now focuses more on the scientific knowledge that most students learn outside the classroom.\nimpact(math_curriculum) == weaken ::: The local school district also instituted a new mathematics curriculum that has produced improved scores on the state's standardized tests.\n\n# Options\nQuestion ::: Each of the following, if true, weakens the school district's argument EXCEPT:\nis_not_weaken(impact(science_curriculum_effectiveness) == not_weaken) ::: (E) The new science curriculum was more effective than the old curriculum, at least in the short term, in improving students' learning of science."
    ]
  },
  {
    "id": "test_432",
    "context": "Many employers treat their employees fairly. Thus, using others as a means to one' s own ends is not always morally reprehensible or harmful to others.",
    "question": "The argument requires the assumption that",
    "options": [
      "no employers who act morally use their employees as a means to their own ends",
      "it is not possible to harm someone else without treating that person as a means to one's own ends",
      "some or all employers use their employees as a means to their own ends",
      "making a profit from the labor of others is personally advantageous but never harmful"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployers = EnumSort([many_employers, some_employers, all_employers])\nactions = EnumSort([treat_fairly, use_as_means, act_morally, harm_others])\nassumes = Function([employers, actions] -> [bool])\n\n# Constraints\nassumes(many_employers, treat_fairly) ::: Many employers treat their employees fairly\nassumes(some_employers, use_as_means) ::: Using others as a means to one's own ends is not always morally reprehensible or harmful to others\n\n# Options\nQuestion ::: The argument requires the assumption that\nis_required(Implies(assumes(all_employers, act_morally), Not(assumes(all_employers, use_as_means)))) ::: (A) no employers who act morally use their employees as a means to their own ends\nis_required(Implies(assumes(some_employers, harm_others), assumes(some_employers, use_as_means))) ::: (B) it is not possible to harm someone else without treating that person as a means to one's own ends\nis_required(assumes(some_employers, use_as_means)) ::: (C) some or all employers use their employees as a means to their own ends\nis_required(Implies(assumes(some_employers, use_as_means), Not(assumes(some_employers, harm_others)))) ::: (D) making a profit from the labor of others is personally advantageous but never harmful"
    ]
  },
  {
    "id": "test_433",
    "context": "A study of plaque buildup on teeth used three randomly assigned groups of people who brushed their teeth twice a day for a year. People in Group 1 used the same toothbrush all year. People in Group 2 used the same toothbrush all year but sterilized it each month. People in Group 3 used a new, sterile toothbrush each month. At the end of the year, people in Groups 1 and 2 had the same amount of plaque buildup as each other, while people in Group 3 had less plaque buildup.",
    "question": "Which one of the following, if true, most helps to explain the relative amounts of plaque buildup found in the three groups?",
    "options": [
      "The people in Group 2 and Group 3 brushed their teeth as vigorously as did the people in Group 1.",
      "The stiffness of the bristles on new toothbrushes, which the mechanical action of brushing destroys after several months, inhibits the buildup of plaque.",
      "The people who did the study measured the amount of plaque buildup by a new method not usually employed by dentists.",
      "The buildup of plaque on teeth, which brushing twice a day helps to prevent, is accelerated by the growth of bacteria on toothbrushes that remained unsterilized for more than a month."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([Group1, Group2, Group3])\nplaque_buildup = Function([groups] -> [int])\nsterilization = Function([groups] -> [bool])\nnew_toothbrush = Function([groups] -> [bool])\n\n# Constraints\nplaque_buildup(Group1) == plaque_buildup(Group2) ::: People in Groups 1 and 2 had the same amount of plaque buildup\nplaque_buildup(Group3) < plaque_buildup(Group1) ::: People in Group 3 had less plaque buildup\nNot(sterilization(Group1)) ::: People in Group 1 used the same toothbrush all year\nsterilization(Group2) ::: People in Group 2 used the same toothbrush all year but sterilized it each month\nnew_toothbrush(Group3) ::: People in Group 3 used a new, sterile toothbrush each month\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the relative amounts of plaque buildup found in the three groups?\nis_explanation(And(sterilization(Group2), new_toothbrush(Group3), plaque_buildup(Group1) == plaque_buildup(Group2), plaque_buildup(Group3) < plaque_buildup(Group1))) ::: (A) The people in Group 2 and Group 3 brushed their teeth as vigorously as did the people in Group 1.\nis_explanation(And(new_toothbrush(Group3), plaque_buildup(Group3) < plaque_buildup(Group1))) ::: (B) The stiffness of the bristles on new toothbrushes, which the mechanical action of brushing destroys after several months, inhibits the buildup of plaque.\nis_explanation(True) ::: (C) The people who did the study measured the amount of plaque buildup by a new method not usually employed by dentists.\nis_explanation(And(Not(sterilization(Group1)), plaque_buildup(Group1) == plaque_buildup(Group2), plaque_buildup(Group3) < plaque_buildup(Group1))) ::: (D) The buildup of plaque on teeth, which brushing twice a day helps to prevent, is accelerated by the growth of bacteria on toothbrushes that remained unsterilized for more than a month."
    ]
  },
  {
    "id": "test_434",
    "context": "Safety considerations aside, nuclear power plants are not economically feasible. While the cost of fuel for nuclear plants is significantly lower than the cost of conventional fuels, such as coal and oil, nuclear plants are far more expensive to build than are conventional power plants.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Conventional power plants spend more time out of service than do nuclear power plants.",
      "Safety regulations can increase the costs of running both conventional and nuclear power plants.",
      "As conventional fuels become scarcer their cost will increase dramatically, which will increase the cost of running a conventional power plant.",
      "The average life expectancy of a nuclear power plant is shorter than that of a conventional one."
    ],
    "raw_logic_programs": [
      "# Declarations\npower_plants = EnumSort([nuclear, conventional])\ncosts = EnumSort([fuel, construction, operation])\nfeasibility = Function([power_plants] -> [bool])\ncost_comparison = Function([power_plants, costs] -> [int])\n\n# Constraints\ncost_comparison(nuclear, fuel) < cost_comparison(conventional, fuel) ::: The cost of fuel for nuclear plants is significantly lower than the cost of conventional fuels\ncost_comparison(nuclear, construction) > cost_comparison(conventional, construction) ::: Nuclear plants are far more expensive to build than are conventional power plants\nfeasibility(nuclear) == False ::: Nuclear power plants are not economically feasible\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nis_strongest(Implies(cost_comparison(conventional, operation) > cost_comparison(nuclear, operation), feasibility(nuclear) == False)) ::: (A) Conventional power plants spend more time out of service than do nuclear power plants.\nis_strongest(Implies(And(cost_comparison(conventional, operation) > cost_comparison(nuclear, operation), cost_comparison(nuclear, operation) > cost_comparison(conventional, operation)), feasibility(nuclear) == False)) ::: (B) Safety regulations can increase the costs of running both conventional and nuclear power plants.\nis_strongest(Implies(cost_comparison(conventional, fuel) > cost_comparison(nuclear, fuel), feasibility(nuclear) == False)) ::: (C) As conventional fuels become scarcer their cost will increase dramatically, which will increase the cost of running a conventional power plant.\nis_strongest(Implies(cost_comparison(nuclear, operation) > cost_comparison(conventional, operation), feasibility(nuclear) == False)) ::: (D) The average life expectancy of a nuclear power plant is shorter than that of a conventional one."
    ]
  },
  {
    "id": "test_435",
    "context": "Considering that Mark Twain is Samuel Clemens, I have always found it amazing that very few people know that Samuel Clemens was a writer, since almost everybody knows that Mark Twain was one.",
    "question": "Which one of the following, if true, would most effectively resolve the apparent paradox above?",
    "options": [
      "Most people do not know that Mark Twain is Samuel Clemens.",
      "Most people probably have not read anything by Samuel Clemens.",
      "Many people believe apparently conflicting things about authors.",
      "Some people know that \"Mark Twain\"is a pseudonym for Samuel Clemens."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Mark_Twain, Samuel_Clemens])\nattributes = EnumSort([is_writer, is_known])\nknows = Function([people, attributes] -> [bool])\n\n# Constraints\nknows(Mark_Twain, is_writer) ::: almost everybody knows that Mark Twain was a writer\nNot(knows(Samuel_Clemens, is_known)) ::: very few people know that Samuel Clemens was a writer\n\n# Options\nQuestion ::: Which one of the following, if true, would most effectively resolve the apparent paradox above?\nis_resolving(knows(Mark_Twain, is_known) == False) ::: (A) Most people do not know that Mark Twain is Samuel Clemens.\nis_resolving(Not(Exists([p:people], knows(p, is_writer)))) ::: (B) Most people probably have not read anything by Samuel Clemens.\nis_resolving(Exists([p:people], knows(p, is_known) == False)) ::: (C) Many people believe apparently conflicting things about authors.\nis_resolving(Exists([p:people], knows(p, is_known))) ::: (D) Some people know that \"Mark Twain\" is a pseudonym for Samuel Clemens."
    ]
  },
  {
    "id": "test_436",
    "context": "Food cooked in iron pots absorbs significant amounts of iron during cooking, and people whose food is cooked in iron pots consume enough iron in this way to satisfy their nutritional requirements for iron. Ttherefore, there is no need for these people to eat the kinds of foods that naturally contain iron.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Any essential nutrients other than iron in foods that naturally contain iron can be obtained from other foods.",
      "The iron absorbed into food from iron pots is less easily digestible than the iron that occurs naturally in some foods.",
      "Food that has been cooked in iron pots does not absorb any non-nutritive elements from the pots.",
      "People who prefer to use iron pots for cooking food do not use pots made of any other material."
    ],
    "raw_logic_programs": [
      "# Declarations\nnutrients = EnumSort([iron, other_nutrients])\nfoods = EnumSort([iron_pot_cooked, naturally_iron_rich])\npeople = EnumSort([iron_pot_users])\nconsumes = Function([people, foods, nutrients] -> [bool])\n\n# Constraints\nForAll([p:people], consumes(p, iron_pot_cooked, iron)) ::: people whose food is cooked in iron pots consume enough iron\nForAll([p:people], Not(consumes(p, naturally_iron_rich, iron))) ::: there is no need for these people to eat the kinds of foods that naturally contain iron\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([p:people], Exists([f:foods], consumes(p, f, other_nutrients)))) ::: (A) Any essential nutrients other than iron in foods that naturally contain iron can be obtained from other foods.\nis_assumption(ForAll([p:people], Not(consumes(p, iron_pot_cooked, iron)))) ::: (B) The iron absorbed into food from iron pots is less easily digestible than the iron that occurs naturally in some foods.\nis_assumption(ForAll([p:people], Not(consumes(p, iron_pot_cooked, other_nutrients)))) ::: (C) Food that has been cooked in iron pots does not absorb any non-nutritive elements from the pots.\nis_assumption(ForAll([p:people], Not(Exists([f:foods], consumes(p, f, iron))))) ::: (D) People who prefer to use iron pots for cooking food do not use pots made of any other material."
    ]
  },
  {
    "id": "test_437",
    "context": "In early 2003, scientists detected methane in the atmosphere of Mars. Methane is a fragile compound that falls apart when hit by the ultraviolet radiation in sunlight. So any methane in the Martian atmosphere must have been released into the atmosphere relatively recently.",
    "question": "The argument relies on the assumption that",
    "options": [
      "methane cannot be detected until it has started to fall apart",
      "all methane in the Martian atmosphere is eventually exposed to sunlight",
      "methane in Earth's atmosphere does not fall apart as a result of exposure to ultraviolet radiation",
      "Mars had no methane in its atmosphere prior to 2003"
    ],
    "raw_logic_programs": [
      "# Declarations\ncompounds = EnumSort([methane])\nplanets = EnumSort([Mars, Earth])\nevents = EnumSort([detected, exposed, released])\ntime = EnumSort([early_2003, prior_2003])\nconditions = Function([compounds, planets, events, time] -> [bool])\n\n# Constraints\nForAll([c:compounds, p:planets], Implies(conditions(c, p, detected, early_2003), Exists([t:time], conditions(c, p, released, t)))) ::: any methane in the Martian atmosphere must have been released into the atmosphere relatively recently\nForAll([c:compounds, p:planets], Implies(conditions(c, p, exposed, early_2003), Not(conditions(c, p, detected, early_2003)))) ::: methane is a fragile compound that falls apart when hit by the ultraviolet radiation in sunlight\n\n# Options\nQuestion ::: The argument relies on the assumption that\nis_assumption(ForAll([c:compounds], Implies(conditions(c, Mars, exposed, early_2003), conditions(c, Mars, detected, early_2003)))) ::: (methane cannot be detected until it has started to fall apart\nis_assumption(ForAll([c:compounds], Exists([t:time], conditions(c, Mars, exposed, t)))) ::: (all methane in the Martian atmosphere is eventually exposed to sunlight\nis_assumption(Not(ForAll([c:compounds], conditions(c, Earth, exposed, early_2003)))) ::: (methane in Earth's atmosphere does not fall apart as a result of exposure to ultraviolet radiation\nis_assumption(Not(Exists([t:time], conditions(methane, Mars, released, prior_2003)))) ::: (Mars had no methane in its atmosphere prior to 2003"
    ]
  },
  {
    "id": "test_438",
    "context": "Ethicist: The most advanced kind of moral motivation is based solely on abstract principles. This form of motivation is in contrast with calculated self-interest or the desire to adhere to societal norms and conventions.",
    "question": "The actions of which one of the following individuals exhibit the most advanced kind of moral motivation, as described by the ethicist?",
    "options": [
      "Leigh's employers engaged in an illegal but profitable practice that caused serious damage to the environment. Leigh reported this practice to the authorities only because several colleagues had been pressuring her to do so.",
      "Jadine's employers engaged in an illegal but profitable practice that caused serious damage to the environment. Jadine reported this practice to the authorities out of a belief that protecting the environment is always more important than monetary profit.",
      "Bobby contributed money to a local charity during a charity drive at work because he worried that not doing so would make him look stingy.",
      "Donna's employers engaged in an illegal but profitable practice that caused serious damage to the environment. Donna did not report this practice to the authorities, out of fear that her employers would retaliate against her."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Leigh, Jadine, Bobby, Donna])\nmotivations = EnumSort([abstract_principles, self_interest, societal_norms])\nactions = Function([individuals] -> [motivations])\n\n# Constraints\nactions(Leigh) == societal_norms ::: Leigh reported the practice due to pressure from colleagues\nactions(Jadine) == abstract_principles ::: Jadine reported the practice out of a belief in protecting the environment\nactions(Bobby) == societal_norms ::: Bobby contributed to charity to avoid looking stingy\nactions(Donna) == self_interest ::: Donna did not report the practice out of fear of retaliation\n\n# Options\nQuestion ::: The actions of which one of the following individuals exhibit the most advanced kind of moral motivation, as described by the ethicist?\nis_advanced(actions(Leigh) == abstract_principles) ::: (A)\nis_advanced(actions(Jadine) == abstract_principles) ::: (B)\nis_advanced(actions(Bobby) == abstract_principles) ::: (C)\nis_advanced(actions(Donna) == abstract_principles) ::: (D)"
    ]
  },
  {
    "id": "test_439",
    "context": "Evidently, watching too much television can lead people to overestimate the risks that the world poses to them. A recent study found that people are more likely to think that they will be victims of a natural disaster if they watch an above-average amount of television than if they do not.",
    "question": "Which one of the following, if true, most weakens the reasoning above?",
    "options": [
      "Many people overestimate the dangers that the world poses to them, regardless of the amount of television they watch.",
      "A person is less likely to live in an area that is prone to natural disasters if that person watches an above-average amount of television than if that person watches a below-average amount of television.",
      "People who are well informed about the risks posed by natural disasters tend to have become well informed in some way other than by watching television.",
      "A person is more likely to watch an above- average amount of television if that person lives in an area that is prone to natural disasters than if that person lives in an area that is not."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\ntelevision_amount = EnumSort([above_average, below_average])\nrisk_perception = EnumSort([overestimate, not_overestimate])\nliving_area = EnumSort([prone_to_disasters, not_prone_to_disasters])\ninformed_method = EnumSort([television, other])\n\nwatches_tv = Function([people] -> [television_amount])\nperceives_risk = Function([people] -> [risk_perception])\nlives_in_area = Function([people] -> [living_area])\ninformed_by = Function([people] -> [informed_method])\n\n# Constraints\nForAll([p:people], Implies(watches_tv(p) == above_average, perceives_risk(p) == overestimate)) ::: People who watch an above-average amount of television are more likely to overestimate risks.\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the reasoning above?\nis_weakening(ForAll([p:people], perceives_risk(p) == overestimate)) ::: Many people overestimate the dangers that the world poses to them, regardless of the amount of television they watch.\nis_weakening(ForAll([p:people], Implies(watches_tv(p) == above_average, lives_in_area(p) == not_prone_to_disasters))) ::: A person is less likely to live in an area that is prone to natural disasters if that person watches an above-average amount of television.\nis_weakening(ForAll([p:people], Implies(perceives_risk(p) == not_overestimate, informed_by(p) == other))) ::: People who are well informed about the risks posed by natural disasters tend to have become well informed in some way other than by watching television.\nis_weakening(ForAll([p:people], Implies(lives_in_area(p) == prone_to_disasters, watches_tv(p) == above_average))) ::: A person is more likely to watch an above-average amount of television if that person lives in an area that is prone to natural disasters."
    ]
  },
  {
    "id": "test_440",
    "context": "A certain strain of bacteria was found in the stomachs of ulcer patients. A medical researcher with no history of ulcers inadvertently ingested some of the bacteria and within weeks developed an ulcer. Ttherefore, it is highly likely that the bacteria strain induces ulcers.",
    "question": "Which one of the following, if true, most supports the argument above?",
    "options": [
      "The researcher did not develop any other serious health problems within a year after ingesting the bacteria strain.",
      "The researcher is a recognized expert in the treatment of diseases of the stomach.",
      "People who have the bacteria strain in their stomachs have been found to have no greater incidence of kidney disease than do people who lack the bacteria strain.",
      "A study of 2, 000 people who do not have ulcers found that none of these people had the bacteria strain in their stomachs."
    ],
    "raw_logic_programs": [
      "# Declarations\nbacteria_strain = Bool('bacteria_strain')\nulcer = Bool('ulcer')\nresearcher = Bool('researcher')\npatients = Bool('patients')\nstudy = Function([int] -> [bool])\n\n# Constraints\nImplies(And(researcher, bacteria_strain), ulcer) ::: A medical researcher with no history of ulcers inadvertently ingested some of the bacteria and within weeks developed an ulcer\nForAll([p:int], Implies(patients, And(bacteria_strain, ulcer))) ::: A certain strain of bacteria was found in the stomachs of ulcer patients\n\n# Options\nQuestion ::: Which one of the following, if true, most supports the argument above?\nImplies(ForAll([p:int], Not(study(p))), ForAll([p:int], Not(bacteria_strain))) ::: (A) A study of 2,000 people who do not have ulcers found that none of these people had the bacteria strain in their stomachs\nImplies(researcher, Not(ulcer)) ::: (B) The researcher did not develop any other serious health problems within a year after ingesting the bacteria strain\nImplies(researcher, expert) ::: (C) The researcher is a recognized expert in the treatment of diseases of the stomach\nImplies(ForAll([p:int], Not(study(p))), ForAll([p:int], Not(kidney_disease))) ::: (D) People who have the bacteria strain in their stomachs have been found to have no greater incidence of kidney disease than do people who lack the bacteria strain"
    ]
  },
  {
    "id": "test_441",
    "context": "Several major earthquakes have occurred in a certain region over the last ten years. But a new earthquake prediction method promises to aid local civil defense officials in deciding exactly when to evacuate various towns. Detected before each of these major quakes were certain changes in the electric current in the earth' s crust.",
    "question": "Which one of the following, if true, most weakens the argument?",
    "options": [
      "There is considerable variation in the length of time between the changes in the electric current and the subsequent earthquakes.",
      "There is presently only one station in the region that is capable of detecting the electric current in the earth's crust.",
      "The frequency of major earthquakes in the region has increased over the last ten years.",
      "Scientists do not fully understand what brought about the changes in the electric current in the earth's crust that preceded each of the major quakes in the region over the last ten years."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([earthquake, electric_current_change])\nstations = EnumSort([detection_station])\ntime_intervals = Function([events] -> [int])\ndetection_capability = Function([stations, events] -> [bool])\n\n# Constraints\nForAll([e:events], time_intervals(e) >= 0) ::: Time intervals between events are non-negative\ndetection_capability(detection_station, electric_current_change) ::: There is presently only one station in the region that is capable of detecting the electric current in the earth's crust\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the argument?\nis_weakening(Exists([e1:events, e2:events], And(e1 != e2, time_intervals(e1) != time_intervals(e2)))) ::: (There is considerable variation in the length of time between the changes in the electric current and the subsequent earthquakes.\nis_weakening(Not(detection_capability(detection_station, electric_current_change))) ::: (There is presently only one station in the region that is capable of detecting the electric current in the earth's crust.\nis_weakening(Exists([e:events], time_intervals(e) < 0)) ::: (The frequency of major earthquakes in the region has increased over the last ten years.\nis_weakening(Not(Exists([e:events], detection_capability(detection_station, e)))) ::: (Scientists do not fully understand what brought about the changes in the electric current in the earth's crust that preceded each of the major quakes in the region over the last ten years."
    ]
  },
  {
    "id": "test_442",
    "context": "A new screening test has been developed for syndrome Q. Research has shown that the test yields a positive for syndrome Q whenever the person tested has that syndrome. So, since Justine shows positive on the test, she must have syndrome Q.",
    "question": "Which one of the following most accurately describes a flaw in the reasoning in the argument?",
    "options": [
      "It confuses a claim about the accuracy of a test for syndrome Q in an arbitrary group of individuals with a similar claim about the accuracy of the test for a single individual.",
      "It confuses the test's having no reliable results for the presence of syndrome Q with its having no reliable results for the absence of syndrome Q.",
      "It fails to adequately distinguish between a person's not having syndrome Q and that person's not testing positive for syndrome Q.",
      "It confuses the claim that a subject will test positive when the syndrome is present with the claim that any subject who tests positive has the syndrome."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Justine])\nsyndrome = EnumSort([syndrome_Q])\ntest_result = Function([individuals] -> [bool])\nhas_syndrome = Function([individuals] -> [bool])\n\n# Constraints\nForAll([i:individuals], Implies(has_syndrome(i), test_result(i))) ::: The test yields a positive for syndrome Q whenever the person tested has that syndrome\ntest_result(Justine) ::: Justine shows positive on the test\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the reasoning in the argument?\nis_flaw(Implies(test_result(Justine), has_syndrome(Justine))) ::: (It confuses a claim about the accuracy of a test for syndrome Q in an arbitrary group of individuals with a similar claim about the accuracy of the test for a single individual.\nis_flaw(Implies(Not(test_result(Justine)), Not(has_syndrome(Justine)))) ::: (It confuses the test's having no reliable results for the presence of syndrome Q with its having no reliable results for the absence of syndrome Q.\nis_flaw(Implies(Not(has_syndrome(Justine)), Not(test_result(Justine)))) ::: (It fails to adequately distinguish between a person's not having syndrome Q and that person's not testing positive for syndrome Q.\nis_flaw(Implies(test_result(Justine), has_syndrome(Justine))) ::: (It confuses the claim that a subject will test positive when the syndrome is present with the claim that any subject who tests positive has the syndrome."
    ]
  },
  {
    "id": "test_443",
    "context": "Child psychologist: Some studies in which children have been observed before and after playing video games with violent content have shown that young children tend to behave more aggressively immediately after playing the games. This suggests that the violence in such video games leads young children to believe that aggressive behavior is acceptable.",
    "question": "Each of the following, if true, strengthens the child psychologist's argument EXCEPT:",
    "options": [
      "Many young children who have never played video games with violent content believe that aggressive behavior is acceptable.",
      "Young children tend to behave more aggressively immediately after being told that aggressive behavior is acceptable than they did beforehand.",
      "Other studies have shown no increase in aggressive behavior in young children who have just played nonviolent video games.",
      "Older children are less likely before playing video games with violent content than they are afterwards to believe that aggressive behavior is acceptable."
    ],
    "raw_logic_programs": [
      "# Declarations\nchildren = EnumSort([young, older])\nvideo_game_content = EnumSort([violent, nonviolent])\nbehavior = EnumSort([aggressive, non_aggressive])\nbelief = EnumSort([acceptable, unacceptable])\nplays = Function([children, video_game_content] -> [behavior])\nbelieves = Function([children] -> [belief])\n\n# Constraints\nForAll([c:children], Implies(plays(c, violent) == aggressive, believes(c) == acceptable)) ::: Some studies show young children behave more aggressively after playing violent video games, suggesting they believe aggressive behavior is acceptable.\n\n# Options\nQuestion ::: Each of the following, if true, strengthens the child psychologist's argument EXCEPT:\nis_exception(ForAll([c:children], Implies(Not(plays(c, violent) == aggressive), believes(c) == acceptable))) ::: (A) Many young children who have never played video games with violent content believe that aggressive behavior is acceptable.\nis_exception(ForAll([c:children], Implies(believes(c) == acceptable, plays(c, violent) == aggressive))) ::: (B) Young children tend to behave more aggressively immediately after being told that aggressive behavior is acceptable than they did beforehand.\nis_exception(ForAll([c:children], Implies(plays(c, nonviolent) == non_aggressive, Not(plays(c, violent) == aggressive)))) ::: (C) Other studies have shown no increase in aggressive behavior in young children who have just played nonviolent video games.\nis_exception(ForAll([c:children], Implies(plays(c, violent) == aggressive, believes(older) == acceptable))) ::: (D) Older children are less likely before playing video games with violent content than they are afterwards to believe that aggressive behavior is acceptable."
    ]
  },
  {
    "id": "test_444",
    "context": "Political theorist: Even with the best spies, area experts, and satellite surveillance, foreign policy assessments can still lack important information. In such circumstances intuitive judgment is vital. A national leader with such judgment can make good decisions about foreign policy even when current information is incomplete, since__ .",
    "question": "Which of the following, if true, most logically completes the argument?",
    "options": [
      "good foreign policy decisions often lead to improved methods of gathering information",
      "those leaders whose foreign policy decisions have been highly ranked have also been found to have good intuitive judgment",
      "the central reason for failure in foreign policy decision making is the absence of critical information",
      "intuitive judgment can produce good decisions based on past experience, even when there are important gaps in current information"
    ],
    "raw_logic_programs": [
      "# Declarations\nleaders = EnumSort([national_leader])\nqualities = EnumSort([intuitive_judgment, good_decisions])\ninformation = EnumSort([complete, incomplete])\ndecisions = Function([leaders, information] -> [qualities])\n\n# Constraints\nForAll([l:leaders], Implies(decisions(l, incomplete) == intuitive_judgment, decisions(l, incomplete) == good_decisions)) ::: A national leader with intuitive judgment can make good decisions about foreign policy even when current information is incomplete\n\n# Options\nQuestion ::: Which of the following, if true, most logically completes the argument?\nis_logical(Implies(decisions(national_leader, incomplete) == intuitive_judgment, decisions(national_leader, incomplete) == good_decisions)) ::: (A) good foreign policy decisions often lead to improved methods of gathering information\nis_logical(Implies(decisions(national_leader, incomplete) == intuitive_judgment, decisions(national_leader, incomplete) == good_decisions)) ::: (B) those leaders whose foreign policy decisions have been highly ranked have also been found to have good intuitive judgment\nis_logical(Implies(decisions(national_leader, incomplete) == intuitive_judgment, decisions(national_leader, incomplete) == good_decisions)) ::: (C) the central reason for failure in foreign policy decision making is the absence of critical information\nis_logical(Implies(decisions(national_leader, incomplete) == intuitive_judgment, decisions(national_leader, incomplete) == good_decisions)) ::: (D) intuitive judgment can produce good decisions based on past experience, even when there are important gaps in current information"
    ]
  },
  {
    "id": "test_445",
    "context": "Some critics claim that it is unfair that so many great works of art are housed in huge metropolitan museums, since the populations served by these museums already have access to a wide variety of important artwork. But this criticism is in principle unwarranted because the limited number of masterpieces makes wider distribution of them impractical. Besides, if a masterpiece is to be fully appreciated, it must be seen alongside other works that provide a social and historical context for it.",
    "question": "Which one of the following, if established, could most logically serve as the principle appealed to in the argument countering the critics' claim?",
    "options": [
      "In providing facilities to the public, the goal should be to ensure that as many as possible of those people who could benefit from the facilities are able to do so.",
      "In providing facilities to the public, the goal should be to ensure that the greatest possible number of people gain the greatest benefit possible from them.",
      "For it to be reasonable to criticize an arrangement as unfair, there must be a more equitable arrangement that is practically attainable.",
      "A work of art should be displayed in conditions resembling as closely as possible those in which the work was originally intended to be displayed."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\nargument = Function([principles] -> [bool])\n\n# Constraints\nargument(P1) == False ::: (In providing facilities to the public, the goal should be to ensure that as many as possible of those people who could benefit from the facilities are able to do so.)\nargument(P2) == False ::: (In providing facilities to the public, the goal should be to ensure that the greatest possible number of people gain the greatest benefit possible from them.)\nargument(P3) == True ::: (For it to be reasonable to criticize an arrangement as unfair, there must be a more equitable arrangement that is practically attainable.)\nargument(P4) == False ::: (A work of art should be displayed in conditions resembling as closely as possible those in which the work was originally intended to be displayed.)\n\n# Options\nQuestion ::: Which one of the following, if established, could most logically serve as the principle appealed to in the argument countering the critics' claim?\nis_valid(argument(P1)) ::: (A)\nis_valid(argument(P2)) ::: (B)\nis_valid(argument(P3)) ::: (C)\nis_valid(argument(P4)) ::: (D)"
    ]
  },
  {
    "id": "test_446",
    "context": "Politician: Critics of the wetlands-protection bill are delaying passage of this important legislation merely on the grounds that they disagree with its new, more restrictive definition of the term \"wetlands. \" But this bill will place stricter limits on the development of wetlands than the existing regulations do. Ttherefore, in quibbling over semantics, critics of this bill show that they care little about what really happens to our wetlands.",
    "question": "The politician's reply to the opponents of the wetlands-protection bill is most vulnerable to which one of the following criticisms?",
    "options": [
      "It assumes without justification that those who criticized the wetlands-protection bill stand to profit if the bill is defeated.",
      "It fails to provide a defense for a less restrictive definition of \"wetlands. \"",
      "It does not adequately recognize the possibility that the definition of the word \"wetlands\" determines the impact of the legislation.",
      "It attempts to defend the credibility of the author of the bill rather than defending the bill itself."
    ],
    "raw_logic_programs": [
      "# Declarations\ncritics = EnumSort([opponents])\nbill = EnumSort([wetlands_protection])\ndefinition = EnumSort([restrictive, less_restrictive])\nimpact = EnumSort([stricter_limits, existing_regulations])\nconcern = EnumSort([semantics, actual_impact])\n\n# Constraints\ndisagree(opponents, definition(restrictive)) ::: Critics of the wetlands-protection bill disagree with its new, more restrictive definition of the term \"wetlands\"\nimpact(bill) == stricter_limits ::: The bill will place stricter limits on the development of wetlands than the existing regulations do\nconcern(opponents) == semantics ::: Critics are quibbling over semantics\n\n# Options\nQuestion ::: The politician's reply to the opponents of the wetlands-protection bill is most vulnerable to which one of the following criticisms?\nassumes_without_justification(profit(opponents, defeat(bill))) ::: (A) It assumes without justification that those who criticized the wetlands-protection bill stand to profit if the bill is defeated.\nfails_to_provide_defense(definition(less_restrictive)) ::: (B) It fails to provide a defense for a less restrictive definition of \"wetlands.\"\ndoes_not_recognize_possibility(definition_determines_impact(definition, impact)) ::: (C) It does not adequately recognize the possibility that the definition of the word \"wetlands\" determines the impact of the legislation.\ndefends_author_credibility(author(bill)) ::: (D) It attempts to defend the credibility of the author of the bill rather than defending the bill itself."
    ]
  },
  {
    "id": "test_447",
    "context": "Slash-and-burn agriculture involves burning several acres of forest, leaving vegetable ash that provides ample fertilizer for three or four years of bountiful crops. On the cleared land nutrients leach out of the soil, however, and the land becomes too poor to support agriculture. New land is then cleared by burning and the process starts again. Since most farming in the tropics uses this method, forests in this region will eventually be permanently eradicated.",
    "question": "The argument depends on the assumption that",
    "options": [
      "forests in the tropics do not regenerate well enough to restore themselves once they have been cleared by the slash-and-burn method",
      "some other methods of agriculture are not as destructive to the environment in tropical regions as the slash-and-burn method is",
      "forests in the tropics are naturally deficient in nutrients that are needed to support the growth of plants that are not native to those regions",
      "slash-and-burn agriculture is particularly suitable for farming in tropical areas"
    ],
    "raw_logic_programs": [
      "# Declarations\nforests = EnumSort([tropics])\nmethods = EnumSort([slash_and_burn, other_methods])\nagriculture = Function([methods, forests] -> [bool])\nregenerate = Function([forests] -> [bool])\nsuitable = Function([methods, forests] -> [bool])\n\n# Constraints\nagriculture(slash_and_burn, tropics) ::: most farming in the tropics uses this method\nForAll([f:forests], Not(regenerate(f))) ::: forests in this region will eventually be permanently eradicated\n\n# Options\nQuestion ::: The argument depends on the assumption that\nis_assumption(Not(regenerate(tropics))) ::: (forests in the tropics do not regenerate well enough to restore themselves once they have been cleared by the slash-and-burn method)\nis_assumption(Exists([m:methods], And(m != slash_and_burn, Not(agriculture(m, tropics))))) ::: (some other methods of agriculture are not as destructive to the environment in tropical regions as the slash-and-burn method is)\nis_assumption(False) ::: (forests in the tropics are naturally deficient in nutrients that are needed to support the growth of plants that are not native to those regions)\nis_assumption(suitable(slash_and_burn, tropics)) ::: (slash-and-burn agriculture is particularly suitable for farming in tropical areas)"
    ]
  },
  {
    "id": "test_448",
    "context": "At Learnington Academy, a high percentage of students are currently failing their classes, as overcrowding is making it difficult for them to receive the individualized attention from teachers that would allow them to pass. Enrollment is predicted to increase by 25 percent over the next three years. Learnington' s administration has decided to hire only 10 percent more teachers for this time period, anticipating that this will be sufficient to ensure that the number of students failing because of lack of attention will not increase.",
    "question": "Which of the following, if true, provides the strongest grounds for the administration's prediction?",
    "options": [
      "Most of the future students are expected to take classes in departments that currently have lower-than-average enrollment.",
      "Most students who attend the most over-enrolled courses require those courses for their majors.",
      "The ten percent increase in the number of teachers can be hired without increasing Learnington's expenses by the same amount.",
      "Learnington also plans to increase extracurricular activities that meet during the same hours as the most popular classes."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([failing, passing])\nteachers = EnumSort([current, future])\nenrollment = Function([students, teachers] -> [int])\n\n# Constraints\nenrollment(failing, current) > enrollment(passing, current) ::: A high percentage of students are currently failing their classes\nenrollment(failing, future) <= enrollment(failing, current) ::: The number of students failing because of lack of attention will not increase\nenrollment(future, teachers) == enrollment(current, teachers) * 1.1 ::: Learnington's administration has decided to hire only 10 percent more teachers\nenrollment(future, students) == enrollment(current, students) * 1.25 ::: Enrollment is predicted to increase by 25 percent\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest grounds for the administration's prediction?\nis_strongest_ground(Exists([d:departments], And(enrollment(future, d) < enrollment(current, d), d in lower_than_average_enrollment))) ::: (A) Most of the future students are expected to take classes in departments that currently have lower-than-average enrollment\nis_strongest_ground(Exists([c:courses], And(enrollment(future, c) > enrollment(current, c), c in over_enrolled_courses))) ::: (B) Most students who attend the most over-enrolled courses require those courses for their majors\nis_strongest_ground(Exists([e:expenses], And(enrollment(future, teachers) == enrollment(current, teachers) * 1.1, e == expenses))) ::: (C) The ten percent increase in the number of teachers can be hired without increasing Learnington's expenses by the same amount\nis_strongest_ground(Exists([a:activities], And(a in extracurricular_activities, a during popular_classes))) ::: (D) Learnington also plans to increase extracurricular activities that meet during the same hours as the most popular classes"
    ]
  },
  {
    "id": "test_449",
    "context": "Trancorp currently transports all its goods to Burland Island by truck. The only bridge over the channel separating Burland from the mainland is congested, and trucks typically spend hours in traffic. Trains can reach the channel more quickly than trucks, and freight cars can be transported to Burland by barges that typically cross the channel in an hour. Ttherefore, to reduce shipping time, Trancorp plans to switch to trains and barges to transport goods to Burland.",
    "question": "Which of the following, if true, casts most serious doubt on whether Trancorp's plan will succeed?",
    "options": [
      "Barges that arrive at Burland typically wait several hours for their turn to be unloaded.",
      "It does not cost significantly more to transport goods to Burland by truck than it does to transport goods by train and barge.",
      "Most trucks transporting goods into Burland return to the mainland empty.",
      "Because there has been so much traffic on the roads leading to the bridge between Burland and the mainland, these roads are in extremely poor condition."
    ],
    "raw_logic_programs": [
      "# Declarations\ntransport_modes = EnumSort([truck, train_barge])\nissues = EnumSort([congestion, unloading_delay, cost, road_condition])\nplan_success = Function([transport_modes, issues] -> [bool])\n\n# Constraints\nplan_success(truck, congestion) == False ::: Trucks typically spend hours in traffic due to congestion\nplan_success(train_barge, congestion) == True ::: Trains can reach the channel more quickly than trucks\nplan_success(train_barge, unloading_delay) == True ::: Barges typically cross the channel in an hour\n\n# Options\nQuestion ::: Which of the following, if true, casts most serious doubt on whether Trancorp's plan will succeed?\nis_doubt(plan_success(train_barge, unloading_delay) == False) ::: (A) Barges that arrive at Burland typically wait several hours for their turn to be unloaded.\nis_doubt(plan_success(train_barge, cost) == False) ::: (B) It does not cost significantly more to transport goods to Burland by truck than it does to transport goods by train and barge.\nis_doubt(plan_success(truck, cost) == False) ::: (C) Most trucks transporting goods into Burland return to the mainland empty.\nis_doubt(plan_success(truck, road_condition) == False) ::: (D) Because there has been so much traffic on the roads leading to the bridge between Burland and the mainland, these roads are in extremely poor condition."
    ]
  },
  {
    "id": "test_450",
    "context": "Historian: Radio drama requires its listeners to think about what they hear, picturing for themselves such dramatic elements as characters' physical appearances and spatial relationships. Hence, while earlier generations, for whom radio drama was the dominant form of popular entertainment, regularly exercised their imaginations, today' s generation of television viewers do so less frequently.",
    "question": "Which one of the following is an assumption required by the historian's argument?",
    "options": [
      "For today's generation of television viewers, nothing fills the gap left by radio as a medium for exercising the imagination.",
      "The more familiar a form of popular entertainment becomes, the less likely its consumers are to exercise their imaginations.",
      "Because it inhibits the development of creativity, television is a particularly undesirable form of popular entertainment.",
      "People spend as much time watching television today as people spent listening to radio in radio's heyday."
    ],
    "raw_logic_programs": [
      "# Declarations\ngenerations = EnumSort([earlier, today])\nentertainment_forms = EnumSort([radio_drama, television])\nactivities = EnumSort([exercise_imagination])\ndominant_form = Function([generations] -> [entertainment_forms])\nengages_activity = Function([generations, entertainment_forms] -> [bool])\n\n# Constraints\ndominant_form(earlier) == radio_drama ::: Radio drama was the dominant form of popular entertainment for earlier generations\ndominant_form(today) == television ::: Television is the dominant form of popular entertainment for today's generation\nengages_activity(earlier, radio_drama) == True ::: Earlier generations exercised their imaginations with radio drama\nengages_activity(today, television) == False ::: Today's generation exercises their imaginations less frequently with television\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the historian's argument?\nis_required(engages_activity(today, radio_drama) == False) ::: (A) For today's generation of television viewers, nothing fills the gap left by radio as a medium for exercising the imagination.\nis_required(ForAll([g:generations, e:entertainment_forms], Implies(dominant_form(g) == e, Not(engages_activity(g, e))))) ::: (B) The more familiar a form of popular entertainment becomes, the less likely its consumers are to exercise their imaginations.\nis_required(ForAll([g:generations], Not(engages_activity(g, television)))) ::: (C) Because it inhibits the development of creativity, television is a particularly undesirable form of popular entertainment.\nis_required(ForAll([g:generations], Count([e:entertainment_forms], dominant_form(g) == e) == 1)) ::: (D) People spend as much time watching television today as people spent listening to radio in radio's heyday."
    ]
  },
  {
    "id": "test_451",
    "context": "Some cleaning fluids, synthetic carpets, wall paneling, and other products release toxins, such as formaldehyde and benzene, into the household air supply. This is not a problem in well-ventilated houses, but it is a problem in houses that are so well insulated that they trap toxins as well as heat. Recent tests, however, demonstrate that houseplants remove some household toxins from the air and thereby eliminate their danger. In one test, 20 large plants eliminated formaldehyde from a small, well-insulated house. Assume that a person who lives in a small, well-insulated house that contains toxin-releasing products places houseplants, such as those tested, in the house.",
    "question": "Which one of the following can be expected as a result?",
    "options": [
      "If there is formaldehyde in the household air supply, its level will decrease.",
      "The concentration of toxins in the household air supply will remain the same.",
      "If formaldehyde and benzene are being released into the household air supply, the quantities released of each will decrease.",
      "The house will be warm and have a safe air supply."
    ],
    "raw_logic_programs": [
      "# Declarations\ntoxins = EnumSort([formaldehyde, benzene])\nhouse_conditions = EnumSort([well_ventilated, well_insulated])\nhouseplants = Function([bool])  # True if houseplants are present, False otherwise\ntoxin_level = Function([toxins, house_conditions, bool] -> [int])  # Toxin level based on toxin type, house condition, and presence of houseplants\n\n# Constraints\nForAll([t:toxins, c:house_conditions], toxin_level(t, c, False) > 0) ::: Toxins are present in the household air supply if no houseplants are present\nForAll([t:toxins], toxin_level(t, well_ventilated, True) == toxin_level(t, well_ventilated, False)) ::: In well-ventilated houses, houseplants do not affect toxin levels\nForAll([t:toxins], toxin_level(t, well_insulated, True) < toxin_level(t, well_insulated, False)) ::: In well-insulated houses, houseplants reduce toxin levels\n\n# Options\nQuestion ::: Which one of the following can be expected as a result?\nis_expected(Implies(toxin_level(formaldehyde, well_insulated, False) > 0, toxin_level(formaldehyde, well_insulated, True) < toxin_level(formaldehyde, well_insulated, False))) ::: (A) If there is formaldehyde in the household air supply, its level will decrease.\nis_expected(ForAll([t:toxins], toxin_level(t, well_insulated, True) == toxin_level(t, well_insulated, False))) ::: (B) The concentration of toxins in the household air supply will remain the same.\nis_expected(ForAll([t:toxins], Implies(toxin_level(t, well_insulated, False) > 0, toxin_level(t, well_insulated, True) < toxin_level(t, well_insulated, False)))) ::: (C) If formaldehyde and benzene are being released into the household air supply, the quantities released of each will decrease.\nis_expected(And(house_conditions == well_insulated, ForAll([t:toxins], toxin_level(t, well_insulated, True) < toxin_level(t, well_insulated, False)))) ::: (D) The house will be warm and have a safe air supply."
    ]
  },
  {
    "id": "test_452",
    "context": "Twenty years ago, the percentage of their annual income that married couples spent on the purchase of automobiles was twice what it is today. Given that incomes have risen over the past twenty years, we can conclude that incomes have risen at a greater rate than the price of automobiles in that period.",
    "question": "Which one of the following, if true, helps most to justify the conclusion drawn above?",
    "options": [
      "In general, married couples today buy longer-lasting automobiles and purchase new automobiles less frequently than their counterparts twenty years ago.",
      "Married couples today, on average, purchase the same kinds of automobiles as often as they did twenty years ago.",
      "Unlike married couples, single people today spend about the same percentage of their income on automobiles as they did twenty years ago.",
      "The amount of money spent on automobiles per capita is half as much as the amount of money spent on automobiles per capita twenty years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `time_periods = EnumSort([twenty_years_ago, today])`\n- `spending = Function([time_periods] -> [float])`  # Represents the percentage of income spent on automobiles\n- `income = Function([time_periods] -> [float])`  # Represents the income level\n- `auto_price = Function([time_periods] -> [float])`  # Represents the price of automobiles\n\n# Constraints\n- `spending(twenty_years_ago) == 2 * spending(today)` ::: The percentage of income spent on automobiles twenty years ago was twice what it is today.\n- `income(today) > income(twenty_years_ago)` ::: Incomes have risen over the past twenty years.\n\n# Options\nQuestion ::: Which one of the following, if true, helps most to justify the conclusion drawn above?\n- `Implies(spending(today) < spending(twenty_years_ago), income(today) / income(twenty_years_ago) > auto_price(today) / auto_price(twenty_years_ago))` ::: The conclusion that incomes have risen at a greater rate than the price of automobiles.\n- `is_justified(Implies(spending(today) < spending(twenty_years_ago), income(today) / income(twenty_years_ago) > auto_price(today) / auto_price(twenty_years_ago)))` ::: (A) In general, married couples today buy longer-lasting automobiles and purchase new automobiles less frequently than their counterparts twenty years ago.\n- `is_justified(Implies(spending(today) == spending(twenty_years_ago), income(today) / income(twenty_years_ago) == auto_price(today) / auto_price(twenty_years_ago)))` ::: (B) Married couples today, on average, purchase the same kinds of automobiles as often as they did twenty years ago.\n- `is_justified(Implies(spending(today) == spending(twenty_years_ago), income(today) / income(twenty_years_ago) == auto_price(today) / auto_price(twenty_years_ago)))` ::: (C) Unlike married couples, single people today spend about the same percentage of their income on automobiles as they did twenty years ago.\n- `is_justified(Implies(spending(today) < spending(twenty_years_ago), income(today) / income(twenty_years_ago) > auto_price(today) / auto_price(twenty_years_ago)))` ::: (D) The amount of money spent on automobiles per capita is half as much as the amount of money spent on automobiles per capita twenty years ago."
    ]
  },
  {
    "id": "test_453",
    "context": "History provides many examples of technological innovations being strongly resisted by people whose working conditions without those innovations were miserable. This shows that social inertia is a more powerful determinant of human behavior than is the desire for comfort or safety.",
    "question": "Which one of the following, if true, most seriously undermines the reasoning in the argument?",
    "options": [
      "People correctly believe that technological innovations often cause job loss.",
      "Some examples of technological innovation have been embraced by workers.",
      "People correctly believe that technological innovations almost always increase workers' productivity.",
      "People are often reluctant to take on new challenges."
    ],
    "raw_logic_programs": [
      "# Declarations\n- Argument: A statement or set of statements that presents a conclusion supported by premises.\n- Premises: Statements that provide support or evidence for the conclusion.\n- Conclusion: The statement that the premises are intended to support.\n- Undermines: A statement or fact that weakens or challenges the reasoning of the argument.\n\n# Constraints\n- Premise: Technological innovations are strongly resisted by people with miserable working conditions.\n- Conclusion: Social inertia is a more powerful determinant of human behavior than the desire for comfort or safety.\n\n# Options\nQuestion: Which one of the following, if true, most seriously undermines the reasoning in the argument?\n- undermines(Argument, People correctly believe that technological innovations often cause job loss) ::: (A)\n- undermines(Argument, Some examples of technological innovation have been embraced by workers) ::: (B)\n- undermines(Argument, People correctly believe that technological innovations almost always increase workers' productivity) ::: (C)\n- undermines(Argument, People are often reluctant to take on new challenges) ::: (D)"
    ]
  },
  {
    "id": "test_454",
    "context": "Ramona: One of the primary values of a university education is the intellectual growth that results from exposure to a wide range of ideas. Too many students miss this because they choose technical majors only to improve their chances on the job market. Recent pressures to graduate as quickly as possible only make matters worse. Martin: But we have to be realistic. My brother graduated last year as an English major, but he' s working as a waiter. Anyway, you are forgetting that even students in technical majors are required to take some liberal arts classes.",
    "question": "The conversation most strongly supports the claim that Ramona and Martin agree with each other that",
    "options": [
      "financial security is more important than intellectual growth",
      "intellectual growth is more important than financial security",
      "not every university class exposes students to a wide range of ideas",
      "only graduates with degrees in technical subjects get good jobs"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Ramona, Martin])\nvalues = EnumSort([financial_security, intellectual_growth])\nclasses = EnumSort([technical, liberal_arts])\nexposure = Function([classes] -> [bool])\n\n# Constraints\nexposure(technical) == False ::: Not every university class exposes students to a wide range of ideas\nexposure(liberal_arts) == True ::: Liberal arts classes expose students to a wide range of ideas\n\n# Options\nQuestion ::: The conversation most strongly supports the claim that Ramona and Martin agree with each other that\nis_agree(ForAll([c:classes], Not(exposure(c)))) ::: (not every university class exposes students to a wide range of ideas)\nis_agree(ForAll([v:values], v == financial_security)) ::: (financial security is more important than intellectual growth)\nis_agree(ForAll([v:values], v == intellectual_growth)) ::: (intellectual growth is more important than financial security)\nis_agree(Exists([c:classes], exposure(c) == False)) ::: (only graduates with degrees in technical subjects get good jobs)"
    ]
  },
  {
    "id": "test_455",
    "context": "Rita: The original purpose of government farmsubsidy programs was to provide income stability for small family farmers, but most farm-subsidy money goes to a few farmers with large holdings. Payments to farmers whose income, before subsidies, is greater than $100, 000 a year should be stopped. Thomas: It would be impossible to administer such a cutoff point. Subsidies are needed during the planting and growing season, but farmers do not know their income for a given calendar year until tax returns are calculated and submitted the following April.",
    "question": "Which one of the following, if true, is the strongest counter Rita can make to Thomas' objection?",
    "options": [
      "Subsidy cutoffs can be determined on the basis of income for the preceding year.",
      "If subsidy payments to large farmers were eliminated, the financial condition of the government would improve.",
      "Having such a cutoff point would cause some farmers whose income would otherwise exceed $100, 000 to reduce their plantings.",
      "It has become difficult for small farmers to obtain bank loans to be repaid later by money from subsidies."
    ],
    "raw_logic_programs": [
      "# Declarations\nfarmers = EnumSort([small, large])\nincome = Function([farmers] -> [int])\nsubsidy_eligibility = Function([farmers] -> [bool])\n\n# Constraints\nForAll([f:farmers], Implies(income(f) > 100000, Not(subsidy_eligibility(f)))) ::: Payments to farmers whose income, before subsidies, is greater than $100,000 a year should be stopped\n\n# Options\nQuestion ::: Which one of the following, if true, is the strongest counter Rita can make to Thomas' objection?\nis_strongest_counter(Exists([f:farmers], subsidy_eligibility(f) == (income(f) <= income(f, preceding_year)))) ::: (A) Subsidy cutoffs can be determined on the basis of income for the preceding year\nis_strongest_counter(Exists([f:farmers], Not(subsidy_eligibility(f)) -> financial_condition(government) == improved)) ::: (B) If subsidy payments to large farmers were eliminated, the financial condition of the government would improve\nis_strongest_counter(Exists([f:farmers], subsidy_eligibility(f) == (income(f) <= 100000) -> plantings(f) == reduced)) ::: (C) Having such a cutoff point would cause some farmers whose income would otherwise exceed $100,000 to reduce their plantings\nis_strongest_counter(Exists([f:farmers], Not(subsidy_eligibility(f)) -> loan_obtainability(small_farmers) == difficult)) ::: (D) It has become difficult for small farmers to obtain bank loans to be repaid later by money from subsidies"
    ]
  },
  {
    "id": "test_456",
    "context": "Some critics claim that the power of the media to impose opinions upon people concerning the important issues of the day is too great. But this is not true. It would be true if on major issues the media purveyed a range of opinion narrower than that found among consumers of media. The fact that this assumption is untrue shows the critics' claim to be false.",
    "question": "Which one of the following most accurately describes a reasoning flaw in the argument?",
    "options": [
      "The argument launches a personal attack against the critics rather than addressing the reasons they present in support of their claim.",
      "The argument, instead of providing adequate reasons in support of its conclusion, makes an appeal to popular opinion.",
      "The argument takes for granted that if the truth of one claim implies the truth of a second claim, then the falsity of the first claim proves the falsity of the second claim.",
      "The argument takes for granted that the media give at least as much exposure as they should to a wide range of opinion on the important issues of the day."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([critics_claim, media_range_claim])\ntruth_values = EnumSort([true, false])\nimplies = Function([claims, claims] -> [bool])\nassumption = Function([claims] -> [truth_values])\n\n# Constraints\nimplies(critics_claim, media_range_claim) ::: If the critics' claim is true, then the media range claim is true\nassumption(media_range_claim) == false ::: The assumption that the media purvey a range of opinion narrower than that found among consumers is untrue\n\n# Options\nQuestion ::: Which one of the following most accurately describes a reasoning flaw in the argument?\nis_flaw(The argument launches a personal attack against the critics rather than addressing the reasons they present in support of their claim) ::: (A)\nis_flaw(The argument, instead of providing adequate reasons in support of its conclusion, makes an appeal to popular opinion) ::: (B)\nis_flaw(The argument takes for granted that if the truth of one claim implies the truth of a second claim, then the falsity of the first claim proves the falsity of the second claim) ::: (C)\nis_flaw(The argument takes for granted that the media give at least as much exposure as they should to a wide range of opinion on the important issues of the day) ::: (D)"
    ]
  },
  {
    "id": "test_457",
    "context": "The Nile Delta of Egypt was invaded and ruled from 1650 to 1550 B. C. by a people called the Hyksos. Their origin is uncertain, but archaeologists hypothesize that they were Canaanites. In support of this hypothesis, the archaeologists point out that excavations of Avaris, the Hyksos capital in Egypt, have uncovered large numbers of artifacts virtually identical to artifacts produced in Ashkelon, a major city of Canaan at the time of the Hyksos invasion.",
    "question": "In order to evaluate the force of the archaeologists' evidence, it would be most useful to determine which of the following?",
    "options": [
      "Whether Avaris was the nearest Hyksos city in Egypt to Canaan",
      "Whether many of the artifacts found at Avaris that are similar to artifacts produced in Ashkelon date to well before the Hyksos invasion",
      "Whether there were some artifacts found at Avaris that were unlike those produced in Ashkelon but that date to before 1700 B. C.",
      "Whether the Hyksos ruled any other part of Egypt besides the Delta in the period from 1650 to 1550 B. C."
    ],
    "raw_logic_programs": [
      "# Declarations\nartifacts = EnumSort([Avaris, Ashkelon])\nevents = EnumSort([Hyksos_invasion, before_Hyksos_invasion])\nlocations = EnumSort([Avaris, Canaan, other_parts_of_Egypt])\nsimilarity = Function([artifacts, artifacts] -> [bool])\ndates = Function([artifacts] -> [events])\nruled = Function([locations, events] -> [bool])\n\n# Constraints\nsimilarity(Avaris, Ashkelon) ::: excavations of Avaris have uncovered large numbers of artifacts virtually identical to artifacts produced in Ashkelon\ndates(Avaris) == Hyksos_invasion ::: artifacts found at Avaris date to the time of the Hyksos invasion\n\n# Options\nQuestion ::: In order to evaluate the force of the archaeologists' evidence, it would be most useful to determine which of the following?\nis_useful(Exists([l:locations], ruled(l, Hyksos_invasion) && l == Avaris)) ::: (A) Whether Avaris was the nearest Hyksos city in Egypt to Canaan\nis_useful(Exists([a:artifacts], similarity(a, Ashkelon) && dates(a) == before_Hyksos_invasion)) ::: (B) Whether many of the artifacts found at Avaris that are similar to artifacts produced in Ashkelon date to well before the Hyksos invasion\nis_useful(Exists([a:artifacts], Not(similarity(a, Ashkelon)) && dates(a) == before_Hyksos_invasion)) ::: (C) Whether there were some artifacts found at Avaris that were unlike those produced in Ashkelon but that date to before 1700 B. C.\nis_useful(Exists([l:locations], ruled(l, Hyksos_invasion) && l == other_parts_of_Egypt)) ::: (D) Whether the Hyksos ruled any other part of Egypt besides the Delta in the period from 1650 to 1550 B. C."
    ]
  },
  {
    "id": "test_458",
    "context": "In the winter, ravens survive by eating carcasses; in fact, an individual raven may survive for weeks on one carcass. Yet, according to many reports, ravens will often recruit more ravens to help eat a carcass. This seemingly altruistic behavior struck Bernd Heinrich as being worthy of investigation. He set up observation blinds from which he had a clear view of an open meadow in which he placed meat. He found that the mated pair of ravens in whose territory the meadow was located laid exclusive claim to the meat; so, to avoid starvation, juvenile ravens-who do not yet have territories-had to assemble in groups large enough to drive the resident pair away from the meat.",
    "question": "Which one of the following descriptions best fits Bernd Heinrich's study as reported in the passage above?",
    "options": [
      "He proposed two alternative hypotheses, each of which would explain a set of observations .",
      "His investigation replicated previous studies but yielded a more limited set of observational data.",
      "He proposed a theory and then proceeded to confirm it through observation.",
      "His investigation partially confirmed prior observations but led to a radical reinterpretation of those observations."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudy = EnumSort([Bernd_Heinrich])\nobservations = EnumSort([mated_pair_claim, juvenile_assembly])\nhypotheses = EnumSort([altruistic_behavior, survival_strategy])\ninvestigation = Function([study] -> [observations])\nexplanation = Function([observations] -> [hypotheses])\n\n# Constraints\ninvestigation(Bernd_Heinrich) == mated_pair_claim ::: Bernd Heinrich observed that the mated pair of ravens laid exclusive claim to the meat\ninvestigation(Bernd_Heinrich) == juvenile_assembly ::: Bernd Heinrich observed that juvenile ravens assembled in groups to drive the resident pair away\nexplanation(mated_pair_claim) == survival_strategy ::: The observation of mated pair claim is explained by the survival strategy hypothesis\nexplanation(juvenile_assembly) == survival_strategy ::: The observation of juvenile assembly is explained by the survival strategy hypothesis\n\n# Options\nQuestion ::: Which one of the following descriptions best fits Bernd Heinrich's study as reported in the passage above?\nis_best_fit(And(explanation(mated_pair_claim) == survival_strategy, explanation(juvenile_assembly) == survival_strategy)) ::: (A) He proposed two alternative hypotheses, each of which would explain a set of observations.\nis_best_fit(False) ::: (B) His investigation replicated previous studies but yielded a more limited set of observational data.\nis_best_fit(False) ::: (C) He proposed a theory and then proceeded to confirm it through observation.\nis_best_fit(False) ::: (D) His investigation partially confirmed prior observations but led to a radical reinterpretation of those observations."
    ]
  },
  {
    "id": "test_459",
    "context": "Politician: Suppose censorship is wrong in itself, as modern liberals tend to believe. Then an actor' s refusing a part in a film because the film glamorizes a point of view abhorrent to the actor would be morally wrong. But this conclusion is absurd. It follows that censorship is not, after all, wrong in itself.",
    "question": "The reasoning in the politician's argument is most vulnerable to criticism on the grounds that this argument",
    "options": [
      "uses the term \"liberal\" in order to discredit opponents'point of view",
      "draws a conclusion that is inconsistent with a premise it accepts",
      "presumes, without providing justification, that declining a film role constitutes censorship in the relevant sense",
      "presumes, without providing justification, that actors would subscribe to any tenet of modern liberalism"
    ],
    "raw_logic_programs": [
      "# Declarations\npremises = EnumSort([censorship_wrong, actor_refusal_wrong, conclusion_absurd])\nconclusion = EnumSort([censorship_not_wrong])\nassumptions = EnumSort([declining_role_censorship, actors_subscribe_liberalism])\n\n# Constraints\nImplies(premises.censorship_wrong, premises.actor_refusal_wrong) ::: If censorship is wrong, then actor's refusal is wrong\nNot(premises.actor_refusal_wrong) ::: The conclusion that actor's refusal is wrong is absurd\nImplies(premises.censorship_wrong, Not(conclusion.censorship_not_wrong)) ::: If censorship is wrong, then it is not the case that censorship is not wrong\n\n# Options\nQuestion ::: The reasoning in the politician's argument is most vulnerable to criticism on the grounds that this argument\nis_vulnerable(assumptions.declining_role_censorship) ::: (presumes, without providing justification, that declining a film role constitutes censorship in the relevant sense)\nis_vulnerable(assumptions.actors_subscribe_liberalism) ::: (presumes, without providing justification, that actors would subscribe to any tenet of modern liberalism)"
    ]
  },
  {
    "id": "test_460",
    "context": "Archaeologist: An ancient stone building at our excavation site was composed of three kinds of stone -- quartz, granite, and limestone. Of these, only limestone occurs naturally in the area. Most of the buildings at the site from the same time period had limestone as their only stone component, and most were human dwellings. Ttherefore, the building we are studying probably was not a dwelling.",
    "question": "Which one of the following, if true, would most strengthen the archaeologist's reasoning?",
    "options": [
      "Most of the buildings that were built from stones not naturally occurring in the area were not built with both quartz and granite.",
      "No quartz has been discovered on the site other than that found in the building being studied.",
      "Most of the buildings that were used as dwellings at the site were made, at least in part, of limestone.",
      "Most of the buildings at the site that were not dwellings were made, at least in part, from types of stone that do not occur naturally in the area."
    ],
    "raw_logic_programs": [
      "# Declarations\nbuildings = EnumSort([building_studied, other_buildings])\nstones = EnumSort([quartz, granite, limestone])\noccurs_naturally = Function([stones] -> [bool])\ncomponent = Function([buildings, stones] -> [bool])\ndwelling = Function([buildings] -> [bool])\n\n# Constraints\noccurs_naturally(limestone) == True ::: Only limestone occurs naturally in the area\nForAll([b:buildings], Implies(b == other_buildings, And(component(b, limestone), Not(component(b, quartz)), Not(component(b, granite))))) ::: Most of the buildings at the site from the same time period had limestone as their only stone component\nForAll([b:buildings], Implies(b == other_buildings, dwelling(b))) ::: Most were human dwellings\n\n# Options\nQuestion ::: Which one of the following, if true, would most strengthen the archaeologist's reasoning?\nis_stronger(ForAll([b:buildings], Implies(And(component(b, quartz), component(b, granite)), Not(occurs_naturally(quartz))))) ::: (A) Most of the buildings that were built from stones not naturally occurring in the area were not built with both quartz and granite.\nis_stronger(Not(Exists([b:buildings], And(b == other_buildings, component(b, quartz))))) ::: (B) No quartz has been discovered on the site other than that found in the building being studied.\nis_stronger(ForAll([b:buildings], Implies(dwelling(b), component(b, limestone)))) ::: (C) Most of the buildings that were used as dwellings at the site were made, at least in part, of limestone.\nis_stronger(ForAll([b:buildings], Implies(Not(dwelling(b)), Exists([s:stones], And(component(b, s), Not(occurs_naturally(s))))))) ::: (D) Most of the buildings at the site that were not dwellings were made, at least in part, from types of stone that do not occur naturally in the area."
    ]
  },
  {
    "id": "test_461",
    "context": "Geologist: The dominant view that petroleum formed from the fossilized remains of plants and animals deep in the earth' s crust has been challenged by scientists who hold that it formed, not from living material, but from deep carbon deposits dating from the formation of the earth. But their theory is refuted by the presence in petroleum of biomarkers, molecules indicating the past or present existence of a living organism.",
    "question": "Which one of the following, if true, most weakens the geologist's argument?",
    "options": [
      "Certain strains of bacteria thrive deep inside the earth's crust.",
      "Some carbon deposits were formed from the fossilized remains of plants.",
      "Fossils have been discovered that are devoid of biomarkers.",
      "Living organisms only emerged long after the earth's formation."
    ],
    "raw_logic_programs": [
      "# Declarations\nbiomarkers = BoolSort()\ncarbon_deposits = BoolSort()\nfossil_remains = BoolSort()\nbacteria = BoolSort()\ngeologist_argument = Function([biomarkers, carbon_deposits, fossil_remains] -> [bool])\n\n# Constraints\ngeologist_argument(biomarkers, carbon_deposits, fossil_remains) == (biomarkers & Not(carbon_deposits)) ::: The geologist argues that the presence of biomarkers refutes the theory that petroleum formed from deep carbon deposits.\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the geologist's argument?\nis_weakening(Exists([bacteria], bacteria)) ::: (A) Certain strains of bacteria thrive deep inside the earth's crust.\nis_weakening(Exists([carbon_deposits, fossil_remains], carbon_deposits & fossil_remains)) ::: (B) Some carbon deposits were formed from the fossilized remains of plants.\nis_weakening(Exists([fossil_remains], fossil_remains & Not(biomarkers))) ::: (C) Fossils have been discovered that are devoid of biomarkers.\nis_weakening(Not(Exists([biomarkers], biomarkers))) ::: (D) Living organisms only emerged long after the earth's formation."
    ]
  },
  {
    "id": "test_462",
    "context": "When officials in Tannersburg released their plan to widen the city' s main roads, environmentalists protested that widened roads would attract more traffic and lead to increased air pollution. In response, city officials pointed out that today' s pollution-control devices are at their most effective in vehicles traveling at higher speeds and that widening roads would increase the average speed of traffic. However, this effect can hardly be expected to offset the effect pointed out by environmentalists, since __",
    "question": "Which of the following most logically completes the argument?",
    "options": [
      "increase. s in traffic volume generally produce decreases in the average speed of traffic unless roads are widened",
      "several of the roads that are slated for widening will have to be closed temporarily while construction is underway",
      "most of the air pollution generated by urban traffic comes from vehicles that do not have functioning pollution-control devices",
      "the newly widened roads will not have increased traffic volume if the roads that must be used to reach them are inadequate"
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([traffic_volume, average_speed, pollution_control_devices, traffic_volume_increase, speed_increase, pollution_increase])\neffects = Function([variables] -> [bool])\n\n# Constraints\neffects(traffic_volume_increase) ::: Widened roads attract more traffic\neffects(pollution_increase) ::: Increased traffic leads to increased air pollution\neffects(speed_increase) ::: Widening roads increases the average speed of traffic\neffects(pollution_control_devices) ::: Pollution-control devices are more effective at higher speeds\n\n# Options\nQuestion ::: Which of the following most logically completes the argument?\nis_logical_completion(Implies(effects(traffic_volume_increase), Not(effects(speed_increase)))) ::: (A) increases in traffic volume generally produce decreases in the average speed of traffic unless roads are widened\nis_logical_completion(effects(traffic_volume_increase)) ::: (B) several of the roads that are slated for widening will have to be closed temporarily while construction is underway\nis_logical_completion(Not(effects(pollution_control_devices))) ::: (C) most of the air pollution generated by urban traffic comes from vehicles that do not have functioning pollution-control devices\nis_logical_completion(Not(effects(traffic_volume_increase))) ::: (D) the newly widened roads will not have increased traffic volume if the roads that must be used to reach them are inadequate"
    ]
  },
  {
    "id": "test_463",
    "context": "The ancient Egyptian pharaoh Akhenaten, who had a profound effect during his lifetime on Egyptian art and religion, was well loved and highly respected by his subjects. We know this from the fierce loyalty shown to him by his palace guards, as documented in reports written during Akhenaten' s reign.",
    "question": "A questionable technique used in the argument is to",
    "options": [
      "depend on the ambiguity of the term \"ancient\"",
      "introduce information that actually contradicts the conclusion",
      "make a generalization based on a sample that is likely to be unrepresentative",
      "apply present-day standards in an inappropriate way to ancient times"
    ],
    "raw_logic_programs": [
      "# Declarations\nterms = EnumSort([ancient, loyalty, respect, love])\ntechniques = EnumSort([ambiguity, contradiction, generalization, anachronism])\nargument = Function([terms] -> [bool])\ntechnique_used = Function([techniques] -> [bool])\n\n# Constraints\nargument(loyalty) == True ::: The argument claims loyalty shown by palace guards\nargument(respect) == True ::: The argument claims Akhenaten was highly respected\nargument(love) == True ::: The argument claims Akhenaten was well loved\n\n# Options\nQuestion ::: A questionable technique used in the argument is to\nis_used(technique_used(ambiguity)) ::: (depend on the ambiguity of the term \"ancient\")\nis_used(technique_used(contradiction)) ::: (introduce information that actually contradicts the conclusion)\nis_used(technique_used(generalization)) ::: (make a generalization based on a sample that is likely to be unrepresentative)\nis_used(technique_used(anachronism)) ::: (apply present-day standards in an inappropriate way to ancient times)"
    ]
  },
  {
    "id": "test_464",
    "context": "The total amount of fat that the average North American consumes each year has held steady since 1950, but nowadays North Americans consume less animal fat than in 1950, and more vegetable fat containing high levels of saturated fat. Both saturated and unsaturated fats are necessary to the human diet, since they are the only source of essential fatty acids (EFAs); however, most vegetable fats now consumed, unlike animal fats, do not contain EFAs. Because of this dietary shift from animal fat to vegetable fat, cardiovascular disease, neurological dysfunctions, and skin disorders are on the rise.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "The vegetable fats consumed today contain higher levels of saturated fat than most animal fats contain.",
      "Today, North Americans consume, on average, more saturated fat and less unsaturated fat than they did in 1950.",
      "Vegetable fats provide more EFAs, on average, than animal fats provide.",
      "North Americans who consume inadequate amounts of EFAs are, on average, more susceptible to skin disorders than other North Americans are."
    ],
    "raw_logic_programs": [
      "# Declarations\nfats = EnumSort([animal_fat, vegetable_fat])\nnutrients = EnumSort([saturated_fat, unsaturated_fat, EFAs])\nconsumption = Function([fats, nutrients] -> [bool])\nhealth_issues = EnumSort([cardiovascular_disease, neurological_dysfunctions, skin_disorders])\ndietary_shift = Function([health_issues] -> [bool])\n\n# Constraints\nForAll([n:nutrients], Or(consumption(animal_fat, n), consumption(vegetable_fat, n))) ::: Both saturated and unsaturated fats are necessary to the human diet\nNot(consumption(vegetable_fat, EFAs)) ::: most vegetable fats now consumed, unlike animal fats, do not contain EFAs\nForAll([h:health_issues], dietary_shift(h)) ::: Because of this dietary shift from animal fat to vegetable fat, cardiovascular disease, neurological dysfunctions, and skin disorders are on the rise\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(consumption(vegetable_fat, saturated_fat) > consumption(animal_fat, saturated_fat)) ::: (A) The vegetable fats consumed today contain higher levels of saturated fat than most animal fats contain.\nis_supported(consumption(vegetable_fat, saturated_fat) > consumption(animal_fat, saturated_fat) and consumption(animal_fat, unsaturated_fat) > consumption(vegetable_fat, unsaturated_fat)) ::: (B) Today, North Americans consume, on average, more saturated fat and less unsaturated fat than they did in 1950.\nis_supported(consumption(vegetable_fat, EFAs) > consumption(animal_fat, EFAs)) ::: (C) Vegetable fats provide more EFAs, on average, than animal fats provide.\nis_supported(dietary_shift(skin_disorders)) ::: (D) North Americans who consume inadequate amounts of EFAs are, on average, more susceptible to skin disorders than other North Americans are."
    ]
  },
  {
    "id": "test_465",
    "context": "Most plaintiffs' attorneys nearly always work on one of two fee plans only. One kind of fee plan specifies that the attorney will receive a percentage of the plaintiff' s final award; the other type of fee plan specifies that an attorney will receive an hourly rate regardless of whether the plaintiff wins any award or not. Under the first plan, the attorney has an incentive to take only cases where there is a great likelihood that the plaintiff will prevail; so this is the type of fee plan one might expect to have been used in most cases where plaintiffs have won. Oddly enough, statistics show that most victorious plaintiffs paid their attorneys an hourly rate only.",
    "question": "Which one of the following, if true, most helps to resolve the apparent paradox in the situation above?",
    "options": [
      "Most plaintiffs prefer to hire attorneys who will accept a percentage of their final award rather than an hourly fee.",
      "The vast majority of defendants' attorneys use the hourly fee plan.",
      "The vast majority of plaintiffs' attorneys choose to work on an hourly basis rather than collect a percentage of the plaintiff's final award.",
      "Plaintiffs' attorneys have admitted that both fee plans often overcompensate attorneys for their time."
    ],
    "raw_logic_programs": [
      "# Declarations\nattorneys = EnumSort([plaintiffs_attorneys, defendants_attorneys])\nfee_plans = EnumSort([percentage, hourly])\ncases = EnumSort([victorious, non_victorious])\nchosen_fee_plan = Function([attorneys, cases] -> [fee_plans])\n\n# Constraints\nForAll([a:attorneys], Or(chosen_fee_plan(a, victorious) == percentage, chosen_fee_plan(a, victorious) == hourly)) ::: Most plaintiffs' attorneys nearly always work on one of two fee plans only\nForAll([a:attorneys], Or(chosen_fee_plan(a, non_victorious) == percentage, chosen_fee_plan(a, non_victorious) == hourly)) ::: Most plaintiffs' attorneys nearly always work on one of two fee plans only\nForAll([c:cases], chosen_fee_plan(plaintiffs_attorneys, c) == percentage) ::: Under the first plan, the attorney has an incentive to take only cases where there is a great likelihood that the plaintiff will prevail\nchosen_fee_plan(plaintiffs_attorneys, victorious) == hourly ::: Statistics show that most victorious plaintiffs paid their attorneys an hourly rate only\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent paradox in the situation above?\nis_resolving(ForAll([c:cases], chosen_fee_plan(plaintiffs_attorneys, c) == percentage)) ::: (A) Most plaintiffs prefer to hire attorneys who will accept a percentage of their final award rather than an hourly fee.\nis_resolving(ForAll([c:cases], chosen_fee_plan(defendants_attorneys, c) == hourly)) ::: (B) The vast majority of defendants' attorneys use the hourly fee plan.\nis_resolving(ForAll([c:cases], chosen_fee_plan(plaintiffs_attorneys, c) == hourly)) ::: (C) The vast majority of plaintiffs' attorneys choose to work on an hourly basis rather than collect a percentage of the plaintiff's final award.\nis_resolving(Exists([a:attorneys], ForAll([c:cases], chosen_fee_plan(a, c) == percentage))) ::: (D) Plaintiffs' attorneys have admitted that both fee plans often overcompensate attorneys for their time."
    ]
  },
  {
    "id": "test_466",
    "context": "Chai: The use of the word \"tree\"to denote both deciduous and coniferous plant forms, while acceptable as a lay term, is scientifically inadequate; it masks the fact that the two plant types have utterly different lineages. Dodd: But the common name highlights the crucial fact that both are composed of the same material and have very similar structures; so it is acceptable as a scientific term.",
    "question": "The conversation provides the strongest grounds for holding that Chai and Dodd disagree over whether",
    "options": [
      "using the same term for two biological forms with different lineages can be scientifically acceptable",
      "it is important that the lay terms for plant forms reflect the current scientific theories about them",
      "it is advisable to use ordinary terms as names for biological forms in scientific discourse",
      "both deciduous and coniferous plant forms evolved from simpler biological forms"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Chai, Dodd])\nstatements = EnumSort([scientific_acceptability, importance_of_lay_terms, advisability_of_ordinary_terms, evolution_from_simpler_forms])\npositions = Function([people, statements] -> [bool])\n\n# Constraints\npositions(Chai, scientific_acceptability) == False ::: Chai believes using the same term for two biological forms with different lineages is not scientifically acceptable\npositions(Dodd, scientific_acceptability) == True ::: Dodd believes using the same term for two biological forms with different lineages can be scientifically acceptable\npositions(Chai, importance_of_lay_terms) == True ::: Chai implies that lay terms should reflect scientific theories\npositions(Dodd, importance_of_lay_terms) == False ::: Dodd does not emphasize the importance of lay terms reflecting scientific theories\npositions(Chai, advisability_of_ordinary_terms) == False ::: Chai does not find it advisable to use ordinary terms in scientific discourse\npositions(Dodd, advisability_of_ordinary_terms) == True ::: Dodd finds it acceptable to use ordinary terms in scientific discourse\n\n# Options\nQuestion ::: The conversation provides the strongest grounds for holding that Chai and Dodd disagree over whether\nis_disagreement(positions(Chai, scientific_acceptability) != positions(Dodd, scientific_acceptability)) ::: (A) using the same term for two biological forms with different lineages can be scientifically acceptable\nis_disagreement(positions(Chai, importance_of_lay_terms) != positions(Dodd, importance_of_lay_terms)) ::: (B) it is important that the lay terms for plant forms reflect the current scientific theories about them\nis_disagreement(positions(Chai, advisability_of_ordinary_terms) != positions(Dodd, advisability_of_ordinary_terms)) ::: (C) it is advisable to use ordinary terms as names for biological forms in scientific discourse\nis_disagreement(False) ::: (D) both deciduous and coniferous plant forms evolved from simpler biological forms"
    ]
  },
  {
    "id": "test_467",
    "context": "Art theft from museums is on the rise. Most stolen art is sold to wealthy private collectors. Consequently, since thieves steal what their customers are most interested in buying, museums ought to focus more of their security on their most valuable pieces.",
    "question": "The argument depends on assuming which one of the following?",
    "options": [
      "Most museums provide the same amount of security for valuable and not-so-valuable art.",
      "Wealthy private collectors sometimes sell their stolen art to other wealthy private collectors.",
      "Art thieves steal primarily from museums that are poorly secured.",
      "Art pieces that are not very valuable are not very much in demand by wealthy private collectors."
    ],
    "raw_logic_programs": [
      "# Declarations\nart_pieces = EnumSort([valuable, not_valuable])\nsecurity = Function([art_pieces] -> [bool])\ndemand = Function([art_pieces] -> [bool])\n\n# Constraints\nForAll([a:art_pieces], Implies(security(a), Not(demand(a)))) ::: Museums ought to focus more of their security on their most valuable pieces\n\n# Options\nQuestion ::: The argument depends on assuming which one of the following?\nis_assumption(ForAll([a:art_pieces], Implies(Not(security(a)), Not(demand(a))))) ::: (Most museums provide the same amount of security for valuable and not-so-valuable art.\nis_assumption(Exists([a:art_pieces], And(demand(a), Not(security(a))))) ::: (Wealthy private collectors sometimes sell their stolen art to other wealthy private collectors.\nis_assumption(ForAll([a:art_pieces], Implies(Not(security(a)), demand(a)))) ::: (Art thieves steal primarily from museums that are poorly secured.\nis_assumption(ForAll([a:art_pieces], Implies(Not(demand(a)), Not(security(a))))) ::: (Art pieces that are not very valuable are not very much in demand by wealthy private collectors."
    ]
  },
  {
    "id": "test_468",
    "context": "West Korea' s economy is experiencing high rates of growth for the sixth consecutive quarter. An autocratic despot dominates all aspects of West Korean society, and as a result, West Koreans enjoy less civil liberties and freedom than neighboring countries. Clearly, civil liberties do not impact economic gains.",
    "question": "The following, if true, strengthens the argument, EXCEPT:",
    "options": [
      "The West Korean autocratic despot devotes all of his time to solving economic problems.",
      "Neighboring countries'democratic processes are often deadlocked and unable to respond to immediate economic problems.",
      "West Korea found a massive oil reserve under the country shortly before the autocratic despot seized power.",
      "Political protests in neighboring countries often shorten workdays and limit productivity."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([West_Korea, Neighboring_Countries])\nfactors = EnumSort([autocratic_despots, democratic_processes, oil_reserves, political_protests])\nimpacts = Function([countries, factors] -> [bool])\n\n# Constraints\nimpacts(West_Korea, autocratic_despots) ::: An autocratic despot dominates all aspects of West Korean society\nNot(impacts(West_Korea, civil_liberties)) ::: West Koreans enjoy less civil liberties and freedom than neighboring countries\nhigh_growth(West_Korea) ::: West Korea's economy is experiencing high rates of growth for the sixth consecutive quarter\n\n# Options\nQuestion ::: The following, if true, strengthens the argument, EXCEPT:\nis_exception(impacts(West_Korea, autocratic_despots)) ::: (The West Korean autocratic despot devotes all of his time to solving economic problems.\nis_exception(Not(impacts(Neighboring_Countries, democratic_processes))) ::: (Neighboring countries' democratic processes are often deadlocked and unable to respond to immediate economic problems.\nis_exception(impacts(West_Korea, oil_reserves)) ::: (West Korea found a massive oil reserve under the country shortly before the autocratic despot seized power.\nis_exception(Not(impacts(Neighboring_Countries, political_protests))) ::: (Political protests in neighboring countries often shorten workdays and limit productivity."
    ]
  },
  {
    "id": "test_469",
    "context": "Failure to rotate crops depletes the soil' s nutrients gradually unless other preventive measures are taken. If the soil' s nutrients are completely depleted, additional crops cannot be grown unless fertilizer is applied to the soil. All other things being equal, if vegetables are grown in soil that has had fertilizer applied rather than being grown in non-fertilized soil, they are more vulnerable to pests and, as a consequence, must be treated with larger amounts of pesticides. The more pesticides used on vegetables, the greater the health risks to humans from eating those vegetables. Suppose there were some vegetables that were grown in soil to which fertilizer had never been applied.",
    "question": "On the basis of the passage, which one of the following would have to be true regarding those vegetables?",
    "options": [
      "The health risks to humans from eating the vegetables were no less than the health risks to humans from eating the same kinds of vegetables treated with pesticides.",
      "It is not possible that the vegetables were grown in soil in which crops had been rotated.",
      "The soil in which the vegetables were grown may have been completely depleted of nutrients because of an earlier failure to rotate crops.",
      "The vegetables were grown in soil that had not been completely depleted of nutrients but not necessarily soil in which crops had been rotated."
    ],
    "raw_logic_programs": [
      "# Declarations\nsoil_nutrients = EnumSort([depleted, not_depleted])\nfertilizer_applied = EnumSort([applied, not_applied])\npesticides_used = EnumSort([used, not_used])\nhealth_risks = EnumSort([high, low])\nvegetables = EnumSort([grown_with_fertilizer, grown_without_fertilizer])\n\n# Constraints\nForAll([v:vegetables], Implies(v == grown_with_fertilizer, fertilizer_applied == applied)) ::: Vegetables grown with fertilizer have fertilizer applied\nForAll([v:vegetables], Implies(v == grown_without_fertilizer, fertilizer_applied == not_applied)) ::: Vegetables grown without fertilizer have no fertilizer applied\nForAll([v:vegetables], Implies(fertilizer_applied == applied, pesticides_used == used)) ::: Vegetables grown in fertilized soil are more vulnerable to pests and require pesticides\nForAll([v:vegetables], Implies(pesticides_used == used, health_risks == high)) ::: More pesticides lead to greater health risks\nForAll([v:vegetables], Implies(fertilizer_applied == not_applied, soil_nutrients == not_depleted)) ::: Vegetables grown without fertilizer are in soil that is not completely depleted\n\n# Options\nQuestion ::: On the basis of the passage, which one of the following would have to be true regarding those vegetables?\nis_true(health_risks == low) ::: (The health risks to humans from eating the vegetables were no less than the health risks to humans from eating the same kinds of vegetables treated with pesticides.\nis_true(soil_nutrients == depleted) ::: (It is not possible that the vegetables were grown in soil in which crops had been rotated.\nis_true(soil_nutrients == depleted) ::: (The soil in which the vegetables were grown may have been completely depleted of nutrients because of an earlier failure to rotate crops.\nis_true(soil_nutrients == not_depleted) ::: (The vegetables were grown in soil that had not been completely depleted of nutrients but not necessarily soil in which crops had been rotated."
    ]
  },
  {
    "id": "test_470",
    "context": "Mimi: The little coffee shop cafe by the library just closed. They said that not enough people were coming and that every one was going to the big chain coffee shops. Small businesses can' t survive in this town because everyone just goes to the big box stores and no one seems to care about shopping local. It' s a waste for entrepreneurs to even try starting their own small businesses here; doing so is just asking to lose money! Nancy: The coffee shop closed because the owner has small children that he took to school every morning so the shop didn' t open until 10: 00AM. Most coffee drinkers have already had a cup or two by then so they had to frequent the big chain cafe. There are plenty of thriving small businesses here. As long as the business model and hours are logical for the business, our town's people definitely prefer to support local shops.",
    "question": "Which of the following best describes Nancy's response?",
    "options": [
      "Nancy defends the small coffee shop owner.",
      "Nancy completely ignores Mimi's thoughts.",
      "Nancy takes a stance opposite of Mimi's and provides some good points to back it up.",
      "Nancy is in complete agreeance with Mimi."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Mimi, Nancy])\npositions = EnumSort([defends, ignores, opposes, agrees])\nresponse = Function([statements] -> [positions])\n\n# Constraints\nresponse(Mimi) == opposes ::: Mimi's position is that small businesses can't survive due to competition from big box stores\nresponse(Nancy) == opposes ::: Nancy's position is that the coffee shop closed due to poor business model and hours, not because of big box stores\n\n# Options\nQuestion ::: Which of the following best describes Nancy's response?\nis_valid(response(Nancy) == defends) ::: (A) Nancy defends the small coffee shop owner.\nis_valid(response(Nancy) == ignores) ::: (B) Nancy completely ignores Mimi's thoughts.\nis_valid(response(Nancy) == opposes) ::: (C) Nancy takes a stance opposite of Mimi's and provides some good points to back it up.\nis_valid(response(Nancy) == agrees) ::: (D) Nancy is in complete agreeance with Mimi."
    ]
  },
  {
    "id": "test_471",
    "context": "Economist: Currently the interest rates that banks pay to borrow are higher than the interest rates that they can receive for loans to large, financially strong companies. Banks will not currently lend to companies that are not financially strong, and total lending by banks to small and medium-sized companies is less than it was five years ago. So total bank lending to companies is less than it was five years ago.",
    "question": "The economist's conclusion follows logically if which one of the following is assumed?",
    "options": [
      "Banks will not lend money at interest rates that are lower than the interest rates they pay to borrow.",
      "Five years ago, some banks would lend to companies that were not financially strong.",
      "Most small and medium-sized companies were financially stronger five years ago than they are now.",
      "The interest rates that banks currently pay to borrow are higher than the rates they paid five years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\nbanks = EnumSort([bank1, bank2, bank3])  # Example banks\ncompanies = EnumSort([large, small_medium])\ntime_periods = EnumSort([current, five_years_ago])\ninterest_rates = Function([banks, time_periods] -> [float])\nlending = Function([banks, companies, time_periods] -> [bool])\n\n# Constraints\nForAll([b:banks], interest_rates(b, current) > interest_rates(b, five_years_ago)) ::: The interest rates that banks currently pay to borrow are higher than the rates they paid five years ago\nForAll([b:banks], Not(lending(b, small_medium, current))) ::: Banks will not currently lend to companies that are not financially strong\nForAll([b:banks], lending(b, small_medium, five_years_ago)) ::: Five years ago, some banks would lend to companies that were not financially strong\nForAll([b:banks], lending(b, large, current)) ::: Banks lend to large, financially strong companies\n\n# Options\nQuestion ::: The economist's conclusion follows logically if which one of the following is assumed?\nis_assumed(ForAll([b:banks], interest_rates(b, current) > interest_rates(b, large, current))) ::: (A) Banks will not lend money at interest rates that are lower than the interest rates they pay to borrow\nis_assumed(Exists([b:banks], lending(b, small_medium, five_years_ago))) ::: (B) Five years ago, some banks would lend to companies that were not financially strong\nis_assumed(ForAll([b:banks], interest_rates(b, current) > interest_rates(b, five_years_ago))) ::: (C) The interest rates that banks currently pay to borrow are higher than the rates they paid five years ago"
    ]
  },
  {
    "id": "test_472",
    "context": "Journalist: To reconcile the need for profits sufficient to support new drug research with the moral imperative to provide medicines to those who most need them but cannot afford them, some pharmaceutical companies feel justified in selling a drug in rich nations at one price and in poor nations at a much lower price. But this practice is unjustified. A nation with a low average income may still have a substantial middle class better able to pay for new drugs than are many of the poorer citizens of an overall wealthier nation.",
    "question": "Which one of the following principles, if valid, most helps to justify the journalist's reasoning?",
    "options": [
      "Whether one deserves special consideration depends on one's needs rather than on characteristics of the society to which one belongs.",
      "People who are ill deserve more consideration than do healthy people, regardless of their relative socioeconomic positions.",
      "The people in wealthy nations should not have better access to health care than do the people in poorer nations.",
      "Unequal access to health care is more unfair than an unequal distribution of wealth."
    ],
    "raw_logic_programs": [
      "# Declarations\nnations = EnumSort([rich, poor])\nclasses = EnumSort([middle_class, poorer_citizens])\naccess = Function([nations, classes] -> [bool])\ndeserves_consideration = Function([classes] -> [bool])\n\n# Constraints\nForAll([n:nations, c:classes], access(n, c) == True) ::: Some pharmaceutical companies sell drugs at different prices in rich and poor nations\nForAll([c:classes], Implies(c == poorer_citizens, deserves_consideration(c) == True)) ::: The journalist argues that poorer citizens deserve consideration\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the journalist's reasoning?\nis_valid(ForAll([c:classes], Implies(deserves_consideration(c), c == poorer_citizens))) ::: (A) Whether one deserves special consideration depends on one's needs rather than on characteristics of the society to which one belongs.\nis_valid(ForAll([c:classes], Implies(c == poorer_citizens, deserves_consideration(c)))) ::: (B) People who are ill deserve more consideration than do healthy people, regardless of their relative socioeconomic positions.\nis_valid(ForAll([n:nations, c:classes], Implies(n == rich, access(n, c) == False))) ::: (C) The people in wealthy nations should not have better access to health care than do the people in poorer nations.\nis_valid(ForAll([n:nations, c:classes], Implies(access(n, c), deserves_consideration(c)))) ::: (D) Unequal access to health care is more unfair than an unequal distribution of wealth."
    ]
  },
  {
    "id": "test_473",
    "context": "A study compared a sample of Swedish people older than 75 who needed in-home assistance with a similar sample of Israel people. The people in the two samples received both informal assistance, provided by family and friends, and formal assistance, professionally provided. Although Sweden and Israel have equally well-funded and comprehensive systems for providing formal assistance, the study found that the people in the Swedish sample received more formal assistance, on average, than those in the Israeli sample.",
    "question": "Which of the following, if true, does most to explain the difference that the study?",
    "options": [
      "In recent decades, the increase in life expectancy of someone who is 75 years old has been greater in Israel than in Sweden.",
      "More Swedish than Israeli people older than 75 live in rural areas where formal assistance services are sparse or nonexistent.",
      "A companion study found that among children needing special in-home care , the amount of formal assistance they received was roughly the same in Sweden as in Israel.",
      "In Israel, people older than 75 tend to live with their children, whereas in Sweden people of that age tend to live alone."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([Sweden, Israel])\nassistance_types = EnumSort([informal, formal])\npeople = EnumSort([older_than_75])\nreceived_assistance = Function([countries, people, assistance_types] -> [int])\n\n# Constraints\nForAll([c:countries], received_assistance(c, older_than_75, informal) + received_assistance(c, older_than_75, formal) > 0) ::: People in both countries receive some form of assistance\nreceived_assistance(Sweden, older_than_75, formal) > received_assistance(Israel, older_than_75, formal) ::: The study found that the people in the Swedish sample received more formal assistance, on average, than those in the Israeli sample\n\n# Options\nQuestion ::: Which of the following, if true, does most to explain the difference that the study?\nis_explanation(received_assistance(Israel, older_than_75, informal) > received_assistance(Sweden, older_than_75, informal)) ::: (In Israel, people older than 75 tend to live with their children, whereas in Sweden people of that age tend to live alone.\nis_explanation(received_assistance(Sweden, older_than_75, formal) < received_assistance(Israel, older_than_75, formal)) ::: (More Swedish than Israeli people older than 75 live in rural areas where formal assistance services are sparse or nonexistent.\nis_explanation(received_assistance(Sweden, older_than_75, formal) == received_assistance(Israel, older_than_75, formal)) ::: (A companion study found that among children needing special in-home care, the amount of formal assistance they received was roughly the same in Sweden as in Israel.\nis_explanation(received_assistance(Sweden, older_than_75, formal) > received_assistance(Israel, older_than_75, formal)) ::: (In recent decades, the increase in life expectancy of someone who is 75 years old has been greater in Israel than in Sweden."
    ]
  },
  {
    "id": "test_474",
    "context": "Literary critic: The meaning of a literary work is not fixed but fluid, and ttherefore a number of equally valid interpretations of it may be offered. Interpretations primarily involve imposing meaning on a literary work rather than discovering meaning in it, so interpretations need not consider the writer' s intentions. Thus, any interpretation of a literary work tells more about the critic than about the writer.",
    "question": "Which one of the following is an assumption required by the literary critic's argument?",
    "options": [
      "A writer's intentions are relevant to a valid interpretation of the writer's work.",
      "The true intentions of the writer of a work of literature can never be known to a critic of that work.",
      "A meaning imposed on a literary work reflects facts about the interpreter.",
      "The deepest understanding of a literary work requires that one know the writer's history."
    ],
    "raw_logic_programs": [
      "# Declarations\ninterpretations = EnumSort([valid, invalid])\nfacts = EnumSort([about_critic, about_writer])\nmeanings = EnumSort([fixed, fluid])\nintentions = EnumSort([considered, not_considered])\ninterpret = Function([interpretations, facts, meanings, intentions] -> [bool])\n\n# Constraints\ninterpret(valid, about_critic, fluid, not_considered) ::: The meaning of a literary work is not fixed but fluid, and therefore a number of equally valid interpretations of it may be offered. Interpretations primarily involve imposing meaning on a literary work rather than discovering meaning in it, so interpretations need not consider the writer's intentions. Thus, any interpretation of a literary work tells more about the critic than about the writer.\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the literary critic's argument?\nis_required(interpret(valid, about_critic, fluid, not_considered)) ::: (A) A writer's intentions are relevant to a valid interpretation of the writer's work.\nis_required(interpret(valid, about_critic, fluid, not_considered)) ::: (B) The true intentions of the writer of a work of literature can never be known to a critic of that work.\nis_required(interpret(valid, about_critic, fluid, not_considered)) ::: (C) A meaning imposed on a literary work reflects facts about the interpreter.\nis_required(interpret(valid, about_critic, fluid, not_considered)) ::: (D) The deepest understanding of a literary work requires that one know the writer's history."
    ]
  },
  {
    "id": "test_475",
    "context": "Writer: In the diplomat' s or lawyer' s world, a misinterpreted statement can result in an international incident or an undeserved prison term. Thus, legal and diplomatic language is stilted and utterly without literary merit, since by design it prevents misinterpretation, which in these areas can have severe consequences.",
    "question": "The writer's argument requires assuming which one of the following?",
    "options": [
      "Literary documents are generally less important than legal or diplomatic documents.",
      "People express themselves more cautiously when something important is at stake.",
      "Lawyers and diplomats are much less likely to be misunderstood than are novelists.",
      "Language that has literary value is more likely to be misunderstood than language without literary value."
    ],
    "raw_logic_programs": [
      "# Declarations\ndocuments = EnumSort([literary, legal, diplomatic])\nimportance = Function([documents] -> [bool])\nmisinterpretation = Function([documents] -> [bool])\nliterary_value = Function([documents] -> [bool])\n\n# Constraints\nForAll([d:documents], Implies(importance(d), Not(misinterpretation(d)))) ::: Legal and diplomatic language is designed to prevent misinterpretation due to their importance\n\n# Options\nQuestion ::: The writer's argument requires assuming which one of the following?\nis_required(ForAll([d:documents], Implies(literary_value(d), misinterpretation(d)))) ::: (Language that has literary value is more likely to be misunderstood than language without literary value.)"
    ]
  },
  {
    "id": "test_476",
    "context": "Every photograph, because it involves the light rays that something emits hitting film, must in some obvious sense be true. But because it could always have been made to show things differently than it does, it cannot express the whole truth and, in that sense, is false. Ttherefore, nothing can ever be definitively proved with a photograph.",
    "question": "Which one of the following is an assumption that would permit the conclusion above to be properly drawn?",
    "options": [
      "Whatever is false in the sense that it cannot express the whole truth cannot furnish definitive proof.",
      "It is possible to use a photograph as corroborative evidence if there is additional evidence establishing the truth about the scene photographed.",
      "The whole truth cannot be known.",
      "If something is being photographed, then it is possible to prove definitively the truth about it."
    ],
    "raw_logic_programs": [
      "# Declarations\ntruth_status = EnumSort([true, false])\nevidence = EnumSort([photograph, additional_evidence])\nproof = Function([evidence] -> [truth_status])\n\n# Constraints\nproof(photograph) == false ::: Every photograph, because it involves the light rays that something emits hitting film, must in some obvious sense be true, but it cannot express the whole truth and, in that sense, is false.\n\n# Options\nQuestion ::: Which one of the following is an assumption that would permit the conclusion above to be properly drawn?\nis_assumption(Implies(proof(photograph) == false, Not(proof(photograph) == true))) ::: (A) Whatever is false in the sense that it cannot express the whole truth cannot furnish definitive proof.\nis_assumption(Implies(And(proof(photograph) == false, proof(additional_evidence) == true), proof(photograph) == true)) ::: (B) It is possible to use a photograph as corroborative evidence if there is additional evidence establishing the truth about the scene photographed.\nis_assumption(Not(Exists([evidence], proof(evidence) == true))) ::: (C) The whole truth cannot be known.\nis_assumption(Implies(Exists([evidence], proof(evidence) == true), proof(photograph) == true)) ::: (D) If something is being photographed, then it is possible to prove definitively the truth about it."
    ]
  },
  {
    "id": "test_477",
    "context": "Judge Brown has shown a marked preference over the past decade for sentencing criminals to make amends for their crimes-for example, by apologizing to the victim-rather than sending them to jail. He argues that the rate of recidivism, or the likelihood that the criminal will commit another offense, is only 15% when he does so, while the average rate of recidivism in the country as a whole is above 35%. Judge Brown thus argues that the criminal justice system is most effective when criminals make amends for their crime, rather than serving time.",
    "question": "Which of the following, if true, most strongly supports Judge Brown's claim?",
    "options": [
      "Many of the sentenced criminals who made amends were those who expressed to Judge Brown a willingness to do so.",
      "The offenders who went on to commit a crime after making amends were less likely to commit a violent crime than were those who were repeat offenders who served time.",
      "The majority of the defendants that the judge sees are already repeat offenders who are statistically more likely to continue their offenses.",
      "A judge in a neighboring district found that, in his jurisdiction, criminals sentenced to make amends committed repeat offenses in 22% of cases."
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([Judge_Brown])\nsentencing_methods = EnumSort([make_amends, serve_time])\nrecidivism_rate = Function([judges, sentencing_methods] -> [float])\n\n# Constraints\nrecidivism_rate(Judge_Brown, make_amends) == 0.15 ::: The rate of recidivism is 15% when Judge Brown sentences criminals to make amends\nrecidivism_rate(Judge_Brown, serve_time) > 0.35 ::: The average rate of recidivism in the country as a whole is above 35%\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports Judge Brown's claim?\nis_strong_support(Exists([c:sentencing_methods], And(c == make_amends, recidivism_rate(Judge_Brown, c) < recidivism_rate(Judge_Brown, serve_time)))) ::: (A) Many of the sentenced criminals who made amends were those who expressed to Judge Brown a willingness to do so.\nis_strong_support(Exists([c:sentencing_methods], And(c == make_amends, recidivism_rate(Judge_Brown, c) < recidivism_rate(Judge_Brown, serve_time)))) ::: (B) The offenders who went on to commit a crime after making amends were less likely to commit a violent crime than were those who were repeat offenders who served time.\nis_strong_support(Exists([c:sentencing_methods], And(c == make_amends, recidivism_rate(Judge_Brown, c) < recidivism_rate(Judge_Brown, serve_time)))) ::: (C) The majority of the defendants that the judge sees are already repeat offenders who are statistically more likely to continue their offenses.\nis_strong_support(Exists([c:sentencing_methods], And(c == make_amends, recidivism_rate(Judge_Brown, c) < recidivism_rate(Judge_Brown, serve_time)))) ::: (D) A judge in a neighboring district found that, in his jurisdiction, criminals sentenced to make amends committed repeat offenses in 22% of cases."
    ]
  },
  {
    "id": "test_478",
    "context": "If it is not raining, then Andy is singing. Andy always dances on Wednesdays, but if it is any other day, then Andy is miming. It is Tuesday, and Andy is singing.",
    "question": "According to the argument above, which of the following must follow?",
    "options": [
      "It is raining.",
      "Andy is miming, and it is raining.",
      "Andy is not miming, and it is raining.",
      "Andy is miming."
    ],
    "raw_logic_programs": [
      "# Declarations\ndays = EnumSort([Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday])\nactivities = EnumSort([singing, dancing, miming])\nweather = EnumSort([raining, not_raining])\nday = Function([] -> days)\nactivity = Function([] -> activities)\nweather_condition = Function([] -> weather)\n\n# Constraints\nImplies(weather_condition() == not_raining, activity() == singing) ::: If it is not raining, then Andy is singing\nImplies(day() == Wednesday, activity() == dancing) ::: Andy always dances on Wednesdays\nImplies(And(day() != Wednesday, day() != Tuesday), activity() == miming) ::: If it is any other day than Wednesday or Tuesday, then Andy is miming\nday() == Tuesday ::: It is Tuesday\nactivity() == singing ::: Andy is singing\n\n# Options\nQuestion ::: According to the argument above, which of the following must follow?\nis_must_follow(weather_condition() == raining) ::: (It is raining.)\nis_must_follow(And(activity() == miming, weather_condition() == raining)) ::: (Andy is miming, and it is raining.)\nis_must_follow(And(activity() != miming, weather_condition() == raining)) ::: (Andy is not miming, and it is raining.)\nis_must_follow(activity() == miming) ::: (Andy is miming.)"
    ]
  },
  {
    "id": "test_479",
    "context": "Peter: Recent evidence suggests that moderate alcohol consumption has certain beneficial effects on health. In particular, alcohol creates an inhospitable environment in the human body for certain bacteria that can cause illness. Thus, alcohol consumption is, on balance, beneficial.",
    "question": "Which one of the following most accurately expresses a flaw in the reasoning in Peter's argument?",
    "options": [
      "It draws a comparison based on popular belief rather than on scientific opinion.",
      "It draws a conclusion about alcohol consumption in general from a premise about moderate alcohol consumption.",
      "It takes for granted that people choose to consume alcohol because they believe it is beneficial to their health.",
      "It fails to consider methods of achieving the same beneficial effects that do not involve alcohol."
    ],
    "raw_logic_programs": [
      "# Declarations\nconsumption_levels = EnumSort([moderate, general])\neffects = EnumSort([beneficial, non_beneficial])\ncauses = EnumSort([alcohol, other_methods])\nreasoning = Function([consumption_levels, causes] -> [effects])\n\n# Constraints\nreasoning(moderate, alcohol) == beneficial ::: Recent evidence suggests that moderate alcohol consumption has certain beneficial effects on health\nreasoning(moderate, alcohol) == beneficial ::: Alcohol creates an inhospitable environment in the human body for certain bacteria that can cause illness\n\n# Options\nQuestion ::: Which one of the following most accurately expresses a flaw in the reasoning in Peter's argument?\nis_flaw(reasoning(general, alcohol) == beneficial) ::: (It draws a conclusion about alcohol consumption in general from a premise about moderate alcohol consumption)\nis_flaw(reasoning(moderate, other_methods) == beneficial) ::: (It fails to consider methods of achieving the same beneficial effects that do not involve alcohol)"
    ]
  },
  {
    "id": "test_480",
    "context": "Unlike many machines that are perfectly useful in isolation from others, fax machines must work with other fax machines. Thus, in the fax industry, the proliferation of incompatible formats, which resulted from the large number of competing manufacturers, severely limited the usefulness -- and hence the commercial viability -- of fax technology until the manufacturers agreed to adopt a common format for their machines.",
    "question": "The information above provides the most support for which one of the following propositions?",
    "options": [
      "In some industries it is in the interest of competitors to cooperate to some extent with one another.",
      "Whenever machines are dependent on other machines of the same type, competition among manufacturers is damaging to the industry.",
      "The more competitors there are in a high-tech industry, the more they will have to cooperate in determining the basic design of their product.",
      "Cooperation is beneficial only in industries whose products depend on other products of the same type."
    ],
    "raw_logic_programs": [
      "# Declarations\nindustries = EnumSort([fax_industry, other_industries])\nmachines = EnumSort([fax_machines, other_machines])\nmanufacturers = EnumSort([competing_manufacturers, cooperating_manufacturers])\nformats = EnumSort([incompatible_formats, common_format])\npropositions = EnumSort([interest_to_cooperate, competition_damaging, more_competitors_more_cooperation, cooperation_beneficial_only_when_dependent])\n\n# Constraints\nForAll([m:machines], Implies(m == fax_machines, Exists([f:formats], f == common_format))) ::: fax machines must work with other fax machines, leading to a common format\nForAll([i:industries], Implies(i == fax_industry, Exists([m:machines], m == fax_machines))) ::: the fax industry involves fax machines\nForAll([m:machines], Implies(m == fax_machines, Exists([f:formats], f == incompatible_formats))) ::: proliferation of incompatible formats in the fax industry\nForAll([m:machines], Implies(m == fax_machines, Exists([f:formats], f == common_format))) ::: manufacturers agreed to adopt a common format\n\n# Options\nQuestion ::: The information above provides the most support for which one of the following propositions?\nis_supported(propositions == interest_to_cooperate) ::: (In some industries it is in the interest of competitors to cooperate to some extent with one another.\nis_supported(propositions == competition_damaging) ::: (Whenever machines are dependent on other machines of the same type, competition among manufacturers is damaging to the industry.\nis_supported(propositions == more_competitors_more_cooperation) ::: (The more competitors there are in a high-tech industry, the more they will have to cooperate in determining the basic design of their product.\nis_supported(propositions == cooperation_beneficial_only_when_dependent) ::: (Cooperation is beneficial only in industries whose products depend on other products of the same type."
    ]
  },
  {
    "id": "test_481",
    "context": "We can now dismiss the widely held suspicion that sugar consumption often exacerbates hyperactivity in children with attention deficit disorder. A scientific study of the effects of three common sugars -- sucrose, fructose, and glucose -- on children who have attention deficit disorder, with experimental groups each receiving a type of sugar in their diets and a control group receiving a sugar substitute instead of sugar, showed no statistically significant difference between the groups in thinking or behavior.",
    "question": "Which one of the following, if true, would most weaken the argument above?",
    "options": [
      "The consumption of sugar actually has a calming effect on some children.",
      "The study included some observations of each group in contexts that generally tend to make children excited and active.",
      "The consumption of some sugar substitutes exacerbates the symptoms of hyperactivity.",
      "Some children believe that they can tell the difference between the taste of sugar and that of sugar substitutes."
    ],
    "raw_logic_programs": [
      "# Declarations\nsugars = EnumSort([sucrose, fructose, glucose, sugar_substitute])\ngroups = EnumSort([experimental, control])\neffects = Function([groups, sugars] -> [bool])\n\n# Constraints\nForAll([g:groups, s:sugars], effects(g, s) == False) ::: no statistically significant difference between the groups in thinking or behavior\n\n# Options\nQuestion ::: Which one of the following, if true, would most weaken the argument above?\nis_weakened(effects(experimental, sucrose) == calming) ::: (The consumption of sugar actually has a calming effect on some children.)\nis_weakened(Exists([g:groups], observed_in_exciting_context(g))) ::: (The study included some observations of each group in contexts that generally tend to make children excited and active.)\nis_weakened(effects(control, sugar_substitute) == exacerbates_hyperactivity) ::: (The consumption of some sugar substitutes exacerbates the symptoms of hyperactivity.)\nis_weakened(Exists([c:children], can_distinguish_taste(c))) ::: (Some children believe that they can tell the difference between the taste of sugar and that of sugar substitutes.)"
    ]
  },
  {
    "id": "test_482",
    "context": "Ethicist: It is widely believed that it is always wrong to tell lies, but this is a rule almost no one fully complies with. In fact, lying is often the morally appropriate thing to do. It is morally correct to lie when telling the truth carries the reasonable expectation of producing considerable physical or psychological harm to others.",
    "question": "Which one of the following most closely conforms to the principle the ethicist endorses?",
    "options": [
      "A friend invited Jamal to a party, but Jamal was afraid that he might see his ex-wife and her new husband there. To spare himself emotional pain, as well as the embarrassment of telling his friend why he did not want to go, Jamal falsely claimed he had to work.",
      "A husband told his wife he felt ready to go on a canoe trip, though he had recently had severe chest pains; his wife had determined a year ago that they would go on this trip, so to ask to cancel now would be inconvenient.",
      "A young boy asked his mother if she loved his older sister more than she loved him. The mother said she loved them both to the same degree, even though it was not true.",
      "When Juan asked Judy if the movie they were going to was North by Northwest, Judy said yes, though she knew that Persona was playing instead. This was the only way Juan would see the film and avoid losing an opportunity for an aesthetically pleasing experience."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([tell_truth, tell_lie])\nsituations = EnumSort([emotional_pain, inconvenience, emotional_reassurance, aesthetic_experience])\nmorally_appropriate = Function([actions, situations] -> [bool])\n\n# Constraints\nmorally_appropriate(tell_lie, emotional_pain) ::: It is morally correct to lie when telling the truth carries the reasonable expectation of producing considerable physical or psychological harm to others.\n\n# Options\nQuestion ::: Which one of the following most closely conforms to the principle the ethicist endorses?\nis_conformant(morally_appropriate(tell_lie, emotional_pain)) ::: (A friend invited Jamal to a party, but Jamal was afraid that he might see his ex-wife and her new husband there. To spare himself emotional pain, as well as the embarrassment of telling his friend why he did not want to go, Jamal falsely claimed he had to work.\nis_conformant(morally_appropriate(tell_lie, inconvenience)) ::: (A husband told his wife he felt ready to go on a canoe trip, though he had recently had severe chest pains; his wife had determined a year ago that they would go on this trip, so to ask to cancel now would be inconvenient.\nis_conformant(morally_appropriate(tell_lie, emotional_reassurance)) ::: (A young boy asked his mother if she loved his older sister more than she loved him. The mother said she loved them both to the same degree, even though it was not true.\nis_conformant(morally_appropriate(tell_lie, aesthetic_experience)) ::: (When Juan asked Judy if the movie they were going to was North by Northwest, Judy said yes, though she knew that Persona was playing instead. This was the only way Juan would see the film and avoid losing an opportunity for an aesthetically pleasing experience."
    ]
  },
  {
    "id": "test_483",
    "context": "Contrary to earlier predictions, demand for sugarcane has not increased in recent years. Yet, even though prices and production amounts have also been stable during the last three years, sugarcane growers last year increased their profits by more than 10 percent over the previous year's level.",
    "question": "Any of the following statements, if true about last year, helps to explain the rise in profits EXCEPT:",
    "options": [
      "Many countries that are large consumers of sugarcane increased their production of sugarcane-based ethanol, yet their overall consumption of sugarcane decreased.",
      "The price of oil, the major energy source used by sugarcane growers in harvesting their crops, dropped by over 20 percent.",
      "Many small sugarcane growers joined together to form an association of sugarcane producers and began to buy supplies at low group rates.",
      "Rainfall in sugarcane-growing regions was higher than it had been during the previous year, allowing the growers to save money on expensive artificial irrigation."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D, E])\nhelps_explain = Function([statements] -> [bool])\n\n# Constraints\nhelps_explain(A) ::: Many countries that are large consumers of sugarcane increased their production of sugarcane-based ethanol, yet their overall consumption of sugarcane decreased.\nhelps_explain(B) ::: The price of oil, the major energy source used by sugarcane growers in harvesting their crops, dropped by over 20 percent.\nhelps_explain(C) ::: Many small sugarcane growers joined together to form an association of sugarcane producers and began to buy supplies at low group rates.\nhelps_explain(D) ::: Rainfall in sugarcane-growing regions was higher than it had been during the previous year, allowing the growers to save money on expensive artificial irrigation.\n\n# Options\nQuestion ::: Any of the following statements, if true about last year, helps to explain the rise in profits EXCEPT:\nis_exception(Not(helps_explain(A))) ::: (A)\nis_exception(Not(helps_explain(B))) ::: (B)\nis_exception(Not(helps_explain(C))) ::: (C)\nis_exception(Not(helps_explain(D))) ::: (D)"
    ]
  },
  {
    "id": "test_484",
    "context": "If ecology and the physical sciences were evaluated by the same criteria, ecology would fail to be a successful science because it cannot be captured by a set of simple laws. But ecology is a successful science, although of a different sort from the physical sciences. Ttherefore, it clearly is not being evaluated by means of the criteria used to evaluate the physical sciences.",
    "question": "Which one of the following arguments is most similar in its reasoning to the argument above?",
    "options": [
      "If any economic theory were an adequate description of the principles according to which economies operate, then it would be possible to make accurate economic forecasts. But accurate economic forecasts cannot be made. Ttherefore, no economic theory is an adequate description of the principles according to which economies operate.",
      "If physicists attempted research in the social sciences, they would probably be as successful in those areas as researchers who restrict their concentration to the social sciences. However, physicists rarely attempt social science research. Ttherefore, physicists are not among the most successful researchers in the social sciences.",
      "If this gallery could borrow some of Matisse's early works, then, together with its own permanent collection of Matisse, the gallery could have the largest exhibition of Matisse ever. But there is no demand for larger exhibitions of Matisse's work. Ttherefore, no gallery will be inclined to lend their early Matisses to this gallery.",
      "If sales taxes are increased, then either the price of woodchips will go up and the consumer will have to pay more for them, or the woodchip industry will disappear. But the market cannot bear an increase in the price of woodchips, so the woodchip industry will disappear."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([ecology, economic_theory, physicists, gallery, woodchips])\ncriteria = EnumSort([successful_science, adequate_description, successful_research, largest_exhibition, industry_disappearance])\nevaluated_by = Function([arguments] -> [criteria])\n\n# Constraints\nevaluated_by(ecology) == successful_science ::: Ecology is a successful science\nevaluated_by(economic_theory) != adequate_description ::: No economic theory is an adequate description\nevaluated_by(physicists) != successful_research ::: Physicists are not among the most successful researchers\nevaluated_by(gallery) != largest_exhibition ::: No gallery will be inclined to lend their early Matisses\nevaluated_by(woodchips) == industry_disappearance ::: The woodchip industry will disappear\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its reasoning to the argument above?\nis_similar(evaluated_by(economic_theory) == adequate_description) ::: (A)\nis_similar(evaluated_by(physicists) == successful_research) ::: (B)\nis_similar(evaluated_by(gallery) == largest_exhibition) ::: (C)\nis_similar(evaluated_by(woodchips) == industry_disappearance) ::: (D)"
    ]
  },
  {
    "id": "test_485",
    "context": "In Gandania, where the government has a monopoly on tobacco sales, the incidence of smoking-related health problems has risen steadily for the last twenty years. The health secretary recently proposed a series of laws aimed at curtailing tobacco use in Gandania. Profits from tobacco sales, however, account for ten percent of Gandania' s annual revenues. Ttherefore, Gandania cannot afford to institute the proposed laws.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "Profits from tobacco sales far surpass any other single source of revenue for the Gandanian government.",
      "The percentage of revenue Gandania receives from tobacco sales has remained steady in recent years.",
      "All health care in Gandania is government-funded.",
      "Implementing the proposed laws is not likely to cause a significant increase in the amount of tobacco Gandania exports."
    ],
    "raw_logic_programs": [
      "# Declarations\nrevenues = EnumSort([tobacco_sales, other_sources])\nhealth_care = EnumSort([government_funded, privately_funded])\nlaws = EnumSort([proposed_laws])\neffects = EnumSort([increase, decrease, no_change])\ngovernment_revenue = Function([revenues] -> [int])\nhealth_care_funding = Function([health_care] -> [bool])\nlaw_impact = Function([laws] -> [effects])\n\n# Constraints\ngovernment_revenue(tobacco_sales) == 10 ::: Profits from tobacco sales account for ten percent of Gandania's annual revenues\nForAll([h:health_care], health_care_funding(h) == True) ::: All health care in Gandania is government-funded\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(government_revenue(tobacco_sales) > government_revenue(other_sources)) ::: (Profits from tobacco sales far surpass any other single source of revenue for the Gandanian government.)\nis_weakening(law_impact(proposed_laws) == no_change) ::: (The percentage of revenue Gandania receives from tobacco sales has remained steady in recent years.)\nis_weakening(health_care_funding(government_funded) == True) ::: (All health care in Gandania is government-funded.)\nis_weakening(law_impact(proposed_laws) == no_change) ::: (Implementing the proposed laws is not likely to cause a significant increase in the amount of tobacco Gandania exports.)"
    ]
  },
  {
    "id": "test_486",
    "context": "The brain area that enables one to distinguish the different sounds made by a piano tends to be larger in a highly skilled musician than in someone who has rarely, if ever, played a musical instrument. This shows that practicing on, and playing, a musical instrument actually alters brain structure.",
    "question": "Which one of the following most accurately describes a flaw in the argument?",
    "options": [
      "The argument fails to address the possibility that people who become highly skilled musicians do so, in part, because of the size of a certain area of their brains.",
      "The argument fails to address the possibility that a certain area of the brain is smaller in people who have listened to a lot of music but who have never learned to play a musical instrument than it is in people who have learned to play a musical instrument.",
      "The argument presumes, without providing justification, that what is true about the brain structures of highly skilled pianists is also true of the brain structures of other highly skilled musicians.",
      "The argument draws a conclusion about a broad range of phenomena from evidence concerning a much narrower range of phenomena."
    ],
    "raw_logic_programs": [
      "# Declarations\nmusicians = EnumSort([highly_skilled, rarely_played])\nbrain_areas = EnumSort([larger, smaller])\nplays_instrument = Function([musicians] -> [bool])\nbrain_structure = Function([musicians] -> [brain_areas])\n\n# Constraints\nForAll([m:musicians], Implies(plays_instrument(m), brain_structure(m) == larger)) ::: The brain area that enables one to distinguish the different sounds made by a piano tends to be larger in a highly skilled musician than in someone who has rarely, if ever, played a musical instrument\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the argument?\nis_flaw(Exists([m:musicians], And(plays_instrument(m), brain_structure(m) == larger, Not(plays_instrument(m))))) ::: (A) The argument fails to address the possibility that people who become highly skilled musicians do so, in part, because of the size of a certain area of their brains.\nis_flaw(Exists([m:musicians], And(Not(plays_instrument(m)), brain_structure(m) == smaller))) ::: (B) The argument fails to address the possibility that a certain area of the brain is smaller in people who have listened to a lot of music but who have never learned to play a musical instrument than it is in people who have learned to play a musical instrument.\nis_flaw(ForAll([m:musicians], Implies(plays_instrument(m), brain_structure(m) == larger))) ::: (C) The argument presumes, without providing justification, that what is true about the brain structures of highly skilled pianists is also true of the brain structures of other highly skilled musicians.\nis_flaw(Exists([m:musicians], And(plays_instrument(m), brain_structure(m) == larger, Not(plays_instrument(m))))) ::: (D) The argument draws a conclusion about a broad range of phenomena from evidence concerning a much narrower range of phenomena."
    ]
  },
  {
    "id": "test_487",
    "context": "Ms. Sandstrom' s newspaper column describing a strange natural phenomenon on the Mendels' farm led many people to trespass on and extensively damage their property. Thus, Ms. Sandstrom should pay for this damage if, as the Mendels claim, she could have reasonably expected that the column would lead people to damage the Mendels' farm.",
    "question": "The argument's conclusion can be properly inferred if which one of the following is assumed?",
    "options": [
      "It is unlikely that the people who trespassed on and caused the damage to the Mendels' property would themselves pay for the damage they caused.",
      "One should pay for any damage that one's action leads other people to cause if one could have reasonably expected that the action would lead other people to cause damage.",
      "The Mendels believe that Ms. Sandstrom is able to form reasonable expectations about the consequences of her actions.",
      "One should pay for damage that one's action leads other people to cause only if, prior to the action, one expected that the action would lead other people to cause that damage."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([write_column])\npeople = EnumSort([Ms_Sandstrom, trespassers])\nevents = EnumSort([trespass, damage])\nproperties = EnumSort([Mendels_farm])\nexpectations = Function([people, actions, events, properties] -> [bool])\nresponsibility = Function([people, events, properties] -> [bool])\n\n# Constraints\nForAll([p:people, a:actions, e:events, pr:properties], Implies(expectations(p, a, e, pr), responsibility(p, e, pr))) ::: If a person could have reasonably expected that their action would lead to an event, they are responsible for the event.\n\n# Options\nQuestion ::: The argument's conclusion can be properly inferred if which one of the following is assumed?\nis_assumed(ForAll([a:actions, e:events, pr:properties], Implies(expectations(Ms_Sandstrom, a, e, pr), responsibility(Ms_Sandstrom, e, pr)))) ::: (One should pay for any damage that one's action leads other people to cause if one could have reasonably expected that the action would lead other people to cause damage.)"
    ]
  },
  {
    "id": "test_488",
    "context": "Escalating worldwide demand for corn has led to a sharp increase in the market price of corn, and corn prices are likely to remain high. Corn is extensive used as feed for livestock, and because profit margins are tight in the livestock business, many farmers are expected to leave the business. With fewer suppliers, meat prices will surely rise. Nonetheless, observers expect an immediate short-term decrease in meat prices.",
    "question": "Which of the following, if true, most helps to justify the observers' expectation?",
    "options": [
      "Livestock producers who stay in the business will start using feed other than corn more extensively than they did in the past.",
      "The increase in corn prices is due more to a decline in the supply of corn than to a growth in demand for it.",
      "As meat prices rise, the number of livestock producers is likely to rise again.",
      "Generally, farmers who are squeezed out of the livestock business send their livestock to market much earlier than they otherwise would."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([corn_price_increase, livestock_exit, meat_price_rise, meat_price_decrease])\ncauses = Function([events] -> [bool])\n\n# Constraints\ncauses(corn_price_increase) ::: Escalating worldwide demand for corn has led to a sharp increase in the market price of corn\ncauses(meat_price_rise) ::: With fewer suppliers, meat prices will surely rise\ncauses(meat_price_decrease) ::: Observers expect an immediate short-term decrease in meat prices\n\n# Options\nQuestion ::: Which of the following, if true, most helps to justify the observers' expectation?\nis_justified(causes(livestock_exit) & causes(meat_price_decrease)) ::: (A) Livestock producers who stay in the business will start using feed other than corn more extensively than they did in the past.\nis_justified(causes(corn_price_increase)) ::: (B) The increase in corn prices is due more to a decline in the supply of corn than to a growth in demand for it.\nis_justified(causes(meat_price_rise)) ::: (C) As meat prices rise, the number of livestock producers is likely to rise again.\nis_justified(causes(livestock_exit) & causes(meat_price_decrease)) ::: (D) Generally, farmers who are squeezed out of the livestock business send their livestock to market much earlier than they otherwise would."
    ]
  },
  {
    "id": "test_489",
    "context": "Haas: Our mission to bring quality foods to areas considered to be food deserts has failed. Our goal was to bring stores to all 415 areas considered to be food deserts. Out of 415 areas, our stores have only managed to be placed in 250 of them. Burgess: But before we started our mission, there were no quality foods in any areas considered to be food deserts. I think that bringing quality foods to at least 250 of these areas is quite a success.",
    "question": "Haas and Burgess disagree over the truth of which one of the following?",
    "options": [
      "Leaving approximately 165 food desert areas without quality foods at the end of the project counts as a failure to the mission.",
      "The mission must be considered a failure if any area considered to be a food desert does not have access to the quality food in their stores.",
      "The stated goal of the mission was to bring stores to 415 areas considered to be food deserts.",
      "Before the project began, there were no quality foods in any areas considered to be food deserts."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([statement1, statement2, statement3, statement4])\nhaas_believes = Function([statements] -> [bool])\nburgess_believes = Function([statements] -> [bool])\n\n# Constraints\nhaas_believes(statement1) ::: Haas believes that leaving approximately 165 food desert areas without quality foods at the end of the project counts as a failure to the mission.\nhaas_believes(statement2) ::: Haas believes that the mission must be considered a failure if any area considered to be a food desert does not have access to the quality food in their stores.\nhaas_believes(statement3) ::: Haas believes that the stated goal of the mission was to bring stores to 415 areas considered to be food deserts.\nburgess_believes(statement1) ::: Burgess does not believe that leaving approximately 165 food desert areas without quality foods at the end of the project counts as a failure to the mission.\nburgess_believes(statement2) ::: Burgess does not believe that the mission must be considered a failure if any area considered to be a food desert does not have access to the quality food in their stores.\nburgess_believes(statement3) ::: Burgess believes that the stated goal of the mission was to bring stores to 415 areas considered to be food deserts.\nburgess_believes(statement4) ::: Burgess believes that before the project began, there were no quality foods in any areas considered to be food deserts.\n\n# Options\nQuestion ::: Haas and Burgess disagree over the truth of which one of the following?\nis_disagreement(haas_believes(statement1) != burgess_believes(statement1)) ::: (Leaving approximately 165 food desert areas without quality foods at the end of the project counts as a failure to the mission.\nis_disagreement(haas_believes(statement2) != burgess_believes(statement2)) ::: (The mission must be considered a failure if any area considered to be a food desert does not have access to the quality food in their stores.\nis_disagreement(haas_believes(statement3) != burgess_believes(statement3)) ::: (The stated goal of the mission was to bring stores to 415 areas considered to be food deserts.\nis_disagreement(haas_believes(statement4) != burgess_believes(statement4)) ::: (Before the project began, there were no quality foods in any areas considered to be food deserts."
    ]
  },
  {
    "id": "test_490",
    "context": "If Agnes' s research proposal is approved, the fourth-floor lab must be cleaned out for her use. Immanuel' s proposal, on the other hand, requires less space. So if his proposal is approved, he will continue to work in the second-floor lab. Only those proposals the director supports will be approved. So since the director will support both proposals, the fourth-floor lab must be cleaned out.",
    "question": "The argument's reasoning is flawed because the argument",
    "options": [
      "fails to consider the possibility that a proposal will be rejected even with the director's support",
      "presumes, without providing justification, that no lab other than the fourth-floor lab would be adequate for Agnes's research",
      "presumes, without providing justification, that the fourth-floor lab is bigger than the second-floor lab",
      "fails to consider the possibility that Immanuel will want to move to a bigger lab once his proposal is approved"
    ],
    "raw_logic_programs": [
      "# Declarations\nproposals = EnumSort([Agnes, Immanuel])\nlabs = EnumSort([second_floor, fourth_floor])\napproved = Function([proposals] -> [bool])\nsupported = Function([proposals] -> [bool])\nlab_assigned = Function([proposals] -> [labs])\n\n# Constraints\nForAll([p:proposals], Implies(approved(p), supported(p))) ::: Only those proposals the director supports will be approved\nImplies(approved(Agnes), lab_assigned(Agnes) == fourth_floor) ::: If Agnes's research proposal is approved, the fourth-floor lab must be cleaned out for her use\nImplies(approved(Immanuel), lab_assigned(Immanuel) == second_floor) ::: If Immanuel's proposal is approved, he will continue to work in the second-floor lab\nAnd(supported(Agnes), supported(Immanuel)) ::: The director will support both proposals\n\n# Options\nQuestion ::: The argument's reasoning is flawed because the argument\nis_flawed(fails_to_consider(Exists([p:proposals], And(supported(p), Not(approved(p)))))) ::: (fails to consider the possibility that a proposal will be rejected even with the director's support)\nis_flawed(presumes_without_justification(Exists([p:proposals], And(approved(p), lab_assigned(p) == fourth_floor)))) ::: (presumes, without providing justification, that no lab other than the fourth-floor lab would be adequate for Agnes's research)\nis_flawed(presumes_without_justification(Exists([p:proposals], And(lab_assigned(Agnes) == fourth_floor, lab_assigned(Immanuel) == second_floor)))) ::: (presumes, without providing justification, that the fourth-floor lab is bigger than the second-floor lab)\nis_flawed(fails_to_consider(Exists([p:proposals], And(approved(p), lab_assigned(p) != second_floor)))) ::: (fails to consider the possibility that Immanuel will want to move to a bigger lab once his proposal is approved)"
    ]
  },
  {
    "id": "test_491",
    "context": "PhishCo runs a number of farms in the arid province of Nufa, depending largely on irrigation. Now, as part of a plan to efficiently increase the farms' total production, it plans to drill down to an aquifer containing warm, slightly salty water that will be used to raise fish in ponds. The water from the ponds will later be used to supplement piped-in irrigation water for PhishCo's vegetable fields, and the ponds and accompanying vegetation should help reduce the heat in the area of the farms.",
    "question": "Which of the following would, if true, most strongly suggest that the plan, if implemented, would increase the overall efficiency of PhishCo's farms?",
    "options": [
      "Organic waste from fish in the pond water will help to fertilize fields where it is used for irrigation.",
      "Fish raised on PhishCo's farms are likely to be saleable in the nearest urban areas.",
      "Ponds will be located on low-lying land now partially occupied by grain crops.",
      "The government of Nufa will help to arrange loan financing to partially cover the costs of drilling."
    ],
    "raw_logic_programs": [
      "# Declarations\nfarms = EnumSort([PhishCo])\nresources = EnumSort([water, fish, vegetation, irrigation])\neffects = EnumSort([increase_efficiency, fertilize_fields, saleable_fish, land_use, financing])\nplan_implemented = Function([farms] -> [bool])\neffect_of_plan = Function([effects] -> [bool])\n\n# Constraints\nplan_implemented(PhishCo) == True ::: PhishCo plans to implement the plan\n\n# Options\nQuestion ::: Which of the following would, if true, most strongly suggest that the plan, if implemented, would increase the overall efficiency of PhishCo's farms?\neffect_of_plan(fertilize_fields) == True ::: (Organic waste from fish in the pond water will help to fertilize fields where it is used for irrigation.\neffect_of_plan(saleable_fish) == True ::: (Fish raised on PhishCo's farms are likely to be saleable in the nearest urban areas.\neffect_of_plan(land_use) == True ::: (Ponds will be located on low-lying land now partially occupied by grain crops.\neffect_of_plan(financing) == True ::: (The government of Nufa will help to arrange loan financing to partially cover the costs of drilling."
    ]
  },
  {
    "id": "test_492",
    "context": "Biologist: The claim that there are a large number of shark attacks along the Gulf coast is false, for this claim is based upon the large number of newspaper articles about shark attacks. But because there are actually very few shark attacks, newspapers are more likely to print stories about them.",
    "question": "The biologist's argument is flawed because it",
    "options": [
      "mistakes a property of each member of a group taken as an individual for a property of the group taken as a whole",
      "assumes without warrant that the newspaper stories in question are not biased",
      "presupposes the truth of the conclusion it is attempting to establish",
      "uncritically draws an inference from what has been true in the past to what will be true in the future"
    ],
    "raw_logic_programs": [
      "# Declarations\nargument = EnumSort([claim, evidence, conclusion])\nflaws = EnumSort([individual_property, unwarranted_assumption, presupposition, inference_from_past])\n\n# Constraints\nclaim = \"There are a large number of shark attacks along the Gulf coast\"\nevidence = \"The large number of newspaper articles about shark attacks\"\nconclusion = \"There are actually very few shark attacks, and newspapers are more likely to print stories about them\"\n\n# Options\nQuestion ::: The biologist's argument is flawed because it\nis_flawed_by(claim, evidence, conclusion, individual_property) ::: (mistakes a property of each member of a group taken as an individual for a property of the group taken as a whole)\nis_flawed_by(claim, evidence, conclusion, unwarranted_assumption) ::: (assumes without warrant that the newspaper stories in question are not biased)\nis_flawed_by(claim, evidence, conclusion, presupposition) ::: (presupposes the truth of the conclusion it is attempting to establish)\nis_flawed_by(claim, evidence, conclusion, inference_from_past) ::: (uncritically draws an inference from what has been true in the past to what will be true in the future)"
    ]
  },
  {
    "id": "test_493",
    "context": "The area of mathematics called \"gauge field theory, \" though investigated in the nineteenth century, has only relatively recently been applied to problems in contemporary quantum mechanics. Differential geometry, another area of mathematics, was investigated by Gauss in the early nineteenth century, long before Einstein determined that one of its offspring, tensor analysis, was the appropriate mathematics for exploring general relativity.",
    "question": "Which one of the following is best illustrated by the examples presented above?",
    "options": [
      "Mathematicians are sometimes able to anticipate which branches of their subject will prove useful to future scientists.",
      "Applications of some new theories or techniques in mathematics are unrecognized until long after the discovery of those theories or techniques.",
      "The discoveries of modern physics would not have been possible without major mathematical advances made in the nineteenth century.",
      "The nineteenth century stands out among other times as a period of great mathematical achievement."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([gauge_field_theory, differential_geometry, tensor_analysis])\nfields = EnumSort([quantum_mechanics, general_relativity])\ninvestigated = Function([concepts] -> [bool])\napplied = Function([concepts, fields] -> [bool])\n\n# Constraints\ninvestigated(gauge_field_theory) == True ::: gauge field theory was investigated in the nineteenth century\ninvestigated(differential_geometry) == True ::: differential geometry was investigated by Gauss in the early nineteenth century\napplied(gauge_field_theory, quantum_mechanics) == True ::: gauge field theory has been applied to problems in contemporary quantum mechanics\napplied(tensor_analysis, general_relativity) == True ::: tensor analysis was used for exploring general relativity\n\n# Options\nQuestion ::: Which one of the following is best illustrated by the examples presented above?\nis_best_illustrated(Exists([c:concepts], And(investigated(c), Exists([f:fields], applied(c, f))))) ::: (A) Mathematicians are sometimes able to anticipate which branches of their subject will prove useful to future scientists.\nis_best_illustrated(Exists([c:concepts], And(investigated(c), Not(Exists([f:fields], applied(c, f)))))) ::: (B) Applications of some new theories or techniques in mathematics are unrecognized until long after the discovery of those theories or techniques.\nis_best_illustrated(Exists([c:concepts], And(investigated(c), Exists([f:fields], applied(c, f))))) ::: (C) The discoveries of modern physics would not have been possible without major mathematical advances made in the nineteenth century.\nis_best_illustrated(Exists([c:concepts], investigated(c))) ::: (D) The nineteenth century stands out among other times as a period of great mathematical achievement."
    ]
  },
  {
    "id": "test_494",
    "context": "Physician: A tax on saturated fat, which was intended to reduce consumption of unhealthy foods, has been repealed after having been in effect for only seven months. The tax was apparently having some undesirable and unintended consequences, encouraging people to travel to neighboring countries to purchase certain foods, for example. Nonetheless, the tax should not have been repealed so soon.",
    "question": "Which one of the following principles, if valid, most helps to justify the physician's conclusion regarding the tax?",
    "options": [
      "A tax on unhealthy foods should be applied only to those foods that are widely believed to be the most unhealthy.",
      "It is not possible to adequately gauge the impact of a tax intended to affect people's health until the tax has been in effect for at least one year.",
      "Before any law intended to improve people's health is implemented, all foreseeable negative consequences should be carefully considered.",
      "A law intended to improve people's health should be repealed if it is clear that most people are evading the law."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([principle_A, principle_B, principle_C, principle_D])\nvalid = Function([principles] -> [bool])\n\n# Constraints\nvalid(principle_A) ::: A tax on unhealthy foods should be applied only to those foods that are widely believed to be the most unhealthy\nvalid(principle_B) ::: It is not possible to adequately gauge the impact of a tax intended to affect people's health until the tax has been in effect for at least one year\nvalid(principle_C) ::: Before any law intended to improve people's health is implemented, all foreseeable negative consequences should be carefully considered\nvalid(principle_D) ::: A law intended to improve people's health should be repealed if it is clear that most people are evading the law\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the physician's conclusion regarding the tax?\nis_justifying(valid(principle_A)) ::: (A)\nis_justifying(valid(principle_B)) ::: (B)\nis_justifying(valid(principle_C)) ::: (C)\nis_justifying(valid(principle_D)) ::: (D)"
    ]
  },
  {
    "id": "test_495",
    "context": "An editor is compiling a textbook containing essays by several different authors. The book will contain essays by Lind, Knight, or Jones, but it will not contain essays by all three. If the textbook contains an essay by Knight, then it will also contain an essay by Jones.",
    "question": "If the statements above are true, which one of the following must be true?",
    "options": [
      "The textbook will not contain an essay by Knight.",
      "If the textbook contains an essay by Lind, then it will not contain an essay by Knight.",
      "The textbook will contain an essay by only one of Lind, Knight, and Jones.",
      "The textbook will contain an essay by Lind."
    ],
    "raw_logic_programs": [
      "# Declarations\nauthors = EnumSort([Lind, Knight, Jones])\ncontains_essay = Function([authors] -> [bool])\n\n# Constraints\nNot(And(contains_essay(Lind), contains_essay(Knight), contains_essay(Jones))) ::: The book will not contain essays by all three authors\nImplies(contains_essay(Knight), contains_essay(Jones)) ::: If the textbook contains an essay by Knight, then it will also contain an essay by Jones\n\n# Options\nQuestion ::: If the statements above are true, which one of the following must be true?\nis_true(Not(contains_essay(Knight))) ::: (The textbook will not contain an essay by Knight.\nis_true(Implies(contains_essay(Lind), Not(contains_essay(Knight)))) ::: (If the textbook contains an essay by Lind, then it will not contain an essay by Knight.\nis_true(Count([a:authors], contains_essay(a)) == 1) ::: (The textbook will contain an essay by only one of Lind, Knight, and Jones.\nis_true(contains_essay(Lind)) ::: (The textbook will contain an essay by Lind."
    ]
  },
  {
    "id": "test_496",
    "context": "Rocket engines are most effective when exhaust gases escape from their nozzles at the same pressure as the surrounding atmosphere. At low altitudes, where atmospheric pressure is high, this effect is best produced by a short nozzle, but when the rocket passes through the thin upper atmosphere, a long nozzle becomes more effective. Thus, to work most effectively throughout their ascents, all rockets must have both short nozzles and long nozzles on their engines.",
    "question": "Which one of the following is an assumption the argument requires?",
    "options": [
      "For a rocket to work most effectively at both low and high atmospheric pressures, it must have at least one engine that has both a short nozzle and a long nozzle.",
      "For a rocket to work effectively, its engines' exhaust gases must leave the nozzles at the same pressure as the surrounding atmosphere throughout the rocket's ascent.",
      "Equipping a rocket's engines with both short and long nozzles is not significantly more difficult than equipping them with nozzles of equal lengths.",
      "At some point during their ascents, all rockets will pass through the thin upper atmosphere."
    ],
    "raw_logic_programs": [
      "# Declarations\nrockets = EnumSort([rocket])\nnozzles = EnumSort([short, long])\nengines = Function([rockets] -> [bool])\neffective = Function([rockets, nozzles] -> [bool])\n\n# Constraints\nForAll([r:rockets], And(effective(r, short), effective(r, long))) ::: All rockets must have both short nozzles and long nozzles on their engines to work most effectively throughout their ascents.\n\n# Options\nQuestion ::: Which one of the following is an assumption the argument requires?\nis_assumption(ForAll([r:rockets], Exists([e:engines], And(effective(r, short), effective(r, long))))) ::: (A) For a rocket to work most effectively at both low and high atmospheric pressures, it must have at least one engine that has both a short nozzle and a long nozzle.\nis_assumption(ForAll([r:rockets], ForAll([n:nozzles], effective(r, n)))) ::: (B) For a rocket to work effectively, its engines' exhaust gases must leave the nozzles at the same pressure as the surrounding atmosphere throughout the rocket's ascent.\nis_assumption(Exists([r:rockets], Not(effective(r, short)) == Not(effective(r, long)))) ::: (C) Equipping a rocket's engines with both short and long nozzles is not significantly more difficult than equipping them with nozzles of equal lengths.\nis_assumption(Exists([r:rockets], effective(r, long))) ::: (D) At some point during their ascents, all rockets will pass through the thin upper atmosphere."
    ]
  },
  {
    "id": "test_497",
    "context": "Critics of a plan to create new building sites from land that currently lies under only 5 meters of water claim that it will reduce the habitat area available to a local subpopulation of dolphins. It is true that the dolphins never enter water more tan 30 meters deep, and the current area of habitation is bounded on one side by land and everywhere else by water that is considerably deeper than that. Nevertheless, the critics are mistaken, because__.",
    "question": "Which one of the following most logically completes the argument?",
    "options": [
      "the dolphins' current habitat area is large enough to support a dolphin population several times the size of the current one",
      "the dolphins do not inhabit water that is less than 10 meters deep",
      "the average depth of water in the dolphins' habitat area is 25 meters",
      "a short distance from the dolphins' habitat area, the ocean floor drops to a depth of l 00 meters"
    ],
    "raw_logic_programs": [
      "# Declarations\nhabitat_depth = Function([int] -> [bool])\ncurrent_habitat_area = Function([int] -> [bool])\nnew_building_sites = Function([int] -> [bool])\ndolphin_population = Function([int] -> [bool])\n\n# Constraints\nForAll([d:int], Implies(habitat_depth(d), And(d > 5, d <= 30))) ::: Dolphins never enter water more than 30 meters deep\nForAll([d:int], Implies(current_habitat_area(d), And(d > 5, d <= 30))) ::: Current habitat area is bounded by land and deeper water\nExists([d:int], new_building_sites(d) == True) ::: New building sites are created from land under 5 meters of water\n\n# Options\nQuestion ::: Which one of the following most logically completes the argument?\nis_logical(ForAll([p:int], dolphin_population(p) == True)) ::: (the dolphins' current habitat area is large enough to support a dolphin population several times the size of the current one)\nis_logical(ForAll([d:int], Not(habitat_depth(d) == True) if d < 10 else True)) ::: (the dolphins do not inhabit water that is less than 10 meters deep)\nis_logical(ForAll([d:int], current_habitat_area(d) == True if d == 25 else True)) ::: (the average depth of water in the dolphins' habitat area is 25 meters)\nis_logical(Exists([d:int], And(d == 100, Not(current_habitat_area(d) == True)))) ::: (a short distance from the dolphins' habitat area, the ocean floor drops to a depth of 100 meters)"
    ]
  },
  {
    "id": "test_498",
    "context": "Legal theorist: Only two types of theories of criminal sentencing can be acceptable -- retributivist theories, which hold that the purpose of sentences is simply to punish, and rehabilitationist theories, which hold that a sentence is a means to reform the offender. A retributivist theory is not acceptable unless it conforms to the principle that the harshness of a punishment should be proportional to the seriousness of the offense. Retributivist theories that hold that criminals should receive longer sentences for repeat offenses than for an initial offense violate this principle, since repeat offenses may be no more serious than the initial offense.",
    "question": "Which one of the following can be properly inferred from the legal theorist's statements?",
    "options": [
      "Any rehabilitationist theory that holds that criminals should receive longer sentences for repeat offenses than for an initial offense is an acceptable theory.",
      "Reforming a repeat offender sometimes requires giving that offender longer sentences for the repeat offenses than for the initial offense.",
      "A theory of criminal sentencing that holds that criminals should receive longer sentences for repeat offenses than for an initial offense is acceptable only if it is a rehabilitationist theory.",
      "All theories of criminal sentencing that conform to the principle that the harshness of a punishment should be proportional to the seriousness of the offense are acceptable."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([retributivist, rehabilitationist])\nprinciples = EnumSort([proportionality])\noffenses = EnumSort([initial, repeat])\nacceptability = Function([theories] -> [bool])\nconforms = Function([theories, principles] -> [bool])\nsentence_length = Function([offenses] -> [int])\n\n# Constraints\nacceptability(retributivist) == Implies(conforms(retributivist, proportionality), sentence_length(repeat) <= sentence_length(initial)) ::: A retributivist theory is not acceptable unless it conforms to the principle that the harshness of a punishment should be proportional to the seriousness of the offense\nNot(conforms(retributivist, proportionality)) == (sentence_length(repeat) > sentence_length(initial)) ::: Retributivist theories that hold that criminals should receive longer sentences for repeat offenses than for an initial offense violate this principle\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the legal theorist's statements?\nis_inferred(Implies(sentence_length(repeat) > sentence_length(initial), acceptability(rehabilitationist))) ::: (A) Any rehabilitationist theory that holds that criminals should receive longer sentences for repeat offenses than for an initial offense is an acceptable theory.\nis_inferred(Exists([o:offenses], sentence_length(repeat) > sentence_length(initial))) ::: (B) Reforming a repeat offender sometimes requires giving that offender longer sentences for the repeat offenses than for the initial offense.\nis_inferred(Implies(sentence_length(repeat) > sentence_length(initial), acceptability(rehabilitationist))) ::: (C) A theory of criminal sentencing that holds that criminals should receive longer sentences for repeat offenses than for an initial offense is acceptable only if it is a rehabilitationist theory.\nis_inferred(ForAll([t:theories], Implies(conforms(t, proportionality), acceptability(t)))) ::: (D) All theories of criminal sentencing that conform to the principle that the harshness of a punishment should be proportional to the seriousness of the offense are acceptable."
    ]
  },
  {
    "id": "test_499",
    "context": "More than 80% of the executives in the county attended high school in the county, and clearly they represent some of the brightest in the county. Among the seventeen high schools in the county, the three in the coastal towns have had the highest test scores in the county for several decades. A recent study shows that almost all of the county executives who attended high school in the county attended one of those three high schools in the coastal towns.",
    "question": "The argument above is most vulnerable to criticism on which grounds?",
    "options": [
      "The argument does not consider that all county executive now work in the county seat, which has the lowest scoring high schools in the county.",
      "The argument assumes without basis that these county executives were above-average students at their respective high schools.",
      "The argument inappropriately posits a causal relationship between academic intelligence and the ability to govern effectively.",
      "The argument does not take into account the significant salary difference between jobs in government and careers in the private sector."
    ],
    "raw_logic_programs": [
      "# Declarations\nexecutives = EnumSort([executives_in_county])\nhigh_schools = EnumSort([coastal_town_high_schools, other_high_schools])\nattended = Function([executives] -> [high_schools])\ntest_scores = Function([high_schools] -> [int])\n\n# Constraints\nCount([e:executives], attended(e) == coastal_town_high_schools) > 0.8 * Count([e:executives], attended(e) == high_schools) ::: More than 80% of the executives in the county attended high school in the county\nForAll([h:high_schools], test_scores(coastal_town_high_schools) > test_scores(other_high_schools)) ::: The three high schools in the coastal towns have had the highest test scores in the county for several decades\nCount([e:executives], attended(e) == coastal_town_high_schools) == Count([e:executives], attended(e) == high_schools) - 1 ::: Almost all of the county executives who attended high school in the county attended one of those three high schools in the coastal towns\n\n# Options\nQuestion ::: The argument above is most vulnerable to criticism on which grounds?\nis_vulnerable(The argument does not consider that all county executives now work in the county seat, which has the lowest scoring high schools in the county) ::: (A)\nis_vulnerable(The argument assumes without basis that these county executives were above-average students at their respective high schools) ::: (B)\nis_vulnerable(The argument inappropriately posits a causal relationship between academic intelligence and the ability to govern effectively) ::: (C)\nis_vulnerable(The argument does not take into account the significant salary difference between jobs in government and careers in the private sector) ::: (D)"
    ]
  },
  {
    "id": "test_500",
    "context": "Each year every employee of SAI Corporation must enroll in one of the two health insurance plans offered by SAI. One plan requires a sizable monetary contribution from employees; the other plan is paid for entirely by SAI. Many SAI employees enroll in the plan requiring employee contributions. This fact does not show that they feel that this plan' s benefits are superior to those provided by the plan requiring no employee contribution since .",
    "question": "Which of the following most logically completes the argument below?",
    "options": [
      "the plan that requires an employee contribution costs and enrolled employee significantly less per year than do typical health insurance plans offered by corporations other than SAI",
      "most of the SAI employees enrolled in the plan paid for entirely by SAI are under 50 years old",
      "both plans offered by SAI provide benefits not only for employees of SAI but also for children and spouses of enrolled employees",
      "only SAI employees who have worked for SAI for at least fifteen years are eligible to enroll in the plan paid for entirely by SAI"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([employee1, employee2, ..., employeeN])  # Assuming a finite set of employees\nplans = EnumSort([contribution_plan, no_contribution_plan])\nenrolls = Function([employees] -> [plans])\nage = Function([employees] -> [int])\nyears_worked = Function([employees] -> [int])\n\n# Constraints\nForAll([e:employees], Or(enrolls(e) == contribution_plan, enrolls(e) == no_contribution_plan)) ::: Each employee must enroll in one of the two health insurance plans\nExists([e:employees], enrolls(e) == contribution_plan) ::: Many employees enroll in the plan requiring employee contributions\n\n# Options\nQuestion ::: Which of the following most logically completes the argument below?\nis_logical_completion(ForAll([e:employees], Implies(enrolls(e) == contribution_plan, cost(contribution_plan) < typical_cost))) ::: (A) the plan that requires an employee contribution costs and enrolled employee significantly less per year than do typical health insurance plans offered by corporations other than SAI\nis_logical_completion(ForAll([e:employees], Implies(enrolls(e) == no_contribution_plan, age(e) < 50))) ::: (B) most of the SAI employees enrolled in the plan paid for entirely by SAI are under 50 years old\nis_logical_completion(ForAll([e:employees], Or(enrolls(e) == contribution_plan, enrolls(e) == no_contribution_plan))) ::: (C) both plans offered by SAI provide benefits not only for employees of SAI but also for children and spouses of enrolled employees\nis_logical_completion(ForAll([e:employees], Implies(enrolls(e) == no_contribution_plan, years_worked(e) >= 15))) ::: (D) only SAI employees who have worked for SAI for at least fifteen years are eligible to enroll in the plan paid for entirely by SAI"
    ]
  },
  {
    "id": "test_501",
    "context": "Tall children can generally reach high shelves easily. Short children can generally reach high shelves only with difficulty. It is known that short children are more likely than are tall children to become short adults. Ttherefore, if short children are taught to reach high shelves easily, the proportion of them who become short adults will decrease.",
    "question": "A reasoning error in the argument is that the argument",
    "options": [
      "takes lack of evidence for the existence of a state of affairs as evidence that there can be no such state of affairs",
      "attributes a characteristic of an individual member of a group to the group as a whole",
      "refutes a generalization by means of an exceptional case",
      "assumes a causal relationship where only a correlation has been indicated"
    ],
    "raw_logic_programs": [
      "# Declarations\nchildren = EnumSort([tall, short])\nadults = EnumSort([tall_adult, short_adult])\nreach_shelves = Function([children] -> [bool])\nbecome_adult = Function([children] -> [adults])\n\n# Constraints\nForAll([c:children], Implies(c == tall, reach_shelves(c) == True)) ::: Tall children can generally reach high shelves easily\nForAll([c:children], Implies(c == short, reach_shelves(c) == False)) ::: Short children can generally reach high shelves only with difficulty\nForAll([c:children], Implies(c == short, become_adult(c) == short_adult)) ::: Short children are more likely than are tall children to become short adults\n\n# Options\nQuestion ::: A reasoning error in the argument is that the argument\nis_error(takes_lack_of_evidence_for_state_of_affairs_as_evidence_for_no_such_state) ::: (A)\nis_error(attributes_characteristic_of_individual_to_group) ::: (B)\nis_error(refutes_generalization_by_exceptional_case) ::: (C)\nis_error(assumes_causal_relationship_where_only_correlation) ::: (D)"
    ]
  },
  {
    "id": "test_502",
    "context": "The trustees of the Avonbridge summer drama workshop have decided to offer scholarships to the top 10 percent of local applicants and the top 10 percent of nonlocal applicants as judged on the basis of a qualifying audition. They are doing this to ensure that only the applicants with the most highly evaluated auditions are offered scholarships to the program.",
    "question": "Which one of the following points out why the trustees' plan might not be effective in achieving its goal?",
    "options": [
      "The best actors can also apply for admission to another program and then not enroll in the Avonbridge program.",
      "Some of the applicants who are offered scholarships could have less highly evaluated auditions than some of the applicants who are not offered scholarships.",
      "Audition materials that produce good results for one actor may disadvantage another, resulting in inaccurate assessment.",
      "Dividing applicants into local and nonlocal groups is unfair because it favors nonlocal applicants."
    ],
    "raw_logic_programs": [
      "# Declarations\napplicants = EnumSort([local, nonlocal])\nauditions = Function([applicants] -> [int])\nscholarships = Function([applicants] -> [bool])\n\n# Constraints\nForAll([a:applicants], scholarships(a) == (auditions(a) >= 90)) ::: The trustees offer scholarships to the top 10 percent of local and nonlocal applicants based on audition scores\n\n# Options\nQuestion ::: Which one of the following points out why the trustees' plan might not be effective in achieving its goal?\nis_reason(Exists([a1:applicants, a2:applicants], And(a1 != a2, auditions(a1) < auditions(a2), scholarships(a1), Not(scholarships(a2))))) ::: (Some of the applicants who are offered scholarships could have less highly evaluated auditions than some of the applicants who are not offered scholarships.\nis_reason(Exists([a:applicants], And(scholarships(a), auditions(a) < 90))) ::: (The best actors can also apply for admission to another program and then not enroll in the Avonbridge program.\nis_reason(Exists([a:applicants], And(scholarships(a), auditions(a) < 90))) ::: (Audition materials that produce good results for one actor may disadvantage another, resulting in inaccurate assessment.\nis_reason(Exists([a:applicants], And(scholarships(a), auditions(a) < 90))) ::: (Dividing applicants into local and nonlocal groups is unfair because it favors nonlocal applicants."
    ]
  },
  {
    "id": "test_503",
    "context": "The number of deer living in North America has increased dramatically since the 1960s even though hunters kill no fewer deer today. Moreover, the number of natural predators of deer, such as wolves, is on the rise, and suburbs increasingly encroach on deer habitats.",
    "question": "Which one of the following, if true, would most help to explain the apparent discrepancy described above?",
    "options": [
      "Recently, attempts have been made in various parts of North America to protect deer habitats from suburban development.",
      "Much of the increase in the population of wolves is due to wolves born in captivity and released into the wild.",
      "Pesticides that adversely affected most wildlife living in North America have been banned since the 1970s.",
      "The greater the number of deer, the more likely they are to be afflicted with problems such as famine and disease."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([hunting, predators, habitat_encroachment, pesticides, deer_population])\neffects = EnumSort([increase, decrease, no_change])\nexplanation = Function([factors] -> [effects])\n\n# Constraints\nexplanation(hunting) == no_change ::: Hunters kill no fewer deer today\nexplanation(predators) == increase ::: The number of natural predators of deer, such as wolves, is on the rise\nexplanation(habitat_encroachment) == increase ::: Suburbs increasingly encroach on deer habitats\nexplanation(deer_population) == increase ::: The number of deer living in North America has increased dramatically since the 1960s\n\n# Options\nQuestion ::: Which one of the following, if true, would most help to explain the apparent discrepancy described above?\nis_explanatory(explanation(pesticides) == decrease) ::: (A) Pesticides that adversely affected most wildlife living in North America have been banned since the 1970s\nis_explanatory(explanation(habitat_encroachment) == decrease) ::: (B) Recently, attempts have been made in various parts of North America to protect deer habitats from suburban development\nis_explanatory(explanation(predators) == no_change) ::: (C) Much of the increase in the population of wolves is due to wolves born in captivity and released into the wild\nis_explanatory(explanation(deer_population) == decrease) ::: (D) The greater the number of deer, the more likely they are to be afflicted with problems such as famine and disease"
    ]
  },
  {
    "id": "test_504",
    "context": "During a single hour, an automatic camera photographed 100 vehicles that were speeding on a one-way road, and police a mile farther down the road photographed 49 vehicles that were speeding. Since every vehicle that passed the automatic camera also passed the police during the hour, the police photographed fewer than half of the vehicles that were speeding when passing them.",
    "question": "Which of the following is an assumption on which the reasoning in the argument above depends?",
    "options": [
      "Drivers who are not exceeding the speed limit are less likely than drivers who are speeding to reduce their driving speed when they see a marked police car.",
      "Most of the vehicles that were speeding when they passed the automatic camera were still speeding when they passed the police.",
      "No more than 100 vehicles drove past the police during the hour in which the police photographed 49 speeding vehicles.",
      "Fewer than half of the vehicles that were speeding when they passed the police were already speeding when they passed the automatic camera."
    ],
    "raw_logic_programs": [
      "# Declarations\nvehicles = EnumSort([vehicle1, vehicle2, ..., vehicle100])\ncamera_photographed = Function([vehicles] -> [bool])\npolice_photographed = Function([vehicles] -> [bool])\nspeeding_at_camera = Function([vehicles] -> [bool])\nspeeding_at_police = Function([vehicles] -> [bool])\n\n# Constraints\nForAll([v:vehicles], camera_photographed(v) == speeding_at_camera(v)) ::: Every vehicle that passed the automatic camera was speeding\nCount([v:vehicles], police_photographed(v)) == 49 ::: Police photographed 49 vehicles\nForAll([v:vehicles], Implies(police_photographed(v), speeding_at_police(v))) ::: Police photographed vehicles that were speeding\nCount([v:vehicles], speeding_at_police(v)) < Count([v:vehicles], speeding_at_camera(v)) / 2 ::: Police photographed fewer than half of the vehicles that were speeding when passing them\n\n# Options\nQuestion ::: Which of the following is an assumption on which the reasoning in the argument above depends?\nis_assumption(ForAll([v:vehicles], Implies(Not(speeding_at_camera(v)), Not(speeding_at_police(v))))) ::: (A) Drivers who are not exceeding the speed limit are less likely than drivers who are speeding to reduce their driving speed when they see a marked police car.\nis_assumption(Count([v:vehicles], speeding_at_police(v)) >= Count([v:vehicles], speeding_at_camera(v)) / 2) ::: (B) Most of the vehicles that were speeding when they passed the automatic camera were still speeding when they passed the police.\nis_assumption(Count([v:vehicles], police_photographed(v)) <= 100) ::: (C) No more than 100 vehicles drove past the police during the hour in which the police photographed 49 speeding vehicles.\nis_assumption(Count([v:vehicles], speeding_at_police(v)) < Count([v:vehicles], speeding_at_camera(v)) / 2) ::: (D) Fewer than half of the vehicles that were speeding when they passed the police were already speeding when they passed the automatic camera."
    ]
  },
  {
    "id": "test_505",
    "context": "Although Ackerburg's subway system is currently operating at a deficit, the transit authority will lower subway fares next year. The authority projects that the lower fares will result in a ten percent increase in the number of subway riders. Since the additional income from the larger ridership will more than offset the decrease due to lower fares, the transit authority actually expects the fare reduction to reduce or eliminate the subway system's operating deficit for next year.",
    "question": "Which of the following, if true, provides the most support for the transit authority's expectation of reducing the subway system's operating deficit?",
    "options": [
      "The subway system can accommodate a ten percent increase in ridership without increasing the number of trains it runs each day.",
      "Throughout the years that the subway system has operated, fares have never before been reduced.",
      "The current subway fares in Ackerburg are higher than subway fares in other cities in the region.",
      "The planned fare reduction will not apply to students, who can already ride the subway for a reduced fare."
    ],
    "raw_logic_programs": [
      "# Declarations\nsubway_system = EnumSort([Ackerburg])\nfares = Function([subway_system] -> [float])\nridership = Function([subway_system] -> [int])\ndeficit = Function([subway_system] -> [bool])\n\n# Constraints\ndeficit(Ackerburg) == True ::: Ackerburg's subway system is currently operating at a deficit\nfares(Ackerburg) > 0 ::: The transit authority will lower subway fares next year\nridership(Ackerburg) * 1.1 ::: The authority projects a ten percent increase in the number of subway riders\nadditional_income = (ridership(Ackerburg) * 1.1) * (fares(Ackerburg) * 0.9) ::: Additional income from larger ridership\nreduced_income = ridership(Ackerburg) * (fares(Ackerburg) * 0.9) ::: Reduced income due to lower fares\nadditional_income > reduced_income ::: Additional income will more than offset the decrease due to lower fares\n\n# Options\nQuestion ::: Which of the following, if true, provides the most support for the transit authority's expectation of reducing the subway system's operating deficit?\nis_supportive(Exists([t:trains], t == 0)) ::: (The subway system can accommodate a ten percent increase in ridership without increasing the number of trains it runs each day.\nis_supportive(Not(Exists([y:years], y < current_year))) ::: (Throughout the years that the subway system has operated, fares have never before been reduced.\nis_supportive(fares(Ackerburg) > fares(other_cities))) ::: (The current subway fares in Ackerburg are higher than subway fares in other cities in the region.\nis_supportive(Not(Exists([s:students], fares(s) == fares(Ackerburg)))) ::: (The planned fare reduction will not apply to students, who can already ride the subway for a reduced fare."
    ]
  },
  {
    "id": "test_506",
    "context": "Physician: To the extent that AIDS deaths occur from a lack of experimental medications, it should not be inferred that such deaths are the result of ignorance. Governments will normally provide medications if they believe such medications are helpful; it is impractical to suppose that governments will be willing to potentially waste their limited funds on medication unless they know the medication will lead to cures.",
    "question": "Which one of the following most accurately describes the role played in the physician's argument by the phrase \"to the extent that the rate of AIDS deaths occurs from lack of experimental medication\"?",
    "options": [
      "It proposes a potential answer for the problem of AIDS deaths.",
      "It restricts the application of the argument to a part of the situation.",
      "It is presented as evidence necessary to sustain the argument's conclusion.",
      "It suggests that the primary cause of AIDS death is ignorance."
    ],
    "raw_logic_programs": [
      "# Declarations\nphrase_role = EnumSort([proposes_answer, restricts_application, evidence_for_conclusion, suggests_ignorance])\n\n# Constraints\n# No specific constraints are needed for this problem as it is an interpretation of the argument.\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the physician's argument by the phrase \"to the extent that the rate of AIDS deaths occurs from lack of experimental medication\"?\nis_correct(phrase_role == proposes_answer) ::: (A)\nis_correct(phrase_role == restricts_application) ::: (B)\nis_correct(phrase_role == evidence_for_conclusion) ::: (C)\nis_correct(phrase_role == suggests_ignorance) ::: (D)"
    ]
  },
  {
    "id": "test_507",
    "context": "Sometimes one reads a poem and believes that the poem expresses contradictory ideas, even if it is a great poem. So it is wrong to think that the meaning of a poem is whatever the author intends to communicate to the reader by means of the poem. No one who is writing a great poem intends it to communicate contradictory ideas.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "If someone writes a great poem, he or she intends the poem to express one primary idea.",
      "Anyone reading a great poem can discern every idea that the author intended to express in the poem.",
      "Readers will not agree about the meaning of a poem if they do not agree about what the author of the poem intended the poem to mean.",
      "If a reader believes that a poem expresses a particular idea, then that idea is part of the meaning of the poem."
    ],
    "raw_logic_programs": [
      "# Declarations\npoems = EnumSort([great_poem])\nideas = EnumSort([contradictory_idea, primary_idea])\nauthors = EnumSort([author])\nreaders = EnumSort([reader])\nintends = Function([authors, poems, ideas] -> [bool])\nbelieves = Function([readers, poems, ideas] -> [bool])\nmeaning = Function([poems, ideas] -> [bool])\n\n# Constraints\nForAll([p:poems, a:authors], Not(intends(a, p, contradictory_idea))) ::: No one who is writing a great poem intends it to communicate contradictory ideas\nExists([r:readers], believes(r, great_poem, contradictory_idea)) ::: Sometimes one reads a poem and believes that the poem expresses contradictory ideas\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([p:poems, a:authors], Implies(intends(a, p, primary_idea), Not(intends(a, p, contradictory_idea))))) ::: (A) If someone writes a great poem, he or she intends the poem to express one primary idea.\nis_assumption(ForAll([p:poems, r:readers], Implies(believes(r, p, primary_idea), meaning(p, primary_idea)))) ::: (B) Anyone reading a great poem can discern every idea that the author intended to express in the poem.\nis_assumption(ForAll([p:poems, r1:readers, r2:readers], Implies(And(believes(r1, p, primary_idea), Not(believes(r2, p, primary_idea))), Not(meaning(p, primary_idea))))) ::: (C) Readers will not agree about the meaning of a poem if they do not agree about what the author of the poem intended the poem to mean.\nis_assumption(ForAll([p:poems, r:readers], Implies(believes(r, p, primary_idea), meaning(p, primary_idea)))) ::: (D) If a reader believes that a poem expresses a particular idea, then that idea is part of the meaning of the poem."
    ]
  },
  {
    "id": "test_508",
    "context": "A large apartment building in a city was assessed by a city environmental bureau for the comparatively high consumption of electricity in the building, and the landlord was threatened with a possible fine if the consumption did not drop significantly in a specified period. While all built-in appliances and lighting in common areas are energy efficient, the landlord found, upon doing an inspection, many residents were using older portable heaters that are not very energy efficient. The landlord decided to send each resident a detailed letter about the electric energy consumption of these older portable heaters, recommending newer more energy efficient models that could be purchased at local stores. He hopes the letter will motivate enough residents to buy more energy efficient heaters.",
    "question": "Which of the following, if true, would provide most support for the prediction that the landlord's letter will have its intended effect?",
    "options": [
      "Throughout the city, this same environmental agency threatened other landlords and business owners with fines for various reasons, and in almost every case, the concerned parties were able to make sufficient changes to avoid the fines.",
      "Some cooking appliances, like a toaster or a waffle iron, consume considerably more electricity than a portable heater during the time they are operating.",
      "Those apartments in the building with southern exposure get abundant sunlight, which has a substantial warming effect, and many of those residents do not use portable heaters.",
      "Residents pay for their own monthly electrical use, and the rates in this city are high, so consuming less electricity would result in a sizable monthly savings."
    ],
    "raw_logic_programs": [
      "# Declarations\nresidents = EnumSort([resident1, resident2, ..., residentN])  # Assuming N residents\nappliances = EnumSort([older_heater, newer_heater, other_appliances])\nconsumption = Function([residents, appliances] -> [int])\nsavings = Function([residents] -> [int])\nletter_sent = Function([residents] -> [bool])\n\n# Constraints\nForAll([r:residents], consumption(r, older_heater) > consumption(r, newer_heater)) ::: Older heaters consume more electricity than newer heaters\nForAll([r:residents], letter_sent(r) == True) ::: Each resident receives a letter about energy consumption\n\n# Options\nQuestion ::: Which of the following, if true, would provide most support for the prediction that the landlord's letter will have its intended effect?\nis_supportive(ForAll([r:residents], Implies(letter_sent(r), savings(r) > 0))) ::: (Throughout the city, this same environmental agency threatened other landlords and business owners with fines for various reasons, and in almost every case, the concerned parties were able to make sufficient changes to avoid the fines.\nis_supportive(False) ::: (Some cooking appliances, like a toaster or a waffle iron, consume considerably more electricity than a portable heater during the time they are operating.\nis_supportive(False) ::: (Those apartments in the building with southern exposure get abundant sunlight, which has a substantial warming effect, and many of those residents do not use portable heaters.\nis_supportive(ForAll([r:residents], Implies(letter_sent(r), savings(r) > 0))) ::: (Residents pay for their own monthly electrical use, and the rates in this city are high, so consuming less electricity would result in a sizable monthly savings."
    ]
  },
  {
    "id": "test_509",
    "context": "One of the most useful social conventions is money, whose universality across societies is matched only by language. Unlike language, which is rooted in an innate ability, money is an artificial, human invention. Hence, it seems probable that the invention of money occurred independently in more than one society.",
    "question": "The argument's conclusion is properly drawn if which one of the following is assumed?",
    "options": [
      "Language emerged independently in different societies at different times in human history.",
      "Some societies have been geographically isolated enough not to have been influenced by any other society.",
      "If money were not useful, it would not be so widespread.",
      "No human society that adopted the convention of money has since abandoned it."
    ],
    "raw_logic_programs": [
      "# Declarations\nsocieties = EnumSort([Society1, Society2, Society3, ...])\ninventions = EnumSort([money, language])\nindependent_invention = Function([societies, inventions] -> [bool])\n\n# Constraints\nForAll([s:societies], Exists([i:inventions], independent_invention(s, i))) ::: Each society independently invents at least one invention\n\n# Options\nQuestion ::: The argument's conclusion is properly drawn if which one of the following is assumed?\nis_assumed(Exists([s1:societies, s2:societies], And(s1 != s2, independent_invention(s1, money), independent_invention(s2, money)))) ::: (Language emerged independently in different societies at different times in human history.\nis_assumed(Exists([s:societies], Not(Exists([s2:societies], And(s != s2, influenced_by(s, s2)))))) ::: (Some societies have been geographically isolated enough not to have been influenced by any other society.\nis_assumed(ForAll([s:societies], Exists([i:inventions], And(i == money, widespread(i))))) ::: (If money were not useful, it would not be so widespread.\nis_assumed(ForAll([s:societies], Not(Exists([s2:societies], And(s != s2, abandoned_convention(s, money)))))) ::: (No human society that adopted the convention of money has since abandoned it."
    ]
  },
  {
    "id": "test_510",
    "context": "If a child is to develop healthy bones, the child' s diet must include sufficient calcium. It ttherefore follows that the diets of children who do not develop healthy bones do not include sufficient calcium.",
    "question": "Flawed reasoning in which one of the following most closely parallels the flawed reasoning in the argument above?",
    "options": [
      "A cake must contain the right amount of flour in order to taste good. It ttherefore follows that cakes that do not taste good do not contain the right amount of flour.",
      "In recipe contests, there are always more contestants in the pie category than there are in the cake category. It ttherefore follows that contestants generally have a better chance of winning in the cake category than in the pie category.",
      "The Bake-a-Thon, which is open to contestants of all ages, has never been won by a person under the age of 30. It ttherefore follows that the winner of this year's Bake-a-Thon will not be under the age of 30.",
      "Both yeast and baking powder can cause sweet rolls to rise. It ttherefore follows that yeast can always be substituted for baking powder in a recipe for sweet rolls."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([healthy_bones, sufficient_calcium, taste_good, right_amount_flour, more_pie_contestants, better_chance_cake, bakeathon_winner, under_30, yeast, baking_powder])\ncauses = Function([statements] -> [bool])\n\n# Constraints\ncauses(healthy_bones) == sufficient_calcium ::: If a child is to develop healthy bones, the child's diet must include sufficient calcium\nImplies(Not(healthy_bones), Not(sufficient_calcium)) ::: It therefore follows that the diets of children who do not develop healthy bones do not include sufficient calcium\n\n# Options\nQuestion ::: Flawed reasoning in which one of the following most closely parallels the flawed reasoning in the argument above?\nis_flawed(Implies(Not(taste_good), Not(right_amount_flour))) ::: (A) A cake must contain the right amount of flour in order to taste good. It therefore follows that cakes that do not taste good do not contain the right amount of flour.\nis_flawed(Implies(Not(more_pie_contestants), better_chance_cake)) ::: (B) In recipe contests, there are always more contestants in the pie category than there are in the cake category. It therefore follows that contestants generally have a better chance of winning in the cake category than in the pie category.\nis_flawed(Implies(Not(bakeathon_winner), Not(under_30))) ::: (C) The Bake-a-Thon, which is open to contestants of all ages, has never been won by a person under the age of 30. It therefore follows that the winner of this year's Bake-a-Thon will not be under the age of 30.\nis_flawed(Implies(Not(yeast), baking_powder)) ::: (D) Both yeast and baking powder can cause sweet rolls to rise. It therefore follows that yeast can always be substituted for baking powder in a recipe for sweet rolls."
    ]
  },
  {
    "id": "test_511",
    "context": "Recently, photons and neutrinos emitted by a distant supernova, an explosion of a star, reached Earth at virtually the same time. This finding supports Einstein' s claim that gravity is a property of space itself, in the sense that a body exerts gravitational pull by curving the space around it. The simultaneous arrival of the photons and neutrinos is evidence that the space through which they traveled was curved.",
    "question": "Which one of the following, if true, would most strengthen the reasoning above?",
    "options": [
      "If gravity is not a property of space itself, then photons and neutrinos emitted simultaneously by a distant event will reach Earth at different times.",
      "Photons and neutrinos were the only kinds of particles that reached Earth from the supernova.",
      "Photons and neutrinos emitted by distant events would be undetectable on Earth if Einstein's claim that gravity is a property of space itself were correct.",
      "Prior to the simultaneous arrival of photons and neutrinos from the supernova, there was no empirical evidence for Einstein's claim that gravity is a property of space itself."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([supernova])\nparticles = EnumSort([photons, neutrinos])\narrival_time = Function([events, particles] -> [int])\ngravity_property = Function([bool])\n\n# Constraints\narrival_time(supernova, photons) == arrival_time(supernova, neutrinos) ::: photons and neutrinos emitted by a distant supernova reached Earth at virtually the same time\ngravity_property(True) ::: supports Einstein's claim that gravity is a property of space itself\n\n# Options\nQuestion ::: Which one of the following, if true, would most strengthen the reasoning above?\nis_strengthened(Implies(Not(gravity_property(True)), arrival_time(supernova, photons) != arrival_time(supernova, neutrinos))) ::: (A) If gravity is not a property of space itself, then photons and neutrinos emitted simultaneously by a distant event will reach Earth at different times.\nis_strengthened(And(arrival_time(supernova, photons) == arrival_time(supernova, neutrinos), ForAll([p:particles], p == photons Or p == neutrinos))) ::: (B) Photons and neutrinos were the only kinds of particles that reached Earth from the supernova.\nis_strengthened(Implies(gravity_property(True), Not(Exists([e:events], ForAll([p:particles], arrival_time(e, p) == arrival_time(supernova, p)))))) ::: (C) Photons and neutrinos emitted by distant events would be undetectable on Earth if Einstein's claim that gravity is a property of space itself were correct.\nis_strengthened(Not(Exists([e:events], ForAll([p:particles], arrival_time(e, p) == arrival_time(supernova, p))))) ::: (D) Prior to the simultaneous arrival of photons and neutrinos from the supernova, there was no empirical evidence for Einstein's claim that gravity is a property of space itself."
    ]
  },
  {
    "id": "test_512",
    "context": "In a bureaucracy, all decisions are arrived at by a process that involves many people. There is no one person who has the authority to decide whether a project will proceed or not. As a consequence, in bureaucracies, risky projects are never undertaken.",
    "question": "The conclusion follows logically from the premises if which one of the following is assumed?",
    "options": [
      "An individual who has decision-making power will take risks.",
      "Decisive individuals choose not to work in a bureaucracy.",
      "All projects in a bureaucracy require risk.",
      "The only risky projects undertaken are those for which a single individual has decision-making power."
    ],
    "raw_logic_programs": [
      "# Declarations\ndecisions = EnumSort([proceed, not_proceed])\nprojects = EnumSort([risky, not_risky])\nindividuals = EnumSort([single_decision_maker, multiple_decision_makers])\nauthority = Function([individuals, projects] -> [decisions])\n\n# Constraints\nForAll([p:projects], authority(multiple_decision_makers, p) == not_proceed) ::: There is no one person who has the authority to decide whether a project will proceed or not\nForAll([p:projects], Implies(p == risky, authority(multiple_decision_makers, p) == not_proceed)) ::: In bureaucracies, risky projects are never undertaken\n\n# Options\nQuestion ::: The conclusion follows logically from the premises if which one of the following is assumed?\nis_assumed(ForAll([p:projects], Implies(authority(single_decision_maker, p) == proceed, p == risky))) ::: (An individual who has decision-making power will take risks.\nis_assumed(ForAll([i:individuals], Implies(i == single_decision_maker, Not(authority(i, risky) == proceed)))) ::: (Decisive individuals choose not to work in a bureaucracy.\nis_assumed(ForAll([p:projects], Implies(p == risky, authority(multiple_decision_makers, p) == not_proceed))) ::: (All projects in a bureaucracy require risk.\nis_assumed(ForAll([p:projects], Implies(authority(single_decision_maker, p) == proceed, p == risky))) ::: (The only risky projects undertaken are those for which a single individual has decision-making power."
    ]
  },
  {
    "id": "test_513",
    "context": "The pigment that gives fresh blueberries their deep purplish-blue color is found in the berry' s skin -- not in its flesh, which is pale green. Ttherefore, since the smaller the berry, the more skin there is in relation to the rest of the berry, it follows that a pie filling made from a pound or two of fresh, whole blueberries __.",
    "question": "Which one of the following most logically completes the argument?",
    "options": [
      "will be darker if small berries rather than large ones are used",
      "will taste good only if made of high-quality berries",
      "will be more flavorful if large berries rather than small ones are used",
      "will taste the same whether the berries used are large or small"
    ],
    "raw_logic_programs": [
      "# Declarations\nberries = EnumSort([small, large])\nproperties = EnumSort([darker, taste_good, more_flavorful, taste_same])\nfilling_property = Function([berries] -> [properties])\n\n# Constraints\nForAll([b:berries], filling_property(b) == darker) ::: The pigment is in the skin, and smaller berries have more skin in relation to the rest of the berry\n\n# Options\nQuestion ::: Which one of the following most logically completes the argument?\nis_logical_completion(filling_property(small) == darker) ::: (will be darker if small berries rather than large ones are used)\nis_logical_completion(filling_property(small) == taste_good) ::: (will taste good only if made of high-quality berries)\nis_logical_completion(filling_property(large) == more_flavorful) ::: (will be more flavorful if large berries rather than small ones are used)\nis_logical_completion(filling_property(small) == taste_same) ::: (will taste the same whether the berries used are large or small)"
    ]
  },
  {
    "id": "test_514",
    "context": "In determining the authenticity of a painting, connoisseurs claim to be guided by the emotional impact the work has on them. For example, if a painting purportedly by Rembrandt is expressive and emotionally moving in a certain way, then this is supposedly evidence that the work was created by Rembrandt himself, and not by one of his students. But the degree to which an artwork has an emotional impact differs wildly from person to person. So a connoisseur' s assessment cannot be given credence.",
    "question": "The reasoning in the argument is most vulnerable to criticism on the grounds that the argument",
    "options": [
      "neglects the possibility that there may be widespread agreement among connoisseurs about emotional impact even when the public's assessment varies wildly",
      "presumes, without offering evidence, that Rembrandt was better at conveying emotions in painting than were other painters",
      "is based on the consideration of the nature of just one painter's works, even though the conclusion is about paintings in general",
      "presumes, without giving justification, that a painting's emotional impact is irrelevant to the determination of that painting's authenticity"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([emotional_impact, authenticity, connoisseur_assessment, public_assessment])\npainters = EnumSort([Rembrandt, students])\npaintings = EnumSort([expressive, emotionally_moving])\nassessments = Function([arguments, paintings, painters] -> [bool])\n\n# Constraints\nForAll([p:paintings], Implies(assessments(emotional_impact, p, Rembrandt), assessments(authenticity, p, Rembrandt))) ::: If a painting purportedly by Rembrandt is expressive and emotionally moving, then it is evidence of authenticity\nForAll([p:paintings], Exists([c:arguments], assessments(c, p, Rembrandt) != assessments(c, p, students))) ::: The degree to which an artwork has an emotional impact differs from person to person\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on the grounds that the argument\nis_vulnerable(Exists([c:arguments], ForAll([p:paintings], assessments(c, p, Rembrandt) == assessments(c, p, students)))) ::: (neglects the possibility that there may be widespread agreement among connoisseurs about emotional impact even when the public's assessment varies wildly\nis_vulnerable(ForAll([p:paintings], assessments(emotional_impact, p, Rembrandt) == assessments(authenticity, p, Rembrandt))) ::: (presumes, without offering evidence, that Rembrandt was better at conveying emotions in painting than were other painters\nis_vulnerable(Exists([p:paintings], assessments(authenticity, p, Rembrandt) == assessments(authenticity, p, students))) ::: (is based on the consideration of the nature of just one painter's works, even though the conclusion is about paintings in general\nis_vulnerable(Not(Exists([p:paintings], assessments(emotional_impact, p, Rembrandt) == assessments(authenticity, p, Rembrandt)))) ::: (presumes, without giving justification, that a painting's emotional impact is irrelevant to the determination of that painting's authenticity"
    ]
  },
  {
    "id": "test_515",
    "context": "Although there is no record of poet Edmund Spenser's parentage, we do know that as a youth Spenser attended the Merchant Tailors' School in London for a period between 1560 and 1570. Records from this time indicate that the Merchant Tailors' Guild then had only three members named Spenser: Robert Spenser, listed as a gentleman; Nicholas Spenser, elected the Guild's Warden in 1568; and John Spenser, listed as a \"journeyman cloth-maker. \" Of these, the last was likely the least affluent of the three-and most likely Edmund's father, since school accounting records list Edmund as a scholar who attended the school at a reduced fee.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "The Merchant Tailors' School did not reduce its fees for the children of the more affluent Guild members.",
      "Anybody in sixteenth century London who made clothing professionally would have had to be a member of the Merchant Tailors' Guild.",
      "The fact that Edmund Spenser attended the Merchant Tailors' School did not necessarily mean that he planned to become a tailor.",
      "No member of the Guild could become Guild warden in sixteenth century London unless he was a gentleman."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Edmund, Robert, Nicholas, John])\nroles = EnumSort([gentleman, warden, journeyman_cloth_maker])\nguild_members = Function([people] -> [roles])\nschool_fee_status = Function([people] -> [bool])  # True if attended at a reduced fee\n\n# Constraints\nguild_members(Robert) == gentleman ::: Robert Spenser is listed as a gentleman\nguild_members(Nicholas) == warden ::: Nicholas Spenser was elected the Guild's Warden in 1568\nguild_members(John) == journeyman_cloth_maker ::: John Spenser is listed as a \"journeyman cloth-maker\"\nschool_fee_status(Edmund) == True ::: Edmund attended the school at a reduced fee\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(Implies(guild_members(John) == journeyman_cloth_maker, school_fee_status(Edmund) == True)) ::: (The Merchant Tailors' School did not reduce its fees for the children of the more affluent Guild members.\nis_assumption(Implies(guild_members(Edmund) == journeyman_cloth_maker, Exists([p:people], guild_members(p) == journeyman_cloth_maker))) ::: (Anybody in sixteenth century London who made clothing professionally would have had to be a member of the Merchant Tailors' Guild.\nis_assumption(Implies(school_fee_status(Edmund) == True, Not(guild_members(Edmund) == tailor))) ::: (The fact that Edmund Spenser attended the Merchant Tailors' School did not necessarily mean that he planned to become a tailor.\nis_assumption(Implies(guild_members(Nicholas) == warden, guild_members(Nicholas) == gentleman)) ::: (No member of the Guild could become Guild warden in sixteenth century London unless he was a gentleman."
    ]
  },
  {
    "id": "test_516",
    "context": "In response to mounting public concern, an airplane manufacturer implemented a program with the well-publicized goal of reducing by half the total yearly amount of hazardous waste generated by its passenger-jet division. When the program began in 1994, the division' s hazardous waste output was 90 pounds per production worker; last year it was 40 pounds per production worker. Clearly, ttherefore, charges that the manufacturer' s program has not met its goal are false.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "Since 1994, other divisions in the company have achieved reductions in hazardous waste output that are at least equal to that achieved in the passenger-jet division.",
      "The average number of weekly hours per production worker in the passenger-jet division was not significantly greater last year than it was in 1994.",
      "At least as many passenger jets were produced by the division last year as had been produced in 1994.",
      "The number of production workers assigned to the passenger-jet division was not significantly less in 1994 than it was last year."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([1994, last_year])\nmetrics = EnumSort([hazardous_waste_per_worker, production_workers])\nvalues = Function([years, metrics] -> [int])\n\n# Constraints\nvalues(1994, hazardous_waste_per_worker) == 90 ::: In 1994, the division's hazardous waste output was 90 pounds per production worker\nvalues(last_year, hazardous_waste_per_worker) == 40 ::: Last year, it was 40 pounds per production worker\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(ForAll([y:years], values(y, production_workers) >= values(1994, production_workers))) ::: (A) The number of production workers assigned to the passenger-jet division was not significantly less in 1994 than it was last year.\nis_assumption(ForAll([y:years], values(y, hazardous_waste_per_worker) <= 90)) ::: (B) Since 1994, other divisions in the company have achieved reductions in hazardous waste output that are at least equal to that achieved in the passenger-jet division.\nis_assumption(ForAll([y:years], values(y, hazardous_waste_per_worker) >= 40)) ::: (C) The average number of weekly hours per production worker in the passenger-jet division was not significantly greater last year than it was in 1994.\nis_assumption(ForAll([y:years], values(y, production_workers) <= values(last_year, production_workers))) ::: (D) At least as many passenger jets were produced by the division last year as had been produced in 1994."
    ]
  },
  {
    "id": "test_517",
    "context": "Sanchez: The sixteen new computers that the school purchased were not as expensive as many people assume. So it isn' t true that too much was spent on computers. Merriweather: It isn' t that the school paid more for each computer than it was worth, but that the computers that were purchased were much more elaborate than they needed to be.",
    "question": "The dialogue provides the most support for the claim that Sanchez and Merriweather disagree over whether the school",
    "options": [
      "needed sixteen new computers",
      "purchased more computers than it should have",
      "has been harshly criticized for purchasing the sixteen computers",
      "spent more in purchasing the sixteen computers than it should have"
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([needed_sixteen_computers, purchased_more_than_needed, criticized_for_purchasing, spent_more_than_should_have])\nsanchez_agrees = Function([claims] -> [bool])\nmerriweather_agrees = Function([claims] -> [bool])\n\n# Constraints\nsanchez_agrees(spent_more_than_should_have) == False ::: Sanchez claims that it isn't true that too much was spent on computers\nmerriweather_agrees(spent_more_than_should_have) == True ::: Merriweather suggests that the computers were more elaborate than needed, implying overspending\n\n# Options\nQuestion ::: The dialogue provides the most support for the claim that Sanchez and Merriweather disagree over whether the school\nis_disagreement(spent_more_than_should_have) ::: (spent more in purchasing the sixteen computers than it should have)"
    ]
  },
  {
    "id": "test_518",
    "context": "Critic: The contemporary novel is incapable of making important new contributions. The evidence is clear. Contemporary psychological novels have been failures. Contemporary action novels lack any social significance. And contemporary romance novels are stale and formulaic.",
    "question": "The flawed reasoning in the critic's argument is most similar to that in which one of the following?",
    "options": [
      "The essayist Macaulay was as widely read in his time as Dickens, but has been neglected since. Thus writers who are popular today are likely to be forgotten in the future.",
      "Because there has been substantial progress in recent years in making machines more efficient, it is only a matter of time before we invent a perpetual motion machine.",
      "Since no government has been able to regulate either employment or inflation very closely, it is impossible for any government to improve its nation's economy.",
      "This politician has not made any proposals for dealing with the problem of unemployment and thus must not think the problem is important."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([contemporary_novel, psychological_novel, action_novel, romance_novel])\ncontributions = EnumSort([important, failure, lack_significance, stale_formulaic])\nreasoning = Function([arguments] -> [contributions])\n\n# Constraints\nreasoning(psychological_novel) == failure ::: Contemporary psychological novels have been failures\nreasoning(action_novel) == lack_significance ::: Contemporary action novels lack any social significance\nreasoning(romance_novel) == stale_formulaic ::: Contemporary romance novels are stale and formulaic\nForAll([a:arguments], Implies(reasoning(a) != important, reasoning(contemporary_novel) != important)) ::: The contemporary novel is incapable of making important new contributions\n\n# Options\nQuestion ::: The flawed reasoning in the critic's argument is most similar to that in which one of the following?\nis_similar_flawed_reasoning(Implies(reasoning(Macaulay) == widely_read, reasoning(Macaulay) == neglected)) ::: (A)\nis_similar_flawed_reasoning(Implies(reasoning(machines) == efficient, reasoning(machines) == perpetual_motion)) ::: (B)\nis_similar_flawed_reasoning(Implies(reasoning(government) == unable_to_regulate, reasoning(government) == unable_to_improve)) ::: (C)\nis_similar_flawed_reasoning(Implies(reasoning(politician) == no_proposals, reasoning(politician) == not_important)) ::: (D)"
    ]
  },
  {
    "id": "test_519",
    "context": "Renting cars from dealerships is less expensive than renting cars from national rental firms. But to take advantage of dealership rates, tourists must determine which local dealerships offer rentals, and then pay for long taxi rides between the airport and those dealerships. So renting from dealerships rather than national rental firms is generally more worthwhile for local residents than for tourists.",
    "question": "Each of the following, if true, strengthens the argument EXCEPT:",
    "options": [
      "Tourists renting cars from national rental firms almost never need to pay for taxi rides to or from the airport.",
      "Travel agents generally are unable to inform tourists of which local car dealerships offer rentals.",
      "For local residents, taxi rides to car dealerships from their homes or workplaces are usually no less expensive than taxi rides to national rental firms.",
      "Many local residents know of local car dealerships that offer low-priced rentals."
    ],
    "raw_logic_programs": [
      "# Declarations\n- tourists: A group of people who are visiting a place for leisure or business.\n- local_residents: People who live in the area where the car rentals are being considered.\n- dealerships: Local car dealerships that offer car rentals.\n- national_rental_firms: National companies that offer car rentals.\n- taxi_rides: Transportation service that tourists or local residents might use to get to car rental locations.\n\n# Constraints\n- Renting cars from dealerships is less expensive than renting from national rental firms.\n- Tourists must determine which local dealerships offer rentals.\n- Tourists must pay for long taxi rides between the airport and dealerships.\n- Renting from dealerships is generally more worthwhile for local residents than for tourists.\n\n# Options\nQuestion: Each of the following, if true, strengthens the argument EXCEPT:\n1. Tourists renting cars from national rental firms almost never need to pay for taxi rides to or from the airport.\n2. Travel agents generally are unable to inform tourists of which local car dealerships offer rentals.\n3. For local residents, taxi rides to car dealerships from their homes or workplaces are usually no less expensive than taxi rides to national rental firms.\n4. Many local residents know of local car dealerships that offer low-priced rentals.\n\nThe task is to identify which statement does not strengthen the argument that renting from dealerships is generally more worthwhile for local residents than for tourists."
    ]
  },
  {
    "id": "test_520",
    "context": "Ethicist: As a function of one' s job and societal role, one has various duties. There are situations where acting in accord with one of these duties has disastrous consequences, and thus the duties are not absolute. However, it is a principle of morality that if one does not have overwhelming evidence that fulfilling such a duty will have disastrous consequences, one ought to fulfill it.",
    "question": "Which one of the following most closely conforms to the principle of morality cited by the ethicist?",
    "options": [
      "A teacher thinks that a certain student has received the course grade merited by the quality of his work. The teacher should fulfill her duty not to raise the student's grade, even though the lower grade might harm the student's chance of obtaining an internship.",
      "A person should not fulfill his duty to tell his friend the truth about the friend's new haircut, because lying will make the friend happier than the truth would.",
      "A police investigator discovers that a contractor has slightly overcharged wealthy customers in order to lower rates for a charity. The investigator should not fulfill his duty to report the contractor provided that the contractor stops the practice.",
      "A journalist thinks there is a slight chance that a story about a developing crisis will endanger innocent lives. Ttherefore, the journalist should await further developments before fulfilling his duty to file the story."
    ],
    "raw_logic_programs": [
      "# Declarations\nduties = EnumSort([job_duty, societal_role_duty])\nconsequences = EnumSort([disastrous, non_disastrous])\nevidence = EnumSort([overwhelming, not_overwhelming])\nfulfill_duty = Function([duties, consequences, evidence] -> [bool])\n\n# Constraints\nForAll([d:duties, c:consequences, e:evidence], Implies(And(c == non_disastrous, e == not_overwhelming), fulfill_duty(d, c, e) == True)) ::: If one does not have overwhelming evidence that fulfilling a duty will have disastrous consequences, one ought to fulfill it\n\n# Options\nQuestion ::: Which one of the following most closely conforms to the principle of morality cited by the ethicist?\nis_conformant(fulfill_duty(job_duty, non_disastrous, not_overwhelming)) ::: (A) A teacher thinks that a certain student has received the course grade merited by the quality of his work. The teacher should fulfill her duty not to raise the student's grade, even though the lower grade might harm the student's chance of obtaining an internship.\nis_conformant(Not(fulfill_duty(societal_role_duty, non_disastrous, overwhelming))) ::: (B) A person should not fulfill his duty to tell his friend the truth about the friend's new haircut, because lying will make the friend happier than the truth would.\nis_conformant(Not(fulfill_duty(job_duty, non_disastrous, overwhelming))) ::: (C) A police investigator discovers that a contractor has slightly overcharged wealthy customers in order to lower rates for a charity. The investigator should not fulfill his duty to report the contractor provided that the contractor stops the practice.\nis_conformant(Not(fulfill_duty(job_duty, disastrous, not_overwhelming))) ::: (D) A journalist thinks there is a slight chance that a story about a developing crisis will endanger innocent lives. Therefore, the journalist should await further developments before fulfilling his duty to file the story."
    ]
  },
  {
    "id": "test_521",
    "context": "A popular beach has long had a dolphin feeding program in which fish are given to dolphins several times a day; many dolphins get as much as half of their food each day there. Although dolphins that first benefit from the program as adults are healthy and long-lived, their offspring have a lower life expectancy than offspring of dolphins that feed exclusively in the wild.",
    "question": "Which of the following, if true, most helps to explain the lower life expectancy of offspring of dolphins feeding at the beach compared to other young dolphins?",
    "options": [
      "The fish given to the dolphins at the beach are the same types of fish that dolphins typically catch in the wild.",
      "Adult dolphins that feed at the beach spend much less time teaching their offspring how to catch fish in the wild than do other adult dolphins.",
      "Sharks that prey on dolphins are less common in the open seas off the beach than in many other areas of the open seas where dolphins congregate.",
      "Many of the adult dolphins that feed at the beach are females that nurse their offspring there."
    ],
    "raw_logic_programs": [
      "# Declarations\ndolphins = EnumSort([adult_beach, offspring_beach, offspring_wild])\nlife_expectancy = Function([dolphins] -> [int])\n\n# Constraints\nlife_expectancy(adult_beach) > life_expectancy(offspring_beach) ::: Although dolphins that first benefit from the program as adults are healthy and long-lived\nlife_expectancy(offspring_beach) < life_expectancy(offspring_wild) ::: Offspring have a lower life expectancy than offspring of dolphins that feed exclusively in the wild\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the lower life expectancy of offspring of dolphins feeding at the beach compared to other young dolphins?\nis_explanation(And(ForAll([f:fish], type(f) == wild_type), given(adult_beach, f))) ::: (The fish given to the dolphins at the beach are the same types of fish that dolphins typically catch in the wild.)\nis_explanation(And(lessons(adult_beach, offspring_beach) < lessons(adult_wild, offspring_wild))) ::: (Adult dolphins that feed at the beach spend much less time teaching their offspring how to catch fish in the wild than do other adult dolphins.)\nis_explanation(And(less_sharks(beach) < less_sharks(other_areas))) ::: (Sharks that prey on dolphins are less common in the open seas off the beach than in many other areas of the open seas where dolphins congregate.)\nis_explanation(And(many(adult_beach) == female, nurse(adult_beach, offspring_beach))) ::: (Many of the adult dolphins that feed at the beach are females that nurse their offspring there.)"
    ]
  },
  {
    "id": "test_522",
    "context": "When the supply of a given resource dwindles, alternative technologies allowing the use of different resources develop, and demand for the resource that was in short supply naturally declines. Then the existing supplies of that resource satisfy whatever demand remains. Among the once-dwindling resources that are now in more than adequate supply are flint for arrowheads, trees usable for schooner masts, and good mules. Because new technologies constantly replace old ones, we can never run out of important natural resources.",
    "question": "Which one of the following, if true, most seriously undermines the conclusion?",
    "options": [
      "The masts and hulls of some sailing ships built today are still made of wood.",
      "The biological requirements for substances like clean air and clean water are unaffected by technological change.",
      "Dwindling supplies of a natural resource often result in that resource's costing more to use.",
      "There are considerably fewer mules today than there were 100 years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\nresources = EnumSort([flint, trees, mules, clean_air, clean_water])\ntechnologies = EnumSort([alternative_tech, old_tech])\ndemand = Function([resources] -> [int])\nsupply = Function([resources] -> [int])\ndevelops = Function([resources] -> [technologies])\n\n# Constraints\nForAll([r:resources], Implies(supply(r) < demand(r), develops(r) == alternative_tech)) ::: When the supply of a given resource dwindles, alternative technologies develop\nForAll([r:resources], Implies(develops(r) == alternative_tech, demand(r) < supply(r))) ::: Demand for the resource that was in short supply naturally declines\nForAll([r:resources], Implies(demand(r) < supply(r), supply(r) >= demand(r))) ::: Existing supplies satisfy whatever demand remains\nForAll([r:resources], Or(r == flint, r == trees, r == mules) -> supply(r) > demand(r)) ::: Once-dwindling resources are now in more than adequate supply\nForAll([r:resources], develops(r) == old_tech -> supply(r) >= demand(r)) ::: New technologies replace old ones, so we never run out of important resources\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously undermines the conclusion?\nis_undermining(ForAll([r:resources], Implies(r == clean_air, biological_requirements(r) == unaffected_by_tech))) ::: (The biological requirements for substances like clean air and clean water are unaffected by technological change.\nis_undermining(Exists([r:resources], And(r == clean_air, supply(r) < demand(r)))) ::: (The biological requirements for substances like clean air and clean water are unaffected by technological change.\nis_undermining(Exists([r:resources], And(r == clean_air, supply(r) < demand(r)))) ::: (Dwindling supplies of a natural resource often result in that resource's costing more to use.\nis_undermining(Exists([r:resources], And(r == mules, supply(r) < demand(r)))) ::: (There are considerably fewer mules today than there were 100 years ago."
    ]
  },
  {
    "id": "test_523",
    "context": "People in the tourist industry know that excessive development of seaside areas by the industry damages the environment. Such development also hurts the tourist industry by making these areas unattractive to tourists, a fact of which people in the tourist industry are well aware. People in the tourist industry would never knowingly do anything to damage the industry. Ttherefore, they would never knowingly damage the seaside environment, and the people who are concerned about damage to the seaside environment thus have nothing to fear from the tourist industry.",
    "question": "The reasoning in the argument is most vulnerable to criticism on which one of the following grounds?",
    "options": [
      "The argument establishes that a certain state of affairs is likely and then treats that as evidence that the state of affairs is inevitable.",
      "That something is not the cause of a problem is used as evidence that it never coexists with that problem.",
      "The argument shifts from applying a characteristic to a few members of a group to applying the characteristic to all members of that group.",
      "The possibility that the tourist industry would unintentionally harm the environment is ignored."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([tourist_industry])\nactions = EnumSort([knowingly_damage, unintentionally_damage])\nenvironment = EnumSort([seaside_environment])\nawareness = Function([people, environment] -> [bool])\nintent = Function([people, actions] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(intent(p, knowingly_damage), Not(awareness(p, seaside_environment)))) ::: People in the tourist industry would never knowingly do anything to damage the industry\nForAll([p:people], awareness(p, seaside_environment)) ::: People in the tourist industry are well aware of the damage to the seaside environment\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on which one of the following grounds?\nis_vulnerable(Exists([p:people], intent(p, unintentionally_damage))) ::: (The possibility that the tourist industry would unintentionally harm the environment is ignored.)"
    ]
  },
  {
    "id": "test_524",
    "context": "One researcher writes, \"Human beings are innately aggressive. \" As evidence, the researcher cites the prevalence of warfare in history, and then discounts any current disinclination to fight: \"The most peaceable peoples of today were often ravagers of yesteryear and will probably fight again in the future. \" But if some peoples are peaceable now, then aggression itself cannot be coded in our genes, only the potential for it. If \"innate\" only means possible, or even likely in certain environments, then everything we do is innate and the word has no meaning.",
    "question": "Which one of the following most accurately describes the technique used in the passage to weaken the argument for the claim that aggressiveness is innate to human beings?",
    "options": [
      "The accuracy of the historical data cited in the argument for innate aggressiveness is called into question.",
      "An attempt is made to undermine the argument for innate aggressiveness by arguing that all peoples are peaceable.",
      "An attempt is made to undermine the argument for innate aggressiveness by arguing that there are no genetically based traits.",
      "The force of the concept of innateness used in the argument for innate aggressiveness is called into question."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([innate_aggressiveness, peaceable_now, potential_for_aggression])\ntechniques = EnumSort([question_historical_data, undermine_all_peaceable, undermine_no_genetic_traits, question_innateness_concept])\nused_technique = Function([arguments] -> [techniques])\n\n# Constraints\nused_technique(innate_aggressiveness) == question_innateness_concept ::: The force of the concept of innateness used in the argument for innate aggressiveness is called into question\n\n# Options\nQuestion ::: Which one of the following most accurately describes the technique used in the passage to weaken the argument for the claim that aggressiveness is innate to human beings?\nis_accurate(used_technique(innate_aggressiveness) == question_historical_data) ::: (The accuracy of the historical data cited in the argument for innate aggressiveness is called into question.\nis_accurate(used_technique(innate_aggressiveness) == undermine_all_peaceable) ::: (An attempt is made to undermine the argument for innate aggressiveness by arguing that all peoples are peaceable.\nis_accurate(used_technique(innate_aggressiveness) == undermine_no_genetic_traits) ::: (An attempt is made to undermine the argument for innate aggressiveness by arguing that there are no genetically based traits.\nis_accurate(used_technique(innate_aggressiveness) == question_innateness_concept) ::: (The force of the concept of innateness used in the argument for innate aggressiveness is called into question."
    ]
  },
  {
    "id": "test_525",
    "context": "Good students learn more than what their parents and teachers compel them to learn. This requires that these students derive pleasure from the satisfaction of their curiosity, and one cannot experience such pleasure unless one is capable of concentrating on a topic so intently that one loses track of one' s own identity.",
    "question": "If the statements above are true, each of the following could also be true EXCEPT:",
    "options": [
      "Most people who are capable of becoming so absorbed in a topic that they lose track of their own identities are not good students.",
      "Most good students do not derive pleasure from the satisfaction of their curiosity.",
      "Some people who are capable of becoming so absorbed in a topic that they lose track of their own identities are nevertheless incapable of deriving pleasure from the satisfaction of their curiosity.",
      "Some people who are not good students derive pleasure from losing track of their own identities."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([good_students, others])\nattributes = EnumSort([learn_more, derive_pleasure, concentrate, lose_identity])\nhas_attribute = Function([students, attributes] -> [bool])\n\n# Constraints\nForAll([s:students], Implies(s == good_students, And(has_attribute(s, learn_more), has_attribute(s, derive_pleasure)))) ::: Good students learn more and derive pleasure from curiosity\nForAll([s:students], Implies(has_attribute(s, derive_pleasure), And(has_attribute(s, concentrate), has_attribute(s, lose_identity)))) ::: Deriving pleasure requires concentration and losing track of identity\n\n# Options\nQuestion ::: If the statements above are true, each of the following could also be true EXCEPT:\nis_exception(is_sat(ForAll([s:students], Implies(has_attribute(s, lose_identity), Not(has_attribute(s, good_students)))))) ::: (Most people who are capable of becoming so absorbed in a topic that they lose track of their own identities are not good students.)\nis_exception(is_sat(ForAll([s:students], Implies(s == good_students, Not(has_attribute(s, derive_pleasure)))))) ::: (Most good students do not derive pleasure from the satisfaction of their curiosity.)\nis_exception(is_sat(Exists([s:students], And(has_attribute(s, lose_identity), Not(has_attribute(s, derive_pleasure)))))) ::: (Some people who are capable of becoming so absorbed in a topic that they lose track of their own identities are nevertheless incapable of deriving pleasure from the satisfaction of their curiosity.)\nis_exception(is_sat(Exists([s:students], And(Not(s == good_students), has_attribute(s, lose_identity))))) ::: (Some people who are not good students derive pleasure from losing track of their own identities.)"
    ]
  },
  {
    "id": "test_526",
    "context": "One of the great difficulties in establishing animal rights based merely on the fact that animals are living things concerns scope. If one construes the term \"living things\" broadly, one is bound to bestow rights on organisms that are not animals (e. g. , plants). But if this term is construed narrowly, one is apt to refuse rights to organisms that, at least biologically, are considered members of the animal kingdom.",
    "question": "If the statements above are true, which one of the following can be most reasonably inferred from them?",
    "options": [
      "Successful attempts to establish rights for all animals are likely either to establish rights for some plants or not to depend solely on the observation that animals are living things.",
      "The problem of delineating the boundary of the set of living things interferes with every attempt to establish animal rights.",
      "Not all animals should be given rights.",
      "One cannot bestow rights on animals without also bestowing rights on at least some plants."
    ],
    "raw_logic_programs": [
      "# Declarations\norganisms = EnumSort([animals, plants])\nrights = Function([organisms] -> [bool])\n\n# Constraints\nForAll([o:organisms], Implies(o == animals, rights(o))) ::: Establishing animal rights based on them being living things\nForAll([o:organisms], Implies(o == plants, Not(rights(o)))) ::: Not bestowing rights on non-animal living things\n\n# Options\nQuestion ::: If the statements above are true, which one of the following can be most reasonably inferred from them?\nis_inferred(Or(Exists([o:organisms], And(o == plants, rights(o))), Not(ForAll([o:organisms], Implies(o == animals, rights(o)))))) ::: (A) Successful attempts to establish rights for all animals are likely either to establish rights for some plants or not to depend solely on the observation that animals are living things.\nis_inferred(Exists([o:organisms], And(o == plants, rights(o)))) ::: (B) The problem of delineating the boundary of the set of living things interferes with every attempt to establish animal rights.\nis_inferred(Not(ForAll([o:organisms], Implies(o == animals, rights(o))))) ::: (C) Not all animals should be given rights.\nis_inferred(Exists([o:organisms], And(o == plants, rights(o)))) ::: (D) One cannot bestow rights on animals without also bestowing rights on at least some plants."
    ]
  },
  {
    "id": "test_527",
    "context": "Many newborn babies have a yellowish tinge to their skin because their blood contains a high level of the pigment bilirubin. One group of doctors treats newborns to reduce high levels of bilirubin, since bilirubin, if it enters the brain, might cause the tetanus that sometimes occurs in newborns. However, a second group of doctors argues for allowing bilirubin levels in newborn babies to remain high, since the brain' s own natural defenses normally prevent bilirubin from entering.",
    "question": "Which one of the following, if true, most helps to support the position of the second group of doctors?",
    "options": [
      "Bilirubin neutralizes certain potentially damaging substances to which newborns are exposed at birth.",
      "Some diseases that occur in newborns can weaken the brain's natural defenses and allow bilirubin to enter.",
      "The treatment that most effectively reduces high levels of bilirubin in newborns has no known negative side effects.",
      "Among doctors who recommend treating newborns to reduce high levels of bilirubin, there is general agreement about what levels should be considered excessively high."
    ],
    "raw_logic_programs": [
      "# Declarations\nnewborns = EnumSort([newborn])\nbilirubin_level = Function([newborns] -> [int])\nbrain_defense = Function([newborns] -> [bool])\nbilirubin_treatment = Function([newborns] -> [bool])\n\n# Constraints\nForAll([n:newborns], bilirubin_level(n) > 0) ::: Many newborn babies have a yellowish tinge to their skin because their blood contains a high level of the pigment bilirubin\nForAll([n:newborns], Implies(bilirubin_level(n) > threshold, bilirubin_treatment(n))) ::: One group of doctors treats newborns to reduce high levels of bilirubin\nForAll([n:newborns], Implies(Not(bilirubin_treatment(n)), brain_defense(n))) ::: A second group of doctors argues for allowing bilirubin levels to remain high since the brain's own natural defenses normally prevent bilirubin from entering\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to support the position of the second group of doctors?\nsupports_second_group(Bilirubin neutralizes certain potentially damaging substances to which newborns are exposed at birth) ::: (A)\nsupports_second_group(Some diseases that occur in newborns can weaken the brain's natural defenses and allow bilirubin to enter) ::: (B)\nsupports_second_group(The treatment that most effectively reduces high levels of bilirubin in newborns has no known negative side effects) ::: (C)\nsupports_second_group(Among doctors who recommend treating newborns to reduce high levels of bilirubin, there is general agreement about what levels should be considered excessively high) ::: (D)"
    ]
  },
  {
    "id": "test_528",
    "context": "Critic: Some writers have questioned Stalin' s sanity during his last years. They typically characterized his vindictiveness and secrecy as \"paranoia\" and \"morbid suspiciousness, \" the latter almost a standard term applied by the Soviet writers under glasnost to explain this extraordinary man' s misdeeds. But Stalin' s cruelty and deviousness are not more apparent during those years than in earlier periods of his rule. \"Morbid suspiciousness\" has to be a characteristic of tyrants. Without it they would not remain long in power.",
    "question": "Which one of the following most accurately expresses a point of disagreement between the critic and the writers?",
    "options": [
      "whether Stalin's cruel misdeeds provide evidence of morbid suspiciousness",
      "whether Stalin should be held guilty of the cruel deeds attributed to him",
      "whether it was Stalin's psychological state or rather his political condition that was the primary cause of his cruel misdeeds",
      "whether tyranny tends to lead to cruelty"
    ],
    "raw_logic_programs": [
      "# Declarations\nwriters = EnumSort([critic, other_writers])\nattributes = EnumSort([sanity, paranoia, morbid_suspiciousness, cruelty, deviousness])\ncauses = EnumSort([psychological_state, political_condition])\ndisagreement = Function([writers, attributes] -> [bool])\nprimary_cause = Function([writers] -> [causes])\n\n# Constraints\ndisagreement(critic, morbid_suspiciousness) == True ::: The critic disagrees with the writers on the characterization of Stalin's behavior as \"morbid suspiciousness\"\ndisagreement(critic, cruelty) == False ::: The critic agrees that Stalin's cruelty was consistent throughout his rule\nprimary_cause(critic) == political_condition ::: The critic attributes Stalin's actions to his political condition\nprimary_cause(other_writers) == psychological_state ::: The other writers attribute Stalin's actions to his psychological state\n\n# Options\nQuestion ::: Which one of the following most accurately expresses a point of disagreement between the critic and the writers?\nis_disagreement(disagreement(critic, morbid_suspiciousness)) ::: (whether Stalin's cruel misdeeds provide evidence of morbid suspiciousness)\nis_disagreement(False) ::: (whether Stalin should be held guilty of the cruel deeds attributed to him)\nis_disagreement(primary_cause(critic) != primary_cause(other_writers)) ::: (whether it was Stalin's psychological state or rather his political condition that was the primary cause of his cruel misdeeds)\nis_disagreement(False) ::: (whether tyranny tends to lead to cruelty)"
    ]
  },
  {
    "id": "test_529",
    "context": "Marie: I gave the cashier at my local convenience store a 10-dollar bill to pay for my purchase, and he mistakenly gave me change for a 20 dollar bill. I kept the extra 10 dollars. Since I did not trick, threaten, or physically force the cashier into giving me the extra money, it was not morally wrong for me to keep it. Julia: Nonsense. If you mistakenly hand me your coat, thinking it is my coat, then even though I did not get the coat by means of any deception, threats, or violence against you, I am not morally entitled to keep it for myself.",
    "question": "Julia's response functions in which one of the following ways?",
    "options": [
      "It offers an additional reason to accept Marie's conclusion.",
      "It challenges Marie's conclusion by claiming that the proper conclusion to draw in a relevantly similar situation would be the opposite of Marie's.",
      "It strongly questions the application of Marie's principle to the case that Marie described, while accepting that principle.",
      "It uses Marie's criterion as a means of solving a moral problem Julia herself faces."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Marie, Julia])\nsituations = EnumSort([convenience_store, coat_exchange])\nprinciples = EnumSort([no_deception, moral_entitlement])\nconclusions = EnumSort([morally_wrong, not_morally_wrong])\nresponses = Function([arguments, situations] -> [conclusions])\n\n# Constraints\nresponses(Marie, convenience_store) == not_morally_wrong ::: Marie's conclusion about the convenience store situation\nresponses(Julia, coat_exchange) == morally_wrong ::: Julia's conclusion about the coat exchange situation\nForAll([s:situations], Implies(s == convenience_store, principles(no_deception) == not_morally_wrong)) ::: Marie's principle applied to the convenience store situation\nForAll([s:situations], Implies(s == coat_exchange, principles(no_deception) == morally_wrong)) ::: Julia's principle applied to the coat exchange situation\n\n# Options\nQuestion ::: Julia's response functions in which one of the following ways?\nis_function(Implies(responses(Julia, coat_exchange) == morally_wrong, responses(Marie, convenience_store) == not_morally_wrong)) ::: (It offers an additional reason to accept Marie's conclusion.\nis_function(Implies(responses(Julia, coat_exchange) == morally_wrong, responses(Marie, convenience_store) == morally_wrong)) ::: (It challenges Marie's conclusion by claiming that the proper conclusion to draw in a relevantly similar situation would be the opposite of Marie's.\nis_function(Implies(principles(no_deception) == not_morally_wrong, responses(Marie, convenience_store) == morally_wrong)) ::: (It strongly questions the application of Marie's principle to the case that Marie described, while accepting that principle.\nis_function(Implies(principles(no_deception) == morally_wrong, responses(Julia, coat_exchange) == morally_wrong)) ::: (It uses Marie's criterion as a means of solving a moral problem Julia herself faces."
    ]
  },
  {
    "id": "test_530",
    "context": "Kostman' s original painting of Rosati was not a very accurate portrait. Ttherefore, your reproduction of Kostman' s painting of Rosati will not be a very accurate production of the painting.",
    "question": "Which one of the following is most similar in its flawed reasoning to the flawed reasoning in the argument above?",
    "options": [
      "George's speech was filled with half-truths and misquotes. So the tape recording made of it cannot be of good sound quality.",
      "Jo imitated Layne. But Jo is different from Layne, so Jo could not have imitated Layne very well.",
      "An artist who paints a picture of an ugly scene must necessarily paint an ugly picture, unless the picture is a distorted representation of the scene.",
      "If a child's eyes resemble her mother's, then if the mother's eyes are brown the child's eyes also must be brown."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([original_painting, reproduction, accuracy])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nNot(reasoning(original_painting)) ::: Kostman's original painting of Rosati was not a very accurate portrait\nImplies(Not(reasoning(original_painting)), Not(reasoning(reproduction))) ::: Therefore, your reproduction of Kostman's painting of Rosati will not be a very accurate production of the painting\n\n# Options\nQuestion ::: Which one of the following is most similar in its flawed reasoning to the flawed reasoning in the argument above?\nis_similar_flawed_reasoning(Implies(Not(reasoning(half_truths)), Not(reasoning(sound_quality)))) ::: (A) George's speech was filled with half-truths and misquotes. So the tape recording made of it cannot be of good sound quality.\nis_similar_flawed_reasoning(Implies(Not(reasoning(imitation)), Not(reasoning(quality)))) ::: (B) Jo imitated Layne. But Jo is different from Layne, so Jo could not have imitated Layne very well.\nis_similar_flawed_reasoning(Implies(reasoning(ugly_scene), reasoning(ugly_picture))) ::: (C) An artist who paints a picture of an ugly scene must necessarily paint an ugly picture, unless the picture is a distorted representation of the scene.\nis_similar_flawed_reasoning(Implies(reasoning(resemblance), reasoning(color))) ::: (D) If a child's eyes resemble her mother's, then if the mother's eyes are brown the child's eyes also must be brown."
    ]
  },
  {
    "id": "test_531",
    "context": "Economic analysts, noting the sharp increase in ADHD-related disability claims over the past decade, have posited an epidemic of ADHD among younger generations. These analysts, though, ignore advances in psychoanalytical classifications. ADHD is now listed as an official psychiatric disorder in the DSM-5, whereas those with ADHD were simply treated as undisciplined and irresponsible in the past. Ttherefore, a greater number of serious cases are recommended now for disability, because Human Resources workers are more likely to identify these behavior patterns as ADHD.",
    "question": "Which of the following, if true, provides the most support for the argument?",
    "options": [
      "In some cultures in the past, the lack of responsibility was viewed as one of the most serious moral failings.",
      "Human Resource employees now receive basic training in the psychiatric disorders that most commonly lead to disability claims.",
      "According to studies, psychiatrists are diagnosing children with ADHD at increasingly early ages.",
      "Most economic analysts have no more than a rudimentary knowledge of psychiatric classifications."
    ],
    "raw_logic_programs": [
      "# Declarations\nanalysts = EnumSort([economic_analysts])\nfactors = EnumSort([increase_in_claims, advances_in_classifications, DSM_5_listing, HR_identification])\nsupport = Function([factors] -> [bool])\n\n# Constraints\nsupport(increase_in_claims) ::: noting the sharp increase in ADHD-related disability claims\nsupport(advances_in_classifications) ::: ignore advances in psychoanalytical classifications\nsupport(DSM_5_listing) ::: ADHD is now listed as an official psychiatric disorder in the DSM-5\nsupport(HR_identification) ::: Human Resources workers are more likely to identify these behavior patterns as ADHD\n\n# Options\nQuestion ::: Which of the following, if true, provides the most support for the argument?\nis_most_supportive(support(HR_training)) ::: (B) Human Resource employees now receive basic training in the psychiatric disorders that most commonly lead to disability claims.\nis_most_supportive(support(cultural_past)) ::: (A) In some cultures in the past, the lack of responsibility was viewed as one of the most serious moral failings.\nis_most_supportive(support(early_diagnosis)) ::: (C) According to studies, psychiatrists are diagnosing children with ADHD at increasingly early ages.\nis_most_supportive(support(analyst_knowledge)) ::: (D) Most economic analysts have no more than a rudimentary knowledge of psychiatric classifications."
    ]
  },
  {
    "id": "test_532",
    "context": "Only if Mallika knew where Jayesh' s car was parked could she have stolen it from the parking garage. But Jayesh claims he did not tell her where his car was parked. If he is telling the truth, she would not have known unless she had been watching as his car was parked. But she was not watching. So either Jayesh told Mallika where his car was parked or someone besides Mallika stole the car from the parking garage.",
    "question": "Which one of the following, if assumed, enables the argument's conclusion to be properly drawn?",
    "options": [
      "Someone stole Jayesh's car from the parking garage.",
      "Jayesh could not have told anyone other than Mallika where his car was parked.",
      "If Jayesh told Mallika where his car was parked, Mallika did not steal his car.",
      "Someone other than Mallika was watching as Jayesh's car was parked."
    ],
    "raw_logic_programs": [
      "# Declarations\npersons = EnumSort([Mallika, Jayesh])\nevents = EnumSort([knew_location, told_location, watched_parking, stole_car])\ntruth_values = EnumSort([true, false])\nhappened = Function([persons, events] -> [truth_values])\n\n# Constraints\nhappened(Mallika, stole_car) == true ::: Only if Mallika knew where Jayesh's car was parked could she have stolen it\nImplies(happened(Jayesh, told_location) == false, happened(Mallika, knew_location) == false) ::: If Jayesh is telling the truth, she would not have known unless she had been watching\nhappened(Mallika, watched_parking) == false ::: But she was not watching\n\n# Options\nQuestion ::: Which one of the following, if assumed, enables the argument's conclusion to be properly drawn?\nImplies(happened(Jayesh, told_location) == true, happened(Mallika, stole_car) == false) ::: (A) If Jayesh told Mallika where his car was parked, Mallika did not steal his car\nImplies(happened(Jayesh, told_location) == true, happened(Mallika, knew_location) == true) ::: (B) Jayesh could not have told anyone other than Mallika where his car was parked\nImplies(happened(Mallika, stole_car) == false, Exists([p:persons], And(p != Mallika, happened(p, stole_car) == true))) ::: (C) Someone other than Mallika was watching as Jayesh's car was parked\nImplies(happened(Mallika, stole_car) == false, Exists([p:persons], And(p != Mallika, happened(p, stole_car) == true))) ::: (D) Someone stole Jayesh's car from the parking garage"
    ]
  },
  {
    "id": "test_533",
    "context": "Traffic engineers have increased the capacity of the Krakkenbak Bridge to handle rush-hour traffic flow. The resultant increase in rush-hour traffic flow would not have occurred had the city not invested in computer modeling technology last year at the request of the city' s mayor, and the city' s financial predicament would not have been resolved if the traffic flow across the bridge during rush hour had not been increased.",
    "question": "Which one of the following can be properly inferred from the information above?",
    "options": [
      "Traffic flow across the Krakkenbak Bridge during rush hour would not have increased had the city's mayor not made investing in computer modeling technology the highest budgetary priority last year.",
      "The city's mayor was a proponent of investing in computer modeling technology because of the city's need to increase traffic flow across the Krakkenbak Bridge during rush hour.",
      "The city's financial predicament would not have been resolved had the city chosen a competing computer modeling software package.",
      "The city's financial predicament would not have been resolved had the city not invested in computer modeling technology."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([increased_traffic_flow, invested_in_technology, resolved_financial_predicament])\ncauses = Function([events] -> [bool])\n\n# Constraints\ncauses(invested_in_technology) ::: The city invested in computer modeling technology last year\ncauses(increased_traffic_flow) ::: The capacity of the Krakkenbak Bridge to handle rush-hour traffic flow increased\ncauses(resolved_financial_predicament) ::: The city's financial predicament was resolved\nImplies(Not(causes(invested_in_technology)), Not(causes(increased_traffic_flow))) ::: The increase in rush-hour traffic flow would not have occurred without the investment in technology\nImplies(Not(causes(increased_traffic_flow)), Not(causes(resolved_financial_predicament))) ::: The financial predicament would not have been resolved without the increased traffic flow\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the information above?\nis_inferred(Implies(Not(causes(invested_in_technology)), Not(causes(increased_traffic_flow)))) ::: (Traffic flow across the Krakkenbak Bridge during rush hour would not have increased had the city's mayor not made investing in computer modeling technology the highest budgetary priority last year.\nis_inferred(Implies(Not(causes(invested_in_technology)), Not(causes(resolved_financial_predicament)))) ::: (The city's financial predicament would not have been resolved had the city not invested in computer modeling technology."
    ]
  },
  {
    "id": "test_534",
    "context": "Health Department Official: Hamburger patties generally need about 10 minutes on a hot grill to be properly cooked. The precise amount of cooking time depends on the shape of the patty. The thicker the patty, the longer it must be cooked. Patties that are either overcooked or undercooked pose health hazards to the consumer.",
    "question": "If the statements above are true, they most strongly support which of the following?",
    "options": [
      "Hamburger patties that are approximately the same thickness should be broiled.",
      "It is always safer to overcook hamburger patties than to undercook the patties.",
      "Thinner patties will cook faster than thicker patties.",
      "Hamburgers that are undercooked tend to taste better than overcooked patties."
    ],
    "raw_logic_programs": [
      "# Declarations\npatties = EnumSort([thick, thin])\ncooking_time = Function([patties] -> [int])\nhealth_hazard = Function([patties, bool] -> [bool])\n\n# Constraints\nForAll([p:patties], cooking_time(p) >= 10) ::: Hamburger patties generally need about 10 minutes on a hot grill to be properly cooked\nForAll([p1:patties, p2:patties], Implies(p1 == thick, cooking_time(p1) > cooking_time(p2))) ::: The thicker the patty, the longer it must be cooked\nForAll([p:patties], Or(health_hazard(p, True), health_hazard(p, False))) ::: Patties that are either overcooked or undercooked pose health hazards to the consumer\n\n# Options\nQuestion ::: If the statements above are true, they most strongly support which of the following?\nis_supported(ForAll([p1:patties, p2:patties], Implies(p1 == thin, cooking_time(p1) < cooking_time(p2)))) ::: (Thinner patties will cook faster than thicker patties.)"
    ]
  },
  {
    "id": "test_535",
    "context": "Automobile executive: Our critics say that the communications devices installed in our automobiles are dangerously distracting to drivers. But these critics are wrong. Drivers who want to use communications devices are going to use them regardless. Our devices are easier for drivers to use, and hence they are safer.",
    "question": "The reasoning in the automobile executive's argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "presumes, without providing justification, that all communications devices are the same with respect to driver distraction",
      "is based on premises that presume the truth of the argument's conclusion",
      "fails to address the substantive point of the criticism that it is responding to",
      "attempts to apply a general principle to a situation to which that principle is not applicable"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([critics, executive])\nclaims = EnumSort([devices_distracting, drivers_use_anyway, devices_easier, devices_safer])\njustifications = Function([arguments, claims] -> [bool])\n\n# Constraints\njustifications(critics, devices_distracting) ::: Critics claim that the communications devices are dangerously distracting to drivers\njustifications(executive, drivers_use_anyway) ::: Executive claims that drivers will use devices regardless\njustifications(executive, devices_easier) ::: Executive claims that their devices are easier to use\njustifications(executive, devices_safer) ::: Executive claims that easier devices are safer\n\n# Options\nQuestion ::: The reasoning in the automobile executive's argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(presumes_without_justification(devices_distracting == devices_easier)) ::: (presumes, without providing justification, that all communications devices are the same with respect to driver distraction)\nis_vulnerable(premises_presume_conclusion(devices_safer)) ::: (is based on premises that presume the truth of the argument's conclusion)\nis_vulnerable(fails_to_address_substantive_point(devices_distracting)) ::: (fails to address the substantive point of the criticism that it is responding to)\nis_vulnerable(applies_general_principle_inapplicable(devices_easier)) ::: (attempts to apply a general principle to a situation to which that principle is not applicable)"
    ]
  },
  {
    "id": "test_536",
    "context": "Astronomer: This country' s space agency is currently building a new space telescope that is, unfortunately, way over budget. Some people argue that the project should be canceled. But that would be a mistake. If we cancel it now, all the money that has already been spent-which is more than the additional cost required to complete the project-would be wasted.",
    "question": "Which one of the following principles, if valid, would most help to justify the astronomer 's argument?",
    "options": [
      "In determining which scientific projects to fund, governments should give priority to the projects that are most likely to lead to important new discoveries.",
      "One should not commit additional funding to a project just because one has spent considerable money on it in the past.",
      "If it becomes clear that the total cost of a project will be more than twice the amount originally budgeted, then the project should be canceled.",
      "If more than half of the total cost of a project has already been spent, then the project should be completed."
    ],
    "raw_logic_programs": [
      "# Declarations\nprojects = EnumSort([space_telescope])\ncosts = Function([projects] -> [int])\nspent = Function([projects] -> [int])\nadditional_cost = Function([projects] -> [int])\ntotal_cost = Function([projects] -> [int])\n\n# Constraints\nspent(space_telescope) > additional_cost(space_telescope) ::: The money already spent is more than the additional cost required to complete the project\ntotal_cost(space_telescope) == spent(space_telescope) + additional_cost(space_telescope) ::: Total cost is the sum of money already spent and additional cost\n\n# Options\nQuestion ::: Which one of the following principles, if valid, would most help to justify the astronomer's argument?\nis_valid(Implies(spent(space_telescope) > total_cost(space_telescope) / 2, complete(space_telescope))) ::: (If more than half of the total cost of a project has already been spent, then the project should be completed.)"
    ]
  },
  {
    "id": "test_537",
    "context": "A distemper virus has caused two-thirds of the seal population in the North Sea to die since May 1 988. The explanation for the deaths cannot rest here, however. There must be a reason the normally latent virus could prevail so suddenly: clearly the severe pollution of the North Sea waters must have weakened the immune system of the seals so that they could no longer withstand the virus.",
    "question": "The argument concerning the immune system of the seals presupposes which one of the following?",
    "options": [
      "Pollution in the North Sea is no greater than pollution in the Mediterranean Sea, off the coast of North America, or in the Sea of Japan.",
      "There has been a gradual decline in the seal population of the North Sea during the past two centuries.",
      "There was no sudden mutation in the distemper virus which would have allowed the virus successfully to attack healthy North Sea seals by May 1988.",
      "Some species that provide food for the seals have nearly become extinct as a result of the pollution."
    ],
    "raw_logic_programs": [
      "# Declarations\nseals = EnumSort([NorthSea, Mediterranean, NorthAmerica, SeaOfJapan])\nvirus = EnumSort([latent, active])\npollution = Function([seals] -> [int])\nimmune_system = Function([seals] -> [int])\nvirus_state = Function([seals] -> [virus])\n\n# Constraints\nForAll([s:seals], pollution(s) >= 0) ::: Pollution levels are non-negative\nForAll([s:seals], immune_system(s) >= 0) ::: Immune system strength is non-negative\nvirus_state(NorthSea) == active ::: The virus is active in the North Sea\nvirus_state(Mediterranean) == latent ::: The virus is latent in the Mediterranean\nvirus_state(NorthAmerica) == latent ::: The virus is latent off the coast of North America\nvirus_state(SeaOfJapan) == latent ::: The virus is latent in the Sea of Japan\npollution(NorthSea) > pollution(Mediterranean) ::: The North Sea is more polluted than the Mediterranean\npollution(NorthSea) > pollution(NorthAmerica) ::: The North Sea is more polluted than off the coast of North America\npollution(NorthSea) > pollution(SeaOfJapan) ::: The North Sea is more polluted than the Sea of Japan\nimmune_system(NorthSea) < immune_system(Mediterranean) ::: The immune system of seals in the North Sea is weaker than in the Mediterranean\nimmune_system(NorthSea) < immune_system(NorthAmerica) ::: The immune system of seals in the North Sea is weaker than off the coast of North America\nimmune_system(NorthSea) < immune_system(SeaOfJapan) ::: The immune system of seals in the North Sea is weaker than in the Sea of Japan\n\n# Options\nQuestion ::: The argument concerning the immune system of the seals presupposes which one of the following?\nis_presupposed(virus_state(NorthSea) == active, Not(Exists([s:seals], virus_state(s) == active))) ::: (Pollution in the North Sea is no greater than pollution in the Mediterranean Sea, off the coast of North America, or in the Sea of Japan.\nis_presupposed(virus_state(NorthSea) == active, Exists([s:seals], immune_system(s) < immune_system(NorthSea))) ::: (There has been a gradual decline in the seal population of the North Sea during the past two centuries.\nis_presupposed(virus_state(NorthSea) == active, Not(Exists([s:seals], virus_state(s) == active))) ::: (There was no sudden mutation in the distemper virus which would have allowed the virus successfully to attack healthy North Sea seals by May 1988.\nis_presupposed(virus_state(NorthSea) == active, Exists([s:seals], pollution(s) > pollution(NorthSea))) ::: (Some species that provide food for the seals have nearly become extinct as a result of the pollution."
    ]
  },
  {
    "id": "test_538",
    "context": "Navigation in animals is defined as the animal' s ability to find its way from unfamiliar territory to points familiar to the animal but beyond the immediate range of the animal' s senses. Some naturalists claim that polar bears can navigate over considerable distances. As evidence, they cite an instance of a polar bear that returned to its home territory after being released over 500 kilometers (300 miles) away.",
    "question": "Which one of the following, if true, casts the most doubt on the validity of the evidence offered in support of the naturalists' claim?",
    "options": [
      "Polar bears are only one of many species of mammal whose members have been known to find their way home from considerable distances.",
      "The route along which the polar bear traveled consisted primarily of snow and drifting ice.",
      "The site at which the polar bear was released was on the bear's annual migration route.",
      "The polar bear stopped and changed course several times as it moved toward its home territory."
    ],
    "raw_logic_programs": [
      "# Declarations\nanimals = EnumSort([polar_bear])\nterritories = EnumSort([home, unfamiliar])\nroutes = EnumSort([migration_route, non_migration_route])\nnavigation_ability = Function([animals] -> [bool])\nreleased_site = Function([animals] -> [routes])\n\n# Constraints\nnavigation_ability(polar_bear) == True ::: Some naturalists claim that polar bears can navigate over considerable distances\nreleased_site(polar_bear) == non_migration_route ::: The polar bear was released over 500 kilometers away from its home territory\n\n# Options\nQuestion ::: Which one of the following, if true, casts the most doubt on the validity of the evidence offered in support of the naturalists' claim?\nis_doubtful(released_site(polar_bear) == migration_route) ::: (The site at which the polar bear was released was on the bear's annual migration route)\nis_doubtful(released_site(polar_bear) == non_migration_route) ::: (The route along which the polar bear traveled consisted primarily of snow and drifting ice)\nis_doubtful(navigation_ability(polar_bear) == False) ::: (The polar bear stopped and changed course several times as it moved toward its home territory)\nis_doubtful(navigation_ability(polar_bear) == True) ::: (Polar bears are only one of many species of mammal whose members have been known to find their way home from considerable distances)"
    ]
  },
  {
    "id": "test_539",
    "context": "Historians of North American architecture who have studied early nineteenth-century houses with wooden floors have observed that the boards used on the floors of bigger houses were generally much narrower than those used on the floors of smaller houses. These historians have argued that, since the people for whom the bigger houses were built were generally richer than the people for whom the smaller houses were built, floors made out of narrow floorboards were probably once a status symbol, designed to proclaim the owner' s wealth.",
    "question": "Which one of the following, if true, most helps to strengthen the historians' argument?",
    "options": [
      "Some early nineteenth-century houses had wide floorboards near the walls of each room and narrower floorboards in the center, where the floors were usually carpeted.",
      "More original floorboards have survived from big early nineteenth-century houses than from small early nineteenth-century houses.",
      "In the early nineteenth century, smaller houses generally had fewer rooms than did bigger houses.",
      "In the early nineteenth century, a piece of narrow floorboard was not significantly less expensive than a piece of wide floorboard of the same length."
    ],
    "raw_logic_programs": [
      "# Declarations\nhouses = EnumSort([big, small])\nfloorboards = EnumSort([narrow, wide])\nwealth = EnumSort([rich, not_rich])\nfloorboard_type = Function([houses] -> [floorboards])\nowner_wealth = Function([houses] -> [wealth])\n\n# Constraints\nForAll([h:houses], Implies(h == big, floorboard_type(h) == narrow)) ::: boards used on the floors of bigger houses were generally much narrower\nForAll([h:houses], Implies(h == small, floorboard_type(h) == wide)) ::: boards used on the floors of smaller houses were generally much wider\nForAll([h:houses], Implies(h == big, owner_wealth(h) == rich)) ::: people for whom the bigger houses were built were generally richer\nForAll([h:houses], Implies(h == small, owner_wealth(h) == not_rich)) ::: people for whom the smaller houses were built were generally not richer\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to strengthen the historians' argument?\nis_strengthening(ForAll([f:floorboards], Implies(f == narrow, cost(f) >= cost(wide)))) ::: (A) A piece of narrow floorboard was not significantly less expensive than a piece of wide floorboard of the same length.\nis_strengthening(Exists([h:houses], And(floorboard_type(h) == narrow, owner_wealth(h) == rich))) ::: (B) More original floorboards have survived from big early nineteenth-century houses than from small early nineteenth-century houses.\nis_strengthening(ForAll([h:houses], Implies(h == small, room_count(h) < room_count(big)))) ::: (C) In the early nineteenth century, smaller houses generally had fewer rooms than did bigger houses.\nis_strengthening(Exists([h:houses], And(floorboard_type(h) == narrow, carpeted(h) == true))) ::: (D) Some early nineteenth-century houses had wide floorboards near the walls of each room and narrower floorboards in the center, where the floors were usually carpeted."
    ]
  },
  {
    "id": "test_540",
    "context": "Lahar: We must now settle on a procedure for deciding on meeting agendas. Our club' s constitution allows three options: unanimous consent, majority vote, or assigning the task to a committee. Unanimous consent is unlikely. Forming a committee has usually led to factionalism and secret deals. Clearly, we should subject meeting agendas to majority vote.",
    "question": "Lahar's argument does which one of the following?",
    "options": [
      "suggests a change to a constitution on the basis of practical considerations",
      "recommends a choice based on the elimination of alternative options",
      "supports one preference by arguing against those who have advocated alternatives",
      "claims that one procedure is the appropriate method for reaching every decision in the club"
    ],
    "raw_logic_programs": [
      "# Declarations\noptions = EnumSort([unanimous_consent, majority_vote, committee])\nargument = Function([options] -> [bool])\n\n# Constraints\nNot(argument(unanimous_consent)) ::: Unanimous consent is unlikely\nNot(argument(committee)) ::: Forming a committee has usually led to factionalism and secret deals\n\n# Options\nQuestion ::: Lahar's argument does which one of the following?\nis_recommendation_based_on_elimination(argument(majority_vote)) ::: (recommends a choice based on the elimination of alternative options)\nis_suggestion_for_change_based_on_practical(argument(unanimous_consent)) ::: (suggests a change to a constitution on the basis of practical considerations)\nis_support_by_argument_against_alternatives(argument(committee)) ::: (supports one preference by arguing against those who have advocated alternatives)\nis_claim_for_universal_method(argument(majority_vote)) ::: (claims that one procedure is the appropriate method for reaching every decision in the club)"
    ]
  },
  {
    "id": "test_541",
    "context": "It can safely be concluded that there are at least as many trees in Seclee as there are in Martown.",
    "question": "From which one of the following does the conclusion logically follow?",
    "options": [
      "Martown is suffering from an epidemic of tree-virus infection.",
      "The average number of trees cut down annually in Martown is higher than in Seclee.",
      "Seclee is the region within which Martown is located.",
      "More trees were planted in Seclee in the past two years than in Martown."
    ],
    "raw_logic_programs": [
      "# Declarations\nlocations = EnumSort([Seclee, Martown])\ntrees = Function([locations] -> [int])\n\n# Constraints\ntrees(Seclee) >= trees(Martown) ::: It can safely be concluded that there are at least as many trees in Seclee as there are in Martown\n\n# Options\nQuestion ::: From which one of the following does the conclusion logically follow?\nis_valid(trees(Martown) <= trees(Seclee)) ::: (A) Martown is suffering from an epidemic of tree-virus infection.\nis_valid(trees(Martown) <= trees(Seclee)) ::: (B) The average number of trees cut down annually in Martown is higher than in Seclee.\nis_valid(trees(Martown) <= trees(Seclee)) ::: (C) Seclee is the region within which Martown is located.\nis_valid(trees(Martown) <= trees(Seclee)) ::: (D) More trees were planted in Seclee in the past two years than in Martown."
    ]
  },
  {
    "id": "test_542",
    "context": "Travel writer: A vacationer should choose an airline that has had an accident in the past 5 years. Though this may seem counterintuitive, studies show that the average airline has 1 accident every 5 years. So if an airline has had no accident during the past 5 years, the chances that the airline will have a crash are increased.",
    "question": "The flawed reasoning in the travel writer's argument is most similar to that in which one of the following arguments?",
    "options": [
      "Though until recently this chess grandmaster had responded to opening move X with move Y half of the time, in the current tournament he has responded to move X with move Y 90 percent of the time. Thus, in the next game of the current tournament, he is 90 percent likely to respond to move X with move Y.",
      "If there are 10 adult male baboons in a troop, the chance of an average adult male baboon ascending to dominance in any given year is 1 in 10. Thus, if an adult male baboon has been in the troop more than 10 years and has never ascended to dominance, then the chance of his doing so is now better than 1 in 10.",
      "A tossed coin has come up heads 100 times in a row. It is ttherefore reasonable to believe that the coin is not fair, and thus that it is more likely to come up heads than tails when it is flipped again.",
      "The average adolescent who works full-time in a certain country makes about 76 cents for every dollar that an adult who works full-time there makes. Ttherefore, since in this country the average adolescent who works part-time makes less than the average adolescent who works full-time, the average adolescent who works part-time makes less than 76 cents for every dollar made by an employed adult."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([travel_writer, chess_grandmaster, baboon, coin, adolescent])\nflawed_reasoning = Function([arguments] -> [bool])\n\n# Constraints\nflawed_reasoning(travel_writer) ::: The travel writer's argument is flawed\n\n# Options\nQuestion ::: The flawed reasoning in the travel writer's argument is most similar to that in which one of the following arguments?\nis_similar(flawed_reasoning(chess_grandmaster)) ::: (A)\nis_similar(flawed_reasoning(baboon)) ::: (B)\nis_similar(flawed_reasoning(coin)) ::: (C)\nis_similar(flawed_reasoning(adolescent)) ::: (D)"
    ]
  },
  {
    "id": "test_543",
    "context": "The chemical adenosine is released by brain cells when those cells are active. Adenosine then binds to more and more sites on cells in certain areas of the brain, as the total amount released gradually increases during wakefulness. During sleep, the number of sites to which adenosine is bound decreases. Some researchers have hypothesized that it is the cumulative binding of adenosine to a large number of sites that causes the onset of sleep.",
    "question": "Which of the following, if true, provides the most support for the researchers' hypothesis?",
    "options": [
      "Caffeine, which has the effect of making people remain wakeful, is known to interfere with the binding of adenosine to sites on brain cells.",
      "Even after long periods of sleep when adenosine is at its lowest concentration in the brain, the number of brain cells bound with adenosine remains very large.",
      "Besides binding to sites in the brain, adenosine is known to be involved in biochemical reactions throughout the body.",
      "Some areas of the brain that are relatively inactive nonetheless release some adenosine."
    ],
    "raw_logic_programs": [
      "# Declarations\nhypothesis = Function([bool])\nevidence = EnumSort([caffeine_interference, large_binding_after_sleep, adenosine_in_body, inactive_areas_release_adenosine])\n\n# Constraints\nhypothesis == True ::: Researchers hypothesize that cumulative binding of adenosine to a large number of sites causes sleep onset\n\n# Options\nQuestion ::: Which of the following, if true, provides the most support for the researchers' hypothesis?\nis_supportive(hypothesis, caffeine_interference) ::: (Caffeine, which has the effect of making people remain wakeful, is known to interfere with the binding of adenosine to sites on brain cells.)\nis_supportive(hypothesis, large_binding_after_sleep) ::: (Even after long periods of sleep when adenosine is at its lowest concentration in the brain, the number of brain cells bound with adenosine remains very large.)\nis_supportive(hypothesis, adenosine_in_body) ::: (Besides binding to sites in the brain, adenosine is known to be involved in biochemical reactions throughout the body.)\nis_supportive(hypothesis, inactive_areas_release_adenosine) ::: (Some areas of the brain that are relatively inactive nonetheless release some adenosine.)"
    ]
  },
  {
    "id": "test_544",
    "context": "If citizens do not exercise their right to vote, then democratic institutions will crumble and, as a consequence, much valuable social cohesion will be lost. Of course, one person' s vote can only make an imperceptible difference to the result of an election, but one must consider the likely effects of large numbers of people failing to vote. An act or omission by one person is not right if such an act or omission done by large numbers of people would be socially damaging. Organized society would be impossible if theft were common, though a single dishonest act on the part of a single person is likely to have an insignificant effect upon society.",
    "question": "Which one of the following most accurately expresses the main conclusion of the argument?",
    "options": [
      "People in a democracy should not neglect to vote.",
      "There is a risk that individual antisocial acts will be imitated by others.",
      "Large-scale dishonesty and neglect of public duty will be destructive of democratic and other societies.",
      "Dishonest acts and failure to vote are equally damaging."
    ],
    "raw_logic_programs": [
      "# Declarations\nacts = EnumSort([vote, theft])\neffects = EnumSort([imperceptible_difference, social_damage, loss_of_cohesion, destruction_of_society])\npeople = EnumSort([individual, large_numbers])\n\n# Constraints\nForAll([a:acts, p:people], Implies(p == individual, effects(a, p) == imperceptible_difference)) ::: One person's act or omission has an imperceptible effect\nForAll([a:acts], Implies(effects(a, large_numbers) == social_damage, effects(a, individual) != right)) ::: An act or omission by one person is not right if done by large numbers would be socially damaging\neffects(vote, large_numbers) == loss_of_cohesion ::: If large numbers do not vote, valuable social cohesion will be lost\neffects(theft, large_numbers) == destruction_of_society ::: Organized society would be impossible if theft were common\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the main conclusion of the argument?\nis_main_conclusion(effects(vote, individual) != right) ::: (A) People in a democracy should not neglect to vote.\nis_main_conclusion(Exists([a:acts], effects(a, individual) == social_damage)) ::: (B) There is a risk that individual antisocial acts will be imitated by others.\nis_main_conclusion(Exists([a:acts], effects(a, large_numbers) == destruction_of_society)) ::: (C) Large-scale dishonesty and neglect of public duty will be destructive of democratic and other societies.\nis_main_conclusion(ForAll([a:acts], effects(a, large_numbers) == social_damage)) ::: (D) Dishonest acts and failure to vote are equally damaging."
    ]
  },
  {
    "id": "test_545",
    "context": "A person who knowingly brings about misfortune should be blamed for it. However, in some cases a person who unwittingly brings about misfortune should not be blamed for it. For example, a person should never be blamed for unwittingly bringing about misfortune if the person could not reasonably have foreseen it.",
    "question": "The principles above, if valid, most help to justify the reasoning in which one of the following?",
    "options": [
      "When Dr. Fitzpatrick gave his patient the wrong medicine, he did not know that it would cause the patient to experience greatly increased blood pressure. So, if no one else knowingly did anything that contributed to the patient's increase in blood pressure, no one other than Dr. Fitzpatrick is to blame for it.",
      "Gougon had no reason to think that serving the hollandaise sauce would make his guests ill, but he was concerned that it might. Thus, if the hollandaise sauce does make Gougon's guests ill, Gougon should be blamed for it.",
      "Although he would have realized it if he had thought about it, it did not occur to Riley that parking his car in the center lane of Main Street could lead to a traffic accident. So, if a traffic accident does result from Riley's parking his car in the center lane of Main Street, he should not be blamed for it.",
      "Oblicek had no idea that suggesting to her brother that he take out a loan to expand his business was likely to cause the business to go bankrupt, nor could she have reasonably foreseen this. So, if the loan does cause her brother's business to go bankrupt, Oblicek should not be blamed for it."
    ],
    "raw_logic_programs": [
      "# Declarations\npersons = EnumSort([Dr_Fitzpatrick, Gougon, Riley, Oblicek])\nactions = EnumSort([wrong_medicine, serve_sauce, park_car, suggest_loan])\nmisfortunes = EnumSort([increased_blood_pressure, guests_ill, traffic_accident, business_bankrupt])\nforeseeable = Function([persons, actions] -> [bool])\nknowingly = Function([persons, actions] -> [bool])\nblamed = Function([persons, misfortunes] -> [bool])\n\n# Constraints\nForAll([p:persons, a:actions, m:misfortunes], Implies(knowingly(p, a), blamed(p, m))) ::: A person who knowingly brings about misfortune should be blamed for it\nForAll([p:persons, a:actions, m:misfortunes], Implies(Not(knowingly(p, a)), Not(blamed(p, m)))) ::: A person who unwittingly brings about misfortune should not be blamed for it if they could not reasonably have foreseen it\nForAll([p:persons, a:actions, m:misfortunes], Implies(Not(foreseeable(p, a)), Not(blamed(p, m)))) ::: A person should never be blamed for unwittingly bringing about misfortune if the person could not reasonably have foreseen it\n\n# Options\nQuestion ::: The principles above, if valid, most help to justify the reasoning in which one of the following?\nis_justified(And(knowingly(Dr_Fitzpatrick, wrong_medicine), blamed(Dr_Fitzpatrick, increased_blood_pressure))) ::: (A)\nis_justified(And(foreseeable(Gougon, serve_sauce), blamed(Gougon, guests_ill))) ::: (B)\nis_justified(And(Not(foreseeable(Riley, park_car)), Not(blamed(Riley, traffic_accident))) ::: (C)\nis_justified(And(Not(foreseeable(Oblicek, suggest_loan)), Not(blamed(Oblicek, business_bankrupt))) ::: (D)"
    ]
  },
  {
    "id": "test_546",
    "context": "A consumer magazine surveyed people who hadsought a psychologist' s help with a personal problem. Of those responding who had received treatment for 6 months or less, 20 percent claimed that treatment \"made things a lot better. \" Of those responding who had received longer treatment, 36 percent claimed that treatment \"made things a lot better. \" Ttherefore, psychological treatment lasting more than 6 months is more effective than shorter-term treatment.",
    "question": "Which one of the following, if true, most seriously weakens the argument?",
    "options": [
      "Many psychologists encourage their patients to receive treatment for longer than 6 months.",
      "Patients who feel they are doing well in treatment tend to remain in treatment, while those who are doing poorly tend to quit earlier.",
      "Of the respondents who had received treatment for longer than 6 months, 10 percent said that treatment made things worse.",
      "Patients who had received treatment for longer than 6 months were more likely to respond to the survey than were those who had received treatment for a shorter time."
    ],
    "raw_logic_programs": [
      "# Declarations\ntreatment_duration = EnumSort([short_term, long_term])\nresponses = EnumSort([better, worse, no_change])\nsurveyed = Function([treatment_duration] -> [responses])\n\n# Constraints\nsurveyed(short_term) == better ::: 20 percent of short-term treatment respondents claimed treatment \"made things a lot better\"\nsurveyed(long_term) == better ::: 36 percent of long-term treatment respondents claimed treatment \"made things a lot better\"\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the argument?\nis_weakening(Many_psychologists_encourage_longer_treatment) ::: (A)\nis_weakening(Patients_doing_well_remain_in_treatment) ::: (B)\nis_weakening(Long_term_treatment_made_things_worse) ::: (C)\nis_weakening(Long_term_patients_more_likely_to_respond) ::: (D)"
    ]
  },
  {
    "id": "test_547",
    "context": "In humans, ingested protein is broken down into amino acids, all of which must compete to enter the brain. Subsequent ingestion of sugars leads to the production of insulin, a hormone that breaks down the sugars and also rids the bloodstream of residual amino acids, except for tryptophan. Tryptophan then slips into the brain uncontested and is transformed into the chemical serotonin, increasing the brain' s serotonin level. Thus, sugars can play a major role in mood elevation, helping one to feel relaxed and anxiety-free.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Elevation of mood and freedom from anxiety require increasing the level of serotonin in the brain.",
      "Serotonin can be produced naturally only if tryptophan is present in the bloodstream.",
      "The consumption of protein-rich foods results in anxiety and a lowering of mood.",
      "Increasing the level of serotonin in the brain promotes relaxation and freedom from anxiety."
    ],
    "raw_logic_programs": [
      "# Declarations\namino_acids = EnumSort([tryptophan, other_amino_acids])\nhormones = EnumSort([insulin])\nchemicals = EnumSort([serotonin])\nstates = EnumSort([relaxed, anxious])\nactions = EnumSort([ingest_protein, ingest_sugars])\neffects = Function([actions] -> [states])\nlevels = Function([chemicals] -> [int])\n\n# Constraints\nForAll([a:amino_acids], Compete(a, tryptophan)) ::: All amino acids must compete to enter the brain\nForAll([a:amino_acids], Implies(ingest_sugars, And(Produce(insulin), Rid_bloodstream(a)))) ::: Ingestion of sugars leads to insulin production and removal of amino acids\nNot(Rid_bloodstream(tryptophan)) ::: Tryptophan is not removed from the bloodstream\nTransform(tryptophan, serotonin) ::: Tryptophan is transformed into serotonin\nImplies(ingest_sugars, Increase(levels(serotonin))) ::: Sugars increase serotonin levels\nImplies(Increase(levels(serotonin)), effects(ingest_sugars) == relaxed) ::: Increased serotonin leads to relaxation\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(Implies(effects(ingest_sugars) == relaxed, Increase(levels(serotonin)))) ::: (A) Elevation of mood and freedom from anxiety require increasing the level of serotonin in the brain.\nis_assumption(Implies(Produce(serotonin), Present(tryptophan))) ::: (B) Serotonin can be produced naturally only if tryptophan is present in the bloodstream.\nis_assumption(Implies(ingest_protein, effects(ingest_protein) == anxious)) ::: (C) The consumption of protein-rich foods results in anxiety and a lowering of mood.\nis_assumption(Implies(Increase(levels(serotonin)), effects(ingest_sugars) == relaxed)) ::: (D) Increasing the level of serotonin in the brain promotes relaxation and freedom from anxiety."
    ]
  },
  {
    "id": "test_548",
    "context": "Most people prefer to hire people they know. Thus it is difficult for people without business contacts to find good jobs. The only way to help such people find jobs is through nonfinancial incentives to change employers' behavior.",
    "question": "Which one of the following most accurately describes the role played in the argument by the claim that most people prefer to hire people they know?",
    "options": [
      "It is a conclusion for which the only support offered is that there is a need for nonfinancial incentives to change employers' behavior.",
      "It is a premise offered in support of the claim that people without business contacts have difficulty in finding good jobs.",
      "It is cited as an example of the general principle that nonfinancial incentives to change employers' behavior are necessary.",
      "It is cited as an explanation of why employers never hire those whom they do not know."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([most_people_prefer_to_hire_people_they_know, people_without_contacts_have_difficulty_finding_jobs, nonfinancial_incentives_are_needed, employers_never_hire_unknown_people])\nroles = EnumSort([conclusion, premise, example, explanation])\nplays_role = Function([statements] -> [roles])\n\n# Constraints\nplays_role(most_people_prefer_to_hire_people_they_know) == premise ::: It is a premise offered in support of the claim that people without business contacts have difficulty in finding good jobs\nplays_role(people_without_contacts_have_difficulty_finding_jobs) == conclusion\nplays_role(nonfinancial_incentives_are_needed) == conclusion\nplays_role(employers_never_hire_unknown_people) == explanation\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the argument by the claim that most people prefer to hire people they know?\nis_role(plays_role(most_people_prefer_to_hire_people_they_know) == conclusion) ::: (It is a conclusion for which the only support offered is that there is a need for nonfinancial incentives to change employers' behavior.)\nis_role(plays_role(most_people_prefer_to_hire_people_they_know) == premise) ::: (It is a premise offered in support of the claim that people without business contacts have difficulty in finding good jobs.)\nis_role(plays_role(most_people_prefer_to_hire_people_they_know) == example) ::: (It is cited as an example of the general principle that nonfinancial incentives to change employers' behavior are necessary.)\nis_role(plays_role(most_people_prefer_to_hire_people_they_know) == explanation) ::: (It is cited as an explanation of why employers never hire those whom they do not know.)"
    ]
  },
  {
    "id": "test_549",
    "context": "Astronomers have long thought that the irregularity in the orbit of the planet Neptune was adequately explained by the gravitational pull exerted on Neptune by the planet Pluto. The most recent observations of Pluto, however, indicate that this planet is much too small to exert the amount of gravitational pull on Neptune that astronomers once thought it did.",
    "question": "If the statements above are true, they provide the most support for which one of the following?",
    "options": [
      "There exists another, as yet undiscovered planet with an orbit beyond that of Pluto.",
      "Further observations of Pluto will eventually show it to be even smaller than it is now thought to be.",
      "Neptune is somewhat larger than scientists once believed it to be.",
      "The gravitational pull of Pluto is not the sole cause of Neptune's irregular orbit."
    ],
    "raw_logic_programs": [
      "# Declarations\nplanets = EnumSort([Neptune, Pluto])\ngravitational_pull = Function([planets, planets] -> [real])\nirregular_orbit = Function([planets] -> [bool])\n\n# Constraints\nirregular_orbit(Neptune) ::: Neptune has an irregular orbit\ngravitational_pull(Pluto, Neptune) < expected_pull ::: Pluto is too small to exert the expected gravitational pull on Neptune\n\n# Options\nQuestion ::: If the statements above are true, they provide the most support for which one of the following?\nis_supported(Exists([p:planets], And(p != Pluto, gravitational_pull(p, Neptune) > 0))) ::: (There exists another, as yet undiscovered planet with an orbit beyond that of Pluto.\nis_supported(gravitational_pull(Pluto, Neptune) < current_estimate) ::: (Further observations of Pluto will eventually show it to be even smaller than it is now thought to be.\nis_supported(Neptune_size > current_estimate) ::: (Neptune is somewhat larger than scientists once believed it to be.\nis_supported(Not(sole_cause(Pluto, irregular_orbit(Neptune)))) ::: (The gravitational pull of Pluto is not the sole cause of Neptune's irregular orbit."
    ]
  },
  {
    "id": "test_550",
    "context": "Lily: Admittedly, looking at poetics in translation should come from the bigger picture of accessibility to the reader. If the translator focuses on the literal linguistics of translation opposed to the content and emotion combined, the reader will not feel what is meant to be felt by the original poem or the translation. The translator has the obligation to rework the language into their own version of poetic feeling, even if the language is not translated in a word-by-word fashion. Madison: But having the literal translation is the closest we as readers can get to the original meaning of the poem. If we put our own twist of experience and emotion on translation work, we will be writing our own poetry, and not that of the original author' s. We would be doing a disfavor to the author by botching their truth. Literal translation is not entirely possible, but we should work to come as close as possible to the intended word or phrase expressed by the author.",
    "question": "Which one of the following most accurately expresses a point of disagreement between Lily and Madison?",
    "options": [
      "Whether critics should use translation work that is closest to the poem's original meaning.",
      "Whether a poem's cultivated feeling is more valuable than its literal meaning to its readers.",
      "Whether translation work is a useful endeavor to the poetic canon.",
      "Whether a translated poem can ever come as close to the truth as the original poem."
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([Lily, Madison])\nstatements = EnumSort([literal_translation, cultivated_feeling, usefulness, closeness_to_truth])\nagrees = Function([positions, statements] -> [bool])\n\n# Constraints\nagrees(Lily, cultivated_feeling) ::: Lily believes a poem's cultivated feeling is more valuable than its literal meaning to its readers\nNot(agrees(Lily, literal_translation)) ::: Lily does not prioritize literal translation\nagrees(Madison, literal_translation) ::: Madison believes that literal translation is closest to the poem's original meaning\nNot(agrees(Madison, cultivated_feeling)) ::: Madison does not prioritize cultivated feeling\n\n# Options\nQuestion ::: Which one of the following most accurately expresses a point of disagreement between Lily and Madison?\nis_disagreement(agrees(Lily, literal_translation) != agrees(Madison, literal_translation)) ::: (A) Whether critics should use translation work that is closest to the poem's original meaning.\nis_disagreement(agrees(Lily, cultivated_feeling) != agrees(Madison, cultivated_feeling)) ::: (B) Whether a poem's cultivated feeling is more valuable than its literal meaning to its readers.\nis_disagreement(agrees(Lily, usefulness) != agrees(Madison, usefulness)) ::: (C) Whether translation work is a useful endeavor to the poetic canon.\nis_disagreement(agrees(Lily, closeness_to_truth) != agrees(Madison, closeness_to_truth)) ::: (D) Whether a translated poem can ever come as close to the truth as the original poem."
    ]
  },
  {
    "id": "test_551",
    "context": "Charcoal from a hearth site in Colorado, 2, 000 miles south of Alaska, is known to be 11, 200 years old. Researchers reasoned that, since glaciers prevented human migration south from the Alaska-Siberia land bridge between 18, 000 and 11, 000 years ago, humans must have come to the Americas more than 18, 000 years ago.",
    "question": "Which of the following pieces of new evidence would cast doubt on the conclusion drawn above?",
    "options": [
      "Using new radiocarbon dating techniques, it was determined that the charcoal from the Colorado site was at least 11, 400 years old.",
      "Studies of various other hunting-gathering populations showed convincingly that, once the glaciers allowed passage, humans could have migrated from Alaska to Colorado in about 20 years.",
      "A computer simulation of glacial activity showed that it would already have been impossible for humans to travel south overland from Alaska 18, 500 years ago.",
      "Using new radiocarbon dating techniques, it was proved that an ice-free corridor allowed passage south from the Alaska-Siberia land bridge at least 11, 400 years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\nevidence = EnumSort([charcoal_age, migration_time, glacial_activity, ice_free_corridor])\ncasts_doubt = Function([evidence] -> [bool])\n\n# Constraints\ncasts_doubt(charcoal_age) == False ::: Using new radiocarbon dating techniques, it was determined that the charcoal from the Colorado site was at least 11,400 years old does not cast doubt on the conclusion\ncasts_doubt(migration_time) == True ::: Studies of various other hunting-gathering populations showed convincingly that, once the glaciers allowed passage, humans could have migrated from Alaska to Colorado in about 20 years casts doubt on the conclusion\ncasts_doubt(glacial_activity) == False ::: A computer simulation of glacial activity showed that it would already have been impossible for humans to travel south overland from Alaska 18,500 years ago does not cast doubt on the conclusion\ncasts_doubt(ice_free_corridor) == True ::: Using new radiocarbon dating techniques, it was proved that an ice-free corridor allowed passage south from the Alaska-Siberia land bridge at least 11,400 years ago casts doubt on the conclusion\n\n# Options\nQuestion ::: Which of the following pieces of new evidence would cast doubt on the conclusion drawn above?\nis_valid(casts_doubt(charcoal_age)) ::: (A)\nis_valid(casts_doubt(migration_time)) ::: (B)\nis_valid(casts_doubt(glacial_activity)) ::: (C)\nis_valid(casts_doubt(ice_free_corridor)) ::: (D)"
    ]
  },
  {
    "id": "test_552",
    "context": "Rotelle: You are too old to address effectively the difficult issues facing the country, such as nuclear power, poverty, and pollution. Sims: I don' t want to make age an issue in this campaign, so I will not comment on your youth and inexperience.",
    "question": "Sims does which one of the following?",
    "options": [
      "shows that Rotelle's statement is self-contradictory",
      "demonstrates that Rotelle's claim is incorrect",
      "fails to respond directly to Rotelle's claim",
      "avoids mentioning the issue of age"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Rotelle, Sims])\nissues = EnumSort([nuclear_power, poverty, pollution, age, youth, inexperience])\naddresses = Function([statements, issues] -> [bool])\n\n# Constraints\naddresses(Rotelle, nuclear_power) ::: Rotelle claims Sims is too old to address nuclear power\naddresses(Rotelle, poverty) ::: Rotelle claims Sims is too old to address poverty\naddresses(Rotelle, pollution) ::: Rotelle claims Sims is too old to address pollution\naddresses(Sims, age) ::: Sims mentions the issue of age\nNot(addresses(Sims, youth)) ::: Sims avoids mentioning youth\nNot(addresses(Sims, inexperience)) ::: Sims avoids mentioning inexperience\n\n# Options\nQuestion ::: Sims does which one of the following?\nis_valid(Not(addresses(Sims, Rotelle))) ::: (shows that Rotelle's statement is self-contradictory)\nis_valid(Not(addresses(Sims, Rotelle))) ::: (demonstrates that Rotelle's claim is incorrect)\nis_valid(Not(addresses(Sims, nuclear_power)) And Not(addresses(Sims, poverty)) And Not(addresses(Sims, pollution))) ::: (fails to respond directly to Rotelle's claim)\nis_valid(Not(addresses(Sims, age))) ::: (avoids mentioning the issue of age)"
    ]
  },
  {
    "id": "test_553",
    "context": "Compared to nonprofit hospitals of the same size, investor-owned hospitals require less public investment in the form of tax breaks, use fewer employees, and have higher occupancy levels. It can ttherefore be concluded that investor-owned hospitals are a better way of delivering medical care than are nonprofit hospitals.",
    "question": "Which one of the following, if true, most undermines the conclusion drawn above?",
    "options": [
      "Patients in nonprofit hospitals recover more quickly than do patients with comparable illnesses in investor-owned hospitals.",
      "Nonprofit hospitals charge more per bed than do investor-owned hospitals.",
      "Nonprofit hospitals receive more donations than do investor-owned hospitals.",
      "Nonprofit hospitals do more fundraising than do investor-owned hospitals."
    ],
    "raw_logic_programs": [
      "# Declarations\nhospitals = EnumSort([investor_owned, nonprofit])\nmetrics = EnumSort([public_investment, employees, occupancy, recovery_rate])\ncomparison = Function([metrics, hospitals] -> [int])\n\n# Constraints\ncomparison(public_investment, investor_owned) < comparison(public_investment, nonprofit) ::: Investor-owned hospitals require less public investment in the form of tax breaks\ncomparison(employees, investor_owned) < comparison(employees, nonprofit) ::: Investor-owned hospitals use fewer employees\ncomparison(occupancy, investor_owned) > comparison(occupancy, nonprofit) ::: Investor-owned hospitals have higher occupancy levels\n\n# Options\nQuestion ::: Which one of the following, if true, most undermines the conclusion drawn above?\ncomparison(recovery_rate, nonprofit) > comparison(recovery_rate, investor_owned) ::: (A) Patients in nonprofit hospitals recover more quickly than do patients with comparable illnesses in investor-owned hospitals\ncomparison(public_investment, nonprofit) > comparison(public_investment, investor_owned) ::: (B) Nonprofit hospitals charge more per bed than do investor-owned hospitals\ncomparison(public_investment, nonprofit) > comparison(public_investment, investor_owned) ::: (C) Nonprofit hospitals receive more donations than do investor-owned hospitals\ncomparison(public_investment, nonprofit) > comparison(public_investment, investor_owned) ::: (D) Nonprofit hospitals do more fundraising than do investor-owned hospitals"
    ]
  },
  {
    "id": "test_554",
    "context": "Packaging is vital to a product' s commercial success. For example, the maker of a popular drink introduced a \"new, improved\" version which succeeded in blind taste tests. However, customers did not buy the product when marketed, mainly because the can, almost identical to that used for the earlier version of the beverage, made consumers expect that the new product would share certain features of the old, an expectation not satisfied by the new product.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "To succeed in the market, a new product should not be packaged in a way that creates expectations that it does not meet.",
      "Products generally succeed in the market if they are packaged in a manner that accurately reflects their nature.",
      "Proper product packaging is more important than the quality of the product.",
      "Changing the packaging of a product will not improve the product's sales unless the product is also changed."
    ],
    "raw_logic_programs": [
      "# Declarations\nproducts = EnumSort([old_product, new_product])\nfeatures = EnumSort([taste, packaging])\nexpectations = Function([products, features] -> [bool])\nsuccess = Function([products] -> [bool])\n\n# Constraints\nsuccess(new_product) == False ::: The new product did not succeed in the market\nexpectations(new_product, packaging) == expectations(old_product, packaging) ::: The packaging of the new product was almost identical to the old product\nexpectations(new_product, taste) != expectations(old_product, taste) ::: The taste of the new product was different from the old product\nForAll([f:features], Implies(expectations(new_product, f) == expectations(old_product, f), expectations(new_product, f) == True)) ::: Consumers expected the new product to share features of the old product\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(Implies(expectations(new_product, packaging) == expectations(old_product, packaging), success(new_product) == False)) ::: (A) To succeed in the market, a new product should not be packaged in a way that creates expectations that it does not meet.\nis_supported(Implies(ForAll([f:features], expectations(new_product, f) == expectations(old_product, f)), success(new_product) == True)) ::: (B) Products generally succeed in the market if they are packaged in a manner that accurately reflects their nature.\nis_supported(Implies(success(new_product) == False, expectations(new_product, packaging) == expectations(old_product, packaging))) ::: (C) Proper product packaging is more important than the quality of the product.\nis_supported(Implies(expectations(new_product, packaging) != expectations(old_product, packaging), success(new_product) == False)) ::: (D) Changing the packaging of a product will not improve the product's sales unless the product is also changed."
    ]
  },
  {
    "id": "test_555",
    "context": "In one study, hospital patients' immune systems grew stronger when the patients viewed comic videos. This indicates that laughter can aid recovery from illness. But much greater gains in immune system strength occurred in the patients whose tendency to laugh was greater to begin with. So hospital patients with a greater tendency to laugh are helped more in their recovery from illness even when they laugh a little than other patients are helped when they laugh a greater amount.",
    "question": "The argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "overlooks the possibility that the patients whose tendency to laugh was greater to begin with laughed more at the comic videos than did the other patients",
      "takes for granted that the gains in immune system strength did not themselves influence the patients' tendency to laugh",
      "fails to address adequately the possibility that the patients whose tendency to laugh was greatest to begin with already had stronger immune systems than the other patients",
      "presumes, without providing justification, that hospital patients have immune systems representative of those of the entire population"
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([greater_tendency, lesser_tendency])\nimmune_strength = Function([patients] -> [int])\nlaughter_amount = Function([patients] -> [int])\n\n# Constraints\nimmune_strength(greater_tendency) > immune_strength(lesser_tendency) ::: much greater gains in immune system strength occurred in the patients whose tendency to laugh was greater to begin with\nlaughter_amount(greater_tendency) > laughter_amount(lesser_tendency) ::: patients whose tendency to laugh was greater to begin with laughed more at the comic videos\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it\noverlooks_possibility(immune_strength(greater_tendency) > immune_strength(lesser_tendency) and laughter_amount(greater_tendency) > laughter_amount(lesser_tendency)) ::: (overlooks the possibility that the patients whose tendency to laugh was greater to begin with laughed more at the comic videos than did the other patients)\ntakes_for_granted(immune_strength(greater_tendency) > immune_strength(lesser_tendency) and laughter_amount(greater_tendency) == laughter_amount(lesser_tendency)) ::: (takes for granted that the gains in immune system strength did not themselves influence the patients' tendency to laugh)\nfails_to_address(immune_strength(greater_tendency) > immune_strength(lesser_tendency) and laughter_amount(greater_tendency) == laughter_amount(lesser_tendency)) ::: (fails to address adequately the possibility that the patients whose tendency to laugh was greatest to begin with already had stronger immune systems than the other patients)\npresumes_without_justification(immune_strength(greater_tendency) == immune_strength(lesser_tendency) and laughter_amount(greater_tendency) == laughter_amount(lesser_tendency)) ::: (presumes, without providing justification, that hospital patients have immune systems representative of those of the entire population)"
    ]
  },
  {
    "id": "test_556",
    "context": "A company with long-outstanding bills owed by its customers can assign those bills to a collection agency that pays the company a fraction of their amount and then tries to collect payment from the customers. Since these agencies pay companies only 15 percent of the total amount of the outstanding bills, a company interested in reducing losses from long-outstanding bills would be well advised to pursue its debtors on its own.",
    "question": "The argument depends on the assumption that",
    "options": [
      "the cost to a company of pursuing its debtors on its own for payment of long-outstanding bills does not exceed 15 percent of the total amount of those bills",
      "unless most of the customers of a company pay their bills, that company in the long run will not be profitable",
      "a company that pursues its debtors on its own typically collects more than 15 percent of the total amount of the long-outstanding bills that it is owed",
      "collection agencies that are assigned bills for collection by companies are unsuccessful in collecting, on average, only 15 percent of the total amount of those bills"
    ],
    "raw_logic_programs": [
      "# Declarations\nbills = EnumSort([long_outstanding])\nactions = EnumSort([assign_to_agency, pursue_own])\ncosts = Function([actions] -> [float])\ncollections = Function([actions] -> [float])\n\n# Constraints\ncollections(assign_to_agency) == 0.15 ::: collection agencies pay companies only 15 percent of the total amount of the outstanding bills\n\n# Options\nQuestion ::: The argument depends on the assumption that\nis_assumption(costs(pursue_own) <= 0.15) ::: (A) the cost to a company of pursuing its debtors on its own for payment of long-outstanding bills does not exceed 15 percent of the total amount of those bills\nis_assumption(Implies(Not(Exists([c:customers], pays(c))), Not(profitable))) ::: (B) unless most of the customers of a company pay their bills, that company in the long run will not be profitable\nis_assumption(collections(pursue_own) > 0.15) ::: (C) a company that pursues its debtors on its own typically collects more than 15 percent of the total amount of the long-outstanding bills that it is owed\nis_assumption(collections(assign_to_agency) == 0.15) ::: (D) collection agencies that are assigned bills for collection by companies are unsuccessful in collecting, on average, only 15 percent of the total amount of those bills"
    ]
  },
  {
    "id": "test_557",
    "context": "A person can develop or outgrow asthma at any age. In children under ten, asthma is twice as likely to develop in boys. Boys are less likely than girls to outgrow asthma, yet by adolescence the percentage of boys with asthma is about the same as the percentage of girls with asthma because a large number of girls develop asthma in early adolescence.",
    "question": "Assuming the truth of the passage, one can conclude from it that the number of adolescent boys with asthma is approximately equal to the number of adolescent girls with asthma, if one also knows that",
    "options": [
      "children who develop asthma before two years of age are unlikely to outgrow it",
      "a tendency toward asthma is often inherited",
      "there are approximately equal numbers of adolescent boys and adolescent girls in the population",
      "the development of asthma in childhood is not closely related to climate or environment"
    ],
    "raw_logic_programs": [
      "# Declarations\nages = EnumSort([children_under_ten, adolescence])\ngenders = EnumSort([boys, girls])\nasthma_status = EnumSort([develops_asthma, outgrows_asthma])\npopulation = Function([ages, genders] -> [int])\nasthma_population = Function([ages, genders, asthma_status] -> [int])\n\n# Constraints\nasthma_population(children_under_ten, boys, develops_asthma) == 2 * asthma_population(children_under_ten, girls, develops_asthma) ::: In children under ten, asthma is twice as likely to develop in boys\nasthma_population(children_under_ten, boys, outgrows_asthma) < asthma_population(children_under_ten, girls, outgrows_asthma) ::: Boys are less likely than girls to outgrow asthma\nasthma_population(adolescence, boys, develops_asthma) + asthma_population(adolescence, boys, outgrows_asthma) == asthma_population(adolescence, girls, develops_asthma) + asthma_population(adolescence, girls, outgrows_asthma) ::: By adolescence, the percentage of boys with asthma is about the same as the percentage of girls with asthma\n\n# Options\nQuestion ::: One can conclude from it that the number of adolescent boys with asthma is approximately equal to the number of adolescent girls with asthma, if one also knows that\nis_valid(population(adolescence, boys) == population(adolescence, girls)) ::: (C) there are approximately equal numbers of adolescent boys and adolescent girls in the population"
    ]
  },
  {
    "id": "test_558",
    "context": "FastMart, a convenience store chain, is planning to add pancake syrup to the items it sells. FastMart stores do not have shelf space to stock more than one variety of syrup. Surveys of FastMart customers indicate that one-fourth of them prefer low-calorie syrup, while three-fourths prefer regular syrup. Since FastMart' s highest priority is to maximize sales, the obvious strategy for it is to stock regular syrup.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "Sales of syrup are not expected to account for a large proportion of total dollar sales at the average FastMart store.",
      "People buying pancake syrup at convenience stores, unlike those buying it at supermarkets, generally buy it only a few times.",
      "In general, customers who prefer regular syrup will buy low-calorie syrup if regular is unavailable, but those who prefer low-calorie will not buy regular syrup.",
      "Regular syrup does not sell for a higher price per unit than low-calorie syrup."
    ],
    "raw_logic_programs": [
      "# Declarations\npreferences = EnumSort([low_calorie, regular])\ncustomers = Function([preferences] -> [int])\nsales_strategy = Function([preferences] -> [bool])\n\n# Constraints\ncustomers(low_calorie) == 1/4 ::: One-fourth of customers prefer low-calorie syrup\ncustomers(regular) == 3/4 ::: Three-fourths of customers prefer regular syrup\nsales_strategy(regular) == True ::: FastMart's strategy is to stock regular syrup\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(And(sales_strategy(regular), Not(sales_strategy(low_calorie)))) ::: (A) Sales of syrup are not expected to account for a large proportion of total dollar sales at the average FastMart store.\nis_weakening(And(sales_strategy(regular), Not(sales_strategy(low_calorie)))) ::: (B) People buying pancake syrup at convenience stores, unlike those buying it at supermarkets, generally buy it only a few times.\nis_weakening(And(sales_strategy(regular), Not(sales_strategy(low_calorie)), customers(regular) > customers(low_calorie))) ::: (C) In general, customers who prefer regular syrup will buy low-calorie syrup if regular is unavailable, but those who prefer low-calorie will not buy regular syrup.\nis_weakening(And(sales_strategy(regular), Not(sales_strategy(low_calorie)))) ::: (D) Regular syrup does not sell for a higher price per unit than low-calorie syrup."
    ]
  },
  {
    "id": "test_559",
    "context": "Over Several months new residents of a housing development complained to their town council about unpleasant barnyard odors from a nearby farm. The council concluded that, because the residents were not used to rural life, they had mistakenly identified as a barnyard odor the smell of the town' s new, leaf-composting pile, located on a site adjacent to the farm.",
    "question": "Which of the following, if true, would most seriously weaken the town council's conclusion?",
    "options": [
      "The farm was selected as the location for the leaf-composting pile before the housing development was built.",
      "Some of the new residents had moved to this town in order to lead a more rural life.",
      "The new residents' complaints started before the establishment of the town's leaf-composting pile.",
      "No one else in the town had complained of unpleasant odors from the farm."
    ],
    "raw_logic_programs": [
      "# Declarations\nresidents = EnumSort([new_residents, other_residents])\nlocations = EnumSort([farm, leaf_composting_pile])\nevents = EnumSort([complaints, establishment])\ncauses = Function([residents, events] -> [locations])\n\n# Constraints\nForAll([r:residents], Exists([l:locations], causes(r, complaints) == l)) ::: New residents complained about odors from a location\ncauses(new_residents, complaints) == leaf_composting_pile ::: The council concluded that the new residents mistakenly identified the leaf-composting pile as the source of the odor\n\n# Options\nQuestion ::: Which of the following, if true, would most seriously weaken the town council's conclusion?\nis_weakening(causes(new_residents, complaints) == farm) ::: (The farm was selected as the location for the leaf-composting pile before the housing development was built.\nis_weakening(causes(new_residents, complaints) == farm) ::: (Some of the new residents had moved to this town in order to lead a more rural life.\nis_weakening(causes(new_residents, complaints) == farm) ::: (The new residents' complaints started before the establishment of the town's leaf-composting pile.\nis_weakening(causes(new_residents, complaints) == farm) ::: (No one else in the town had complained of unpleasant odors from the farm."
    ]
  },
  {
    "id": "test_560",
    "context": "Sociologist: A contention of many of my colleagues -- that the large difference between the wages of the highest- and lowest-paid workers will inevitably become a source of social friction -- is unfounded. Indeed, the high differential should have an opposite effect, for it means that companies will be able to hire freely in response to changing conditions. Social friction arises not from large wage differences, but from wage levels that are static or slow changing.",
    "question": "Which one of the following is an assumption required by the sociologist's argument?",
    "options": [
      "A company's ability to respond swiftly to changing conditions always benefits its workers.",
      "Even relatively well-paid workers may become dissatisfied with their jobs if their wages never change.",
      "When companies can hire freely in response to changing conditions, wage levels do not tend to be static or slow changing.",
      "People who expect their wages to rise react differently than do others to obvious disparities in income."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([sociologist])\nstatements = EnumSort([large_wage_difference, social_friction, hire_freely, static_wage_levels])\nassumptions = Function([arguments] -> [statements])\n\n# Constraints\nimplies(large_wage_difference, Not(social_friction)) ::: The sociologist argues that large wage differences do not cause social friction.\nimplies(hire_freely, Not(static_wage_levels)) ::: The sociologist claims that hiring freely prevents static or slow-changing wage levels.\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the sociologist's argument?\nis_required(assumptions(sociologist) == hire_freely) ::: (A company's ability to respond swiftly to changing conditions always benefits its workers.\nis_required(assumptions(sociologist) == static_wage_levels) ::: (Even relatively well-paid workers may become dissatisfied with their jobs if their wages never change.\nis_required(assumptions(sociologist) == hire_freely) ::: (When companies can hire freely in response to changing conditions, wage levels do not tend to be static or slow changing.\nis_required(assumptions(sociologist) == large_wage_difference) ::: (People who expect their wages to rise react differently than do others to obvious disparities in income."
    ]
  },
  {
    "id": "test_561",
    "context": "Roxanne: To protect declining elephant herds from poachers seeking to obtain ivory, people concerned about such endangered species should buy no new ivory. The new ivory and old ivory markets are entirely independent, however, so purchasing antique ivory provides no incentive to poachers to obtain more new ivory. Ttherefore, only antique ivory -- that which is at least 75 years old -- can be bought in good conscience. Salvador: Since current demand for antique ivory exceeds the supply, many people who are unconcerned about endangered species but would prefer to buy antique ivory are buying new ivory instead. People sharing your concern about endangered species, ttherefore, should refrain from buying any ivory at all -- thereby ensuring that demand for new ivory will drop.",
    "question": "A point on which Roxanne's and Salvador's views differ is whether",
    "options": [
      "a widespread refusal to buy new ivory will have a substantial effect on the survival of elephants",
      "there are substances that can serve as satisfactory substitutes for ivory in its current uses",
      "people should take steps to avert a threat to the continued existence of elephant herds",
      "decreased demand for antique ivory would cause a decrease in demand for new ivory"
    ],
    "raw_logic_programs": [
      "# Declarations\nviews = EnumSort([Roxanne, Salvador])\nivory_types = EnumSort([new_ivory, antique_ivory])\neffects = EnumSort([survival_of_elephants, demand_for_new_ivory])\npositions = Function([views, effects] -> [bool])\n\n# Constraints\npositions(Roxanne, demand_for_new_ivory) == False ::: Roxanne believes that the markets for new and antique ivory are independent\npositions(Salvador, demand_for_new_ivory) == True ::: Salvador believes that decreased demand for antique ivory would decrease demand for new ivory\n\n# Options\nQuestion ::: A point on which Roxanne's and Salvador's views differ is whether\nis_differ(positions(Roxanne, survival_of_elephants), positions(Salvador, survival_of_elephants)) ::: (a widespread refusal to buy new ivory will have a substantial effect on the survival of elephants)\nis_differ(positions(Roxanne, demand_for_new_ivory), positions(Salvador, demand_for_new_ivory)) ::: (decreased demand for antique ivory would cause a decrease in demand for new ivory)\nis_differ(positions(Roxanne, None), positions(Salvador, None)) ::: (there are substances that can serve as satisfactory substitutes for ivory in its current uses)\nis_differ(positions(Roxanne, None), positions(Salvador, None)) ::: (people should take steps to avert a threat to the continued existence of elephant herds)"
    ]
  },
  {
    "id": "test_562",
    "context": "A landlord needed to replace the air-conditioning unit in a small rental home. The salesperson at the appliance store showed the landlord two air-conditioning units with identical prices. She told the landlord that the Sno-Queen was the most powerful unit for the price, but advised him to purchase the less powerful FreezAll unit, saying that the FreezAll was powerful enough for his needs.",
    "question": "The salesperson's advice to the landlord most closely conforms to which one of the following principles?",
    "options": [
      "When advising customers about a purchase of a home appliance, a salesperson should direct the customer toward the product that yields the highest commission for the salesperson.",
      "When a consumer is choosing between two different brands of a particular home appliance, the consumer should select the less powerful product only if it is also less expensive.",
      "When a consumer is choosing a home appliance, that consumer should choose the least powerful product that meets his or her needs.",
      "A salesperson should always recommend that a customer buy the product that represents the best value."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([highest_commission, less_expensive, least_powerful, best_value])\nadvice = Function([principles] -> [bool])\n\n# Constraints\nadvice(least_powerful) ::: The salesperson advised the landlord to purchase the less powerful FreezAll unit, saying it was powerful enough for his needs.\n\n# Options\nQuestion ::: The salesperson's advice to the landlord most closely conforms to which one of the following principles?\nis_valid(advice(highest_commission)) ::: (A) When advising customers about a purchase of a home appliance, a salesperson should direct the customer toward the product that yields the highest commission for the salesperson.\nis_valid(advice(less_expensive)) ::: (B) When a consumer is choosing between two different brands of a particular home appliance, the consumer should select the less powerful product only if it is also less expensive.\nis_valid(advice(least_powerful)) ::: (C) When a consumer is choosing a home appliance, that consumer should choose the least powerful product that meets his or her needs.\nis_valid(advice(best_value)) ::: (D) A salesperson should always recommend that a customer buy the product that represents the best value."
    ]
  },
  {
    "id": "test_563",
    "context": "Many people acquire software programs for their home computers by illegally copying those programs rather than purchasing them. People who own home computers must be making, on average, fewer illegal copies of software programs than before, however, since the average number of software programs that people purchase to use on their home computers has increased substantially over the past five years.",
    "question": "Which of the following, if true, most strengthens the argument?",
    "options": [
      "The number of home computers in use has increased substantially over the past five years.",
      "Few people who prefer to copy computer software programs illegally cannot copy the software programs they want because they have no acquaintances who have those software programs.",
      "Five years ago, about half of the software programs used on home computers had been illegally copied rather than purchased.",
      "On average, people with home computers have the same number of software programs today as people with home computers did five years ago"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([home_computer_owners])\ntime_periods = EnumSort([five_years_ago, today])\nactions = EnumSort([illegal_copying, purchasing])\nsoftware_programs = Function([people, time_periods, actions] -> [int])\n\n# Constraints\nForAll([p:people], software_programs(p, today, purchasing) > software_programs(p, five_years_ago, purchasing)) ::: The average number of software programs that people purchase to use on their home computers has increased substantially over the past five years.\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the argument?\nis_strongest(And(Count([p:people], software_programs(p, today, illegal_copying) < software_programs(p, five_years_ago, illegal_copying)) > 0)) ::: (The number of home computers in use has increased substantially over the past five years.\nis_strongest(And(ForAll([p:people], Exists([a:actions], software_programs(p, today, a) > 0)))) ::: (Few people who prefer to copy computer software programs illegally cannot copy the software programs they want because they have no acquaintances who have those software programs.\nis_strongest(And(Exists([p:people], software_programs(p, five_years_ago, illegal_copying) > software_programs(p, five_years_ago, purchasing)))) ::: (Five years ago, about half of the software programs used on home computers had been illegally copied rather than purchased.\nis_strongest(And(ForAll([p:people], software_programs(p, today, purchasing) + software_programs(p, today, illegal_copying) == software_programs(p, five_years_ago, purchasing) + software_programs(p, five_years_ago, illegal_copying)))) ::: (On average, people with home computers have the same number of software programs today as people with home computers did five years ago"
    ]
  },
  {
    "id": "test_564",
    "context": "Some people claim that elected officials must avoid even the appearance of impropriety in office. Yet since actions that give the appearance of impropriety are not necessarily improper, the only reason for an elected official to avoid the appearance of impropriety is to maintain public approval and popularity. No one, however, not even a public official, has an obligation to be popular or to maintain public approval.",
    "question": "The argument is structured so as to lead to which one of the following conclusions?",
    "options": [
      "All elected officials have a vested interest in maintaining a high public approval rating.",
      "Elected officials who abuse the power of their office have an obligation at least to appear to be fulfilling the obligations of their office.",
      "The public never approves of an elected official who appears to have behaved improperly in office.",
      "No elected official has an obligation to avoid the appearance of impropriety."
    ],
    "raw_logic_programs": [
      "# Declarations\nelected_officials = EnumSort([official])\nactions = EnumSort([improper, appearance_of_impropriety])\nobligations = EnumSort([maintain_public_approval, avoid_appearance_of_impropriety])\n\n# Constraints\nForAll([a:actions], Implies(a == appearance_of_impropriety, Not(a == improper))) ::: Actions that give the appearance of impropriety are not necessarily improper\nForAll([o:elected_officials], Implies(o == official, Not(obligations == maintain_public_approval))) ::: No one, not even a public official, has an obligation to maintain public approval\n\n# Options\nQuestion ::: The argument is structured so as to lead to which one of the following conclusions?\nis_conclusion(No(elected_officials, obligations == avoid_appearance_of_impropriety)) ::: (D) No elected official has an obligation to avoid the appearance of impropriety"
    ]
  },
  {
    "id": "test_565",
    "context": "Sea turtles nest only at their own birthplaces. After hatching on the beach, the turtles enter the water to begin their far-ranging migration, only returning to their birthplaces to nest some 15 to 30 years later. It has been hypothesized that newborn sea turtles learn the smell of their birth environment, and it is this smell that stimulates the turtles to return to nest.",
    "question": "Which one of the following, if true, would cast the most serious doubt on the hypothesis in the passage?",
    "options": [
      "Sea turtles exposed to a variety of environments under experimental conditions preferred the environment that contained sand from their own birthplaces.",
      "Electronic tags attached to sea turtles did not alter their nesting patterns.",
      "Sea turtles that had their sense of smell destroyed by exposure to petroleum products returned to nest at their own birthplaces.",
      "Unlike other types of turtles, sea turtles have a well-developed sense of smell."
    ],
    "raw_logic_programs": [
      "# Declarations\nturtles = EnumSort([sea_turtles])\nenvironments = EnumSort([birthplace, other])\nconditions = EnumSort([normal, altered])\nnesting = Function([turtles, environments, conditions] -> [bool])\n\n# Constraints\nForAll([t:turtles], nesting(t, birthplace, normal)) ::: Sea turtles nest only at their own birthplaces under normal conditions\n\n# Options\nQuestion ::: Which one of the following, if true, would cast the most serious doubt on the hypothesis in the passage?\nis_doubtful(nesting(sea_turtles, birthplace, altered) == True) ::: (Sea turtles exposed to a variety of environments under experimental conditions preferred the environment that contained sand from their own birthplaces.\nis_doubtful(nesting(sea_turtles, birthplace, altered) == True) ::: (Electronic tags attached to sea turtles did not alter their nesting patterns.\nis_doubtful(nesting(sea_turtles, birthplace, altered) == True) ::: (Sea turtles that had their sense of smell destroyed by exposure to petroleum products returned to nest at their own birthplaces.\nis_doubtful(nesting(sea_turtles, birthplace, altered) == True) ::: (Unlike other types of turtles, sea turtles have a well-developed sense of smell."
    ]
  },
  {
    "id": "test_566",
    "context": "Biologists have noted reproductive abnormalities in fish that are immediately downstream of paper mills. One possible cause is dioxin, which paper mills release daily and which can alter the concentration of hormones in fish. However, dioxin is unlikely to be the cause, since the fish recover normal hormone concentrations relatively quickly during occasional mill shutdowns and dioxin decomposes very slowly in the environment.",
    "question": "Which one of the following statements, if true, most seriously weakens the argument?",
    "options": [
      "Some of the studies that show that fish recover quickly during shutdowns were funded by paper manufacturers.",
      "Normal river currents carry the dioxin present in the river far downstream in a few hours.",
      "The connection between hormone concentrations and reproductive abnormalities is not thoroughly understood.",
      "Some of the fish did not recover rapidly from the physiological changes that were induced by the changes in hormone concentrations."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens_argument = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as it is a logical reasoning problem based on the provided statements.\n\n# Options\nQuestion ::: Which one of the following statements, if true, most seriously weakens the argument?\nweakens_argument(A) ::: (Some of the studies that show that fish recover quickly during shutdowns were funded by paper manufacturers.)\nweakens_argument(B) ::: (Normal river currents carry the dioxin present in the river far downstream in a few hours.)\nweakens_argument(C) ::: (The connection between hormone concentrations and reproductive abnormalities is not thoroughly understood.)\nweakens_argument(D) ::: (Some of the fish did not recover rapidly from the physiological changes that were induced by the changes in hormone concentrations.)"
    ]
  },
  {
    "id": "test_567",
    "context": "Vorland' s government is planning a nationwide ban on smoking in restaurants. The objection that the ban would reduce restaurants' revenues is ill founded. Several towns in Vorland enacted restaurant smoking restrictions five years ago. Since then, the amount the government collects in restaurant meal taxes in those towns has increased 34 percent, on average, but only 26 percent elsewhere in Vorland. The amount collected in restaurant meal taxes closely reflects restaurants' revenues.",
    "question": "Which of the following, if true, most undermines the defense of the government's plan?",
    "options": [
      "Over the last five years, government revenues from sales taxes have grown no faster in the towns with restaurant smoking restrictions than in the towns that have no such restrictions.",
      "In many of the towns that restrict smoking in restaurants, restaurants can maintain separate dining areas where smoking is permitted.",
      "When the state first imposed a restaurant meal tax, opponents predicted that restaurants' revenues would decline as a result, a prediction that proved to be correct in the short term.",
      "Over the last five years, smoking has steadily declined throughout Vorland."
    ],
    "raw_logic_programs": [
      "# Declarations\ntowns = EnumSort([restricted, unrestricted])\ntax_growth = Function([towns] -> [int])\nsmoking_areas = Function([towns] -> [bool])\nsmoking_decline = Function([towns] -> [bool])\n\n# Constraints\ntax_growth(restricted) == 34 ::: Since then, the amount the government collects in restaurant meal taxes in those towns has increased 34 percent\ntax_growth(unrestricted) == 26 ::: but only 26 percent elsewhere in Vorland\nForAll([t:towns], tax_growth(t) reflects restaurants' revenues) ::: The amount collected in restaurant meal taxes closely reflects restaurants' revenues\n\n# Options\nQuestion ::: Which of the following, if true, most undermines the defense of the government's plan?\nis_undermining(And(tax_growth(restricted) == tax_growth(unrestricted), Not(smoking_areas(restricted)))) ::: (A) Over the last five years, government revenues from sales taxes have grown no faster in the towns with restaurant smoking restrictions than in the towns that have no such restrictions.\nis_undermining(smoking_areas(restricted)) ::: (B) In many of the towns that restrict smoking in restaurants, restaurants can maintain separate dining areas where smoking is permitted.\nis_undermining(Exists([t:towns], tax_growth(t) < 0)) ::: (C) When the state first imposed a restaurant meal tax, opponents predicted that restaurants' revenues would decline as a result, a prediction that proved to be correct in the short term.\nis_undermining(ForAll([t:towns], smoking_decline(t))) ::: (D) Over the last five years, smoking has steadily declined throughout Vorland."
    ]
  },
  {
    "id": "test_568",
    "context": "Steven: The allowable blood alcohol level for drivers should be cut in half. With this reduced limit, social drinkers will be deterred from drinking and driving, resulting in significantly increased highway safety. Miguel: No, lowering the current allowable blood alcohol level would have little effect on highway safety, because it would not address the most important aspect of the drunken driving problem, which is the danger to the public posed by heavy drinkers, who often drive with a blood alcohol level of twice the current legal limit.",
    "question": "Steven and Miguel's statements provide the most support for holding that they would disagree about the truth of which one of the followings statements?",
    "options": [
      "There is a direct correlation between a driver's blood alcohol level and the driver's ability to drive safely.",
      "Social drinkers who drink an drive pose a substantial threat to the public.",
      "A driver with a blood alcohol level above the current legal limit poses a substantial danger to the public.",
      "Some drivers whose blood alcohol level is lower than the current legal limit pose a danger to the public."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([correlation, social_threat, above_limit_danger, below_limit_danger])\nagree = Function([statements] -> [bool])\n\n# Constraints\nagree(correlation) == True ::: There is a direct correlation between a driver's blood alcohol level and the driver's ability to drive safely.\nagree(social_threat) == True ::: Social drinkers who drink and drive pose a substantial threat to the public.\nagree(above_limit_danger) == True ::: A driver with a blood alcohol level above the current legal limit poses a substantial danger to the public.\nagree(below_limit_danger) == True ::: Some drivers whose blood alcohol level is lower than the current legal limit pose a danger to the public.\n\n# Options\nQuestion ::: Steven and Miguel's statements provide the most support for holding that they would disagree about the truth of which one of the following statements?\nis_disagree(agree(social_threat)) ::: (B)\nis_disagree(agree(above_limit_danger)) ::: (C)\nis_disagree(agree(below_limit_danger)) ::: (D)"
    ]
  },
  {
    "id": "test_569",
    "context": "The Founding Fathers created the Electoral College to balance state-based and population-based representation. The Electoral College allows only electors to vote for the President, and the number of electors per state is equal to the state' s total number of representatives and senators. Each political party nominates its electors based on their own methods. In the past, some electors have cast ballots for candidates that did not receive the most popular votes.",
    "question": "Which one of the following can be properly inferred from the passage?",
    "options": [
      "The winning candidate must receive the majority of the electors' votes.",
      "The number of states' representatives is based on population, while the number of senators is equal for every state.",
      "No law requires the electors to vote for the candidate that receives the most ballots.",
      "The Electoral College is not a direct election."
    ],
    "raw_logic_programs": [
      "# Declarations\nstates = EnumSort([State])\nelectors = Function([states] -> [int])\nrepresentatives = Function([states] -> [int])\nsenators = Function([states] -> [int])\npolitical_parties = EnumSort([Party])\nnominates = Function([political_parties, states] -> [electors])\nvotes = Function([electors] -> [candidates])\ncandidates = EnumSort([Candidate])\n\n# Constraints\nForAll([s:states], electors(s) == representatives(s) + senators(s)) ::: The number of electors per state is equal to the state's total number of representatives and senators\nForAll([p:political_parties, s:states], nominates(p, s) == electors(s)) ::: Each political party nominates its electors based on their own methods\nExists([e:electors, c:candidates], votes(e) != c) ::: Some electors have cast ballots for candidates that did not receive the most popular votes\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the passage?\nis_inferred(ForAll([c:candidates], Exists([e:electors], votes(e) == c) -> Count([e:electors], votes(e) == c) > Count([e:electors], votes(e) != c))) ::: (The winning candidate must receive the majority of the electors' votes.\nis_inferred(ForAll([s1:states, s2:states], representatives(s1) != representatives(s2) -> senators(s1) == senators(s2))) ::: (The number of states' representatives is based on population, while the number of senators is equal for every state.\nis_inferred(ForAll([e:electors, c:candidates], votes(e) != c)) ::: (No law requires the electors to vote for the candidate that receives the most ballots.\nis_inferred(Exists([e:electors, c:candidates], votes(e) != c)) ::: (The Electoral College is not a direct election."
    ]
  },
  {
    "id": "test_570",
    "context": "The recent rise of low-cost airlines in Country Y has led to great increases in the number of air travelers and flights. However, a \"hidden cost\" of flying and certain other forms of travel is the significant amount of air pollution, which contributes to global warming. To make people pay these hidden costs-and in the process discourage the explosive growth in flying-the government of Country Y plans to impose fees on all air travel. There is a problem, however, in that many residents of Country Y would then use automobile transportation instead, without paying the hidden costs of the resulting air pollution.",
    "question": "Which of the following additions to the government's plan would be likely to help most in overcoming the problem referred to in the final sentence above?",
    "options": [
      "Asking airplane manufacturers to study the possibility of creating airplanes that produce less air pollution",
      "Restricting the number of daily flights permitted in Country Y",
      "Setting clear, specific recommendations for the long-term reduction in exhaust emissions by automobile transportation in the country",
      "Imposing substantial fees on all forms of motorized transportation, in proportion to the amount of pollution caused by each form"
    ],
    "raw_logic_programs": [
      "# Declarations\ntransport_modes = EnumSort([air_travel, automobile_transportation])\npollution_fees = Function([transport_modes] -> [bool])\n\n# Constraints\npollution_fees(air_travel) == True ::: The government plans to impose fees on all air travel\n\n# Options\nQuestion ::: Which of the following additions to the government's plan would be likely to help most in overcoming the problem referred to in the final sentence above?\nis_effective(pollution_fees(automobile_transportation) == True) ::: (Imposing substantial fees on all forms of motorized transportation, in proportion to the amount of pollution caused by each form)"
    ]
  },
  {
    "id": "test_571",
    "context": "To accommodate the personal automobile, houses are built on widely scattered lots far from places of work and shopping malls are equipped with immense parking lots that leave little room for wooded areas. Hence, had people generally not used personal automobiles, the result would have to have been a geography of modern cities quite different from the one we have now.",
    "question": "The argument's reasoning is questionable because the argument",
    "options": [
      "overlooks the fact that many technological innovations other than the personal automobile have had some effect on the way people live",
      "takes for granted that shopping malls do not need large parking lots even given the use of the personal automobile",
      "infers from the idea that the current geography of modern cities resulted from a particular cause that it could only have resulted from that cause",
      "takes for granted that people ultimately want to live without personal automobiles"
    ],
    "raw_logic_programs": [
      "# Declarations\ncauses = EnumSort([personal_automobile, other_technological_innovations])\neffects = EnumSort([current_geography, different_geography])\nresulted_from = Function([effects, causes] -> [bool])\n\n# Constraints\nresulted_from(current_geography, personal_automobile) ::: The current geography of modern cities resulted from the use of personal automobiles\nForAll([e:effects], Exists([c:causes], resulted_from(e, c))) ::: Every geography must result from some cause\n\n# Options\nQuestion ::: The argument's reasoning is questionable because the argument\noverlooks(Exists([c:causes], And(c != personal_automobile, resulted_from(current_geography, c)))) ::: (overlooks the fact that many technological innovations other than the personal automobile have had some effect on the way people live)\ntakes_for_granted(Not(Exists([c:causes], resulted_from(current_geography, c)))) ::: (takes for granted that shopping malls do not need large parking lots even given the use of the personal automobile)\ninfers_only_from(Exists([c:causes], resulted_from(different_geography, c))) ::: (infers from the idea that the current geography of modern cities resulted from a particular cause that it could only have resulted from that cause)\ntakes_for_granted(Not(resulted_from(different_geography, personal_automobile))) ::: (takes for granted that people ultimately want to live without personal automobiles)"
    ]
  },
  {
    "id": "test_572",
    "context": "Lecturer: If I say, \"I tried to get my work done on time, \" the meanings of my words do not indicate that I didn' t get it done on time. But usually you would correctly understand me to be saying that I didn' t. After all, if 1 had gotten my work done on time, T would instead just say, \"I got my work done on time. \" And this example is typical of how conversation works.",
    "question": "The lecturer's statements, if true, most strongly support which one of the following statements?",
    "options": [
      "Understanding what people say often requires more than just understanding the meanings of the words they use.",
      "Speakers often convey more information in conversation than they intend to convey.",
      "It is unusual for English words to function in communication in the way that \"tried\" does.",
      "Listeners cannot reasonably be expected to have the knowledge typically required for successful communication."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupport = Function([statements] -> [bool])\n\n# Constraints\nsupport(A) ::: Understanding what people say often requires more than just understanding the meanings of the words they use.\nsupport(B) ::: Speakers often convey more information in conversation than they intend to convey.\nsupport(C) ::: It is unusual for English words to function in communication in the way that \"tried\" does.\nsupport(D) ::: Listeners cannot reasonably be expected to have the knowledge typically required for successful communication.\n\n# Options\nQuestion ::: The lecturer's statements, if true, most strongly support which one of the following statements?\nis_most_strongly_supported(support(A)) ::: (A)\nis_most_strongly_supported(support(B)) ::: (B)\nis_most_strongly_supported(support(C)) ::: (C)\nis_most_strongly_supported(support(D)) ::: (D)"
    ]
  },
  {
    "id": "test_573",
    "context": "Singletary: We of Citizens for Cycling Freedom object to the city' s new ordinance requiring bicyclists to wear helmets. If the city wanted to become a safer place for cyclists, it would not require helmets. Instead, it would construct more bicycle lanes and educate drivers about bicycle safety. Thus, passage of the ordinance reveals that the city is more concerned with the appearance of safety than with bicyclists' actual safety.",
    "question": "Which one of the following most accurately describes the role played in Singletary's argument by the statement that mentions driver education?",
    "options": [
      "It is used as partial support for a claim about the motivation of the city.",
      "It is cited as evidence for the claim that the city misunderstands the steps necessary for ensuring bicyclists' safety.",
      "It is offered as evidence of the total ineffectiveness of the helmet ordinance.",
      "It is offered as an example of further measures the city will take to ensure bicyclists' safety."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([city_motivation, city_misunderstanding, helmet_ineffectiveness, further_measures])\nrole = Function([statements] -> [bool])\n\n# Constraints\nrole(city_motivation) ::: It is used as partial support for a claim about the motivation of the city.\nrole(city_misunderstanding) ::: It is cited as evidence for the claim that the city misunderstands the steps necessary for ensuring bicyclists' safety.\nrole(helmet_ineffectiveness) ::: It is offered as evidence of the total ineffectiveness of the helmet ordinance.\nrole(further_measures) ::: It is offered as an example of further measures the city will take to ensure bicyclists' safety.\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in Singletary's argument by the statement that mentions driver education?\nis_valid(role(city_motivation)) ::: (A)\nis_valid(role(city_misunderstanding)) ::: (B)\nis_valid(role(helmet_ineffectiveness)) ::: (C)\nis_valid(role(further_measures)) ::: (D)"
    ]
  },
  {
    "id": "test_574",
    "context": "Anyone who fails to answer a patient' s questions cannot be a competent physician. That is why I feel confident about my physician' s competence: she carefully answers every one of my questions, no matter how trivial.",
    "question": "Which one of the following most closely parallels the flawed reasoning in the argument above?",
    "options": [
      "No one who is hot-tempered and strong-willed will succeed in this business. Jeremy is strong-willed, so he will not succeed in this business.",
      "Anyone who works two or more jobs is unable to find a balance between professional and personal life. Maggie has only one job, so she can find a balance between her professional and personal life.",
      "Anyone who is not in favor of this proposal is ill informed on the issue. Jeanne opposes the proposal, so she is ill informed on the issue.",
      "No one who likes music misses a performance of the symphony. Paul likes music, yet last week he missed a performance of the symphony."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([physician, patient])\nactions = EnumSort([answers_questions, fails_to_answer_questions, competent, not_competent])\nrelation = Function([individuals, actions] -> [bool])\n\n# Constraints\nForAll([i:individuals], Implies(relation(i, fails_to_answer_questions), relation(i, not_competent))) ::: Anyone who fails to answer a patient's questions cannot be a competent physician\nrelation(physician, answers_questions) ::: My physician carefully answers every one of my questions\n\n# Options\nQuestion ::: Which one of the following most closely parallels the flawed reasoning in the argument above?\nis_parallel(ForAll([i:individuals], Implies(relation(i, hot_tempered_and_strong_willed), Not(relation(i, succeed_in_business))))) ::: (No one who is hot-tempered and strong-willed will succeed in this business. Jeremy is strong-willed, so he will not succeed in this business.\nis_parallel(ForAll([i:individuals], Implies(relation(i, works_two_or_more_jobs), Not(relation(i, balance_professional_personal_life))))) ::: (Anyone who works two or more jobs is unable to find a balance between professional and personal life. Maggie has only one job, so she can find a balance between her professional and personal life.\nis_parallel(ForAll([i:individuals], Implies(Not(relation(i, in_favor_of_proposal)), relation(i, ill_informed)))) ::: (Anyone who is not in favor of this proposal is ill informed on the issue. Jeanne opposes the proposal, so she is ill informed on the issue.\nis_parallel(ForAll([i:individuals], Implies(relation(i, likes_music), Not(relation(i, misses_symphony_performance))))) ::: (No one who likes music misses a performance of the symphony. Paul likes music, yet last week he missed a performance of the symphony."
    ]
  },
  {
    "id": "test_575",
    "context": "Sexual reproduction is achieved when the gamete of a male organism unites with the gamete of a female organism to form a new and genetically unique cell. Each of the two gametes contributes equally to the genetic material found in the new cell' s nucleus. However, the genetic material found in the new cell' s cytoplasm (the part of a cell outside the nucleus) is contributed exclusively by the female' s gamete. A certain type of genetic material, referred to as GM62, is found only in cytoplasm.",
    "question": "Which one of the following is a conclusion that can logically be drawn from the passage above?",
    "options": [
      "The role of the male gamete in sexual reproduction is less important than the role of the female gamete.",
      "Only female organisms can contribute GM62 to their offspring.",
      "All female organisms contribute GM62 to their offspring.",
      "Genetic material is evenly divided between the nucleus and the cytoplasm of a new cell."
    ],
    "raw_logic_programs": [
      "# Declarations\ngametes = EnumSort([male_gamete, female_gamete])\ncell_parts = EnumSort([nucleus, cytoplasm])\ngenetic_material = Function([gametes, cell_parts] -> [bool])\nGM62 = Function([cell_parts] -> [bool])\n\n# Constraints\nForAll([g:gametes], genetic_material(g, nucleus)) ::: Each of the two gametes contributes equally to the genetic material found in the new cell's nucleus\ngenetic_material(female_gamete, cytoplasm) ::: The genetic material found in the new cell's cytoplasm is contributed exclusively by the female's gamete\nGM62(cytoplasm) ::: GM62 is found only in cytoplasm\n\n# Options\nQuestion ::: Which one of the following is a conclusion that can logically be drawn from the passage above?\nis_valid(ForAll([g:gametes], Implies(g == female_gamete, GM62(cytoplasm)))) ::: (Only female organisms can contribute GM62 to their offspring.)\nis_valid(ForAll([g:gametes], Implies(g == female_gamete, GM62(cytoplasm)))) ::: (All female organisms contribute GM62 to their offspring.)\nis_valid(ForAll([g:gametes], Implies(g == male_gamete, Not(GM62(cytoplasm))))) ::: (The role of the male gamete in sexual reproduction is less important than the role of the female gamete.)\nis_valid(ForAll([p:cell_parts], genetic_material(male_gamete, p) == genetic_material(female_gamete, p))) ::: (Genetic material is evenly divided between the nucleus and the cytoplasm of a new cell.)"
    ]
  },
  {
    "id": "test_576",
    "context": "All students at Pitcombe College were asked to label themselves conservative, liberal, or middle-of-the-road politically. Of the students, 25 percent labeled themselves conservative, 24 percent labeled themselves liberal, and 51 percent labeled themselves middle-of-the-road. When asked about a particular set of issues, however, 77 percent of the students endorsed what is generally regarded as a liberal position.",
    "question": "If all of the statements above are true, which one of the following must also be true?",
    "options": [
      "All students who labeled themselves liberal endorsed what is generally regarded as a liberal position on that set of issues.",
      "Some students who labeled themselves liberal endorsed what is generally regarded as a conservative position on that set of issues.",
      "More students who labeled themselves middle-of-the-road than students who labeled themselves liberal opposed what is generally regarded as a liberal position on that set of issues.",
      "Some students who labeled themselves conservative endorsed what is generally regarded as a liberal position on that set of issues."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([conservative, liberal, middle_of_the_road])\npositions = EnumSort([liberal_position, conservative_position])\nendorses = Function([students] -> [positions])\npercentages = Function([students] -> [int])\n\n# Constraints\npercentages(conservative) == 25 ::: 25 percent labeled themselves conservative\npercentages(liberal) == 24 ::: 24 percent labeled themselves liberal\npercentages(middle_of_the_road) == 51 ::: 51 percent labeled themselves middle-of-the-road\npercentages(liberal_position) == 77 ::: 77 percent of the students endorsed what is generally regarded as a liberal position\n\n# Options\nQuestion ::: If all of the statements above are true, which one of the following must also be true?\nis_must_true(ForAll([s:students], Implies(s == liberal, endorses(s) == liberal_position))) ::: (A) All students who labeled themselves liberal endorsed what is generally regarded as a liberal position on that set of issues.\nis_must_true(Exists([s:students], And(s == liberal, endorses(s) == conservative_position))) ::: (B) Some students who labeled themselves liberal endorsed what is generally regarded as a conservative position on that set of issues.\nis_must_true(Count([s:students], And(s == middle_of_the_road, endorses(s) != liberal_position)) > Count([s:students], And(s == liberal, endorses(s) != liberal_position))) ::: (C) More students who labeled themselves middle-of-the-road than students who labeled themselves liberal opposed what is generally regarded as a liberal position on that set of issues.\nis_must_true(Exists([s:students], And(s == conservative, endorses(s) == liberal_position))) ::: (D) Some students who labeled themselves conservative endorsed what is generally regarded as a liberal position on that set of issues."
    ]
  },
  {
    "id": "test_577",
    "context": "In an effort to reduce underage drinking, the Department of Health has been encouraging adolescents to take a pledge not to drink alcohol until they reach the legal age. This seems to be successful. A survey of seventeen-year-olds has found that many who do not drink report having taken a pledge to refrain from drinking, whereas almost all who drink report having never taken such a pledge.",
    "question": "The reasoning in the argument is most vulnerable to criticism because the argument",
    "options": [
      "confuses the claim that many adolescents who do not drink report having taken the pledge with the claim that many who report having taken the pledge do not drink",
      "bases a conclusion about the efficacy of a method to reduce underage drinking merely on a normative judgment about the morality of underage drinking",
      "infers from an association between pledging not to drink and refraining from drinking that the pledging was the cause of refraining from drinking",
      "treats a condition that is sufficient to produce an outcome as though it were necessary for the outcome to occur"
    ],
    "raw_logic_programs": [
      "# Declarations\nadolescents = EnumSort([drinks, does_not_drink])\npledge_status = EnumSort([took_pledge, did_not_take_pledge])\nreports = Function([adolescents] -> [pledge_status])\n\n# Constraints\nForAll([a:adolescents], Or(reports(a) == took_pledge, reports(a) == did_not_take_pledge)) ::: Each adolescent either took the pledge or did not take the pledge\nCount([a:adolescents], And(a == does_not_drink, reports(a) == took_pledge)) > 0 ::: Many who do not drink report having taken the pledge\nCount([a:adolescents], And(a == drinks, reports(a) == did_not_take_pledge)) == Count([a:adolescents], a == drinks) ::: Almost all who drink report having never taken the pledge\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism because the argument\nis_vulnerable(Confuses(Count([a:adolescents], And(a == does_not_drink, reports(a) == took_pledge)) > 0, Count([a:adolescents], And(reports(a) == took_pledge, a == does_not_drink)) > 0)) ::: (A)\nis_vulnerable(BasesConclusionOnNormativeJudgment()) ::: (B)\nis_vulnerable(InfersCausationFromAssociation()) ::: (C)\nis_vulnerable(TreatsSufficientAsNecessary()) ::: (D)"
    ]
  },
  {
    "id": "test_578",
    "context": "No matter how conscientious they are, historians always have biases that affect their work. Hence, rather than trying to interpret historical events, historians should instead interpret what the people who participated in historical events thought about those events.",
    "question": "The reasoning in the argument is most vulnerable to criticism on the grounds that the argument fails to consider the possibility that",
    "options": [
      "many of the ways in which historians' biases affect their work have been identified",
      "the proposed shift in focus is unlikely to eliminate the effect that historians' biases have on their work",
      "historians who have different biases often agree about many aspects of some historical events",
      "scholars in disciplines other than history also risk having their biases affect their work"
    ],
    "raw_logic_programs": [
      "# Declarations\nhistorians = EnumSort([conscientious, biased])\nwork = EnumSort([interpret_events, interpret_thoughts])\nbiases = Function([historians, work] -> [bool])\n\n# Constraints\nForAll([h:historians], biases(h, interpret_events)) ::: historians always have biases that affect their work\nForAll([h:historians], Not(biases(h, interpret_thoughts))) ::: rather than trying to interpret historical events, historians should instead interpret what the people who participated in historical events thought about those events\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on the grounds that the argument fails to consider the possibility that\nis_vulnerable(Exists([h:historians], biases(h, interpret_thoughts))) ::: (many of the ways in which historians' biases affect their work have been identified\nis_vulnerable(Exists([h:historians], biases(h, interpret_thoughts))) ::: the proposed shift in focus is unlikely to eliminate the effect that historians' biases have on their work\nis_vulnerable(Exists([h1:historians, h2:historians], And(h1 != h2, Not(biases(h1, interpret_events)), Not(biases(h2, interpret_events))))) ::: historians who have different biases often agree about many aspects of some historical events\nis_vulnerable(Exists([h:historians], biases(h, interpret_events))) ::: scholars in disciplines other than history also risk having their biases affect their work"
    ]
  },
  {
    "id": "test_579",
    "context": "Ingrid: Rock music has produced no songs as durable as the songs of the 1940s, which continue to be recorded by numerous performers. Jerome: True, rock songs are usually recorded only once. If the original recording continues to be popular, however, that fact can indicate durability, and the best rock songs will prove to be durable.",
    "question": "Jerome responds to Ingrid's claim by",
    "options": [
      "undermining the truth of the evidence that Ingrid presents",
      "showing that the claim necessarily leads to a contradiction",
      "suggesting an alternative standard for judging the point at issue",
      "claiming that Ingrid's knowledge of the period under discussion is incomplete"
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([Ingrid, Jerome])\nstandards = EnumSort([durability, popularity])\nresponses = Function([claims] -> [standards])\n\n# Constraints\nevidence(Ingrid) == durability ::: Ingrid claims rock music has produced no songs as durable as the songs of the 1940s\nevidence(Jerome) == popularity ::: Jerome suggests that popularity can indicate durability\n\n# Options\nQuestion ::: Jerome responds to Ingrid's claim by\nis_response(undermining(evidence(Ingrid))) ::: (A) undermining the truth of the evidence that Ingrid presents\nis_response(contradiction(claims)) ::: (B) showing that the claim necessarily leads to a contradiction\nis_response(alternative_standard(evidence(Jerome))) ::: (C) suggesting an alternative standard for judging the point at issue\nis_response(incomplete_knowledge(Ingrid)) ::: (D) claiming that Ingrid's knowledge of the period under discussion is incomplete"
    ]
  },
  {
    "id": "test_580",
    "context": "Xavier: Demand by tourists in Nepal for inexpensive thangka paintings has resulted in the proliferation of inferior thangkas containing symbolic inaccuracies -- a sure sign of a dying art form. Nepal should prohibit sales of thangkas to tourists, for such a prohibition will induce artists to create thangkas that meet traditional standards. Yvette: An art form without dedicated young artists will decay and die. If tourists were forbidden to buy thangkas, young artists would cease making thangkas and concentrate instead on an art form tourists can buy.",
    "question": "Yvette responds to Xavier by",
    "options": [
      "arguing that Xavier's proposal, if implemented, would result in the very consequences it is meant to prevent",
      "showing that the evidence presented by Xavier has no bearing on the point at issue",
      "challenging the integrity of Xavier's sources of information",
      "denying the existence of the problem that Xavier's proposal is designed to ameliorate"
    ],
    "raw_logic_programs": [
      "# Declarations\nproposals = EnumSort([Xavier, Yvette])\nconsequences = EnumSort([dying_art_form, traditional_standards, young_artists, tourist_sales])\narguments = Function([proposals] -> [consequences])\n\n# Constraints\narguments(Xavier) == And(dying_art_form, Not(traditional_standards)) ::: Xavier argues that the demand for thangkas leads to a dying art form and proposes prohibiting sales to tourists to maintain traditional standards\narguments(Yvette) == And(Not(young_artists), tourist_sales) ::: Yvette argues that prohibiting sales to tourists would lead young artists to stop making thangkas, thus leading to the art form's decay\n\n# Options\nQuestion ::: Yvette responds to Xavier by\nis_valid(Implies(arguments(Xavier), arguments(Yvette))) ::: (A) arguing that Xavier's proposal, if implemented, would result in the very consequences it is meant to prevent\nis_valid(Not(arguments(Xavier))) ::: (B) showing that the evidence presented by Xavier has no bearing on the point at issue\nis_valid(False) ::: (C) challenging the integrity of Xavier's sources of information\nis_valid(False) ::: (D) denying the existence of the problem that Xavier's proposal is designed to ameliorate"
    ]
  },
  {
    "id": "test_581",
    "context": "The peppered moth avoids predators by blending into its background, typically the bark of trees. In the late nineteenth century, those peppered moths with the lightest pigmentation had the greatest contrast with their backgrounds, and ttherefore were the most likely to be seen and eaten by predators. It follows, then, that the darkest peppered moths were the least likely to be seen and eaten.",
    "question": "Which one of the following most accurately describes a flaw in the reasoning of the argument?",
    "options": [
      "The argument presumes, without providing justification, that the only defense mechanism available to peppered moths was to blend into their backgrounds.",
      "The argument overlooks the possibility that there were peppered moths of intermediate color that contrasted less with their backgrounds than the darkest peppered moths did.",
      "The argument presumes, without providing justification, that all peppered moths with the same coloring had the same likelihood of being seen and eaten by a predator.",
      "The argument takes for granted that peppered moths are able to control the degree to which they blend into their backgrounds."
    ],
    "raw_logic_programs": [
      "# Declarations\nmoths = EnumSort([lightest, darkest, intermediate])\npredators = EnumSort([seen, eaten])\nlikelihood = Function([moths, predators] -> [bool])\n\n# Constraints\nlikelihood(lightest, seen) == True ::: The lightest pigmentation had the greatest contrast with their backgrounds, and therefore were the most likely to be seen\nlikelihood(lightest, eaten) == True ::: The lightest pigmentation were the most likely to be eaten by predators\nlikelihood(darkest, seen) == False ::: The darkest peppered moths were the least likely to be seen\nlikelihood(darkest, eaten) == False ::: The darkest peppered moths were the least likely to be eaten\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the reasoning of the argument?\nis_flaw(Exists([m:moths], And(m != darkest, likelihood(m, seen) == False))) ::: (The argument presumes, without providing justification, that the only defense mechanism available to peppered moths was to blend into their backgrounds.\nis_flaw(Exists([m:moths], And(m == intermediate, likelihood(m, seen) == False))) ::: (The argument overlooks the possibility that there were peppered moths of intermediate color that contrasted less with their backgrounds than the darkest peppered moths did.\nis_flaw(ForAll([m:moths], likelihood(m, seen) == likelihood(m, eaten))) ::: (The argument presumes, without providing justification, that all peppered moths with the same coloring had the same likelihood of being seen and eaten by a predator.\nis_flaw(Exists([m:moths], likelihood(m, seen) == likelihood(m, eaten))) ::: (The argument takes for granted that peppered moths are able to control the degree to which they blend into their backgrounds."
    ]
  },
  {
    "id": "test_582",
    "context": "A recent survey conducted in the New Homes magazine indicated that more than 70% of its readers are planning to purchase or build a new home over the next two years. Based on the results of the survey, the editor of the magazine concluded that over the next two years, the real estate industry is likely to experience rapid growth driven by the high market demand for new homes.",
    "question": "Which of the following statements, if true, would be the most damaging to the conclusion of the magazine's editor?",
    "options": [
      "The number of the magazine's readers has more than doubled over the past 2 years.",
      "The survey included over 50, 000 respondents representing all major age categories.",
      "Readers of the New Homes magazine are much more likely to be interested in buying or purchasing a home than the rest of the public.",
      "All survey respondents received one free issue of the magazine as a token of appreciation for filling out the survey."
    ],
    "raw_logic_programs": [
      "# Declarations\nreaders = EnumSort([general_public, magazine_readers])\nactions = EnumSort([planning_to_buy, not_planning_to_buy])\nsurveyed = Function([readers] -> [actions])\n\n# Constraints\nCount([r:readers], surveyed(r) == planning_to_buy) > 0.7 * Count([r:readers], True) ::: More than 70% of the magazine's readers are planning to purchase or build a new home over the next two years\n\n# Options\nQuestion ::: Which of the following statements, if true, would be the most damaging to the conclusion of the magazine's editor?\nis_damaging(Count([r:readers], surveyed(r) == planning_to_buy) > Count([r:general_public], surveyed(r) == planning_to_buy)) ::: (A) The number of the magazine's readers has more than doubled over the past 2 years.\nis_damaging(Count([r:readers], surveyed(r) == planning_to_buy) == Count([r:general_public], surveyed(r) == planning_to_buy)) ::: (B) The survey included over 50,000 respondents representing all major age categories.\nis_damaging(Count([r:magazine_readers], surveyed(r) == planning_to_buy) > Count([r:general_public], surveyed(r) == planning_to_buy)) ::: (C) Readers of the New Homes magazine are much more likely to be interested in buying or purchasing a home than the rest of the public.\nis_damaging(Count([r:readers], surveyed(r) == planning_to_buy) == Count([r:general_public], surveyed(r) == planning_to_buy)) ::: (D) All survey respondents received one free issue of the magazine as a token of appreciation for filling out the survey."
    ]
  },
  {
    "id": "test_583",
    "context": "It is due to a misunderstanding that most modern sculpture is monochromatic. When ancient sculptures were exhumed years ago, they were discovered to be uncolored. No one at the time had reason to believe, as we now do, that the sculptures had originally been colorfully painted, but that centuries of exposure to moisture washed away the paint.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "As modern sculptors come to believe that ancient sculpture was painted, they will begin to create polychromatic works.",
      "Ancient sculptures were more susceptible to moisture damage than are modern sculptures.",
      "The natural beauty of the materials out of which modern sculptures are made plays a part in their effect.",
      "Modern sculpture has been influenced by beliefs about ancient sculpture."
    ],
    "raw_logic_programs": [
      "# Declarations\nsculptures = EnumSort([ancient, modern])\nattributes = EnumSort([monochromatic, polychromatic, uncolored, painted])\ninfluences = Function([sculptures] -> [attributes])\n\n# Constraints\ninfluences(ancient) == uncolored ::: ancient sculptures were discovered to be uncolored\ninfluences(modern) == monochromatic ::: most modern sculpture is monochromatic\nForAll([s:sculptures], Implies(influences(s) == painted, influences(s) == polychromatic)) ::: if sculptures were painted, they were polychromatic\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(influences(modern) == polychromatic) ::: (A) As modern sculptors come to believe that ancient sculpture was painted, they will begin to create polychromatic works.\nis_assumption(Exists([s:sculptures], influences(s) == painted)) ::: (B) Ancient sculptures were more susceptible to moisture damage than are modern sculptures.\nis_assumption(Exists([s:sculptures], influences(s) == uncolored)) ::: (C) The natural beauty of the materials out of which modern sculptures are made plays a part in their effect.\nis_assumption(influences(modern) == influences(ancient)) ::: (D) Modern sculpture has been influenced by beliefs about ancient sculpture."
    ]
  },
  {
    "id": "test_584",
    "context": "Business Analyst: National Motors began selling the Luxora-its new model of sedan-in June. Last week, National released sales figures for the summer months of June, July, and August that showed that by the end of August only 80, 000 Luxoras had been sold. Ttherefore, National will probably not meet its target of selling 500, 000 Luxoras in the model' s first twelve months.",
    "question": "Which of the following would be most useful to establish in order to evaluate the analyst's prediction?",
    "options": [
      "Whether National Motors has introduced a new model in June in any previous year",
      "Whether National Motors will suffer serious financial losses if it fails to meet its sales goal for the Luxora",
      "Whether National Motors currently produces more cars than any other automaker",
      "Whether new-car sales are typically lower in the summer months than at any other time of the year"
    ],
    "raw_logic_programs": [
      "# Declarations\nmonths = EnumSort([June, July, August])\nsales = Function([months] -> [int])\ntarget_sales = Const(500000, int)\nsummer_sales = Const(80000, int)\n\n# Constraints\nsales(June) + sales(July) + sales(August) == summer_sales ::: National released sales figures for the summer months of June, July, and August that showed that by the end of August only 80,000 Luxoras had been sold\ntarget_sales == 500000 ::: National's target of selling 500,000 Luxoras in the model's first twelve months\n\n# Options\nQuestion ::: Which of the following would be most useful to establish in order to evaluate the analyst's prediction?\nis_useful(Exists([m:months], sales(m) < sales(June))) ::: (Whether new-car sales are typically lower in the summer months than at any other time of the year)"
    ]
  },
  {
    "id": "test_585",
    "context": "Scientist: An orbiting spacecraft detected a short-term spike in sulfur dioxide in Venus' s atmosphere. Volcanoes are known to cause sulfur dioxide spikes in Earth' s atmosphere, and Venus has hundreds of mountains that show signs of past volcanic activity. But we should not conclude that volcanic activity caused the spike on Venus. No active volcanoes have been identified on Venus, and planetary atmospheres are known to undergo some cyclical variations in chemical composition.",
    "question": "Which one of the following, if true, most weakens the scientist's argument?",
    "options": [
      "Conditions on Venus make it unlikely that any instrument targeting Venus would detect a volcanic eruption directly.",
      "Evidence suggests that there was a short-term spike in sulfur dioxide in Venus's atmosphere 30 years earlier.",
      "Most instances of sulfur dioxide spikes in the Earth's atmosphere are caused by the burning of fossil fuels.",
      "Traces of the sulfur dioxide from volcanic eruptions on Earth are detectable in the atmosphere years after the eruptions take place."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([sulfur_dioxide_spike, volcanic_activity, cyclical_variation])\ncauses = Function([events] -> [bool])\n\n# Constraints\ncauses(volcanic_activity) == False ::: No active volcanoes have been identified on Venus\ncauses(cyclical_variation) == True ::: Planetary atmospheres are known to undergo some cyclical variations in chemical composition\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the scientist's argument?\nis_weakening(Implies(causes(volcanic_activity), causes(sulfur_dioxide_spike))) ::: (A) Conditions on Venus make it unlikely that any instrument targeting Venus would detect a volcanic eruption directly.\nis_weakening(Exists([t:int], And(t == 30, causes(sulfur_dioxide_spike)))) ::: (B) Evidence suggests that there was a short-term spike in sulfur dioxide in Venus's atmosphere 30 years earlier.\nis_weakening(Implies(causes(burning_fossil_fuels), causes(sulfur_dioxide_spike))) ::: (C) Most instances of sulfur dioxide spikes in the Earth's atmosphere are caused by the burning of fossil fuels.\nis_weakening(Implies(causes(volcanic_activity), Exists([t:int], And(t > 0, causes(sulfur_dioxide_spike))))) ::: (D) Traces of the sulfur dioxide from volcanic eruptions on Earth are detectable in the atmosphere years after the eruptions take place."
    ]
  },
  {
    "id": "test_586",
    "context": "The higher the average fat intake among the residents of a country, the higher the incidence of cancer in that country; the lower the average fat intake, the lower the incidence of cancer. So individuals who want to reduce their risk of cancer should reduce their fat intake.",
    "question": "Which one of the following, if true, most weakens the argument?",
    "options": [
      "The countries with a high average fat intake tend to be among the wealthiest in the world.",
      "Cancer is a prominent cause of death in countries with a low average fat intake.",
      "An individual resident of a country whose population has a high average fat intake may have a diet with a low fat intake.",
      "The countries with high average fat intake are also the countries with the highest levels of environmental pollution."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([high_fat_intake, low_fat_intake])\nfactors = EnumSort([wealth, pollution, individual_diet])\ncancer_incidence = Function([countries] -> [int])\nfat_intake = Function([countries] -> [int])\nfactor_presence = Function([countries, factors] -> [bool])\n\n# Constraints\nForAll([c:countries], cancer_incidence(c) == fat_intake(c)) ::: The higher the average fat intake among the residents of a country, the higher the incidence of cancer in that country; the lower the average fat intake, the lower the incidence of cancer.\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the argument?\nis_weakening(And(factor_presence(high_fat_intake, wealth), Not(factor_presence(low_fat_intake, wealth)))) ::: (The countries with a high average fat intake tend to be among the wealthiest in the world.\nis_weakening(cancer_incidence(low_fat_intake) > 0) ::: Cancer is a prominent cause of death in countries with a low average fat intake.\nis_weakening(Exists([c:countries], And(c == high_fat_intake, factor_presence(c, individual_diet)))) ::: An individual resident of a country whose population has a high average fat intake may have a diet with a low fat intake.\nis_weakening(And(factor_presence(high_fat_intake, pollution), Not(factor_presence(low_fat_intake, pollution)))) ::: The countries with high average fat intake are also the countries with the highest levels of environmental pollution."
    ]
  },
  {
    "id": "test_587",
    "context": "Librarian: Some argue that the preservation grant we received should be used to restore our original copy of our town' s charter, since if the charter is not restored, it will soon deteriorate beyond repair. But this document, although sentimentally important, has no scholarly value. Copies are readily available. Since we are a research library and not a museum, the money would be better spent preserving documents that have significant scholarly value.",
    "question": "The claim that the town's charter, if not restored, will soon deteriorate beyond repair plays which one of the following roles in the librarian's argument?",
    "options": [
      "It is a premise in an argument whose conclusion is rejected by the librarian's argument.",
      "It is the conclusion of the argument that the librarian's argument rejects.",
      "It is a claim that the librarian's argument attempts to show to be false.",
      "It is a claim whose truth is required by the librarian's argument."
    ],
    "raw_logic_programs": [
      "# Declarations\nroles = EnumSort([premise_rejected, conclusion_rejected, claim_false, claim_required])\nargument = Function([roles] -> [bool])\n\n# Constraints\nargument(premise_rejected) ::: The claim that the town's charter, if not restored, will soon deteriorate beyond repair is a premise in an argument whose conclusion is rejected by the librarian's argument.\n\n# Options\nQuestion ::: The claim that the town's charter, if not restored, will soon deteriorate beyond repair plays which one of the following roles in the librarian's argument?\nis_true(argument(premise_rejected)) ::: (It is a premise in an argument whose conclusion is rejected by the librarian's argument.)\nis_true(argument(conclusion_rejected)) ::: (It is the conclusion of the argument that the librarian's argument rejects.)\nis_true(argument(claim_false)) ::: (It is a claim that the librarian's argument attempts to show to be false.)\nis_true(argument(claim_required)) ::: (It is a claim whose truth is required by the librarian's argument.)"
    ]
  },
  {
    "id": "test_588",
    "context": "In a recent study, a group of young children were taught the word \"stairs\" while walking up and down a flight of stairs. Later that day, when the children were shown a video of a person climbing a ladder, they all called the ladder stairs.",
    "question": "Which one of the following principles is best illustrated by the study described above?",
    "options": [
      "Young children who learn a word by observing how the object denoted by that word is used sometimes apply that word to a different object that is similarly used.",
      "When young children repeatedly hear a word without seeing the object denoted by the word, they sometimes apply the word to objects not denoted by the word.",
      "The earlier in life a child encounters and uses an object, the easier it is for that child to learn how not to misuse the word denoting that object.",
      "Young children best learn words when they are shown how the object denoted by the word is used."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\nstudy = Function([principles] -> [bool])\n\n# Constraints\nstudy(P1) ::: Young children who learn a word by observing how the object denoted by that word is used sometimes apply that word to a different object that is similarly used.\n\n# Options\nQuestion ::: Which one of the following principles is best illustrated by the study described above?\nis_best_illustrated(study(P1)) ::: (A)\nis_best_illustrated(Not(study(P2))) ::: (B)\nis_best_illustrated(Not(study(P3))) ::: (C)\nis_best_illustrated(Not(study(P4))) ::: (D)"
    ]
  },
  {
    "id": "test_589",
    "context": "According to the Federal Veterans Administration (VA), a certain county has a relatively high proportion of veterans among its residents, and over the past decade, these veterans have reported a number of health concerns that have not been adequately addressed. The VA does not have its own hospital in this county. Plan: For the past 5 years, the VA has earmarked several million dollars to pay all 18 hospitals in this county to fund short-term and long-term care for veterans. Result: Over the past 5 years, VA surveys have indicated no significant decrease in the number of veterans who say they have health concerns that have not been adequately addressed. Further information: VA surveys indicate that all veterans are aware of the VA funds that would cover their expenses at county hospitals. Veterans in this county span a variety of ages and a variety of health conditions.",
    "question": "In light of the further information, which of the following, if true, does most to explain the result that followed the implementation of the plan?",
    "options": [
      "According to surveys, the vast majority of non-veteran members of the state, including the elderly, do not report health concerns that have not been adequately addressed.",
      "Some of the veterans in this county are already on Medicare or Medicaid, which can cover a substantial part of hospital care.",
      "Veterans often have special health needs that are not well handled in conventional settings.",
      "At the federal level, the money allocated to this VA program required reducing the allocation to a number of other federal programs supporting state or county governments in some way."
    ],
    "raw_logic_programs": [
      "# Declarations\nveterans = EnumSort([veteran1, veteran2, ..., veteranN])  # Representing each veteran in the county\nhospitals = EnumSort([hospital1, hospital2, ..., hospital18])  # Representing each hospital in the county\nhealth_concerns = Function([veterans] -> [bool])  # Whether a veteran has health concerns not adequately addressed\naware_of_funds = Function([veterans] -> [bool])  # Whether a veteran is aware of the VA funds\ncovered_by_funds = Function([veterans, hospitals] -> [bool])  # Whether a veteran's care is covered by VA funds at a hospital\nspecial_needs = Function([veterans] -> [bool])  # Whether a veteran has special health needs\n\n# Constraints\nForAll([v:veterans], aware_of_funds(v)) ::: All veterans are aware of the VA funds that would cover their expenses at county hospitals\nForAll([v:veterans], Exists([h:hospitals], covered_by_funds(v, h))) ::: VA funds cover veterans' expenses at county hospitals\nForAll([v:veterans], Exists([h:hospitals], health_concerns(v) == True)) ::: Over the past 5 years, VA surveys have indicated no significant decrease in the number of veterans who say they have health concerns that have not been adequately addressed\n\n# Options\nQuestion ::: Which of the following, if true, does most to explain the result that followed the implementation of the plan?\nis_explanation(ForAll([v:veterans], special_needs(v) == True)) ::: Veterans often have special health needs that are not well handled in conventional settings\nis_explanation(Exists([v:veterans], covered_by_funds(v, hospital1) == False)) ::: Some of the veterans in this county are already on Medicare or Medicaid, which can cover a substantial part of hospital care\nis_explanation(ForAll([v:veterans], health_concerns(v) == False)) ::: According to surveys, the vast majority of non-veteran members of the state, including the elderly, do not report health concerns that have not been adequately addressed\nis_explanation(Exists([v:veterans], covered_by_funds(v, hospital1) == False)) ::: At the federal level, the money allocated to this VA program required reducing the allocation to a number of other federal programs supporting state or county governments in some way"
    ]
  },
  {
    "id": "test_590",
    "context": "Social scientist: Since the body of thought known as Marxism claims to describe rigorously an inexorable historical movement toward the socialization of the means of production, it should be regarded as a scientific theory. Thus, certain interpreters, in taking Marxism as a political program aimed at radically transforming society, have misconstrued it.",
    "question": "The social scientist's conclusion follows logically if which one of the following is assumed?",
    "options": [
      "The description that Marxism gives of certain historical phenomena in the economic sphere is as rigorous as it is claimed to be.",
      "The means of production will inevitably become socialized regardless of any political programs designed to make that occur.",
      "Scientific theories cannot be correctly interpreted to be, or to imply, political programs.",
      "Only bodies of thought consisting purely of rigorous description are scientific theories."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([Marxism])\ninterpretations = EnumSort([scientific_theory, political_program])\nproperties = EnumSort([rigorous_description, historical_movement, socialization_of_means])\nclaims = Function([theories] -> [properties])\nregarded_as = Function([theories] -> [interpretations])\n\n# Constraints\nclaims(Marxism) == rigorous_description ::: Marxism claims to describe rigorously\nclaims(Marxism) == historical_movement ::: Marxism claims to describe an inexorable historical movement\nclaims(Marxism) == socialization_of_means ::: Marxism claims to describe the socialization of the means of production\nregarded_as(Marxism) == scientific_theory ::: Marxism should be regarded as a scientific theory\n\n# Options\nQuestion ::: The social scientist's conclusion follows logically if which one of the following is assumed?\nImplies(And(claims(Marxism) == rigorous_description, claims(Marxism) == historical_movement, claims(Marxism) == socialization_of_means), regarded_as(Marxism) == scientific_theory) ::: (A)\nImplies(claims(Marxism) == socialization_of_means, regarded_as(Marxism) == scientific_theory) ::: (B)\nImplies(Not(regarded_as(Marxism) == political_program), regarded_as(Marxism) == scientific_theory) ::: (C)\nImplies(claims(Marxism) == rigorous_description, regarded_as(Marxism) == scientific_theory) ::: (D)"
    ]
  },
  {
    "id": "test_591",
    "context": "Every delegate to the convention is a party member. Some delegates to the convention are government officials, and each government official who is at the convention is a speaker at the convention, as well.",
    "question": "If the statements above are true, then which one of the following statements must be true?",
    "options": [
      "Every government official at the convention is a party member.",
      "At least some speakers at the convention are delegates to the convention.",
      "At least some speakers at the convention are neither delegates nor party members.",
      "All speakers at the convention are government officials."
    ],
    "raw_logic_programs": [
      "# Declarations\ndelegates = EnumSort([delegate1, delegate2, delegate3, ...])  # Represents all delegates\nparty_members = EnumSort([party_member1, party_member2, party_member3, ...])  # Represents all party members\ngovernment_officials = EnumSort([official1, official2, official3, ...])  # Represents all government officials\nspeakers = EnumSort([speaker1, speaker2, speaker3, ...])  # Represents all speakers\n\nis_delegate = Function([delegates] -> [bool])\nis_party_member = Function([party_members] -> [bool])\nis_government_official = Function([government_officials] -> [bool])\nis_speaker = Function([speakers] -> [bool])\n\n# Constraints\nForAll([d:delegates], is_party_member(d)) ::: Every delegate to the convention is a party member\nExists([d:delegates], is_government_official(d)) ::: Some delegates to the convention are government officials\nForAll([g:government_officials], Implies(is_government_official(g), is_speaker(g))) ::: Each government official who is at the convention is a speaker at the convention\n\n# Options\nQuestion ::: If the statements above are true, then which one of the following statements must be true?\nis_valid(ForAll([g:government_officials], Implies(is_government_official(g), is_party_member(g)))) ::: (Every government official at the convention is a party member.)\nis_valid(Exists([s:speakers], is_delegate(s))) ::: (At least some speakers at the convention are delegates to the convention.)\nis_valid(Exists([s:speakers], And(Not(is_delegate(s)), Not(is_party_member(s))))) ::: (At least some speakers at the convention are neither delegates nor party members.)\nis_valid(ForAll([s:speakers], is_government_official(s))) ::: (All speakers at the convention are government officials.)"
    ]
  },
  {
    "id": "test_592",
    "context": "Microbiologist: Because heavy metals are normally concentrated in sewage sludge during the sewage treatment process, the bacteria that survive in the sludge have evolved the unusual ability to resist heavy-metal poisoning. The same bacteria also show a strong resistance to antibiotics. This suggests that the bacteria' s exposure to the heavy metals in the sewage sludge has somehow promoted their resistance to antibiotics.",
    "question": "Which one of the following, if true, most strengthens the microbiologist's argument?",
    "options": [
      "Antibiotic resistance of bacteria that survive in sewage sludge in which heavy metals are concentrated contributes to their resistance to heavy-metal poisoning.",
      "Most bacteria that are not resistant to antibiotics are not resistant to heavy-metal poisoning either.",
      "Bacteria that live in sewage sludge that is free of heavy metals, but is in other respects similar to normal sewage, are generally resistant to neither heavy-metal poisoning nor antibiotics.",
      "Many kinds of bacteria that do not live in sewage sludge are resistant to both heavy-metal poisoning and antibiotics."
    ],
    "raw_logic_programs": [
      "# Declarations\nbacteria = EnumSort([bacteria_in_sludge, bacteria_not_in_sludge])\nresistances = EnumSort([heavy_metal, antibiotic])\nresistant = Function([bacteria, resistances] -> [bool])\n\n# Constraints\nresistant(bacteria_in_sludge, heavy_metal) ::: Bacteria in sewage sludge are resistant to heavy-metal poisoning\nresistant(bacteria_in_sludge, antibiotic) ::: Bacteria in sewage sludge are resistant to antibiotics\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the microbiologist's argument?\nis_strongest(Implies(resistant(bacteria_in_sludge, antibiotic), resistant(bacteria_in_sludge, heavy_metal))) ::: (A)\nis_strongest(ForAll([b:bacteria], Implies(Not(resistant(b, antibiotic)), Not(resistant(b, heavy_metal))))) ::: (B)\nis_strongest(And(Not(resistant(bacteria_not_in_sludge, heavy_metal)), Not(resistant(bacteria_not_in_sludge, antibiotic)))) ::: (C)\nis_strongest(Exists([b:bacteria], And(Not(b == bacteria_in_sludge), resistant(b, heavy_metal), resistant(b, antibiotic)))) ::: (D)"
    ]
  },
  {
    "id": "test_593",
    "context": "Administrator: Because revenue fell by 15 percent this year, the university needs to reduce next year' s budget. This could be accomplished by eliminating faculty positions. It could also be accomplished by reducing faculty salaries. Since we will not eliminate any faculty positions, we must reduce faculty salaries.",
    "question": "The administrator's reasoning is flawed because the administrator",
    "options": [
      "ignores the possibility that the budget could be reduced by eliminating some faculty positions and reducing the remaining faculty members' salaries",
      "ignores the possibility that, though budget cuts will be needed, they will not need to be as high as 15 percent",
      "presumes, without providing justification, that some faculty members will leave their jobs rather than accept a reduced salary",
      "presumes, without providing justification, that the budget cannot be reduced unless faculty positions are eliminated or faculty salaries are reduced"
    ],
    "raw_logic_programs": [
      "# Declarations\nrevenue_fall = Bool('revenue_fall')\nreduce_budget = Bool('reduce_budget')\neliminate_positions = Bool('eliminate_positions')\nreduce_salaries = Bool('reduce_salaries')\n\n# Constraints\nrevenue_fall == True ::: Revenue fell by 15 percent this year\nreduce_budget == True ::: The university needs to reduce next year's budget\nOr(eliminate_positions, reduce_salaries) ::: The budget could be reduced by eliminating faculty positions or reducing faculty salaries\nNot(eliminate_positions) ::: We will not eliminate any faculty positions\nreduce_salaries == True ::: We must reduce faculty salaries\n\n# Options\nQuestion ::: The administrator's reasoning is flawed because the administrator\nis_flawed(And(Not(eliminate_positions), reduce_salaries, Exists([eliminate_positions, reduce_salaries], And(eliminate_positions, reduce_salaries)))) ::: (ignores the possibility that the budget could be reduced by eliminating some faculty positions and reducing the remaining faculty members' salaries)\nis_flawed(And(reduce_budget, Not(revenue_fall))) ::: (ignores the possibility that, though budget cuts will be needed, they will not need to be as high as 15 percent)\nis_flawed(Exists([reduce_salaries], And(reduce_salaries, Not(eliminate_positions)))) ::: (presumes, without providing justification, that some faculty members will leave their jobs rather than accept a reduced salary)\nis_flawed(And(Not(eliminate_positions), Not(reduce_salaries), reduce_budget)) ::: (presumes, without providing justification, that the budget cannot be reduced unless faculty positions are eliminated or faculty salaries are reduced)"
    ]
  },
  {
    "id": "test_594",
    "context": "Treasure hunter: In general, archaeological artifacts found on public property cannot legally be privately owned. But according to centuries- old maritime law, people who risk their lives attempting to rescue a ship in peril are permitted to keep whatever cargo they can salvage. Under this rule treasure hunters clearly are entitled to keep the cargo from ancient shipwrecks that they risk their lives to save from oblivion in public waters. Archaeologist: Not so. These shipwrecks have stabilized over the centuries they have lain underwater. The only danger they are in is from greedy treasure hunters who destroy archaeological evidence in their hurry to loot salable artifacts.",
    "question": "On the evidence of their statements, it can be concluded that the treasure hunter and the archaeologist disagree on which one of the following?",
    "options": [
      "whether treasure hunters risk their lives when they retrieve artifacts from ancient shipwrecks",
      "in what sense, if any, an ancient shipwreck can be said to be in peril",
      "whether antique shipwrecks in public waters can properly be said to be on public property",
      "whether maritime law can ever be applied to a ship that has already sunk"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([treasure_hunter, archaeologist])\ndisagreements = EnumSort([risk_lives, shipwreck_peril, public_property, maritime_law])\nasserts = Function([statements, disagreements] -> [bool])\n\n# Constraints\nasserts(treasure_hunter, risk_lives) ::: Treasure hunter asserts that treasure hunters risk their lives\nasserts(treasure_hunter, shipwreck_peril) ::: Treasure hunter asserts that shipwrecks are in peril\nasserts(treasure_hunter, maritime_law) ::: Treasure hunter asserts that maritime law applies to shipwrecks\nasserts(archaeologist, Not(shipwreck_peril)) ::: Archaeologist asserts that shipwrecks are not in peril\nasserts(archaeologist, Not(risk_lives)) ::: Archaeologist implies that treasure hunters do not risk their lives\nasserts(archaeologist, Not(maritime_law)) ::: Archaeologist implies that maritime law does not apply to shipwrecks\n\n# Options\nQuestion ::: On the evidence of their statements, it can be concluded that the treasure hunter and the archaeologist disagree on which one of the following?\nis_disagreement(asserts(treasure_hunter, risk_lives) != asserts(archaeologist, risk_lives)) ::: (whether treasure hunters risk their lives when they retrieve artifacts from ancient shipwrecks)\nis_disagreement(asserts(treasure_hunter, shipwreck_peril) != asserts(archaeologist, shipwreck_peril)) ::: (in what sense, if any, an ancient shipwreck can be said to be in peril)\nis_disagreement(asserts(treasure_hunter, public_property) != asserts(archaeologist, public_property)) ::: (whether antique shipwrecks in public waters can properly be said to be on public property)\nis_disagreement(asserts(treasure_hunter, maritime_law) != asserts(archaeologist, maritime_law)) ::: (whether maritime law can ever be applied to a ship that has already sunk)"
    ]
  },
  {
    "id": "test_595",
    "context": "Geologist: A new method for forecasting earthquakes has reliably predicted several earthquakes. Unfortunately, this method can predict only that an earthquake will fall somewhere within a range of two and a half points on the Richter scale. Thus, since a difference of two and a half points can be the difference between a marginally perceptible shaking and a quake that causes considerable damage, the new method is unlikely to be useful.",
    "question": "Which one of the following, if assumed, enables the geologist's conclusion to be properly inferred?",
    "options": [
      "An earthquake-forecasting method is unlikely to be useful unless its predictions always differentiate earthquakes that are barely noticeable from ones that result in substantial destruction.",
      "Several well-established methods for forecasting earthquakes can predict within much narrower ranges than two and a half points on the Richter scale.",
      "Even if an earthquake-forecasting method makes predictions within a very narrow range on the Richter scale, this method is not likely to be useful unless its predictions are reliable.",
      "An earthquake-forecasting method has not been shown to be useful until it has been used to reliably predict a large number of earthquakes."
    ],
    "raw_logic_programs": [
      "# Declarations\nearthquake_forecasting_methods = EnumSort([new_method, other_methods])\nusefulness = Function([earthquake_forecasting_methods] -> [bool])\nrange_accuracy = Function([earthquake_forecasting_methods] -> [float])\nreliability = Function([earthquake_forecasting_methods] -> [bool])\n\n# Constraints\nrange_accuracy(new_method) == 2.5 ::: The new method predicts within a range of two and a half points on the Richter scale\nreliability(new_method) == True ::: The new method has reliably predicted several earthquakes\n\n# Options\nQuestion ::: Which one of the following, if assumed, enables the geologist's conclusion to be properly inferred?\nImplies(And(range_accuracy(new_method) > 0, range_accuracy(new_method) <= 2.5), Not(usefulness(new_method))) ::: (A) An earthquake-forecasting method is unlikely to be useful unless its predictions always differentiate earthquakes that are barely noticeable from ones that result in substantial destruction.\nImplies(Exists([m:earthquake_forecasting_methods], range_accuracy(m) < 2.5), Not(usefulness(new_method))) ::: (B) Several well-established methods for forecasting earthquakes can predict within much narrower ranges than two and a half points on the Richter scale.\nImplies(And(range_accuracy(new_method) <= 2.5, reliability(new_method) == False), Not(usefulness(new_method))) ::: (C) Even if an earthquake-forecasting method makes predictions within a very narrow range on the Richter scale, this method is not likely to be useful unless its predictions are reliable.\nImplies(And(reliability(new_method) == True, range_accuracy(new_method) <= 2.5), Not(usefulness(new_method))) ::: (D) An earthquake-forecasting method has not been shown to be useful until it has been used to reliably predict a large number of earthquakes."
    ]
  },
  {
    "id": "test_596",
    "context": "Global surveys estimate the earth' s population of nesting female leatherback turtles has fallen by more than two-thirds in the past 15 years. Any species whose population declines by more than two-thirds in 15 years is in grave danger of extinction, so the leatherback turtle is clearly in danger of extinction.",
    "question": "Which one of the following is an assumption that the argument requires?",
    "options": [
      "If the global population of leatherback turtles falls by more than two-thirds over the next 15 years, the species will eventually become extinct.",
      "The only way to ensure the continued survival of leatherback turtles in the wild is to breed them in captivity.",
      "Very few leatherback turtles exist in captivity.",
      "The decline in the population of nesting female leatherback turtles is proportional to the decline in the leatherback turtle population as a whole."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([leatherback_turtles])\ntime_periods = EnumSort([past_15_years])\npopulation_decline = Function([species, time_periods] -> [bool])\nextinction_danger = Function([species] -> [bool])\n\n# Constraints\npopulation_decline(leatherback_turtles, past_15_years) == True ::: Global surveys estimate the earth's population of nesting female leatherback turtles has fallen by more than two-thirds in the past 15 years\nForAll([s:species], Implies(population_decline(s, past_15_years), extinction_danger(s))) ::: Any species whose population declines by more than two-thirds in 15 years is in grave danger of extinction\n\n# Options\nQuestion ::: Which one of the following is an assumption that the argument requires?\nis_assumption(ForAll([s:species], Implies(population_decline(s, past_15_years), extinction_danger(s)))) ::: (A) If the global population of leatherback turtles falls by more than two-thirds over the next 15 years, the species will eventually become extinct.\nis_assumption(False) ::: (B) The only way to ensure the continued survival of leatherback turtles in the wild is to breed them in captivity.\nis_assumption(False) ::: (C) Very few leatherback turtles exist in captivity.\nis_assumption(ForAll([s:species], Implies(population_decline(s, past_15_years), extinction_danger(s)))) ::: (D) The decline in the population of nesting female leatherback turtles is proportional to the decline in the leatherback turtle population as a whole."
    ]
  },
  {
    "id": "test_597",
    "context": "Although we could replace the beautiful -- but dilapidated -- old bridge across Black River with a concrete skyway, we should instead replace it with a cable bridge even though this would be more expensive than building a concrete skyway. The extra cost is clearly justified by the importance of maintaining the beauty of our river crossing.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "It is no more costly to maintain a cable bridge than a concrete skyway.",
      "If the new cable bridge is built, most people who see it will think the extra money well spent.",
      "A concrete skyway would not have any practical advantages over a cable bridge.",
      "Building a cable bridge across Black River would produce a more aesthetically pleasing result than building a concrete skyway."
    ],
    "raw_logic_programs": [
      "# Declarations\nbridges = EnumSort([concrete_skyway, cable_bridge])\nattributes = EnumSort([cost, beauty, practicality])\nvalues = EnumSort([more_expensive, less_expensive, more_beautiful, less_beautiful, more_practical, less_practical])\nhas_attribute = Function([bridges, attributes] -> [values])\n\n# Constraints\nhas_attribute(cable_bridge, cost) == more_expensive ::: cable bridge is more expensive than concrete skyway\nhas_attribute(cable_bridge, beauty) == more_beautiful ::: cable bridge is more beautiful than concrete skyway\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(has_attribute(cable_bridge, cost) != more_expensive) ::: (It is no more costly to maintain a cable bridge than a concrete skyway.\nis_assumption(ForAll([p:people], ThinksWellSpent(p, cable_bridge))) ::: (If the new cable bridge is built, most people who see it will think the extra money well spent.\nis_assumption(has_attribute(concrete_skyway, practicality) == more_practical) ::: (A concrete skyway would not have any practical advantages over a cable bridge.\nis_assumption(has_attribute(cable_bridge, beauty) == more_beautiful) ::: (Building a cable bridge across Black River would produce a more aesthetically pleasing result than building a concrete skyway."
    ]
  },
  {
    "id": "test_598",
    "context": "Even though MacArthur' s diet book helped many people lose weight, MacArthur should not have published it. It recommended such small portions of fruits and vegetables that it undoubtedly damaged the health of many who followed the diet. MacArthur is a physician, so MacArthur either knew or should have known that diets low in fruits and vegetables are unhealthful.",
    "question": "Which one of the following principles, if valid, most helps to justify the argument's reasoning?",
    "options": [
      "One should not publish a book recommending a particular course of action if one either knows or ought to know that taking that course of action would be unhealthful.",
      "One should not follow a particular method for achieving some end if doing so has the potential to damage one's health.",
      "One should not publish a book recommending a particular means of attaining a goal unless one knows that the particular means can bring about that goal.",
      "One should not undertake an action if one knows that doing so would seriously damage the health of many people."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([MacArthur])\nactions = EnumSort([publish_book, recommend_diet])\nknowledge = EnumSort([knows, ought_to_know])\nhealth = EnumSort([unhealthful, healthful])\nconsequences = Function([actions] -> [health])\nawareness = Function([people, actions] -> [knowledge])\n\n# Constraints\nconsequences(recommend_diet) == unhealthful ::: The diet recommended by MacArthur is unhealthful\nOr(awareness(MacArthur, recommend_diet) == knows, awareness(MacArthur, recommend_diet) == ought_to_know) ::: MacArthur either knew or should have known the diet is unhealthful\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the argument's reasoning?\nis_valid(Implies(And(awareness(MacArthur, recommend_diet) == knows, consequences(recommend_diet) == unhealthful), Not(publish_book))) ::: (One should not publish a book recommending a particular course of action if one either knows or ought to know that taking that course of action would be unhealthful.\nis_valid(Implies(consequences(recommend_diet) == unhealthful, Not(recommend_diet))) ::: (One should not follow a particular method for achieving some end if doing so has the potential to damage one's health.\nis_valid(Implies(Not(consequences(recommend_diet) == healthful), Not(publish_book))) ::: (One should not publish a book recommending a particular means of attaining a goal unless one knows that the particular means can bring about that goal.\nis_valid(Implies(And(awareness(MacArthur, recommend_diet) == knows, consequences(recommend_diet) == unhealthful), Not(recommend_diet))) ::: (One should not undertake an action if one knows that doing so would seriously damage the health of many people."
    ]
  },
  {
    "id": "test_599",
    "context": "Impact craters caused by meteorites smashing into Earth have been found all around the globe, but they have been found in the greatest density in geologically stable regions. This relatively greater abundance of securely identified craters in geologically stable regions must be explained by the lower rates of destructive geophysical processes in those regions.",
    "question": "The conclusion is properly drawn if which one of the following is assumed?",
    "options": [
      "Actual meteorite impacts have been scattered fairly evenly over the Earth's surface in the course of Earth's geological history.",
      "The rate at which the Earth is struck by meteorites has greatly increased in geologically recent times.",
      "Rates of destructive geophysical processes within any given region vary markedly throughout geological time.",
      "The Earth's geologically stable regions have been studied more intensively by geologists than have its less stable regions."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([stable, unstable])\ncraters = Function([regions] -> [int])\nimpacts = Function([regions] -> [int])\ndestructive_processes = Function([regions] -> [int])\n\n# Constraints\nForAll([r:regions], craters(r) >= 0) ::: Impact craters have been found all around the globe\ncraters(stable) > craters(unstable) ::: They have been found in the greatest density in geologically stable regions\ndestructive_processes(stable) < destructive_processes(unstable) ::: Lower rates of destructive geophysical processes in stable regions\n\n# Options\nQuestion ::: The conclusion is properly drawn if which one of the following is assumed?\nis_assumed(ForAll([r:regions], impacts(r) == impacts(stable))) ::: (A) Actual meteorite impacts have been scattered fairly evenly over the Earth's surface in the course of Earth's geological history.\nis_assumed(Exists([t:int], impacts(stable) > impacts(unstable))) ::: (B) The rate at which the Earth is struck by meteorites has greatly increased in geologically recent times.\nis_assumed(Exists([t:int], destructive_processes(stable) != destructive_processes(unstable))) ::: (C) Rates of destructive geophysical processes within any given region vary markedly throughout geological time.\nis_assumed(Exists([r:regions], craters(r) > craters(unstable))) ::: (D) The Earth's geologically stable regions have been studied more intensively by geologists than have its less stable regions."
    ]
  },
  {
    "id": "test_600",
    "context": "The coming economic recovery will surely be strong. Most of the economists in investment companies now agree that this is so, though the leading academic economists still think otherwise. Since the investment companies' economists are risking their jobs when they make forecasts, whereas academic economists have lifelong tenure, it generally makes sense to take the investment companies' economists more seriously.",
    "question": "The main conclusion of the argument is supported only",
    "options": [
      "through projection from the economic prospects for investment companies to the economic prospects for the economy as a whole",
      "through an assessment of the relative reliability of the experts who agree with the conclusion as compared with that of those who disagree",
      "by comparing the number of experts who agree with the conclusion with the number who disagree with the conclusion",
      "through an assessment of the likely risks and consequences of believing one or another strand of expert opinion"
    ],
    "raw_logic_programs": [
      "# Declarations\nexperts = EnumSort([investment_economists, academic_economists])\nconclusion = Function([experts] -> [bool])\n\n# Constraints\nForAll([e:experts], conclusion(e) == (e == investment_economists)) ::: The investment companies' economists agree with the conclusion, while academic economists do not.\n\n# Options\nQuestion ::: The main conclusion of the argument is supported only\nis_supported(through_projection) ::: (through projection from the economic prospects for investment companies to the economic prospects for the economy as a whole)\nis_supported(through_assessment_of_reliability) ::: (through an assessment of the relative reliability of the experts who agree with the conclusion as compared with that of those who disagree)\nis_supported(by_comparing_numbers) ::: (by comparing the number of experts who agree with the conclusion with the number who disagree with the conclusion)\nis_supported(through_assessment_of_risks) ::: (through an assessment of the likely risks and consequences of believing one or another strand of expert opinion)"
    ]
  },
  {
    "id": "test_601",
    "context": "Industrial engineer: Some people have suggested that the problem of global warming should be addressed by pumping some of the carbon dioxide produced by the burning of fossil fuels into the deep ocean. Many environmentalists worry that this strategy would simply exchange one form of pollution for an equally destructive form. This worry is unfounded, however; much of the carbon dioxide now released into the atmosphere eventually ends up in the ocean anyway, where it does not cause environmental disturbances as destructive as global warming.",
    "question": "Which one of the following most accurately expresses the conclusion of the industrial engineer's argument as a whole?",
    "options": [
      "Much of the carbon dioxide now released into the atmosphere ends up in the ocean where it does not cause environmental disturbances as destructive as global warming.",
      "Environmentalists worry that the strategy of pumping carbon dioxide into the deep ocean to reduce global warming would simply exchange one form of pollution for another, equally destructive one.",
      "Worrying that pumping carbon dioxide into the deep ocean to reduce global warming would simply exchange one form of pollution for another, equally destructive, form is unfounded.",
      "To reduce global warming, the strategy of pumping into the deep ocean at least some of the carbon dioxide now released into the atmosphere should be considered."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([CO2_ocean_not_destructive, Environmentalists_worry_exchange_pollution, Worry_unfounded, Consider_strategy])\nconclusion = Function([statements] -> [bool])\n\n# Constraints\nconclusion(CO2_ocean_not_destructive) ::: Much of the carbon dioxide now released into the atmosphere ends up in the ocean where it does not cause environmental disturbances as destructive as global warming.\nconclusion(Environmentalists_worry_exchange_pollution) ::: Environmentalists worry that the strategy of pumping carbon dioxide into the deep ocean to reduce global warming would simply exchange one form of pollution for another, equally destructive one.\nconclusion(Worry_unfounded) ::: Worrying that pumping carbon dioxide into the deep ocean to reduce global warming would simply exchange one form of pollution for another, equally destructive, form is unfounded.\nconclusion(Consider_strategy) ::: To reduce global warming, the strategy of pumping into the deep ocean at least some of the carbon dioxide now released into the atmosphere should be considered.\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the conclusion of the industrial engineer's argument as a whole?\nis_conclusion(Worry_unfounded) ::: (C)"
    ]
  },
  {
    "id": "test_602",
    "context": "A Habitat Conservation Plan (HCP) is based on a law that allows developers to use land inhabited by endangered species in exchange for a promise to preserve critical habitat or provide replacement land nearby. Some individuals of endangered species are lost in return for assurances by the owner or developer that habitat for those remaining animals will be protected. Environmentalists are pleased that HCPs allow them to win concessions from developers who would otherwise ignore rarely enforced environmental laws. Satisfied property owners prefer HCPs to more restrictive prohibitions of land use.",
    "question": "The situation described above most closely conforms to which one of the following principles?",
    "options": [
      "Laws should not be designed to serve the interests of all the parties concerned since they are often so weak that no one's interest is served well.",
      "The most effective means of preserving endangered species is to refrain from alienating property owners.",
      "Developers should adhere only to those environmental laws that are not overburdensome.",
      "Laws should be fashioned in such a way as to reconcile the interests of developers and environmentalists."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([A, B, C, D])\nconforms_to = Function([principles] -> [bool])\n\n# Constraints\n# The problem description does not provide explicit constraints, but it implies that the HCP is a compromise between developers and environmentalists.\n\n# Options\nQuestion ::: The situation described above most closely conforms to which one of the following principles?\nis_conform(conforms_to(A)) ::: (A) Laws should not be designed to serve the interests of all the parties concerned since they are often so weak that no one's interest is served well.\nis_conform(conforms_to(B)) ::: (B) The most effective means of preserving endangered species is to refrain from alienating property owners.\nis_conform(conforms_to(C)) ::: (C) Developers should adhere only to those environmental laws that are not overburdensome.\nis_conform(conforms_to(D)) ::: (D) Laws should be fashioned in such a way as to reconcile the interests of developers and environmentalists."
    ]
  },
  {
    "id": "test_603",
    "context": "Economist: When people save their money instead of spending it, that money is not being used to make the purchases of goods and services that help businesses remain profitable. Because these purchases are needed to generate tax revenues that can be used for government-funded scientific research, it is clear that industrial growth, which relies on the application of this government-funded research, will falter if the global political climate begins to make people anxious or cautious.",
    "question": "Which one of the following is an assumption required by the economist's argument?",
    "options": [
      "People become less inclined to spend their money on goods and services when the global political climate makes them anxious or cautious.",
      "The purpose of scientific research that is funded by tax money is to lend itself to applications that will sustain industrial growth.",
      "The scientific research that is currently funded by the government will no longer take place if tax revenues decrease.",
      "People who are more inclined to spend than to save their money are neither cautious nor anxious."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([anxious, cautious, not_anxious, not_cautious])\nactions = EnumSort([spend, save])\nresearch = EnumSort([government_funded, not_government_funded])\ngrowth = EnumSort([industrial_growth, no_growth])\n\n# Constraints\nForAll([p:people], Implies(Or(p == anxious, p == cautious), actions(p) == save)) ::: People become less inclined to spend their money on goods and services when the global political climate makes them anxious or cautious\nForAll([r:research], Implies(r == government_funded, growth == industrial_growth)) ::: The purpose of scientific research that is funded by tax money is to lend itself to applications that will sustain industrial growth\nForAll([r:research], Implies(r == government_funded, Exists([t:tax_revenue], t > 0))) ::: The scientific research that is currently funded by the government will no longer take place if tax revenues decrease\nForAll([p:people], Implies(actions(p) == spend, And(p != cautious, p != anxious))) ::: People who are more inclined to spend than to save their money are neither cautious nor anxious\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the economist's argument?\nis_required(ForAll([p:people], Implies(Or(p == anxious, p == cautious), actions(p) == save))) ::: (A)\nis_required(ForAll([r:research], Implies(r == government_funded, growth == industrial_growth))) ::: (B)\nis_required(ForAll([r:research], Implies(r == government_funded, Exists([t:tax_revenue], t > 0)))) ::: (C)\nis_required(ForAll([p:people], Implies(actions(p) == spend, And(p != cautious, p != anxious)))) ::: (D)"
    ]
  },
  {
    "id": "test_604",
    "context": "Whether a machine performs its intended function is plain for all to see, but recognition of excellence in art requires a rare subtlety of perception. So whereas engineers usually maintain their composure when their work is being evaluated, artists tend to become anxious under such circumstances.",
    "question": "The reasoning above conforms most closely to which one of the following propositions?",
    "options": [
      "The value of a machine is independent of the feelings of those who create it, while the value of an artwork is not.",
      "People who create things whose success can be easily ascertained worry less about others' opinions of their work than do people who create things whose value cannot be easily ascertained.",
      "Evaluation of the work of engineers should be based on a different set of standards than is evaluation of the work of artists.",
      "People who have an interest in working as artists are no more likely to have especially anxious personalities than are people who have an interest in working as engineers."
    ],
    "raw_logic_programs": [
      "# Declarations\ncreators = EnumSort([engineers, artists])\nwork_type = EnumSort([machine, artwork])\nevaluation = Function([creators, work_type] -> [bool])\nanxiety = Function([creators] -> [bool])\n\n# Constraints\nForAll([c:creators], evaluation(c, machine) == True) ::: Whether a machine performs its intended function is plain for all to see\nForAll([c:creators], evaluation(c, artwork) == False) ::: Recognition of excellence in art requires a rare subtlety of perception\nForAll([c:creators], Implies(evaluation(c, machine), Not(anxiety(c)))) ::: Engineers usually maintain their composure when their work is being evaluated\nForAll([c:creators], Implies(Not(evaluation(c, artwork)), anxiety(c))) ::: Artists tend to become anxious under such circumstances\n\n# Options\nQuestion ::: The reasoning above conforms most closely to which one of the following propositions?\nis_closest(ForAll([c:creators], Implies(evaluation(c, machine), Not(anxiety(c))) && Implies(Not(evaluation(c, artwork)), anxiety(c)))) ::: (A) The value of a machine is independent of the feelings of those who create it, while the value of an artwork is not.\nis_closest(ForAll([c:creators], Implies(evaluation(c, machine), Not(anxiety(c))) && Implies(Not(evaluation(c, artwork)), anxiety(c)))) ::: (B) People who create things whose success can be easily ascertained worry less about others' opinions of their work than do people who create things whose value cannot be easily ascertained.\nis_closest(ForAll([c:creators], Implies(evaluation(c, machine), Not(anxiety(c))) && Implies(Not(evaluation(c, artwork)), anxiety(c)))) ::: (C) Evaluation of the work of engineers should be based on a different set of standards than is evaluation of the work of artists.\nis_closest(ForAll([c:creators], Implies(evaluation(c, machine), Not(anxiety(c))) && Implies(Not(evaluation(c, artwork)), anxiety(c)))) ::: (D) People who have an interest in working as artists are no more likely to have especially anxious personalities than are people who have an interest in working as engineers."
    ]
  },
  {
    "id": "test_605",
    "context": "When several of a dermatologist' s patients complained of a rash on just one side of their faces, the dermatologist suspected that the cause was some kind of external contact. In each case it turned out that the rash occurred on the side of the face to which the telephone was held. The dermatologist concluded that the rash was caused by prolonged contact with telephones.",
    "question": "Each of the following, if true, provides additional support for the dermatologist's diagnosis EXCEPT:",
    "options": [
      "Telephones are used by most people in the industrialized world.",
      "The complaints occurred after an increase in the patients' use of the telephone.",
      "Most of the patients had occupations that required them to use their telephones extensively.",
      "Many telephones are now manufactured using a kind of plastic to which some people are mildly allergic."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([patient1, patient2, patient3, ...])  # Assuming a finite set of patients\nsides = EnumSort([left, right])\ncauses = EnumSort([external_contact, other])\ncontact_objects = EnumSort([telephone, other_objects])\nrashes = Function([patients, sides] -> [bool])\ncontact = Function([patients, sides, contact_objects] -> [bool])\ndiagnosis = Function([patients] -> [causes])\n\n# Constraints\nForAll([p:patients], Exists([s:sides], rashes(p, s))) ::: Each patient has a rash on one side of their face\nForAll([p:patients, s:sides], Implies(rashes(p, s), contact(p, s, telephone))) ::: Rash occurs on the side of the face to which the telephone was held\nForAll([p:patients], diagnosis(p) == external_contact) ::: The dermatologist concluded that the rash was caused by prolonged contact with telephones\n\n# Options\nQuestion ::: Each of the following, if true, provides additional support for the dermatologist's diagnosis EXCEPT:\nis_exception(ForAll([p:patients], Exists([s:sides], contact(p, s, telephone)))) ::: (Telephones are used by most people in the industrialized world.\nis_exception(ForAll([p:patients], Exists([s:sides], contact(p, s, telephone) & increased_use(p)))) ::: (The complaints occurred after an increase in the patients' use of the telephone.\nis_exception(ForAll([p:patients], occupation_requires_telephone_use(p))) ::: (Most of the patients had occupations that required them to use their telephones extensively.\nis_exception(ForAll([p:patients], Exists([s:sides], contact(p, s, telephone) & allergic_reaction(p)))) ::: (Many telephones are now manufactured using a kind of plastic to which some people are mildly allergic."
    ]
  },
  {
    "id": "test_606",
    "context": "Executive: We recently ran a set of advertisements in the print version of a travel magazine and on that magazine' s website. We were unable to get any direct information about consumer response to the print ads. However, we found that consumer response to the ads on the website was much more limited than is typical for website ads. We concluded that consumer response to the print ads was probably below par as well.",
    "question": "The executive's reasoning does which one of the following?",
    "options": [
      "bases a prediction of the intensity of a phenomenon on information about the intensity of that phenomenon's cause",
      "bases a prediction about future events on facts about recent comparable events",
      "uses a case in which direct evidence is available to draw a conclusion about an analogous case in which direct evidence is unavailable",
      "infers a statistical generalization from claims about a large number of specific instances"
    ],
    "raw_logic_programs": [
      "# Declarations\nphenomena = EnumSort([print_ads_response, website_ads_response])\nevidence = EnumSort([direct, indirect])\nintensity = Function([phenomena] -> [evidence])\n\n# Constraints\nintensity(website_ads_response) == direct ::: We found that consumer response to the ads on the website was much more limited than is typical for website ads\nintensity(print_ads_response) == indirect ::: We were unable to get any direct information about consumer response to the print ads\n\n# Options\nQuestion ::: The executive's reasoning does which one of the following?\nis_valid(uses_case(intensity(website_ads_response) == direct, intensity(print_ads_response) == indirect)) ::: (uses a case in which direct evidence is available to draw a conclusion about an analogous case in which direct evidence is unavailable)"
    ]
  },
  {
    "id": "test_607",
    "context": "Jim' s teacher asked him to determine whether a sample of a substance contained iron. Jim knew that magnets attract iron, so he placed a magnet near the substance. Jim concluded that the substance did contain iron, because the substance became attached to the magnet.",
    "question": "Jim's reasoning is questionable in that it fails to consider the possibility that",
    "options": [
      "iron is attracted to other objects besides magnets",
      "some magnets attract iron more strongly than others",
      "iron sometimes fails to be attracted to magnets",
      "magnets attract substances other than iron"
    ],
    "raw_logic_programs": [
      "# Declarations\nsubstance = EnumSort([contains_iron, does_not_contain_iron])\nmagnet_effect = EnumSort([attracts, does_not_attract])\nattraction = Function([substance, magnet_effect] -> [bool])\n\n# Constraints\nForAll([s:substance], Or(attraction(s, attracts), attraction(s, does_not_attract))) ::: A substance can either be attracted or not attracted by a magnet\n\n# Options\nQuestion ::: Jim's reasoning is questionable in that it fails to consider the possibility that\nis_valid(Exists([s:substance], And(attraction(s, attracts), s == does_not_contain_iron))) ::: (magnets attract substances other than iron)"
    ]
  },
  {
    "id": "test_608",
    "context": "Proponents of nuclear power point out that new nuclear plants are so technologically sophisticated that the chances of a meltdown are extremely small. This is true, but it would still be unwise to build nuclear power plants, since the consequences of a meltdown are absolutely catastrophic.",
    "question": "The pattern of reasoning in which one of the following is most similar to that in the argument above?",
    "options": [
      "Many mountain climbers claim that their sport is safe because mishaps, though often fatal, are rare. However, mountain climbing is very risky: although the number of mishaps is small, so is the number of mountain climbers. Hence, the chance of a fatal mishap during mountain climbing is not as slim as it may seem.",
      "People complain about having to wear seat belts because they believe the chances of traffic accidents are slim. This is true; on any given trip it is unlikely that a collision will occur. However, it is still unwise to ride in a car without a seat belt, for the effort it takes to put one on is minimal.",
      "The risk of serious injury when bungee jumping is quite low. Nonetheless, it is reckless to engage in that activity, for the injuries that would result in the case of an accident are so extreme that it is not worth the risk.",
      "Eating a serving of vegetables just once will not improve your health. It is nonetheless prudent to do so, for eating vegetables every day will make you much healthier over time."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([nuclear_power, mountain_climbing, seat_belts, bungee_jumping, eating_vegetables])\ncomponents = EnumSort([risk, consequence, action])\nreasoning_pattern = Function([arguments, components] -> [bool])\n\n# Constraints\nreasoning_pattern(nuclear_power, risk) == true ::: The chances of a meltdown are extremely small\nreasoning_pattern(nuclear_power, consequence) == true ::: The consequences of a meltdown are catastrophic\nreasoning_pattern(nuclear_power, action) == false ::: It would be unwise to build nuclear power plants\n\nreasoning_pattern(mountain_climbing, risk) == true ::: Mishaps, though often fatal, are rare\nreasoning_pattern(mountain_climbing, consequence) == true ::: The chance of a fatal mishap is not as slim as it may seem\nreasoning_pattern(mountain_climbing, action) == false ::: Mountain climbing is very risky\n\nreasoning_pattern(seat_belts, risk) == true ::: The chances of traffic accidents are slim\nreasoning_pattern(seat_belts, consequence) == false ::: It is unwise to ride in a car without a seat belt\nreasoning_pattern(seat_belts, action) == true ::: The effort to put on a seat belt is minimal\n\nreasoning_pattern(bungee_jumping, risk) == true ::: The risk of serious injury is quite low\nreasoning_pattern(bungee_jumping, consequence) == true ::: The injuries in case of an accident are extreme\nreasoning_pattern(bungee_jumping, action) == false ::: It is reckless to engage in bungee jumping\n\nreasoning_pattern(eating_vegetables, risk) == false ::: Eating vegetables once will not improve health\nreasoning_pattern(eating_vegetables, consequence) == true ::: Eating vegetables every day will make you healthier\nreasoning_pattern(eating_vegetables, action) == true ::: It is prudent to eat vegetables\n\n# Options\nQuestion ::: The pattern of reasoning in which one of the following is most similar to that in the argument above?\nis_similar(reasoning_pattern(nuclear_power, risk) == reasoning_pattern(mountain_climbing, risk) and reasoning_pattern(nuclear_power, consequence) == reasoning_pattern(mountain_climbing, consequence) and reasoning_pattern(nuclear_power, action) == reasoning_pattern(mountain_climbing, action)) ::: (A)\nis_similar(reasoning_pattern(nuclear_power, risk) == reasoning_pattern(seat_belts, risk) and reasoning_pattern(nuclear_power, consequence) == reasoning_pattern(seat_belts, consequence) and reasoning_pattern(nuclear_power, action) == reasoning_pattern(seat_belts, action)) ::: (B)\nis_similar(reasoning_pattern(nuclear_power, risk) == reasoning_pattern(bungee_jumping, risk) and reasoning_pattern(nuclear_power, consequence) == reasoning_pattern(bungee_jumping, consequence) and reasoning_pattern(nuclear_power, action) == reasoning_pattern(bungee_jumping, action)) ::: (C)\nis_similar(reasoning_pattern(nuclear_power, risk) == reasoning_pattern(eating_vegetables, risk) and reasoning_pattern(nuclear_power, consequence) == reasoning_pattern(eating_vegetables, consequence) and reasoning_pattern(nuclear_power, action) == reasoning_pattern(eating_vegetables, action)) ::: (D)"
    ]
  },
  {
    "id": "test_609",
    "context": "Tennyson' s line of poetry \"nature, red in tooth and claw\" is misconstrued by many evolutionists as a reference to Darwin' s theory of evolution. The poem in which the line appears was published in 1850, but Darwin kept his theory closely held until publishing it in 1859. In addition, in view of the context provided by the rest of the poem, the line was clearly meant to refer to the dominant biological theory of the early nineteenth century, which was a creationist theory.",
    "question": "Which one of the following most accurately expresses the main point of the argument?",
    "options": [
      "The dominant biological theory in the early nineteenth century was a creationist theory.",
      "Tennyson's line of poetry was not a reference to Darwin's theory of evolution.",
      "The line of Tennyson's poetry cannot now be construed as an apt description of Darwin's theory of evolution.",
      "Tennyson's line of poetry was written well before Darwin had published his theory of evolution."
    ],
    "raw_logic_programs": [
      "# Declarations\npoem_line = EnumSort([Tennyson_line])\ntheories = EnumSort([Darwin_theory, creationist_theory])\npublication_years = EnumSort([1850, 1859])\nreferences = Function([poem_line] -> [theories])\npublished = Function([theories] -> [publication_years])\n\n# Constraints\npublished(Darwin_theory) == 1859 ::: Darwin's theory was published in 1859\npublished(creationist_theory) < 1850 ::: The creationist theory was dominant before 1850\nreferences(Tennyson_line) == creationist_theory ::: The line was meant to refer to the creationist theory\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the main point of the argument?\nis_main_point(references(Tennyson_line) != Darwin_theory) ::: (Tennyson's line of poetry was not a reference to Darwin's theory of evolution.)\nis_main_point(references(Tennyson_line) == creationist_theory) ::: (The dominant biological theory in the early nineteenth century was a creationist theory.)\nis_main_point(published(Darwin_theory) > 1850) ::: (Tennyson's line of poetry was written well before Darwin had published his theory of evolution.)\nis_main_point(Not(references(Tennyson_line) == Darwin_theory)) ::: (The line of Tennyson's poetry cannot now be construed as an apt description of Darwin's theory of evolution.)"
    ]
  },
  {
    "id": "test_610",
    "context": "None of the students taking literature are taking physics, but several of the students taking physics are taking art. In addition, none of the students taking rhetoric are taking physics.",
    "question": "Which one of the following statements follows logically from the statements above?",
    "options": [
      "None of the students taking literature are taking art.",
      "There are students who are taking rhetoric but not literature.",
      "None of the students taking rhetoric are taking literature.",
      "There are students who are taking art but not literature."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([student1, student2, student3, student4, student5])  # Example student enumeration\nsubjects = EnumSort([literature, physics, art, rhetoric])\ntakes = Function([students, subjects] -> [bool])\n\n# Constraints\nForAll([s:students], Implies(takes(s, literature), Not(takes(s, physics)))) ::: None of the students taking literature are taking physics\nExists([s:students], And(takes(s, physics), takes(s, art))) ::: Several of the students taking physics are taking art\nForAll([s:students], Implies(takes(s, rhetoric), Not(takes(s, physics)))) ::: None of the students taking rhetoric are taking physics\n\n# Options\nQuestion ::: Which one of the following statements follows logically from the statements above?\nis_valid(ForAll([s:students], Implies(takes(s, literature), Not(takes(s, art))))) ::: (A) None of the students taking literature are taking art.\nis_valid(Exists([s:students], And(takes(s, rhetoric), Not(takes(s, literature))))) ::: (B) There are students who are taking rhetoric but not literature.\nis_valid(ForAll([s:students], Implies(takes(s, rhetoric), Not(takes(s, literature))))) ::: (C) None of the students taking rhetoric are taking literature.\nis_valid(Exists([s:students], And(takes(s, art), Not(takes(s, literature))))) ::: (D) There are students who are taking art but not literature."
    ]
  },
  {
    "id": "test_611",
    "context": "Weingarten claims that keeping animals in zoos is unethical. He points out that it involves placing animals in unnatural environments merely for the sake of human amusement. However, since Weingarten sees nothing wrong with owning pets, and keeping pets surely involves placing an animal in an unnatural environment merely for human amusement, his claim should be rejected.",
    "question": "The reasoning in the argument is flawed in that the argument",
    "options": [
      "takes for granted that Weingarten owns one or more pets",
      "inappropriately generalizes from a particular case",
      "rejects a claim merely on the grounds that its proponent holds another view inconsistent with it",
      "misrepresents the conclusion of the opposing argument"
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([keeping_zoos_unethical, owning_pets_acceptable])\nactions = EnumSort([placing_in_unnatural_environments, human_amusement])\narguments = Function([claims] -> [bool])\nreasons = Function([actions] -> [bool])\n\n# Constraints\narguments(keeping_zoos_unethical) == True ::: Weingarten claims that keeping animals in zoos is unethical\nreasons(placing_in_unnatural_environments) == True ::: It involves placing animals in unnatural environments\nreasons(human_amusement) == True ::: Merely for the sake of human amusement\narguments(owning_pets_acceptable) == True ::: Weingarten sees nothing wrong with owning pets\nForAll([a:actions], reasons(a) == True) ::: Keeping pets involves placing an animal in an unnatural environment merely for human amusement\n\n# Options\nQuestion ::: The reasoning in the argument is flawed in that the argument\nis_flawed(rejects_claim_on_inconsistent_view) ::: (rejects a claim merely on the grounds that its proponent holds another view inconsistent with it)\nis_flawed(takes_for_granted_ownership) ::: (takes for granted that Weingarten owns one or more pets)\nis_flawed(inappropriate_generalization) ::: (inappropriately generalizes from a particular case)\nis_flawed(misrepresents_conclusion) ::: (misrepresents the conclusion of the opposing argument)"
    ]
  },
  {
    "id": "test_612",
    "context": "Railroad spokesperson: Of course it is a difficult task to maintain quality of service at the same time that the amount of subsidy the taxpayers give the railroad network is reduced. Over recent years, however, the number of passengers has increased in spite of subsidy reductions. This fact leads to the conclusion that our quality of service has been satisfactory.",
    "question": "The spokesperson's argument is based on which one of the following assumptions?",
    "options": [
      "Taxpayers do not wish to have their taxes raised to subsidize the railroads.",
      "Some people refuse to travel by train if they are dissatisfied with the quality of service.",
      "The quality of service on the trains must have improved in spite of subsidy reductions.",
      "The increase in the number of passengers will increase revenue sufficiently to offset the subsidy reductions."
    ],
    "raw_logic_programs": [
      "# Declarations\npassengers = Bool('passengers')\nsubsidy_reductions = Bool('subsidy_reductions')\nquality_of_service = Bool('quality_of_service')\n\n# Constraints\nAnd(passengers == True, subsidy_reductions == True) ::: Over recent years, the number of passengers has increased in spite of subsidy reductions\n\n# Options\nQuestion ::: The spokesperson's argument is based on which one of the following assumptions?\nImplies(Not(quality_of_service), Not(passengers)) ::: (Some people refuse to travel by train if they are dissatisfied with the quality of service.\nImplies(quality_of_service, passengers) ::: (The quality of service on the trains must have improved in spite of subsidy reductions.\nImplies(passengers, quality_of_service) ::: (The increase in the number of passengers will increase revenue sufficiently to offset the subsidy reductions."
    ]
  },
  {
    "id": "test_613",
    "context": "The ability to access information via computer is a tremendous resource for visually impaired people. Only a limited amount of printed information is accessible in braille, large type, or audiotape. But a person with the right hardware and software can access a large quantity of information from libraries and museums around the world, and can have the computer read the information aloud, display it in large type, or produce a braille version. Thus, visually impaired people can now access information from computers more easily than they can from most traditional sources.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Many visually impaired people prefer traditional sources of information to computers that can read information aloud, display it in large type, or produce a braille version of it.",
      "Relatively easy-to-use computer systems that can read information aloud, display it in large type, or produce a braille version of it are widely available.",
      "Most visually impaired people who have access to information via computer also have access to this same information via more traditional sources.",
      "A computerized speech synthesizer is often less expensive than a complete library of audiotapes."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `sources = EnumSort([traditional, computer])`\n- `access = Function([sources] -> [bool])`\n\n# Constraints\n- `access(computer) == True` ::: The ability to access information via computer is a tremendous resource for visually impaired people.\n- `access(traditional) == False` ::: Only a limited amount of printed information is accessible in braille, large type, or audiotape.\n- `accessibility(computer) > accessibility(traditional)` ::: Visually impaired people can now access information from computers more easily than they can from most traditional sources.\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\n- `is_stronger(accessibility(computer) > accessibility(traditional))` ::: (B) Relatively easy-to-use computer systems that can read information aloud, display it in large type, or produce a braille version of it are widely available."
    ]
  },
  {
    "id": "test_614",
    "context": "The flagellum, which bacteria use to swim, requires many parts before it can propel a bacterium at all. Ttherefore, an evolutionary ancestor of bacteria that had only a few of these parts would gain no survival advantage from them.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "No evolutionary ancestor of bacteria had only a few of the parts of the flagellum.",
      "Any of bacteria's evolutionary ancestors that had only a few of the parts of the flagellum would be at a disadvantage relative to similar organisms that had none of these parts.",
      "For parts now incorporated into the flagellum to have aided an organism's survival, they would have had to help it swim.",
      "All parts of the flagellum are vital to each of its functions."
    ],
    "raw_logic_programs": [
      "# Declarations\nparts = EnumSort([part1, part2, ..., partN])  # Enumerate all parts of the flagellum\norganisms = EnumSort([bacteria, ancestor])\nfunctions = EnumSort([swim, other_function])\nhas_part = Function([organisms, parts] -> [bool])\naids_survival = Function([organisms, functions] -> [bool])\n\n# Constraints\nForAll([p:parts], Implies(has_part(bacteria, p), aids_survival(bacteria, swim))) ::: The flagellum, which bacteria use to swim, requires many parts before it can propel a bacterium at all\nForAll([p:parts], Not(aids_survival(ancestor, swim))) ::: An evolutionary ancestor of bacteria that had only a few of these parts would gain no survival advantage from them\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([p:parts], Not(has_part(ancestor, p)))) ::: (A) No evolutionary ancestor of bacteria had only a few of the parts of the flagellum.\nis_assumption(ForAll([p:parts], Implies(has_part(ancestor, p), aids_survival(ancestor, other_function)))) ::: (B) Any of bacteria's evolutionary ancestors that had only a few of the parts of the flagellum would be at a disadvantage relative to similar organisms that had none of these parts.\nis_assumption(ForAll([p:parts], Implies(has_part(ancestor, p), aids_survival(ancestor, swim)))) ::: (C) For parts now incorporated into the flagellum to have aided an organism's survival, they would have had to help it swim.\nis_assumption(ForAll([p:parts], aids_survival(bacteria, other_function))) ::: (D) All parts of the flagellum are vital to each of its functions."
    ]
  },
  {
    "id": "test_615",
    "context": "Shareholder: The company' s current operations are time-proven successes. The move into food services may siphon off funds needed by these other operations. Also, the food service industry is volatile, with a higher inherent risk than with, for instance, pharmaceuticals, another area into which the company has considered expanding.",
    "question": "If the shareholder's statements are true, which one of the following is most strongly supported by them?",
    "options": [
      "Only if the company expands its operations into pharmaceuticals are increased profits possible.",
      "The company will lose money as it expands into the food service industry.",
      "The company has a greater chance of losing money in food services than in pharmaceuticals.",
      "Investment into pharmaceuticals would not siphon off money from other operations."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([current_operations_success, move_into_food_services_siphon_funds, food_service_industry_volatile, pharmaceuticals_considered])\noutcomes = EnumSort([increased_profits_possible, lose_money_food_services, greater_chance_losing_money_food_services, investment_pharmaceuticals_no_siphon])\n\n# Constraints\nForAll([s:statements], s == True) ::: The shareholder's statements are true\ncurrent_operations_success ::: The company’s current operations are time-proven successes\nmove_into_food_services_siphon_funds ::: The move into food services may siphon off funds needed by these other operations\nfood_service_industry_volatile ::: The food service industry is volatile, with a higher inherent risk\npharmaceuticals_considered ::: Pharmaceuticals is another area into which the company has considered expanding\n\n# Options\nQuestion ::: If the shareholder's statements are true, which one of the following is most strongly supported by them?\nis_supported(greater_chance_losing_money_food_services) ::: (The company has a greater chance of losing money in food services than in pharmaceuticals)"
    ]
  },
  {
    "id": "test_616",
    "context": "There are 1. 3 billion cows worldwide, and this population is growing to keep pace with the demand for meat and milk. These cows produce trillions of liters of methane gas yearly, and this methane contributes to global warming. The majority of the world' s cows are given relatively low-quality diets even though cows produce less methane when they receive better-quality diets. Ttherefore, methane production from cows could be kept in check if cows were given better-quality diets.",
    "question": "Which one of the following, if true, adds the most support for the conclusion of the argument?",
    "options": [
      "Worldwide, more methane is produced by cows raised for meat production than by those raised for milk production.",
      "Carbon and hydrogen, the elements that make up methane, are found in abundance in the components of all types of cow feed.",
      "Cows given good-quality diets produce much more meat and milk than they would produce otherwise.",
      "Most farmers would be willing to give their cows high-quality feed if the cost of that feed were lower."
    ],
    "raw_logic_programs": [
      "# Declarations\ncows = EnumSort([meat_production, milk_production])\nelements = EnumSort([carbon, hydrogen])\nfeed_quality = EnumSort([low_quality, high_quality])\nmethane_production = Function([cows, feed_quality] -> [int])\nmeat_milk_production = Function([cows, feed_quality] -> [int])\nfeed_cost = Function([feed_quality] -> [int])\nfarmer_willingness = Function([feed_quality] -> [bool])\n\n# Constraints\nForAll([c:cows], methane_production(c, high_quality) < methane_production(c, low_quality)) ::: cows produce less methane when they receive better-quality diets\nForAll([e:elements], Exists([f:feed_quality], True)) ::: carbon and hydrogen are found in abundance in the components of all types of cow feed\n\n# Options\nQuestion ::: Which one of the following, if true, adds the most support for the conclusion of the argument?\nis_supportive(methane_production(meat_production, low_quality) > methane_production(milk_production, low_quality)) ::: (A) Worldwide, more methane is produced by cows raised for meat production than by those raised for milk production.\nis_supportive(Exists([e:elements], True)) ::: (B) Carbon and hydrogen, the elements that make up methane, are found in abundance in the components of all types of cow feed.\nis_supportive(meat_milk_production(meat_production, high_quality) > meat_milk_production(meat_production, low_quality)) ::: (C) Cows given good-quality diets produce much more meat and milk than they would produce otherwise.\nis_supportive(ForAll([f:feed_quality], Implies(feed_cost(f) < feed_cost(low_quality), farmer_willingness(f)))) ::: (D) Most farmers would be willing to give their cows high-quality feed if the cost of that feed were lower."
    ]
  },
  {
    "id": "test_617",
    "context": "An article in the Colorado Sun Times claims that Colorado' s voters would welcome the defeat of the governor now in control of the state. The article bases its allegation on a recent survey that found that 63% of Colorado' s registered voters think that the governor will definitely be out of power after next year' s elections.",
    "question": "Which one of the following is a principle that, if established, would provide the strongest justification for the article's conclusion?",
    "options": [
      "The results of surveys that measure current voter attitude toward a particular political leader can legitimately be used as the basis for making claims about the likely future prospects of that political leader.",
      "An increase in ill feeling toward a political leader that is in power can reasonably be expected to result in a similar increase in support for her opponents.",
      "It can be reasonably assumed that registered voters who respond to a survey regarding the outcome of a future election will exercise the right to vote in that election.",
      "The proportion of voters who expect a given political possibility to be fulfilled can reasonably be assumed to approximate the proportion of voters who are in favor of that possibility being realized."
    ],
    "raw_logic_programs": [
      "# Declarations\nvoters = EnumSort([registered_voters])\nsurvey_result = Function([voters] -> [bool])\n\n# Constraints\nsurvey_result(registered_voters) == True ::: 63% of Colorado's registered voters think that the governor will definitely be out of power after next year's elections\n\n# Options\nQuestion ::: Which one of the following is a principle that, if established, would provide the strongest justification for the article's conclusion?\nis_strongest_justification(ForAll([v:voters], Implies(survey_result(v), True))) ::: (The results of surveys that measure current voter attitude toward a particular political leader can legitimately be used as the basis for making claims about the likely future prospects of that political leader.)\nis_strongest_justification(ForAll([v:voters], Implies(survey_result(v), increase_in_support_for_opponents))) ::: (An increase in ill feeling toward a political leader that is in power can reasonably be expected to result in a similar increase in support for her opponents.)\nis_strongest_justification(ForAll([v:voters], Implies(survey_result(v), exercise_right_to_vote))) ::: (It can be reasonably assumed that registered voters who respond to a survey regarding the outcome of a future election will exercise the right to vote in that election.)\nis_strongest_justification(ForAll([v:voters], Implies(survey_result(v), proportion_approximation))) ::: (The proportion of voters who expect a given political possibility to be fulfilled can reasonably be assumed to approximate the proportion of voters who are in favor of that possibility being realized.)"
    ]
  },
  {
    "id": "test_618",
    "context": "Automated flight technology can guide an aircraft very reliably, from navigation to landing. Yet this technology, even when functioning correctly, is not a perfect safeguard against human error.",
    "question": "Which one of the following, if true, most helps to explain the situation described above?",
    "options": [
      "Smaller aircraft do not always have their automated flight technology updated regularly.",
      "If a plane's automated flight technology malfunctions, crew members have to operate the plane manually.",
      "Some airplane crashes are due neither to human error nor to malfunction of automated flight technology.",
      "Automated flight technology invariably executes exactly the commands that humans give it."
    ],
    "raw_logic_programs": [
      "# Declarations\naircrafts = EnumSort([small_aircraft, large_aircraft])\ntechnologies = EnumSort([automated_flight_technology])\nerrors = EnumSort([human_error, technology_malfunction, other_causes])\ncauses = Function([aircrafts, technologies] -> [errors])\n\n# Constraints\nForAll([a:aircrafts], causes(a, automated_flight_technology) != technology_malfunction) ::: Automated flight technology, even when functioning correctly, is not a perfect safeguard against human error\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the situation described above?\nis_explanation(causes(small_aircraft, automated_flight_technology) == human_error) ::: (A) Smaller aircraft do not always have their automated flight technology updated regularly.\nis_explanation(causes(large_aircraft, automated_flight_technology) == human_error) ::: (B) If a plane's automated flight technology malfunctions, crew members have to operate the plane manually.\nis_explanation(causes(small_aircraft, automated_flight_technology) == other_causes) ::: (C) Some airplane crashes are due neither to human error nor to malfunction of automated flight technology.\nis_explanation(causes(large_aircraft, automated_flight_technology) == human_error) ::: (D) Automated flight technology invariably executes exactly the commands that humans give it."
    ]
  },
  {
    "id": "test_619",
    "context": "Evidence suggests that we can manufacture a car with twice the fuel efficiency of a normal car, and it has been shown that we can produce a car that meets safety standards for side-impact crashes. So we can make a car that does both.",
    "question": "The flawed reasoning in the argument above is most similar to that in which one of the following?",
    "options": [
      "Since there is no dishwasher currently available that uses energy efficiently and there is no dishwasher currently available that effectively cleans pans, no dishwasher currently available is well engineered. For, to be well engineered, a dishwasher must use energy efficiently and clean pans effectively.",
      "There are machines that brew coffee and there are machines that toast bread. And it is possible to make a machine that does both. So there will someday be a machine that does both.",
      "It is possible to write a best-selling novel and it is possible to write one that appeals to the critics. Ttherefore, an author could write a critically acclaimed novel that gains a large readership.",
      "Susan says that it is cold outside, and Nathan says that it is snowing; ttherefore, it is both cold and snowing outside."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([car_efficiency, dishwasher, coffee_toast, novel, weather])\nflawed_reasoning = Function([arguments] -> [bool])\n\n# Constraints\nflawed_reasoning(car_efficiency) ::: Evidence suggests that we can manufacture a car with twice the fuel efficiency of a normal car, and it has been shown that we can produce a car that meets safety standards for side-impact crashes. So we can make a car that does both.\n\n# Options\nQuestion ::: The flawed reasoning in the argument above is most similar to that in which one of the following?\nis_similar(flawed_reasoning(dishwasher)) ::: (A) Since there is no dishwasher currently available that uses energy efficiently and there is no dishwasher currently available that effectively cleans pans, no dishwasher currently available is well engineered. For, to be well engineered, a dishwasher must use energy efficiently and clean pans effectively.\nis_similar(flawed_reasoning(coffee_toast)) ::: (B) There are machines that brew coffee and there are machines that toast bread. And it is possible to make a machine that does both. So there will someday be a machine that does both.\nis_similar(flawed_reasoning(novel)) ::: (C) It is possible to write a best-selling novel and it is possible to write one that appeals to the critics. Therefore, an author could write a critically acclaimed novel that gains a large readership.\nis_similar(flawed_reasoning(weather)) ::: (D) Susan says that it is cold outside, and Nathan says that it is snowing; therefore, it is both cold and snowing outside."
    ]
  },
  {
    "id": "test_620",
    "context": "Politician: My opponent says our zoning laws too strongly promote suburban single-family dwellings and should be changed to encourage other forms of housing like apartment buildings. Yet he lives in a house in the country. His lifestyle contradicts his own argument, which should ttherefore not be taken seriously.",
    "question": "The politician's reasoning is most vulnerable to criticism on the grounds that",
    "options": [
      "it neglects the fact that apartment buildings can be built in the suburbs just as easily as in the center of the city",
      "its characterization of the opponent's lifestyle reveals the politician's own prejudice against constructing apartment buildings",
      "its discussion of the opponent's lifestyle is irrelevant to the merits of the opponent's argument",
      "it fails to mention the politician's own living situation"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([opponent_argument, opponent_lifestyle, politician_argument])\ncriticisms = EnumSort([neglects_fact, reveals_prejudice, irrelevant_discussion, fails_to_mention])\nvulnerable_to_criticism = Function([arguments] -> [criticisms])\n\n# Constraints\nvulnerable_to_criticism(opponent_argument) == irrelevant_discussion ::: The politician's reasoning is most vulnerable to criticism on the grounds that its discussion of the opponent's lifestyle is irrelevant to the merits of the opponent's argument\n\n# Options\nQuestion ::: The politician's reasoning is most vulnerable to criticism on the grounds that\nis_valid(vulnerable_to_criticism(opponent_argument) == neglects_fact) ::: (it neglects the fact that apartment buildings can be built in the suburbs just as easily as in the center of the city\nis_valid(vulnerable_to_criticism(opponent_argument) == reveals_prejudice) ::: (its characterization of the opponent's lifestyle reveals the politician's own prejudice against constructing apartment buildings\nis_valid(vulnerable_to_criticism(opponent_argument) == irrelevant_discussion) ::: (its discussion of the opponent's lifestyle is irrelevant to the merits of the opponent's argument\nis_valid(vulnerable_to_criticism(opponent_argument) == fails_to_mention) ::: (it fails to mention the politician's own living situation"
    ]
  },
  {
    "id": "test_621",
    "context": "Glen: An emphasis on law' s purely procedural side produces a concern with personal rights that leads to the individual' s indifference to society' s welfare. Law' s primary role should be to create virtuous citizens. Sara: But such a role would encourage government to decide which modes of life are truly virtuous; that would be more dangerous than government' s being overprotective of individuals' rights.",
    "question": "The dialogue provides the most support for the claim that Glen and Sara disagree about whether",
    "options": [
      "the cultivation of virtue among citizens should be the primary role of law",
      "there is an inherent danger in allowing government to decide what constitutes virtuous behavior among citizens",
      "an emphasis on law's purely procedural side results in government's being overprotective of citizens' rights",
      "citizens can be assumed to be capable of making good choices without governmental interference"
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([Glen, Sara])\nstatements = EnumSort([cultivation_of_virtue, danger_of_government_deciding_virtue, procedural_emphasis_leads_to_overprotection, citizens_make_good_choices])\nagrees = Function([positions, statements] -> [bool])\n\n# Constraints\nagrees(Glen, cultivation_of_virtue) ::: Glen believes that the cultivation of virtue among citizens should be the primary role of law\nNot(agrees(Sara, cultivation_of_virtue)) ::: Sara disagrees with Glen on the primary role of law being the cultivation of virtue\nagrees(Sara, danger_of_government_deciding_virtue) ::: Sara believes there is a danger in allowing government to decide what constitutes virtuous behavior\nNot(agrees(Glen, danger_of_government_deciding_virtue)) ::: Glen does not express concern about the danger of government deciding virtuous behavior\n\n# Options\nQuestion ::: The dialogue provides the most support for the claim that Glen and Sara disagree about whether\nis_disagreement(agrees(Glen, cultivation_of_virtue) != agrees(Sara, cultivation_of_virtue)) ::: (the cultivation of virtue among citizens should be the primary role of law)\nis_disagreement(agrees(Glen, danger_of_government_deciding_virtue) != agrees(Sara, danger_of_government_deciding_virtue)) ::: (there is an inherent danger in allowing government to decide what constitutes virtuous behavior among citizens)\nis_disagreement(agrees(Glen, procedural_emphasis_leads_to_overprotection) != agrees(Sara, procedural_emphasis_leads_to_overprotection)) ::: (an emphasis on law's purely procedural side results in government's being overprotective of citizens' rights)\nis_disagreement(agrees(Glen, citizens_make_good_choices) != agrees(Sara, citizens_make_good_choices)) ::: (citizens can be assumed to be capable of making good choices without governmental interference)"
    ]
  },
  {
    "id": "test_622",
    "context": "Scientist: A controversy in paleontology centers on the question of whether prehistoric human ancestors began to develop sophisticated tools before or after they came to stand upright. I argue that they stood upright first, simply because advanced toolmaking requires free use of the hands, and standing upright makes this possible.",
    "question": "Which one of the following statements, if true, most weakens the scientist's argument?",
    "options": [
      "Many prehistoric human ancestors who stood upright had no sophisticated tools.",
      "Many of the earliest sophisticated tools did not require their users to be able to stand upright.",
      "Those prehistoric human ancestors who first came to stand upright had no more dexterity with their hands than did those who did not stand upright.",
      "Advanced hunting weapons have been discovered among the artifacts belonging to prehistoric human ancestors who did not stand upright."
    ],
    "raw_logic_programs": [
      "# Declarations\nprehistoric_humans = EnumSort([upright, not_upright])\ntoolmaking = EnumSort([sophisticated, not_sophisticated])\ndeveloped_tools = Function([prehistoric_humans] -> [toolmaking])\n\n# Constraints\nForAll([h:prehistoric_humans], Implies(h == upright, developed_tools(h) == sophisticated)) ::: The argument claims that standing upright allows for sophisticated toolmaking\n\n# Options\nQuestion ::: Which one of the following statements, if true, most weakens the scientist's argument?\nis_weakening(Exists([h:prehistoric_humans], And(h == upright, developed_tools(h) == not_sophisticated))) ::: (A) Many prehistoric human ancestors who stood upright had no sophisticated tools.\nis_weakening(Exists([h:prehistoric_humans], And(h == not_upright, developed_tools(h) == sophisticated))) ::: (B) Many of the earliest sophisticated tools did not require their users to be able to stand upright.\nis_weakening(Exists([h:prehistoric_humans], And(h == upright, developed_tools(h) == not_sophisticated))) ::: (C) Those prehistoric human ancestors who first came to stand upright had no more dexterity with their hands than did those who did not stand upright.\nis_weakening(Exists([h:prehistoric_humans], And(h == not_upright, developed_tools(h) == sophisticated))) ::: (D) Advanced hunting weapons have been discovered among the artifacts belonging to prehistoric human ancestors who did not stand upright."
    ]
  },
  {
    "id": "test_623",
    "context": "It is widely believed that the most environmentally sensible thing to do is to buy food from local farmers whenever it is available. But the distance that food travels turns out to be only a small part of its environmental impact. Certain foods can be produced with far less impact in some places rather than others. So, sometimes it is environmentally preferable to buy food that is not produced locally, rather than buy locally produced food.",
    "question": "The claim that the most environmentally sensible thing to do is to buy food from local farmers whenever it is available plays which one of the following roles in the argument?",
    "options": [
      "It is a view that is rejected by the argument.",
      "It is a principle upon which the reasoning in the argument is based.",
      "It is a general principle that is used to reject a particular activity that is not compatible with it.",
      "It is the conclusion of the argument."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaim = EnumSort([local_farmers_claim])\nroles = EnumSort([rejected_view, reasoning_principle, general_principle, conclusion])\nargument_role = Function([claim] -> [roles])\n\n# Constraints\nargument_role(local_farmers_claim) == rejected_view ::: The claim that the most environmentally sensible thing to do is to buy food from local farmers whenever it is available is a view that is rejected by the argument.\n\n# Options\nQuestion ::: The claim that the most environmentally sensible thing to do is to buy food from local farmers whenever it is available plays which one of the following roles in the argument?\nis_role(argument_role(local_farmers_claim) == rejected_view) ::: (It is a view that is rejected by the argument.)\nis_role(argument_role(local_farmers_claim) == reasoning_principle) ::: (It is a principle upon which the reasoning in the argument is based.)\nis_role(argument_role(local_farmers_claim) == general_principle) ::: (It is a general principle that is used to reject a particular activity that is not compatible with it.)\nis_role(argument_role(local_farmers_claim) == conclusion) ::: (It is the conclusion of the argument.)"
    ]
  },
  {
    "id": "test_624",
    "context": "Television executives recently announced that advertising time on television will cost 10 to 15 percent more next fall than it cost last fall. The executives argued that in spite of this increase, advertisers will continue to profit from television advertising, and so advertising time will be no harder to sell next fall than it was last fall.",
    "question": "Which one of the following, if true, would most support the television executives' argument?",
    "options": [
      "The system for rating the size of the audience watching any given television advertisement will change next fall.",
      "The amount of television advertising time purchased by providers of services is increasing, while the amount of such time purchased by providers of products is decreasing.",
      "Most costs of production and distribution of products typically advertised on television are expected to rise 3 to 7 percent in the next year.",
      "A recent survey has shown that the average number of hours people spend watching television is increasing at the rate of 2 percent every two months."
    ],
    "raw_logic_programs": [
      "# Declarations\nadvertising_cost_increase = EnumSort([percent_10, percent_15])\naudience_size_change = EnumSort([increase, decrease, no_change])\nadvertising_time_demand = EnumSort([increase, decrease, no_change])\nproduction_cost_increase = EnumSort([percent_3, percent_7])\nviewing_hours_change = EnumSort([increase, decrease, no_change])\n\n# Constraints\nadvertising_cost_increase == percent_10_to_15 ::: Advertising time on television will cost 10 to 15 percent more next fall than it cost last fall\nadvertising_time_demand == no_change ::: Advertising time will be no harder to sell next fall than it was last fall\n\n# Options\nQuestion ::: Which one of the following, if true, would most support the television executives' argument?\nis_supportive(audience_size_change == increase) ::: (A) The system for rating the size of the audience watching any given television advertisement will change next fall.\nis_supportive(advertising_time_demand == increase) ::: (B) The amount of television advertising time purchased by providers of services is increasing, while the amount of such time purchased by providers of products is decreasing.\nis_supportive(production_cost_increase == percent_3_to_7) ::: (C) Most costs of production and distribution of products typically advertised on television are expected to rise 3 to 7 percent in the next year.\nis_supportive(viewing_hours_change == increase) ::: (D) A recent survey has shown that the average number of hours people spend watching television is increasing at the rate of 2 percent every two months."
    ]
  },
  {
    "id": "test_625",
    "context": "Mr. Blatt: Expert consultants are sought after by management because they help executives make better decisions. That is why they are worth the substantial fees they charge. Ms. Fring: Nonsense. Expert consultants are hired in order to enable executives to avoid responsibility. The more the experts cost, the more they can be blamed when things go wrong.",
    "question": "Which one of the following, if it occurred, would be the strongest evidence favoring Ms. Fring's position over Mr. Blatt's position?",
    "options": [
      "An expert consultant builds up a successful business by charging clients a substantial percentage of the amount an independent assessor judges that the consultant saved the company.",
      "A successful firm of expert consultants seeks to increase its volume of business by reducing its fees, but its volume of business drops.",
      "A company that is trying to decide whether to move its manufacturing plant hires an expensive expert to conduct a cost/benefit analysis.",
      "A company follows a consultant's advice to open two new stores, but both stores are only marginally profitable at first."
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([Mr_Blatts, Ms_Frings])\nevidence = EnumSort([evidence_1, evidence_2, evidence_3, evidence_4])\nsupports = Function([evidence] -> [positions])\n\n# Constraints\nsupports(evidence_1) == Mr_Blatts ::: An expert consultant builds up a successful business by charging clients a substantial percentage of the amount an independent assessor judges that the consultant saved the company.\nsupports(evidence_2) == Ms_Frings ::: A successful firm of expert consultants seeks to increase its volume of business by reducing its fees, but its volume of business drops.\nsupports(evidence_3) == Mr_Blatts ::: A company that is trying to decide whether to move its manufacturing plant hires an expensive expert to conduct a cost/benefit analysis.\nsupports(evidence_4) == Mr_Blatts ::: A company follows a consultant's advice to open two new stores, but both stores are only marginally profitable at first.\n\n# Options\nQuestion ::: Which one of the following, if it occurred, would be the strongest evidence favoring Ms. Fring's position over Mr. Blatt's position?\nis_strongest_evidence(supports(evidence_2) == Ms_Frings) ::: (A)\nis_strongest_evidence(supports(evidence_1) == Ms_Frings) ::: (B)\nis_strongest_evidence(supports(evidence_3) == Ms_Frings) ::: (C)\nis_strongest_evidence(supports(evidence_4) == Ms_Frings) ::: (D)"
    ]
  },
  {
    "id": "test_626",
    "context": "Economist: To the extent that homelessness arises from a lack of available housing, it should not be assumed that the profit motive is at fault. Private investors will, in general, provide housing if the market allows them to make a profit; it is unrealistic to expect investors to take risks with their property unless they get some benefit in return.",
    "question": "Which one of the following most accurately describes the role played in the economist's argument by the phrase \"To the extent that homelessness arises from a lack of available housing\"?",
    "options": [
      "It limits the application of the argument to a part of the problem.",
      "It expresses the conclusion to be argued for.",
      "It suggests that the primary cause of homelessness is lack of available housing.",
      "It suggests a possible solution to the problem of homelessness."
    ],
    "raw_logic_programs": [
      "# Declarations\nphrases = EnumSort([\"To the extent that homelessness arises from a lack of available housing\", \"the profit motive is at fault\", \"Private investors will provide housing\", \"it is unrealistic to expect investors to take risks\"])\nroles = EnumSort([\"limits application\", \"expresses conclusion\", \"suggests primary cause\", \"suggests solution\"])\nrole_of_phrase = Function([phrases] -> [roles])\n\n# Constraints\nrole_of_phrase(\"To the extent that homelessness arises from a lack of available housing\") == \"limits application\" ::: It limits the application of the argument to a part of the problem\nrole_of_phrase(\"the profit motive is at fault\") == \"expresses conclusion\" ::: It expresses the conclusion to be argued for\nrole_of_phrase(\"Private investors will provide housing\") == \"suggests solution\" ::: It suggests a possible solution to the problem of homelessness\nrole_of_phrase(\"it is unrealistic to expect investors to take risks\") == \"expresses conclusion\" ::: It expresses the conclusion to be argued for\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the economist's argument by the phrase \"To the extent that homelessness arises from a lack of available housing\"?\nis_valid(role_of_phrase(\"To the extent that homelessness arises from a lack of available housing\") == \"limits application\") ::: (It limits the application of the argument to a part of the problem.\nis_valid(role_of_phrase(\"To the extent that homelessness arises from a lack of available housing\") == \"expresses conclusion\") ::: (It expresses the conclusion to be argued for.\nis_valid(role_of_phrase(\"To the extent that homelessness arises from a lack of available housing\") == \"suggests primary cause\") ::: (It suggests that the primary cause of homelessness is lack of available housing.\nis_valid(role_of_phrase(\"To the extent that homelessness arises from a lack of available housing\") == \"suggests solution\") ::: (It suggests a possible solution to the problem of homelessness."
    ]
  },
  {
    "id": "test_627",
    "context": "Most pet owners who take allergy medication are allergic to pets . Ttherefore, since Chuck owns a pet dog, it is likely that he will take allergy medication if he develops an allergy to pets.",
    "question": "Which one of the following arguments exhibits flawed reasoning that is most similar to that exhibited by the argument above?",
    "options": [
      "Most cars that are taken to Acme Automotive Electronics do not have electrical problems . Ttherefore, it is likely that Anastasia will not take her car to Acme Automotive Electronics if it has electrical problems.",
      "Most cars taken to Acme Automotive Electronics have electrical problems. Ttherefore, it is unlikely that Anastasia will take her car to Acme Automotive Electronics if it does not have electrical problems .",
      "Most cars taken to Acme Automotive Electronics have electrical problems . Ttherefore, it is likely that Anastasia will take her car to Acme Automotive Electronics whenever she thinks it has electrical problems.",
      "Most cars taken to Acme Automotive Electronics have electrical problems . Ttherefore, it is likely that Anastasia will take her car there if it has electrical problems ."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([pet_owners, cars])\nactions = EnumSort([take_medication, take_to_acme])\nconditions = EnumSort([allergic_to_pets, electrical_problems])\nsubjects = EnumSort([Chuck, Anastasia])\n\n# Constraints\nForAll([e:entities], Implies(e == pet_owners, Most(e, take_medication) == allergic_to_pets)) ::: Most pet owners who take allergy medication are allergic to pets\nForAll([e:entities], Implies(e == cars, Most(e, take_to_acme) == electrical_problems)) ::: Most cars taken to Acme Automotive Electronics have electrical problems\n\n# Options\nQuestion ::: Which one of the following arguments exhibits flawed reasoning that is most similar to that exhibited by the argument above?\nis_similar_flawed_reasoning(Implies(owns(Chuck, pet_dog), take_medication(Chuck) == allergic_to_pets)) ::: (A)\nis_similar_flawed_reasoning(Implies(owns(Anastasia, car), Not(take_to_acme(Anastasia) == electrical_problems))) ::: (B)\nis_similar_flawed_reasoning(Implies(owns(Anastasia, car), Not(take_to_acme(Anastasia) == Not(electrical_problems)))) ::: (C)\nis_similar_flawed_reasoning(Implies(owns(Anastasia, car), take_to_acme(Anastasia) == electrical_problems)) ::: (D)"
    ]
  },
  {
    "id": "test_628",
    "context": "During the three months before and the three months after a major earthquake in California, students at a college there happened to be keeping a record of their dreams. After experiencing the earthquake, half of the students reported dreaming about earthquakes. During the same six months, a group of college students in Ontario who had never experienced an earthquake also recorded their drams. Almost none of the students in Ontario reported dreaming about earthquakes. So it is clear that experiencing an earthquake can cause people to dream about earthquakes.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Before they started keeping records of their dreams, many of the students in California had experienced at least one earthquake.",
      "The students in California were members of a class studying dreams and dream recollection, but the students in Ontario were not.",
      "Before the California earthquake, no more of the students in California than of those in Ontario recorded dreams about earthquakes.",
      "The students in Ontario reported having more dreams overall, per student, than the students in California did."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([California, Ontario])\nevents = EnumSort([before_earthquake, after_earthquake])\ndreams = Function([students, events] -> [bool])\n\n# Constraints\ndreams(California, after_earthquake) == True ::: After experiencing the earthquake, half of the students in California reported dreaming about earthquakes\ndreams(Ontario, after_earthquake) == False ::: Almost none of the students in Ontario reported dreaming about earthquakes\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nis_strongest(And(dreams(California, before_earthquake) == False, dreams(Ontario, before_earthquake) == False)) ::: (Before the California earthquake, no more of the students in California than of those in Ontario recorded dreams about earthquakes.)\nis_strongest(Exists([e:events], dreams(California, e) == True)) ::: (Before they started keeping records of their dreams, many of the students in California had experienced at least one earthquake.)\nis_strongest(And(dreams(California, before_earthquake) == True, dreams(Ontario, before_earthquake) == False)) ::: (The students in California were members of a class studying dreams and dream recollection, but the students in Ontario were not.)\nis_strongest(Count([e:events], dreams(Ontario, e) == True) > Count([e:events], dreams(California, e) == True)) ::: (The students in Ontario reported having more dreams overall, per student, than the students in California did.)"
    ]
  },
  {
    "id": "test_629",
    "context": "Scientist: Genetic engineering has aided new developments in many different fields. But because these techniques require the manipulation of the genetic codes of organisms, they are said to be unethical. What the critics fail to realize is that this kind of manipulation has been going on for millennia; virtually every farm animal is the result of selective breeding for desired traits. Since selective breeding is genetic engineering of a crude sort, genetic engineering is not unethical.",
    "question": "Which one of the following is an assumption on which the scientist's argument depends?",
    "options": [
      "Science can accomplish only what is already in some sense natural, and nothing natural is unethical.",
      "The manipulation of the genetic code of organisms is never unethical.",
      "The manipulation of the genetic code through selective breeding for desired traits is not unethical.",
      "The manipulation of the genetic code through selective breeding for desired traits is important for human survival."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([genetic_engineering, selective_breeding])\nethical_status = Function([arguments] -> [bool])\n\n# Constraints\nethical_status(selective_breeding) == True ::: Selective breeding is not unethical\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the scientist's argument depends?\nis_assumption(ethical_status(selective_breeding) == True) ::: (C) The manipulation of the genetic code through selective breeding for desired traits is not unethical."
    ]
  },
  {
    "id": "test_630",
    "context": "Scientists hoping to understand and eventually reverse damage to the fragile ozone layer in the Earth' s upper atmosphere used a spacecraft to conduct crucial experiments. These experiments drew criticism from a group of environmentalists who observed that a single trip by the spacecraft did as much harm to the ozone layer as a year' s pollution by the average factory, and that since the latter was unjustifiable so must be the former.",
    "question": "The reasoning in the environmentalists' criticism is questionable because it",
    "options": [
      "attempts to compare two quantities that are not comparable in any way",
      "treats as similar two cases that are different in a critical respect",
      "presupposes that experiments always do harm to their subjects",
      "justifies a generalization on the basis of a single instance"
    ],
    "raw_logic_programs": [
      "# Declarations\nquantities = EnumSort([spacecraft_trip, factory_pollution])\ncases = EnumSort([spacecraft_experiment, factory_operation])\nreasoning = Function([cases] -> [bool])\n\n# Constraints\nForAll([q:quantities], Not(Comparable(q))) ::: attempts to compare two quantities that are not comparable in any way\nForAll([c:cases], Not(Similar(c))) ::: treats as similar two cases that are different in a critical respect\nForAll([c:cases], Implies(Experiment(c), Harmful(c))) ::: presupposes that experiments always do harm to their subjects\nForAll([c:cases], Generalization(c)) ::: justifies a generalization on the basis of a single instance\n\n# Options\nQuestion ::: The reasoning in the environmentalists' criticism is questionable because it\nis_questionable(Not(Comparable(spacecraft_trip, factory_pollution))) ::: (A)\nis_questionable(Not(Similar(spacecraft_experiment, factory_operation))) ::: (B)\nis_questionable(Implies(Experiment(spacecraft_experiment), Harmful(spacecraft_experiment))) ::: (C)\nis_questionable(Generalization(spacecraft_experiment)) ::: (D)"
    ]
  },
  {
    "id": "test_631",
    "context": "Rats injected with morphine exhibit decreased activity of the immune system, the bodily system that fights off infections. These same rats exhibited heightened blood levels of corticosteroids, chemicals secreted by the adrenal glands. Since corticosteroids can interfere with immune-system activity, scientists hypothesized that the way morphine reduces immune responses in rats is by stimulating the adrenal glands to secrete additional corticosteroids into the bloodstream.",
    "question": "Which of the following experiments would yield the most useful results for evaluating the scientists' hypothesis?",
    "options": [
      "Removing the adrenal glands of rats, injecting the rats with morphine, and then testing the level of the rats' immune-system responses",
      "Injecting rats with a drug that stimulates immune-system activity and then observing the level of corticosteroids in their bloodstreams",
      "Injecting morphine into rats that already have heightened blood levels of corticosteroids and then observing their new blood levels of corticosteroids",
      "Testing the level of immune-system activity of rats, removing their adrenal glands, and then testing the rats' immune-system activity levels again"
    ],
    "raw_logic_programs": [
      "# Declarations\nrats = EnumSort([rat1, rat2, rat3, rat4])\nconditions = EnumSort([morphine_injection, adrenal_removal, immune_stimulation, corticosteroid_injection])\nresponses = EnumSort([immune_response, corticosteroid_level])\ntests = Function([rats, conditions] -> [responses])\n\n# Constraints\nForAll([r:rats], Exists([c:conditions], tests(r, c) == immune_response)) ::: Each rat undergoes a condition that affects immune response\nForAll([r:rats], Exists([c:conditions], tests(r, c) == corticosteroid_level)) ::: Each rat undergoes a condition that affects corticosteroid level\n\n# Options\nQuestion ::: Which of the following experiments would yield the most useful results for evaluating the scientists' hypothesis?\nis_most_useful(And(tests(rat1, adrenal_removal), tests(rat1, morphine_injection), tests(rat1, immune_response))) ::: (A) Removing the adrenal glands of rats, injecting the rats with morphine, and then testing the level of the rats' immune-system responses\nis_most_useful(And(tests(rat2, immune_stimulation), tests(rat2, corticosteroid_level))) ::: (B) Injecting rats with a drug that stimulates immune-system activity and then observing the level of corticosteroids in their bloodstreams\nis_most_useful(And(tests(rat3, corticosteroid_injection), tests(rat3, morphine_injection), tests(rat3, corticosteroid_level))) ::: (C) Injecting morphine into rats that already have heightened blood levels of corticosteroids and then observing their new blood levels of corticosteroids\nis_most_useful(And(tests(rat4, immune_response), tests(rat4, adrenal_removal), tests(rat4, immune_response))) ::: (D) Testing the level of immune-system activity of rats, removing their adrenal glands, and then testing the rats' immune-system activity levels again"
    ]
  },
  {
    "id": "test_632",
    "context": "A study of high blood pressure treatments found that certain meditation techniques and the most commonly prescribed drugs are equally effective if the selected treatment is followed as directed over the long term. Half the patients given drugs soon stop taking them regularly, whereas eighty percent of the study' s participants who were taught meditation techniques were still regularly using them five years later. Ttherefore, the meditation treatment is the one likely to produce the best results.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "The participants in the study were selected in part on the basis of their willingness to use meditation techniques.",
      "Many people with dangerously high blood pressure are unaware of their condition.",
      "Meditation techniques can reduce the blood pressure of people who do not suffer from high blood pressure.",
      "People who have high blood pressure are usually advised by their physicians to make changes in diet that have been found in many cases to reduce the severity of the condition."
    ],
    "raw_logic_programs": [
      "# Declarations\nparticipants = EnumSort([meditation, drugs])\nadherence = Function([participants] -> [float])  # Represents the adherence rate to the treatment\neffectiveness = Function([participants] -> [bool])  # Represents the effectiveness of the treatment\n\n# Constraints\neffectiveness(meditation) == effectiveness(drugs) ::: Certain meditation techniques and the most commonly prescribed drugs are equally effective if followed as directed\nadherence(meditation) == 0.8 ::: 80% of the study's participants who were taught meditation techniques were still regularly using them five years later\nadherence(drugs) == 0.5 ::: Half the patients given drugs soon stop taking them regularly\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(Exists([p:participants], adherence(p) > 0.5)) ::: (The participants in the study were selected in part on the basis of their willingness to use meditation techniques.)\nis_weakening(Exists([p:participants], Not(effectiveness(p)))) ::: (Many people with dangerously high blood pressure are unaware of their condition.)\nis_weakening(Exists([p:participants], effectiveness(p) == True)) ::: (Meditation techniques can reduce the blood pressure of people who do not suffer from high blood pressure.)\nis_weakening(Exists([p:participants], adherence(p) < 0.8)) ::: (People who have high blood pressure are usually advised by their physicians to make changes in diet that have been found in many cases to reduce the severity of the condition.)"
    ]
  },
  {
    "id": "test_633",
    "context": "While it was once believed that the sort of psychotherapy appropriate for the treatment of neuroses caused by environmental factors is also appropriate for schizophrenia and other psychoses, it is now known that these latter, more serious forms of mental disturbance are best treated by biochemical -- that is, medicinal -- means. This is conclusive evidence that psychoses, unlike neuroses, have nothing to do with environmental factors but rather are caused by some sort of purely organic condition, such as abnormal brain chemistry or brain malformations.",
    "question": "The argument is vulnerable to criticism because it ignores the possibility that",
    "options": [
      "the nature of any medical condition can be inferred from the nature of the treatment that cures that condition",
      "organic illnesses that are nonpsychological in nature may be treatable without using biochemical methods",
      "the organic conditions that result in psychoses can be caused or exacerbated by environmental factors",
      "organic factors having little to do with brain chemistry may be at least partially responsible for neuroses"
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([neuroses, psychoses])\nfactors = EnumSort([environmental, organic])\ntreatments = EnumSort([psychotherapy, biochemical])\ncauses = Function([conditions] -> [factors])\ntreats = Function([conditions] -> [treatments])\n\n# Constraints\ntreats(neuroses) == psychotherapy ::: Psychotherapy is appropriate for the treatment of neuroses\ntreats(psychoses) == biochemical ::: Psychoses are best treated by biochemical means\ncauses(neuroses) == environmental ::: Neuroses are caused by environmental factors\ncauses(psychoses) == organic ::: Psychoses are caused by organic conditions\n\n# Options\nQuestion ::: The argument is vulnerable to criticism because it ignores the possibility that\nis_ignored(Implies(treats(psychoses) == biochemical, causes(psychoses) == organic)) ::: (A) the nature of any medical condition can be inferred from the nature of the treatment that cures that condition\nis_ignored(Exists([c:conditions], And(causes(c) == organic, treats(c) != biochemical))) ::: (B) organic illnesses that are nonpsychological in nature may be treatable without using biochemical methods\nis_ignored(Exists([f:factors], And(f == environmental, causes(psychoses) == organic, exacerbated_by(psychoses, f)))) ::: (C) the organic conditions that result in psychoses can be caused or exacerbated by environmental factors\nis_ignored(Exists([f:factors], And(f != organic, causes(neuroses) == f))) ::: (D) organic factors having little to do with brain chemistry may be at least partially responsible for neuroses"
    ]
  },
  {
    "id": "test_634",
    "context": "In modern \"brushless\" car washes, cloth strips called mitters have replaced brushes. Mitters are easier on most cars' finishes than brushes are. This is especially important with the new clear-coat finishes found on many cars today, which are more easily scratched than older finishes are.",
    "question": "Which one of the following is most strongly supported by the statements above, if those statements are true?",
    "options": [
      "Modern \"brushless\" car washes usually do not produce visible scratches on cars with older finishes.",
      "More cars in use today have clear-coat finishes rather than older finishes.",
      "Brushes are more effective than mitters and are preferred for cleaning cars with older finishes.",
      "When car washes all used brushes rather than mitters, there were more cars on the road with scratched finishes than there are today."
    ],
    "raw_logic_programs": [
      "# Declarations\nfinishes = EnumSort([clear_coat, older])\ncar_washes = EnumSort([brushless, brush])\neffects = EnumSort([scratches, no_scratches])\ncars = Function([finishes, car_washes] -> [effects])\n\n# Constraints\nForAll([f:finishes], cars(f, brushless) == no_scratches) ::: Mitters are easier on most cars' finishes than brushes are\ncars(clear_coat, brush) == scratches ::: Clear-coat finishes are more easily scratched than older finishes\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the statements above, if those statements are true?\nis_supported(cars(older, brushless) == no_scratches) ::: (A) Modern \"brushless\" car washes usually do not produce visible scratches on cars with older finishes.\nis_supported(Count([f:finishes], Exists([c:cars], cars(f, c) == no_scratches)) > Count([f:finishes], Exists([c:cars], cars(f, c) == scratches))) ::: (B) More cars in use today have clear-coat finishes rather than older finishes.\nis_supported(cars(older, brush) == scratches) ::: (C) Brushes are more effective than mitters and are preferred for cleaning cars with older finishes.\nis_supported(Count([f:finishes], cars(f, brush) == scratches) > Count([f:finishes], cars(f, brushless) == scratches)) ::: (D) When car washes all used brushes rather than mitters, there were more cars on the road with scratched finishes than there are today."
    ]
  },
  {
    "id": "test_635",
    "context": "A standard problem for computer security is that passwords that have to be typed on a computer keyboard are comparatively easy for unauthorized users to steal or guess. A new system that relies on recognizing the voices of authorized users apparently avoids this problem. In a small initial trial, the system never incorrectly accepted someone seeking access to the computer' s data. Clearly, if this result can be repeated in an operational setting, then there will be a way of giving access to those people who are entitled to access and to no one else.",
    "question": "The reasoning above is flawed because it",
    "options": [
      "bases a general conclusion on a small amount of data",
      "ignores the possibility that the system sometimes denies access to people who are entitled to access",
      "states its conclusion in a heavily qualified way",
      "fails to recognize that a security system based on voice recognition could easily have applications other than computer security"
    ],
    "raw_logic_programs": [
      "# Declarations\ntrials = EnumSort([initial_trial, operational_setting])\naccess = Function([trials, bool] -> [bool])\nentitled_access = Function([trials, bool] -> [bool])\n\n# Constraints\nForAll([t:trials], Implies(t == initial_trial, Not(access(t, False)))) ::: In a small initial trial, the system never incorrectly accepted someone seeking access\nForAll([t:trials], Implies(t == operational_setting, access(t, True) == entitled_access(t, True))) ::: If this result can be repeated in an operational setting, then there will be a way of giving access to those people who are entitled to access and to no one else\n\n# Options\nQuestion ::: The reasoning above is flawed because it\nis_flawed(bases_general_conclusion_on_small_data) ::: (A) bases a general conclusion on a small amount of data\nis_flawed(ignores_denial_to_entitled) ::: (B) ignores the possibility that the system sometimes denies access to people who are entitled to access\nis_flawed(states_heavily_qualified_conclusion) ::: (C) states its conclusion in a heavily qualified way\nis_flawed(fails_to_recognize_other_applications) ::: (D) fails to recognize that a security system based on voice recognition could easily have applications other than computer security"
    ]
  },
  {
    "id": "test_636",
    "context": "\"DNA fingerprinting\"is a recently-introduced biochemical procedure that uses a pattern derived from a person' s genetic material to match a suspect' s genetic material against that of a specimen from a crime scene. Proponents have claimed astronomically high odds against obtaining a match by chance alone. These odds are based on an assumption that there is independence between the different characteristics represented by a single pattern.",
    "question": "Which one of the following, if true, casts the most doubt on the claim of the proponents of DNA fingerprinting?",
    "options": [
      "The skill required of laboratory technicians performing the DNA fingerprinting procedure is not extraordinary.",
      "There is a generally accepted theoretical basis for interpreting the patterns produced by the procedure.",
      "In the whole population there are various different subgroups, within each of which certain sets of genetic characteristics are shared.",
      "In the investigation of certain genetic diseases, the techniques used in DNA fingerprinting have traced the transmission of the diseases among the living members of very large families."
    ],
    "raw_logic_programs": [
      "# Declarations\ncharacteristics = EnumSort([characteristic1, characteristic2, characteristic3, ...])\nsubgroups = EnumSort([subgroup1, subgroup2, subgroup3, ...])\nindividuals = EnumSort([individual1, individual2, individual3, ...])\nhas_characteristic = Function([individuals, characteristics] -> [bool])\nbelongs_to_subgroup = Function([individuals] -> [subgroups])\n\n# Constraints\nForAll([i:individuals, c1:characteristics, c2:characteristics], Implies(has_characteristic(i, c1) && has_characteristic(i, c2), c1 != c2)) ::: Independence between different characteristics in a single pattern\n\n# Options\nQuestion ::: Which one of the following, if true, casts the most doubt on the claim of the proponents of DNA fingerprinting?\nis_doubtful(Exists([s:subgroups, c:characteristics], ForAll([i:individuals], Implies(belongs_to_subgroup(i) == s, has_characteristic(i, c))))) ::: (C) In the whole population there are various different subgroups, within each of which certain sets of genetic characteristics are shared."
    ]
  },
  {
    "id": "test_637",
    "context": "In 1980 health officials began to publicize the adverse effects of prolonged exposure to the sun, and since then the number of people who sunbathe for extended periods of time has decreased considerably each year. Nevertheless, in 1982 there was a dramatic rise in newly reported cases of melanoma, a form of skin cancer found mostly in people who have had prolonged exposure to the sun.",
    "question": "Which one of the following, if true, helps to resolve the apparent discrepancy in the information above?",
    "options": [
      "Before 1980 a considerable number of the people who developed melanoma as a result of prolonged exposure to the sun were over forty years of age.",
      "Since 1980, those people who have continued to sunbathe for extended periods of time have used sunblocks that effectively screen out the ultraviolet rays that help cause melanoma.",
      "In 1982 scientists reported that the body's need for exposure to sunlight in order to produce vitamin D, which helps prevent the growth of skin cancers, is less than was previously thought.",
      "In 1982 medical researchers perfected a diagnostic technique that allowed them to detect the presence of melanoma much earlier than had previously been possible."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([publicize_effects, decrease_sunbathing, rise_melanoma_cases, diagnostic_technique])\ncauses = EnumSort([prolonged_exposure, diagnostic_improvement])\neffects = EnumSort([melanoma_cases])\n\n# Constraints\nhappens(publicize_effects, 1980) ::: In 1980 health officials began to publicize the adverse effects of prolonged exposure to the sun\nForAll([year:int], Implies(year >= 1980, decrease_sunbathing(year))) ::: since then the number of people who sunbathe for extended periods of time has decreased considerably each year\nhappens(rise_melanoma_cases, 1982) ::: in 1982 there was a dramatic rise in newly reported cases of melanoma\ncauses(prolonged_exposure, melanoma_cases) ::: melanoma is found mostly in people who have had prolonged exposure to the sun\n\n# Options\nQuestion ::: Which one of the following, if true, helps to resolve the apparent discrepancy in the information above?\nis_resolving(Exists([year:int], And(year < 1980, age_over_40(year)))) ::: (A) Before 1980 a considerable number of the people who developed melanoma as a result of prolonged exposure to the sun were over forty years of age\nis_resolving(ForAll([year:int], Implies(year >= 1980, use_sunblock(year)))) ::: (B) Since 1980, those people who have continued to sunbathe for extended periods of time have used sunblocks that effectively screen out the ultraviolet rays that help cause melanoma\nis_resolving(happens(diagnostic_technique, 1982)) ::: (C) In 1982 medical researchers perfected a diagnostic technique that allowed them to detect the presence of melanoma much earlier than had previously been possible"
    ]
  },
  {
    "id": "test_638",
    "context": "Legislator: A foreign company is attempting to buy FerroMetal, a domestic iron-mining company. We should prohibit this sale. Since manufacturing is central to our economy, we need a dependable supply of iron ore. If we allow a foreign company to buy FerroMetal, we will have no grounds to stop foreign companies from buying other iron-mining companies. Soon foreigners will control most of the iron mining here, leaving our manufacturers at their mercy. The end result will be that our manufacturers will no longer be able to rely on a domestic supply of iron ore.",
    "question": "Which one of the following most accurately describes a flaw in the reasoning of the legislator's argument?",
    "options": [
      "The argument defends a practice solely on the grounds that the practice is widely accepted.",
      "The argument presents a chain of possible consequences of a given event as if it were the only possible chain of consequences of that event.",
      "The argument draws a conclusion that simply restates a premise presented in support of that conclusion.",
      "The argument concludes that one event would cause a second event even though the second event would have to precede the first."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([foreign_company_buys_FerroMetal, foreign_companies_buy_other_mining_companies, foreigners_control_most_iron_mining, manufacturers_cannot_rely_on_domestic_supply])\ncauses = Function([events, events] -> [bool])\n\n# Constraints\ncauses(foreign_company_buys_FerroMetal, foreign_companies_buy_other_mining_companies) ::: If we allow a foreign company to buy FerroMetal, we will have no grounds to stop foreign companies from buying other iron-mining companies\ncauses(foreign_companies_buy_other_mining_companies, foreigners_control_most_iron_mining) ::: Soon foreigners will control most of the iron mining here\ncauses(foreigners_control_most_iron_mining, manufacturers_cannot_rely_on_domestic_supply) ::: leaving our manufacturers at their mercy, manufacturers will no longer be able to rely on a domestic supply of iron ore\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the reasoning of the legislator's argument?\nis_flaw(The argument defends a practice solely on the grounds that the practice is widely accepted) ::: (A)\nis_flaw(The argument presents a chain of possible consequences of a given event as if it were the only possible chain of consequences of that event) ::: (B)\nis_flaw(The argument draws a conclusion that simply restates a premise presented in support of that conclusion) ::: (C)\nis_flaw(The argument concludes that one event would cause a second event even though the second event would have to precede the first) ::: (D)"
    ]
  },
  {
    "id": "test_639",
    "context": "Parasitic wasps lay their eggs directly into the eggs of various host insects in exactly the right numbers for any suitable size of host egg. If they laid too many eggs in a host egg, the developing wasp larvae would compete with each other to the death for nutrients and space. If too few eggs were laid, portions of the host egg would decay, killing the wasp larvae.",
    "question": "Which of the following conclusions can properly be drawn from the information above?",
    "options": [
      "Host insects lack any effective defenses against the form of predation practiced by parasitic wasps",
      "Failure to lay enough eggs would lead to the death of the developing wasp larvae more quickly than would laying too many eggs",
      "Parasitic wasps use visual clues to calculate the size of a host egg",
      "The size of the smallest host egg that a wasp could theoretically parasitize can be determined from the wasp's egg-laying behavior"
    ],
    "raw_logic_programs": [
      "# Declarations\nhost_eggs = EnumSort([small, medium, large])\nwasp_eggs = Function([host_eggs] -> [int])\nsuitable_size = Predicate([host_eggs])\n\n# Constraints\nForAll([h:host_eggs], suitable_size(h) == (wasp_eggs(h) > 0)) ::: Parasitic wasps lay their eggs directly into the eggs of various host insects in exactly the right numbers for any suitable size of host egg\nForAll([h:host_eggs], Implies(wasp_eggs(h) > suitable_size(h), wasp_eggs(h) == suitable_size(h))) ::: If they laid too many eggs in a host egg, the developing wasp larvae would compete with each other to the death for nutrients and space\nForAll([h:host_eggs], Implies(wasp_eggs(h) < suitable_size(h), wasp_eggs(h) == suitable_size(h))) ::: If too few eggs were laid, portions of the host egg would decay, killing the wasp larvae\n\n# Options\nQuestion ::: Which of the following conclusions can properly be drawn from the information above?\nis_valid(ForAll([h:host_eggs], Not(suitable_size(h)))) ::: (Host insects lack any effective defenses against the form of predation practiced by parasitic wasps\nis_valid(ForAll([h:host_eggs], Implies(wasp_eggs(h) < suitable_size(h), wasp_eggs(h) > suitable_size(h)))) ::: (Failure to lay enough eggs would lead to the death of the developing wasp larvae more quickly than would laying too many eggs\nis_valid(Exists([h:host_eggs], wasp_eggs(h) == suitable_size(h))) ::: (Parasitic wasps use visual clues to calculate the size of a host egg\nis_valid(Exists([h:host_eggs], wasp_eggs(h) == suitable_size(h))) ::: (The size of the smallest host egg that a wasp could theoretically parasitize can be determined from the wasp's egg-laying behavior"
    ]
  },
  {
    "id": "test_640",
    "context": "The average hourly wage of television assemblers in Vernland has long been significantly lower than that in neighboring Borodia. Since Borodia dropped all tariffs on Vernlandian televisions three years ago, the number of televisions sold annually in Borodia has not changed. However, recent statistics show a drop in the number of television assemblers in Borodia. Ttherefore, updated trade statistics will probably indicate that the number of televisions Borodia imports annually from Vernland has increased.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "The number of televisions assembled annually in Vernland has increased significantly during the past three years",
      "The average number of hours it takes a Borodian television assembler to assemble a television has not decreased significantly during the past three years",
      "The number of television assemblers in Vernland has increased by at least as much as the number of television assemblers in Borodia has decreased",
      "Televisions assembled in Vernland have features that televisions assembled in Borodia do not have"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([Vernland, Borodia])\nvariables = EnumSort([average_hourly_wage, number_of_televisions_sold, number_of_television_assemblers, number_of_televisions_imported])\ntime_periods = EnumSort([three_years_ago, now])\nchange = Function([countries, variables, time_periods] -> [int])\n\n# Constraints\nchange(Borodia, number_of_televisions_sold, now) == change(Borodia, number_of_televisions_sold, three_years_ago) ::: the number of televisions sold annually in Borodia has not changed\nchange(Borodia, number_of_television_assemblers, now) < change(Borodia, number_of_television_assemblers, three_years_ago) ::: recent statistics show a drop in the number of television assemblers in Borodia\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(change(Vernland, number_of_televisions_imported, now) > change(Vernland, number_of_televisions_imported, three_years_ago)) ::: (The number of televisions assembled annually in Vernland has increased significantly during the past three years\nis_assumption(change(Borodia, average_hourly_wage, now) == change(Borodia, average_hourly_wage, three_years_ago)) ::: (The average number of hours it takes a Borodian television assembler to assemble a television has not decreased significantly during the past three years\nis_assumption(change(Vernland, number_of_television_assemblers, now) >= change(Borodia, number_of_television_assemblers, three_years_ago) - change(Borodia, number_of_television_assemblers, now)) ::: (The number of television assemblers in Vernland has increased by at least as much as the number of television assemblers in Borodia has decreased\nis_assumption(False) ::: (Televisions assembled in Vernland have features that televisions assembled in Borodia do not have"
    ]
  },
  {
    "id": "test_641",
    "context": "Historian: The spread of literacy informs more people of injustices and, in the right circumstances, leads to increased capacity to distinguish true reformers from mere opportunists. However, widespread literacy invariably emerges before any comprehensive system of general education; thus, in the interim, the populace is vulnerable to clever demagogues calling for change. Consequently, some relatively benign regimes may ironically be toppled by their own \"enlightened\"move to increase literacy.",
    "question": "Which one of the following is an assumption on which the historian's argument depends?",
    "options": [
      "A lack of general education affects the ability to differentiate between legitimate and illegitimate calls for reform.",
      "Any comprehensive system of general education will tend to preserve the authority of benign regimes.",
      "Any benign regime that fails to provide comprehensive general education will be toppled by a clever demagogue.",
      "Without literacy there can be no general awareness of the injustice in a society."
    ],
    "raw_logic_programs": [
      "# Declarations\nliteracy = BoolSort()\ngeneral_education = BoolSort()\nawareness_of_injustice = BoolSort()\nability_to_distinguish = BoolSort()\nbenign_regime_stability = BoolSort()\n\n# Constraints\nImplies(literacy, awareness_of_injustice) ::: The spread of literacy informs more people of injustices\nImplies(And(literacy, Not(general_education)), Not(ability_to_distinguish)) ::: In the interim, the populace is vulnerable to clever demagogues\nImplies(Not(general_education), Not(benign_regime_stability)) ::: Some benign regimes may be toppled by lack of general education\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the historian's argument depends?\nis_assumption(Implies(Not(general_education), Not(ability_to_distinguish))) ::: (A) A lack of general education affects the ability to differentiate between legitimate and illegitimate calls for reform.\nis_assumption(Implies(general_education, benign_regime_stability)) ::: (B) Any comprehensive system of general education will tend to preserve the authority of benign regimes.\nis_assumption(Implies(Not(general_education), Not(benign_regime_stability))) ::: (C) Any benign regime that fails to provide comprehensive general education will be toppled by a clever demagogue.\nis_assumption(Implies(Not(literacy), Not(awareness_of_injustice))) ::: (D) Without literacy there can be no general awareness of the injustice in a society."
    ]
  },
  {
    "id": "test_642",
    "context": "Should a journalist' s story begin with the set phrase \"in a surprise development, \" as routinely happens? Well, not if the surprise was merely the journalist' s, since journalists should not intrude themselves into their stories, and not if the surprise was someone else' s, because if some person' s surprise was worth mentioning at all, it should have been specifically attributed. The one possibility remaining is that lots of people were surprised; in that case, however, there is no point in belaboring the obvious.",
    "question": "Which one of the following most accurately states the conclusion of the argument above?",
    "options": [
      "Introducing stories with the phrase \"in a surprise development\" is not good journalistic practice.",
      "Journalists should reserve use of the phrase \"in a surprise development\" for major developments that are truly unexpected.",
      "The phrase \"in a surprise development\"is used in three distinct sorts of circumstances.",
      "Journalists should make the point that a development comes as a surprise when summing up, not when introducing, a story."
    ],
    "raw_logic_programs": [
      "# Declarations\nphrases = EnumSort([\"in a surprise development\"])\ncircumstances = EnumSort([\"journalist's surprise\", \"someone else's surprise\", \"lots of people's surprise\"])\ngood_practice = Function([phrases, circumstances] -> [bool])\n\n# Constraints\nNot(good_practice(\"in a surprise development\", \"journalist's surprise\")) ::: Journalists should not intrude themselves into their stories\nNot(good_practice(\"in a surprise development\", \"someone else's surprise\")) ::: If some person’s surprise was worth mentioning, it should have been specifically attributed\nNot(good_practice(\"in a surprise development\", \"lots of people's surprise\")) ::: No point in belaboring the obvious\n\n# Options\nQuestion ::: Which one of the following most accurately states the conclusion of the argument above?\nis_conclusion(Not(Exists([c:circumstances], good_practice(\"in a surprise development\", c)))) ::: (Introducing stories with the phrase \"in a surprise development\" is not good journalistic practice.\nis_conclusion(Exists([c:circumstances], And(good_practice(\"in a surprise development\", c), c == \"major developments that are truly unexpected\"))) ::: (Journalists should reserve use of the phrase \"in a surprise development\" for major developments that are truly unexpected.\nis_conclusion(Exists([c1:circumstances, c2:circumstances, c3:circumstances], And(c1 != c2, c2 != c3, c1 != c3, good_practice(\"in a surprise development\", c1), good_practice(\"in a surprise development\", c2), good_practice(\"in a surprise development\", c3)))) ::: (The phrase \"in a surprise development\" is used in three distinct sorts of circumstances.\nis_conclusion(Exists([c:circumstances], And(good_practice(\"in a surprise development\", c), c == \"when summing up, not when introducing\"))) ::: (Journalists should make the point that a development comes as a surprise when summing up, not when introducing, a story."
    ]
  },
  {
    "id": "test_643",
    "context": "Everyone in Biba' s neighborhood is permitted to swim at Barton Pool at some time during each day that it is open. No children under the age of 6 are permitted to swim at Barton Pool between noon and 5 P. M. From 5 P. M. until closing, Barton Pool is reserved for adults only.",
    "question": "If all the sentences above are true, then which one of the following must be true?",
    "options": [
      "If Biba's next-door neighbor has a child under the age of 6, then Barton Pool is open before noon.",
      "On days when Barton Pool is open, at least some children swim there in the afternoon.",
      "Few children under the age of 6 live in Biba's neighborhood.",
      "Any child swimming in Barton Pool before 5 P. M. must be breaking Barton Pool rules."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Biba, Neighbor, Child, Adult])\ntimes = EnumSort([morning, noon, afternoon, evening, closing])\nages = EnumSort([under_6, over_6])\nswim_permission = Function([people, times] -> [bool])\nage = Function([people] -> [ages])\n\n# Constraints\nForAll([p:people], Exists([t:times], swim_permission(p, t))) ::: Everyone in Biba's neighborhood is permitted to swim at Barton Pool at some time during each day that it is open\nForAll([p:people], Implies(age(p) == under_6, Not(Exists([t:times], And(t >= noon, t < 5, swim_permission(p, t)))))) ::: No children under the age of 6 are permitted to swim at Barton Pool between noon and 5 P.M.\nForAll([p:people], Implies(age(p) == under_6, Not(Exists([t:times], And(t >= 5, swim_permission(p, t)))))) ::: From 5 P.M. until closing, Barton Pool is reserved for adults only\n\n# Options\nQuestion ::: If all the sentences above are true, then which one of the following must be true?\nImplies(age(Neighbor) == under_6, Exists([t:times], t < noon)) ::: (If Biba's next-door neighbor has a child under the age of 6, then Barton Pool is open before noon.)\nExists([p:people], And(age(p) == over_6, Exists([t:times], And(t >= noon, t < 5, swim_permission(p, t))))) ::: (On days when Barton Pool is open, at least some children swim there in the afternoon.)\nForAll([p:people], Implies(age(p) == under_6, Not(Exists([t:times], And(t >= noon, t < 5, swim_permission(p, t)))))) ::: (Few children under the age of 6 live in Biba's neighborhood.)\nForAll([p:people], Implies(Exists([t:times], And(t < 5, swim_permission(p, t))), age(p) == over_6)) ::: (Any child swimming in Barton Pool before 5 P.M. must be breaking Barton Pool rules.)"
    ]
  },
  {
    "id": "test_644",
    "context": "Because no other theory has been able to predict it so simply and accurately, the advance of the perihelion of Mercury is sometimes cited as evidence in support of Einstein' s theory of general relativity. However, this phenomenon was already well known when Einstein developed his theory, and he quite probably adjusted his equations to generate the correct numbers for the perihelion advance. Ttherefore, accounting for this advance should not be counted as evidence in support of Einstein' s theory.",
    "question": "Which one of the following principles, if valid, most helps to justify the argument above?",
    "options": [
      "Unless a phenomenon predicted by a scientific theory is unknown at the time the theory is developed, the theory should not be credited with the discovery of that phenomenon.",
      "Unless a theory can accurately account for all relevant phenomena that are already well known at the time of its development, it cannot be regarded as well supported.",
      "If a theory is adjusted to generate the correct predictions for some phenomenon that is already known to the scientist developing the theory, the theory should not be counted as predicting that phenomenon.",
      "If a theory is adjusted specifically to account for some particular phenomenon, a match between that theory and that phenomenon should not count as evidence in favor of the theory."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([Einstein_theory])\nphenomena = EnumSort([perihelion_advance])\npredicted = Function([theories, phenomena] -> [bool])\nknown = Function([phenomena] -> [bool])\nadjusted = Function([theories, phenomena] -> [bool])\nevidence = Function([theories, phenomena] -> [bool])\n\n# Constraints\nknown(perihelion_advance) ::: the phenomenon was already well known\nadjusted(Einstein_theory, perihelion_advance) ::: Einstein quite probably adjusted his equations\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the argument above?\nImplies(And(predicted(Einstein_theory, perihelion_advance), known(perihelion_advance)), Not(evidence(Einstein_theory, perihelion_advance))) ::: (A) Unless a phenomenon predicted by a scientific theory is unknown at the time the theory is developed, the theory should not be credited with the discovery of that phenomenon.\nImplies(Not(ForAll([p:phenomena], Implies(known(p), predicted(Einstein_theory, p)))), Not(evidence(Einstein_theory, perihelion_advance))) ::: (B) Unless a theory can accurately account for all relevant phenomena that are already well known at the time of its development, it cannot be regarded as well supported.\nImplies(adjusted(Einstein_theory, perihelion_advance), Not(evidence(Einstein_theory, perihelion_advance))) ::: (C) If a theory is adjusted to generate the correct predictions for some phenomenon that is already known to the scientist developing the theory, the theory should not be counted as predicting that phenomenon.\nImplies(adjusted(Einstein_theory, perihelion_advance), Not(evidence(Einstein_theory, perihelion_advance))) ::: (D) If a theory is adjusted specifically to account for some particular phenomenon, a match between that theory and that phenomenon should not count as evidence in favor of the theory."
    ]
  },
  {
    "id": "test_645",
    "context": "Yu: The menu at Jason' s Restaurant states that no food served there contains products grown with chemical pesticides, but this cannot be true. I recently visited Kelly' s Grocery, where Jason goes personally to buy the restaurant' s produce, and I noticed workers unloading produce from a truck belonging to MegaFarm, which I know uses chemical pesticides on all of its crops.",
    "question": "Which one of the following, if true, most undermines Yu's claim?",
    "options": [
      "At Kelly's Grocery, most of the produce items that are grown without chemical pesticides carry a label to indicate that fact.",
      "Jason buys ingredients from several suppliers besides Kelly's Grocery, and those suppliers sell only products that are grown without chemical pesticides.",
      "None of the farms that supply produce to Kelly's Grocery use any pesticide that has not been approved by the government as safe for use on food crops.",
      "Jason does not know that Kelly's Grocery buys produce from MegaFarm."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `restaurants = EnumSort([Jasons])`\n- `grocery_stores = EnumSort([Kellys])`\n- `farms = EnumSort([MegaFarm])`\n- `suppliers = EnumSort([Kellys, OtherSuppliers])`\n- `products = EnumSort([produce])`\n- `uses_chemical_pesticides = Function([farms, products] -> [bool])`\n- `buys_from = Function([restaurants, suppliers] -> [bool])`\n- `sells_only_non_chemical = Function([suppliers] -> [bool])`\n\n# Constraints\n- `uses_chemical_pesticides(MegaFarm, produce) == True` ::: MegaFarm uses chemical pesticides on all of its crops\n- `buys_from(Jasons, Kellys) == True` ::: Jason goes personally to buy the restaurant's produce from Kelly's Grocery\n- `buys_from(Jasons, OtherSuppliers) == True` ::: Jason buys ingredients from several suppliers besides Kelly's Grocery\n\n# Options\nQuestion ::: Which one of the following, if true, most undermines Yu's claim?\n- `is_undermining(sells_only_non_chemical(OtherSuppliers) == True)` ::: (B) Jason buys ingredients from several suppliers besides Kelly's Grocery, and those suppliers sell only products that are grown without chemical pesticides.\n- `is_undermining(Exists([p:products], And(uses_chemical_pesticides(MegaFarm, p), Not(labeled_as_non_chemical(p)))))` ::: (A) At Kelly's Grocery, most of the produce items that are grown without chemical pesticides carry a label to indicate that fact.\n- `is_undermining(ForAll([f:farms], Not(uses_chemical_pesticides(f, produce))))` ::: (C) None of the farms that supply produce to Kelly's Grocery use any pesticide that has not been approved by the government as safe for use on food crops.\n- `is_undermining(Not(knows(Jason, buys_from(Kellys, MegaFarm))))` ::: (D) Jason does not know that Kelly's Grocery buys produce from MegaFarm."
    ]
  },
  {
    "id": "test_646",
    "context": "Many people are alarmed about the population explosion. They fail to appreciate that the present rise in population has in fact been followed by equally potent economic growth. Because of this connection between an increase in population and an increase in economic activity, population control measures should not be taken.",
    "question": "The questionable pattern of reasoning in the argument above is most similar to that in which one of the following?",
    "options": [
      "Parents are concerned about their children spending too much time watching television. Those parents should consider television time as time they could spend with their children. Let the children watch television, but watch it with them.",
      "Most of the salespeople are concerned with complaints about the sales manager's aggressive behavior. They need to consider that sales are currently increasing. Due to this success, no action should be taken to address the manager's behavior.",
      "Subscribers to newsmagazines are concerned that increased postage costs will be passed on to them in the form of higher subscription rates. But that is a price they have to pay for having the magazines delivered. No group of users of the postal system should be subsidized at the expense of others.",
      "Some consumers become concerned when the price of a product increases for several years in a row, thinking that the price will continue to increase. But these consumers are mistaken since a long-term trend of price increases indicates that the price will probably decline in the future."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([population_explosion, television_time, sales_manager_behavior, postage_costs, product_price])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nreasoning(population_explosion) == (economic_growth_follows_population_increase) ::: The argument claims that economic growth follows population increase, so population control measures should not be taken.\n\n# Options\nQuestion ::: The questionable pattern of reasoning in the argument above is most similar to that in which one of the following?\nis_similar(reasoning(television_time) == (watch_with_children)) ::: (A) Parents should watch television with their children instead of limiting TV time.\nis_similar(reasoning(sales_manager_behavior) == (sales_increase_follows_aggressive_behavior)) ::: (B) Sales are increasing due to the manager's aggressive behavior, so no action should be taken.\nis_similar(reasoning(postage_costs) == (costs_passed_to_subscribers)) ::: (C) Increased postage costs are a necessary price for magazine delivery.\nis_similar(reasoning(product_price) == (price_increase_indicates_future_decline)) ::: (D) A long-term trend of price increases indicates a future price decline."
    ]
  },
  {
    "id": "test_647",
    "context": "Ethicist: In general it is wrong to use medical treatments and procedures of an experimental nature without the patient' s consent, because the patient has a right to reject or accept a treatment on the basis of full information about all the available options. But knowledge of the best treatment for emergency conditions can be gained only if consent to experimental practices is sometimes bypassed in medical emergencies. So some restricted nonconsensual medical research should be allowed.",
    "question": "Which one of the following is an assumption required by the ethicist's argument?",
    "options": [
      "Doctors often do not know what is best for their own patients in emergency situations.",
      "The right of patients to informed consent is outweighed in at least some medical emergencies by the possible benefits of research conducted without their consent.",
      "If patients knew that experimental treatments were being used in medical emergencies, it could adversely affect the outcome of that research.",
      "Nonconsensual medical research should be allowed only if the research is highly likely to yield results that will benefit the patient."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([patient1, patient2, ...])  # Represents patients\ntreatments = EnumSort([experimental, non_experimental])  # Represents types of treatments\nconsent = Function([patients, treatments] -> [bool])  # Represents whether a patient has given consent for a treatment\nemergency = Function([patients] -> [bool])  # Represents whether a patient is in an emergency condition\nresearch_allowed = Function([patients] -> [bool])  # Represents whether nonconsensual research is allowed for a patient\n\n# Constraints\nForAll([p:patients], Implies(Not(consent(p, experimental)), Not(research_allowed(p)))) ::: In general, it is wrong to use experimental treatments without consent\nForAll([p:patients], Implies(emergency(p), research_allowed(p))) ::: Knowledge of the best treatment for emergencies can be gained only if consent is sometimes bypassed\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the ethicist's argument?\nis_assumption(ForAll([p:patients], Implies(emergency(p), Not(consent(p, experimental))))) ::: (A) Doctors often do not know what is best for their own patients in emergency situations.\nis_assumption(Exists([p:patients], And(emergency(p), research_allowed(p)))) ::: (B) The right of patients to informed consent is outweighed in at least some medical emergencies by the possible benefits of research conducted without their consent.\nis_assumption(ForAll([p:patients], Implies(emergency(p), Not(consent(p, experimental))))) ::: (C) If patients knew that experimental treatments were being used in medical emergencies, it could adversely affect the outcome of that research.\nis_assumption(ForAll([p:patients], Implies(research_allowed(p), emergency(p)))) ::: (D) Nonconsensual medical research should be allowed only if the research is highly likely to yield results that will benefit the patient."
    ]
  },
  {
    "id": "test_648",
    "context": "Two paleontologists, Dr. Tyson and Dr. Rees, disagree over the interpretation of certain footprints that were left among other footprints in hardened volcanic ash at site G. Dr. Tyson claims they are clearly early hominid footprints since they show human characteristics: a squarish heel and a big toe immediately adjacent to the next toe. However, since the footprints indicate that if hominids made those prints they would have had to walk in an unexpected cross-stepping manner, by placing the left foot to the right of the right foot, Dr. Rees rejects Dr. Tyson' s conclusion.",
    "question": "The disagreement between the two paleontologists is over which one of the following?",
    "options": [
      "the assumption that early hominid footprints are distinguishable from other footprints",
      "the possibility of using the evidence of footprints to determine the gait of the creature that made those footprints",
      "the relative significance of various aspects of the evidence",
      "the assumption that evidence from one paleontologic site is enough to support a conclusion"
    ],
    "raw_logic_programs": [
      "# Declarations\npaleontologists = EnumSort([Dr_Tyson, Dr_Rees])\ncharacteristics = EnumSort([squarish_heel, big_toe_adjacent, cross_stepping])\ninterpretations = EnumSort([early_hominid, other])\n\n# Constraints\ninterpretation(Dr_Tyson) == early_hominid ::: Dr. Tyson claims they are early hominid footprints\ninterpretation(Dr_Rees) == other ::: Dr. Rees rejects Dr. Tyson's conclusion\nForAll([c:characteristics], Implies(interpretation(Dr_Tyson) == early_hominid, Or(c == squarish_heel, c == big_toe_adjacent))) ::: Dr. Tyson's interpretation is based on human characteristics\nForAll([c:characteristics], Implies(interpretation(Dr_Rees) == other, c == cross_stepping)) ::: Dr. Rees's rejection is based on the cross-stepping manner\n\n# Options\nQuestion ::: The disagreement between the two paleontologists is over which one of the following?\nis_disagreement(interpretation(Dr_Tyson) == early_hominid, interpretation(Dr_Rees) == other) ::: (A) the assumption that early hominid footprints are distinguishable from other footprints\nis_disagreement(Exists([c:characteristics], c == cross_stepping), interpretation(Dr_Tyson) == early_hominid) ::: (B) the possibility of using the evidence of footprints to determine the gait of the creature that made those footprints\nis_disagreement(Exists([c:characteristics], Or(c == squarish_heel, c == big_toe_adjacent)), Exists([c:characteristics], c == cross_stepping)) ::: (C) the relative significance of various aspects of the evidence\nis_disagreement(interpretation(Dr_Tyson) == early_hominid, interpretation(Dr_Rees) == other) ::: (D) the assumption that evidence from one paleontologic site is enough to support a conclusion"
    ]
  },
  {
    "id": "test_649",
    "context": "Geetha: Munaf claims that the Aasa Nagar Neighbors Association overwhelmingly opposes the new water system, citing this as evidence of citywide opposition. The association did pass a resolution opposing the new water system, but only 25 of 350 members voted, with 10 in favor of the system. Furthermore, the 15 opposing votes represent far less than 1 percent of Aasa Nagar' s population. One should not assume that so few votes represent the view of the majority of Aasa Nagar' s residents.",
    "question": "Of the following, which one most accurately describes Geetha's strategy of argumentation?",
    "options": [
      "questioning a claim supported by statistical data by arguing that statistical data can be manipulated to support whatever view the interpreter wants to support",
      "criticizing a view on the grounds that the view is based on evidence that is in principle impossible to disconfirm",
      "attempting to cast doubt on a conclusion by claiming that the statistical sample on which the conclusion is based is too small to be dependable",
      "questioning a conclusion based on the results of a vote, on the grounds that people with certain views are more likely to vote"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Geetha, Munaf])\nclaims = EnumSort([opposition, support])\nevidence = EnumSort([vote, population])\nstrategy = Function([arguments, claims, evidence] -> [bool])\n\n# Constraints\nstrategy(Munaf, opposition, vote) ::: Munaf claims that the Aasa Nagar Neighbors Association overwhelmingly opposes the new water system based on the vote\nstrategy(Geetha, opposition, vote) ::: Geetha acknowledges the vote but questions its representativeness\nstrategy(Geetha, opposition, population) ::: Geetha argues that the opposing votes represent far less than 1 percent of Aasa Nagar's population\n\n# Options\nQuestion ::: Of the following, which one most accurately describes Geetha's strategy of argumentation?\nis_accurate(strategy(Geetha, opposition, vote) == \"questioning a claim supported by statistical data by arguing that statistical data can be manipulated to support whatever view the interpreter wants to support\") ::: (A)\nis_accurate(strategy(Geetha, opposition, vote) == \"criticizing a view on the grounds that the view is based on evidence that is in principle impossible to disconfirm\") ::: (B)\nis_accurate(strategy(Geetha, opposition, vote) == \"attempting to cast doubt on a conclusion by claiming that the statistical sample on which the conclusion is based is too small to be dependable\") ::: (C)\nis_accurate(strategy(Geetha, opposition, vote) == \"questioning a conclusion based on the results of a vote, on the grounds that people with certain views are more likely to vote\") ::: (D)"
    ]
  },
  {
    "id": "test_650",
    "context": "Most of the ultraviolet radiation reaching the Earth' s atmosphere from the Sun is absorbed by the layer of stratospheric ozone and never reaches the Earth' s surface. Between 1969 and 1986, the layer of stratospheric ozone over North America thinned, decreasing by about 3 percent. Yet, the average level of ultraviolet radiation measured at research stations across North America decreased over the same period.",
    "question": "Which one of the following, if true, best reconciles the apparently discrepant facts described above?",
    "options": [
      "Between 1969 and 1986, the layer of stratospheric ozone over Brazil thinned, and the average level of ultraviolet radiation reaching the Earth's surface in Brazil increased.",
      "Ozone pollution, which absorbs ultraviolet radiation, increased dramatically between 1969 and 1986.",
      "Manufactured chlorine chemicals thin the layer of stratospheric ozone.",
      "Thinning of the layer of stratospheric ozone varies from one part of the world to another and from year to year."
    ],
    "raw_logic_programs": [
      "# Declarations\nfacts = EnumSort([ozone_thinning, uv_radiation_decrease, ozone_pollution_increase, chlorine_chemicals, thinning_variability])\nreconciles = Function([facts] -> [bool])\n\n# Constraints\nreconciles(ozone_thinning) == False ::: The thinning of the ozone layer over North America does not explain the decrease in UV radiation.\nreconciles(uv_radiation_decrease) == False ::: The decrease in UV radiation is the fact to be explained, not an explanation.\nreconciles(chlorine_chemicals) == False ::: Chlorine chemicals contribute to ozone thinning, not directly to UV radiation levels.\nreconciles(thinning_variability) == False ::: Variability in thinning does not directly explain the decrease in UV radiation over North America.\n\n# Options\nQuestion ::: Which one of the following, if true, best reconciles the apparently discrepant facts described above?\nis_best_reconciliation(reconciles(ozone_pollution_increase)) ::: Ozone pollution, which absorbs ultraviolet radiation, increased dramatically between 1969 and 1986."
    ]
  },
  {
    "id": "test_651",
    "context": "Brewer: All children should be given the opportunity to participate in competitive sports; these activities provide an unsurpassed opportunity to engage children' s emotions and so stimulate them to put maximum effort into attaining high athletic standards. Polanski: I disagree. Competitive athletics does, over time, produce a handful of highly motivated children with a desire to excel at an activity, but many children have no taste for competition, and to make them participate would only cause them to develop an antipathy toward athletics.",
    "question": "Polanski's response most strongly supports the contention that Polanski misunderstood Brewer to be asserting that",
    "options": [
      "characteristics acquired by playing competitive sports carry over into the rest of one's life",
      "winning at competitive sports is essential to motivation to excel at athletics",
      "children cannot be motivated without their emotions being engaged",
      "children should be required to participate in competitive sports regardless of their interests"
    ],
    "raw_logic_programs": [
      "# Declarations\nassertions = EnumSort([carry_over, winning_essential, emotions_engaged, required_participation])\nbrewer_assertion = Function([assertions] -> [bool])\npolanski_misunderstanding = Function([assertions] -> [bool])\n\n# Constraints\nbrewer_assertion(emotions_engaged) ::: Brewer asserts that engaging emotions is key to stimulating effort in athletics\npolanski_misunderstanding(required_participation) ::: Polanski misunderstands Brewer to be asserting that children should be required to participate regardless of interest\n\n# Options\nQuestion ::: Polanski's response most strongly supports the contention that Polanski misunderstood Brewer to be asserting that\nis_supported(polanski_misunderstanding(carry_over)) ::: (A)\nis_supported(polanski_misunderstanding(winning_essential)) ::: (B)\nis_supported(polanski_misunderstanding(emotions_engaged)) ::: (C)\nis_supported(polanski_misunderstanding(required_participation)) ::: (D)"
    ]
  },
  {
    "id": "test_652",
    "context": "For the last three years, entomologists have been searching for a parasite to help control a whitefly that has recently become a serious crop pest. Believing this new pest to be a variety of sweet-potato whitefly, the entomologists confined their search to parasites of the sweet-potato whitefly. Genetic research now shows the new pest to be a distinct species, the silverfleaf whitefly. Ttherefore, the search for a parasite has so far been wasted effort.",
    "question": "Which one of the following is an assumption on which the argument relies?",
    "options": [
      "All varieties of the sweet-potato whitefly are serious crop pests.",
      "The chances of successfully identifying a useful parasite of the new pest have increased since the proper identification of the pest.",
      "In the last three years, the entomologists found no parasites of the sweet-potato whitefly.",
      "No parasite of the sweet-potato whitefly is also a parasite of the silverleaf whitefly."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([sweet_potato_whitefly, silverleaf_whitefly])\nparasites = Function([species] -> [bool])\n\n# Constraints\nparasites(sweet_potato_whitefly) ::: entomologists confined their search to parasites of the sweet-potato whitefly\nNot(parasites(silverleaf_whitefly)) ::: the search for a parasite has so far been wasted effort\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument relies?\nis_assumption(Not(Exists([p:parasites], And(parasites(sweet_potato_whitefly), parasites(silverleaf_whitefly))))) ::: (A) All varieties of the sweet-potato whitefly are serious crop pests.\nis_assumption(Exists([p:parasites], parasites(silverleaf_whitefly))) ::: (B) The chances of successfully identifying a useful parasite of the new pest have increased since the proper identification of the pest.\nis_assumption(Not(Exists([p:parasites], parasites(sweet_potato_whitefly)))) ::: (C) In the last three years, the entomologists found no parasites of the sweet-potato whitefly.\nis_assumption(Not(Exists([p:parasites], And(parasites(sweet_potato_whitefly), parasites(silverleaf_whitefly))))) ::: (D) No parasite of the sweet-potato whitefly is also a parasite of the silverleaf whitefly."
    ]
  },
  {
    "id": "test_653",
    "context": "Last year Comfort Airlines had twice as many delayed flights as the year before, but the number of complaints from passengers about delayed flights went up three times. It is unlikely that this disproportionate increase in complaints was rooted in an increase in overall dissatisfaction with the service Comfort Airlines provides, since the airline made a special effort to improve other aspects of its service last year.",
    "question": "Which of the following, if true, most helps to explain the disproportionate increase in customer complaints?",
    "options": [
      "Comfort Airlines had more flights last year than the year before.",
      "The average length of a flight delay was greater last year than it was the year before.",
      "Some of the improvements that Comfort Airlines made in its service were required by new government regulations.",
      "The average number of passengers per flight was no higher last year than the year before."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([year_before, last_year])\nmetrics = EnumSort([delayed_flights, complaints])\nvalues = Function([years, metrics] -> [int])\n\n# Constraints\nvalues(last_year, delayed_flights) == 2 * values(year_before, delayed_flights) ::: Last year Comfort Airlines had twice as many delayed flights as the year before\nvalues(last_year, complaints) == 3 * values(year_before, complaints) ::: The number of complaints from passengers about delayed flights went up three times\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the disproportionate increase in customer complaints?\nis_explanation(values(last_year, delayed_flights) > values(year_before, delayed_flights)) ::: (Comfort Airlines had more flights last year than the year before.)\nis_explanation(values(last_year, delayed_flights) > values(year_before, delayed_flights) and average_delay(last_year) > average_delay(year_before)) ::: (The average length of a flight delay was greater last year than it was the year before.)\nis_explanation(improvements_required_by_regulations) ::: (Some of the improvements that Comfort Airlines made in its service were required by new government regulations.)\nis_explanation(average_passengers(last_year) == average_passengers(year_before)) ::: (The average number of passengers per flight was no higher last year than the year before.)"
    ]
  },
  {
    "id": "test_654",
    "context": "Council member: I recommend that the abandoned shoe factory be used as a municipal emergency shelter. Some council members assert that the courthouse would be a better shelter site, but they have provided no evidence of this. Thus, the shoe factory would be a better shelter site.",
    "question": "A questionable technique used in the council member's argument is that of",
    "options": [
      "accepting a claim simply because advocates of an opposing claim have not adequately defended their view",
      "attacking the proponents of the courthouse rather than addressing their argument",
      "attacking an argument that is not held by any actual council member",
      "asserting that a lack of evidence against a view is proof that the view is correct"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([shoe_factory_better, courthouse_better])\nevidence_provided = Function([arguments] -> [bool])\nclaim_accepted = Function([arguments] -> [bool])\n\n# Constraints\nNot(evidence_provided(courthouse_better)) ::: Some council members assert that the courthouse would be a better shelter site, but they have provided no evidence of this\nclaim_accepted(shoe_factory_better) ::: Thus, the shoe factory would be a better shelter site\n\n# Options\nQuestion ::: A questionable technique used in the council member's argument is that of\nis_questionable(And(claim_accepted(shoe_factory_better), Not(evidence_provided(courthouse_better)))) ::: (accepting a claim simply because advocates of an opposing claim have not adequately defended their view)\nis_questionable(False) ::: (attacking the proponents of the courthouse rather than addressing their argument)\nis_questionable(False) ::: (attacking an argument that is not held by any actual council member)\nis_questionable(False) ::: (asserting that a lack of evidence against a view is proof that the view is correct)"
    ]
  },
  {
    "id": "test_655",
    "context": "Damming the Merv River would provide irrigation for the dry land in its upstream areas; unfortunately, a dam would reduce agricultural productivity in the fertile land downstream by reducing the availability and quality of the water there. The productivity loss in the downstream area would be greater than the productivity gain upstream, so building a dam would yield no overall gain in agricultural productivity in the region as a whole.",
    "question": "The reasoning in the argument above most closely parallels that in which one of the following?",
    "options": [
      "Disease-causing bacteria in eggs can be destroyed by overcooking the eggs, but the eggs then become much less appetizing; health is more important than taste, however, so it is better to overcook eggs than not to do so.",
      "Increasing the price of transatlantic telephone calls will discourage many private individuals from making them. But since most transatlantic telephone calls are made by businesses, not by private individuals, a rate increase will not reduce telephone company profits.",
      "A new highway will allow suburban commuters to reach the city more quickly, but not without causing increased delays within the city that will more than offset any time saved on the highway. Ttherefore, the highway will not reduce suburban commuters' overall commuting time.",
      "A certain chemical will kill garden pests that damage tomatoes, but that chemical will damage certain other plants more severely than the pests damage the tomatoes, so the only gardens that will benefit from the use of the chemical are those in which only tomatoes are grown."
    ],
    "raw_logic_programs": [
      "# Declarations\nscenarios = EnumSort([damming_merv, overcooking_eggs, increasing_call_price, new_highway, chemical_use])\noutcomes = EnumSort([irrigation_gain, productivity_loss, health_gain, taste_loss, profit_loss, time_saved, time_lost, pest_control, plant_damage])\neffects = Function([scenarios] -> [outcomes])\n\n# Constraints\neffects(damming_merv) == (irrigation_gain, productivity_loss) ::: Damming the Merv River would provide irrigation for the dry land in its upstream areas; unfortunately, a dam would reduce agricultural productivity in the fertile land downstream\neffects(overcooking_eggs) == (health_gain, taste_loss) ::: Disease-causing bacteria in eggs can be destroyed by overcooking the eggs, but the eggs then become much less appetizing\neffects(increasing_call_price) == (profit_loss) ::: Increasing the price of transatlantic telephone calls will discourage many private individuals from making them\neffects(new_highway) == (time_saved, time_lost) ::: A new highway will allow suburban commuters to reach the city more quickly, but not without causing increased delays within the city\neffects(chemical_use) == (pest_control, plant_damage) ::: A certain chemical will kill garden pests that damage tomatoes, but that chemical will damage certain other plants more severely\n\n# Options\nQuestion ::: The reasoning in the argument above most closely parallels that in which one of the following?\nis_parallel(effects(damming_merv) == effects(overcooking_eggs)) ::: (A)\nis_parallel(effects(damming_merv) == effects(increasing_call_price)) ::: (B)\nis_parallel(effects(damming_merv) == effects(new_highway)) ::: (C)\nis_parallel(effects(damming_merv) == effects(chemical_use)) ::: (D)"
    ]
  },
  {
    "id": "test_656",
    "context": "Cindy always braids her hair on Christmas. Today is Easter. Cindy' s hair is braided.",
    "question": "If the statements above are correct, then what cannot be true?",
    "options": [
      "Cindy only braids her hair on Christmas.",
      "Cindy dislikes braiding her hair since it takes too long.",
      "Cindy only braids her hair on holidays.",
      "Cindy never braids her hair during July or August."
    ],
    "raw_logic_programs": [
      "# Declarations\ndays = EnumSort([Christmas, Easter, July, August, Other])\nbraids_hair = Function([days] -> [bool])\n\n# Constraints\nbraids_hair(Christmas) == True ::: Cindy always braids her hair on Christmas\nbraids_hair(Easter) == True ::: Cindy's hair is braided today, which is Easter\n\n# Options\nQuestion ::: If the statements above are correct, then what cannot be true?\nis_unsat(ForAll([d:days], Implies(d != Christmas, Not(braids_hair(d))))) ::: Cindy only braids her hair on Christmas\nis_sat(True) ::: Cindy dislikes braiding her hair since it takes too long\nis_unsat(ForAll([d:days], Implies(d != Christmas, Not(braids_hair(d))))) ::: Cindy only braids her hair on holidays\nis_sat(ForAll([d:days], Implies(d == July or d == August, Not(braids_hair(d))))) ::: Cindy never braids her hair during July or August"
    ]
  },
  {
    "id": "test_657",
    "context": "Sandy: I play the Bigbucks lottery -- that' s the one where you pick five numbers and all the players who have picked the five numbers drawn at the end of the week share the money pot. But it' s best to play only after there have been a few weeks with no winners, because the money pot increases each week that there is no winner. Alex: No, you' re more likely to win the lottery when the money pot is small, because that' s when the fewest other people are playing.",
    "question": "Which one of the following most accurately describes a mistake in the reasoning of one of the two speakers?",
    "options": [
      "Sandy holds that the chances of anyone's winning are unaffected by the size of the pot.",
      "Sandy holds that the chances of anyone's winning are unaffected by the number of times that person plays.",
      "Sandy holds that the chances of there being a winner go up if no one has won the lottery for quite a while.",
      "Alex holds that the chances of Sandy's winning are affected by the number of other people playing."
    ],
    "raw_logic_programs": [
      "# Declarations\nspeakers = EnumSort([Sandy, Alex])\nstatements = EnumSort([chance_unaffected_by_pot_size, chance_unaffected_by_play_count, chance_increases_with_no_winner, chance_affected_by_other_players])\n\n# Constraints\nholds(Sandy, chance_unaffected_by_pot_size) ::: Sandy holds that the chances of anyone's winning are unaffected by the size of the pot\nholds(Sandy, chance_unaffected_by_play_count) ::: Sandy holds that the chances of anyone's winning are unaffected by the number of times that person plays\nholds(Sandy, chance_increases_with_no_winner) ::: Sandy holds that the chances of there being a winner go up if no one has won the lottery for quite a while\nholds(Alex, chance_affected_by_other_players) ::: Alex holds that the chances of Sandy's winning are affected by the number of other people playing\n\n# Options\nQuestion ::: Which one of the following most accurately describes a mistake in the reasoning of one of the two speakers?\nis_mistake(holds(Sandy, chance_unaffected_by_pot_size)) ::: (A) Sandy holds that the chances of anyone's winning are unaffected by the size of the pot.\nis_mistake(holds(Sandy, chance_unaffected_by_play_count)) ::: (B) Sandy holds that the chances of anyone's winning are unaffected by the number of times that person plays.\nis_mistake(holds(Sandy, chance_increases_with_no_winner)) ::: (C) Sandy holds that the chances of there being a winner go up if no one has won the lottery for quite a while.\nis_mistake(holds(Alex, chance_affected_by_other_players)) ::: (D) Alex holds that the chances of Sandy's winning are affected by the number of other people playing."
    ]
  },
  {
    "id": "test_658",
    "context": "In 2005, paleontologist Mary Schweitzer made headlines when she reported finding preserved soft tissue in the bones of a Tyrannosaurus rex dinosaur. Analysis of the collagen proteins from the T. rex showed them to be similar to the collagen proteins in modern-day chickens. Schweitzer' s discovery ttherefore adds to the mountain of evidence that dinosaurs are closely related to birds.",
    "question": "The answer to which one of the following questions would be most useful to know in order to evaluate the argument?",
    "options": [
      "How likely is it for animals that are not closely related to each other to have similar collagen proteins?",
      "Is there any evidence at all against the claim that dinosaurs are closely related to birds?",
      "Before Schweitzer's discovery, did researchers suppose that the collagen proteins in T. rex and chickens might be similar?",
      "How rare is it to find preserved soft tissue in the bones of a dinosaur?"
    ],
    "raw_logic_programs": [
      "# Declarations\nquestions = EnumSort([Q1, Q2, Q3, Q4])\nusefulness = Function([questions] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description for the questions.\n\n# Options\nQuestion ::: The answer to which one of the following questions would be most useful to know in order to evaluate the argument?\nis_most_useful(usefulness(Q1)) ::: (A) How likely is it for animals that are not closely related to each other to have similar collagen proteins?\nis_most_useful(usefulness(Q2)) ::: (B) Is there any evidence at all against the claim that dinosaurs are closely related to birds?\nis_most_useful(usefulness(Q3)) ::: (C) Before Schweitzer's discovery, did researchers suppose that the collagen proteins in T. rex and chickens might be similar?\nis_most_useful(usefulness(Q4)) ::: (D) How rare is it to find preserved soft tissue in the bones of a dinosaur?"
    ]
  },
  {
    "id": "test_659",
    "context": "Large-scale government projects designed to benefit everyone -- such as roads, schools, and bridges -- usually benefit some small segments of society, initially at least, more than others. The more equally and widely political power is distributed among the citizenry, the less likely such projects are to receive funding. Hence, government by referendum rather than by means of elected representatives tends to diminish, not enhance, the welfare of a society.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "The primary purpose of an equal distribution of political power is to enhance the welfare of society.",
      "Large-scale government projects sometimes enhance the welfare of society.",
      "Government by referendum actually undermines the democratic process.",
      "Government by referendum is the only way to distribute political power equally and widely."
    ],
    "raw_logic_programs": [
      "# Declarations\ncitizenry = EnumSort([equal_distribution, unequal_distribution])\nprojects = EnumSort([roads, schools, bridges])\ngovernment = EnumSort([referendum, representatives])\nwelfare = Function([projects, citizenry, government] -> [bool])\n\n# Constraints\nForAll([p:projects], Exists([c:citizenry], welfare(p, c, representatives))) ::: Large-scale government projects designed to benefit everyone usually benefit some small segments of society more than others\nForAll([c:citizenry], Implies(c == equal_distribution, Not(Exists([p:projects], welfare(p, c, referendum))))) ::: The more equally and widely political power is distributed, the less likely such projects are to receive funding\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(Exists([p:projects], welfare(p, unequal_distribution, representatives))) ::: (A) Large-scale government projects sometimes enhance the welfare of society.\nis_assumption(ForAll([p:projects], Exists([c:citizenry], welfare(p, c, representatives)))) ::: (B) The primary purpose of an equal distribution of political power is to enhance the welfare of society.\nis_assumption(Not(Exists([p:projects], welfare(p, equal_distribution, referendum)))) ::: (C) Government by referendum actually undermines the democratic process.\nis_assumption(ForAll([c:citizenry], Implies(c == equal_distribution, Not(Exists([p:projects], welfare(p, referendum)))))) ::: (D) Government by referendum is the only way to distribute political power equally and widely."
    ]
  },
  {
    "id": "test_660",
    "context": "Monica: The sculpture commissioned for our town plaza has been scorned by the public ever since it went up. But since the people in our town do not know very much about contemporary art, the unpopularity of the work says nothing about its artistic merit and thus gives no reason for removing it. Hector: You may be right about what the sculpture' s popularity means about its artistic merit. However, a work of art that was commissioned for a public space ought to benefit the public, and popular opinion is ultimately the only way of determining what the public feels is to its benefit. Thus, if public opinion of this sculpture is what you say, then it certainly ought to be removed.",
    "question": "Monica's and Hector's statements commit them to disagreeing about which one of the following principles?",
    "options": [
      "The only reason for removing a work of art commissioned for a public space would be that the balance of public opinion is against the work.",
      "Works of art commissioned for public spaces ought at least to have sufficient artistic merit to benefit the public.",
      "Public opinion of a work of art is an important consideration in determining the work's artistic merit.",
      "In determining whether the sculpture should remain in the town plaza, the artistic merit of the sculpture should be a central consideration."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Monica, Hector])\nprinciples = EnumSort([public_opinion_removal, artistic_merit_benefit, public_opinion_artistic_merit, artistic_merit_consideration])\nagrees = Function([individuals, principles] -> [bool])\n\n# Constraints\nagrees(Monica, Not(public_opinion_removal)) ::: Monica believes that public opinion is not a valid reason for removing the sculpture\nagrees(Hector, public_opinion_removal) ::: Hector believes that public opinion is a valid reason for removing the sculpture\nagrees(Monica, Not(public_opinion_artistic_merit)) ::: Monica believes that public opinion does not determine artistic merit\nagrees(Hector, public_opinion_artistic_merit) ::: Hector believes that public opinion is important in determining the benefit to the public\n\n# Options\nQuestion ::: Monica's and Hector's statements commit them to disagreeing about which one of the following principles?\nis_disagreement(agrees(Monica, public_opinion_removal) != agrees(Hector, public_opinion_removal)) ::: (The only reason for removing a work of art commissioned for a public space would be that the balance of public opinion is against the work.\nis_disagreement(agrees(Monica, artistic_merit_benefit) != agrees(Hector, artistic_merit_benefit)) ::: (Works of art commissioned for public spaces ought at least to have sufficient artistic merit to benefit the public.\nis_disagreement(agrees(Monica, public_opinion_artistic_merit) != agrees(Hector, public_opinion_artistic_merit)) ::: (Public opinion of a work of art is an important consideration in determining the work's artistic merit.\nis_disagreement(agrees(Monica, artistic_merit_consideration) != agrees(Hector, artistic_merit_consideration)) ::: (In determining whether the sculpture should remain in the town plaza, the artistic merit of the sculpture should be a central consideration."
    ]
  },
  {
    "id": "test_661",
    "context": "Candidate: The government spends $500 million more each year promoting highway safety than it spends combating cigarette smoking. But each year many more people die from smoking-related diseases than die in highway accidents. So the government would save lives by shifting funds from highway safety programs to antismoking programs.",
    "question": "The flawed reasoning in which one of the following arguments most closely parallels the flawed reasoning in the candidate's argument?",
    "options": [
      "The government enforces the speed limit on freeways much more closely than on tollways. But many more people die each year in auto accidents on freeways than die in auto accidents on tollway. So the government would save lives by shifting funds from enforcement of speed limits on freeways to enforcement of speed limits on tollway.",
      "Banks have a higher profit margin on loans that have a high interest rate than on loans that have a low interest rate. But borrowers are willing to borrow larger sums at low rates than at high rates. Ttherefore, banks would be more profitable if they gave more loans at low rates and fewer loans at high rates.",
      "A certain professional musician spends several times as many hours practicing guitar as she spends practicing saxophone. But she is hired much more often to play saxophone than to play guitar, so she would increase her number of playing engagements by spending less time practicing guitar and more time practicing saxophone.",
      "Automobiles burn more gas per minute on highways than on residential streets. But they get fewer miles per gallon on residential streets. Ttherefore, gas would be saved by driving less on residential streets and more on highways."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([candidate, argument1, argument2, argument3, argument4])\nelements = EnumSort([spending, deaths, programs, enforcement, profit, loans, practice, engagements, gas, driving])\nrelationships = Function([arguments, elements] -> [bool])\n\n# Constraints\nrelationships(candidate, spending) ::: The government spends $500 million more each year promoting highway safety than it spends combating cigarette smoking\nrelationships(candidate, deaths) ::: Many more people die from smoking-related diseases than die in highway accidents\nrelationships(candidate, programs) ::: The government would save lives by shifting funds from highway safety programs to antismoking programs\n\nrelationships(argument1, enforcement) ::: The government enforces the speed limit on freeways much more closely than on tollways\nrelationships(argument1, deaths) ::: Many more people die each year in auto accidents on freeways than die in auto accidents on tollways\nrelationships(argument1, programs) ::: The government would save lives by shifting funds from enforcement of speed limits on freeways to enforcement of speed limits on tollways\n\nrelationships(argument2, profit) ::: Banks have a higher profit margin on loans that have a high interest rate than on loans that have a low interest rate\nrelationships(argument2, loans) ::: Borrowers are willing to borrow larger sums at low rates than at high rates\nrelationships(argument2, profit) ::: Banks would be more profitable if they gave more loans at low rates and fewer loans at high rates\n\nrelationships(argument3, practice) ::: A certain professional musician spends several times as many hours practicing guitar as she spends practicing saxophone\nrelationships(argument3, engagements) ::: She is hired much more often to play saxophone than to play guitar\nrelationships(argument3, practice) ::: She would increase her number of playing engagements by spending less time practicing guitar and more time practicing saxophone\n\nrelationships(argument4, gas) ::: Automobiles burn more gas per minute on highways than on residential streets\nrelationships(argument4, driving) ::: They get fewer miles per gallon on residential streets\nrelationships(argument4, gas) ::: Gas would be saved by driving less on residential streets and more on highways\n\n# Options\nQuestion ::: The flawed reasoning in which one of the following arguments most closely parallels the flawed reasoning in the candidate's argument?\nis_parallel(relationships(candidate, spending), relationships(argument1, enforcement)) ::: (A)\nis_parallel(relationships(candidate, spending), relationships(argument2, profit)) ::: (B)\nis_parallel(relationships(candidate, spending), relationships(argument3, practice)) ::: (C)\nis_parallel(relationships(candidate, spending), relationships(argument4, gas)) ::: (D)"
    ]
  },
  {
    "id": "test_662",
    "context": "One who has borrowed an item from someone and promised to return it by a certain date should do so if it would not be difficult to return it on time and the person from whom one has borrowed it has not given permission to return the item late.",
    "question": "The principle stated above most helps to justify the reasoning in which one of the following arguments?",
    "options": [
      "Oliver borrowed Madeline's guitar from her yesterday and promised to bring it back today. So, since it would be easy for Oliver to return the guitar today, and Madeline has not given him permission to return it late, he should return it today.",
      "Christopher told Sumi that the book she borrowed from him need not be returned by Friday. Thus, it would be wrong for Sumi to return the book earlier than Friday.",
      "Val should return Ted's car to him today, because although he told her that she could return it late, she promised that she would return it today and it would not be difficult for her to do so.",
      "Yesenia borrowed Mike's computer, and he has just requested that she return it to him by tomorrow. Although Yesenia has not promised to return it by tomorrow, she should return it by then since it would not be difficult for her to do so."
    ],
    "raw_logic_programs": [
      "# Declarations\nborrower = EnumSort([Oliver, Christopher, Val, Yesenia])\nlender = EnumSort([Madeline, Sumi, Ted, Mike])\nitems = EnumSort([guitar, book, car, computer])\npromised_return = Function([borrower, items] -> [bool])\npermission_late = Function([borrower, items] -> [bool])\neasy_return = Function([borrower, items] -> [bool])\n\n# Constraints\nForAll([b:borrower, i:items], Implies(And(promised_return(b, i), easy_return(b, i), Not(permission_late(b, i))), should_return(b, i))) ::: One who has borrowed an item and promised to return it by a certain date should do so if it would not be difficult to return it on time and no permission to return late\n\n# Options\nQuestion ::: The principle stated above most helps to justify the reasoning in which one of the following arguments?\nis_justified(And(promised_return(Oliver, guitar), easy_return(Oliver, guitar), Not(permission_late(Oliver, guitar)), should_return(Oliver, guitar))) ::: (A)\nis_justified(And(Not(promised_return(Sumi, book)), Not(should_return(Sumi, book)))) ::: (B)\nis_justified(And(promised_return(Val, car), easy_return(Val, car), permission_late(Val, car), should_return(Val, car))) ::: (C)\nis_justified(And(Not(promised_return(Yesenia, computer)), easy_return(Yesenia, computer), should_return(Yesenia, computer))) ::: (D)"
    ]
  },
  {
    "id": "test_663",
    "context": "Although video game sales have increased steadily over the past 3 years, we can expect a reversal of this trend in the very near future. Historically, over three quarters of video games sold have been purchased by people from 13 to 16 years of age, and the number of people in this age group is expected to decline steadily over the next 10 years.",
    "question": "Which one of the following, if true, would most seriously weaken the argument?",
    "options": [
      "The number of different types of video games available is unlikely to decrease in the near future.",
      "Most of the people who have purchased video games over the past 3 years are over the age of 16.",
      "Video game rentals have declined over the past 3 years.",
      "New technology will undoubtedly make entirely new entertainment options available over the next 10 years."
    ],
    "raw_logic_programs": [
      "# Declarations\nage_groups = EnumSort([age_13_16, over_16])\nsales_trend = EnumSort([increase, decrease, steady])\npurchases = Function([age_groups] -> [int])\nfuture_sales_trend = Function([] -> [sales_trend])\n\n# Constraints\npurchases(age_13_16) > 0.75 * Total(purchases) ::: Historically, over three quarters of video games sold have been purchased by people from 13 to 16 years of age\nfuture_sales_trend() == decrease ::: we can expect a reversal of this trend in the very near future\n\n# Options\nQuestion ::: Which one of the following, if true, would most seriously weaken the argument?\nis_weakened(purchases(over_16) > purchases(age_13_16)) ::: (Most of the people who have purchased video games over the past 3 years are over the age of 16)\nis_weakened(future_sales_trend() == increase) ::: (The number of different types of video games available is unlikely to decrease in the near future)\nis_weakened(future_sales_trend() == decrease) ::: (Video game rentals have declined over the past 3 years)\nis_weakened(future_sales_trend() == decrease) ::: (New technology will undoubtedly make entirely new entertainment options available over the next 10 years)"
    ]
  },
  {
    "id": "test_664",
    "context": "In the 1980' s billions of batteries were thrown into landfills. There is growing concern that as the batteries deteriorate, the toxic metals they contain will seep into the groundwater and contaminate it. That concern is unfounded, however, for studies of groundwater near large landfills used in the 1950' s and then closed showed little, if any, such contamination.",
    "question": "Which of the following, if true, most seriously weakens the argument above?",
    "options": [
      "In the 1980's efforts to recycle the toxic metals contained in batteries increased substantially.",
      "Compared to typical 1980's landfills, typical 1950's landfills contain a negligible number of batteries.",
      "In the 1950's incinerator ash dumped in landfills contained more toxic material from batteries than did such ash in the 1980's.",
      "Batteries manufactured in the 1980's were less likely to leak fluids containing toxic metals than were 1950's batteries."
    ],
    "raw_logic_programs": [
      "# Declarations\ndecades = EnumSort([fifties, eighties])\nlandfills = EnumSort([fifties_landfills, eighties_landfills])\nbatteries = Function([landfills] -> [int])\ncontamination = Function([landfills] -> [bool])\n\n# Constraints\nbatteries(fifties_landfills) < batteries(eighties_landfills) ::: Compared to typical 1980's landfills, typical 1950's landfills contain a negligible number of batteries\ncontamination(fifties_landfills) == False ::: Studies of groundwater near large landfills used in the 1950's and then closed showed little, if any, such contamination\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument above?\nis_weakening(batteries(eighties_landfills) > batteries(fifties_landfills)) ::: (A) In the 1980's efforts to recycle the toxic metals contained in batteries increased substantially.\nis_weakening(batteries(fifties_landfills) < batteries(eighties_landfills)) ::: (B) Compared to typical 1980's landfills, typical 1950's landfills contain a negligible number of batteries.\nis_weakening(contamination(fifties_landfills) == True) ::: (C) In the 1950's incinerator ash dumped in landfills contained more toxic material from batteries than did such ash in the 1980's.\nis_weakening(batteries(eighties_landfills) < batteries(fifties_landfills)) ::: (D) Batteries manufactured in the 1980's were less likely to leak fluids containing toxic metals than were 1950's batteries."
    ]
  },
  {
    "id": "test_665",
    "context": "Dr. Ruiz: Dr. Smith has expressed outspoken antismoking views in public. Even though Dr. Smith is otherwise qualified, clearly she cannot be included on a panel that examines the danger of secondhand cigarette smoke. As an organizer of the panel, I want to ensure that the panel examines the issue in an unbiased manner before coming to any conclusion.",
    "question": "Which one of the following, if true, provides the strongest basis for countering Dr. Ruiz' argument that Dr. Smith should not be included on the panel?",
    "options": [
      "People who have well-defined strong views on a particular topic prior to joining a panel are often able to impose their views on panel members who are not committed at the outset to any conclusion.",
      "People who hold strong views on a particular topic tend to accept new evidence on that topic only if it supports their views.",
      "A panel composed of qualified people with strong but conflicting views on a particular topic is more likely to reach an unbiased conclusion than a panel composed of people who have kept their views, if any, private.",
      "People who have expressed strong views in public on a particular topic are better at raising funds to support their case than are people who have never expressed strong views in public."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Dr_Ruiz, Dr_Smith])\nviews = EnumSort([antismoking, neutral, prosmoking])\npanel = Function([people] -> [bool])\nqualified = Function([people] -> [bool])\nexpressed_views = Function([people] -> [views])\n\n# Constraints\nqualified(Dr_Smith) == True ::: Dr. Smith is otherwise qualified\nexpressed_views(Dr_Smith) == antismoking ::: Dr. Smith has expressed outspoken antismoking views in public\npanel(Dr_Smith) == False ::: Dr. Ruiz argues Dr. Smith cannot be included on the panel\n\n# Options\nQuestion ::: Which one of the following, if true, provides the strongest basis for countering Dr. Ruiz' argument that Dr. Smith should not be included on the panel?\nis_strongest_basis(And(ForAll([p:people], Implies(panel(p), qualified(p))), Exists([p1:people, p2:people], And(panel(p1), panel(p2), expressed_views(p1) != expressed_views(p2))))) ::: (A panel composed of qualified people with strong but conflicting views on a particular topic is more likely to reach an unbiased conclusion than a panel composed of people who have kept their views, if any, private.)"
    ]
  },
  {
    "id": "test_666",
    "context": "In a small town, every complaint filed about a plumber' s work was filed against Moore, who has a relatively small business. So there is good evidence that Moore is a poor plumber who cannot be counted on to do a good job.",
    "question": "The argument is questionable because it fails to consider",
    "options": [
      "whether each person who was dissatisfied with Moore's work filed a complaint against Moore",
      "that there may be few if any other plumbers working in Moore's town",
      "the interests of Moore's customers who have not filed complaints",
      "whether Moore's business is too small to warrant the kind of generalization drawn"
    ],
    "raw_logic_programs": [
      "# Declarations\ncomplaints = EnumSort([filed, not_filed])\nplumbers = EnumSort([Moore, others])\nwork_quality = EnumSort([good, poor])\ncomplaint_filed = Function([plumbers] -> [complaints])\nbusiness_size = Function([plumbers] -> [int])\nwork_quality_assessment = Function([plumbers] -> [work_quality])\n\n# Constraints\nForAll([p:plumbers], Implies(complaint_filed(p) == filed, p == Moore)) ::: Every complaint filed about a plumber's work was filed against Moore\nwork_quality_assessment(Moore) == poor ::: The argument concludes that Moore is a poor plumber\n\n# Options\nQuestion ::: The argument is questionable because it fails to consider\nis_consideration(Exists([p:plumbers], And(complaint_filed(p) == not_filed, p == Moore))) ::: (whether each person who was dissatisfied with Moore's work filed a complaint against Moore)\nis_consideration(Count([p:plumbers], p != Moore) == 0) ::: (that there may be few if any other plumbers working in Moore's town)\nis_consideration(Exists([p:plumbers], And(complaint_filed(p) == not_filed, p == Moore))) ::: (the interests of Moore's customers who have not filed complaints)\nis_consideration(business_size(Moore) < threshold) ::: (whether Moore's business is too small to warrant the kind of generalization drawn)"
    ]
  },
  {
    "id": "test_667",
    "context": "Manager: Our company' s mail-order sales have recently increased 25 percent. This increase started around the time we started offering unlimited free shipping, rather than just free shipping on orders over $50. Thus, our change in policy probably caused the increase.",
    "question": "Which one of the following, if true, most strengthens the manager's argument?",
    "options": [
      "Mail-order sales have been decreasing for companies that do not offer unlimited free shipping.",
      "Most companies offer free shipping only on mail-order purchases over $50.",
      "The company's profits from mail-order sales have increased since the change in policy.",
      "The company did not widely advertise its change in policy."
    ],
    "raw_logic_programs": [
      "# Declarations\nsales = EnumSort([increased, decreased])\nshipping_policy = EnumSort([unlimited_free, conditional_free])\nadvertising = EnumSort([widely, not_widely])\nprofits = EnumSort([increased, not_increased])\ncompanies = EnumSort([our_company, other_companies])\n\n# Constraints\nmail_order_sales(our_company) == increased ::: Our company's mail-order sales have recently increased 25 percent\nshipping_policy(our_company) == unlimited_free ::: Our company started offering unlimited free shipping\nmail_order_sales(other_companies) == decreased ::: Mail-order sales have been decreasing for companies that do not offer unlimited free shipping\nshipping_policy(other_companies) == conditional_free ::: Most companies offer free shipping only on mail-order purchases over $50\nprofits(our_company) == increased ::: The company's profits from mail-order sales have increased since the change in policy\nadvertising(our_company) == not_widely ::: The company did not widely advertise its change in policy\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the manager's argument?\nis_strongest(mail_order_sales(other_companies) == decreased) ::: (A)\nis_strongest(shipping_policy(other_companies) == conditional_free) ::: (B)\nis_strongest(profits(our_company) == increased) ::: (C)\nis_strongest(advertising(our_company) == not_widely) ::: (D)"
    ]
  },
  {
    "id": "test_668",
    "context": "To discourage congestion, a city raised on-street parking rates in a downtown business district. For restaurants in the district, whose customers require short-term parking, the surprising result was a small increase in sales.",
    "question": "Which one of the following, if true, contributes to an explanation of the increase in sales at restaurants in the district?",
    "options": [
      "The business district is in competition with malls that offer free parking to their customers.",
      "Owners of the district's businesses, for the most part, initially opposed the raising of the on-street parking rates.",
      "Even before the change in parking rates, the staffs of the businesses in the district used only off-street parking.",
      "More expensive parking leads to greater turnover in cars parked in front of the businesses in the district."
    ],
    "raw_logic_programs": [
      "# Declarations\nbusinesses = EnumSort([restaurants, other_businesses])\nparking = EnumSort([on_street, off_street])\neffects = EnumSort([increase, decrease, no_change])\nturnover = Function([parking] -> [effects])\nsales = Function([businesses] -> [effects])\n\n# Constraints\nsales(restaurants) == increase ::: The surprising result was a small increase in sales for restaurants\nturnover(on_street) == increase ::: More expensive parking leads to greater turnover in cars parked in front of the businesses\n\n# Options\nQuestion ::: Which one of the following, if true, contributes to an explanation of the increase in sales at restaurants in the district?\nis_explanation(turnover(on_street) == increase) ::: (D) More expensive parking leads to greater turnover in cars parked in front of the businesses in the district"
    ]
  },
  {
    "id": "test_669",
    "context": "Researcher: Over the course of three decades, we kept records of the average beak size of two populations of the same species of bird, one wild population, the other captive. During this period, the average beak size of the captive birds did not change, while the average beak size of the wild birds decreased significantly.",
    "question": "Which one of the following, if true, most helps to explain the researcher's findings?",
    "options": [
      "Changes in the wild birds' food supply during the study period favored the survival of small-beaked birds over large-beaked birds.",
      "The large-beaked wild birds were easier to capture and measure than the small-beaked wild birds.",
      "The small-beaked wild birds were easier to capture and measure than the large-beaked wild birds.",
      "The average body size of the captive birds remained the same over the study period."
    ],
    "raw_logic_programs": [
      "# Declarations\npopulations = EnumSort([wild, captive])\ntraits = EnumSort([beak_size, body_size])\nchange = Function([populations, traits] -> [bool])\n\n# Constraints\nNot(change(captive, beak_size)) ::: the average beak size of the captive birds did not change\nchange(wild, beak_size) ::: the average beak size of the wild birds decreased significantly\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the researcher's findings?\nis_explanatory(change(wild, beak_size) == True) ::: (A) Changes in the wild birds' food supply during the study period favored the survival of small-beaked birds over large-beaked birds.\nis_explanatory(False) ::: (B) The large-beaked wild birds were easier to capture and measure than the small-beaked wild birds.\nis_explanatory(False) ::: (C) The small-beaked wild birds were easier to capture and measure than the large-beaked wild birds.\nis_explanatory(False) ::: (D) The average body size of the captive birds remained the same over the study period."
    ]
  },
  {
    "id": "test_670",
    "context": "Researchers have found that the percentage of people who start new businesses is much higher in countries with high per capita income than in countries with moderate per capita income. This is to be expected since most entrepreneurs in high- and middle-income countries start businesses to take advantage of perceived business opportunities, and there are more such opportunities in high-income countries. Surprisingly, however, the researchers also found that the percentage of people who start businesses is even higher in low-income countries than in high-income ones.",
    "question": "Which one of the following, if true, would most help to explain the researchers' surprising finding?",
    "options": [
      "The percentage of new businesses that fail within a few years of being founded is generally no higher in low-income countries than in high-income countries.",
      "Many governments of high-income countries provide assistance to individuals who want to start businesses, but very few governments of low-income countries do so.",
      "In high-income countries, many entrepreneurs who start businesses to take advantage of perceived business opportunities soon discover that the opportunities were illusory.",
      "In low-income countries, most entrepreneurs start businesses because all other employment options are either absent or unsatisfactory."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([high_income, moderate_income, low_income])\nreasons = EnumSort([opportunity, necessity])\nentrepreneurs = Function([countries] -> [int])\nstart_business = Function([countries, reasons] -> [int])\n\n# Constraints\nentrepreneurs(high_income) > entrepreneurs(moderate_income) ::: The percentage of people who start new businesses is much higher in countries with high per capita income than in countries with moderate per capita income\nForAll([c:countries], start_business(c, opportunity) > 0) ::: Most entrepreneurs in high- and middle-income countries start businesses to take advantage of perceived business opportunities\nentrepreneurs(low_income) > entrepreneurs(high_income) ::: The percentage of people who start businesses is even higher in low-income countries than in high-income ones\n\n# Options\nQuestion ::: Which one of the following, if true, would most help to explain the researchers' surprising finding?\nis_explanatory(start_business(low_income, necessity) > start_business(low_income, opportunity)) ::: (In low-income countries, most entrepreneurs start businesses because all other employment options are either absent or unsatisfactory.)"
    ]
  },
  {
    "id": "test_671",
    "context": "A recent archaeological find in what was once the ancient kingdom of Macedonia contains the remains of the largest tomb ever found in the region. It must be the tomb of Alexander the Great since he was the greatest Macedonian in history, and so would have had the largest tomb. After all, he conquered an empire that stretched from Greece to much of Asia, though it collapsed after his death.",
    "question": "The reasoning in the argument is most vulnerable to criticism on the grounds that the argument",
    "options": [
      "takes for granted that archaeologists can determine the size of the tomb from its remains",
      "takes for granted that the largest tomb found so far must be the largest that was built",
      "fails to evaluate the significance of the fact that Alexander's empire did not survive his death",
      "takes for granted that greatness can be attained only by military conquest"
    ],
    "raw_logic_programs": [
      "# Declarations\ntomb = EnumSort([largest_tomb, other_tombs])\nperson = EnumSort([Alexander, others])\ngreatness = Function([person] -> [bool])\ntomb_size = Function([tomb] -> [int])\nburied_in = Function([person] -> [tomb])\n\n# Constraints\ngreatness(Alexander) == True ::: Alexander was the greatest Macedonian in history\nForAll([p:person], Implies(greatness(p), buried_in(p) == largest_tomb)) ::: The greatest person would have the largest tomb\ntomb_size(largest_tomb) > tomb_size(other_tombs) ::: The largest tomb is larger than any other tomb\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on the grounds that the argument\nis_vulnerable(takes_for_granted(archaeologists_can_determine_size)) ::: (takes for granted that archaeologists can determine the size of the tomb from its remains)\nis_vulnerable(takes_for_granted(largest_found_is_largest_built)) ::: (takes for granted that the largest tomb found so far must be the largest that was built)\nis_vulnerable(fails_to_evaluate(empire_did_not_survive)) ::: (fails to evaluate the significance of the fact that Alexander's empire did not survive his death)\nis_vulnerable(takes_for_granted(greatness_by_conquest_only)) ::: (takes for granted that greatness can be attained only by military conquest)"
    ]
  },
  {
    "id": "test_672",
    "context": "The fire that destroyed the Municipal Building started before dawn this morning, and the last fire fighters did not leave until late this afternoon. No one could have been anywhere in the vicinity of a fire like that one and fail to notice it. Thomas must have seen it, whatever he now says to the contrary. He admits that, as usual, he went from his apartment to the library this morning, and there is no way for him to get from his apartment to the library without going past the Municipal Building.",
    "question": "The main conclusion of the argument is that",
    "options": [
      "Thomas saw the fire this morning",
      "Thomas claimed not to have seen the fire",
      "Thomas went by the Municipal Building this morning",
      "Thomas went directly from his apartment to the library this morning"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([fire, apartment, library, municipal_building])\npeople = EnumSort([Thomas])\nactions = EnumSort([saw, went_by, claimed_not_to_have_seen])\ntime = EnumSort([morning, afternoon])\n\n# Constraints\nhappened(fire, morning) ::: The fire started before dawn this morning\nhappened(fire, afternoon) ::: The last fire fighters did not leave until late this afternoon\nForAll([p:people], Implies(went_by(p, municipal_building, morning), saw(p, fire))) ::: No one could have been anywhere in the vicinity of a fire like that one and fail to notice it\nwent_by(Thomas, municipal_building, morning) ::: Thomas went by the Municipal Building this morning\nclaimed_not_to_have_seen(Thomas, fire) ::: Thomas claimed not to have seen the fire\nwent_by(Thomas, apartment, morning) ::: Thomas went from his apartment\nwent_by(Thomas, library, morning) ::: Thomas went to the library\nForAll([p:people], Implies(And(went_by(p, apartment, morning), went_by(p, library, morning)), went_by(p, municipal_building, morning))) ::: There is no way for him to get from his apartment to the library without going past the Municipal Building\n\n# Options\nQuestion ::: The main conclusion of the argument is that\nis_conclusion(saw(Thomas, fire)) ::: (Thomas saw the fire this morning)\nis_conclusion(claimed_not_to_have_seen(Thomas, fire)) ::: (Thomas claimed not to have seen the fire)\nis_conclusion(went_by(Thomas, municipal_building, morning)) ::: (Thomas went by the Municipal Building this morning)\nis_conclusion(And(went_by(Thomas, apartment, morning), went_by(Thomas, library, morning))) ::: (Thomas went directly from his apartment to the library this morning)"
    ]
  },
  {
    "id": "test_673",
    "context": "If you climb mountains, you will not live to a ripe old age. But you will be bored unless you climb mountains. Ttherefore, if you live to a ripe old age, you will have been bored.",
    "question": "Which one of the following most closely parallels the reasoning in the argument above?",
    "options": [
      "If you spend all of your money, you will not become wealthy. But you will become hungry unless you spend all of your money. Ttherefore, if you become wealthy, you will not become hungry.",
      "If you do not try to swim, you will not learn how to swim. But you will not be safe in boats if you do not learn how to swim. Ttherefore, you must try to swim.",
      "If you do not train, you will not be a good athlete. But you will become exhausted easily unless you train. Ttherefore, if you train, you will not have become exhausted easily.",
      "If you work for your candidate, you will not improve your guitar playing. But you will neglect your civic duty unless you work for your candidate. Ttherefore, if you improve your guitar playing, you will have neglected your civic duty."
    ],
    "raw_logic_programs": [
      "# Declarations\nactivities = EnumSort([climb_mountains, live_ripe_old_age, be_bored])\noutcomes = EnumSort([spend_all_money, become_wealthy, become_hungry, try_to_swim, learn_to_swim, be_safe_in_boats, train, be_good_athlete, become_exhausted_easily, work_for_candidate, improve_guitar_playing, neglect_civic_duty])\nimplies = Function([activities, activities] -> [bool])\n\n# Constraints\nimplies(climb_mountains, Not(live_ripe_old_age)) ::: If you climb mountains, you will not live to a ripe old age\nimplies(Not(climb_mountains), be_bored) ::: You will be bored unless you climb mountains\nimplies(live_ripe_old_age, be_bored) ::: Therefore, if you live to a ripe old age, you will have been bored\n\n# Options\nQuestion ::: Which one of the following most closely parallels the reasoning in the argument above?\nis_parallel(\n    And(\n        implies(spend_all_money, Not(become_wealthy)),\n        implies(Not(spend_all_money), become_hungry),\n        implies(become_wealthy, Not(become_hungry))\n    )\n) ::: (A)\nis_parallel(\n    And(\n        implies(Not(try_to_swim), Not(learn_to_swim)),\n        implies(Not(learn_to_swim), Not(be_safe_in_boats)),\n        implies(try_to_swim, be_safe_in_boats)\n    )\n) ::: (B)\nis_parallel(\n    And(\n        implies(Not(train), Not(be_good_athlete)),\n        implies(Not(train), become_exhausted_easily),\n        implies(train, Not(become_exhausted_easily))\n    )\n) ::: (C)\nis_parallel(\n    And(\n        implies(work_for_candidate, Not(improve_guitar_playing)),\n        implies(Not(work_for_candidate), neglect_civic_duty),\n        implies(improve_guitar_playing, neglect_civic_duty)\n    )\n) ::: (D)"
    ]
  },
  {
    "id": "test_674",
    "context": "George: Some scientists say that global warming will occur because people are releasing large amounts of carbon dioxide into the atmosphere by burning trees and fossil fuels. We can see, though, that the predicted warming is occurring already. In the middle of last winter, we had a month of springlike weather in our area, and this fall, because of unusually mild temperatures, the leaves on our town' s trees were three weeks late in turning color.",
    "question": "Which one of the following would it be most relevant to investigate in evaluating the conclusion of George's argument?",
    "options": [
      "whether air pollution is causing some trees in the area to lose their leaves",
      "what proportion of global emissions of carbon dioxide is due to the burning of trees by humans",
      "whether unusually warm weather is occurring elsewhere on the globe more frequently than before",
      "when leaves on the trees in the town usually change color"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([winter_weather, fall_weather, global_warming])\nfactors = EnumSort([carbon_dioxide, air_pollution, global_emissions, warm_weather_frequency, leaf_color_change])\ninvestigate = Function([factors] -> [bool])\n\n# Constraints\nForAll([e:events], Exists([f:factors], investigate(f))) ::: Each event is associated with factors that can be investigated\n\n# Options\nQuestion ::: Which one of the following would it be most relevant to investigate in evaluating the conclusion of George's argument?\nis_relevant(investigate(warm_weather_frequency)) ::: (whether unusually warm weather is occurring elsewhere on the globe more frequently than before)\nis_relevant(investigate(leaf_color_change)) ::: (when leaves on the trees in the town usually change color)\nis_relevant(investigate(global_emissions)) ::: (what proportion of global emissions of carbon dioxide is due to the burning of trees by humans)\nis_relevant(investigate(air_pollution)) ::: (whether air pollution is causing some trees in the area to lose their leaves)"
    ]
  },
  {
    "id": "test_675",
    "context": "Jocko, a chimpanzee, was once given a large bunch of bananas by a zookeeper after the more dominant members of the chimpanzee' s troop had wandered off. In his excitement, Jocko uttered some loud \"food barks. \" The other chimpanzees returned and took the bananas away. The next day, Jocko was again found alone and was given a single banana. This time, however, he kept silent. The zookeeper concluded that Jocko' s silence was a stratagem to keep the other chimpanzees from his food.",
    "question": "Which one of the following, if true, most seriously calls into question the zookeeper's conclusion?",
    "options": [
      "Bananas are a food for which all of the chimpanzees at the zoo show a decided preference.",
      "Chimpanzees utter food barks only when their favorite foods are available.",
      "Even when they are alone, chimpanzees often make noises that appear to be signals to other chimpanzees.",
      "Chimpanzees utter food barks only when they encounter a sizable quantity of food."
    ],
    "raw_logic_programs": [
      "# Declarations\nchimpanzees = EnumSort([Jocko, Others])\nfoods = EnumSort([large_bunch_of_bananas, single_banana])\nactions = EnumSort([food_bark, silence])\nsituation = Function([chimpanzees, foods] -> [actions])\n\n# Constraints\nsituation(Jocko, large_bunch_of_bananas) == food_bark ::: Jocko uttered food barks when given a large bunch of bananas\nsituation(Jocko, single_banana) == silence ::: Jocko remained silent when given a single banana\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously calls into question the zookeeper's conclusion?\nImplies(ForAll([c:chimpanzees], preference(c, bananas)), Not(conclusion)) ::: (A) Bananas are a food for which all of the chimpanzees at the zoo show a decided preference.\nImplies(ForAll([c:chimpanzees], Implies(favorite_food(c, bananas), action(c, food_bark))), Not(conclusion)) ::: (B) Chimpanzees utter food barks only when their favorite foods are available.\nImplies(ForAll([c:chimpanzees], Implies(alone(c), signal(c))), Not(conclusion)) ::: (C) Even when they are alone, chimpanzees often make noises that appear to be signals to other chimpanzees.\nImplies(ForAll([c:chimpanzees], Implies(quantity(c, sizable), action(c, food_bark))), Not(conclusion)) ::: (D) Chimpanzees utter food barks only when they encounter a sizable quantity of food."
    ]
  },
  {
    "id": "test_676",
    "context": "Columnist: A recent study suggests that living with a parrot increases one' s risk of lung cancer. But no one thinks the government should impose financial impediments on the owning of parrots because of this apparent danger. So by the same token, the government should not levy analogous special taxes on hunting gear, snow skis, recreational parachutes, or motorcycles.",
    "question": "Each of the following principles is logically consistent with the columnist's conclusion EXCEPT:",
    "options": [
      "The government should fund education by taxing nonessential sports equipment and recreational gear.",
      "The government should not tax those who avoid dangerous activities and adopt healthy lifestyles.",
      "The government should not create financial disincentives for people to race cars or climb mountains, even though these are dangerous activities.",
      "The government should create financial disincentives to deter participation in activities it deems dangerous."
    ],
    "raw_logic_programs": [
      "# Declarations\nactivities = EnumSort([parrot_ownership, hunting_gear, snow_skis, recreational_parachutes, motorcycles, car_racing, mountain_climbing])\ntax_policy = Function([activities] -> [bool])\n\n# Constraints\ntax_policy(parrot_ownership) == False ::: No financial impediments on owning parrots despite the risk\n\n# Options\nQuestion ::: Each of the following principles is logically consistent with the columnist's conclusion EXCEPT:\nis_exception(tax_policy(hunting_gear) == True) ::: (The government should fund education by taxing nonessential sports equipment and recreational gear.\nis_exception(tax_policy(parrot_ownership) == False) ::: (The government should not tax those who avoid dangerous activities and adopt healthy lifestyles.\nis_exception(tax_policy(car_racing) == False) ::: (The government should not create financial disincentives for people to race cars or climb mountains, even though these are dangerous activities.\nis_exception(tax_policy(mountain_climbing) == True) ::: (The government should create financial disincentives to deter participation in activities it deems dangerous."
    ]
  },
  {
    "id": "test_677",
    "context": "Advocate: You claim that it is wrong to own gasoline-powered cars because they pollute too much; you have an electric car, which pollutes far less. But the company that made your car also makes millions of gasoline-powered vehicles, so your patronage benefits a producer of products to which you object. Thus, if you are right about gasoline-powered cars, you should not have your electric car either.",
    "question": "Which one of the following principles, if valid, would most help to justify the advocate's reasoning?",
    "options": [
      "One should not purchase products from companies that make no environmentally sound products.",
      "One should purchase every product whose use has no negative consequences.",
      "One should not support an organization that does anything one believes to be wrong.",
      "One should purchase a product only if it pollutes less than any competing product."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\nactions = EnumSort([purchase, support])\nproducts = EnumSort([gasoline_car, electric_car])\ncompanies = EnumSort([company_makes_gasoline_cars])\n\n# Constraints\nbeliefs = Function([products] -> [bool])\nbenefits = Function([actions, companies] -> [bool])\n\n# Options\nQuestion ::: Which one of the following principles, if valid, would most help to justify the advocate's reasoning?\nis_valid(Implies(And(beliefs(gasoline_car), benefits(support, company_makes_gasoline_cars)), Not(benefits(purchase, electric_car)))) ::: (P1) One should not purchase products from companies that make no environmentally sound products.\nis_valid(Implies(And(beliefs(gasoline_car), benefits(support, company_makes_gasoline_cars)), Not(benefits(purchase, electric_car)))) ::: (P2) One should purchase every product whose use has no negative consequences.\nis_valid(Implies(And(beliefs(gasoline_car), benefits(support, company_makes_gasoline_cars)), Not(benefits(purchase, electric_car)))) ::: (P3) One should not support an organization that does anything one believes to be wrong.\nis_valid(Implies(And(beliefs(gasoline_car), benefits(support, company_makes_gasoline_cars)), Not(benefits(purchase, electric_car)))) ::: (P4) One should purchase a product only if it pollutes less than any competing product."
    ]
  },
  {
    "id": "test_678",
    "context": "When three Everett-owned Lightning-built airplanes crashed in the same month, the Everett company ordered three new Lightning-built airplanes as replacements. This decision surprised many in the airline industry because, ordinarily when a product is involved in accidents, users become reluctant to buy that product.",
    "question": "Which of the following, if true, provides the best indication that the Everett company's decision was logically well supported?",
    "options": [
      "The Lightning-built airplanes crashed due to pilot error, but because of the excellent quality of the planes there were many survivors.",
      "Many Lightning Airplane Company employees had to be replaced because they found jobs with the competition.",
      "Consumer advocates pressured two major airlines into purchasing safer airplanes so that the public would be safer while flying.",
      "The Federal Aviation Association issued new guidelines for airlines in order to standardize safety requirements governing preflight inspections."
    ],
    "raw_logic_programs": [
      "# Declarations\nairplanes = EnumSort([Everett_owned, Lightning_built])\ncrashes = Function([airplanes] -> [bool])\norders = Function([airplanes] -> [bool])\nreasons = EnumSort([pilot_error, quality, employee_replacement, consumer_pressure, FAA_guidelines])\nsupports_decision = Function([reasons] -> [bool])\n\n# Constraints\ncrashes(Everett_owned) == True ::: Three Everett-owned Lightning-built airplanes crashed\norders(Lightning_built) == True ::: Everett company ordered three new Lightning-built airplanes as replacements\n\n# Options\nQuestion ::: Which of the following, if true, provides the best indication that the Everett company's decision was logically well supported?\nsupports_decision(pilot_error) ::: (The Lightning-built airplanes crashed due to pilot error, but because of the excellent quality of the planes there were many survivors.\nsupports_decision(employee_replacement) ::: (Many Lightning Airplane Company employees had to be replaced because they found jobs with the competition.\nsupports_decision(consumer_pressure) ::: (Consumer advocates pressured two major airlines into purchasing safer airplanes so that the public would be safer while flying.\nsupports_decision(FAA_guidelines) ::: (The Federal Aviation Association issued new guidelines for airlines in order to standardize safety requirements governing preflight inspections."
    ]
  },
  {
    "id": "test_679",
    "context": "Literary critic: There is little of social significance in contemporary novels, for readers cannot enter the internal world of the novelist' s mind unless they experience that world from the moral perspective of the novel' s characters. But in contemporary novels, the transgressions committed by some characters against others are sensationalistic spectacles whose only purpose is to make readers wonder what will happen next, rather than events whose purpose is to be seen as the injustices they are.",
    "question": "Which one of the following principles, if valid, would most help to justify the literary critic's argument?",
    "options": [
      "If a novel allows a reader to understand injustice from the point of view of its victims, it will be socially significant.",
      "An artist who wants to engage the moral sensibilities of his or her audience should not assume that forms of artistic expression that previously served this purpose continue to do so.",
      "Novels have social significance only to the extent that they allow readers to enter the internal world of the novelist's mind.",
      "A novelist who wants to make a reader empathize with a victim of injustice should avoid sensationalistic spectacles whose only purpose is to make readers wonder what will happen next."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\nvalid = Function([principles] -> [bool])\n\n# Constraints\nvalid(P1) ::: If a novel allows a reader to understand injustice from the point of view of its victims, it will be socially significant\nvalid(P2) ::: An artist who wants to engage the moral sensibilities of his or her audience should not assume that forms of artistic expression that previously served this purpose continue to do so\nvalid(P3) ::: Novels have social significance only to the extent that they allow readers to enter the internal world of the novelist's mind\nvalid(P4) ::: A novelist who wants to make a reader empathize with a victim of injustice should avoid sensationalistic spectacles whose only purpose is to make readers wonder what will happen next\n\n# Options\nQuestion ::: Which one of the following principles, if valid, would most help to justify the literary critic's argument?\nis_justifying(valid(P1)) ::: (A)\nis_justifying(valid(P2)) ::: (B)\nis_justifying(valid(P3)) ::: (C)\nis_justifying(valid(P4)) ::: (D)"
    ]
  },
  {
    "id": "test_680",
    "context": "No chordates are tracheophytes, and all members of Pteropsida are tracheophytes. So no members of Pteropsida belong to the family Hominidae.",
    "question": "The conclusion above follows logically if which one of the following is assumed?",
    "options": [
      "No chordates are members of Pteropsida.",
      "All members of the family Hominidae are chordates.",
      "No members of the family Hominidae are chordates.",
      "All members of the family Hominadae are tracheophytes."
    ],
    "raw_logic_programs": [
      "# Declarations\ncategories = EnumSort([chordates, tracheophytes, Pteropsida, Hominidae])\nmembership = Function([categories, categories] -> [bool])\n\n# Constraints\nForAll([x:categories], Not(membership(x, chordates) && membership(x, tracheophytes))) ::: No chordates are tracheophytes\nForAll([x:categories], Implies(membership(x, Pteropsida), membership(x, tracheophytes))) ::: All members of Pteropsida are tracheophytes\nForAll([x:categories], Implies(membership(x, Pteropsida), Not(membership(x, Hominidae)))) ::: No members of Pteropsida belong to the family Hominidae\n\n# Options\nQuestion ::: The conclusion above follows logically if which one of the following is assumed?\nis_assumed(ForAll([x:categories], Implies(membership(x, Hominidae), membership(x, chordates)))) ::: (All members of the family Hominidae are chordates)\nis_assumed(ForAll([x:categories], Implies(membership(x, Hominidae), Not(membership(x, chordates))))) ::: (No members of the family Hominidae are chordates)\nis_assumed(ForAll([x:categories], Implies(membership(x, Hominidae), membership(x, tracheophytes)))) ::: (All members of the family Hominidae are tracheophytes)\nis_assumed(ForAll([x:categories], Implies(membership(x, chordates), Not(membership(x, Pteropsida))))) ::: (No chordates are members of Pteropsida)"
    ]
  },
  {
    "id": "test_681",
    "context": "We have a moral obligation not to destroy books, even if they belong to us. The reason is quite simple: If preserved, books will almost certainly contribute to the intellectual and emotional enrichment of future generations.",
    "question": "Which one of the following most accurately expresses the principle underlying the argument?",
    "options": [
      "Being morally obligated not to destroy something requires that we be reasonably assured that that thing will lead to the betterment of someone we know.",
      "The moral commitments we have to future generations supersede the moral commitments we have to the present generation.",
      "We are morally obligated not to destroy anything that will most likely enrich, either intellectually or emotionally, for posterity.",
      "We are morally obligated to preserve anything that past generations had preserved for our intellectual and emotional enrichment."
    ],
    "raw_logic_programs": [
      "# Declarations\nobjects = EnumSort([books])\nactions = EnumSort([destroy, preserve])\ngenerations = EnumSort([present, future])\nenrichment = Function([objects, generations] -> [bool])\nmoral_obligation = Function([actions, objects] -> [bool])\n\n# Constraints\nForAll([o:objects], enrichment(o, future) == True) ::: If preserved, books will almost certainly contribute to the intellectual and emotional enrichment of future generations\nForAll([o:objects], Implies(enrichment(o, future), moral_obligation(preserve, o))) ::: We have a moral obligation not to destroy books\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the principle underlying the argument?\nis_valid(ForAll([o:objects], Implies(moral_obligation(destroy, o), Exists([g:generations], enrichment(o, g) == True)))) ::: (A) Being morally obligated not to destroy something requires that we be reasonably assured that that thing will lead to the betterment of someone we know.\nis_valid(ForAll([o:objects], Implies(moral_obligation(destroy, o), enrichment(o, future)))) ::: (B) The moral commitments we have to future generations supersede the moral commitments we have to the present generation.\nis_valid(ForAll([o:objects], Implies(enrichment(o, future), moral_obligation(preserve, o)))) ::: (C) We are morally obligated not to destroy anything that will most likely enrich, either intellectually or emotionally, for posterity.\nis_valid(ForAll([o:objects], Implies(enrichment(o, present), moral_obligation(preserve, o)))) ::: (D) We are morally obligated to preserve anything that past generations had preserved for our intellectual and emotional enrichment."
    ]
  },
  {
    "id": "test_682",
    "context": "Ethicist: It would be a mistake to say that just because someone is not inclined to do otherwise, she or he does not deserve to be praised for doing what is right, for although we do consider people especially virtuous if they successfully resist a desire to do what is wrong, they are certainly no less virtuous if they have succeeded in extinguishing all such desires.",
    "question": "The assertion that people are considered especially virtuous if they successfully resist a desire to do what is wrong plays which one of the following roles in the ethicist's argument?",
    "options": [
      "It is, according to the argument, a commonly held opinion that is nevertheless false.",
      "It reports an observation that, according to the argument, serves as evidence for the truth of its conclusion.",
      "It is a claim for which the argument attempts to provide justification.",
      "It makes an observation that, according to the argument, is insufficient to justify the claim that the argument concludes is false."
    ],
    "raw_logic_programs": [
      "# Declarations\nroles = EnumSort([commonly_held_opinion, evidence_for_conclusion, claim_needing_justification, insufficient_observation])\nassertion_role = Function([roles] -> [bool])\n\n# Constraints\nassertion_role(commonly_held_opinion) == False ::: The assertion is not presented as a commonly held opinion that is false.\nassertion_role(claim_needing_justification) == False ::: The assertion is not a claim for which the argument attempts to provide justification.\nassertion_role(insufficient_observation) == False ::: The assertion is not presented as an observation insufficient to justify a false claim.\n\n# Options\nQuestion ::: The assertion that people are considered especially virtuous if they successfully resist a desire to do what is wrong plays which one of the following roles in the ethicist's argument?\nassertion_role(evidence_for_conclusion) == True ::: (It reports an observation that, according to the argument, serves as evidence for the truth of its conclusion.)"
    ]
  },
  {
    "id": "test_683",
    "context": "Many calcium supplements contain lead, a potentially dangerous substance even in small amounts. The body can safely store in bones trace amounts of lead from food, but high levels of lead in the blood are a major public health concern, associated with anemia and nerve damage. Despite this, many doctors contend that for some people calcium supplements containing lead are preferable to no calcium supplements at all.",
    "question": "Which one of the following, if true, would most help to resolve the apparent discrepancy in the information above?",
    "options": [
      "Some fruits and vegetables contain trace amounts of lead derived from the soil in which they are grown.",
      "Lead is only one of the common public health concerns that are associated with anemia and nerve damage.",
      "It is difficult to ensure that one has completely eliminated trace amounts of lead from one's diet.",
      "When calcium intake is insufficient, the body draws calcium from bones, releasing stored lead into the bloodstream."
    ],
    "raw_logic_programs": [
      "# Declarations\nlead_levels = EnumSort([low, high])\nhealth_concerns = EnumSort([anemia, nerve_damage])\ncalcium_supplements = EnumSort([with_lead, without_lead])\npeople = EnumSort([some_people])\ncalcium_intake = Function([people] -> [bool])\nlead_storage = Function([people] -> [lead_levels])\nhealth_issues = Function([people] -> [health_concerns])\n\n# Constraints\nForAll([p:people], Implies(calcium_intake(p) == False, lead_storage(p) == high)) ::: Without calcium supplements, lead storage in bones can become high\nForAll([p:people], Implies(lead_storage(p) == high, Exists([h:health_concerns], health_issues(p) == h))) ::: High lead levels are associated with health concerns\nForAll([p:people], Implies(calcium_intake(p) == True, lead_storage(p) == low)) ::: With calcium supplements, lead storage in bones remains low\n\n# Options\nQuestion ::: Which one of the following, if true, would most help to resolve the apparent discrepancy in the information above?\nis_helpful(ForAll([p:people], Implies(calcium_intake(p) == False, Exists([h:health_concerns], health_issues(p) == h)))) ::: (A) Some fruits and vegetables contain trace amounts of lead derived from the soil in which they are grown.\nis_helpful(ForAll([p:people], Implies(lead_storage(p) == high, Exists([h:health_concerns], health_issues(p) == h)))) ::: (B) Lead is only one of the common public health concerns that are associated with anemia and nerve damage.\nis_helpful(ForAll([p:people], Implies(calcium_intake(p) == False, lead_storage(p) == high))) ::: (C) It is difficult to ensure that one has completely eliminated trace amounts of lead from one's diet.\nis_helpful(ForAll([p:people], Implies(calcium_intake(p) == False, lead_storage(p) == high))) ::: (D) When calcium intake is insufficient, the body draws calcium from bones, releasing stored lead into the bloodstream."
    ]
  },
  {
    "id": "test_684",
    "context": "An influential stock analyst recommends the purchase of three infrequently traded stocks in each of his weekly magazine columns. Unusually large amounts of these stocks are often purchased one day before the magazine appears on the newsstands. This pattern has recurred over a period.",
    "question": "Suppose that the information presented above is accurate. Each of the following statements, if true, could help to explain why the unusually large purchases occurred EXCEPT:",
    "options": [
      "Workers at the company that prints the magazine have used their advance knowledge of the analyst's column to guide their own stock purchases.",
      "Workers at the company that prints the magazine often sell advance copies of the magazine to stockbrokers.",
      "Twenty people in the publishing company have access to the analyst's column before it is printed.",
      "The analyst refuses to submit his column for editorial review before it is printed."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nexplanation = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], explanation(s)) ::: Each statement could help explain the unusually large purchases\n\n# Options\nQuestion ::: Each of the following statements, if true, could help to explain why the unusually large purchases occurred EXCEPT:\nis_exception(Not(explanation(A))) ::: (A) Workers at the company that prints the magazine have used their advance knowledge of the analyst's column to guide their own stock purchases.\nis_exception(Not(explanation(B))) ::: (B) Workers at the company that prints the magazine often sell advance copies of the magazine to stockbrokers.\nis_exception(Not(explanation(C))) ::: (C) Twenty people in the publishing company have access to the analyst's column before it is printed.\nis_exception(Not(explanation(D))) ::: (D) The analyst refuses to submit his column for editorial review before it is printed."
    ]
  },
  {
    "id": "test_685",
    "context": "Cafeteria patron: The apples sold in this cafeteria are greasy. The cashier told me that the apples are in that condition when they are delivered to the cafeteria and that the cafeteria does not wash the apples it sells. Most fruit is sprayed with dangerous pesticides before it is harvested, and is dangerous until it is washed. Clearly, the cafeteria is selling pesticide-covered fruit, thereby endangering its patrons.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "The apples that the cafeteria sells are not thoroughly washed after harvest but before reaching the cafeteria.",
      "Most pesticides that are sprayed on fruit before harvest leave a greasy residue on the fruit.",
      "Many of the cafeteria's patrons are unaware that the cafeteria does not wash the apples it sells.",
      "Fruits other than apples also arrive at the cafeteria in a greasy condition."
    ],
    "raw_logic_programs": [
      "# Declarations\napples = EnumSort([greasy, not_greasy])\nwashing = EnumSort([washed, not_washed])\npesticides = EnumSort([dangerous, not_dangerous])\ncafeteria_apples = Function([apples, washing, pesticides] -> [bool])\n\n# Constraints\ncafeteria_apples(greasy, not_washed, dangerous) ::: The apples sold in this cafeteria are greasy and not washed, and are dangerous due to pesticides\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(cafeteria_apples(greasy, washed, dangerous) == False) ::: (A) The apples that the cafeteria sells are not thoroughly washed after harvest but before reaching the cafeteria.\nis_assumption(Exists([p:pesticides], And(p == dangerous, greasy))) ::: (B) Most pesticides that are sprayed on fruit before harvest leave a greasy residue on the fruit.\nis_assumption(Exists([p:patrons], unaware(p, not_washed))) ::: (C) Many of the cafeteria's patrons are unaware that the cafeteria does not wash the apples it sells.\nis_assumption(Exists([f:fruits], And(f != apples, greasy))) ::: (D) Fruits other than apples also arrive at the cafeteria in a greasy condition."
    ]
  },
  {
    "id": "test_686",
    "context": "Suncorp, a new corporation with limited funds, has been clearing large sections of the tropical Amazon forest for cattle ranching. This practice continues even though greater profits can be made from rubber tapping, which does not destroy the forest, than from cattle ranching, which does destroy the forest.",
    "question": "Which of the following, if true, most helps to explain why Suncorp has been pursuing the less profitable of the two economic activities mentioned above?",
    "options": [
      "In certain districts, profits made from cattle ranching are more heavily taxed than profits made from any other industry.",
      "Some of the cattle that are raised on land cleared in the Amazon are killed by wildcats.",
      "The amount of money required to begin a rubber-tapping operation is twice as high as the amount needed to begin a cattle ranch.",
      "Cattle-ranching operations that are located in tropical climates are more profitable than cattle-ranching operations that are located in cold-weather climates."
    ],
    "raw_logic_programs": [
      "# Declarations\nactivities = EnumSort([rubber_tapping, cattle_ranching])\nprofits = Function([activities] -> [int])\nstartup_cost = Function([activities] -> [int])\n\n# Constraints\nprofits(rubber_tapping) > profits(cattle_ranching) ::: Greater profits can be made from rubber tapping than from cattle ranching\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain why Suncorp has been pursuing the less profitable of the two economic activities mentioned above?\nis_explanation(startup_cost(rubber_tapping) > startup_cost(cattle_ranching)) ::: (C) The amount of money required to begin a rubber-tapping operation is twice as high as the amount needed to begin a cattle ranch\nis_explanation(profits(cattle_ranching) > profits(rubber_tapping)) ::: (A) In certain districts, profits made from cattle ranching are more heavily taxed than profits made from any other industry\nis_explanation(profits(cattle_ranching) < profits(rubber_tapping)) ::: (B) Some of the cattle that are raised on land cleared in the Amazon are killed by wildcats\nis_explanation(profits(cattle_ranching) > profits(rubber_tapping)) ::: (D) Cattle-ranching operations that are located in tropical climates are more profitable than cattle-ranching operations that are located in cold-weather climates"
    ]
  },
  {
    "id": "test_687",
    "context": "Had the party' s economic theories been sound and had it succeeded in implementing its program, the inflation rate would have lessened considerably. But because the inflation rate actually increased, the party' s economic theories were far off the mark.",
    "question": "The flawed reasoning in which one of the following arguments most closely resembles the flawed reasoning in the argument above?",
    "options": [
      "If the television station's new weather forecasting equipment had been worth the investment, the accuracy of its forecasts would have risen, along with its ratings. But the station's ratings actually decreased. Thus, the new equipment is no improvement on the old.",
      "If the company had succeeded in selling its subsidiaries and used the cash to purchase the new patent, its stock price would have doubled in the last two years. But the price of the stock did not increase in that time. Thus, the company must have failed to sell its subsidiaries.",
      "City residents were expected to show a great deal of support for the rebels if the battle was won and the jailed rebel leaders freed. Residents have shown a great deal of support for the rebels for the last three days. Ttherefore, the rebels must have won the battle.",
      "If the people who inhabited the valley for so long had been invaded, or if there had been a dramatic climatic change, there would have been changes in the valley's architecture. But architecture in the valley remained the same throughout their stay. Thus, the valley people must not have been invaded at any time during their stay."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([party_economic_theories, television_station, company_subsidiaries, city_residents, valley_people])\noutcomes = EnumSort([inflation_rate, ratings, stock_price, support_for_rebels, architecture_changes])\nconditions = EnumSort([economic_theories_sound, equipment_worth_investment, subsidiaries_sold, battle_won, valley_invaded])\nresults = EnumSort([inflation_lessened, forecasts_accurate, stock_doubled, support_shown, architecture_changed])\nactual_outcomes = EnumSort([inflation_increased, ratings_decreased, stock_not_increased, support_shown, architecture_same])\n\n# Constraints\nImplies(And(economic_theories_sound, party_economic_theories), inflation_lessened) ::: If the party's economic theories had been sound, the inflation rate would have lessened\nImplies(And(equipment_worth_investment, television_station), forecasts_accurate) ::: If the television station's new weather forecasting equipment had been worth the investment, the accuracy of its forecasts would have risen\nImplies(And(subsidiaries_sold, company_subsidiaries), stock_doubled) ::: If the company had succeeded in selling its subsidiaries, its stock price would have doubled\nImplies(And(battle_won, city_residents), support_shown) ::: If the battle was won, city residents were expected to show support\nImplies(And(valley_invaded, valley_people), architecture_changed) ::: If the valley people had been invaded, there would have been changes in architecture\n\n# Actual Outcomes\nNot(inflation_lessened) ::: Inflation rate did not lessen\nNot(forecasts_accurate) ::: Forecasts were not accurate\nNot(stock_doubled) ::: Stock price did not double\nsupport_shown ::: Support was shown\nNot(architecture_changed) ::: Architecture did not change\n\n# Options\nQuestion ::: The flawed reasoning in which one of the following arguments most closely resembles the flawed reasoning in the argument above?\nis_similar_flaw(Implies(Not(inflation_lessened), Not(economic_theories_sound))) ::: (A) The party's economic theories were far off the mark\nis_similar_flaw(Implies(Not(forecasts_accurate), Not(equipment_worth_investment))) ::: (B) The new equipment is no improvement on the old\nis_similar_flaw(Implies(Not(stock_doubled), Not(subsidiaries_sold))) ::: (C) The company must have failed to sell its subsidiaries\nis_similar_flaw(Implies(support_shown, battle_won)) ::: (D) The rebels must have won the battle\nis_similar_flaw(Implies(Not(architecture_changed), Not(valley_invaded))) ::: (E) The valley people must not have been invaded"
    ]
  },
  {
    "id": "test_688",
    "context": "It has been hypothesized that our solar system was formed from a cloud of gas and dust produced by a supernova -- an especially powerful explosion of a star. Supernovas produce the isotope iron-60, so if this hypothesis were correct, then iron-60 would have been present in the early history of the solar system. But researchers have found no iron-60 in meteorites that formed early in the solar system' s history, thereby disproving the hypothesis.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "Researchers have found iron-60 in meteorites that were formed relatively late in the solar system's history.",
      "Other solar systems are not formed from clouds of gas and dust produced by supernovas.",
      "Supernovas do not produce significant quantities of any form of iron other than iron-60.",
      "If there had been iron-60 present in the early history of the solar system, it would be found in meteorites formed early in the solar system's history."
    ],
    "raw_logic_programs": [
      "# Declarations\nhypothesis = Bool('hypothesis')\niron_60_present_early = Bool('iron_60_present_early')\niron_60_found_early_meteorites = Bool('iron_60_found_early_meteorites')\n\n# Constraints\nImplies(hypothesis, iron_60_present_early) ::: If the hypothesis is correct, then iron-60 would have been present in the early history of the solar system\nNot(iron_60_found_early_meteorites) ::: Researchers have found no iron-60 in meteorites that formed early in the solar system's history\nImplies(iron_60_present_early, iron_60_found_early_meteorites) ::: If there had been iron-60 present in the early history of the solar system, it would be found in meteorites formed early in the solar system's history\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(Implies(iron_60_present_early, iron_60_found_early_meteorites)) ::: (If there had been iron-60 present in the early history of the solar system, it would be found in meteorites formed early in the solar system's history)"
    ]
  },
  {
    "id": "test_689",
    "context": "Philosopher: Every action must be judged according to its utility -- an object or idea' s property that produces some benefit, advantage, pleasure, good, or happiness. Additionally, the suffering involved with or caused by the object or idea must be deducted before determining the utility. Society would be in a much better place if people used utility in their decision-making.",
    "question": "The philosopher's conclusion follows logically if which one of the following is assumed?",
    "options": [
      "All decisions will have an option that increases utility.",
      "No action is neutral.",
      "It is possible for all actions to have utility.",
      "There can never be an action that will increase an individual's short-term utility but detracts from the long-term utility."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([action1, action2, action3, ...])  # A set of actions\nutility = Function([actions] -> [int])  # Utility function mapping actions to their utility values\nsuffering = Function([actions] -> [int])  # Suffering function mapping actions to their suffering values\nnet_utility = Function([actions] -> [int])  # Net utility function mapping actions to their net utility values\n\n# Constraints\nForAll([a:actions], net_utility(a) == utility(a) - suffering(a)) ::: Net utility is calculated by subtracting suffering from utility\n\n# Options\nQuestion ::: The philosopher's conclusion follows logically if which one of the following is assumed?\nis_assumed(ForAll([a:actions], Exists([b:actions], net_utility(b) > net_utility(a)))) ::: (A) All decisions will have an option that increases utility.\nis_assumed(ForAll([a:actions], net_utility(a) != 0)) ::: (B) No action is neutral.\nis_assumed(Exists([a:actions], net_utility(a) > 0)) ::: (C) It is possible for all actions to have utility.\nis_assumed(Not(Exists([a:actions], And(net_utility(a) > 0, net_utility(a) < net_utility(a) - 1)))) ::: (D) There can never be an action that will increase an individual's short-term utility but detracts from the long-term utility."
    ]
  },
  {
    "id": "test_690",
    "context": "Opponents of allowing triple-trailer trucks to use the national highway system are wrong in claiming that these trucks are more dangerous than other commercial vehicles. In the western part of the country, in areas where triple-trailers are now permitted on some highways, for these vehicles the rate of road accident fatalities per mile of travel is lower than the national rate for other types of commercial vehicles. Clearly, triple-trailers are safer than other commercial vehicles.",
    "question": "Which one of the following, if true, most substantially weakens the argument?",
    "options": [
      "It takes two smaller semitrailers to haul as much weight as a single triple-trailer can.",
      "In areas where the triple-trailers are permitted, drivers need a special license to operate them.",
      "Highways in the sparsely populated West are much less heavily traveled and consequently are far safer than highways in the national system as a whole.",
      "For triple-trailers the rate of road accident fatalities per mile of travel was higher last year than in the two previous years."
    ],
    "raw_logic_programs": [
      "# Declarations\nvehicles = EnumSort([triple_trailers, other_commercial_vehicles])\nregions = EnumSort([western, national])\naccident_rate = Function([vehicles, regions] -> [float])\n\n# Constraints\naccident_rate(triple_trailers, western) < accident_rate(other_commercial_vehicles, national) ::: In the western part of the country, the rate of road accident fatalities per mile of travel for triple-trailers is lower than the national rate for other types of commercial vehicles\n\n# Options\nQuestion ::: Which one of the following, if true, most substantially weakens the argument?\nis_weakening(Highways in the sparsely populated West are much less heavily traveled and consequently are far safer than highways in the national system as a whole) ::: (C)"
    ]
  },
  {
    "id": "test_691",
    "context": "Medical researcher: At the Flegco Corporation, all employees whose work involves lifting heavy objects wear back belts to prevent back injuries. However, a study found that Flegco employees who wear back belts are actually more likely to suffer back injuries than are employees who do not wear back belts. This suggests that back belts do not help to prevent back injuries.",
    "question": "The reasoning in the medical researcher's argument is most vulnerable to criticism on which one of the following grounds?",
    "options": [
      "It confuses the claim that a phenomenon does not causally contribute to a certain effect with the claim that that phenomenon causally contributes to preventing that effect.",
      "It takes for granted that if a factor is associated with an increased likelihood of a certain effect, that factor must causally contribute to that effect.",
      "It compares the incidence of back injury between two groups who probably do not have the same risk factors for back injury.",
      "It fails to address the possibility that even if a factor is sufficient to produce a certain effect, its presence may not be necessary in order for that effect to be produced."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([wear_back_belts, do_not_wear_back_belts])\ninjuries = EnumSort([suffer_back_injuries, do_not_suffer_back_injuries])\nwork_involves_lifting = Function([employees] -> [bool])\nwear_back_belts = Function([employees] -> [bool])\nsuffer_back_injuries = Function([employees] -> [bool])\n\n# Constraints\nForAll([e:employees], Implies(work_involves_lifting(e), wear_back_belts(e))) ::: All employees whose work involves lifting heavy objects wear back belts\nForAll([e:employees], Implies(wear_back_belts(e), suffer_back_injuries(e))) ::: Flegco employees who wear back belts are more likely to suffer back injuries\n\n# Options\nQuestion ::: The reasoning in the medical researcher's argument is most vulnerable to criticism on which one of the following grounds?\nis_vulnerable(It_confuses(phenomenon_does_not_causally_contribute, phenomenon_causally_contributes_to_preventing)) ::: (A)\nis_vulnerable(It_takes_for_granted(factor_associated_with_increased_likelihood, factor_causally_contributes)) ::: (B)\nis_vulnerable(It_compares_incidence_between_groups_with_different_risk_factors) ::: (C)\nis_vulnerable(It_fails_to_address(factor_sufficient_but_not_necessary)) ::: (D)"
    ]
  },
  {
    "id": "test_692",
    "context": "Logician: I have studied and thoroughly mastered the laws of logic. So to argue that I sometimes violate the laws of logic in ordinary conversation would be like arguing that some physicist circumvents the laws of physics in everyday life.",
    "question": "The reasoning in the logician's argument is questionable because this argument",
    "options": [
      "has a conclusion that contradicts what is asserted in its premise",
      "ignores the fact that our conception of physical laws undergoes constant change",
      "treats two kinds of things that differ in important respects as if they do not differ",
      "fails to rule out the possibility that some physicist could circumvent the laws of physics in everyday life"
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([logic, physics])\npeople = EnumSort([logician, physicist])\nactions = EnumSort([mastered, violate, circumvent])\nargument = Function([people, concepts, actions] -> [bool])\n\n# Constraints\nargument(logician, logic, mastered) ::: The logician has studied and thoroughly mastered the laws of logic\nargument(logician, logic, violate) ::: The logician sometimes violates the laws of logic in ordinary conversation\nargument(physicist, physics, circumvent) ::: Some physicist circumvents the laws of physics in everyday life\n\n# Options\nQuestion ::: The reasoning in the logician's argument is questionable because this argument\nis_questionable(And(argument(logician, logic, violate), argument(logician, logic, mastered))) ::: (has a conclusion that contradicts what is asserted in its premise)\nis_questionable(False) ::: (ignores the fact that our conception of physical laws undergoes constant change)\nis_questionable(And(argument(logician, logic, violate), argument(physicist, physics, circumvent))) ::: (treats two kinds of things that differ in important respects as if they do not differ)\nis_questionable(False) ::: (fails to rule out the possibility that some physicist could circumvent the laws of physics in everyday life)"
    ]
  },
  {
    "id": "test_693",
    "context": "From enlargements that are commonly found on the ulna bones of the forearms of Ice Age human skeletons, anthropologists have drawn the conclusion that the Ice Age humans represented by those skeletons frequently hunted by throwing spears. The bone enlargements, the anthropologists believe, resulted from the stresses of habitual throwing.",
    "question": "Which of the following, if true, would be the LEAST appropriate to use as support for the conclusion drawn by the anthropologists?",
    "options": [
      "Damaged bones in the skeletons show evidence of diseases that are believed to have afflicted most people living during the Ice Age.",
      "Cave paintings dating from approximately the same time period and located not far from where the skeletons were found show hunters carrying and throwing spears.",
      "Such enlargements on the ulna bone do not appear on skeletons from other human cultures of the same time period whose diets are believed to have been mainly vegetarian.",
      "Humans typically favor one arm over the other when throwing, and most ice Age human skeletons have enlargements on the ulna bone of only one arm."
    ],
    "raw_logic_programs": [
      "# Declarations\nevidence = EnumSort([damaged_bones, cave_paintings, enlargements_absent, arm_favoring])\nsupports_conclusion = Function([evidence] -> [bool])\n\n# Constraints\nsupports_conclusion(cave_paintings) ::: Cave paintings show hunters carrying and throwing spears, supporting the conclusion.\nsupports_conclusion(enlargements_absent) ::: Absence of enlargements in vegetarian cultures supports the conclusion.\nsupports_conclusion(arm_favoring) ::: Favoring one arm in throwing supports the conclusion.\n\n# Options\nQuestion ::: Which of the following, if true, would be the LEAST appropriate to use as support for the conclusion drawn by the anthropologists?\nis_least_appropriate(Not(supports_conclusion(damaged_bones))) ::: (A) Damaged bones in the skeletons show evidence of diseases that are believed to have afflicted most people living during the Ice Age.\nis_least_appropriate(Not(supports_conclusion(cave_paintings))) ::: (B) Cave paintings dating from approximately the same time period and located not far from where the skeletons were found show hunters carrying and throwing spears.\nis_least_appropriate(Not(supports_conclusion(enlargements_absent))) ::: (C) Such enlargements on the ulna bone do not appear on skeletons from other human cultures of the same time period whose diets are believed to have been mainly vegetarian.\nis_least_appropriate(Not(supports_conclusion(arm_favoring))) ::: (D) Humans typically favor one arm over the other when throwing, and most Ice Age human skeletons have enlargements on the ulna bone of only one arm."
    ]
  },
  {
    "id": "test_694",
    "context": "Most psychologists believe that perception is unchanging throughout adulthood. However, the ability to detect the various flavors of wine, and to perceive the complex way in which those flavors are balanced, develops only with much exposure to the taste of wine as an adult. For this reason, inexperienced wine drinkers are often disappointed when they taste a great wine -- they are unable to perceive the wine the way an expert can.",
    "question": "The argument challenges the claim that perception is unchanging throughout adulthood by",
    "options": [
      "presenting a specific instance that is not correctly described by the claim",
      "presenting evidence that many experts disagree with the claim",
      "showing that nothing can remain unchanged throughout adulthood",
      "offering a principle that conflicts with the claim"
    ],
    "raw_logic_programs": [
      "# Declarations\nbeliefs = EnumSort([unchanging_perception, changing_perception])\nabilities = EnumSort([detect_flavors, perceive_balance])\npeople = EnumSort([inexperienced_drinker, expert_drinker])\nexposure = Function([people] -> [int])\nperception = Function([people, abilities] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(exposure(p) < threshold, Not(perception(p, detect_flavors)))) ::: Inexperienced drinkers cannot detect flavors without exposure\nForAll([p:people], Implies(exposure(p) >= threshold, perception(p, detect_flavors))) ::: Experts can detect flavors with sufficient exposure\nForAll([p:people], Implies(exposure(p) < threshold, Not(perception(p, perceive_balance)))) ::: Inexperienced drinkers cannot perceive balance without exposure\nForAll([p:people], Implies(exposure(p) >= threshold, perception(p, perceive_balance))) ::: Experts can perceive balance with sufficient exposure\n\n# Options\nQuestion ::: The argument challenges the claim that perception is unchanging throughout adulthood by\nis_challenge(Exists([p:people], And(exposure(p) < threshold, Not(perception(p, detect_flavors))))) ::: (A) presenting a specific instance that is not correctly described by the claim\nis_challenge(Exists([p:people], And(exposure(p) >= threshold, perception(p, detect_flavors)))) ::: (B) presenting evidence that many experts disagree with the claim\nis_challenge(Not(Exists([p:people], And(exposure(p) < threshold, perception(p, detect_flavors))))) ::: (C) showing that nothing can remain unchanged throughout adulthood\nis_challenge(Exists([p:people], And(exposure(p) < threshold, Not(perception(p, perceive_balance))))) ::: (D) offering a principle that conflicts with the claim"
    ]
  },
  {
    "id": "test_695",
    "context": "Columnist: Polls can influence voters' decisions, and they may distort the outcome of an election since their results are much less reliable than the public believes. Furthermore, the publication of polls immediately prior to an election allows no response from those wishing to dispute the polls' findings. A ban on publishing polls during the week prior to an election only minimally impairs freedom of expression, and thus should be implemented.",
    "question": "Which one of the following, if true, most seriously weakens the columnist's argument?",
    "options": [
      "Few people are influenced by the results of polls published during the two weeks immediately prior to an election.",
      "The publication of poll results may remove some voters' motivation to vote because of the certainty that a particular candidate will win.",
      "The publication of poll results would not decide the winner of an uneven election race.",
      "The publication of poll results in the last weeks before an election draws attention to candidates' late gains in popularity."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([columnist_argument])\nstatements = EnumSort([few_influenced, remove_motivation, not_decide_winner, draw_attention])\nweakens = Function([arguments, statements] -> [bool])\n\n# Constraints\nForAll([a:arguments], Exists([s:statements], weakens(a, s))) ::: There exists a statement that weakens the columnist's argument\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the columnist's argument?\nis_weakening(weakens(columnist_argument, few_influenced)) ::: (A) Few people are influenced by the results of polls published during the two weeks immediately prior to an election.\nis_weakening(weakens(columnist_argument, remove_motivation)) ::: (B) The publication of poll results may remove some voters' motivation to vote because of the certainty that a particular candidate will win.\nis_weakening(weakens(columnist_argument, not_decide_winner)) ::: (C) The publication of poll results would not decide the winner of an uneven election race.\nis_weakening(weakens(columnist_argument, draw_attention)) ::: (D) The publication of poll results in the last weeks before an election draws attention to candidates' late gains in popularity."
    ]
  },
  {
    "id": "test_696",
    "context": "In 1996, all ResearchTech projects were funded either by the government or by private corporations. The Gilman Survey, a ResearchTech project, was not funded by the government but was conducted in 1996. It must ttherefore have been funded by private corporations.",
    "question": "Which one of the following is most similar in its reasoning to the argument above?",
    "options": [
      "Ordinance 304 is not paternalistic. Since all legal restrictions on consumer purchases are either paternalistic or designed to protect the environment, the purpose of Ordinance 304 must not be to protect the environment.",
      "Legal restrictions on consumer purchases, such as Ordinance 304, are either paternalistic or protect civil liberties. Ordinance 304 is not paternalistic, so it must protect civil liberties.",
      "Legal restrictions on consumer purchases have a variety of aims; for example, some are paternalistic, and others are designed to protect civil liberties. Ordinance 304, a legal restriction on alcohol sales, does not protect civil liberties. It must ttherefore be paternalistic.",
      "Legal restrictions on consumer purchases are either paternalistic or designed to protect civil liberties. All ordinances passed in 1993 are paternalistic. Since Ordinance 304 was passed in 1993, it must be a legal restriction on consumer purchases."
    ],
    "raw_logic_programs": [
      "# Declarations\ncategories = EnumSort([government, private_corporations])\nprojects = EnumSort([ResearchTech, Gilman_Survey])\nfunded_by = Function([projects] -> [categories])\n\n# Constraints\nForAll([p:projects], Or(funded_by(p) == government, funded_by(p) == private_corporations)) ::: All ResearchTech projects were funded either by the government or by private corporations\nfunded_by(Gilman_Survey) != government ::: The Gilman Survey was not funded by the government\n\n# Options\nQuestion ::: Which one of the following is most similar in its reasoning to the argument above?\nis_similar(Ordinance_304, Not(paternalistic), Or(paternalistic, protect_environment), Not(protect_environment)) ::: (A)\nis_similar(Ordinance_304, Not(paternalistic), Or(paternalistic, protect_civil_liberties), protect_civil_liberties) ::: (B)\nis_similar(Ordinance_304, Not(protect_civil_liberties), Or(paternalistic, protect_civil_liberties), paternalistic) ::: (C)\nis_similar(Ordinance_304, passed_in_1993, Or(paternalistic, protect_civil_liberties), legal_restriction) ::: (D)"
    ]
  },
  {
    "id": "test_697",
    "context": "The consistency of ice cream is adversely affected by even slight temperature changes in the freezer. To counteract this problem, manufacturers add stabilizers to ice cream. Unfortunately, stabilizers, though inexpensive, adversely affect flavor. Stabilizers are less needed if storage temperatures are very low. However, since energy costs are constantly going up, those costs constitute a strong incentive in favor of relatively high storage temperatures.",
    "question": "Which one of the following can be properly inferred from the passage?",
    "options": [
      "Stabilizers function well only at very low freezer temperatures.",
      "Cost considerations favor sacrificing consistency over sacrificing flavor.",
      "Even slight deviations from the proper consistency for ice cream sharply impair its flavor.",
      "Very low, stable freezer temperatures allow for the best possible consistency and flavor of ice cream."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([consistency, flavor, temperature, energy_costs, stabilizers])\nconditions = EnumSort([adversely_affected, inexpensive, strong_incentive, less_needed])\n\n# Constraints\nimplies(temperature == stable, consistency != adversely_affected) ::: The consistency of ice cream is adversely affected by even slight temperature changes in the freezer\nimplies(stabilizers == added, consistency != adversely_affected) ::: To counteract this problem, manufacturers add stabilizers to ice cream\nimplies(stabilizers == inexpensive, flavor == adversely_affected) ::: Unfortunately, stabilizers, though inexpensive, adversely affect flavor\nimplies(temperature == very_low, stabilizers == less_needed) ::: Stabilizers are less needed if storage temperatures are very low\nimplies(energy_costs == going_up, temperature == strong_incentive) ::: However, since energy costs are constantly going up, those costs constitute a strong incentive in favor of relatively high storage temperatures\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the passage?\nimplies(temperature == very_low, And(consistency != adversely_affected, flavor != adversely_affected)) ::: (A) Stabilizers function well only at very low freezer temperatures\nimplies(energy_costs == strong_incentive, consistency == adversely_affected) ::: (B) Cost considerations favor sacrificing consistency over sacrificing flavor\nimplies(consistency == adversely_affected, flavor == adversely_affected) ::: (C) Even slight deviations from the proper consistency for ice cream sharply impair its flavor\nimplies(temperature == very_low, And(consistency != adversely_affected, flavor != adversely_affected)) ::: (D) Very low, stable freezer temperatures allow for the best possible consistency and flavor of ice cream"
    ]
  },
  {
    "id": "test_698",
    "context": "The economies of some industrialized countries face the prospect of large labor shortages in the decades ahead. Meanwhile, these countries will have a vast number of experienced and productive older workers who, as things stand, will be driven from the work force upon reaching the age of sixty-five by the widespread practice of requiring workers to retire at that age. Ttherefore, if the discriminatory practice of mandatory retirement at age sixty-five were eliminated, the labor shortages facing these economies would be averted.",
    "question": "The argument assumes that",
    "options": [
      "a large number of workers in some industrialized countries would continue working beyond the age of sixty-five if workers in those countries were allowed to do so",
      "older workers have acquired skills that are extremely valuable and that their younger colleagues lack",
      "mandatory retirement at age sixty-five was first instituted when life expectancy was considerably lower than it is today",
      "a substantial proportion of the population of officially retired workers is actually engaged in gainful employment"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([industrialized_countries])\nworkers = EnumSort([older_workers])\npractices = EnumSort([mandatory_retirement])\nages = EnumSort([sixty_five])\nlabor_shortages = EnumSort([large_labor_shortages])\nworkforce_status = Function([workers] -> [bool])\nretirement_practice = Function([practices] -> [bool])\nlabor_shortage_status = Function([countries] -> [bool])\n\n# Constraints\nForAll([c:countries], labor_shortage_status(c) == True) ::: The economies of some industrialized countries face the prospect of large labor shortages\nForAll([w:workers], Implies(retirement_practice(mandatory_retirement) == True, workforce_status(w) == False)) ::: Workers are driven from the workforce by mandatory retirement\nForAll([w:workers], Implies(retirement_practice(mandatory_retirement) == False, workforce_status(w) == True)) ::: If mandatory retirement is eliminated, older workers would remain in the workforce\n\n# Options\nQuestion ::: The argument assumes that\nis_assumption(Exists([w:workers], workforce_status(w) == True)) ::: (a large number of workers in some industrialized countries would continue working beyond the age of sixty-five if workers in those countries were allowed to do so)\nis_assumption(Exists([w:workers], workforce_status(w) == True)) ::: (older workers have acquired skills that are extremely valuable and that their younger colleagues lack)\nis_assumption(Exists([p:practices], retirement_practice(p) == True)) ::: (mandatory retirement at age sixty-five was first instituted when life expectancy was considerably lower than it is today)\nis_assumption(Exists([w:workers], workforce_status(w) == True)) ::: (a substantial proportion of the population of officially retired workers is actually engaged in gainful employment)"
    ]
  },
  {
    "id": "test_699",
    "context": "Environmentalist: Many people prefer to live in regions of natural beauty. Such regions often experience an influx of new residents, and a growing population encourages businesses to relocate to those regions. Thus, governmentally mandated environmental protection in regions of natural beauty can help those regions' economies overall, even if such protection harms some older local industries.",
    "question": "Which one of the following is an assumption on which the environmentalist's argument depends?",
    "options": [
      "If governmentally mandated environmental protection helps a region's economy, it does so primarily by encouraging people to move into that region.",
      "Regions of natural beauty typically are beautiful enough to attract new residents only until governmentally mandated environmental protection that damages local industries is imposed.",
      "A factor harmful to some older local industries in a region need not discourage other businesses from relocating to that region.",
      "Voluntary environmental protection usually does not help a region's economy to the degree that governmentally mandated protection does."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([natural_beauty])\nfactors = EnumSort([environmental_protection, influx_of_residents, business_relocation])\neffects = EnumSort([helps_economy, harms_industries])\ncauses = Function([factors, regions] -> [effects])\n\n# Constraints\ncauses(environmental_protection, natural_beauty) == helps_economy ::: governmentally mandated environmental protection can help those regions' economies\ncauses(environmental_protection, natural_beauty) == harms_industries ::: such protection harms some older local industries\ncauses(influx_of_residents, natural_beauty) == helps_economy ::: influx of new residents helps the economy\ncauses(business_relocation, natural_beauty) == helps_economy ::: business relocation helps the economy\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the environmentalist's argument depends?\nis_assumption(Implies(causes(environmental_protection, natural_beauty) == helps_economy, causes(influx_of_residents, natural_beauty) == helps_economy)) ::: (If governmentally mandated environmental protection helps a region's economy, it does so primarily by encouraging people to move into that region.\nis_assumption(Not(Implies(causes(environmental_protection, natural_beauty) == harms_industries, Not(causes(influx_of_residents, natural_beauty) == helps_economy)))) ::: (Regions of natural beauty typically are beautiful enough to attract new residents only until governmentally mandated environmental protection that damages local industries is imposed.\nis_assumption(Not(Implies(causes(environmental_protection, natural_beauty) == harms_industries, Not(causes(business_relocation, natural_beauty) == helps_economy)))) ::: (A factor harmful to some older local industries in a region need not discourage other businesses from relocating to that region.\nis_assumption(Not(Implies(causes(environmental_protection, natural_beauty) == helps_economy, causes(environmental_protection, natural_beauty) == helps_economy))) ::: (Voluntary environmental protection usually does not help a region's economy to the degree that governmentally mandated protection does."
    ]
  },
  {
    "id": "test_700",
    "context": "The emerald ash borer is devastating the population of ash trees throughout North America. The spread of the insect can be controlled with insecticides, but the insecticides can pose a health hazard to people in forested areas where the ash trees are located. The insecticides are thus unsuitable for ash trees located in high-traffic forests such as those found in national parks. Fortunately, most large groupings of ash trees are in dense forests mostly avoided by people so insecticides can be used safely there. Ttherefore, the emerald ash borer does not seriously threaten most of North America' s ash population.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Large collections of ash trees constitute most of North America's ash population.",
      "Varieties of ash trees will soon be developed to resist the emerald ash borer.",
      "The emerald ash borer is the only insect threatening ash populations in North America.",
      "Most of the ash trees that have not been exposed to the emerald ash borer are in small collections in national parks."
    ],
    "raw_logic_programs": [
      "# Declarations\nash_trees = EnumSort([large_groupings, small_collections])\nforests = EnumSort([dense_forests, high_traffic_forests])\nthreats = EnumSort([emerald_ash_borer, other_insects])\ninsecticides = Function([ash_trees, forests] -> [bool])\nthreatens = Function([threats, ash_trees] -> [bool])\n\n# Constraints\nForAll([t:ash_trees], Or(t == large_groupings, t == small_collections)) ::: Most large groupings of ash trees are in dense forests mostly avoided by people\nForAll([f:forests], Implies(f == high_traffic_forests, Not(insecticides(large_groupings, f)))) ::: Insecticides are unsuitable for ash trees located in high-traffic forests\nForAll([f:forests], Implies(f == dense_forests, insecticides(large_groupings, f))) ::: Insecticides can be used safely in dense forests\nNot(threatens(emerald_ash_borer, large_groupings)) ::: The emerald ash borer does not seriously threaten most of North America's ash population\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([t:ash_trees], Implies(t == large_groupings, Not(threatens(emerald_ash_borer, t))))) ::: (A) Large collections of ash trees constitute most of North America's ash population.\nis_assumption(Exists([t:ash_trees], Not(threatens(emerald_ash_borer, t)))) ::: (B) Varieties of ash trees will soon be developed to resist the emerald ash borer.\nis_assumption(ForAll([t:ash_trees], Not(threatens(other_insects, t)))) ::: (C) The emerald ash borer is the only insect threatening ash populations in North America.\nis_assumption(ForAll([t:ash_trees], Implies(t == small_collections, threatens(emerald_ash_borer, t)))) ::: (D) Most of the ash trees that have not been exposed to the emerald ash borer are in small collections in national parks."
    ]
  },
  {
    "id": "test_701",
    "context": "Technician: Laboratory mice that are used for research aimed at improving human health are usually kept in small cages. Such an environment is neither normal nor healthy for mice. Moreover, the reliability of research using animals is diminished if those animals are not in an environment that is normal for them.",
    "question": "Which one of the following can be properly inferred from the technician's statements?",
    "options": [
      "If laboratory mice were kept under better conditions, it would be appropriate to use them for research aimed at improving human health.",
      "Laboratory mice that are used for research that is not directly related to human health are not usually kept in small cages.",
      "Research using laboratory mice that is aimed at improving human health is compromised by the conditions under which the mice are kept.",
      "Those who conduct research aimed at improving human health will develop new research techniques."
    ],
    "raw_logic_programs": [
      "# Declarations\nmice = EnumSort([laboratory_mice])\nresearch_types = EnumSort([improving_human_health, not_improving_human_health])\nconditions = EnumSort([small_cages, better_conditions])\nreliability = EnumSort([diminished, not_diminished])\nenvironment = Function([mice] -> [conditions])\nresearch = Function([mice] -> [research_types])\nreliability_of_research = Function([mice] -> [reliability])\n\n# Constraints\nForAll([m:mice], And(research(m) == improving_human_health, environment(m) == small_cages)) ::: Laboratory mice that are used for research aimed at improving human health are usually kept in small cages\nForAll([m:mice], environment(m) != normal) ::: Such an environment is neither normal nor healthy for mice\nForAll([m:mice], Implies(environment(m) != normal, reliability_of_research(m) == diminished)) ::: The reliability of research using animals is diminished if those animals are not in an environment that is normal for them\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the technician's statements?\nis_inferred(ForAll([m:mice], Implies(environment(m) == better_conditions, research(m) == improving_human_health))) ::: (A) If laboratory mice were kept under better conditions, it would be appropriate to use them for research aimed at improving human health.\nis_inferred(Exists([m:mice], And(research(m) == not_improving_human_health, environment(m) != small_cages))) ::: (B) Laboratory mice that are used for research that is not directly related to human health are not usually kept in small cages.\nis_inferred(ForAll([m:mice], Implies(research(m) == improving_human_health, reliability_of_research(m) == diminished))) ::: (C) Research using laboratory mice that is aimed at improving human health is compromised by the conditions under which the mice are kept.\nis_inferred(Exists([m:mice], research(m) == improving_human_health)) ::: (D) Those who conduct research aimed at improving human health will develop new research techniques."
    ]
  },
  {
    "id": "test_702",
    "context": "Doctor: In three separate studies, researchers compared children who had slept with nightlights in their rooms as infants to children who had not. In the first study, the children who had slept with night-lights proved more likely to be nearsighted, but the later studies found no correlation between night-lights and nearsightedness. However, the children in the first study were younger than those in the later studies. This suggests that if night-lights cause nearsightedness, the effect disappears with age.",
    "question": "Which one of the following, if true, would most weaken the doctor's argument?",
    "options": [
      "A fourth study comparing infants who were currently sleeping with night-lights to infants who were not did not find any correlation between night-lights and nearsightedness.",
      "In a study involving children who had not slept with night-lights as infants but had slept with night-lights when they were older, most of the children studied were not nearsighted.",
      "The two studies in which no correlation was found did not examine enough children to provide significant support for any conclusion regarding a causal relationship between night-lights and nearsightedness.",
      "On average, young children who are already very nearsighted are no more likely to sleep with night-lights than young children who are not already nearsighted."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudies = EnumSort([first_study, second_study, third_study, fourth_study])\nchildren = EnumSort([with_nightlights, without_nightlights])\nage_groups = EnumSort([infants, older_children])\ncorrelation = Function([studies, children, age_groups] -> [bool])\n\n# Constraints\ncorrelation(first_study, with_nightlights, infants) == True ::: In the first study, the children who had slept with night-lights proved more likely to be nearsighted\nForAll([s:studies], Implies(s != first_study, correlation(s, with_nightlights, infants) == False)) ::: The later studies found no correlation between night-lights and nearsightedness\nForAll([s:studies], correlation(s, without_nightlights, infants) == False) ::: No correlation for children without night-lights\nForAll([s:studies], correlation(s, with_nightlights, older_children) == False) ::: No correlation for older children with night-lights\nForAll([s:studies], correlation(s, without_nightlights, older_children) == False) ::: No correlation for older children without night-lights\n\n# Options\nQuestion ::: Which one of the following, if true, would most weaken the doctor's argument?\nis_weakened(correlation(fourth_study, with_nightlights, infants) == False) ::: (A fourth study comparing infants who were currently sleeping with night-lights to infants who were not did not find any correlation between night-lights and nearsightedness.\nis_weakened(correlation(second_study, with_nightlights, older_children) == False) ::: (In a study involving children who had not slept with night-lights as infants but had slept with night-lights when they were older, most of the children studied were not nearsighted.\nis_weakened(Exists([s:studies], s != first_study, correlation(s, with_nightlights, infants) == False)) ::: (The two studies in which no correlation was found did not examine enough children to provide significant support for any conclusion regarding a causal relationship between night-lights and nearsightedness.\nis_weakened(ForAll([c:children], correlation(first_study, c, infants) == False)) ::: (On average, young children who are already very nearsighted are no more likely to sleep with night-lights than young children who are not already nearsighted."
    ]
  },
  {
    "id": "test_703",
    "context": "In order to save money, many consumers redeem coupons that are distributed by retail stores. However, in general, retail stores that distribute and accept store coupons as a way of discounting the prices on certain products charge more for their products, on average, than other retail stores charge for the same products -- even after lower prices available on coupon-discounted products are factored in. This is because producing and distributing coupons usually costs a great deal. To compensate for this expense without reducing profits, retail stores must pass it on to consumers.",
    "question": "Which one of the following can be properly inferred from the information above?",
    "options": [
      "At least some retail stores that do not use coupons do not have expenses that they pass on to consumers.",
      "The undiscounted price charged for a good for which a retail store offers a coupon will be higher than the price charged for that same good by a retail store that does not offer a coupon for it.",
      "Many consumers who redeem coupons save little if any money, overall, by doing so.",
      "Retail stores that distribute coupons generally compensate for the expense of producing and distributing coupons by charging higher prices for certain products."
    ],
    "raw_logic_programs": [
      "# Declarations\nstores = EnumSort([coupon_store, non_coupon_store])\nproducts = EnumSort([product])\nprices = Function([stores, products] -> [float])\ncosts = Function([stores] -> [float])\nprofits = Function([stores] -> [float])\n\n# Constraints\nForAll([p:products], prices(coupon_store, p) > prices(non_coupon_store, p)) ::: Retail stores that distribute and accept store coupons charge more for their products, on average, than other retail stores charge for the same products\ncosts(coupon_store) > costs(non_coupon_store) ::: Producing and distributing coupons usually costs a great deal\nprofits(coupon_store) == profits(non_coupon_store) ::: To compensate for this expense without reducing profits, retail stores must pass it on to consumers\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the information above?\nis_inferred(Exists([s:stores], And(s == non_coupon_store, costs(s) == 0))) ::: (A) At least some retail stores that do not use coupons do not have expenses that they pass on to consumers.\nis_inferred(ForAll([p:products], prices(coupon_store, p) > prices(non_coupon_store, p))) ::: (B) The undiscounted price charged for a good for which a retail store offers a coupon will be higher than the price charged for that same good by a retail store that does not offer a coupon for it.\nis_inferred(Exists([c:consumers], And(redeem(c, coupon), savings(c) <= 0))) ::: (C) Many consumers who redeem coupons save little if any money, overall, by doing so.\nis_inferred(ForAll([p:products], prices(coupon_store, p) > prices(non_coupon_store, p))) ::: (D) Retail stores that distribute coupons generally compensate for the expense of producing and distributing coupons by charging higher prices for certain products."
    ]
  },
  {
    "id": "test_704",
    "context": "In the country of Veltria, the past two years' broad economic recession has included a business downturn in the clothing trade, where sales are down by about 7 percent as compared to two years ago. Clothing wholesalers have found, however, that the proportion of credit extended to retailers that was paid off on time fell sharply in the first year of the recession but returned to its prerecession level in the second year.",
    "question": "Which of the following, if true, most helps to explain the change between the first and the second year of the recession in the proportion of credit not paid off on time?",
    "options": [
      "Relatively recession-proof segments of the clothing trade, such as work clothes, did not suffer any decrease in sales during the first year of the recession.",
      "Of the considerable number of clothing retailers in Veltria who were having financial difficulties before the start of the recession, virtually all were forced to go out of business during its first year.",
      "Clothing retailers in Veltria attempted to stimulate sales in the second year of the recession by discounting merchandise.",
      "The total amount of credit extended to retailers by clothing wholesalers increased between the first year of the recession and the second year."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([first_year, second_year])\nfactors = EnumSort([recession_proof_segments, retailers_out_of_business, discounting_merchandise, credit_increase])\nexplains_change = Function([factors, events] -> [bool])\n\n# Constraints\nForAll([f:factors], Or(explains_change(f, first_year), explains_change(f, second_year))) ::: Each factor can potentially explain the change in either the first or second year\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the change between the first and the second year of the recession in the proportion of credit not paid off on time?\nis_most_helpful(explains_change(retailers_out_of_business, first_year)) ::: (B)\nis_most_helpful(explains_change(recession_proof_segments, first_year)) ::: (A)\nis_most_helpful(explains_change(discounting_merchandise, second_year)) ::: (C)\nis_most_helpful(explains_change(credit_increase, second_year)) ::: (D)"
    ]
  },
  {
    "id": "test_705",
    "context": "For a computer to be intelligent, it must possess at least one of three qualities: creativity, self-awareness, or the ability to learn from its mistakes. Because the AR3000 is not creative or self-aware, it must have the ability to learn from its mistakes if it is intelligent.",
    "question": "Which one of the following arguments is most similar in its reasoning to the argument above?",
    "options": [
      "Every commonly used vaccine is either a dead-virus vaccine, an attenuated-virus vaccine, or a pure DNA vaccine. Vaccine X stimulates the production of killer T cells in the immune system, unlike any pure DNA vaccine. Ttherefore, if it is not a dead-virus vaccine, then it must be an attenuated-virus vaccine.",
      "Every commonly used vaccine is either a dead-virus vaccine, an attenuated-virus vaccine, or a pure DNA vaccine. Because vaccine X is not an attenuated-virus vaccine, it must be a pure DNA vaccine if it is not a dead-virus vaccine.",
      "Every vaccine is either a dead-virus vaccine, an attenuated-virus vaccine, or a pure DNA vaccine. Thus, if vaccine X is not a dead- or attenuated-virus vaccine, it must be a pure DNA vaccine.",
      "Every commonly used vaccine is either a dead-virus vaccine, an attenuated-virus vaccine, or a pure DNA vaccine. Vaccine X is not a dead- or attenuated-virus vaccine. Ttherefore, if it is a commonly used vaccine, it must be a pure DNA vaccine."
    ],
    "raw_logic_programs": [
      "# Declarations\nqualities = EnumSort([creativity, self_awareness, ability_to_learn])\ncomputers = EnumSort([AR3000])\npossesses = Function([computers, qualities] -> [bool])\nintelligent = Function([computers] -> [bool])\n\n# Constraints\nForAll([c:computers], Implies(intelligent(c), Or(possesses(c, creativity), possesses(c, self_awareness), possesses(c, ability_to_learn)))) ::: For a computer to be intelligent, it must possess at least one of three qualities: creativity, self-awareness, or the ability to learn from its mistakes\nAnd(Not(possesses(AR3000, creativity)), Not(possesses(AR3000, self_awareness))) ::: The AR3000 is not creative or self-aware\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its reasoning to the argument above?\nis_similar(ForAll([v:vaccines], Implies(Or(possesses(v, dead_virus), possesses(v, attenuated_virus), possesses(v, pure_DNA)), Or(possesses(v, dead_virus), possesses(v, attenuated_virus), possesses(v, pure_DNA))))) ::: (A)\nis_similar(ForAll([v:vaccines], Implies(Or(possesses(v, dead_virus), possesses(v, attenuated_virus), possesses(v, pure_DNA)), Or(possesses(v, dead_virus), possesses(v, pure_DNA))))) ::: (B)\nis_similar(ForAll([v:vaccines], Implies(Or(possesses(v, dead_virus), possesses(v, attenuated_virus), possesses(v, pure_DNA)), Or(possesses(v, pure_DNA))))) ::: (C)\nis_similar(ForAll([v:vaccines], Implies(Or(possesses(v, dead_virus), possesses(v, attenuated_virus), possesses(v, pure_DNA)), Or(possesses(v, pure_DNA))))) ::: (D)"
    ]
  },
  {
    "id": "test_706",
    "context": "Consumer advocate: Under the current absence of government standards for food product labeling, manufacturers are misleading or deceiving consumers by their product labeling. For example, a certain brand of juice is labeled \"fresh orange juice, \" yet the product is made from water, concentrate, and flavor enhancers. Since \"fresh\" as applied to food products is commonly understood to mean pure and unprocessed, labeling that orange juice \"fresh\" is unquestionably deceptive. Manufacturer: Using words somewhat differently than they are commonly used is not deceptive. After all, \"fresh\" can also mean never frozen. We cannot be faulted for failing to comply with standards that have not been officially formulated. When the government sets clear standards pertaining to product labeling, we will certainly comply with them.",
    "question": "On the basis of their statements above, the consumer advocate and the manufacturer are committed to disagreeing about the truth of which one of the following statements?",
    "options": [
      "Truthful labeling practices that reflect common standards of usage can be established by the government.",
      "Terms that apply to natural foods can be truthfully applied to packaged foods.",
      "In the absence of government standards, common understanding is the arbiter of deceptive labeling practices.",
      "The term \"fresh\" when it is applied to food products is commonly understood to mean pure and unprocessed."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([government_standards, terms_application, common_understanding, fresh_meaning])\ndisagrees = Function([statements] -> [bool])\n\n# Constraints\ndisagrees(government_standards) == False ::: The consumer advocate and the manufacturer do not explicitly disagree about the role of government in establishing standards.\ndisagrees(terms_application) == True ::: The consumer advocate and the manufacturer disagree about whether terms that apply to natural foods can be truthfully applied to packaged foods.\ndisagrees(common_understanding) == True ::: The consumer advocate believes common understanding is the arbiter of deceptive practices, while the manufacturer implies otherwise.\ndisagrees(fresh_meaning) == True ::: The consumer advocate and the manufacturer disagree about the common understanding of the term \"fresh.\"\n\n# Options\nQuestion ::: On the basis of their statements above, the consumer advocate and the manufacturer are committed to disagreeing about the truth of which one of the following statements?\nis_true(disagrees(government_standards)) ::: (A) Truthful labeling practices that reflect common standards of usage can be established by the government.\nis_true(disagrees(terms_application)) ::: (B) Terms that apply to natural foods can be truthfully applied to packaged foods.\nis_true(disagrees(common_understanding)) ::: (C) In the absence of government standards, common understanding is the arbiter of deceptive labeling practices.\nis_true(disagrees(fresh_meaning)) ::: (D) The term \"fresh\" when it is applied to food products is commonly understood to mean pure and unprocessed."
    ]
  },
  {
    "id": "test_707",
    "context": "Vague laws set vague limits on people' s freedom, which makes it impossible for them to know for certain whether their actions are legal. Thus, under vague laws people cannot feel secure.",
    "question": "The conclusion follows logically if which one of the following is assumed?",
    "options": [
      "If people know for certain whether their actions are legal, they can feel secure.",
      "If people do not know for certain whether their actions are legal, then they might not feel secure.",
      "Only people who feel secure can know for certain whether their actions are legal.",
      "People can feel secure only if they know for certain whether their actions are legal."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nactions = EnumSort([action])\nlegal = Function([actions] -> [bool])\nsecure = Function([people] -> [bool])\nknow_for_certain = Function([people, actions] -> [bool])\n\n# Constraints\nForAll([a:actions], Not(know_for_certain(person, a)) == Not(legal(a))) ::: Vague laws set vague limits on people's freedom, which makes it impossible for them to know for certain whether their actions are legal\n\n# Options\nQuestion ::: The conclusion follows logically if which one of the following is assumed?\nImplies(ForAll([a:actions], know_for_certain(person, a)), secure(person)) ::: (A) If people know for certain whether their actions are legal, they can feel secure.\nImplies(Not(ForAll([a:actions], know_for_certain(person, a))), Not(secure(person))) ::: (B) If people do not know for certain whether their actions are legal, then they might not feel secure.\nImplies(secure(person), ForAll([a:actions], know_for_certain(person, a))) ::: (C) Only people who feel secure can know for certain whether their actions are legal.\nImplies(secure(person), ForAll([a:actions], know_for_certain(person, a))) ::: (D) People can feel secure only if they know for certain whether their actions are legal."
    ]
  },
  {
    "id": "test_708",
    "context": "If people refrained from being impolite to one another the condition of society would be greatly improved. But society would not be better off if the government enacted laws requiring people to be polite to each other. Enforcing such laws would create even more problems than does impoliteness.",
    "question": "Which one of the following most accurately describes the role played in the argument by the claim that society would not be better off if the government enacted laws requiring people to be polite to each other?",
    "options": [
      "It is the conclusion drawn by the argument as a whole.",
      "It describes a phenomenon that the conclusion of the argument purports to explain.",
      "It is cited as an illustration of a generalization that serves as the main premise of the argument.",
      "It is cited as evidence for the assertion used to support the argument's overall conclusion."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([refraining_impoliteness_improves_society, laws_require_politeness_not_better, enforcing_laws_creates_problems])\nroles = EnumSort([conclusion, phenomenon_explained, illustration_of_generalization, evidence_for_support])\n\n# Constraints\nimplies(refraining_impoliteness_improves_society, laws_require_politeness_not_better) ::: If people refrained from being impolite to one another the condition of society would be greatly improved.\nimplies(laws_require_politeness_not_better, enforcing_laws_creates_problems) ::: Enforcing such laws would create even more problems than does impoliteness.\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the argument by the claim that society would not be better off if the government enacted laws requiring people to be polite to each other?\nis_role(laws_require_politeness_not_better, conclusion) ::: (It is the conclusion drawn by the argument as a whole.\nis_role(laws_require_politeness_not_better, phenomenon_explained) ::: (It describes a phenomenon that the conclusion of the argument purports to explain.\nis_role(laws_require_politeness_not_better, illustration_of_generalization) ::: (It is cited as an illustration of a generalization that serves as the main premise of the argument.\nis_role(laws_require_politeness_not_better, evidence_for_support) ::: (It is cited as evidence for the assertion used to support the argument's overall conclusion."
    ]
  },
  {
    "id": "test_709",
    "context": "Nightbird is an unsigned painting that some attribute to the celebrated artist Larocque. Experts agree that it was painted in a style indistinguishable from that of Larocque and that if it was not painted by Larocque, it was undoubtedly painted by one of his students. A recent analysis showed that the painting contains orpiment, a pigment never yet found in a work attributed to Larocque. Ttherefore, the painting must have been done by one of Larocque' s students.",
    "question": "Which one of the following, if true, most weakens the argument?",
    "options": [
      "Few of Larocque's students ever used painting techniques that differed from Larocque's.",
      "The use of orpiment became more popular in the years after Larocque's death.",
      "No painting currently recognized as the work of one of Larocque's students contains orpiment.",
      "None of Larocque's students is considered to be an important artist."
    ],
    "raw_logic_programs": [
      "# Declarations\nartists = EnumSort([Larocque, students])\npaintings = EnumSort([Nightbird])\npigments = EnumSort([orpiment])\nattributed = Function([paintings] -> [artists])\ncontains = Function([paintings, pigments] -> [bool])\n\n# Constraints\nForAll([p:paintings], Or(attributed(p) == Larocque, attributed(p) == students)) ::: Nightbird is either painted by Larocque or one of his students\nForAll([p:paintings], Implies(attributed(p) == Larocque, Not(contains(p, orpiment)))) ::: Orpiment is never found in a work attributed to Larocque\ncontains(Nightbird, orpiment) ::: Nightbird contains orpiment\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the argument?\nis_weakening(ForAll([p:paintings], Implies(attributed(p) == students, Not(contains(p, orpiment))))) ::: (C) No painting currently recognized as the work of one of Larocque's students contains orpiment"
    ]
  },
  {
    "id": "test_710",
    "context": "Most people who become migraine sufferers as adults were prone to bouts of depression as children. Hence it stands to reason that a child who is prone to bouts of depression is likely to suffer migraines during adulthood.",
    "question": "The flawed pattern of reasoning in the argument above is most parallel to that in which one of the following?",
    "options": [
      "Most good-tempered dogs were vaccinated against rabies as puppies. Ttherefore, a puppy that is vaccinated against rabies is likely to become a good-tempered dog.",
      "Most of the pets taken to veterinarians are dogs. Ttherefore, it stands to reason that dogs are more prone to illness or accident than are other pets.",
      "Most puppies are taken from their mothers at the age of eight weeks. Thus, a puppy that is older than eight weeks is likely to have been taken from its mother.",
      "Most vicious dogs were ill-treated when young. Hence it can be concluded that a pet owner whose dog is vicious is likely to have treated the dog badly when it was young."
    ],
    "raw_logic_programs": [
      "# Declarations\nsubjects = EnumSort([migraine_sufferers, good_tempered_dogs, pets_at_vets, puppies, vicious_dogs])\nconditions = EnumSort([prone_to_depression, vaccinated_against_rabies, prone_to_illness, taken_from_mother, ill_treated])\noutcomes = EnumSort([suffer_migraines, become_good_tempered, more_prone_to_illness, taken_from_mother, treated_badly])\nlikely = Function([subjects, conditions] -> [outcomes])\n\n# Constraints\nlikely(migraine_sufferers, prone_to_depression) == suffer_migraines ::: Most people who become migraine sufferers as adults were prone to bouts of depression as children\nlikely(good_tempered_dogs, vaccinated_against_rabies) == become_good_tempered ::: Most good-tempered dogs were vaccinated against rabies as puppies\nlikely(pets_at_vets, prone_to_illness) == more_prone_to_illness ::: Most of the pets taken to veterinarians are dogs\nlikely(puppies, taken_from_mother) == taken_from_mother ::: Most puppies are taken from their mothers at the age of eight weeks\nlikely(vicious_dogs, ill_treated) == treated_badly ::: Most vicious dogs were ill-treated when young\n\n# Options\nQuestion ::: The flawed pattern of reasoning in the argument above is most parallel to that in which one of the following?\nis_parallel(likely(good_tempered_dogs, vaccinated_against_rabies) == become_good_tempered) ::: (A)\nis_parallel(likely(pets_at_vets, prone_to_illness) == more_prone_to_illness) ::: (B)\nis_parallel(likely(puppies, taken_from_mother) == taken_from_mother) ::: (C)\nis_parallel(likely(vicious_dogs, ill_treated) == treated_badly) ::: (D)"
    ]
  },
  {
    "id": "test_711",
    "context": "Science writer: Lemaitre argued that the universe began with the explosion of a \"primeval atom, \" a singular point of infinite gravity in space and time. If this is correct, our current observations should reveal galaxies accelerating away from one another. This is precisely what we observe. Yet because there is another theory -- the oscillating universe theory -- that makes exactly this same prediction, Lemaitre' s theory must be considered inadequate.",
    "question": "Which one of the following most accurately describes a flaw in the science writer's reasoning?",
    "options": [
      "The conclusion is derived partly from assertions attributed to a purported expert whose credibility is not established.",
      "The science writer presumes, without providing justification, that there are only two possible explanations for the phenomena in question.",
      "The science writer fails to see that one theory's correctly predicting observed data cannot itself constitute evidence against an alternative theory that also does this.",
      "The conclusion is based on a shift in meaning of a key term from one part of the argument to another part."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([Lemaitre, Oscillating])\nobservations = EnumSort([galaxies_accelerating])\npredictions = Function([theories] -> [observations])\nevidence = Function([theories] -> [bool])\n\n# Constraints\npredictions(Lemaitre) == galaxies_accelerating ::: Lemaitre's theory predicts galaxies accelerating away from one another\npredictions(Oscillating) == galaxies_accelerating ::: Oscillating universe theory also predicts galaxies accelerating away from one another\nevidence(Lemaitre) == True ::: Our current observations support Lemaitre's theory\nevidence(Oscillating) == True ::: Our current observations also support the oscillating universe theory\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the science writer's reasoning?\nis_flaw(The conclusion is derived partly from assertions attributed to a purported expert whose credibility is not established) ::: (A)\nis_flaw(The science writer presumes, without providing justification, that there are only two possible explanations for the phenomena in question) ::: (B)\nis_flaw(The science writer fails to see that one theory's correctly predicting observed data cannot itself constitute evidence against an alternative theory that also does this) ::: (C)\nis_flaw(The conclusion is based on a shift in meaning of a key term from one part of the argument to another part) ::: (D)"
    ]
  },
  {
    "id": "test_712",
    "context": "Warm air tends to be humid, and as humidity of air increases, the amount of rainfall also increases. So, the fact that rainfall totals for most continents have been increasing over the past five years is strong evidence that the air temperature is increasing as well.",
    "question": "Which one of the following has a flawed pattern of reasoning most similar to the flawed pattern of reasoning in the argument above?",
    "options": [
      "Food that is fresh tends to be nutritious, and the more nutritious one's diet the healthier one is. People today are generally healthier than people were a century ago. So it is likely that people today eat food that is fresher than the food people ate a century ago.",
      "Your refusal to make public your personal finances indicates some sort of financial impropriety on your part, for people who do not reveal their personal finances generally are hiding some sort of financial impropriety.",
      "People tend to watch only those television programs that they enjoy and appreciate. Since there are more television viewers today than there were ten years ago, it must be the case that viewers today are satisfied with at least some of the programs shown on television.",
      "People tend not to want to travel on mass transit when they are carrying bags and packages, and the more bags and packages one carries, the more awkward travel on mass transit becomes. Ttherefore, people who carry bags and packages tend to use automobiles rather than mass transit."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([original, choice1, choice2, choice3, choice4])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nreasoning(original) == (warm_air -> humid) & (humid -> rainfall) & (rainfall -> air_temperature) ::: Warm air tends to be humid, and as humidity of air increases, the amount of rainfall also increases. So, the fact that rainfall totals for most continents have been increasing over the past five years is strong evidence that the air temperature is increasing as well.\n\nreasoning(choice1) == (fresh_food -> nutritious) & (nutritious -> healthy) & (healthy -> fresh_food) ::: Food that is fresh tends to be nutritious, and the more nutritious one's diet the healthier one is. People today are generally healthier than people were a century ago. So it is likely that people today eat food that is fresher than the food people ate a century ago.\n\nreasoning(choice2) == (not_public_finances -> impropriety) & (impropriety -> not_public_finances) ::: Your refusal to make public your personal finances indicates some sort of financial impropriety on your part, for people who do not reveal their personal finances generally are hiding some sort of financial impropriety.\n\nreasoning(choice3) == (enjoy_programs -> watch_programs) & (watch_programs -> satisfied_programs) ::: People tend to watch only those television programs that they enjoy and appreciate. Since there are more television viewers today than there were ten years ago, it must be the case that viewers today are satisfied with at least some of the programs shown on television.\n\nreasoning(choice4) == (carry_bags -> not_mass_transit) & (not_mass_transit -> use_automobiles) ::: People tend not to want to travel on mass transit when they are carrying bags and packages, and the more bags and packages one carries, the more awkward travel on mass transit becomes. Therefore, people who carry bags and packages tend to use automobiles rather than mass transit.\n\n# Options\nQuestion ::: Which one of the following has a flawed pattern of reasoning most similar to the flawed pattern of reasoning in the argument above?\nis_similar_flawed_pattern(reasoning(original), reasoning(choice1)) ::: (A)\nis_similar_flawed_pattern(reasoning(original), reasoning(choice2)) ::: (B)\nis_similar_flawed_pattern(reasoning(original), reasoning(choice3)) ::: (C)\nis_similar_flawed_pattern(reasoning(original), reasoning(choice4)) ::: (D)"
    ]
  },
  {
    "id": "test_713",
    "context": "A recent study revealed that people who follow precisely all the standard recommendations for avoidance of infection by pathogenic microorganisms in meat-based foods are more likely to contract diseases caused by these pathogens than are those who deviate considerably from the standard recommendations. Hence, the standard recommendations for avoidance of infection by these pathogens must be counterproductive.",
    "question": "The argument is most vulnerable to criticism on the grounds that it fails to take into account which one of the following possibilities?",
    "options": [
      "Preventing infection by pathogenic microorganisms is simply a matter of following the appropriate set of recommendations.",
      "Many people do follow precisely all the standard recommendations for avoidance of infection by pathogenic microorganisms in meat-based foods.",
      "Not all diseases caused by microorganisms have readily recognizable symptoms.",
      "Those most concerned with avoiding pathogenic infections from meat-based foods are those most susceptible to them."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([follows_recommendations, deviates_recommendations])\noutcomes = EnumSort([more_likely, less_likely])\nconcerned = Function([people] -> [bool])\nsusceptible = Function([people] -> [bool])\n\n# Constraints\nfollows_recommendations(outcomes) == more_likely ::: People who follow all recommendations are more likely to contract diseases\ndeviates_recommendations(outcomes) == less_likely ::: People who deviate are less likely to contract diseases\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it fails to take into account which one of the following possibilities?\nis_criticism(Implies(concerned(follows_recommendations), susceptible(follows_recommendations))) ::: (Those most concerned with avoiding pathogenic infections from meat-based foods are those most susceptible to them.)"
    ]
  },
  {
    "id": "test_714",
    "context": "A group of citizens opposes developing a nearby abandoned railroad grade into a hiking trail. Its members argue that trail users will likely litter the area with food wrappers and other debris. But this objection is groundless. Most trail users will be dedicated hikers who have great concern for the environment. Consequently, development of the trail should proceed.",
    "question": "The argument above is flawed in that it",
    "options": [
      "illicitly infers that because each member of a set has a certain property that set itself has the property",
      "bases its conclusion mainly on a claim that an opposing argument is weak",
      "illicitly infers that an attribute of a few users of the proposed trail will characterize a majority of users of the trail",
      "attacks the citizens in the group rather than their objection to developing the trail"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([citizens, trail_users])\nproperties = EnumSort([litter, dedicated_hikers, environmental_concern])\nconclusion = Function([arguments] -> [bool])\n\n# Constraints\nForAll([a:arguments], conclusion(a) == False) ::: The argument is flawed\n\n# Options\nQuestion ::: The argument above is flawed in that it\nis_flawed(conclusion(citizens) == illicitly_infers_set_property) ::: (A) illicitly infers that because each member of a set has a certain property that set itself has the property\nis_flawed(conclusion(citizens) == bases_conclusion_on_weak_claim) ::: (B) bases its conclusion mainly on a claim that an opposing argument is weak\nis_flawed(conclusion(trail_users) == illicitly_infers_attribute_majority) ::: (C) illicitly infers that an attribute of a few users of the proposed trail will characterize a majority of users of the trail\nis_flawed(conclusion(citizens) == attacks_group_not_objection) ::: (D) attacks the citizens in the group rather than their objection to developing the trail"
    ]
  },
  {
    "id": "test_715",
    "context": "Lake salmon spawn only in the waters in which they were hatched. After being born, they leave the waters in which they were hatched and head out into the open water. After 10 years, they come back to spawn where they were born. It has been hypothesized that salmon can smell their birth environment, and it is this smell that stimulates the salmon to return to their birthplace.",
    "question": "Which only of the following, if true, would cast the most serious doubt on the hypothesis in the passage?",
    "options": [
      "Salmon do not survive after they have made their return trip to their birth environment.",
      "Waters in which salmon spawn tend to be very cold.",
      "Salmon have a very weak sense of smell and generally cannot smell any scent that is more than 10 feet away from them.",
      "Unlike other fish, salmon have a well- developed sense of sight."
    ],
    "raw_logic_programs": [
      "# Declarations\nhypothesis = Function([bool])\nevidence = EnumSort([e1, e2, e3, e4])\n\n# Constraints\nhypothesis == True ::: It has been hypothesized that salmon can smell their birth environment, and it is this smell that stimulates the salmon to return to their birthplace.\n\n# Options\nQuestion ::: Which only of the following, if true, would cast the most serious doubt on the hypothesis in the passage?\nis_doubtful(Implies(evidence == e1, Not(hypothesis))) ::: (Salmon do not survive after they have made their return trip to their birth environment.\nis_doubtful(Implies(evidence == e2, Not(hypothesis))) ::: (Waters in which salmon spawn tend to be very cold.\nis_doubtful(Implies(evidence == e3, Not(hypothesis))) ::: (Salmon have a very weak sense of smell and generally cannot smell any scent that is more than 10 feet away from them.\nis_doubtful(Implies(evidence == e4, Not(hypothesis))) ::: (Unlike other fish, salmon have a well-developed sense of sight."
    ]
  },
  {
    "id": "test_716",
    "context": "The economy is doing badly. First, the real estate slump has been with us for some time. Second, car sales are at their lowest in years. Of course, had either one or the other phenomenon failed to occur, this would be consistent with the economy as a whole being healthy. But, their occurrence together makes it quite probable that my conclusion is correct.",
    "question": "Which one of the following inferences is most strongly supported by the information above?",
    "options": [
      "If the economy is doing badly, then either the real estate market or the car sales market is not healthy.",
      "If car sales are at their lowest in years, then it is likely that the economy is doing badly.",
      "The bad condition of the economy implies that both the real estate and the car sales markets are doing badly.",
      "If the economy is in a healthy state, then it is unlikely that the real estate and car sales markets are both in a slump."
    ],
    "raw_logic_programs": [
      "# Declarations\nphenomena = EnumSort([real_estate_slump, car_sales_low])\neconomy_state = EnumSort([healthy, badly])\noccurs = Function([phenomena] -> [bool])\neconomy = Function([] -> [economy_state])\n\n# Constraints\nAnd(occurs(real_estate_slump), occurs(car_sales_low)) ::: Both the real estate slump and car sales being at their lowest in years are occurring\nImplies(Not(occurs(real_estate_slump)), economy() == healthy) ::: If the real estate slump did not occur, the economy could be healthy\nImplies(Not(occurs(car_sales_low)), economy() == healthy) ::: If car sales were not at their lowest, the economy could be healthy\nImplies(And(occurs(real_estate_slump), occurs(car_sales_low)), economy() == badly) ::: Their occurrence together makes it probable that the economy is doing badly\n\n# Options\nQuestion ::: Which one of the following inferences is most strongly supported by the information above?\nis_supported(Implies(economy() == badly, Or(Not(occurs(real_estate_slump)), Not(occurs(car_sales_low))))) ::: (If the economy is doing badly, then either the real estate market or the car sales market is not healthy.)\nis_supported(Implies(occurs(car_sales_low), economy() == badly)) ::: (If car sales are at their lowest in years, then it is likely that the economy is doing badly.)\nis_supported(Implies(economy() == badly, And(occurs(real_estate_slump), occurs(car_sales_low)))) ::: (The bad condition of the economy implies that both the real estate and the car sales markets are doing badly.)\nis_supported(Implies(economy() == healthy, Not(And(occurs(real_estate_slump), occurs(car_sales_low))))) ::: (If the economy is in a healthy state, then it is unlikely that the real estate and car sales markets are both in a slump.)"
    ]
  },
  {
    "id": "test_717",
    "context": "The total market value of real estate in Altonville has steadily declined over the past four years. This decline has meant that the overall figure on which the city' s property tax is based-the assessed value of that real estate-has also declined. The percentage of assessed value that was paid as property taxes to the city, however, did not change from year to year during this period.",
    "question": "The information above most strongly supports which of the following?",
    "options": [
      "The amount of revenue that Altonville collected from property taxes was lower last year than it was four years ago.",
      "The percentage of Altonville's yearly revenue that comes from money collected in property taxes did not change over the past four years.",
      "Altonville will soon require property owners to pay a higher percentage of the assessed value of their property as property tax.",
      "During the past four years, Altonville officials increased tax rates on other sources of revenue such as retail sales and business profits."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([year1, year2, year3, year4])\nvalues = Function([years] -> [real])\ntax_rate = Function([years] -> [real])\ntax_revenue = Function([years] -> [real])\n\n# Constraints\nForAll([y1, y2:years], Implies(y1 < y2, values(y1) > values(y2))) ::: The total market value of real estate in Altonville has steadily declined over the past four years\nForAll([y:years], tax_rate(y) == tax_rate(year1)) ::: The percentage of assessed value that was paid as property taxes to the city did not change from year to year\n\n# Options\nQuestion ::: The information above most strongly supports which of the following?\nis_supported(tax_revenue(year4) < tax_revenue(year1)) ::: (A) The amount of revenue that Altonville collected from property taxes was lower last year than it was four years ago.\nis_supported(ForAll([y:years], tax_revenue(y) / total_revenue(y) == tax_revenue(year1) / total_revenue(year1))) ::: (B) The percentage of Altonville's yearly revenue that comes from money collected in property taxes did not change over the past four years.\nis_supported(Exists([y:years], tax_rate(y) > tax_rate(year1))) ::: (C) Altonville will soon require property owners to pay a higher percentage of the assessed value of their property as property tax.\nis_supported(Exists([y:years], other_tax_rate(y) > other_tax_rate(year1))) ::: (D) During the past four years, Altonville officials increased tax rates on other sources of revenue such as retail sales and business profits."
    ]
  },
  {
    "id": "test_718",
    "context": "Knowledge of an ancient language is essential for reading original ancient documents. Most ancient historical documents, however, have been translated into modern languages, so scholars of ancient history can read them for their research without learning ancient languages. Ttherefore, aspirants to careers as ancient-history scholars no longer need to take the time to learn ancient languages.",
    "question": "The argument is vulnerable to criticism on which one of the following grounds?",
    "options": [
      "Some of the evidence presented in support of the conclusion is inconsistent with other evidence provided.",
      "The judgment of experts is applied to a matter in which their expertise is irrelevant.",
      "The conclusion is no more than a restatement of the evidence provided as support of that conclusion.",
      "It concludes that something is never necessary on the grounds that it is not always necessary."
    ],
    "raw_logic_programs": [
      "# Declarations\nevidence = EnumSort([essential_for_reading, translated_documents, scholars_can_read, no_need_to_learn])\nconclusion = EnumSort([no_need_to_learn_ancient_languages])\ncriticism = EnumSort([inconsistent_evidence, irrelevant_expertise, restatement, never_necessary])\n\n# Constraints\nForAll([e:evidence], Exists([c:conclusion], supports(e, c))) ::: Evidence supports the conclusion\nExists([e1:evidence, e2:evidence], And(e1 != e2, inconsistent(e1, e2))) ::: Some of the evidence presented in support of the conclusion is inconsistent with other evidence provided\nForAll([c:conclusion], Not(irrelevant_expertise(c))) ::: The judgment of experts is applied to a matter in which their expertise is irrelevant\nForAll([c:conclusion], Not(restatement(c))) ::: The conclusion is no more than a restatement of the evidence provided as support of that conclusion\nExists([c:conclusion], never_necessary(c)) ::: It concludes that something is never necessary on the grounds that it is not always necessary\n\n# Options\nQuestion ::: The argument is vulnerable to criticism on which one of the following grounds?\nis_criticism(inconsistent_evidence) ::: (A)\nis_criticism(irrelevant_expertise) ::: (B)\nis_criticism(restatement) ::: (C)\nis_criticism(never_necessary) ::: (D)"
    ]
  },
  {
    "id": "test_719",
    "context": "Art historian: More than any other genre of representational painting, still-life painting lends itself naturally to art whose goal is the artist' s self-expression, rather than merely the reflection of a preexisting external reality. This is because in still-life painting, the artist invariably chooses, modifies, and arranges the objects to be painted. Thus, the artist has considerably more control over the composition and subject of a still-life painting than over those of a landscape painting or portrait, for example.",
    "question": "Which one of the following is most strongly supported by the art historian's statements?",
    "options": [
      "When painting a portrait, artists rarely attempt to express themselves through the choice, modification, or arrangement of the background elements against which the subject of the portrait is painted.",
      "The only way in which artists control the composition and subject of a painting is by choosing, modifying, and arranging the objects to be represented in that painting.",
      "In genres of representational painting other than still-life painting, the artist does not always choose, modify, and arrange the objects to be painted.",
      "Landscape painting and portraiture are the artistic genres that lend themselves most naturally to the mere reflection of a preexisting external reality."
    ],
    "raw_logic_programs": [
      "# Declarations\ngenres = EnumSort([still_life, landscape, portrait])\nattributes = EnumSort([self_expression, reflection_of_reality])\ncontrol = Function([genres] -> [bool])\ngoal = Function([genres] -> [attributes])\n\n# Constraints\ngoal(still_life) == self_expression ::: Still-life painting lends itself naturally to art whose goal is the artist's self-expression\ngoal(landscape) == reflection_of_reality ::: Landscape painting is more about reflecting a preexisting external reality\ngoal(portrait) == reflection_of_reality ::: Portrait painting is more about reflecting a preexisting external reality\ncontrol(still_life) == True ::: In still-life painting, the artist chooses, modifies, and arranges the objects\ncontrol(landscape) == False ::: Less control over composition in landscape painting\ncontrol(portrait) == False ::: Less control over composition in portrait painting\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the art historian's statements?\nis_supported(control(portrait) == False) ::: (A) When painting a portrait, artists rarely attempt to express themselves through the choice, modification, or arrangement of the background elements against which the subject of the portrait is painted.\nis_supported(ForAll([g:genres], control(g) == False)) ::: (B) The only way in which artists control the composition and subject of a painting is by choosing, modifying, and arranging the objects to be represented in that painting.\nis_supported(Exists([g:genres], And(g != still_life, control(g) == False))) ::: (C) In genres of representational painting other than still-life painting, the artist does not always choose, modify, and arrange the objects to be painted.\nis_supported(And(goal(landscape) == reflection_of_reality, goal(portrait) == reflection_of_reality)) ::: (D) Landscape painting and portraiture are the artistic genres that lend themselves most naturally to the mere reflection of a preexisting external reality."
    ]
  },
  {
    "id": "test_720",
    "context": "Helena: Extroversion, or sociability, is not biologically determined. Children whose biological parents are introverted, when adopted by extroverts, tend to be more sociable than children of introverted parents who are not adopted. Jay: Your conclusion does not follow. Some of these children adopted by extroverts remain introverted no matter how young they are when adopted.",
    "question": "Jay's response suggests that he interpreted Helena's remarks to mean that",
    "options": [
      "biological factors play only a partial role in a child being extroverted",
      "biological factors do not play any role in a child being extroverted",
      "most but not all children whose biological parents are introverted become extroverted when adopted by extroverts",
      "children whose biological parents are introverted, when adopted by extroverts, tend not to be more sociable than children of introverted parents who are not adopted"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Helena, Jay])\ninterpretations = EnumSort([partial_role, no_role, most_but_not_all, tend_not_to_be_more_sociable])\ninterprets = Function([statements] -> [interpretations])\n\n# Constraints\ninterprets(Helena) == no_role ::: Helena's statement suggests that extroversion is not biologically determined\n\n# Options\nQuestion ::: Jay's response suggests that he interpreted Helena's remarks to mean that\nis_valid(interprets(Jay) == partial_role) ::: (A) biological factors play only a partial role in a child being extroverted\nis_valid(interprets(Jay) == no_role) ::: (B) biological factors do not play any role in a child being extroverted\nis_valid(interprets(Jay) == most_but_not_all) ::: (C) most but not all children whose biological parents are introverted become extroverted when adopted by extroverts\nis_valid(interprets(Jay) == tend_not_to_be_more_sociable) ::: (D) children whose biological parents are introverted, when adopted by extroverts, tend not to be more sociable than children of introverted parents who are not adopted"
    ]
  },
  {
    "id": "test_721",
    "context": "Software reviewer: Dictation software allows a computer to produce a written version of sentences that are spoken to it. Although dictation software has been promoted as a labor-saving invention, it fails to live up to its billing. The laborious part of writing is in the thinking and the editing, not in the typing. And proofreading the software' s error-filled output generally squanders any time saved in typing.",
    "question": "Which one of the following most accurately describes the role played in the software reviewer's argument by the claim that dictation software fails to live up to its billing?",
    "options": [
      "It is a premise offered in support of the argument's conclusion.",
      "It is the argument's only conclusion.",
      "It is the argument's main conclusion but not its only conclusion.",
      "It is a premise offered as direct support for an intermediate conclusion of the argument."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([dictation_software_fails, laborious_part_of_writing, proofreading_squanders_time])\nroles = EnumSort([premise, main_conclusion, intermediate_conclusion, only_conclusion])\nrole_of = Function([statements] -> [roles])\n\n# Constraints\nrole_of(dictation_software_fails) == main_conclusion ::: The claim that dictation software fails to live up to its billing is the main conclusion of the argument\nrole_of(laborious_part_of_writing) == premise ::: The claim about the laborious part of writing is a premise\nrole_of(proofreading_squanders_time) == premise ::: The claim about proofreading squandering time is a premise\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the software reviewer's argument by the claim that dictation software fails to live up to its billing?\nis_accurate(role_of(dictation_software_fails) == premise) ::: (It is a premise offered in support of the argument's conclusion.\nis_accurate(role_of(dictation_software_fails) == only_conclusion) ::: (It is the argument's only conclusion.\nis_accurate(role_of(dictation_software_fails) == main_conclusion) ::: (It is the argument's main conclusion but not its only conclusion.\nis_accurate(role_of(dictation_software_fails) == intermediate_conclusion) ::: (It is a premise offered as direct support for an intermediate conclusion of the argument."
    ]
  },
  {
    "id": "test_722",
    "context": "Three million dollars was recently stolen from the City Treasurer' s Office, and, from what we know so far, we can conclude that some members of the mayor' s staff are suspects. The suspects are all former employees of the City Treasurer' s Office, and the mayor' s staff includes former employees of that office.",
    "question": "The flawed nature of the argument above can most effectively be demonstrated by noting that, by parallel reasoning, we could conclude that",
    "options": [
      "some cabins are skyscrapers since all skyscrapers are buildings and some buildings are cabins",
      "some tables are chairs since all tables are furniture and all chairs are furniture",
      "some painters are sculptors since some sculptors are famous and some painters are famous",
      "all animals are dogs since some dogs are pets and some animals are pets"
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([mayor_staff, city_treasurer_office, suspects, former_employees])\nrelationships = Function([entities, entities] -> [bool])\n\n# Constraints\nrelationships(suspects, former_employees) ::: The suspects are all former employees of the City Treasurer's Office\nrelationships(mayor_staff, former_employees) ::: The mayor's staff includes former employees of that office\n\n# Options\nQuestion ::: The flawed nature of the argument above can most effectively be demonstrated by noting that, by parallel reasoning, we could conclude that\nis_flawed(relationships(cabins, skyscrapers)) ::: (some cabins are skyscrapers since all skyscrapers are buildings and some buildings are cabins)\nis_flawed(relationships(tables, chairs)) ::: (some tables are chairs since all tables are furniture and all chairs are furniture)\nis_flawed(relationships(painters, sculptors)) ::: (some painters are sculptors since some sculptors are famous and some painters are famous)\nis_flawed(relationships(animals, dogs)) ::: (all animals are dogs since some dogs are pets and some animals are pets)"
    ]
  },
  {
    "id": "test_723",
    "context": "Although several ancient cultures practiced mummification, mummies from ancient Egypt are generally more well-preserved than mummies of similar antiquity from other cultures. One possible explanation for this difference is that the mummification techniques or materials used by ancient Egyptians were better than those of other cultures. A second, more likely, explanation is that the extremely dry climate of ancient Egypt was largely responsible, given that dryness promotes the preservation of organic remains generally.",
    "question": "Which of the following provide the most support for the argument?",
    "options": [
      "Ancient mummies discovered in places other than Egypt have typically not been as well protected from the elements as ancient Egyptian mummies were.",
      "The materials used by ancient Egyptians for mummification were not used by any other ancient culture that practiced mummification.",
      "Bodies from ancient Egyptian tombs dating from before the practice of mummification began are almost as well preserved as ancient Egyptian mummies.",
      "No ancient people living in very damp areas practiced mummification."
    ],
    "raw_logic_programs": [
      "# Declarations\ncultures = EnumSort([Egyptian, Other])\nfactors = EnumSort([techniques, climate])\npreservation = Function([cultures] -> [bool])\nbetter_preservation = Function([factors] -> [bool])\n\n# Constraints\npreservation(Egyptian) == True ::: Mummies from ancient Egypt are generally more well-preserved\npreservation(Other) == False ::: Mummies from other cultures are not as well-preserved\nbetter_preservation(techniques) == False ::: The mummification techniques or materials used by ancient Egyptians were not necessarily better\nbetter_preservation(climate) == True ::: The dry climate of ancient Egypt was largely responsible for better preservation\n\n# Options\nQuestion ::: Which of the following provide the most support for the argument?\nis_supportive(preservation(Other) == False) ::: (Ancient mummies discovered in places other than Egypt have typically not been as well protected from the elements as ancient Egyptian mummies were.\nis_supportive(better_preservation(techniques) == False) ::: (The materials used by ancient Egyptians for mummification were not used by any other ancient culture that practiced mummification.\nis_supportive(preservation(Egyptian) == True) ::: (Bodies from ancient Egyptian tombs dating from before the practice of mummification began are almost as well preserved as ancient Egyptian mummies.\nis_supportive(better_preservation(climate) == True) ::: (No ancient people living in very damp areas practiced mummification."
    ]
  },
  {
    "id": "test_724",
    "context": "Union member: Some members of our labor union are calling for an immediate strike. But a strike would cut into our strike fund and would in addition lead to a steep fine, causing us to suffer a major financial loss. Ttherefore, we must not strike now.",
    "question": "The union member's argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "fails to consider that a strike might cause the union to suffer a financial loss even if no fine were imposed",
      "fails to establish that there will be a better opportunity to strike at a later time",
      "takes for granted that the most important factor in the labor union's bargaining position is the union's financial strength",
      "fails to consider that the benefits to be gained from a strike might outweigh the costs"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([strike_fund_loss, fine, financial_loss, no_strike])\nfactors = EnumSort([financial_strength, bargaining_position, opportunity_to_strike, benefits_vs_costs])\ncriticisms = EnumSort([fails_to_consider_loss_without_fine, fails_to_establish_better_opportunity, assumes_financial_strength_most_important, fails_to_consider_benefits_vs_costs])\n\n# Constraints\nimplies(strike_fund_loss, financial_loss) ::: A strike would cut into our strike fund, causing a financial loss\nimplies(fine, financial_loss) ::: A strike would lead to a steep fine, causing a financial loss\nimplies(financial_loss, no_strike) ::: A major financial loss means we must not strike now\n\n# Options\nQuestion ::: The union member's argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(fails_to_consider_loss_without_fine) ::: (fails to consider that a strike might cause the union to suffer a financial loss even if no fine were imposed)\nis_vulnerable(fails_to_establish_better_opportunity) ::: (fails to establish that there will be a better opportunity to strike at a later time)\nis_vulnerable(assumes_financial_strength_most_important) ::: (takes for granted that the most important factor in the labor union's bargaining position is the union's financial strength)\nis_vulnerable(fails_to_consider_benefits_vs_costs) ::: (fails to consider that the benefits to be gained from a strike might outweigh the costs)"
    ]
  },
  {
    "id": "test_725",
    "context": "That sales can be increased by the presence of sunlight within a store has been shown by the experience of the only Savefast department store with a large skylight. The skylight allows sunlight into half of the store, reducing the need for artificial light. The rest of the store uses only artificial light. Since the store opened two years ago, the departments on the sunlit side have had substantially higher sales than the other.",
    "question": "Which of the following, if true, most strengthens the argument?",
    "options": [
      "The departments in the part of the store under the skylight are the departments that generally have the highest sales in other stores in the Savefast chain.",
      "Many customers purchase items from departments in both parts of the store on a single shopping trip.",
      "When the store is open at night, the departments in the part of the store under the skylight have salves that are no higher than those of other departments.",
      "Besides the skylight, there are several significant architectural differences between the two parts of the store."
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([sunlit, artificial])\nsales = Function([departments] -> [int])\nskylight_effect = Function([bool] -> [bool])\n\n# Constraints\nsales(sunlit) > sales(artificial) ::: The departments on the sunlit side have had substantially higher sales than the other.\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the argument?\nis_strongest(skylight_effect(True) == (sales(sunlit) > sales(artificial))) ::: (The departments in the part of the store under the skylight are the departments that generally have the highest sales in other stores in the Savefast chain.\nis_strongest(skylight_effect(True) == (sales(sunlit) > sales(artificial))) ::: (Many customers purchase items from departments in both parts of the store on a single shopping trip.\nis_strongest(skylight_effect(True) == (sales(sunlit) > sales(artificial))) ::: (When the store is open at night, the departments in the part of the store under the skylight have sales that are no higher than those of other departments.\nis_strongest(skylight_effect(True) == (sales(sunlit) > sales(artificial))) ::: (Besides the skylight, there are several significant architectural differences between the two parts of the store."
    ]
  },
  {
    "id": "test_726",
    "context": "Only if the electorate is moral and intelligent will a democracy function well.",
    "question": "Which one of the following can be logically inferred from the claim above?",
    "options": [
      "It cannot, at the same time, be true that the electorate is moral and intelligent and that a democracy will not function well.",
      "If the electorate is not moral or not intelligent, then a democracy will not function well.",
      "If the electorate is moral and intelligent, then a democracy will function well.",
      "Either a democracy does not function well or else the electorate is not moral or not intelligent."
    ],
    "raw_logic_programs": [
      "# Declarations\nelectorate_moral = Bool('electorate_moral')\nelectorate_intelligent = Bool('electorate_intelligent')\ndemocracy_functions_well = Bool('democracy_functions_well')\n\n# Constraints\ndemocracy_functions_well == Implies(And(electorate_moral, electorate_intelligent), democracy_functions_well) ::: Only if the electorate is moral and intelligent will a democracy function well\n\n# Options\nQuestion ::: Which one of the following can be logically inferred from the claim above?\nis_valid(Not(And(electorate_moral, electorate_intelligent) and Not(democracy_functions_well))) ::: (A) It cannot, at the same time, be true that the electorate is moral and intelligent and that a democracy will not function well.\nis_valid(Implies(Not(electorate_moral) or Not(electorate_intelligent), Not(democracy_functions_well))) ::: (B) If the electorate is not moral or not intelligent, then a democracy will not function well.\nis_valid(Implies(And(electorate_moral, electorate_intelligent), democracy_functions_well)) ::: (C) If the electorate is moral and intelligent, then a democracy will function well.\nis_valid(Or(Not(democracy_functions_well), Not(electorate_moral) or Not(electorate_intelligent))) ::: (D) Either a democracy does not function well or else the electorate is not moral or not intelligent."
    ]
  },
  {
    "id": "test_727",
    "context": "If violations of any of a society' s explicit rules routinely go unpunished, then that society' s people will be left without moral guidance. Because people who lack moral guidance will act in many different ways, chaos results. Thus, a society ought never to allow any of its explicit rules to be broken with impunity.",
    "question": "The reasoning in the argument is most vulnerable to criticism on the grounds that the argument",
    "options": [
      "fails to consider that the violated rules might have been made to prevent problems that would not arise even if the rules were removed",
      "infers, from the claim that the violation of some particular rules will lead to chaos, that the violation of any rule will lead to chaos",
      "confuses the routine nonpunishment of violations of a rule with sometimes not punishing violations of the rule",
      "takes for granted that a society will avoid chaos as long as none of its explicit rules are routinely violated with impunity"
    ],
    "raw_logic_programs": [
      "# Declarations\nrules = EnumSort([explicit_rules])\nsociety = EnumSort([society])\npeople = EnumSort([people])\nactions = EnumSort([punished, unpunished, moral_guidance, chaos])\n\n# Constraints\nForAll([r:rules], Implies(actions(unpunished, r), Not(actions(moral_guidance, people)))) ::: If violations of any of a society's explicit rules routinely go unpunished, then that society's people will be left without moral guidance\nForAll([p:people], Implies(Not(actions(moral_guidance, p)), actions(chaos, society))) ::: Because people who lack moral guidance will act in many different ways, chaos results\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on the grounds that the argument\nis_vulnerable(fails_to_consider(Exists([r:rules], And(actions(unpunished, r), Not(actions(chaos, society)))))) ::: (A) fails to consider that the violated rules might have been made to prevent problems that would not arise even if the rules were removed\nis_vulnerable(infers(ForAll([r:rules], Implies(actions(unpunished, r), actions(chaos, society))))) ::: (B) infers, from the claim that the violation of some particular rules will lead to chaos, that the violation of any rule will lead to chaos\nis_vulnerable(confuses(Exists([r:rules], And(actions(unpunished, r), Not(actions(chaos, society)))))) ::: (C) confuses the routine nonpunishment of violations of a rule with sometimes not punishing violations of the rule\nis_vulnerable(takes_for_granted(ForAll([r:rules], Implies(Not(actions(unpunished, r)), Not(actions(chaos, society)))))) ::: (D) takes for granted that a society will avoid chaos as long as none of its explicit rules are routinely violated with impunity"
    ]
  },
  {
    "id": "test_728",
    "context": "Fearing that the use of titles indicating position in the corporation tends to make the corporate hierarchy rigid by inhibiting communication, some corporations shun the use of executive titles. A title, however, can facilitate an executive' s dealings with external businesses since it encourages outsiders to treat the executive with respect. The obvious compromise is for these executives to use their titles externally but not within their corporations.",
    "question": "Which of the following, if true, provides the most support for the compromise suggested above?",
    "options": [
      "A rigid corporate hierarchy can promote efficiency within an organization as well as provide access to the corporation for those outside the organization.",
      "Referring to an executive by using a title can encourage both those outside the organization and inside the organization to treat the executive with respect.",
      "Even if it is widely known within a corporation that the corporation's executives use executive titles outside their organizations, this knowledge does not by itself inhibit communication within the corporation.",
      "Although many corporate executives disapprove of rigid hierarchies on the grounds that they inhibit communication, the vast majority of executives have no qualms about using titles both internally and externally."
    ],
    "raw_logic_programs": [
      "# Declarations\nexecutives = EnumSort([internal, external])\ntitles = EnumSort([use, not_use])\ncommunication = Function([executives] -> [bool])\n\n# Constraints\nForAll([e:executives], Or(titles(e) == use, titles(e) == not_use)) ::: Executives can either use or not use titles internally and externally\ncommunication(internal) == Not(titles(internal) == use) ::: Titles inhibit communication internally\ncommunication(external) == titles(external) == use ::: Titles facilitate dealings externally\n\n# Options\nQuestion ::: Which of the following, if true, provides the most support for the compromise suggested above?\nis_supportive(communication(internal) == True) ::: (A) A rigid corporate hierarchy can promote efficiency within an organization as well as provide access to the corporation for those outside the organization.\nis_supportive(communication(internal) == False) ::: (B) Referring to an executive by using a title can encourage both those outside the organization and inside the organization to treat the executive with respect.\nis_supportive(communication(internal) == True) ::: (C) Even if it is widely known within a corporation that the corporation's executives use executive titles outside their organizations, this knowledge does not by itself inhibit communication within the corporation.\nis_supportive(communication(internal) == False) ::: (D) Although many corporate executives disapprove of rigid hierarchies on the grounds that they inhibit communication, the vast majority of executives have no qualms about using titles both internally and externally."
    ]
  },
  {
    "id": "test_729",
    "context": "A government study indicates that raising speed limits to reflect the actual average speeds of traffic on level, straight stretches of high-speed roadways reduces the accident rate. Since the actual average speed for level, straight stretches of high-speed roadways tends to be 120 kilometers per hour (75 miles per hour), that should be set as a uniform national speed limit for level, straight stretches of all such roadways.",
    "question": "Which one of the following principles, if valid, most helps to justify the reasoning above?",
    "options": [
      "Any measure that reduces the rate of traffic accidents should be implemented.",
      "Traffic laws applying to high-speed roadways should apply uniformly across the nation.",
      "Long-standing laws that are widely violated are probably not good laws.",
      "A uniform national speed limit for high-speed roadways should be set only if all such roadways have roughly equal average speeds of traffic."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([reduce_accidents, uniform_laws, bad_laws, uniform_limit])\nvalid = Function([principles] -> [bool])\n\n# Constraints\nvalid(reduce_accidents) ::: Any measure that reduces the rate of traffic accidents should be implemented\nvalid(uniform_laws) ::: Traffic laws applying to high-speed roadways should apply uniformly across the nation\nvalid(bad_laws) ::: Long-standing laws that are widely violated are probably not good laws\nvalid(uniform_limit) ::: A uniform national speed limit for high-speed roadways should be set only if all such roadways have roughly equal average speeds of traffic\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the reasoning above?\nis_justified(valid(reduce_accidents)) ::: (A)\nis_justified(valid(uniform_laws)) ::: (B)\nis_justified(valid(bad_laws)) ::: (C)\nis_justified(valid(uniform_limit)) ::: (D)"
    ]
  },
  {
    "id": "test_730",
    "context": "Ecologist: One theory attributes the ability of sea butterflies to avoid predation to their appearance, while another attributes this ability to various chemical compounds they produce. Recently we added each of the compounds to food pellets, one compound per pellet. Predators ate the pellets no matter which one of the compounds was present. Thus the compounds the sea butterflies produce are not responsible for their ability to avoid predation.",
    "question": "The reasoning in the ecologist's argument is flawed in that the argument",
    "options": [
      "draws a conclusion that merely restates material present in one or more of its premises",
      "draws a conclusion about a cause on the basis of nothing more than a statistical correlation",
      "presumes, without providing justification, that the two theories are incompatible with each other",
      "infers, from the claim that no individual member of a set has a certain effect, that the set as a whole does not have that effect"
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([appearance, chemical_compounds])\ncompounds = EnumSort([compound1, compound2, compound3, ...])  # Assuming a finite set of compounds\npellets = EnumSort([pellet1, pellet2, pellet3, ...])  # Assuming a finite set of pellets\npredators = EnumSort([predator1, predator2, ...])  # Assuming a finite set of predators\neats = Function([predators, pellets] -> [bool])\ncontains = Function([pellets] -> [compounds])\n\n# Constraints\nForAll([p:pellets], Exists([c:compounds], contains(p) == c)) ::: Each pellet contains one compound\nForAll([pr:predators, p:pellets], eats(pr, p)) ::: Predators eat the pellets no matter which compound is present\n\n# Options\nQuestion ::: The reasoning in the ecologist's argument is flawed in that the argument\nis_flawed(draws_conclusion_restate_premise) ::: (draws a conclusion that merely restates material present in one or more of its premises)\nis_flawed(draws_conclusion_statistical_correlation) ::: (draws a conclusion about a cause on the basis of nothing more than a statistical correlation)\nis_flawed(presumes_incompatibility_without_justification) ::: (presumes, without providing justification, that the two theories are incompatible with each other)\nis_flawed(infers_individual_to_set) ::: (infers, from the claim that no individual member of a set has a certain effect, that the set as a whole does not have that effect)"
    ]
  },
  {
    "id": "test_731",
    "context": "Corporate businesses, like species, must adapt to survive. Businesses that are no longer efficient will become extinct. But sometimes a business cannot adapt without changing its core corporate philosophy. Hence, sometimes a business can survive only by becoming a different corporation.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "As a business becomes less efficient, it invariably surrenders its core corporate philosophy.",
      "A business cannot change its core corporate philosophy without becoming a different corporation.",
      "If a business keeps its core corporate philosophy intact, it will continue to exist.",
      "No business can survive without changing its core corporate philosophy."
    ],
    "raw_logic_programs": [
      "# Declarations\nbusinesses = EnumSort([business])\nphilosophies = EnumSort([core_philosophy])\nstates = EnumSort([efficient, inefficient, extinct, different_corporation])\n\n# Constraints\nForAll([b:businesses], Implies(state(b) == inefficient, state(b) == extinct)) ::: Businesses that are no longer efficient will become extinct\nForAll([b:businesses], Implies(Not(state(b) == core_philosophy), state(b) == different_corporation)) ::: A business cannot adapt without changing its core corporate philosophy\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(ForAll([b:businesses], Implies(state(b) == inefficient, Not(state(b) == core_philosophy)))) ::: (A) As a business becomes less efficient, it invariably surrenders its core corporate philosophy.\nis_assumption(ForAll([b:businesses], Implies(Not(state(b) == core_philosophy), state(b) == different_corporation))) ::: (B) A business cannot change its core corporate philosophy without becoming a different corporation.\nis_assumption(ForAll([b:businesses], Implies(state(b) == core_philosophy, Not(state(b) == extinct)))) ::: (C) If a business keeps its core corporate philosophy intact, it will continue to exist.\nis_assumption(ForAll([b:businesses], Implies(Not(state(b) == core_philosophy), Not(state(b) == extinct)))) ::: (D) No business can survive without changing its core corporate philosophy."
    ]
  },
  {
    "id": "test_732",
    "context": "One hundred people listened to a single musical composition, \"Study I, \" on a certain morning. Later that day, they listened to \"Study I\" again and to another musical composition, \"Study II, \" and were asked which they preferred. A substantial majority preferred \"Study I. \" These results support the hypotheses that people prefer music they have heard on an earlier occasion to music they are hearing for the first time.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Ninety percent of the members of a large group of people who listened to \"Study I\" and \"Study II\" without having heard either of the compositions on any earlier occasion preferred \"Study I. \"",
      "The group of 100 people who listened to \"Study I\" in the morning and to both \"Study I\" and \"Study II\" later the same day included some professional music critics.",
      "Of 80 people who heard only \"Study II\" in the morning and heard both \"Study I\" and \"Study II\" later the same day, 70 preferred \"Study II. \"",
      "Many of the 100 people who in the morning listened only to \"Study I\" complained afterward that they had not been able to hear well from where they had been seated."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, ..., person100])\ncompositions = EnumSort([Study_I, Study_II])\npreferences = Function([people] -> [compositions])\nheard_earlier = Function([people, compositions] -> [bool])\n\n# Constraints\nForAll([p:people], heard_earlier(p, Study_I)) ::: All 100 people listened to \"Study I\" in the morning\nForAll([p:people], Not(heard_earlier(p, Study_II))) ::: None of the 100 people heard \"Study II\" before the later session\nCount([p:people], preferences(p) == Study_I) > 50 ::: A substantial majority preferred \"Study I\"\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nis_strongest(Count([p:people], preferences(p) == Study_I) > 90) ::: (A) Ninety percent of the members of a large group of people who listened to \"Study I\" and \"Study II\" without having heard either of the compositions on any earlier occasion preferred \"Study I.\"\nis_strongest(Exists([p:people], professional_critic(p))) ::: (B) The group of 100 people who listened to \"Study I\" in the morning and to both \"Study I\" and \"Study II\" later the same day included some professional music critics.\nis_strongest(Count([p:people], preferences(p) == Study_II) == 70) ::: (C) Of 80 people who heard only \"Study II\" in the morning and heard both \"Study I\" and \"Study II\" later the same day, 70 preferred \"Study II.\"\nis_strongest(Exists([p:people], complained_about_hearing(p))) ::: (D) Many of the 100 people who in the morning listened only to \"Study I\" complained afterward that they had not been able to hear well from where they had been seated."
    ]
  },
  {
    "id": "test_733",
    "context": "Government official: Although the determination of local residents to rebuild hiking trails recently devastated by a landslide indicates that they are strongly committed to their community, the government should not assist them in rebuilding. The reason is clear: there is a strong likelihood of future landslides in that location that could cause serious injury or worse.",
    "question": "Which one of the following principles, if valid, most helps to justify the reasoning in the government official's argument?",
    "options": [
      "The government should not assist in projects that are very likely to result in circumstances that could lead to serious injury.",
      "The determination of residents to rebuild hiking trails devastated by landslides should be what determines government support for the project.",
      "Residents should not be allowed to rebuild trails unless the government assists them in rebuilding.",
      "Government agencies should not assist people with projects unless those people are strongly committed to their community."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([P1, P2, P3, P4])\nvalid = Function([principles] -> [bool])\n\n# Constraints\nvalid(P1) ::: The government should not assist in projects that are very likely to result in circumstances that could lead to serious injury.\nvalid(P2) ::: The determination of residents to rebuild hiking trails devastated by landslides should be what determines government support for the project.\nvalid(P3) ::: Residents should not be allowed to rebuild trails unless the government assists them in rebuilding.\nvalid(P4) ::: Government agencies should not assist people with projects unless those people are strongly committed to their community.\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the reasoning in the government official's argument?\nis_justified(valid(P1)) ::: (A)\nis_justified(valid(P2)) ::: (B)\nis_justified(valid(P3)) ::: (C)\nis_justified(valid(P4)) ::: (D)"
    ]
  },
  {
    "id": "test_734",
    "context": "In the United States, about $5, 200 per person per year is spent on health care, while in Britain the amount is about half that. A recent study indicated that middle-aged white Americans have a significantly higher rate of diabetes and heart disease than do middle-aged white Britons. Even after eliminating from the study the lifestyle differences of diet, exercise, smoking, and drinking, the data showed that the Americans have poorer health than their British counterparts.",
    "question": "The statements above, if true, best support which of the following assertions?",
    "options": [
      "Health care spending in the United States should be reduced by 50%.",
      "The money spent on health care in the United States is not being used effectively.",
      "More expensive health care causes a higher incidence of certain diseases.",
      "Something other than diet, exercise, smoking, and drinking must account for the difference in health for the two groups in the study."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([United_States, Britain])\nhealth_conditions = EnumSort([diabetes, heart_disease])\nfactors = EnumSort([diet, exercise, smoking, drinking, other])\nspending = Function([countries] -> [int])\nhealth_rate = Function([countries, health_conditions] -> [float])\nlifestyle_impact = Function([factors, countries] -> [bool])\n\n# Constraints\nspending(United_States) == 5200 ::: In the United States, about $5,200 per person per year is spent on health care\nspending(Britain) == 2600 ::: In Britain, the amount is about half that\nhealth_rate(United_States, diabetes) > health_rate(Britain, diabetes) ::: Middle-aged white Americans have a significantly higher rate of diabetes\nhealth_rate(United_States, heart_disease) > health_rate(Britain, heart_disease) ::: Middle-aged white Americans have a significantly higher rate of heart disease\nForAll([f:factors], Implies(f != other, Not(lifestyle_impact(f, United_States)))) ::: Eliminating lifestyle differences, Americans have poorer health\n\n# Options\nQuestion ::: The statements above, if true, best support which of the following assertions?\nis_supported(Not(effective_use(spending(United_States)))) ::: (The money spent on health care in the United States is not being used effectively.)\nis_supported(Exists([f:factors], And(f == other, lifestyle_impact(f, United_States)))) ::: (Something other than diet, exercise, smoking, and drinking must account for the difference in health for the two groups in the study.)"
    ]
  },
  {
    "id": "test_735",
    "context": "Burying beetles do whatever they can to minimize the size of their competitors' broods without adversely affecting their own. This is why they routinely destroy each other' s eggs when two or more beetles inhabit the same breeding location. Yet, after the eggs hatch, the adults treat all of the larvae equally, sharing in the care of the entire population.",
    "question": "Which one of the following, if true, most helps to explain burying beetles' apparently contradictory behavior?",
    "options": [
      "Burying beetles whose eggs hatch before their competitors' are more likely to have large broods than are burying beetles whose eggs hatch later.",
      "Most breeding sites for burying beetles can accommodate only a limited number of larvae.",
      "Burying beetles are unable to discriminate between their own larvae and the larvae of other burying beetles.",
      "Many of the natural enemies of burying beetles can be repelled only if burying beetles cooperate in defending the breeding site."
    ],
    "raw_logic_programs": [
      "# Declarations\nbeetles = EnumSort([Beetle1, Beetle2, Beetle3, Beetle4])\nactions = EnumSort([destroy_eggs, care_for_larvae])\nconditions = EnumSort([same_location, eggs_hatched, larvae_present])\nbehavior = Function([beetles, actions, conditions] -> [bool])\n\n# Constraints\nForAll([b:beetles], Implies(behavior(b, destroy_eggs, same_location), Not(behavior(b, care_for_larvae, same_location)))) ::: Burying beetles destroy each other's eggs when in the same location\nForAll([b:beetles], Implies(behavior(b, care_for_larvae, larvae_present), behavior(b, care_for_larvae, same_location))) ::: After eggs hatch, adults treat all larvae equally\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain burying beetles' apparently contradictory behavior?\nis_explanation(Implies(behavior(Beetle1, destroy_eggs, eggs_hatched), behavior(Beetle1, care_for_larvae, larvae_present))) ::: (A) Burying beetles whose eggs hatch before their competitors' are more likely to have large broods than are burying beetles whose eggs hatch later.\nis_explanation(Implies(behavior(Beetle1, destroy_eggs, same_location), Not(behavior(Beetle1, care_for_larvae, larvae_present)))) ::: (B) Most breeding sites for burying beetles can accommodate only a limited number of larvae.\nis_explanation(Implies(behavior(Beetle1, care_for_larvae, larvae_present), Not(behavior(Beetle1, destroy_eggs, same_location)))) ::: (C) Burying beetles are unable to discriminate between their own larvae and the larvae of other burying beetles.\nis_explanation(Implies(behavior(Beetle1, care_for_larvae, larvae_present), behavior(Beetle1, care_for_larvae, same_location))) ::: (D) Many of the natural enemies of burying beetles can be repelled only if burying beetles cooperate in defending the breeding site."
    ]
  },
  {
    "id": "test_736",
    "context": "Commercial passenger airplanes can be equipped with a collision-avoidance radar system that provides pilots with information about the proximity of other airplanes. Because the system warns pilots to take evasive action when it indicates a possible collision, passengers are safer on airplanes equipped with the system than on comparable airplanes not so equipped, even though the system frequently warns pilots to evade phantom airplanes.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Warnings given by a collision-avoidance system about phantom airplanes are not caused by distorted radar signals.",
      "The frequency of invalid warnings will not cause pilots routinely to disregard the system's warnings.",
      "Passengers feel no safer on airplanes equipped with the radar system than on comparable airplanes not so equipped.",
      "Commercial passenger airplanes are not the only planes that can be equipped with a collision-avoidance system"
    ],
    "raw_logic_programs": [
      "# Declarations\nplanes = EnumSort([equipped, not_equipped])\nwarnings = EnumSort([valid, invalid])\nactions = EnumSort([evasive, no_action])\npassenger_safety = Function([planes] -> [bool])\nwarning_type = Function([warnings] -> [actions])\n\n# Constraints\npassenger_safety(equipped) == True ::: Passengers are safer on airplanes equipped with the system\npassenger_safety(not_equipped) == False ::: Passengers are not safer on airplanes not equipped with the system\nwarning_type(valid) == evasive ::: Valid warnings lead to evasive action\nwarning_type(invalid) == evasive ::: Invalid warnings also lead to evasive action\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(Not(Exists([w:warnings], warning_type(w) == no_action))) ::: (A) Warnings given by a collision-avoidance system about phantom airplanes are not caused by distorted radar signals.\nis_assumption(Not(Exists([w:warnings], And(warning_type(w) == evasive, warning_type(w) == no_action)))) ::: (B) The frequency of invalid warnings will not cause pilots routinely to disregard the system's warnings.\nis_assumption(Not(Exists([p:planes], passenger_safety(p) == False))) ::: (C) Passengers feel no safer on airplanes equipped with the radar system than on comparable airplanes not so equipped.\nis_assumption(Not(Exists([p:planes], passenger_safety(p) == True))) ::: (D) Commercial passenger airplanes are not the only planes that can be equipped with a collision-avoidance system."
    ]
  },
  {
    "id": "test_737",
    "context": "Scholar: Recently, some religions have updated the language of their traditional texts and replaced traditional rituals with more contemporary ones. These changes have been followed by increases in attendance at places of worship affiliated with these religions. This shows that any such modernization will result in increased numbers of worshipers.",
    "question": "The scholar's reasoning is flawed because the scholar presumes without giving sufficient justification that",
    "options": [
      "modernization of religious texts and rituals will not involve an alteration of their messages",
      "the growth in attendance at places of worship affiliated with religions that made their texts and rituals more modern is irreversible",
      "not every religion can update its texts and replace its traditional rituals",
      "the modernization of the texts and rituals of some religions was the cause of their increases in attendance"
    ],
    "raw_logic_programs": [
      "# Declarations\nreligions = EnumSort([Religion1, Religion2, Religion3, ...])\ntexts = EnumSort([traditional, modern])\nrituals = EnumSort([traditional, modern])\nattendance = Function([religions] -> [int])\nmodernized = Function([religions] -> [bool])\n\n# Constraints\nForAll([r:religions], Implies(modernized(r), And(texts(r) == modern, rituals(r) == modern))) ::: Some religions have updated the language of their traditional texts and replaced traditional rituals with more contemporary ones\nForAll([r:religions], Implies(modernized(r), attendance(r) > attendance(r, traditional))) ::: These changes have been followed by increases in attendance\n\n# Options\nQuestion ::: The scholar's reasoning is flawed because the scholar presumes without giving sufficient justification that\nis_flawed(ForAll([r:religions], Implies(modernized(r), messages(r) == messages(r, traditional)))) ::: (A) modernization of religious texts and rituals will not involve an alteration of their messages\nis_flawed(ForAll([r:religions], Implies(modernized(r), Always(attendance(r) > attendance(r, traditional))))) ::: (B) the growth in attendance at places of worship affiliated with religions that made their texts and rituals more modern is irreversible\nis_flawed(Exists([r:religions], Not(CanUpdate(r)))) ::: (C) not every religion can update its texts and replace its traditional rituals\nis_flawed(ForAll([r:religions], Implies(modernized(r), Cause(attendance(r) > attendance(r, traditional))))) ::: (D) the modernization of the texts and rituals of some religions was the cause of their increases in attendance"
    ]
  },
  {
    "id": "test_738",
    "context": "Archaeologist: For 2, 000 years the ancient Sumerians depended on irrigation to sustain the agriculture that fed their civilization. But eventually irrigation built up in the soil toxic levels of the salts and other impurities left behind when water evaporates. When its soil became unable to support agriculture, Sumerian civilization collapsed. A similar fate is thus likely to befall modern civilizations that continue to rely heavily on irrigation for agriculture.",
    "question": "Which one of the following, if true, most weakens the archaeologist's argument?",
    "options": [
      "The soil of ancient Sumeria already contained some toxic salts and other impurities before the Sumerians started using irrigation for agriculture.",
      "Many modern farmers use irrigation techniques that avoid the buildup of salts and other toxic impurities in the soil.",
      "Many modern civilizations do not rely to any significant extent on irrigation for agriculture.",
      "Most modern civilizations could not feed themselves through agriculture without relying heavily on irrigation."
    ],
    "raw_logic_programs": [
      "# Declarations\ncivilizations = EnumSort([ancient_Sumerians, modern_civilizations])\nfactors = EnumSort([irrigation, soil_toxicity, agriculture_collapse])\nrelies_on = Function([civilizations, factors] -> [bool])\ncauses = Function([factors, factors] -> [bool])\n\n# Constraints\nrelies_on(ancient_Sumerians, irrigation) ::: For 2,000 years the ancient Sumerians depended on irrigation\ncauses(irrigation, soil_toxicity) ::: Irrigation built up in the soil toxic levels of salts and other impurities\ncauses(soil_toxicity, agriculture_collapse) ::: Soil toxicity led to the collapse of agriculture\ncauses(irrigation, agriculture_collapse) ::: A similar fate is likely for modern civilizations relying on irrigation\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the archaeologist's argument?\nis_weakens(causes(irrigation, soil_toxicity) == False) ::: (A) The soil of ancient Sumeria already contained some toxic salts and other impurities before the Sumerians started using irrigation for agriculture.\nis_weakens(Exists([c:civilizations], And(relies_on(c, irrigation), Not(causes(irrigation, soil_toxicity))))) ::: (B) Many modern farmers use irrigation techniques that avoid the buildup of salts and other toxic impurities in the soil.\nis_weakens(ForAll([c:civilizations], Not(relies_on(c, irrigation)))) ::: (C) Many modern civilizations do not rely to any significant extent on irrigation for agriculture.\nis_weakens(ForAll([c:civilizations], relies_on(c, irrigation))) ::: (D) Most modern civilizations could not feed themselves through agriculture without relying heavily on irrigation."
    ]
  },
  {
    "id": "test_739",
    "context": "Speakers of the Caronian language constitute a minority of the population in several large countries. An international body has recommended that the regions where Caronian-speakers live be granted autonomy as an independent nation in which Caronian-speakers would form a majority. But Caronian-speakers live in several, widely scattered areas that cannot be united within a single continuous boundary while at the same time allowing Caronian-speakers to be the majority population. Hence, the recommendation cannot be satisfied.",
    "question": "The argument relies on which one of the following assumptions?",
    "options": [
      "The recommendation would not be satisfied by the creation of a nation formed of disconnected regions.",
      "In most nations several different languages are spoken.",
      "A nation once existed in which Caronian- speakers formed the majority of the population.",
      "The new Caronian nation will not include as citizens anyone who does not speak Caronian."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([region1, region2, region3, region4, region5])\npopulation = Function([regions] -> [int])\ncaronian_speakers = Function([regions] -> [int])\nautonomy_granted = Function([regions] -> [bool])\n\n# Constraints\nForAll([r:regions], caronian_speakers(r) < population(r)) ::: Caronian-speakers are a minority in each region\nExists([r:regions], autonomy_granted(r)) ::: Some regions are recommended to be granted autonomy\nForAll([r1:regions, r2:regions], Implies(autonomy_granted(r1) && autonomy_granted(r2), r1 != r2)) ::: The regions are widely scattered and cannot be united within a single continuous boundary\n\n# Options\nQuestion ::: The argument relies on which one of the following assumptions?\nis_assumption(ForAll([r1:regions, r2:regions], Implies(autonomy_granted(r1) && autonomy_granted(r2), Not(connected(r1, r2))))) ::: (The recommendation would not be satisfied by the creation of a nation formed of disconnected regions.\nis_assumption(Exists([r:regions], population(r) > caronian_speakers(r))) ::: (In most nations several different languages are spoken.\nis_assumption(Exists([r:regions], caronian_speakers(r) > 0)) ::: (A nation once existed in which Caronian-speakers formed the majority of the population.\nis_assumption(ForAll([r:regions], Implies(autonomy_granted(r), population(r) == caronian_speakers(r)))) ::: (The new Caronian nation will not include as citizens anyone who does not speak Caronian."
    ]
  },
  {
    "id": "test_740",
    "context": "Although research has been conducted regarding the safety of nuclear energy, no study has declared nuclear energy to be unsafe. A group of supporters of nuclear energy have cited this research as certain proof that nuclear energy is safe.",
    "question": "A flaw in the reasoning of the supporters of nuclear energy is that they",
    "options": [
      "assume that the scientists performing the research are doing so under properly controlled conditions",
      "neglect to provide detailed information about the evidence used to support the conclusion",
      "use the lack of evidence contradicting a claim as conclusive evidence for that claim",
      "are motivated by a biased interest in proving the energy source safe"
    ],
    "raw_logic_programs": [
      "# Declarations\nresearch = EnumSort([safe, unsafe])\nstudies = Function([research] -> [bool])\n\n# Constraints\nForAll([r:research], Not(studies(unsafe))) ::: no study has declared nuclear energy to be unsafe\n\n# Options\nQuestion ::: A flaw in the reasoning of the supporters of nuclear energy is that they\nis_flaw(Exists([r:research], studies(r) == safe)) ::: (assume that the scientists performing the research are doing so under properly controlled conditions)\nis_flaw(Exists([r:research], studies(r) == safe)) ::: (neglect to provide detailed information about the evidence used to support the conclusion)\nis_flaw(Not(Exists([r:research], studies(r) == unsafe))) ::: (use the lack of evidence contradicting a claim as conclusive evidence for that claim)\nis_flaw(Exists([r:research], studies(r) == safe)) ::: (are motivated by a biased interest in proving the energy source safe)"
    ]
  },
  {
    "id": "test_741",
    "context": "In emerging economies in Africa and other regions, large foreign banks that were set up during the colonial era have long played a major economic role. These institutions have tended to confine their business to the wealthier of banks' potential customers. But development of these countries' economies requires financing of the small businesses that dominate their manufacturing, farming, and services sectors. So economic growth will be likely to occur if local banks take on this portion of the financial services markets, since __.",
    "question": "Which of the following completions would produce the strongest argument?",
    "options": [
      "some small businesses are among the wealthier customers of foreign banks in emerging economies",
      "small farming and manufacturing businesses contribute to economic growth if they obtain adequate investment capital",
      "local banks in emerging economies tend to be less risk-averse than foreign banks",
      "large foreign banks in emerging economies could, with local employees and appropriate local consultation, profitably expand their business to less wealthy clients"
    ],
    "raw_logic_programs": [
      "# Declarations\neconomies = EnumSort([Africa, other_regions])\nbanks = EnumSort([foreign, local])\ncustomers = EnumSort([wealthier, small_businesses])\nsectors = EnumSort([manufacturing, farming, services])\ngrowth = Function([economies] -> [bool])\nfinancing = Function([banks, customers] -> [bool])\n\n# Constraints\nForAll([e:economies], financing(foreign, wealthier)) ::: Large foreign banks have tended to confine their business to the wealthier customers\nForAll([e:economies], Exists([s:sectors], financing(local, small_businesses))) ::: Development requires financing of small businesses in manufacturing, farming, and services sectors\n\n# Options\nQuestion ::: Which of the following completions would produce the strongest argument?\nis_strongest(Implies(Exists([s:sectors], financing(local, small_businesses)), growth(Africa))) ::: (small farming and manufacturing businesses contribute to economic growth if they obtain adequate investment capital)\nis_strongest(Implies(Exists([s:sectors], financing(local, small_businesses)), growth(other_regions))) ::: (local banks in emerging economies tend to be less risk-averse than foreign banks)\nis_strongest(Implies(Exists([s:sectors], financing(local, small_businesses)), growth(Africa))) ::: (large foreign banks in emerging economies could, with local employees and appropriate local consultation, profitably expand their business to less wealthy clients)"
    ]
  },
  {
    "id": "test_742",
    "context": "Words like \"employee, \" \"payee, \" and \"detainee\" support the generalization, crudely stated, that words with the ending -ee designate the person affected in the specified way by an action performed by someone else. The word \"absentee\"seems to be a direct counterexample: it ends in -ee, yet, if it makes sense here to speak of an action at all -- that of absenting oneself, perhaps -- the word can refer to the person who actually performs that action. Clearly, however, putting forward the following resolves the impasse: if a word with the ending -ee refers to one party in a two-party transaction, it refers to the party at which the other party' s action is directed.",
    "question": "The argument does which one of the following in dealing with the counterexample it offers?",
    "options": [
      "concedes that the proposed counterexample is an exception to the generalization but maintains the generalization on the grounds that all generalizations have exceptions",
      "shows how replacing the notion of being affected in the specified way by an action with that of having someone's action directed at oneself reveals the counterexample to be spurious",
      "provides additional support for the original generalization in part by showing that the supposed force of the counterexample derives from a misanalysis of that example",
      "narrows the scope of the generalization at issue in such a way that the putative counterexample is no longer relevant"
    ],
    "raw_logic_programs": [
      "# Declarations\nwords = EnumSort([employee, payee, detainee, absentee])\nactions = EnumSort([affected, directed])\nrelation = Function([words] -> [actions])\n\n# Constraints\nForAll([w:words], relation(w) == affected) ::: Words with the ending -ee designate the person affected in the specified way by an action performed by someone else\nrelation(absentee) == directed ::: The word \"absentee\" refers to the person who performs the action of absenting oneself\n\n# Options\nQuestion ::: The argument does which one of the following in dealing with the counterexample it offers?\nis_valid(concedes_exception) ::: (A) concedes that the proposed counterexample is an exception to the generalization but maintains the generalization on the grounds that all generalizations have exceptions\nis_valid(replace_notions) ::: (B) shows how replacing the notion of being affected in the specified way by an action with that of having someone's action directed at oneself reveals the counterexample to be spurious\nis_valid(provide_support) ::: (C) provides additional support for the original generalization in part by showing that the supposed force of the counterexample derives from a misanalysis of that example\nis_valid(narrow_scope) ::: (D) narrows the scope of the generalization at issue in such a way that the putative counterexample is no longer relevant"
    ]
  },
  {
    "id": "test_743",
    "context": "No ambitious politician will challenge an elected public official running for reelection unless that official appears vulnerable. Nonetheless, elected public officials who do not appear vulnerable as they attempt to win reelection rarely run unopposed.",
    "question": "If the statements above are true, which of the following conclusions can be properly drawn from them?",
    "options": [
      "If an elected official running for reelection appears vulnerable, that official's challengers will all be ambitious politicians.",
      "Some elected officials running for reelection are challenged by people who are not ambitious politicians.",
      "A politician's career will be seriously set back if the politician wages an unsuccessful campaign for elective office.",
      "Elected officials running for reelection who do not appear vulnerable are themselves ambitious politicians."
    ],
    "raw_logic_programs": [
      "# Declarations\npoliticians = EnumSort([ambitious, not_ambitious])\nofficials = EnumSort([vulnerable, not_vulnerable])\nrunning = EnumSort([challenged, unchallenged])\nchallenge = Function([politicians, officials] -> [running])\n\n# Constraints\nForAll([p:politicians, o:officials], Implies(And(p == ambitious, o == not_vulnerable), challenge(p, o) == unchallenged)) ::: No ambitious politician will challenge an elected public official running for reelection unless that official appears vulnerable\nForAll([o:officials], Implies(o == not_vulnerable, Exists([p:politicians], challenge(p, o) == challenged))) ::: Elected public officials who do not appear vulnerable as they attempt to win reelection rarely run unopposed\n\n# Options\nQuestion ::: If the statements above are true, which of the following conclusions can be properly drawn from them?\nis_valid(ForAll([o:officials], Implies(o == vulnerable, ForAll([p:politicians], Implies(challenge(p, o) == challenged, p == ambitious)))) ::: (A) If an elected official running for reelection appears vulnerable, that official's challengers will all be ambitious politicians.\nis_valid(Exists([o:officials], Exists([p:politicians], And(challenge(p, o) == challenged, p == not_ambitious)))) ::: (B) Some elected officials running for reelection are challenged by people who are not ambitious politicians.\nis_valid(False) ::: (C) A politician's career will be seriously set back if the politician wages an unsuccessful campaign for elective office.\nis_valid(Exists([o:officials], Exists([p:politicians], And(challenge(p, o) == challenged, o == not_vulnerable, p == ambitious)))) ::: (D) Elected officials running for reelection who do not appear vulnerable are themselves ambitious politicians."
    ]
  },
  {
    "id": "test_744",
    "context": "Editorial: Medical schools spend one hour teaching preventive medicine for every ten hours spent teaching curative medicine, even though doctors' use of the techniques of preventive medicine cuts down medical costs greatly. Ttherefore, if their goal is to make medicine more cost-effective, medical schools spend insufficient time teaching preventive medicine.",
    "question": "Which one of the following is an assumption on which the editorial's argument depends?",
    "options": [
      "Preventive medicine makes use of technologies that are lower in initial cost than the technologies used within the practice of curative medicine.",
      "Every hour devoted to the teaching of preventive medicine reduces medical costs by 10 percent or more.",
      "The time required to teach preventive medicine thoroughly is greater than one hour for every ten that are now spent teaching curative medicine.",
      "Improvements in doctors' use of the techniques of curative medicine would only increase overall medical costs."
    ],
    "raw_logic_programs": [
      "# Declarations\nhours = EnumSort([preventive, curative])\nteaching_time = Function([hours] -> [int])\ncost_effectiveness = Function([hours] -> [bool])\n\n# Constraints\nteaching_time(preventive) == 1 ::: Medical schools spend one hour teaching preventive medicine\nteaching_time(curative) == 10 ::: Medical schools spend ten hours teaching curative medicine\ncost_effectiveness(preventive) == True ::: Doctors' use of the techniques of preventive medicine cuts down medical costs greatly\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the editorial's argument depends?\nis_assumption(teaching_time(preventive) < teaching_time(curative)) ::: (Preventive medicine makes use of technologies that are lower in initial cost than the technologies used within the practice of curative medicine.)\nis_assumption(teaching_time(preventive) * 0.1 <= teaching_time(curative)) ::: (Every hour devoted to the teaching of preventive medicine reduces medical costs by 10 percent or more.)\nis_assumption(teaching_time(preventive) > 1) ::: (The time required to teach preventive medicine thoroughly is greater than one hour for every ten that are now spent teaching curative medicine.)\nis_assumption(cost_effectiveness(curative) == False) ::: (Improvements in doctors' use of the techniques of curative medicine would only increase overall medical costs.)"
    ]
  },
  {
    "id": "test_745",
    "context": "Eight years ago hunting was banned in Greenfield County on the grounds that hunting endangers public safety. Now the deer population in the county is six times what it was before the ban. Deer are invading residential areas, damaging property and causing motor vehicle accidents that result in serious injury to motorists. Since there were never any hunting-related injuries in the county, clearly the ban was not only unnecessary but has created a danger to public safety that would not otherwise exist.",
    "question": "Which one of the following, if true, provides the strongest additional support for the conclusion above?",
    "options": [
      "Deer can cause extensive damage to ornamental shrubs and trees by chewing on twigs and saplings.",
      "In residential areas in the county, many residents provide food and salt for deer.",
      "In surrounding counties, where hunting is permitted, the size of the deer population has not increased in the last eight years.",
      "Motor vehicle accidents involving deer often result in damage to the vehicle, injury to the motorist, or both."
    ],
    "raw_logic_programs": [
      "# Declarations\ndeer_population = Function([int] -> [int])  # deer_population(year) gives the deer population in a given year\nhunting_banned = Function([bool])  # hunting_banned indicates if hunting is banned\npublic_safety = Function([bool])  # public_safety indicates if public safety is endangered\nmotor_vehicle_accidents = Function([int] -> [int])  # motor_vehicle_accidents(year) gives the number of accidents involving deer in a given year\n\n# Constraints\nhunting_banned == True ::: hunting was banned in Greenfield County\ndeer_population(0) == 1 ::: initial deer population before the ban\ndeer_population(8) == 6 * deer_population(0) ::: deer population is six times what it was before the ban\nmotor_vehicle_accidents(8) > motor_vehicle_accidents(0) ::: increase in motor vehicle accidents involving deer\npublic_safety == False ::: hunting was banned on the grounds that it endangers public safety\npublic_safety == True ::: the ban has created a danger to public safety\n\n# Options\nQuestion ::: Which one of the following, if true, provides the strongest additional support for the conclusion above?\nis_strong_support(deer_population_surrounding_counties(8) == deer_population_surrounding_counties(0)) ::: (C) In surrounding counties, where hunting is permitted, the size of the deer population has not increased in the last eight years.\nis_strong_support(deer_damage_property == True) ::: (A) Deer can cause extensive damage to ornamental shrubs and trees by chewing on twigs and saplings.\nis_strong_support(residents_feed_deer == True) ::: (B) In residential areas in the county, many residents provide food and salt for deer.\nis_strong_support(motor_vehicle_accidents_involving_deer == True) ::: (D) Motor vehicle accidents involving deer often result in damage to the vehicle, injury to the motorist, or both."
    ]
  },
  {
    "id": "test_746",
    "context": "A study found that consumers reaching supermarket checkout lines within 40 minutes after the airing of an advertisement for a given product over the store' s audio system were significantly more likely to purchase the product advertised than were consumers who checked out prior to the airing. Apparently, these advertisements are effective.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Many of the consumers who bought an advertised product and who reached the checkout line within 40 minutes of the advertisement's airing reported that they could not remember hearing the advertisement.",
      "Many of the consumers reported that they typically bought at least one of the advertised products every time they shopped at the store.",
      "Many of the consumers who bought an advertised product reported that they buy that product only occasionally.",
      "A large proportion of the consumers who bought a product shortly after the airing of an advertisement for it reported that they had not gone to the store intending to buy that product."
    ],
    "raw_logic_programs": [
      "# Declarations\nconsumers = EnumSort([before_ad, after_ad])\npurchases = Function([consumers] -> [bool])\n\n# Constraints\npurchases(after_ad) > purchases(before_ad) ::: Consumers reaching checkout lines within 40 minutes after the airing of an advertisement are more likely to purchase the product than those who checked out prior.\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nstrengthens(And(purchases(after_ad), Not(heard_ad))) ::: (A) Many of the consumers who bought an advertised product and who reached the checkout line within 40 minutes of the advertisement's airing reported that they could not remember hearing the advertisement.\nstrengthens(And(purchases(after_ad), typically_buys)) ::: (B) Many of the consumers reported that they typically bought at least one of the advertised products every time they shopped at the store.\nstrengthens(And(purchases(after_ad), occasionally_buys)) ::: (C) Many of the consumers who bought an advertised product reported that they buy that product only occasionally.\nstrengthens(And(purchases(after_ad), Not(intended_to_buy))) ::: (D) A large proportion of the consumers who bought a product shortly after the airing of an advertisement for it reported that they had not gone to the store intending to buy that product."
    ]
  },
  {
    "id": "test_747",
    "context": "Jennifer: Video rental outlets in Centerville together handled 10, 000 fewer video rentals in 1994 than in 1993. The decline in rentals was probably due almost entirely to the February 1994 opening of Videorama, the first and only video rental outlet in the area that, in addition to renting videos, also sold them cheaply. Brad: There must be another explanation: as you yourself said, the decline was on the order of 10, 000 rentals. Yet Videorama sold only 4, 000 videos in 1994.",
    "question": "Which of the following, if true, would most seriously weaken the force of the objection that Brad presents to Jennifer's explanation?",
    "options": [
      "Most of the video rental outlets in Centerville rent videos at a discount on certain nights of the week.",
      "In 1994 Videorama rented out more videos than it sold.",
      "In 1994 two new outlets that rent but that do not sell videos opened in Centerville.",
      "People who own videos frequently loan them to their friends."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([rental_decline, videorama_opening, videorama_sales, other_outlets_opening])\nexplanations = EnumSort([jennifer_explanation, brad_objection])\nfacts = Function([events] -> [int])\n\n# Constraints\nfacts(rental_decline) == 10000 ::: Video rental outlets in Centerville together handled 10,000 fewer video rentals in 1994 than in 1993\nfacts(videorama_sales) == 4000 ::: Videorama sold only 4,000 videos in 1994\n\n# Options\nQuestion ::: Which of the following, if true, would most seriously weaken the force of the objection that Brad presents to Jennifer's explanation?\nis_weakening(Exists([e:events], And(e == videorama_opening, facts(e) > facts(videorama_sales)))) ::: (In 1994 Videorama rented out more videos than it sold.)\nis_weakening(Exists([e:events], And(e == other_outlets_opening, facts(e) > 0))) ::: (In 1994 two new outlets that rent but that do not sell videos opened in Centerville.)\nis_weakening(Exists([e:events], And(e == rental_decline, facts(e) > facts(videorama_sales)))) ::: (People who own videos frequently loan them to their friends.)"
    ]
  },
  {
    "id": "test_748",
    "context": "Economist: The most economically efficient way to reduce emissions of air pollutants is to tax them in proportion to the damage they are likely to cause. But in Country Y, many serious pollutants are untaxed and unregulated, and policy makers strongly oppose new taxes. Ttherefore, the best way to achieve a reduction in air pollutant emissions in Country Y would be to institute fixed upper limits on them.",
    "question": "Which of the following is an assumption of the economist's argument?",
    "options": [
      "Policy makers in Country Y do not oppose setting fixed upper limits on air pollutant emissions as strongly as they oppose new taxes.",
      "Country Y's air pollutant emissions would not fall significantly if they were taxed in proportion to the damage they are likely to cause.",
      "Policy makers in Country Y strongly favor reductions in air pollutant emissions.",
      "Policy makers in Country Y oppose all new taxes equally strongly, regardless of any benefits they may provide."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([oppose_limits_less_than_taxes, no_significant_reduction_with_taxes, favor_reductions, oppose_all_taxes_equally])\n\n# Constraints\neconomist_argument = And(\n    Not(Exists([p:propositions], p == oppose_limits_less_than_taxes)),  # Policy makers in Country Y do not oppose setting fixed upper limits on air pollutant emissions as strongly as they oppose new taxes.\n    Not(Exists([p:propositions], p == no_significant_reduction_with_taxes)),  # Country Y's air pollutant emissions would not fall significantly if they were taxed in proportion to the damage they are likely to cause.\n    Not(Exists([p:propositions], p == favor_reductions)),  # Policy makers in Country Y strongly favor reductions in air pollutant emissions.\n    Not(Exists([p:propositions], p == oppose_all_taxes_equally))  # Policy makers in Country Y oppose all new taxes equally strongly, regardless of any benefits they may provide.\n)\n\n# Options\nQuestion ::: Which of the following is an assumption of the economist's argument?\nis_assumption(oppose_limits_less_than_taxes) ::: (A)\nis_assumption(no_significant_reduction_with_taxes) ::: (B)\nis_assumption(favor_reductions) ::: (C)\nis_assumption(oppose_all_taxes_equally) ::: (D)"
    ]
  },
  {
    "id": "test_749",
    "context": "The probability of avoiding heart disease is increased if one avoids fat in one' s diet. Furthermore, one is less likely to eat fat if one avoids eating dairy foods. Thus the probability of maintaining good health is increased by avoiding dairy foods.",
    "question": "The reasoning in the argument is most vulnerable to criticism on which one of the following grounds?",
    "options": [
      "The argument presumes, without providing justification, that factors that carry increased risks of negative consequences ought to be eliminated.",
      "The argument fails to consider that what is probable will not necessarily occur.",
      "The argument fails to consider the possibility that there are more ways than one of decreasing the risk of a certain type of occurrence.",
      "The argument ignores the possibility that, even though a practice may have potentially negative consequences, its elimination may also have negative consequences."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([heart_disease, fat, dairy, good_health])\nrelationships = Function([factors, factors] -> [bool])\n\n# Constraints\nrelationships(fat, heart_disease) ::: The probability of avoiding heart disease is increased if one avoids fat in one's diet\nrelationships(dairy, fat) ::: One is less likely to eat fat if one avoids eating dairy foods\nrelationships(dairy, good_health) ::: The probability of maintaining good health is increased by avoiding dairy foods\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on which one of the following grounds?\nis_vulnerable(relationships(fat, heart_disease) && relationships(dairy, fat) && relationships(dairy, good_health)) ::: (The argument presumes, without providing justification, that factors that carry increased risks of negative consequences ought to be eliminated.\nis_vulnerable(relationships(fat, heart_disease) && relationships(dairy, fat) && relationships(dairy, good_health)) ::: (The argument fails to consider that what is probable will not necessarily occur.\nis_vulnerable(relationships(fat, heart_disease) && relationships(dairy, fat) && relationships(dairy, good_health)) ::: (The argument fails to consider the possibility that there are more ways than one of decreasing the risk of a certain type of occurrence.\nis_vulnerable(relationships(fat, heart_disease) && relationships(dairy, fat) && relationships(dairy, good_health)) ::: (The argument ignores the possibility that, even though a practice may have potentially negative consequences, its elimination may also have negative consequences."
    ]
  },
  {
    "id": "test_750",
    "context": "Figorian Wildlife Commission: The development of wetlands in industrialized nations for residential and commercial uses has endangered many species. To protect wildlife we must regulate such development in Figoria: future wetland development must be offset by the construction of replacement wetland habitats. Thus, development would cause no net reduction of wetlands and pose no threat to the species that inhabit them. Figorian Development Commission: Other nations have flagrantly developed wetlands at the expense of wildlife. We have conserved. Since Figorian wetland development might not affect wildlife and is necessary for growth, we should allow development. We have as much right to govern our own resources as countries that have already put their natural resources to commercial use.",
    "question": "Which one of the following is an assumption on which the argument advanced by the Figorian Wildlife Commission depends?",
    "options": [
      "The species indigenous to natural wetland habitats will survive in specially constructed replacement wetlands.",
      "In nations that are primarily agricultural, wetland development does not need to be regulated.",
      "Figorian regulation of development has in the past protected and preserved wildlife.",
      "More species have been endangered by the development of wetlands than have been endangered by any other type of development."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([WildlifeCommission, DevelopmentCommission])\nassumptions = EnumSort([A, B, C, D])\ndepends_on = Function([arguments, assumptions] -> [bool])\n\n# Constraints\ndepends_on(WildlifeCommission, A) ::: The species indigenous to natural wetland habitats will survive in specially constructed replacement wetlands\ndepends_on(WildlifeCommission, B) ::: In nations that are primarily agricultural, wetland development does not need to be regulated\ndepends_on(WildlifeCommission, C) ::: Figorian regulation of development has in the past protected and preserved wildlife\ndepends_on(WildlifeCommission, D) ::: More species have been endangered by the development of wetlands than have been endangered by any other type of development\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument advanced by the Figorian Wildlife Commission depends?\nis_assumption(depends_on(WildlifeCommission, A)) ::: (A)\nis_assumption(depends_on(WildlifeCommission, B)) ::: (B)\nis_assumption(depends_on(WildlifeCommission, C)) ::: (C)\nis_assumption(depends_on(WildlifeCommission, D)) ::: (D)"
    ]
  },
  {
    "id": "test_751",
    "context": "Researcher: We studied two groups of subjects over a period of six months. Over this period, one of the groups had a daily routine of afternoon exercise. The other group, the control group, engaged in little or no exercise during the study. It was found that those in the exercise group got 33 percent more deep-sleep at night than did the control group. Exercising in the afternoon tends to raise body temperature slightly until after bedtime, and this extra heat induces deeper sleep.",
    "question": "The researcher's statements, if true, most strongly support which one of the following?",
    "options": [
      "Exercise in the morning is almost as likely to have as many beneficial effects on sleep as is exercise in the afternoon.",
      "The best way to get increased deep-sleep is to induce a slight increase in body temperature just before bedtime.",
      "Regular afternoon exercise is one of the things required for adequate deep-sleep.",
      "Raising body temperature slightly by taking a warm bath just before bedtime will likely result in increased deep-sleep."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([exercise_group, control_group])\nactivities = EnumSort([exercise, little_or_no_exercise])\nsleep_quality = Function([groups] -> [int])\nbody_temperature = Function([activities] -> [int])\n\n# Constraints\nsleep_quality(exercise_group) > sleep_quality(control_group) ::: The exercise group got 33 percent more deep-sleep at night than the control group\nbody_temperature(exercise) > body_temperature(little_or_no_exercise) ::: Exercising in the afternoon tends to raise body temperature slightly\nForAll([g:groups], Implies(body_temperature(exercise) > body_temperature(little_or_no_exercise), sleep_quality(exercise_group) > sleep_quality(control_group))) ::: Extra heat induces deeper sleep\n\n# Options\nQuestion ::: The researcher's statements, if true, most strongly support which one of the following?\nis_supported(Implies(body_temperature(exercise) > body_temperature(little_or_no_exercise), sleep_quality(exercise_group) > sleep_quality(control_group))) ::: (Exercise in the morning is almost as likely to have as many beneficial effects on sleep as is exercise in the afternoon.\nis_supported(Implies(body_temperature(exercise) > body_temperature(little_or_no_exercise), sleep_quality(exercise_group) > sleep_quality(control_group))) ::: (The best way to get increased deep-sleep is to induce a slight increase in body temperature just before bedtime.\nis_supported(Implies(body_temperature(exercise) > body_temperature(little_or_no_exercise), sleep_quality(exercise_group) > sleep_quality(control_group))) ::: (Regular afternoon exercise is one of the things required for adequate deep-sleep.\nis_supported(Implies(body_temperature(exercise) > body_temperature(little_or_no_exercise), sleep_quality(exercise_group) > sleep_quality(control_group))) ::: (Raising body temperature slightly by taking a warm bath just before bedtime will likely result in increased deep-sleep."
    ]
  },
  {
    "id": "test_752",
    "context": "Last year a chain of fast-food restaurants, whose menu had always centered on hamburger, added its first vegetarian sandwich, much lower in fat than the chain's other offerings. Despite heavy marketing, the new sandwich accounts for a very small proportion of the chain's sales. The sandwich's sales would have to quadruple to cover the costs associated with including it on the menu. Since such an increase is unlikely, the chain would be more profitable if it dropped the sandwich.",
    "question": "Which of the following, if true, most seriously weakens the argument?",
    "options": [
      "When even one member of group of diner's is a vegetarian or has a preference for low-fat food, the group tends to avoid restaurants that lack vegetarian or low-fat menu options.",
      "Among fast-food chains in general, there has been little or no growth in hamburger sales over the past several years as the range of competing offerings at other restaurants has grown.",
      "An attempt by the chain to introduce a lower-fat hamburger failed several years ago, since it attracted few new customers and most of the chain's regular customers greatly preferred the taste of the regular hamburger.",
      "Many of the people who eat at the chain's restaurants also eat at the restaurants of competing chains and report no strong preference among the competitors."
    ],
    "raw_logic_programs": [
      "# Declarations\nrestaurants = EnumSort([chain])\nmenu_items = EnumSort([hamburger, vegetarian_sandwich])\nsales = Function([restaurants, menu_items] -> [int])\ncosts = Function([restaurants, menu_items] -> [int])\nprofitability = Function([restaurants] -> [bool])\n\n# Constraints\nsales(chain, vegetarian_sandwich) < sales(chain, hamburger) ::: the new sandwich accounts for a very small proportion of the chain's sales\nsales(chain, vegetarian_sandwich) * 4 < costs(chain, vegetarian_sandwich) ::: the sandwich's sales would have to quadruple to cover the costs\nNot(profitability(chain)) ::: the chain would be more profitable if it dropped the sandwich\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(Exists([g:group], And(ForAll([d:diners], Or(d == vegetarian, d == low_fat)), Avoids(g, chain)))) ::: (A) When even one member of a group of diners is a vegetarian or has a preference for low-fat food, the group tends to avoid restaurants that lack vegetarian or low-fat menu options.\nis_weakening(And(ForAll([c:chains], NoGrowth(c, hamburger)), CompetingOfferingsIncrease)) ::: (B) Among fast-food chains in general, there has been little or no growth in hamburger sales over the past several years as the range of competing offerings at other restaurants has grown.\nis_weakening(And(AttemptFailed(chain, lower_fat_hamburger), PrefersRegularHamburger(chain))) ::: (C) An attempt by the chain to introduce a lower-fat hamburger failed several years ago, since it attracted few new customers and most of the chain's regular customers greatly preferred the taste of the regular hamburger.\nis_weakening(And(ForAll([p:people], EatsAtCompetitors(p, chain)), NoStrongPreference(p, competitors))) ::: (D) Many of the people who eat at the chain's restaurants also eat at the restaurants of competing chains and report no strong preference among the competitors."
    ]
  },
  {
    "id": "test_753",
    "context": "A physician has a duty to see to the health and best medical interests of the patient. On the other hand, the patient has a right to be fully informed about any negative findings concerning the patient' s health. When this duty conflicts with this right, the right should prevail since it is a basic right. Anything else carries the risk of treating the patient as a mere object, not as a person.",
    "question": "The conclusion drawn above follows logically if which one of the following is assumed?",
    "options": [
      "Because only persons have rights, objects do not have rights.",
      "Some actions are right independently of the consequences that might ensue.",
      "A person's basic rights should never be violated.",
      "All persons have a right to accept or reject any medical procedures proposed by a physician."
    ],
    "raw_logic_programs": [
      "# Declarations\nrights = EnumSort([duty, right])\nentities = EnumSort([physician, patient])\nactions = EnumSort([inform, treat_as_object])\nconsequences = EnumSort([health_interest, informed_consent])\nhas_duty = Function([entities] -> [rights])\nhas_right = Function([entities] -> [rights])\nprevails = Function([rights, rights] -> [bool])\n\n# Constraints\nhas_duty(physician) == duty ::: A physician has a duty to see to the health and best medical interests of the patient\nhas_right(patient) == right ::: The patient has a right to be fully informed about any negative findings concerning the patient’s health\nprevails(right, duty) ::: When this duty conflicts with this right, the right should prevail since it is a basic right\nForAll([e:entities], Implies(has_right(e) == right, Not(treat_as_object))) ::: Anything else carries the risk of treating the patient as a mere object, not as a person\n\n# Options\nQuestion ::: The conclusion drawn above follows logically if which one of the following is assumed?\nis_assumed(ForAll([e:entities], Implies(has_right(e) == right, Not(treat_as_object)))) ::: (A person's basic rights should never be violated)\nis_assumed(ForAll([e:entities], Implies(has_right(e) == right, Not(inform)))) ::: (Because only persons have rights, objects do not have rights)\nis_assumed(ForAll([e:entities], Implies(has_right(e) == right, Not(health_interest)))) ::: (Some actions are right independently of the consequences that might ensue)\nis_assumed(ForAll([e:entities], Implies(has_right(e) == right, Not(informed_consent)))) ::: (All persons have a right to accept or reject any medical procedures proposed by a physician)"
    ]
  },
  {
    "id": "test_754",
    "context": "A carved flint object depicting a stylized human head with an open mouth was found in a Stone Age tomb in Ireland. Some archaeologists believe that the object was a weapon -- the head of a warrior' s mace -- but it is too small for that purpose. Because of its size and the fact that an open mouth symbolizes speaking, the object was probably the head of a speaking staff, a communal object passed around a small assembly to indicate who has the right to speak.",
    "question": "Which one of the following, if true, would most weaken the argument?",
    "options": [
      "The tomb in which the object was found did not contain any other objects that might have been weapons.",
      "The object was carved with an artistry that was rare in Stone Age Ireland.",
      "A speaking staff with a stone head is thought to symbolize a warrior's mace.",
      "Communal objects were normally passed from one generation to the next in Stone Age Ireland."
    ],
    "raw_logic_programs": [
      "# Declarations\nobject_type = EnumSort([weapon, speaking_staff])\nevidence = EnumSort([size, open_mouth, artistry, tomb_contents, communal_objects])\nsupports = Function([evidence, object_type] -> [bool])\n\n# Constraints\nsupports(size, speaking_staff) ::: Because of its size, the object was probably the head of a speaking staff\nsupports(open_mouth, speaking_staff) ::: The fact that an open mouth symbolizes speaking supports the idea of a speaking staff\nNot(supports(size, weapon)) ::: The object is too small to be a weapon\n\n# Options\nQuestion ::: Which one of the following, if true, would most weaken the argument?\nis_weakened(Not(supports(tomb_contents, weapon))) ::: (The tomb in which the object was found did not contain any other objects that might have been weapons)\nis_weakened(Not(supports(artistry, speaking_staff))) ::: (The object was carved with an artistry that was rare in Stone Age Ireland)\nis_weakened(supports(artistry, weapon)) ::: (A speaking staff with a stone head is thought to symbolize a warrior's mace)\nis_weakened(Not(supports(communal_objects, speaking_staff))) ::: (Communal objects were normally passed from one generation to the next in Stone Age Ireland)"
    ]
  },
  {
    "id": "test_755",
    "context": "A recent taste test reveals that most people like low-fat chocolate ice cream as much as its full-fat counterpart. Previous tests with vanilla ice cream found that people tended to dislike low-fat versions, complaining of a harsher taste. Chemists point out that chocolate is a very complex flavor, requiring around 500 distinct chemical compounds to produce it. Hence, this complexity probably masks any difference in taste due to the lack of fat.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "The subjects of the previous tests were not informed of the difference in fat content.",
      "Most people prefer full-fat chocolate ice cream to full-fat vanilla ice cream.",
      "Vanilla is known to be a significantly less complex flavor than chocolate.",
      "Most people are aware of the chemical complexities of different flavors."
    ],
    "raw_logic_programs": [
      "# Declarations\nflavors = EnumSort([chocolate, vanilla])\nfat_content = EnumSort([low_fat, full_fat])\npreferences = Function([flavors, fat_content] -> [int])\n\n# Constraints\npreferences(chocolate, low_fat) == preferences(chocolate, full_fat) ::: Most people like low-fat chocolate ice cream as much as its full-fat counterpart\npreferences(vanilla, low_fat) < preferences(vanilla, full_fat) ::: People tended to dislike low-fat versions of vanilla ice cream\ncomplexity(chocolate) > complexity(vanilla) ::: Chocolate is a very complex flavor, requiring around 500 distinct chemical compounds\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nis_strongest(And(complexity(vanilla) < complexity(chocolate))) ::: (C) Vanilla is known to be a significantly less complex flavor than chocolate"
    ]
  },
  {
    "id": "test_756",
    "context": "Every moral theory developed in the Western tradition purports to tell us what a good life is. However, most people would judge someone who perfectly embodied the ideals of any one of these theories not to be living a good life -- the kind of life they would want for themselves and their children.",
    "question": "The statements above, if true, most strongly support which one of the following?",
    "options": [
      "A good life as described by moral theories in the Western tradition cannot be realized.",
      "Most people have a conception of a good life that does not match that of any moral theory in the Western tradition.",
      "Most people desire a life for themselves and their children that is better than a merely good life.",
      "A person who fits the ideals of one moral theory in the Western tradition would not necessarily fit the ideals of another."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([WesternMoralTheory])\npeople = EnumSort([Person])\nideals = Function([theories, people] -> [bool])\ngood_life = Function([people] -> [bool])\n\n# Constraints\nForAll([t:theories, p:people], Implies(ideals(t, p), good_life(p))) ::: Every moral theory developed in the Western tradition purports to tell us what a good life is\nForAll([p:people], Not(good_life(p))) ::: Most people would judge someone who perfectly embodied the ideals of any one of these theories not to be living a good life\n\n# Options\nQuestion ::: The statements above, if true, most strongly support which one of the following?\nis_supported(ForAll([p:people], Not(Exists([t:theories], ideals(t, p))))) ::: (A) A good life as described by moral theories in the Western tradition cannot be realized.\nis_supported(ForAll([p:people], Not(Exists([t:theories], ideals(t, p) == good_life(p))))) ::: (B) Most people have a conception of a good life that does not match that of any moral theory in the Western tradition.\nis_supported(ForAll([p:people], Exists([t:theories], Not(ideals(t, p))))) ::: (C) Most people desire a life for themselves and their children that is better than a merely good life.\nis_supported(Exists([p1:people, p2:people], And(Exists([t1:theories], ideals(t1, p1)), Exists([t2:theories], ideals(t2, p2)), t1 != t2))) ::: (D) A person who fits the ideals of one moral theory in the Western tradition would not necessarily fit the ideals of another."
    ]
  },
  {
    "id": "test_757",
    "context": "The arctic fox was once the most common fox on the Northern Island. Recently, the number of red fox on the island surpassed, for the first time, that of the arctic fox. Nonetheless, both foxes eat the same prey and share the same environment.",
    "question": "Which of the following, if true, could best account for the decrease in arctic fox relative to the red fox?",
    "options": [
      "Because the arctic fox tends to live longer than the red fox, a greater percent of arctic fox are able to procreate than are the red fox.",
      "The polar bear, the arctic fox's primary predator, has become increasingly less common on the island.",
      "The red fox is able to digest food faster than the arctic fox can",
      "As a result of increased temperatures, much of the snow that had provided camouflage to the arctic fox is now gone."
    ],
    "raw_logic_programs": [
      "# Declarations\nfoxes = EnumSort([arctic_fox, red_fox])\nfactors = EnumSort([longevity, predator_presence, digestion_rate, camouflage])\nimpact = Function([factors, foxes] -> [int])\n\n# Constraints\nimpact(longevity, arctic_fox) > impact(longevity, red_fox) ::: The arctic fox tends to live longer than the red fox\nimpact(predator_presence, arctic_fox) < 0 ::: The polar bear, the arctic fox's primary predator, has become increasingly less common on the island\nimpact(digestion_rate, red_fox) > impact(digestion_rate, arctic_fox) ::: The red fox is able to digest food faster than the arctic fox can\nimpact(camouflage, arctic_fox) < 0 ::: As a result of increased temperatures, much of the snow that had provided camouflage to the arctic fox is now gone\n\n# Options\nQuestion ::: Which of the following, if true, could best account for the decrease in arctic fox relative to the red fox?\nis_best_account(impact(camouflage, arctic_fox) < 0) ::: (As a result of increased temperatures, much of the snow that had provided camouflage to the arctic fox is now gone)\nis_best_account(impact(digestion_rate, red_fox) > impact(digestion_rate, arctic_fox)) ::: (The red fox is able to digest food faster than the arctic fox can)\nis_best_account(impact(predator_presence, arctic_fox) < 0) ::: (The polar bear, the arctic fox's primary predator, has become increasingly less common on the island)\nis_best_account(impact(longevity, arctic_fox) > impact(longevity, red_fox)) ::: (Because the arctic fox tends to live longer than the red fox, a greater percent of arctic fox are able to procreate than are the red fox)"
    ]
  },
  {
    "id": "test_758",
    "context": "Electronic Wizard has invented a very compact hand-held extremely powerful electric vacuum pump, primarily for applications in computer manufacturing. They also plan to make a version with a filter for cleaning surfaces, and market this as a cleaning device to homeowners. This hand-held electric vacuum pump will only be able to clean small areas, so homeowners would still need to own a conventional vacuum cleaner.",
    "question": "Which of the following, if true, provides the strongest grounds for a prediction that homeowners will buy the hand-held electric vacuum pump cleaner?",
    "options": [
      "Houses in which a maid staff does the vacuuming are typically exceptionally clean.",
      "Some household areas traditionally have been very hard to clean because they are too small and confined for conventional vacuum cleaners to reach.",
      "When the homeowner is cleaning the larger area surfaces in the house, the hand-held electric vacuum pump will not need a filter replacement.",
      "Some types of household dirt do not require a tremendous amount of power to be picked up."
    ],
    "raw_logic_programs": [
      "# Declarations\ndevices = EnumSort([hand_held_vacuum, conventional_vacuum])\nareas = EnumSort([small_areas, large_areas])\ncleaning_needs = Function([areas] -> [bool])\npurchase_decision = Function([devices] -> [bool])\n\n# Constraints\ncleaning_needs(small_areas) == True ::: The hand-held electric vacuum pump will only be able to clean small areas\ncleaning_needs(large_areas) == True ::: Homeowners would still need to own a conventional vacuum cleaner\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest grounds for a prediction that homeowners will buy the hand-held electric vacuum pump cleaner?\nis_strongest_ground(Exists([a:areas], And(cleaning_needs(a), a == small_areas))) ::: (Some household areas traditionally have been very hard to clean because they are too small and confined for conventional vacuum cleaners to reach.)\nis_strongest_ground(Not(Exists([a:areas], And(cleaning_needs(a), a == small_areas)))) ::: (Houses in which a maid staff does the vacuuming are typically exceptionally clean.)\nis_strongest_ground(Exists([d:devices], And(purchase_decision(d), d == hand_held_vacuum))) ::: (When the homeowner is cleaning the larger area surfaces in the house, the hand-held electric vacuum pump will not need a filter replacement.)\nis_strongest_ground(Exists([d:devices], And(purchase_decision(d), d == conventional_vacuum))) ::: (Some types of household dirt do not require a tremendous amount of power to be picked up.)"
    ]
  },
  {
    "id": "test_759",
    "context": "Psychologist: In our study, participants who were offered the opportunity to purchase a coffee mug were not willing to pay more than $5. If, however, they were given a very similar mug and asked immediately afterwards how much they would be willing to sell it for, most of them held out for more than $5.",
    "question": "Which one of the following, if true, most helps to resolve the apparent discrepancy described above?",
    "options": [
      "A person's assessment of the value of an object depends on his or her evaluation of the inherent properties of the object.",
      "People are usually unable to judge the value of an object when they have possessed it for a long period of time.",
      "The amount a person is willing to spend on an object is determined by the amount that object sold for in the past.",
      "People tend to value an object that they do not own less than they value a very similar object that they already own."
    ],
    "raw_logic_programs": [
      "# Declarations\nparticipants = EnumSort([participant1, participant2, ..., participantN])\nmug_status = EnumSort([offered, given])\nwillingness_to_pay = Function([participants, mug_status] -> [int])\n\n# Constraints\nForAll([p:participants], willingness_to_pay(p, offered) <= 5) ::: Participants offered the opportunity to purchase a mug were not willing to pay more than $5\nForAll([p:participants], willingness_to_pay(p, given) > 5) ::: Participants given a mug held out for more than $5 when asked how much they would sell it for\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent discrepancy described above?\nis_resolving(ForAll([p:participants], willingness_to_pay(p, given) > willingness_to_pay(p, offered))) ::: (A) A person's assessment of the value of an object depends on his or her evaluation of the inherent properties of the object.\nis_resolving(ForAll([p:participants], willingness_to_pay(p, given) == willingness_to_pay(p, offered))) ::: (B) People are usually unable to judge the value of an object when they have possessed it for a long period of time.\nis_resolving(ForAll([p:participants], willingness_to_pay(p, given) == willingness_to_pay(p, offered))) ::: (C) The amount a person is willing to spend on an object is determined by the amount that object sold for in the past.\nis_resolving(ForAll([p:participants], willingness_to_pay(p, given) > willingness_to_pay(p, offered))) ::: (D) People tend to value an object that they do not own less than they value a very similar object that they already own."
    ]
  },
  {
    "id": "test_760",
    "context": "As a construction material, bamboo is as strong as steel and sturdier than concrete. Moreover, in tropical areas bamboo is a much less expensive construction material than either steel or concrete and is always readily available. In tropical areas, ttherefore, building with bamboo makes better economic sense than building with steel or concrete, except where land values are high.",
    "question": "Which of the following, if true, most helps to explain exception noted above?",
    "options": [
      "Bamboo growing in an area where land values are increasing is often cleared to make way for construction.",
      "Buildings constructed of bamboo are less likely to suffer earthquake damage than are steel and concrete buildings.",
      "In some tropical areas, bamboo is used to make the scaffolding that is used during large construction projects.",
      "Bamboo is unsuitable as a building material for multistory buildings."
    ],
    "raw_logic_programs": [
      "# Declarations\nmaterials = EnumSort([bamboo, steel, concrete])\nareas = EnumSort([tropical, high_land_value])\nuses = Function([materials, areas] -> [bool])\n\n# Constraints\nForAll([m:materials], And(uses(m, tropical), Not(uses(m, high_land_value)))) ::: In tropical areas, bamboo is a much less expensive construction material than either steel or concrete and is always readily available\nuses(bamboo, tropical) ::: In tropical areas, building with bamboo makes better economic sense than building with steel or concrete\nNot(uses(bamboo, high_land_value)) ::: except where land values are high\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the exception noted above?\nis_explanation(uses(bamboo, high_land_value) == False) ::: (A) Bamboo growing in an area where land values are increasing is often cleared to make way for construction.\nis_explanation(uses(bamboo, high_land_value) == True) ::: (B) Buildings constructed of bamboo are less likely to suffer earthquake damage than are steel and concrete buildings.\nis_explanation(uses(bamboo, high_land_value) == True) ::: (C) In some tropical areas, bamboo is used to make the scaffolding that is used during large construction projects.\nis_explanation(uses(bamboo, high_land_value) == False) ::: (D) Bamboo is unsuitable as a building material for multistory buildings."
    ]
  },
  {
    "id": "test_761",
    "context": "Whether or not one can rightfully call a person' s faithfulness a virtue depends in part on the object of that person' s faithfulness. Virtues are by definition praiseworthy, which is why no one considers resentment virtuous, even though it is in fact a kind of faithfulness -- faithfulness to hatreds or animosities.",
    "question": "Which one of the following most accurately expresses the overall conclusion drawn in the argument?",
    "options": [
      "The object of a person's faithfulness partially determines whether or not that faithfulness is virtuous.",
      "Virtuous behavior is praiseworthy by definition.",
      "Resentment should not be considered a virtuous emotion.",
      "Behavior that emerges from hatred or animosity cannot be called virtuous."
    ],
    "raw_logic_programs": [
      "# Declarations\nfaithfulness = EnumSort([virtuous, non_virtuous])\nobjects = EnumSort([praiseworthy, non_praiseworthy])\nvirtue = Function([faithfulness, objects] -> [bool])\n\n# Constraints\nForAll([f:faithfulness, o:objects], Implies(virtue(f, o), o == praiseworthy)) ::: Virtues are by definition praiseworthy\nNot(virtue(non_virtuous, non_praiseworthy)) ::: Resentment is not considered virtuous\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the overall conclusion drawn in the argument?\nis_conclusion(Exists([f:faithfulness, o:objects], And(f == virtuous, o == praiseworthy))) ::: (The object of a person's faithfulness partially determines whether or not that faithfulness is virtuous.\nis_conclusion(ForAll([f:faithfulness], Implies(f == virtuous, Exists([o:objects], o == praiseworthy)))) ::: (Virtuous behavior is praiseworthy by definition.\nis_conclusion(Not(virtue(non_virtuous, non_praiseworthy))) ::: (Resentment should not be considered a virtuous emotion.\nis_conclusion(ForAll([f:faithfulness], Implies(f == non_virtuous, Not(Exists([o:objects], o == praiseworthy))))) ::: (Behavior that emerges from hatred or animosity cannot be called virtuous."
    ]
  },
  {
    "id": "test_762",
    "context": "Essayist: People once believed that Earth was at the center of the universe, and that, ttherefore, Earth and its inhabitants were important. We now know that Earth revolves around a star at the outskirts of a spiral arm of one of countless galaxies. Ttherefore, people' s old belief that Earth and its inhabitants were important was false.",
    "question": "A flaw in the essayist's argument is that the argument",
    "options": [
      "fails to consider that there can be no reason for disbelieving a true statement",
      "neglects the fact that people's perception of their importance varies from culture to culture",
      "neglects to consider that a statement that was believed for questionable reasons may nevertheless have been true",
      "presumes, without providing justification, that only true statements can have good reasons to be believed"
    ],
    "raw_logic_programs": [
      "# Declarations\nbeliefs = EnumSort([old_belief, new_belief])\ntruth_values = EnumSort([true, false])\nimportance = EnumSort([important, not_important])\nreasons = EnumSort([good_reason, questionable_reason])\nstatements = Function([beliefs] -> [truth_values])\nperceptions = Function([beliefs] -> [importance])\njustifications = Function([truth_values] -> [reasons])\n\n# Constraints\nstatements(old_belief) == false ::: People once believed that Earth and its inhabitants were important, but the essayist argues this belief was false\nperceptions(old_belief) == important ::: People once believed that Earth and its inhabitants were important\nperceptions(new_belief) == not_important ::: The essayist argues that Earth and its inhabitants are not important based on new knowledge\n\n# Options\nQuestion ::: A flaw in the essayist's argument is that the argument\nis_flawed(ForAll([b:beliefs], Implies(statements(b) == true, Not(Exists([r:reasons], justifications(statements(b)) == r))))) ::: (A) fails to consider that there can be no reason for disbelieving a true statement\nis_flawed(Exists([b1:beliefs, b2:beliefs], And(b1 != b2, perceptions(b1) != perceptions(b2)))) ::: (B) neglects the fact that people's perception of their importance varies from culture to culture\nis_flawed(Exists([b:beliefs], And(statements(b) == true, justifications(statements(b)) == questionable_reason))) ::: (C) neglects to consider that a statement that was believed for questionable reasons may nevertheless have been true\nis_flawed(ForAll([t:truth_values], Implies(justifications(t) == good_reason, t == true))) ::: (D) presumes, without providing justification, that only true statements can have good reasons to be believed"
    ]
  },
  {
    "id": "test_763",
    "context": "Michaela: I think doctors who complain about patients doing medical research on the Internet are being a little unfair. It seems only natural that a patient would want to know as much as possible about his or her condition. Sam: It is not unfair. Doctors have undergone years of training. How can you maintain that a doctor's opinion is not worth more than something an untrained person comes up with after searching the Internet?",
    "question": "Sam's response indicates that he interpreted Michaela's remarks to mean that",
    "options": [
      "patients who do not research their conditions on the Internet give their doctors' opinions more consideration",
      "the opinion of a patient who has done Internet research on his or her condition should have at least as much weight as the opinion of a doctor",
      "health information found on the Internet is trustworthy",
      "the opinion of a patient's own doctor should not be given more weight than the opinions of doctors published on websites"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Michaela, Sam])\ninterpretations = EnumSort([patients_consider_doctors_more, patient_opinion_equal_doctor, internet_info_trustworthy, own_doctor_not_more_weight])\ninterprets = Function([statements] -> [interpretations])\n\n# Constraints\ninterprets(Michaela) == patient_opinion_equal_doctor ::: Michaela's statement suggests that patients' opinions, informed by Internet research, should be considered\n\n# Options\nQuestion ::: Sam's response indicates that he interpreted Michaela's remarks to mean that\nis_interpreted(interprets(Sam) == patients_consider_doctors_more) ::: (patients who do not research their conditions on the Internet give their doctors' opinions more consideration\nis_interpreted(interprets(Sam) == patient_opinion_equal_doctor) ::: (the opinion of a patient who has done Internet research on his or her condition should have at least as much weight as the opinion of a doctor\nis_interpreted(interprets(Sam) == internet_info_trustworthy) ::: (health information found on the Internet is trustworthy\nis_interpreted(interprets(Sam) == own_doctor_not_more_weight) ::: (the opinion of a patient's own doctor should not be given more weight than the opinions of doctors published on websites"
    ]
  },
  {
    "id": "test_764",
    "context": "Researchers recently asked dozens of shoppers, chosen at random coming out of a FoodBasket supermarket, what they had purchased. The prices of the very same items at the nearest ShopperKing supermarket were totaled and compared with the FoodBasket total. The ShopperKing totals averaged five percent higher than the FoodBasket totals. Nevertheless, this result does not necessarily show that shoppers at ShopperKing would save money overall by shopping at FoodBasket instead, since __.",
    "question": "Which of the following most logically completes the argument?",
    "options": [
      "shoppers who shop regularly at a given supermarket generally choose that store for the low prices offered on the items that they purchase most often",
      "none of the people who conducted the research were employees of the FoodBasket supermarket",
      "for shoppers with more than 20 items, the ShopperKing totals averaged more than five percent higher than the FoodBasket totals",
      "there is little variation from month to month in the overall quantity of purchases made at supermarkets by a given shopper"
    ],
    "raw_logic_programs": [
      "# Declarations\nshoppers = EnumSort([random_shoppers])\nsupermarkets = EnumSort([FoodBasket, ShopperKing])\nitems = EnumSort([item1, item2, ..., itemN])  # Assuming a finite set of items\nprices = Function([supermarkets, items] -> [float])\ntotals = Function([supermarkets, shoppers] -> [float])\n\n# Constraints\nForAll([s:shoppers], totals(ShopperKing, s) == Sum([i:items], prices(ShopperKing, i))) ::: The ShopperKing totals are the sum of the prices of items\nForAll([s:shoppers], totals(FoodBasket, s) == Sum([i:items], prices(FoodBasket, i))) ::: The FoodBasket totals are the sum of the prices of items\nAverage([s:shoppers], totals(ShopperKing, s)) == 1.05 * Average([s:shoppers], totals(FoodBasket, s)) ::: The ShopperKing totals averaged five percent higher than the FoodBasket totals\n\n# Options\nQuestion ::: Which of the following most logically completes the argument?\nis_logical(ForAll([s:shoppers], Exists([i:items], prices(FoodBasket, i) < prices(ShopperKing, i)))) ::: (A) shoppers who shop regularly at a given supermarket generally choose that store for the low prices offered on the items that they purchase most often\nis_logical(Not(Exists([p:people], employee(p, FoodBasket)))) ::: (B) none of the people who conducted the research were employees of the FoodBasket supermarket\nis_logical(ForAll([s:shoppers], Count([i:items], i > 20) -> totals(ShopperKing, s) > 1.05 * totals(FoodBasket, s))) ::: (C) for shoppers with more than 20 items, the ShopperKing totals averaged more than five percent higher than the FoodBasket totals\nis_logical(ForAll([s:shoppers], Consistent([m:months], purchases(s, m)))) ::: (D) there is little variation from month to month in the overall quantity of purchases made at supermarkets by a given shopper"
    ]
  },
  {
    "id": "test_765",
    "context": "The ancient Nubians inhabited an area in which typhus occurs, yet surprisingly few of their skeletons show the usual evidence of this disease. The skeletons do show deposits of tetracycline, an antibiotic produced by a bacterium common in Nubian soil. This bacterium can flourish on the dried grain used for making two staples of the Nubian diet, beer and bread. Thus, tetracycline in their food probably explains the low incidence of typhus among ancient Nubians.",
    "question": "Which of the following is an assumption on which the argument relies?",
    "options": [
      "Bread and beer were the only items in the diet of the ancient Nubians which could have contained tetracycline",
      "Tetracycline is not rendered ineffective as an antibiotic by exposure to the processes involved in making bread and beer",
      "Infectious diseases other than typhus to which the ancient Nubians were exposed are unaffected by tetracycline",
      "Typhus is generally fatal"
    ],
    "raw_logic_programs": [
      "# Declarations\n- skeletons = EnumSort([Nubian_skeletons])\n- diseases = EnumSort([typhus])\n- foods = EnumSort([bread, beer])\n- substances = EnumSort([tetracycline])\n- processes = EnumSort([making_bread, making_beer])\n- contains = Function([foods, substances] -> [bool])\n- effective = Function([substances, diseases] -> [bool])\n- exposed = Function([skeletons, diseases] -> [bool])\n- evidence = Function([skeletons, diseases] -> [bool])\n\n# Constraints\n- ForAll([s:skeletons, d:diseases], Implies(exposed(s, d), evidence(s, d))) ::: If exposed to a disease, there should be evidence of it\n- ForAll([f:foods], contains(f, tetracycline)) ::: Bread and beer contain tetracycline\n- ForAll([s:skeletons], Not(evidence(s, typhus))) ::: Few skeletons show evidence of typhus\n- ForAll([s:skeletons], Not(exposed(s, typhus))) ::: Low incidence of typhus among ancient Nubians\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument relies?\n- is_assumption(ForAll([p:processes], Not(affects(p, tetracycline)))) ::: (Tetracycline is not rendered ineffective as an antibiotic by exposure to the processes involved in making bread and beer)\n- is_assumption(ForAll([d:diseases], Implies(d != typhus, Not(effective(tetracycline, d))))) ::: (Infectious diseases other than typhus to which the ancient Nubians were exposed are unaffected by tetracycline)\n- is_assumption(ForAll([d:diseases], Implies(d == typhus, Not(fatal(d))))) ::: (Typhus is generally fatal)"
    ]
  },
  {
    "id": "test_766",
    "context": "Generally, of any two animal species, the species whose ratio of brain mass to body mass is greater will be the more intelligent. However, it has been established that many great mathematicians have brains considerably smaller, relative to their bodies, than the average human. This indicates that while the ratio of brain mass to body mass is a reliable indication of intelligence across species, this is not so within species.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "The ratio of brain mass to body mass is the most reliable indicator of intelligence across animal species.",
      "There are some great mathematicians with a relatively low ratio of brain mass to body mass who are more intelligent than the average human.",
      "The ratio of brain mass to body mass in humans is in no way correlated with mathematical ability.",
      "The ratio of brain mass to body mass within animal species tends not to vary greatly."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([animal_species, human])\ntraits = EnumSort([brain_mass, body_mass, intelligence])\nratio = Function([species, traits] -> [float])\n\n# Constraints\nForAll([s1:species, s2:species], Implies(ratio(s1, brain_mass) / ratio(s1, body_mass) > ratio(s2, brain_mass) / ratio(s2, body_mass), ratio(s1, intelligence) > ratio(s2, intelligence))) ::: The species whose ratio of brain mass to body mass is greater will be the more intelligent across species\nExists([m:species], And(m == human, ratio(m, brain_mass) / ratio(m, body_mass) < average_human_ratio, ratio(m, intelligence) > average_human_intelligence)) ::: Many great mathematicians have brains considerably smaller, relative to their bodies, than the average human\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(ForAll([s:species], Implies(s == animal_species, ratio(s, brain_mass) / ratio(s, body_mass) is the most reliable indicator of intelligence))) ::: (A)\nis_assumption(Exists([m:species], And(m == human, ratio(m, brain_mass) / ratio(m, body_mass) < average_human_ratio, ratio(m, intelligence) > average_human_intelligence))) ::: (B)\nis_assumption(Not(Exists([m:species], And(m == human, ratio(m, brain_mass) / ratio(m, body_mass) is correlated with mathematical ability)))) ::: (C)\nis_assumption(ForAll([s:species], Implies(s == animal_species, ratio(s, brain_mass) / ratio(s, body_mass) tends not to vary greatly))) ::: (D)"
    ]
  },
  {
    "id": "test_767",
    "context": "Since the sweetness of sugared beverages makes athletes more likely to drink them, they can be helpful in avoiding dehydration. Furthermore, small amounts of sugar enhance the body' s absorption of water and delay muscle fatigue by maintaining the body' s glucose level. Still, one must use sugared beverages cautiously, for large amounts draw water from the blood to the stomach, thereby exacerbating the dehydration process.",
    "question": "If the statements above are true, then each of the following could also be true EXCEPT:",
    "options": [
      "Glucose is not the only type of sugar whose absence or scarcity in one's diet causes muscle fatigue.",
      "Some situations that exacerbate the problems caused by muscle fatigue do not exacerbate those caused by dehydration.",
      "The rate at which the body absorbs water depends primarily on the amount of water already present in the blood.",
      "Problems caused by dehydration are invariably exacerbated if substances that delay muscle fatigue are consumed."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([sweetness_increases_drinking, small_sugar_enhances_absorption, large_sugar_exacerbates_dehydration])\ntruth = Function([statements] -> [bool])\n\n# Constraints\ntruth(sweetness_increases_drinking) ::: The sweetness of sugared beverages makes athletes more likely to drink them\ntruth(small_sugar_enhances_absorption) ::: Small amounts of sugar enhance the body's absorption of water and delay muscle fatigue by maintaining the body's glucose level\ntruth(large_sugar_exacerbates_dehydration) ::: Large amounts draw water from the blood to the stomach, thereby exacerbating the dehydration process\n\n# Options\nQuestion ::: If the statements above are true, then each of the following could also be true EXCEPT:\nis_exception(is_sat(Exists([sugar_type], Not(sugar_type == glucose) And(absence_causes_fatigue(sugar_type))))) ::: (Glucose is not the only type of sugar whose absence or scarcity in one's diet causes muscle fatigue.\nis_exception(is_sat(Exists([situation], And(exacerbates_fatigue(situation), Not(exacerbates_dehydration(situation)))))) ::: (Some situations that exacerbate the problems caused by muscle fatigue do not exacerbate those caused by dehydration.\nis_exception(is_sat(Exists([rate], Depends(rate, water_in_blood)))) ::: (The rate at which the body absorbs water depends primarily on the amount of water already present in the blood.\nis_exception(is_sat(ForAll([problem], Implies(exacerbates_dehydration(problem), exacerbates_fatigue(problem))))) ::: (Problems caused by dehydration are invariably exacerbated if substances that delay muscle fatigue are consumed."
    ]
  },
  {
    "id": "test_768",
    "context": "Fund-raiser: A charitable organization rarely gives its donors the right to vote on its policies. The inability to directly influence how charities spend contributions makes potential donors feel less of an emotional connection to the charity. Thus, most charities could probably increase the amount of money they raise through donations by giving donors the right to vote.",
    "question": "Which one of the following is an assumption that the fund-raiser's argument depends on?",
    "options": [
      "Most charities that have increased the amount of money they raise through donations have done so by making potential donors feel a greater emotional connection to the charity.",
      "Every charity that has given donors the right to vote on its policies has seen a marked increase in the emotional connection donors have to that charity.",
      "The emotional connection potential donors feel to a charity can affect the amount of money that charity raises through donations.",
      "Most potential donors to a charity are unwilling to give that charity any money if there is no possible way for them to have any influence on that charity's policies."
    ],
    "raw_logic_programs": [
      "# Declarations\ncharities = EnumSort([charity])\ndonors = EnumSort([donor])\npolicies = EnumSort([vote, no_vote])\nemotional_connection = Function([donors, charities] -> [bool])\ndonation_amount = Function([charities] -> [int])\n\n# Constraints\nForAll([c:charities], Or(policies(c) == vote, policies(c) == no_vote)) ::: A charitable organization rarely gives its donors the right to vote on its policies\nForAll([d:donors, c:charities], Implies(policies(c) == no_vote, Not(emotional_connection(d, c)))) ::: The inability to directly influence how charities spend contributions makes potential donors feel less of an emotional connection to the charity\n\n# Options\nQuestion ::: Which one of the following is an assumption that the fund-raiser's argument depends on?\nis_assumption(ForAll([d:donors, c:charities], Implies(emotional_connection(d, c), donation_amount(c) > 0))) ::: (The emotional connection potential donors feel to a charity can affect the amount of money that charity raises through donations."
    ]
  },
  {
    "id": "test_769",
    "context": "Early pencil leads were made of solid graphite mined in Cumberland, in Britain. Modern methods of manufacturing pencil leads from powdered graphite are the result of research sponsored by the government of France in the 1790s, when France was at war with Britain and thus had no access to Cumberland graphite.",
    "question": "The information above most strongly supports which one of the following?",
    "options": [
      "In the 1790s, France's government did not know of any accessible source of solid graphite appropriate to meet France's need for pencils.",
      "The world's only deposit of graphite suitable for manufacture of pencils is in Cumberland, in Britain.",
      "Even today, all pencil leads contain Cumberland graphite.",
      "One of the causes of war between France and Britain in the 1790s was the British government's attempt to limit the amount of Cumberland graphite being exported to France."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([France, Britain])\nmaterials = EnumSort([solid_graphite, powdered_graphite])\nsources = EnumSort([Cumberland, other_sources])\ntime_periods = EnumSort([1790s])\naccess = Function([countries, materials, sources, time_periods] -> [bool])\nresearch = Function([countries, materials, time_periods] -> [bool])\n\n# Constraints\nNot(access(France, solid_graphite, Cumberland, 1790s)) ::: France had no access to Cumberland graphite in the 1790s\nresearch(France, powdered_graphite, 1790s) ::: France conducted research on powdered graphite in the 1790s\n\n# Options\nQuestion ::: The information above most strongly supports which one of the following?\nis_supported(Not(Exists([s:sources], access(France, solid_graphite, s, 1790s)))) ::: (A) In the 1790s, France's government did not know of any accessible source of solid graphite appropriate to meet France's need for pencils.\nis_supported(ForAll([s:sources], Implies(s != Cumberland, Not(access(Britain, solid_graphite, s, 1790s))))) ::: (B) The world's only deposit of graphite suitable for manufacture of pencils is in Cumberland, in Britain.\nis_supported(ForAll([t:time_periods], Exists([s:sources], access(Britain, solid_graphite, s, t)))) ::: (C) Even today, all pencil leads contain Cumberland graphite.\nis_supported(Exists([t:time_periods], access(France, solid_graphite, Cumberland, t))) ::: (D) One of the causes of war between France and Britain in the 1790s was the British government's attempt to limit the amount of Cumberland graphite being exported to France."
    ]
  },
  {
    "id": "test_770",
    "context": "In an experiment, ten people were asked to taste samples of coffee and rank them. Five of the people were given chocolate with the coffee, and this group subsequently reported that all the coffee samples tasted pretty much the same as one another. Five others tasted coffee only, and they were able to detect differences. Clearly, then, chocolate interferes with one' s ability to taste coffee.",
    "question": "Which one of the following, if true, most undermines the conclusion drawn above?",
    "options": [
      "Some subjects who tasted just coffee reported only subtle differences between the coffee samples, while others thought the differences were considerable.",
      "The five people who were originally given chocolate were asked a week later to taste coffee samples without chocolate, and they still detected no differences between the coffee samples.",
      "Chocolate is normally consumed as a solid, whereas coffee is normally consumed as a liquid.",
      "The ten people were randomly assigned to either the group that tasted only coffee or the group that was also given chocolate, although some people had asked to be in the group that received chocolate."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, person3, person4, person5, person6, person7, person8, person9, person10])\ngroups = EnumSort([chocolate, no_chocolate])\ntastes = Function([people] -> [groups])\ndetects_differences = Function([people] -> [bool])\n\n# Constraints\nCount([p:people], tastes(p) == chocolate) == 5 ::: Five of the people were given chocolate with the coffee\nCount([p:people], tastes(p) == no_chocolate) == 5 ::: Five others tasted coffee only\nForAll([p:people], Implies(tastes(p) == chocolate, Not(detects_differences(p)))) ::: The group given chocolate reported that all the coffee samples tasted the same\nForAll([p:people], Implies(tastes(p) == no_chocolate, detects_differences(p))) ::: The group without chocolate detected differences\n\n# Options\nQuestion ::: Which one of the following, if true, most undermines the conclusion drawn above?\nis_undermining(Exists([p:people], And(tastes(p) == no_chocolate, detects_differences(p) == subtle))) ::: (A) Some subjects who tasted just coffee reported only subtle differences between the coffee samples, while others thought the differences were considerable.\nis_undermining(ForAll([p:people], Implies(tastes(p) == chocolate, Not(detects_differences(p))))) ::: (B) The five people who were originally given chocolate were asked a week later to taste coffee samples without chocolate, and they still detected no differences between the coffee samples.\nis_undermining(True) ::: (C) Chocolate is normally consumed as a solid, whereas coffee is normally consumed as a liquid.\nis_undermining(Exists([p:people], And(tastes(p) == chocolate, requested_chocolate(p)))) ::: (D) The ten people were randomly assigned to either the group that tasted only coffee or the group that was also given chocolate, although some people had asked to be in the group that received chocolate."
    ]
  },
  {
    "id": "test_771",
    "context": "Political philosopher: A just system of taxation would require each person' s contribution to correspond directly to the amount the society as a whole contributes to serve that person' s interests. For purposes of taxation, wealth is the most objective way to determine how well the society has served the interest of any individual. Ttherefore, each person should be taxed solely in proportion to her or his income.",
    "question": "The flawed reasoning in the political philosopher's argument is most similar to that in which one of the following?",
    "options": [
      "Everyone should pay taxes solely in proportion to the benefits they receive from government. Many government programs provide subsidies for large corporations. Ttherefore, a just tax would require corporations to pay a greater share of their income in taxes than individual citizens pay.",
      "Cars should be taxed in proportion to the danger that they pose. The most reliable measure of this danger is the speed at which a car can travel. Ttherefore, cars should be taxed only in proportion to their ability to accelerate quickly.",
      "People should be granted autonomy in proportion to their maturity. A certain psychological test was designed to provide an objective measure of maturity. Ttherefore, those scoring above high school level on the test should be granted complete autonomy.",
      "Justice requires that health care be given in proportion to each individual's need. Ttherefore, we need to ensure that the most seriously ill hospital patients are given the highest priority for receiving care."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nflawed_reasoning = Function([arguments] -> [bool])\n\n# Constraints\nflawed_reasoning(A) == True ::: The argument suggests that corporations should pay more taxes based on subsidies received, similar to the flawed reasoning of taxing based on income as a measure of societal contribution.\nflawed_reasoning(B) == True ::: The argument suggests taxing cars based on speed, similar to the flawed reasoning of using income as a measure of societal contribution.\nflawed_reasoning(C) == True ::: The argument suggests granting autonomy based on a test score, similar to the flawed reasoning of using income as a measure of societal contribution.\nflawed_reasoning(D) == False ::: The argument focuses on prioritizing health care based on need, which does not parallel the flawed reasoning of using income as a measure of societal contribution.\n\n# Options\nQuestion ::: The flawed reasoning in the political philosopher's argument is most similar to that in which one of the following?\nis_similar(flawed_reasoning(A)) ::: (A)\nis_similar(flawed_reasoning(B)) ::: (B)\nis_similar(flawed_reasoning(C)) ::: (C)\nis_similar(flawed_reasoning(D)) ::: (D)"
    ]
  },
  {
    "id": "test_772",
    "context": "People who have never been asked to do more than they can easily do are people who never do all they can. Alex is someone who has clearly not done all that he is capable of doing, so obviously no one has ever pushed him to do more than what comes to him easily.",
    "question": "The flawed reasoning in which one of the following is most similar to the flawed reasoning in the argument above?",
    "options": [
      "Any person who does not face sufficient challenges is a person who does not accomplish everything he or she can. Jill is a person who accomplishes everything she can, so Jill is a person who faces sufficient challenges.",
      "People who have never lost something that they cannot afford to lose will be lax about keeping their property secure. Jon is lax about keeping property secure when it is something he can afford to lose, so Jon must never have lost anything.",
      "Anybody who has a dog knows the true value of companionship, and Alicia has demonstrated that she knows the true value of companionship; thus we can safely conclude that Alicia has a dog.",
      "Anyone who discovers something new is someone who has examined all the possible solutions to a problem. Fran has surely never discovered something new. Ttherefore, Fran has never explored all the possible solutions to a problem."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Alex])\nactions = EnumSort([do_more_than_easy, do_all_they_can])\nconditions = EnumSort([pushed, not_pushed])\nstatus = Function([people, actions] -> [bool])\npushed_status = Function([people] -> [conditions])\n\n# Constraints\nForAll([p:people], Implies(Not(status(p, do_more_than_easy)), Not(status(p, do_all_they_can)))) ::: People who have never been asked to do more than they can easily do are people who never do all they can\nNot(status(Alex, do_all_they_can)) ::: Alex is someone who has clearly not done all that he is capable of doing\npushed_status(Alex) == not_pushed ::: No one has ever pushed him to do more than what comes to him easily\n\n# Options\nQuestion ::: The flawed reasoning in which one of the following is most similar to the flawed reasoning in the argument above?\nis_similar_flaw(ForAll([p:people], Implies(Not(status(p, do_more_than_easy)), Not(status(p, do_all_they_can))), status(Jill, do_all_they_can), pushed_status(Jill) == pushed)) ::: (A)\nis_similar_flaw(ForAll([p:people], Implies(Not(status(p, do_more_than_easy)), Not(status(p, do_all_they_can))), Not(status(Jon, do_all_they_can)), pushed_status(Jon) == not_pushed)) ::: (B)\nis_similar_flaw(ForAll([p:people], Implies(Not(status(p, do_more_than_easy)), Not(status(p, do_all_they_can))), status(Alicia, do_all_they_can), pushed_status(Alicia) == pushed)) ::: (C)\nis_similar_flaw(ForAll([p:people], Implies(Not(status(p, do_more_than_easy)), Not(status(p, do_all_they_can))), Not(status(Fran, do_all_they_can)), pushed_status(Fran) == not_pushed)) ::: (D)"
    ]
  },
  {
    "id": "test_773",
    "context": "A recent study conducted near the southwestern border of the San Joaquin Valley found no traces of the giant kangaroo rat, an endangered species. The researchers laid traps baited with oats and left them for several weeks during the summer, monitoring the traps on a daily basis. Two years ago, the researchers conducted the same study and caught more than one thousand giant kangaroo rats. If any of the animals had been present, the researchers would have surely caught at least one, so this is conclusive evidence that the giant kangaroo rat must be extinct.",
    "question": "Which one of the following assumptions does the author most rely upon?",
    "options": [
      "The giant kangaroo rat forages during the summer months.",
      "The researchers did not make any mistakes during the study.",
      "The giant kangaroo rats eat oats.",
      "The giant kangaroo rat does not live anywhere outside of the San Joaquin Valley."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([giant_kangaroo_rat])\nlocations = EnumSort([southwestern_border_of_San_Joaquin_Valley])\nactivities = EnumSort([forages, eats_oats])\nstudy_periods = EnumSort([two_years_ago, recent_study])\ntraps = Function([species, locations, study_periods] -> [bool])\nbehaviors = Function([species, activities] -> [bool])\n\n# Constraints\nForAll([s:species, l:locations, p:study_periods], traps(s, l, p) == True) ::: The researchers laid traps baited with oats and left them for several weeks during the summer, monitoring the traps on a daily basis\ntraps(giant_kangaroo_rat, southwestern_border_of_San_Joaquin_Valley, two_years_ago) == True ::: Two years ago, the researchers conducted the same study and caught more than one thousand giant kangaroo rats\ntraps(giant_kangaroo_rat, southwestern_border_of_San_Joaquin_Valley, recent_study) == False ::: A recent study conducted near the southwestern border of the San Joaquin Valley found no traces of the giant kangaroo rat\nForAll([s:species, l:locations], Implies(traps(s, l, recent_study) == False, Not(Exists([p:study_periods], traps(s, l, p) == True)))) ::: If any of the animals had been present, the researchers would have surely caught at least one\n\n# Options\nQuestion ::: Which one of the following assumptions does the author most rely upon?\nis_assumption(behaviors(giant_kangaroo_rat, forages) == True) ::: (The giant kangaroo rat forages during the summer months.\nis_assumption(ForAll([s:species, l:locations, p:study_periods], traps(s, l, p) == True)) ::: (The researchers did not make any mistakes during the study.\nis_assumption(behaviors(giant_kangaroo_rat, eats_oats) == True) ::: (The giant kangaroo rats eat oats.\nis_assumption(Not(Exists([l:locations], traps(giant_kangaroo_rat, l, recent_study) == True))) ::: (The giant kangaroo rat does not live anywhere outside of the San Joaquin Valley."
    ]
  },
  {
    "id": "test_774",
    "context": "It is not reasonable to search out \"organic\" foods -- those grown without the application of synthetic chemicals -- as the only natural foods. A plant will take up the molecules it needs from the soil and turn them into the same natural compounds, whether or not those molecules come from chemicals applied to the soil. All compounds made by plants are part of nature, so all are equally natural.",
    "question": "The argument proceeds by",
    "options": [
      "giving a reason why a recommended course of action would be beneficial",
      "appealing to the authority of scientific methods",
      "redefining a term in a way that is favorable to the argument",
      "reinterpreting evidence presented as supporting the position being rejected"
    ],
    "raw_logic_programs": [
      "# Declarations\nterms = EnumSort([organic_foods, natural_foods, synthetic_chemicals, natural_compounds])\nactions = EnumSort([search_out, apply_chemicals])\narguments = EnumSort([reason, authority, redefine, reinterpret])\nproceeds_by = Function([arguments] -> [bool])\n\n# Constraints\nForAll([t:terms], Or(t == organic_foods, t == natural_foods, t == synthetic_chemicals, t == natural_compounds)) ::: Terms used in the argument\nForAll([a:actions], Or(a == search_out, a == apply_chemicals)) ::: Actions mentioned in the argument\nForAll([arg:arguments], Or(arg == reason, arg == authority, arg == redefine, arg == reinterpret)) ::: Possible ways the argument could proceed\n\n# Options\nQuestion ::: The argument proceeds by\nis_valid(proceeds_by(redefine)) ::: (redefining a term in a way that is favorable to the argument)\nis_valid(proceeds_by(reason)) ::: (giving a reason why a recommended course of action would be beneficial)\nis_valid(proceeds_by(authority)) ::: (appealing to the authority of scientific methods)\nis_valid(proceeds_by(reinterpret)) ::: (reinterpreting evidence presented as supporting the position being rejected)"
    ]
  },
  {
    "id": "test_775",
    "context": "Early urban societies could not have been maintained without large-scale farming nearby. This is because other methods of food acquisition, such as foraging, cannot support populations as dense as urban ones. Large-scale farming requires irrigation, which remained unfeasible in areas far from rivers or lakes until more recent times.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "In early times it was not possible to maintain urban societies in areas far from rivers or lakes.",
      "Only if farming is possible in the absence of irrigation can societies be maintained in areas far from rivers or lakes.",
      "Most peoples who lived in early times lived in areas near rivers or lakes.",
      "Early rural societies relied more on foraging than on agriculture for food."
    ],
    "raw_logic_programs": [
      "# Declarations\nurban_societies = EnumSort([early_urban, early_rural])\nfood_acquisition_methods = EnumSort([large_scale_farming, foraging])\nlocations = EnumSort([near_rivers_lakes, far_from_rivers_lakes])\nirrigation = EnumSort([feasible, unfeasible])\nsupport_population = Function([urban_societies, food_acquisition_methods] -> [bool])\nrequires_irrigation = Function([food_acquisition_methods] -> [bool])\nirrigation_feasibility = Function([locations] -> [irrigation])\n\n# Constraints\nsupport_population(early_urban, large_scale_farming) ::: Early urban societies could not have been maintained without large-scale farming nearby\nNot(support_population(early_urban, foraging)) ::: Foraging cannot support populations as dense as urban ones\nrequires_irrigation(large_scale_farming) ::: Large-scale farming requires irrigation\nirrigation_feasibility(far_from_rivers_lakes) == unfeasible ::: Irrigation remained unfeasible in areas far from rivers or lakes until more recent times\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(Not(support_population(early_urban, far_from_rivers_lakes))) ::: (A) In early times it was not possible to maintain urban societies in areas far from rivers or lakes.\nis_supported(Implies(Not(requires_irrigation(large_scale_farming)), support_population(early_urban, far_from_rivers_lakes))) ::: (B) Only if farming is possible in the absence of irrigation can societies be maintained in areas far from rivers or lakes.\nis_supported(Exists([p:urban_societies], support_population(p, near_rivers_lakes))) ::: (C) Most peoples who lived in early times lived in areas near rivers or lakes.\nis_supported(support_population(early_rural, foraging)) ::: (D) Early rural societies relied more on foraging than on agriculture for food."
    ]
  },
  {
    "id": "test_776",
    "context": "The difficulty with the proposed high-speed train line is that a used plane can be bought for one-third the price of the train line, and the plane, which is just as fast, can fly anywhere. The train would be a fixed linear system, and we live in a world that is spreading out in all directions and in which consumers choose the freewheel systems (cars, buses, aircraft), which do not have fixed routes. Thus a sufficient market for the train will not exist.",
    "question": "Which of the following, if true, most severely weakens the argument presented above?",
    "options": [
      "Cars, buses, and planes require the efforts of drivers and pilots to guide them, whereas the train will be guided mechanically.",
      "The high-speed train line cannot use currently underutilized train stations in large cities.",
      "Planes are not a free-wheel system because they can fly only between airports, which are less convenient for consumers than the highspeed train's stations would be.",
      "Cars and buses are not nearly as fast as the high-speed train will be."
    ],
    "raw_logic_programs": [
      "# Declarations\nmodes_of_transport = EnumSort([train, plane, car, bus])\nattributes = EnumSort([cost, speed, flexibility, convenience])\ncomparison = Function([modes_of_transport, attributes] -> [bool])\n\n# Constraints\ncomparison(plane, cost) == True ::: A used plane can be bought for one-third the price of the train line\ncomparison(plane, speed) == True ::: The plane is just as fast as the train\ncomparison(plane, flexibility) == True ::: The plane can fly anywhere\ncomparison(train, flexibility) == False ::: The train would be a fixed linear system\ncomparison(car, flexibility) == True ::: Cars are freewheel systems\ncomparison(bus, flexibility) == True ::: Buses are freewheel systems\ncomparison(plane, flexibility) == True ::: Planes are freewheel systems\ncomparison(train, market) == False ::: A sufficient market for the train will not exist\n\n# Options\nQuestion ::: Which of the following, if true, most severely weakens the argument presented above?\ncomparison(train, guidance) == True ::: (A) Cars, buses, and planes require the efforts of drivers and pilots to guide them, whereas the train will be guided mechanically.\ncomparison(train, infrastructure) == False ::: (B) The high-speed train line cannot use currently underutilized train stations in large cities.\ncomparison(plane, flexibility) == False ::: (C) Planes are not a free-wheel system because they can fly only between airports, which are less convenient for consumers than the high-speed train's stations would be.\ncomparison(car, speed) == False ::: (D) Cars and buses are not nearly as fast as the high-speed train will be."
    ]
  },
  {
    "id": "test_777",
    "context": "Scientist: Physicists claim that their system of careful peer review prevents scientific fraud in physics effectively. But biologists claimed the same thing for their field 20 years ago, and they turned out to be wrong. Since then, biologists have greatly enhanced their discipline' s safeguards against scientific fraud, thus preventing further major incidents. It would be conducive to progress in physics if physicists were to do the same thing.",
    "question": "The conclusion of the scientist's argument is most strongly supported if which one of the following is assumed?",
    "options": [
      "Major incidents of scientific fraud in a scientific discipline are deleterious to progress in that discipline.",
      "Very few incidents of even minor scientific fraud have occurred in biology over the last 20 years.",
      "Twenty years ago the system of peer review in biology was less effective in preventing scientific fraud than the system of peer review in physics is today.",
      "Over the years, there have been relatively few, if any, major incidents of scientific fraud in physics."
    ],
    "raw_logic_programs": [
      "# Declarations\ndisciplines = EnumSort([physics, biology])\nincidents = EnumSort([major, minor])\ntime_periods = EnumSort([past, present])\npeer_review_effectiveness = Function([disciplines, time_periods] -> [bool])\nfraud_incidents = Function([disciplines, incidents, time_periods] -> [int])\nprogress = Function([disciplines] -> [bool])\n\n# Constraints\npeer_review_effectiveness(biology, past) == False ::: Biologists claimed their peer review system was effective 20 years ago, but it was not\npeer_review_effectiveness(biology, present) == True ::: Biologists have enhanced their safeguards against scientific fraud\nfraud_incidents(biology, major, present) == 0 ::: Biologists have prevented further major incidents\nImplies(peer_review_effectiveness(physics, present), fraud_incidents(physics, major, present) == 0) ::: Physicists claim their peer review system prevents scientific fraud\n\n# Options\nQuestion ::: The conclusion of the scientist's argument is most strongly supported if which one of the following is assumed?\nImplies(fraud_incidents(physics, major, present) > 0, Not(progress(physics))) ::: (A) Major incidents of scientific fraud in a scientific discipline are deleterious to progress in that discipline.\nfraud_incidents(biology, minor, present) < 5 ::: (B) Very few incidents of even minor scientific fraud have occurred in biology over the last 20 years.\npeer_review_effectiveness(biology, past) < peer_review_effectiveness(physics, present) ::: (C) Twenty years ago the system of peer review in biology was less effective in preventing scientific fraud than the system of peer review in physics is today.\nfraud_incidents(physics, major, past) < 5 ::: (D) Over the years, there have been relatively few, if any, major incidents of scientific fraud in physics."
    ]
  },
  {
    "id": "test_778",
    "context": "Math teacher: In schools today, we no longer rely strictly on abstraction and form to teach our students math. Our students are embedded first with the knowledge that math is important for brain health; that is, studying math helps the brain remain active, recognize patterns, and develop creativity that undoubtedly helps all areas of brain function. Additionally, math is important for practical concepts such as counting change and figuring out percentages. However, even though abstract thought isn' t the only thing taught anymore in math, __.",
    "question": "The conclusion of the argument is most strongly supported if which one of the following completes the passage?",
    "options": [
      "the study of algebra is just the beginning of more difficult subjects for students. Modern technology is in great need of students who understand and can apply algebra to their work.",
      "it's still one of the most important: learning practical concepts facilitates a better relationship with cooking, finances, and even exercise, thus creating a more well-rounded human being who is capable of taking care of themselves and the people around them.",
      "it's not very important: abstract thought is really just a sounding board for too much thinking. Abstraction is the cause of useless arguments in ethics, love, and beauty, does not deserve the credit it's been given in the subject of mathematics.",
      "it's still one of the most important: having abstract thought means an ability to apply one formula to many situations, thus developing empathy and an understanding for other abstract concepts such as ethics, love, and beauty."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([abstraction, practical_concepts])\nimportance = EnumSort([important, not_important])\nteaching_methods = Function([concepts] -> [importance])\n\n# Constraints\nteaching_methods(practical_concepts) == important ::: Math is important for practical concepts such as counting change and figuring out percentages\nteaching_methods(abstraction) == important ::: Even though abstract thought isn't the only thing taught anymore in math, it's still one of the most important\n\n# Options\nQuestion ::: The conclusion of the argument is most strongly supported if which one of the following completes the passage?\nis_supported(teaching_methods(abstraction) == important) ::: (it's still one of the most important: learning practical concepts facilitates a better relationship with cooking, finances, and even exercise, thus creating a more well-rounded human being who is capable of taking care of themselves and the people around them.\nis_supported(teaching_methods(abstraction) == important) ::: (it's still one of the most important: having abstract thought means an ability to apply one formula to many situations, thus developing empathy and an understanding for other abstract concepts such as ethics, love, and beauty.\nis_supported(teaching_methods(abstraction) == not_important) ::: (it's not very important: abstract thought is really just a sounding board for too much thinking. Abstraction is the cause of useless arguments in ethics, love, and beauty, does not deserve the credit it's been given in the subject of mathematics.\nis_supported(teaching_methods(abstraction) == important) ::: (the study of algebra is just the beginning of more difficult subjects for students. Modern technology is in great need of students who understand and can apply algebra to their work."
    ]
  },
  {
    "id": "test_779",
    "context": "Because of a rare type of fungus that killed off many cacao trees in Brazil, there was an unusually meager harvest of cacao beans this year. The wholesale price of cocoa solids and cocoa butter has increased significantly and is unlikely to fall in the foreseeable future. As a result, the retail price of chocolate is certain to increase within six months.",
    "question": "Which of the following, if true, most seriously weakens the argument above?",
    "options": [
      "Consumers will purchase other sweets if the price of chocolate increases.",
      "The price of chocolate has decreased steadily for three years.",
      "Most chocolate in stores is manufactured from cocoa that was purchased two years earlier.",
      "Researchers have discovered an effective method to kill the fungus."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([cacao_harvest, wholesale_price, retail_price, consumer_behavior, chocolate_stock, research_discovery])\neffects = Function([variables] -> [bool])\n\n# Constraints\neffects(cacao_harvest) == False ::: There was an unusually meager harvest of cacao beans this year\neffects(wholesale_price) == True ::: The wholesale price of cocoa solids and cocoa butter has increased significantly\neffects(retail_price) == True ::: The retail price of chocolate is certain to increase within six months\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument above?\nis_weakening(effects(consumer_behavior) == True) ::: (Consumers will purchase other sweets if the price of chocolate increases.\nis_weakening(effects(retail_price) == False) ::: (The price of chocolate has decreased steadily for three years.\nis_weakening(effects(chocolate_stock) == True) ::: (Most chocolate in stores is manufactured from cocoa that was purchased two years earlier.\nis_weakening(effects(research_discovery) == True) ::: (Researchers have discovered an effective method to kill the fungus."
    ]
  },
  {
    "id": "test_780",
    "context": "Denise: Crime will be reduced only when punishment is certain and is sufficiently severe to give anyone considering committing a crime reason to decide against doing so. Reshmi: No, crime will be most effectively reduced if educational opportunities are made readily available to everyone, so that those who once viewed criminal activity as the only means of securing a comfortable lifestyle will choose a different path.",
    "question": "Their dialogue provides the most support for the claim that Denise and Reshmi agree that",
    "options": [
      "crime is the most important issue facing modern society",
      "reducing crime requires fair and consistent responses to criminal behavior",
      "people are capable of choosing whether or not to commit crimes",
      "reducing crime requires focusing on assured punishments"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Denise, Reshmi])\nactions = EnumSort([commit_crime, choose_different_path])\nfactors = EnumSort([punishment, education])\nbeliefs = Function([people, actions, factors] -> [bool])\n\n# Constraints\nbeliefs(Denise, commit_crime, punishment) ::: Denise believes crime will be reduced with certain and severe punishment\nbeliefs(Reshmi, choose_different_path, education) ::: Reshmi believes crime will be reduced with educational opportunities\n\n# Options\nQuestion ::: Their dialogue provides the most support for the claim that Denise and Reshmi agree that\nis_supported(Exists([a:actions], beliefs(Denise, a, punishment) && beliefs(Reshmi, a, education))) ::: (crime is the most important issue facing modern society)\nis_supported(Exists([a:actions], beliefs(Denise, a, punishment) && beliefs(Reshmi, a, punishment))) ::: (reducing crime requires fair and consistent responses to criminal behavior)\nis_supported(Exists([a:actions], beliefs(Denise, a, punishment) && beliefs(Reshmi, a, education))) ::: (people are capable of choosing whether or not to commit crimes)\nis_supported(Exists([a:actions], beliefs(Denise, a, punishment))) ::: (reducing crime requires focusing on assured punishments)"
    ]
  },
  {
    "id": "test_781",
    "context": "Doctors have repeatedly validated that the best national-brand medicines are indistinguishable from store-brand medicines with respect to the characteristics commonly measured in evaluating the effectiveness of a drug. Ttherefore, people who insist that they feel better after taking national-brand medicines than after they take store-brand medicines must be imagining the difference in the amount of improvement they claim to feel.",
    "question": "Which one of the following, if true, most seriously weakens the argument?",
    "options": [
      "National-brand medicines have better packaging, quicker impact, and longer-lasting results than store-brand medicines that produce a comparable feeling of wellness.",
      "Some of the characteristics that are important in how a medicine makes a person feel cannot be measured.",
      "The range of variation with respect to the quality of a medication is greater for store-brand medicines than for national-brand medicines.",
      "Many people cannot tell from simply taking a medicine whether it is a national-brand medicine or a store-brand medicine."
    ],
    "raw_logic_programs": [
      "# Declarations\nmedicines = EnumSort([national_brand, store_brand])\ncharacteristics = EnumSort([effectiveness, packaging, impact_speed, duration])\nmeasured = Function([characteristics] -> [bool])\nfeeling_better = Function([medicines] -> [bool])\n\n# Constraints\nForAll([c:characteristics], measured(c) == (c == effectiveness)) ::: Doctors have validated that the best national-brand medicines are indistinguishable from store-brand medicines with respect to the characteristics commonly measured in evaluating the effectiveness of a drug\nForAll([m:medicines], feeling_better(m) == (m == national_brand)) ::: People insist they feel better after taking national-brand medicines\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the argument?\nis_weakening(And(Not(measured(packaging)), Not(measured(impact_speed)), Not(measured(duration)))) ::: (A) National-brand medicines have better packaging, quicker impact, and longer-lasting results than store-brand medicines that produce a comparable feeling of wellness.\nis_weakening(Exists([c:characteristics], And(Not(measured(c)), c != effectiveness))) ::: (B) Some of the characteristics that are important in how a medicine makes a person feel cannot be measured.\nis_weakening(Exists([m:medicines], feeling_better(m) == (m == store_brand))) ::: (C) The range of variation with respect to the quality of a medication is greater for store-brand medicines than for national-brand medicines.\nis_weakening(Not(Exists([m:medicines], feeling_better(m) == (m == national_brand)))) ::: (D) Many people cannot tell from simply taking a medicine whether it is a national-brand medicine or a store-brand medicine."
    ]
  },
  {
    "id": "test_782",
    "context": "Commentator: Recently, articles criticizing the environmental movement have been appearing regularly in newspapers. According to Winslow, this is due not so much to an antienvironmental bias among the media as to a preference on the part of newspaper editors for articles that seem \"daring\" in that they seem to challenge prevailing political positions. It is true that editors like to run antienvironmental pieces mainly because they seem to challenge the political orthodoxy. But serious environmentalism is by no means politically orthodox, and antienvironmentalists can hardly claim to be dissidents, however much they may have succeeded in selling themselves as renegades.",
    "question": "The commentator's statements, if true, most strongly support which one of the following?",
    "options": [
      "The position attacked by critics of environmentalism is actually the prevailing political position.",
      "Critics of environmentalism have not successfully promoted themselves as renegades.",
      "Winslow's explanation is not consonant with the frequency with which critiques of environmentalism are published.",
      "Winslow is correct about the preference of newspaper editors for controversial articles."
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([environmentalism, antienvironmentalism])\nmedia_bias = Function([positions] -> [bool])\neditor_preference = Function([positions] -> [bool])\npolitical_orthodoxy = Function([positions] -> [bool])\nrenegade_status = Function([positions] -> [bool])\n\n# Constraints\nmedia_bias(antienvironmentalism) == False ::: According to Winslow, the frequency of antienvironmental articles is not due to media bias\neditor_preference(antienvironmentalism) == True ::: Editors prefer articles that seem to challenge prevailing political positions\npolitical_orthodoxy(environmentalism) == False ::: Serious environmentalism is not politically orthodox\nrenegade_status(antienvironmentalism) == False ::: Antienvironmentalists cannot claim to be dissidents\n\n# Options\nQuestion ::: The commentator's statements, if true, most strongly support which one of the following?\nis_supported(political_orthodoxy(antienvironmentalism) == True) ::: (A) The position attacked by critics of environmentalism is actually the prevailing political position.\nis_supported(renegade_status(antienvironmentalism) == False) ::: (B) Critics of environmentalism have not successfully promoted themselves as renegades.\nis_supported(editor_preference(antienvironmentalism) == False) ::: (C) Winslow's explanation is not consonant with the frequency with which critiques of environmentalism are published.\nis_supported(editor_preference(antienvironmentalism) == True) ::: (D) Winslow is correct about the preference of newspaper editors for controversial articles."
    ]
  },
  {
    "id": "test_783",
    "context": "Teacher: Most children' s fiction books are inferior books because they are simplistic and do not introduce new vocabulary. However, this is not terribly significant. These books generate the desired results: Fiction books tend to encourage children to read more often than do non-fiction books that have greater depth.",
    "question": "The statement that the fiction books tend to encourage children to read more plays which of the following roles in the teacher's argument?",
    "options": [
      "It is used as evidence that most children's fiction books are inferior.",
      "It is used to illustrate what teachers value most in children's non-fiction books.",
      "It is used to show that non-fiction books do not introduce new vocabulary.",
      "It is used to override some arguments against the children's fiction books."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([inferior_books, simplistic, no_new_vocab, not_significant, desired_results, encourage_reading, non_fiction_depth])\nroles = EnumSort([evidence_inferior, illustrate_value, show_non_fiction, override_arguments])\nplays_role = Function([statements] -> [roles])\n\n# Constraints\nplays_role(encourage_reading) == override_arguments ::: The statement that the fiction books tend to encourage children to read more plays which of the following roles in the teacher's argument?\n\n# Options\nQuestion ::: The statement that the fiction books tend to encourage children to read more plays which of the following roles in the teacher's argument?\nis_role(plays_role(encourage_reading) == evidence_inferior) ::: (It is used as evidence that most children's fiction books are inferior.\nis_role(plays_role(encourage_reading) == illustrate_value) ::: (It is used to illustrate what teachers value most in children's non-fiction books.\nis_role(plays_role(encourage_reading) == show_non_fiction) ::: (It is used to show that non-fiction books do not introduce new vocabulary.\nis_role(plays_role(encourage_reading) == override_arguments) ::: (It is used to override some arguments against the children's fiction books."
    ]
  },
  {
    "id": "test_784",
    "context": "Agriculture researcher: Because of its slow decomposition, paper is ineffective as a mulch to guard against soil erosion. However, a mixture of paper and manure, which decomposes faster than paper alone, is very effective. When spread over test plots, the mixture significantly decreased the amount of soil erosion. Since paper costs roughly the same as manure, farmers would be better off using this mixture than paper or manure alone.",
    "question": "The agriculture researcher's argument is flawed because it provides no evidence that",
    "options": [
      "mulch containing paper and manure works better than mulch containing only paper",
      "mulch of pure manure provides nutrients to the soil that paper mulch does not",
      "paper by itself does not contribute to soil erosion",
      "mulch containing paper and manure works better than mulch containing only manure"
    ],
    "raw_logic_programs": [
      "# Declarations\nmulch_types = EnumSort([paper, manure, paper_and_manure])\neffectiveness = Function([mulch_types] -> [bool])\n\n# Constraints\neffectiveness(paper) == false ::: paper is ineffective as a mulch to guard against soil erosion\neffectiveness(paper_and_manure) == true ::: a mixture of paper and manure is very effective\n\n# Options\nQuestion ::: The agriculture researcher's argument is flawed because it provides no evidence that\nis_unsat(effectiveness(paper_and_manure) > effectiveness(paper)) ::: (A) mulch containing paper and manure works better than mulch containing only paper\nis_unsat(effectiveness(manure) > effectiveness(paper)) ::: (B) mulch of pure manure provides nutrients to the soil that paper mulch does not\nis_unsat(Not(effectiveness(paper))) ::: (C) paper by itself does not contribute to soil erosion\nis_unsat(effectiveness(paper_and_manure) > effectiveness(manure)) ::: (D) mulch containing paper and manure works better than mulch containing only manure"
    ]
  },
  {
    "id": "test_785",
    "context": "Kale has more nutritional value than spinach. But since collard greens have more nutritional value than lettuce, it follows that kale has more nutritional value than lettuce.",
    "question": "Any of the following, if introduced into the argument as an additional premise, makes the argument above logically correct EXCEPT:",
    "options": [
      "Spinach has more nutritional value than collard greens",
      "Spinach and collard greens have the same nutritional value",
      "Collard greens have more nutritional value than kale",
      "Kale and collard greens have the same nutritional value"
    ],
    "raw_logic_programs": [
      "# Declarations\nvegetables = EnumSort([kale, spinach, collard_greens, lettuce])\nnutritional_value = Function([vegetables] -> [int])\n\n# Constraints\nnutritional_value(kale) > nutritional_value(spinach) ::: Kale has more nutritional value than spinach\nnutritional_value(collard_greens) > nutritional_value(lettuce) ::: Collard greens have more nutritional value than lettuce\n\n# Options\nQuestion ::: Any of the following, if introduced into the argument as an additional premise, makes the argument above logically correct EXCEPT:\nis_exception(is_sat(nutritional_value(spinach) > nutritional_value(collard_greens))) ::: (A) Spinach has more nutritional value than collard greens\nis_exception(is_sat(nutritional_value(spinach) == nutritional_value(collard_greens))) ::: (B) Spinach and collard greens have the same nutritional value\nis_exception(is_sat(nutritional_value(collard_greens) > nutritional_value(kale))) ::: (C) Collard greens have more nutritional value than kale\nis_exception(is_sat(nutritional_value(kale) == nutritional_value(collard_greens))) ::: (D) Kale and collard greens have the same nutritional value"
    ]
  },
  {
    "id": "test_786",
    "context": "Scientist: There is a finite amount of helium, which is a key component of MRI magnets, in the world. Because the supply is not renewable, it is frivolous to waste this precious resource on such products as party balloons. Instead, we should use other gases, such as hydrogen, to fill balloons, and the price of helium should be raised significantly to make it prohibitive for such trivial purposes.",
    "question": "Which of the following, if true, provides the strongest support for the suggestion that the price of helium should be raised?",
    "options": [
      "Other medical imaging tests exist that do not require helium to function.",
      "The cost of the helium used for medical purposes is already significantly higher than helium sold on the open market.",
      "80% of people who purchase gases for party balloons cite the price of helium as one of their top three considerations in choosing it.",
      "Hydrogen is at least as plentiful as helium, and is not a finite resource."
    ],
    "raw_logic_programs": [
      "# Declarations\nhelium_usage = EnumSort([medical, party_balloons])\nconsiderations = EnumSort([price, availability, safety])\nhelium_price = Function([helium_usage] -> [int])\nhelium_choice = Function([helium_usage] -> [considerations])\n\n# Constraints\nhelium_price(medical) > helium_price(party_balloons) ::: The cost of the helium used for medical purposes is already significantly higher than helium sold on the open market\nhelium_choice(party_balloons) == price ::: 80% of people who purchase gases for party balloons cite the price of helium as one of their top three considerations in choosing it\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest support for the suggestion that the price of helium should be raised?\nis_strongest_support(helium_choice(party_balloons) == price) ::: (C) 80% of people who purchase gases for party balloons cite the price of helium as one of their top three considerations in choosing it"
    ]
  },
  {
    "id": "test_787",
    "context": "Challenge can be an important source of self-knowledge, since those who pay attention to how they react, both emotionally and physically, to challenge can gain useful insights into their own weaknesses.",
    "question": "Which one of the following most closely conforms to the principle above?",
    "options": [
      "While some of the value of competition comes from the pleasure of winning, the primary reward of competition is competition itself.",
      "Even people who dread public speaking should accept invitations to speak before large groups. People will admire their courage and they will experience the fulfillment of having attempted something that is difficult for them.",
      "A concert pianist should not have an entirely negative view of a memory lapse during a difficult performance. By understanding why the memory lapse occurred, the pianist can better prepare for future performances.",
      "A salesperson should understand that the commission earned is not the only reward of making a sale. Salespeople should also take satisfaction from the fact that successful sales reflect well on their personalities."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciple = Function([situation] -> [bool])\n\n# Constraints\nForAll([s:situation], principle(s) == (Exists([reaction], And(pays_attention(reaction), gains_insight(reaction))))) ::: Challenge can be an important source of self-knowledge, since those who pay attention to how they react, both emotionally and physically, to challenge can gain useful insights into their own weaknesses.\n\n# Options\nQuestion ::: Which one of the following most closely conforms to the principle above?\nis_conformant(principle(concert_pianist_memory_lapse)) ::: (A)\nis_conformant(principle(public_speaking_invitation)) ::: (B)\nis_conformant(principle(competition_value)) ::: (C)\nis_conformant(principle(salesperson_satisfaction)) ::: (D)"
    ]
  },
  {
    "id": "test_788",
    "context": "After an oil spill, rehabilitation centers were set up to save sea otters by removing oil from them. The effort was not worthwhile, however, since 357 affected live otters and 900 that had died were counted, but only 222 affected otters, or 18 percent of those counted, were successfully rehabilitated and survived. Further, the percentage of all those affected that were successfully rehabilitated was much lower still, because only a fifth of the otters that died immediately were ever found.",
    "question": "Which one of the following, as potential challenges, most seriously calls into question evidence offered in support of the conclusion above?",
    "options": [
      "Were other species of wildlife besides sea otters negatively affected by the oil spill?",
      "Did the process of capturing sea otters unavoidably involve trapping and releasing some otters that were not affected by the spill?",
      "Do sea otters of species other than those represented among the otters counted exist in areas that were not affected by the oil spill?",
      "How is it possible to estimate, of the sea otters that died, how many were not found?"
    ],
    "raw_logic_programs": [
      "# Declarations\notters = EnumSort([affected_live, died, successfully_rehabilitated, died_immediately_found, died_immediately_not_found])\ncounts = Function([otters] -> [int])\n\n# Constraints\ncounts(affected_live) == 357 ::: 357 affected live otters were counted\ncounts(died) == 900 ::: 900 otters that had died were counted\ncounts(successfully_rehabilitated) == 222 ::: 222 affected otters were successfully rehabilitated and survived\ncounts(successfully_rehabilitated) == 0.18 * (counts(affected_live) + counts(died)) ::: 18 percent of those counted were successfully rehabilitated\ncounts(died_immediately_found) == 0.2 * counts(died_immediately_not_found) ::: only a fifth of the otters that died immediately were ever found\n\n# Options\nQuestion ::: Which one of the following, as potential challenges, most seriously calls into question evidence offered in support of the conclusion above?\nis_challenge(Exists([o:otters], o == other_species_affected)) ::: (A) Were other species of wildlife besides sea otters negatively affected by the oil spill?\nis_challenge(Exists([o:otters], o == trapped_unaffected)) ::: (B) Did the process of capturing sea otters unavoidably involve trapping and releasing some otters that were not affected by the spill?\nis_challenge(Exists([o:otters], o == other_species_unaffected)) ::: (C) Do sea otters of species other than those represented among the otters counted exist in areas that were not affected by the oil spill?\nis_challenge(Exists([o:otters], o == died_unfound)) ::: (D) How is it possible to estimate, of the sea otters that died, how many were not found?"
    ]
  },
  {
    "id": "test_789",
    "context": "Laws requiring the use of headlights during daylight hours can prevent automobile collisions. However, since daylight visibility is worse in countries farther from the equator, any such laws would obviously be more effective in preventing collisions in those countries. In fact, the only countries that actually have such laws are farther from the equator than is the continental United States.",
    "question": "Which of the following conclusions could be most properly drawn from the information given above?",
    "options": [
      "Daytime headlight laws would probably do less to prevent automobile collisions in the continental United States than they do in the countries that have the laws.",
      "The proportion of automobile collisions that occur in the daytime is greater in the continental United States than in the countries that have daytime headlight laws.",
      "In many countries that are farther from the equator than is the continental United States poor daylight visibility is the single most important factor in automobile collisions.",
      "Fewer automobile collisions probably occur each year in countries that have daytime headlight laws than occur within the continental United States."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([US, OtherCountries])\nlaws = Function([countries] -> [bool])\neffectiveness = Function([countries] -> [int])\n\n# Constraints\nlaws(OtherCountries) == True ::: The only countries that actually have such laws are farther from the equator than is the continental United States\neffectiveness(OtherCountries) > effectiveness(US) ::: Any such laws would obviously be more effective in preventing collisions in those countries\n\n# Options\nQuestion ::: Which of the following conclusions could be most properly drawn from the information given above?\nis_valid(effectiveness(US) < effectiveness(OtherCountries)) ::: Daytime headlight laws would probably do less to prevent automobile collisions in the continental United States than they do in the countries that have the laws.\nis_valid(False) ::: The proportion of automobile collisions that occur in the daytime is greater in the continental United States than in the countries that have daytime headlight laws.\nis_valid(False) ::: In many countries that are farther from the equator than is the continental United States poor daylight visibility is the single most important factor in automobile collisions.\nis_valid(False) ::: Fewer automobile collisions probably occur each year in countries that have daytime headlight laws than occur within the continental United States."
    ]
  },
  {
    "id": "test_790",
    "context": "A recent poll revealed that most students at our university prefer that the university, which is searching for a new president, hire someone who has extensive experience as a university president. However, in the very same poll, the person most students chose from among a list of leading candidates as the one they would most like to see hired was someone who has never served as a university president.",
    "question": "Which one of the following, if true, most helps to account for the apparent discrepancy in the students' preferences?",
    "options": [
      "Most of the students taking the poll did not know whether any of the leading candidates listed in the poll had ever served as a university president.",
      "Most of the candidates listed in the poll had extensive experience as university presidents.",
      "Because several of the candidates listed in the poll had extensive experience as university presidents, not all of the candidates could be differentiated on this basis alone.",
      "Often a person can be well suited to a position even though they have relatively little experience in such a position."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([student1, student2, ..., studentN])  # Represents each student who took the poll\ncandidates = EnumSort([candidate1, candidate2, ..., candidateM])  # Represents each candidate listed in the poll\nexperience = Function([candidates] -> [bool])  # True if a candidate has extensive experience as a university president\npreferred = Function([students] -> [candidates])  # The candidate each student most prefers\n\n# Constraints\nForAll([s:students], Exists([c:candidates], preferred(s) == c)) ::: Each student has a preferred candidate\nForAll([c:candidates], Or(experience(c), Not(experience(c)))) ::: Each candidate either has or does not have extensive experience\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to account for the apparent discrepancy in the students' preferences?\nis_explanation(ForAll([s:students], Not(KnowsExperience(s, preferred(s))))) ::: (A) Most of the students taking the poll did not know whether any of the leading candidates listed in the poll had ever served as a university president.\nis_explanation(Exists([c:candidates], And(experience(c), Count([c2:candidates], experience(c2)) > 1))) ::: (B) Most of the candidates listed in the poll had extensive experience as university presidents.\nis_explanation(Exists([c:candidates], And(experience(c), Count([c2:candidates], experience(c2)) > 1))) ::: (C) Because several of the candidates listed in the poll had extensive experience as university presidents, not all of the candidates could be differentiated on this basis alone.\nis_explanation(Exists([c:candidates], And(Not(experience(c)), WellSuited(c)))) ::: (D) Often a person can be well suited to a position even though they have relatively little experience in such a position."
    ]
  },
  {
    "id": "test_791",
    "context": "Economist: In the interaction between producers and consumers, the only obligation that all parties have is to act in the best interests of their own side. And distribution of information about product defects is in the best interests of the consumer. So consumers are always obligated to report product defects they discover, while producers are never obligated to reveal them.",
    "question": "Which one of the following is an assumption required by the economist's argument?",
    "options": [
      "The best interests of consumers never coincide with the best interests of producers.",
      "No one expects producers to act in a manner counter to their own best interests.",
      "A product defect is more likely to be discovered by a consumer than by a producer.",
      "It is never in the best interests of producers for a producer to reveal a product defect."
    ],
    "raw_logic_programs": [
      "# Declarations\nparties = EnumSort([producers, consumers])\nactions = EnumSort([report_defects, reveal_defects])\ninterests = Function([parties, actions] -> [bool])\n\n# Constraints\nForAll([p:parties], interests(p, report_defects) == (p == consumers)) ::: Distribution of information about product defects is in the best interests of the consumer\nForAll([p:parties], interests(p, reveal_defects) == False) ::: Producers are never obligated to reveal product defects\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the economist's argument?\nis_assumption(ForAll([p:parties], Not(And(interests(consumers, report_defects), interests(producers, reveal_defects))))) ::: (The best interests of consumers never coincide with the best interests of producers.\nis_assumption(ForAll([p:parties], Not(interests(producers, reveal_defects)))) ::: (No one expects producers to act in a manner counter to their own best interests.\nis_assumption(Exists([p:parties], interests(consumers, report_defects))) ::: (A product defect is more likely to be discovered by a consumer than by a producer.\nis_assumption(ForAll([p:parties], Not(interests(producers, reveal_defects)))) ::: (It is never in the best interests of producers for a producer to reveal a product defect."
    ]
  },
  {
    "id": "test_792",
    "context": "The legislature is considering a proposed bill that would prohibit fishing in Eagle Bay. Despite widespread concern over the economic effect this ban would have on the local fishing industry, the bill should be enacted. The bay has one of the highest water pollution levels in the nation, and a recent study of the bay' s fish found that 80 percent of them contained toxin levels that exceed governmental safety standards. Continuing to permit fishing in Eagle Bay could thus have grave effects on public health.",
    "question": "The argument proceeds by presenting evidence that",
    "options": [
      "the opponents of the ban have failed to weigh properly its foreseeable negative effects against its positive ones",
      "failure to enact the ban would carry with it unacceptable risks for the public welfare",
      "the toxic contamination of fish in Eagle Bay has had grave economic effects on the local fishing industry",
      "the ban would reduce the level of toxins in the fish in Eagle Bay"
    ],
    "raw_logic_programs": [
      "# Declarations\nproposed_bill = EnumSort([enact, not_enact])\neffects = EnumSort([economic, public_health])\ntoxicity = EnumSort([high, low])\nfishing_status = EnumSort([permit, prohibit])\nevidence = Function([proposed_bill, effects] -> [bool])\ntoxicity_level = Function([fishing_status] -> [toxicity])\n\n# Constraints\nevidence(enact, public_health) == True ::: The bill should be enacted due to public health concerns\ntoxicity_level(permit) == high ::: Continuing to permit fishing results in high toxicity levels\ntoxicity_level(prohibit) == low ::: Prohibiting fishing would reduce toxicity levels\n\n# Options\nQuestion ::: The argument proceeds by presenting evidence that\nis_valid(evidence(not_enact, economic) == False) ::: (A) the opponents of the ban have failed to weigh properly its foreseeable negative effects against its positive ones\nis_valid(evidence(not_enact, public_health) == True) ::: (B) failure to enact the ban would carry with it unacceptable risks for the public welfare\nis_valid(evidence(enact, economic) == False) ::: (C) the toxic contamination of fish in Eagle Bay has had grave economic effects on the local fishing industry\nis_valid(toxicity_level(prohibit) == low) ::: (D) the ban would reduce the level of toxins in the fish in Eagle Bay"
    ]
  },
  {
    "id": "test_793",
    "context": "If an activity significantly reduces chronic lower back pain, doctors should be prepared to discuss the merits of that activity with patients who ask about it. A recent study compared practicing yoga to taking stretching classes with a physical therapist and found that both activities lead to equal reductions in chronic lower back pain. Thus, doctors treating patients with chronic lower back pain should be prepared to discuss the merits of yoga.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "No previous studies have compared practicing yoga to taking stretching classes with a physical therapist.",
      "Many doctors treating patients with chronic lower back pain discuss with their patients the merits of taking stretching classes with a physical therapist.",
      "Taking stretching classes with a physical therapist significantly reduces chronic lower back pain.",
      "There are no activities that lead to more significant reductions in chronic lower back pain than do stretching classes with a physical therapist."
    ],
    "raw_logic_programs": [
      "# Declarations\nactivities = EnumSort([yoga, stretching])\neffects = Function([activities] -> [bool])\n\n# Constraints\neffects(yoga) == effects(stretching) ::: both activities lead to equal reductions in chronic lower back pain\neffects(yoga) == True ::: doctors should be prepared to discuss the merits of activities that significantly reduce chronic lower back pain\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_required_assumption(effects(stretching) == True) ::: (C) Taking stretching classes with a physical therapist significantly reduces chronic lower back pain"
    ]
  },
  {
    "id": "test_794",
    "context": "Economist: Tropicorp, which constantly seeks profitable investment opportunities, has been buying and clearing sections of tropical forest for cattle ranching, although pastures newly created there become useless for grazing after just a few years. The company has not gone into rubber tapping, even though <b> greater profits can be made from rubber tapping </b>, which leaves the forest intact. Thus, some environmentalists conclude that <b> Tropicorp has not acted wholly out of economic self-interest </b>. However, these environmentalists are probably wrong. The initial investment required for a successful rubber-tapping operation is larger than that needed for a cattle ranch. Furthermore, there is a shortage of workers employable in rubber-tapping operations, and finally, taxes are higher on profits from rubber tapping than on profits from cattle ranching.",
    "question": "In the economist's argument, the two boldfaced portions play which of the following roles?",
    "options": [
      "The first states the environmentalists' conclusion; the second states the conclusion of the economist's argument.",
      "The first states the conclusion of the economist's argument; the second supports that conclusion.",
      "The first supports the environmentalists' conclusion; the second states that conclusion.",
      "Each supports the conclusion of the economist's argument."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([environmentalists_conclusion, economists_conclusion, greater_profits_rubber_tapping, not_wholly_economic_self_interest])\nroles = EnumSort([conclusion, support])\nplays_role = Function([statements] -> [roles])\n\n# Constraints\nplays_role(environmentalists_conclusion) == conclusion ::: The environmentalists' conclusion is a conclusion\nplays_role(economists_conclusion) == conclusion ::: The economist's conclusion is a conclusion\nplays_role(greater_profits_rubber_tapping) == support ::: The statement about greater profits from rubber tapping supports a conclusion\nplays_role(not_wholly_economic_self_interest) == support ::: The statement about not acting wholly out of economic self-interest supports a conclusion\n\n# Options\nQuestion ::: In the economist's argument, the two boldfaced portions play which of the following roles?\nis_correct(And(plays_role(greater_profits_rubber_tapping) == support, plays_role(not_wholly_economic_self_interest) == conclusion)) ::: (The first states the environmentalists' conclusion; the second states the conclusion of the economist's argument.\nis_correct(And(plays_role(greater_profits_rubber_tapping) == conclusion, plays_role(not_wholly_economic_self_interest) == support)) ::: (The first states the conclusion of the economist's argument; the second supports that conclusion.\nis_correct(And(plays_role(greater_profits_rubber_tapping) == support, plays_role(not_wholly_economic_self_interest) == conclusion)) ::: (The first supports the environmentalists' conclusion; the second states that conclusion.\nis_correct(And(plays_role(greater_profits_rubber_tapping) == support, plays_role(not_wholly_economic_self_interest) == support)) ::: (Each supports the conclusion of the economist's argument."
    ]
  },
  {
    "id": "test_795",
    "context": "The price of a full-fare coach ticket from Toronto to Dallas on Breezeway Airlines is the same today as it was a year ago, if inflation is taken into account by calculating prices in constant dollars. However, today 90 percent of the Toronto-to-Dallas coach tickets that Breezeway sells are discount tickets and only 10 percent are full-fare tickets, whereas a year ago half were discount tickets and half were full-fare tickets. Ttherefore, on average, people pay less today in constant dollars for a Breezeway Toronto-to-Dallas coach ticket than they did a year ago.",
    "question": "Which one of the following, if assumed, would allow the conclusion above to be properly drawn?",
    "options": [
      "A Toronto-to-Dallas discount coach ticket on Breezeway Airlines costs about the same amount in constant dollars today as it did a year ago.",
      "All full-fare coach tickets on Breezeway Airlines cost the same in constant dollars as they did a year ago.",
      "The average number of coach passengers per flight that Breezeway Airlines carries from Toronto to Dallas today is higher than the average number per flight a year ago.",
      "The criteria that Breezeway Airlines uses for permitting passengers to buy discount coach tickets on the Toronto-to-Dallas route are different today than they were a year ago."
    ],
    "raw_logic_programs": [
      "# Declarations\ntickets = EnumSort([full_fare, discount])\ntime_periods = EnumSort([today, year_ago])\nprice = Function([tickets, time_periods] -> [float])\npercentage_sold = Function([tickets, time_periods] -> [float])\n\n# Constraints\nprice(full_fare, today) == price(full_fare, year_ago) ::: The price of a full-fare coach ticket from Toronto to Dallas on Breezeway Airlines is the same today as it was a year ago\npercentage_sold(discount, today) == 0.9 ::: Today 90 percent of the Toronto-to-Dallas coach tickets that Breezeway sells are discount tickets\npercentage_sold(full_fare, today) == 0.1 ::: Today 10 percent of the Toronto-to-Dallas coach tickets that Breezeway sells are full-fare tickets\npercentage_sold(discount, year_ago) == 0.5 ::: A year ago half were discount tickets\npercentage_sold(full_fare, year_ago) == 0.5 ::: A year ago half were full-fare tickets\n\n# Options\nQuestion ::: Which one of the following, if assumed, would allow the conclusion above to be properly drawn?\nis_valid(price(discount, today) < price(discount, year_ago)) ::: (A) A Toronto-to-Dallas discount coach ticket on Breezeway Airlines costs about the same amount in constant dollars today as it did a year ago.\nis_valid(price(full_fare, today) == price(full_fare, year_ago)) ::: (B) All full-fare coach tickets on Breezeway Airlines cost the same in constant dollars as they did a year ago.\nis_valid(average_passengers(today) > average_passengers(year_ago)) ::: (C) The average number of coach passengers per flight that Breezeway Airlines carries from Toronto to Dallas today is higher than the average number per flight a year ago.\nis_valid(criteria_changed(today, year_ago)) ::: (D) The criteria that Breezeway Airlines uses for permitting passengers to buy discount coach tickets on the Toronto-to-Dallas route are different today than they were a year ago."
    ]
  },
  {
    "id": "test_796",
    "context": "Editorial: It is a travesty of justice, social critics say, that we can launch rockets into outer space but cannot solve social problems that have plagued humanity. The assumption underlying this assertion is that there are greater difficulties involved in a space launch than are involved in ending long-standing social problems, which in turn suggests that a government' s failure to achieve the latter is simply a case of misplaced priorities. The criticism is misplaced, however, for rocket technology is much simpler than the human psyche, and until we adequately understand the human psyche we cannot solve the great social problems.",
    "question": "The statement that rocket technology is much simpler than the human psyche plays which one of the following roles in the editorial's argument?",
    "options": [
      "It is the argument's conclusion.",
      "It is claimed to be a false assumption on which the reasoning that the argument seeks to undermine rests.",
      "It is used by the argument to attempt to undermine the reasoning behind a viewpoint.",
      "It is cited as a possible objection to the argument's conclusion."
    ],
    "raw_logic_programs": [
      "# Declarations\nroles = EnumSort([conclusion, false_assumption, undermine_reasoning, objection])\nstatement = Function([roles] -> [bool])\n\n# Constraints\nstatement(undermine_reasoning) ::: The statement that rocket technology is much simpler than the human psyche is used by the argument to attempt to undermine the reasoning behind a viewpoint.\n\n# Options\nQuestion ::: The statement that rocket technology is much simpler than the human psyche plays which one of the following roles in the editorial's argument?\nis_true(statement(conclusion)) ::: (A) It is the argument's conclusion.\nis_true(statement(false_assumption)) ::: (B) It is claimed to be a false assumption on which the reasoning that the argument seeks to undermine rests.\nis_true(statement(undermine_reasoning)) ::: (C) It is used by the argument to attempt to undermine the reasoning behind a viewpoint.\nis_true(statement(objection)) ::: (D) It is cited as a possible objection to the argument's conclusion."
    ]
  },
  {
    "id": "test_797",
    "context": "Television commercial: \"A popular women' s magazine has established that among homemakers who use bathroom cleaners containing bleach, those who also used glass cleaner X had 20% less bacteria in their bathrooms. It is apparent that using glass cleaner X leads to less bacteria in the bathroom. \"",
    "question": "Which of the following identifies a reasoning error in the argument?",
    "options": [
      "It haphazardly makes a conjecture that current trends will continue in the future.",
      "Its conclusion merely restates one of the premises of the argument.",
      "It attempts to convince by using facts that in fact illustrate the conclusion is false.",
      "It argues that a result was caused solely by one entity even when the facts suggest that it is equally possible that another entity or a combination of entities has produced the condition."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([premise, conclusion])\nerrors = EnumSort([haphazard_conjecture, restatement, false_illustration, sole_cause])\n\n# Constraints\npremise_contains_fact = Function([arguments] -> [bool])\nconclusion_restates_premise = Function([arguments] -> [bool])\nfact_illustrates_false = Function([arguments] -> [bool])\nsole_cause_argument = Function([arguments] -> [bool])\n\npremise_contains_fact(premise) ::: The premise contains a fact about the use of glass cleaner X and bacteria levels.\nconclusion_restates_premise(conclusion) ::: The conclusion restates the premise by asserting that using glass cleaner X leads to less bacteria.\nfact_illustrates_false(premise) ::: The fact in the premise does not illustrate the conclusion is false.\nsole_cause_argument(conclusion) ::: The conclusion argues that the result was caused solely by using glass cleaner X.\n\n# Options\nQuestion ::: Which of the following identifies a reasoning error in the argument?\nis_error(sole_cause_argument(conclusion)) ::: (It argues that a result was caused solely by one entity even when the facts suggest that it is equally possible that another entity or a combination of entities has produced the condition.)"
    ]
  },
  {
    "id": "test_798",
    "context": "Studies have shown that pedestrians are struck by cars when crossing streets in crosswalks more often than they are struck when crossing outside of crosswalks. This is because crosswalks give many pedestrians an overly strong sense of security that oncoming cars will follow the signals, and these pedestrians are less likely to look both ways before crossing the street.",
    "question": "Which one of the following, if true, most undermines the explanation proposed above?",
    "options": [
      "The overwhelming majority of pedestrians in high-traffic areas cross streets in crosswalks.",
      "Drivers are generally most alert to pedestrians who are in or near crosswalks.",
      "Pedestrians tend to underestimate the chances that the signals at a crosswalk will malfunction.",
      "Measures intended to promote safety tend to make people less cautious."
    ],
    "raw_logic_programs": [
      "# Declarations\npedestrian_behavior = EnumSort([cross_in_crosswalk, cross_outside_crosswalk])\nfactors = EnumSort([sense_of_security, alertness_of_drivers, signal_malfunction, safety_measures])\nimpact = Function([factors] -> [bool])\n\n# Constraints\nimpact(sense_of_security) == True ::: Crosswalks give many pedestrians an overly strong sense of security\nimpact(alertness_of_drivers) == False ::: Drivers are generally most alert to pedestrians who are in or near crosswalks\nimpact(signal_malfunction) == False ::: Pedestrians tend to underestimate the chances that the signals at a crosswalk will malfunction\nimpact(safety_measures) == False ::: Measures intended to promote safety tend to make people less cautious\n\n# Options\nQuestion ::: Which one of the following, if true, most undermines the explanation proposed above?\nis_undermining(impact(cross_in_crosswalk) == True) ::: (The overwhelming majority of pedestrians in high-traffic areas cross streets in crosswalks.\nis_undermining(impact(alertness_of_drivers) == True) ::: (Drivers are generally most alert to pedestrians who are in or near crosswalks.\nis_undermining(impact(signal_malfunction) == True) ::: (Pedestrians tend to underestimate the chances that the signals at a crosswalk will malfunction.\nis_undermining(impact(safety_measures) == True) ::: (Measures intended to promote safety tend to make people less cautious."
    ]
  },
  {
    "id": "test_799",
    "context": "Megalimpet is a nationwide owner of office space. They have major office buildings in the downtowns of several cities in the 48 lower states, and rent this space to individual companies. Megalimpet office spaces vary from small office to large suites, and every space has custom-designed wall-to-wall carpeting. The carpet in several Megalimpet facilities needed replacing. The winning bid for the nationwide carpet replacement was submitted by Bathyderm Carpet Company (BCC). The bid contract involves all delivery costs, all installation, and any ongoing maintenance and upkeep while the carpet is under the three-year warranty. Both BCC executives and independent consultants they hired felt BCC would be able to perform all these services for far less than their bid price; these circumstances would allow BCC to reap a considerable profit.",
    "question": "Which of the following, if true, most calls in question the argument that BCC will make a large profit from this contract with Megalimpet?",
    "options": [
      "The next competing bid after BCC's was 50% higher than BCC's bid.",
      "The material in BCC carpets degrades rapidly when it comes into contact with standard toner, found in most laser printers and photocopiers; the degraded sections are unsightly and smell bad, so they often need to be replaced.",
      "BCC has already supplied carpets to a number of restaurant chains, and some of those spaces are as large as Megalimpet's largest office spaces.",
      "All the carpets will have to be transported by train from BCC factory in Louisville, KY, to Megalimpet's locations from coast to coast."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([BCC, Megalimpet])\nservices = EnumSort([delivery, installation, maintenance, upkeep])\nspaces = EnumSort([small_office, large_suite])\nmaterials = EnumSort([standard_toner])\nlocations = EnumSort([coast_to_coast])\ncontracts = Function([companies] -> [bool])\ncosts = Function([services] -> [int])\nprofits = Function([companies] -> [int])\ndegrades = Function([materials, spaces] -> [bool])\n\n# Constraints\ncontracts(BCC) == True ::: BCC has the contract with Megalimpet\nForAll([s:services], costs(s) < bid_price(BCC)) ::: BCC executives and consultants believe costs are less than bid price\nprofits(BCC) > 0 ::: BCC expects to make a profit\n\n# Options\nQuestion ::: Which of the following, if true, most calls in question the argument that BCC will make a large profit from this contract with Megalimpet?\nis_questioned(degrades(standard_toner, spaces)) ::: (B) The material in BCC carpets degrades rapidly when it comes into contact with standard toner, found in most laser printers and photocopiers; the degraded sections are unsightly and smell bad, so they often need to be replaced."
    ]
  },
  {
    "id": "test_800",
    "context": "In an experiment, subjects were shown a series of images on a computer screen, appearing usually at the top but occasionally at the bottom. Subjects were asked to guess each time where the next image would appear on the screen. They guessed correctly less than half of the time. The subjects all reported that they based their guesses on patterns they believed they saw in the sequence. Instead, if they had simply guessed that the next image would always appear at the top, they would have been correct most of the time.",
    "question": "If all of the statements above are true, which one of the following must also be true?",
    "options": [
      "Basing one's guesses about what will happen next on the basis of patterns one believes one sees is less likely to lead to correct guesses than always guessing that what has happened before will happen next.",
      "Some of the subjects sometimes guessed that the next image would appear at the bottom of the computer screen, but were incorrect.",
      "If the subjects had always guessed that the next image would appear at the top, they would not have been basing their guesses on any pattern they believed they saw in the sequence.",
      "There was no predictable pattern that one could reasonably believe occurred in the series of images on the computer screen."
    ],
    "raw_logic_programs": [
      "# Declarations\nsubjects = EnumSort([subject1, subject2, ..., subjectN])  # Assuming N subjects\npositions = EnumSort([top, bottom])\nguesses = Function([subjects, int] -> [positions])  # Function to represent each subject's guess for each image\ncorrect_guesses = Function([subjects, int] -> [bool])  # Function to represent if a guess was correct\n\n# Constraints\nForAll([s:subjects, i:int], Or(guesses(s, i) == top, guesses(s, i) == bottom)) ::: Each guess is either top or bottom\nForAll([s:subjects], Count([i:int], correct_guesses(s, i)) < Total([i:int]) / 2) ::: Subjects guessed correctly less than half of the time\nForAll([s:subjects, i:int], Implies(guesses(s, i) == top, correct_guesses(s, i))) ::: If they had always guessed top, they would have been correct most of the time\n\n# Options\nQuestion ::: If all of the statements above are true, which one of the following must also be true?\nis_true(ForAll([s:subjects], Count([i:int], guesses(s, i) == bottom) > 0)) ::: (Some of the subjects sometimes guessed that the next image would appear at the bottom of the computer screen, but were incorrect.)\nis_true(ForAll([s:subjects], ForAll([i:int], Implies(guesses(s, i) == top, Not(based_on_pattern(s, i)))))) ::: (If the subjects had always guessed that the next image would appear at the top, they would not have been basing their guesses on any pattern they believed they saw in the sequence.)\nis_true(ForAll([s:subjects], ForAll([i:int], Not(based_on_pattern(s, i))))) ::: (There was no predictable pattern that one could reasonably believe occurred in the series of images on the computer screen.)"
    ]
  },
  {
    "id": "test_801",
    "context": "We learn to use most of the machines in our lives through written instructions, without knowledge of the machines' inner workings, because most machines are specifically designed for use by nonexperts. So, in general, attaining technological expertise would prepare students for tomorrow' s job market no better than would a more traditional education stressing verbal and quantitative skills.",
    "question": "The argument depends on assuming which one of the following?",
    "options": [
      "Fewer people receive a traditional education stressing verbal and quantitative skills now than did 20 years ago.",
      "Most jobs in tomorrow's job market will not demand the ability to operate many machines that are designed for use only by experts.",
      "Students cannot attain technological expertise and also receive an education that does not neglect verbal and quantitative skills.",
      "When learning to use a machine, technological expertise is never more important than verbal and quantitative skills."
    ],
    "raw_logic_programs": [
      "# Declarations\neducation_types = EnumSort([technological_expertise, traditional_education])\nskills = EnumSort([verbal_skills, quantitative_skills])\nmachines = EnumSort([expert_machines, nonexpert_machines])\njob_market = EnumSort([future_jobs])\ndemands = Function([job_market] -> [machines])\n\n# Constraints\nForAll([m:machines], Implies(m == nonexpert_machines, Exists([e:education_types], e == traditional_education))) ::: Most machines are specifically designed for use by nonexperts\nForAll([j:job_market], demands(j) == nonexpert_machines) ::: Most jobs in tomorrow's job market will not demand the ability to operate many machines that are designed for use only by experts\n\n# Options\nQuestion ::: The argument depends on assuming which one of the following?\nis_assumption(Count([e:education_types], e == traditional_education) < Count([e:education_types], e == traditional_education, 20_years_ago)) ::: (A)\nis_assumption(ForAll([j:job_market], demands(j) == nonexpert_machines)) ::: (B)\nis_assumption(Not(Exists([s:skills], And(s == verbal_skills, s == quantitative_skills, Exists([e:education_types], e == technological_expertise))))) ::: (C)\nis_assumption(ForAll([m:machines], Implies(m == expert_machines, Exists([s:skills], Or(s == verbal_skills, s == quantitative_skills))))) ::: (D)"
    ]
  },
  {
    "id": "test_802",
    "context": "From the fact that people who studied music as children frequently are quite proficient at mathematics, it cannot be concluded that the skills required for mathematics are acquired by studying music: it is equally likely that proficiency in mathematics and studying music are both the result of growing up in a family that encourages its children to excel at all intellectual and artistic endeavors.",
    "question": "The pattern of reasoning in which one of the following arguments is most parallel to that in the argument above?",
    "options": [
      "Although children who fail to pay attention tend to perform poorly in school, it should not necessarily be thought that their poor performance is caused by their failure to pay attention, for it is always possible that their failure to pay attention is due to undiagnosed hearing problems that can also lead to poor performance in school.",
      "People whose diet includes relatively large quantities of certain fruits and vegetables have a slightly lower than average incidence of heart disease. But it would be premature to conclude that consuming these fruits and vegetables prevents heart disease, for this correlation may be merely coincidental.",
      "Those who engage in vigorous exercise tend to be very healthy. But it would be silly to conclude that vigorous exercise is healthful simply because people who are healthy exercise vigorously, since it is possible that exercise that is less vigorous also has beneficial results.",
      "People who attend a university in a foreign country are usually among the top students from their native country. It would ttherefore be wrong to conclude from the fact that many foreign students perform better academically than others in this country that secondary schools in other countries are superior to those in this country; it may be that evaluation standards are different."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([music_math, attention_school, diet_heart, exercise_health, foreign_students])\nconclusion = Function([arguments] -> [bool])\nalternative_explanation = Function([arguments] -> [bool])\n\n# Constraints\nconclusion(music_math) == False ::: It cannot be concluded that the skills required for mathematics are acquired by studying music\nalternative_explanation(music_math) == True ::: It is equally likely that proficiency in mathematics and studying music are both the result of growing up in a family that encourages its children to excel at all intellectual and artistic endeavors\n\nconclusion(attention_school) == False ::: It should not necessarily be thought that poor performance is caused by failure to pay attention\nalternative_explanation(attention_school) == True ::: It is possible that failure to pay attention is due to undiagnosed hearing problems\n\nconclusion(diet_heart) == False ::: It would be premature to conclude that consuming these fruits and vegetables prevents heart disease\nalternative_explanation(diet_heart) == True ::: This correlation may be merely coincidental\n\nconclusion(exercise_health) == False ::: It would be silly to conclude that vigorous exercise is healthful simply because people who are healthy exercise vigorously\nalternative_explanation(exercise_health) == True ::: It is possible that exercise that is less vigorous also has beneficial results\n\nconclusion(foreign_students) == False ::: It would be wrong to conclude that secondary schools in other countries are superior\nalternative_explanation(foreign_students) == True ::: It may be that evaluation standards are different\n\n# Options\nQuestion ::: The pattern of reasoning in which one of the following arguments is most parallel to that in the argument above?\nis_parallel(conclusion(attention_school) == False, alternative_explanation(attention_school) == True) ::: (A)\nis_parallel(conclusion(diet_heart) == False, alternative_explanation(diet_heart) == True) ::: (B)\nis_parallel(conclusion(exercise_health) == False, alternative_explanation(exercise_health) == True) ::: (C)\nis_parallel(conclusion(foreign_students) == False, alternative_explanation(foreign_students) == True) ::: (D)"
    ]
  },
  {
    "id": "test_803",
    "context": "Every political philosopher of the early twentieth century who was either a socialist or a communist was influenced by Rosa Luxemburg. No one who was influenced by Rosa Luxemburg advocated a totalitarian state.",
    "question": "If the statements above are true, which one of the following must on the basis of them also be true?",
    "options": [
      "Rosa Luxemburg was the only person to influence every early-twentieth-century political philosopher who was either socialist or communist.",
      "No early-twentieth-century socialist political philosopher advocated a totalitarian state.",
      "Every early-twentieth-century political philosopher who was influenced by Rosa Luxemburg and was not a socialist was a communist.",
      "Every early-twentieth-century political philosopher who did not advocate a totalitarian state was either socialist or communist."
    ],
    "raw_logic_programs": [
      "# Declarations\nphilosophers = EnumSort([early_twentieth_century])\nideologies = EnumSort([socialist, communist, totalitarian])\ninfluenced_by = Function([philosophers] -> [bool])\nadvocates = Function([philosophers, ideologies] -> [bool])\n\n# Constraints\nForAll([p:philosophers], Implies(Or(advocates(p, socialist), advocates(p, communist)), influenced_by(p))) ::: Every political philosopher of the early twentieth century who was either a socialist or a communist was influenced by Rosa Luxemburg\nForAll([p:philosophers], Implies(influenced_by(p), Not(advocates(p, totalitarian)))) ::: No one who was influenced by Rosa Luxemburg advocated a totalitarian state\n\n# Options\nQuestion ::: If the statements above are true, which one of the following must on the basis of them also be true?\nis_valid(ForAll([p:philosophers], Implies(advocates(p, socialist), Not(advocates(p, totalitarian))))) ::: (No early-twentieth-century socialist political philosopher advocated a totalitarian state.)\nis_valid(ForAll([p:philosophers], Implies(And(influenced_by(p), Not(advocates(p, socialist))), advocates(p, communist)))) ::: (Every early-twentieth-century political philosopher who was influenced by Rosa Luxemburg and was not a socialist was a communist.)\nis_valid(ForAll([p:philosophers], Implies(Not(advocates(p, totalitarian)), Or(advocates(p, socialist), advocates(p, communist))))) ::: (Every early-twentieth-century political philosopher who did not advocate a totalitarian state was either socialist or communist.)"
    ]
  },
  {
    "id": "test_804",
    "context": "Some vegetarians have argued that there are two individually sufficient reasons for not eating meat -- one based on health considerations, and the other based on the aversion to living at the expense of other conscious creatures. But suppose that eating meat were essential to good health for humans. Then it would be less clear that an aversion to living at the expense of other conscious creatures is enough of a reason to stop eating meat.",
    "question": "Which one of the following most accurately describes the role played in the argument by the supposition that eating meat is essential to good health?",
    "options": [
      "It is used to weaken the claim that the consciousness of animals is a sufficient reason for not eating meat.",
      "It is used to show that there is no sufficient reason for not eating meat.",
      "It is used to show that the two types of reasons cited in favor of vegetarianism are independent.",
      "It is used to disprove the vegetarian position that we should not eat meat."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([health_reason, aversion_reason])\nsupposition = Function([arguments] -> [bool])\n\n# Constraints\nsupposition(health_reason) == True ::: Eating meat is essential to good health for humans\nsupposition(aversion_reason) == False ::: Aversion to living at the expense of other conscious creatures is not enough of a reason to stop eating meat if health reason is true\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the argument by the supposition that eating meat is essential to good health?\nis_used_to_weaken(supposition(health_reason), aversion_reason) ::: (A) It is used to weaken the claim that the consciousness of animals is a sufficient reason for not eating meat.\nis_used_to_show_no_sufficient_reason(supposition(health_reason), aversion_reason) ::: (B) It is used to show that there is no sufficient reason for not eating meat.\nis_used_to_show_independence(supposition(health_reason), aversion_reason) ::: (C) It is used to show that the two types of reasons cited in favor of vegetarianism are independent.\nis_used_to_disprove(supposition(health_reason), aversion_reason) ::: (D) It is used to disprove the vegetarian position that we should not eat meat."
    ]
  },
  {
    "id": "test_805",
    "context": "Every action has consequences, and among the consequences of any action are other actions. And knowing whether an action is good requires knowing whether its consequences are good, but we cannot know the future, so good actions are impossible.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "For an action to be good we must be able to know that it is good.",
      "To know that an action is good requires knowing that refraining from performing it is bad.",
      "Some actions have only other actions as consequences.",
      "Only actions can be the consequences of other actions."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([action])\nconsequences = Function([actions] -> [actions])\ngood = Function([actions] -> [bool])\n\n# Constraints\nForAll([a:actions], Exists([c:actions], consequences(a) == c)) ::: Every action has consequences, and among the consequences of any action are other actions\nForAll([a:actions], Implies(good(a), ForAll([c:actions], Implies(consequences(a) == c, good(c))))) ::: Knowing whether an action is good requires knowing whether its consequences are good\nNot(Exists([a:actions], good(a))) ::: Good actions are impossible\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([a:actions], Implies(good(a), Exists([c:actions], consequences(a) == c)))) ::: (A) For an action to be good we must be able to know that it is good.\nis_assumption(ForAll([a:actions], Implies(good(a), Not(good(a))))) ::: (B) To know that an action is good requires knowing that refraining from performing it is bad.\nis_assumption(Exists([a:actions], ForAll([c:actions], consequences(a) == c))) ::: (C) Some actions have only other actions as consequences.\nis_assumption(ForAll([a:actions], Exists([c:actions], consequences(a) == c))) ::: (D) Only actions can be the consequences of other actions."
    ]
  },
  {
    "id": "test_806",
    "context": "Beginners typically decide each chess move by considering the consequences. Expert players, in contrast, primarily use pattern-recognition techniques. That is, such a player recognizes having been in a similar position before and makes a decision based on information recalled about the consequences of moves chosen on that prior occasion.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "Beginning chess players are better at thinking through the consequences of chess moves than experts are.",
      "Any chess player who played other games that require pattern-recognition skills would thereby improve his or her chess skills.",
      "A beginning chess player should use pattern- recognition techniques when deciding what move to make.",
      "In playing chess, an expert player relies crucially on his or her memory."
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([beginner, expert])\nskills = EnumSort([consequence_consideration, pattern_recognition, memory])\nuses_skill = Function([players, skills] -> [bool])\n\n# Constraints\nuses_skill(beginner, consequence_consideration) ::: Beginners typically decide each chess move by considering the consequences\nuses_skill(expert, pattern_recognition) ::: Expert players primarily use pattern-recognition techniques\nuses_skill(expert, memory) ::: Expert players make decisions based on information recalled about the consequences of moves chosen on prior occasions\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(uses_skill(beginner, consequence_consideration) > uses_skill(expert, consequence_consideration)) ::: (A) Beginning chess players are better at thinking through the consequences of chess moves than experts are.\nis_supported(Exists([g:EnumSort([other_games])], uses_skill(g, pattern_recognition) -> uses_skill(expert, pattern_recognition))) ::: (B) Any chess player who played other games that require pattern-recognition skills would thereby improve his or her chess skills.\nis_supported(uses_skill(beginner, pattern_recognition)) ::: (C) A beginning chess player should use pattern-recognition techniques when deciding what move to make.\nis_supported(uses_skill(expert, memory)) ::: (D) In playing chess, an expert player relies crucially on his or her memory."
    ]
  },
  {
    "id": "test_807",
    "context": "Team captain: Winning requires the willingness to cooperate, which in turn requires motivation. So you will not win if you are not motivated.",
    "question": "The pattern of reasoning in which one of the following is most similar to that in the argument above?",
    "options": [
      "Being healthy requires exercise. But exercising involves risk of injury. So, paradoxically, anyone who wants to be healthy will not exercise.",
      "Learning requires making some mistakes. And you must learn if you are to improve. So you will not make mistakes without there being a noticeable improvement.",
      "You can repair your own bicycle only if you are enthusiastic. And if you are enthusiastic, you will also have mechanical aptitude. So if you are not able to repair your own bicycle, you lack mechanical aptitude.",
      "Our political party will retain its status only if it raises more money. But raising more money requires increased campaigning. So our party will not retain its status unless it increases its campaigning."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([winning_requires_cooperation, cooperation_requires_motivation, not_win_if_not_motivated])\nconditions = Function([statements] -> [bool])\n\n# Constraints\nconditions(winning_requires_cooperation) == (winning_requires_cooperation == cooperation_requires_motivation) ::: Winning requires the willingness to cooperate, which in turn requires motivation\nconditions(not_win_if_not_motivated) == (not_win_if_not_motivated == Not(cooperation_requires_motivation)) ::: So you will not win if you are not motivated\n\n# Options\nQuestion ::: The pattern of reasoning in which one of the following is most similar to that in the argument above?\nis_similar(And(conditions(being_healthy_requires_exercise), conditions(exercising_involves_risk_of_injury), conditions(paradoxically_not_exercise_if_want_to_be_healthy))) ::: (A)\nis_similar(And(conditions(learning_requires_mistakes), conditions(must_learn_to_improve), conditions(not_make_mistakes_without_improvement))) ::: (B)\nis_similar(And(conditions(repair_bicycle_requires_enthusiasm), conditions(enthusiasm_requires_mechanical_aptitude), conditions(not_repair_bicycle_if_lack_mechanical_aptitude))) ::: (C)\nis_similar(And(conditions(party_status_requires_more_money), conditions(more_money_requires_campaigning), conditions(not_retain_status_unless_campaigning))) ::: (D)"
    ]
  },
  {
    "id": "test_808",
    "context": "Anthropologist: The culture responsible for the inscriptions at the site must have used fire to fashion iron implements. Of the Xa, Ye, and Zi, the three cultures known to have inhabited the area surrounding this site, the Xa could obtain iron but could not use fire to fashion implements and the Ye had no access to iron. Ttherefore the Zi is the only culture known to be from the surrounding area that could have made these inscriptions.",
    "question": "The reasoning in which one of the following arguments most closely parallels the reasoning used in the argument above?",
    "options": [
      "The person who designed the Ultra 180 must have been a very patient person. Of three well-known designers, Morris, Nieves, and Ott, who worked for Ultra's manufacturer when the Ultra 180 was designed, Morris and Ott were both impatient people. Ttherefore, Nieves is the only person who could have designed the Ultra 180.",
      "Whoever committed the burglary wore size nine shoes. Of the three suspects in custody, Jensen, Kapp, and Lomax, neither Jensen nor Lomax could have worn size nine shoes. Of the three suspects in custody, ttherefore, nobody but Kapp could be the burglar.",
      "Whoever wrote this letter to me signed it \"Tony. \" Since I do not know anyone who signs letters with that name, the writer of this letter could only have been someone whom I do not know.",
      "Anyone aspiring to public office must have a quick wit and a ready smile. Of my friends Gail, Harry, and Ida, only Harry and Ida are aspiring to public office, so only Harry and Ida could have both a quick wit and a ready smile."
    ],
    "raw_logic_programs": [
      "# Declarations\ncultures = EnumSort([Xa, Ye, Zi])\nresources = EnumSort([iron, fire])\ncapabilities = Function([cultures, resources] -> [bool])\nmade_inscriptions = Function([cultures] -> [bool])\n\n# Constraints\ncapabilities(Xa, iron) == True ::: The Xa could obtain iron\ncapabilities(Xa, fire) == False ::: The Xa could not use fire to fashion implements\ncapabilities(Ye, iron) == False ::: The Ye had no access to iron\ncapabilities(Zi, iron) == True ::: The Zi could obtain iron\ncapabilities(Zi, fire) == True ::: The Zi could use fire to fashion implements\nForAll([c:cultures], made_inscriptions(c) == (capabilities(c, iron) && capabilities(c, fire))) ::: A culture must have both iron and fire capabilities to make the inscriptions\n\n# Options\nQuestion ::: The reasoning in which one of the following arguments most closely parallels the reasoning used in the argument above?\nis_parallel(And(capabilities(Morris, patience) == False, capabilities(Ott, patience) == False, capabilities(Nieves, patience) == True)) ::: (A)\nis_parallel(And(capabilities(Jensen, size_nine_shoes) == False, capabilities(Lomax, size_nine_shoes) == False, capabilities(Kapp, size_nine_shoes) == True)) ::: (B)\nis_parallel(And(Exists([p:people], Not(knows(p, Tony)))), Not(knows(writer, Tony))) ::: (C)\nis_parallel(And(Or(capabilities(Harry, quick_wit), capabilities(Harry, ready_smile)), Or(capabilities(Ida, quick_wit), capabilities(Ida, ready_smile)))) ::: (D)"
    ]
  },
  {
    "id": "test_809",
    "context": "There are many agricultural regions in North America where the growing season is long enough to allow pumpkin production well into autumn with no risk of frost. Nonetheless, pumpkin production in North America is concentrated in regions with long, cold winters, where the growing season is delayed and pumpkin crops are exposed to risk of damage or destruction by early autumn frosts.",
    "question": "Which one of the following, if true, most helps to resolve the apparent discrepancy in the information above?",
    "options": [
      "More pumpkins are sold to consumers in regions of North America with long growing seasons than to those in regions with short growing seasons.",
      "Prolonged cold temperatures kill soil-borne fungus and other sources of disease that would kill or seriously damage pumpkins.",
      "Most of the pumpkin seed used by growers in North America is produced in areas where the growing season is long, and plants used for seed production are protected in greenhouses.",
      "Pumpkins are usually grown to reach maturity in autumn."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([long_growing_season, short_growing_season])\nfactors = EnumSort([frost_risk, disease_control, consumer_demand, seed_production])\npumpkin_production = Function([regions] -> [bool])\nfactor_influence = Function([factors, regions] -> [bool])\n\n# Constraints\npumpkin_production(short_growing_season) ::: pumpkin production is concentrated in regions with long, cold winters\nNot(pumpkin_production(long_growing_season)) ::: pumpkin production is not concentrated in regions with long growing seasons\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent discrepancy in the information above?\nfactor_influence(disease_control, short_growing_season) ::: (Prolonged cold temperatures kill soil-borne fungus and other sources of disease that would kill or seriously damage pumpkins.)\nfactor_influence(consumer_demand, long_growing_season) ::: (More pumpkins are sold to consumers in regions of North America with long growing seasons than to those in regions with short growing seasons.)\nfactor_influence(seed_production, long_growing_season) ::: (Most of the pumpkin seed used by growers in North America is produced in areas where the growing season is long, and plants used for seed production are protected in greenhouses.)\nfactor_influence(frost_risk, short_growing_season) ::: (Pumpkins are usually grown to reach maturity in autumn.)"
    ]
  },
  {
    "id": "test_810",
    "context": "Recently, reviewers of patent applications decided against granting a patent to a university for a genetically engineered mouse developed for laboratory use in studying cancer. The reviewers argued that the mouse was a new variety of animal and that rules governing the granting of patents specifically disallow patents for new animal varieties.",
    "question": "Which one of the following, if true, most weakens the patent reviewers' argument?",
    "options": [
      "The patent reviewers had previously decided against granting patents for new animal varieties that were developed through conventional breeding programs rather than through genetic engineering.",
      "The restrictions the patent reviewers cited pertain only to domesticated farm animals.",
      "The patent reviewers had reached the same decision on all previous patent requests for new animal varieties.",
      "The patent reviewers had in the past approved patents for genetically engineered plant varieties."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `patent_reviewers`: Represents the group of reviewers evaluating patent applications.\n- `animal_variety`: Represents a new variety of animal.\n- `genetically_engineered`: A predicate indicating whether an animal or plant is genetically engineered.\n- `patent_granted`: A predicate indicating whether a patent is granted for a given subject.\n- `domesticated_farm_animal`: A predicate indicating whether an animal is a domesticated farm animal.\n\n# Constraints\n- `Not(patent_granted(animal_variety))` ::: The reviewers decided against granting a patent for the genetically engineered mouse.\n- `animal_variety` ::: The mouse is considered a new variety of animal.\n- `Not(patent_granted(animal_variety))` due to `rules_disallow_patents_for_new_animal_varieties` ::: Rules disallow patents for new animal varieties.\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the patent reviewers' argument?\n- `Implies(genetically_engineered(animal_variety), Not(patent_granted(animal_variety)))` ::: (A) The patent reviewers had previously decided against granting patents for new animal varieties that were developed through conventional breeding programs rather than through genetic engineering.\n- `Implies(domesticated_farm_animal(animal_variety), Not(patent_granted(animal_variety)))` ::: (B) The restrictions the patent reviewers cited pertain only to domesticated farm animals.\n- `ForAll([previous_requests], Not(patent_granted(previous_requests)))` ::: (C) The patent reviewers had reached the same decision on all previous patent requests for new animal varieties.\n- `Implies(genetically_engineered(plant_variety), patent_granted(plant_variety))` ::: (D) The patent reviewers had in the past approved patents for genetically engineered plant varieties."
    ]
  },
  {
    "id": "test_811",
    "context": "In the twentieth century, the visual arts have embarked on major experimentation, from cubism to expressionism. While tastes always vary, there are certainly some people who find beautiful objects of each of the art movements of the first half of the twentieth century. In the latter half of the twentieth century, though, most works are so abstract or shocking that neither the critic nor the general public uses the word \"beautiful\" to describe them: indeed, sometimes late twentieth-century artists have, as one of their expressed goals, the creation of a work that no one could find beautiful. Whatever these artists are creating may be intellectually engaging at some level, but it is no longer art.",
    "question": "Which of the following is an assumption that supports drawing the conclusion above from the reasons given for that conclusion?",
    "options": [
      "Art critics generally have a different appraisal of a work of art than does the general public",
      "All art movements of the latter half of the twentieth century are responses to the movements of the first half of the century.",
      "The meaning of any work of art is defined entirely by the ideas of the artist who created it.",
      "Beauty is a defining quality of art."
    ],
    "raw_logic_programs": [
      "# Declarations\nart_movements = EnumSort([cubism, expressionism, late_twentieth_century])\npeople = EnumSort([critics, general_public])\nqualities = EnumSort([beautiful, abstract, shocking, intellectually_engaging])\nartworks = Function([art_movements] -> [qualities])\nfinds_beautiful = Function([people, art_movements] -> [bool])\n\n# Constraints\nForAll([m:art_movements], Exists([p:people], finds_beautiful(p, m))) ::: There are certainly some people who find beautiful objects of each of the art movements of the first half of the twentieth century\nForAll([p:people], Not(finds_beautiful(p, late_twentieth_century))) ::: Most works of the latter half of the twentieth century are so abstract or shocking that neither the critic nor the general public uses the word \"beautiful\" to describe them\nExists([a:artworks], And(artworks(late_twentieth_century) == abstract, Not(finds_beautiful(critics, late_twentieth_century)), Not(finds_beautiful(general_public, late_twentieth_century)))) ::: Sometimes late twentieth-century artists have, as one of their expressed goals, the creation of a work that no one could find beautiful\n\n# Options\nQuestion ::: Which of the following is an assumption that supports drawing the conclusion above from the reasons given for that conclusion?\nis_assumption(ForAll([a:artworks], Implies(artworks(a) == beautiful, a == art))) ::: (Beauty is a defining quality of art)"
    ]
  },
  {
    "id": "test_812",
    "context": "Film Director: It is true that certain characters and plot twists in my newly released film The Big Heist are similar to characters and plot twists in Thieves, a movie that came out last year. Pointing to these similarities, the film studio that produced Thieves is now accusing me of taking ideas from that film. The accusation is clearly without merit. All production work on The Big Heist was actually completed months before Thieves was released.",
    "question": "Which of the following, if true, provides the strongest support for the directors position?",
    "options": [
      "Before Thieves began production, its script had been circulating for several years among various film studios, including the studio that produced The Big Heist.",
      "The characters and plot twists that are most similar in the two films have close parallels in many earlier films of the same genre.",
      "The director of Thieves worked with the director of The Big Heist on several earlier projects",
      "Production work on Thieves began before production work on The B/g Heist was started"
    ],
    "raw_logic_programs": [
      "# Declarations\nfilms = EnumSort([The_Big_Heist, Thieves])\nevents = EnumSort([production_completed, released, script_circulated])\nhappened_before = Function([films, events, films, events] -> [bool])\n\n# Constraints\nhappened_before(The_Big_Heist, production_completed, Thieves, released) ::: All production work on The Big Heist was actually completed months before Thieves was released\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest support for the director's position?\nis_strong_support(happened_before(Thieves, script_circulated, The_Big_Heist, production_completed)) ::: (A) Before Thieves began production, its script had been circulating for several years among various film studios, including the studio that produced The Big Heist\nis_strong_support(Exists([f:films], And(happened_before(f, released, The_Big_Heist, released), happened_before(f, released, Thieves, released)))) ::: (B) The characters and plot twists that are most similar in the two films have close parallels in many earlier films of the same genre\nis_strong_support(Exists([f:films], worked_together(The_Big_Heist, f) && worked_together(Thieves, f))) ::: (C) The director of Thieves worked with the director of The Big Heist on several earlier projects\nis_strong_support(happened_before(Thieves, production_completed, The_Big_Heist, production_completed)) ::: (D) Production work on Thieves began before production work on The Big Heist was started"
    ]
  },
  {
    "id": "test_813",
    "context": "Theater managers will not rent a film if they do not believe it will generate enough total revenue -- including food-and-beverage concession revenue -- to yield a profit. Ttherefore, since film producers want their films to be shown as widely as possible, they tend to make films that theater managers consider attractive to younger audiences.",
    "question": "Which one of the following is an assumption required by the argument?",
    "options": [
      "Adults consume less of the sort of foods and beverages sold at movie concession stands than do either children or adolescents.",
      "Theater managers generally believe that a film that is attractive to younger audiences is more likely to be profitable than other films.",
      "Food-and-beverage concession stands in movie theaters are usually more profitable than the movies that are shown.",
      "Movies of the kinds that appeal to younger audiences almost never also appeal to older audiences."
    ],
    "raw_logic_programs": [
      "# Declarations\naudiences = EnumSort([younger, older])\nfactors = EnumSort([film_attractiveness, profitability])\nbeliefs = Function([factors, audiences] -> [bool])\n\n# Constraints\nForAll([f:factors], Exists([a:audiences], beliefs(f, a))) ::: Theater managers have beliefs about factors related to different audiences\n\n# Options\nQuestion ::: Which one of the following is an assumption required by the argument?\nis_assumption(beliefs(profitability, younger)) ::: (B) Theater managers generally believe that a film that is attractive to younger audiences is more likely to be profitable than other films."
    ]
  },
  {
    "id": "test_814",
    "context": "Psychologist: While there are certain therapy techniques generally applicable to all patients, some patients require a specific technique for helping them overcome a particular challenge. However, specific techniques will not have the same effects or deliver the same insights for all patients. As a result, the best practice is to keep in mind all of the generally applicable techniques and then tailor the specifics to each individual.",
    "question": "Which one of the following propositions does the psychologist's reasoning most closely conform to?",
    "options": [
      "Some patients can be treated with only the generally applicable techniques, while others do not require any technique at all.",
      "Although generally applicable techniques exist for treating patients, therapists must be responsive to each individuals' needs and circumstances.",
      "The best practice always includes the generally applicable techniques.",
      "Individual patients always require the same combination of techniques."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([patient1, patient2, patient3, ...])  # Represents a set of patients\ntechniques = EnumSort([general, specific])  # Represents types of techniques\nrequires = Function([patients, techniques] -> [bool])  # Function to determine if a patient requires a specific type of technique\n\n# Constraints\nForAll([p:patients], requires(p, general)) ::: There are generally applicable techniques for all patients\nExists([p:patients], requires(p, specific)) ::: Some patients require a specific technique\nForAll([p1:patients, p2:patients], Implies(requires(p1, specific), Not(requires(p2, specific)))) ::: Specific techniques do not have the same effects for all patients\n\n# Options\nQuestion ::: Which one of the following propositions does the psychologist's reasoning most closely conform to?\nis_conform(ForAll([p:patients], Or(requires(p, general), Not(requires(p, specific))))) ::: (Some patients can be treated with only the generally applicable techniques, while others do not require any technique at all.\nis_conform(ForAll([p:patients], And(requires(p, general), Exists([t:techniques], requires(p, t))))) ::: (Although generally applicable techniques exist for treating patients, therapists must be responsive to each individual's needs and circumstances.\nis_conform(ForAll([p:patients], requires(p, general))) ::: (The best practice always includes the generally applicable techniques.\nis_conform(ForAll([p1:patients, p2:patients], requires(p1, specific) == requires(p2, specific))) ::: (Individual patients always require the same combination of techniques."
    ]
  },
  {
    "id": "test_815",
    "context": "Tom: Employers complain that people graduating from high school too often lack the vocational skills required for full-time employment. Ttherefore, since these skills are best acquired on the job, we should require high school students to work at part-time jobs so that they acquire the skills needed for today' s job market. Mary: There are already too few part-time jobs for students who want to work, and simply requiring students to work will not create jobs for them.",
    "question": "Which one of the following most accurately describes how Mary's response is related to Tom's argument?",
    "options": [
      "It presents a consideration that undercuts an assumption on which Tom's argument depends.",
      "It provides information that is inconsistent with an explicitly stated premise in Tom's argument.",
      "It analyzes an undesirable result of undertaking the course of action that Tom recommends.",
      "It defends an alternative solution to the problem that Tom describes."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Tom, Mary])\nstatements = EnumSort([premise, assumption, conclusion, response])\nrelation = Function([arguments, statements] -> [bool])\n\n# Constraints\nrelation(Tom, premise) ::: Tom's argument includes a premise about the lack of vocational skills in high school graduates\nrelation(Tom, conclusion) ::: Tom concludes that high school students should work part-time to acquire skills\nrelation(Tom, assumption) ::: Tom assumes that part-time jobs are available for students\nrelation(Mary, response) ::: Mary responds to Tom's argument\n\n# Options\nQuestion ::: Which one of the following most accurately describes how Mary's response is related to Tom's argument?\nis_accurate(relation(Mary, response) == undercuts_assumption) ::: (It presents a consideration that undercuts an assumption on which Tom's argument depends.)\nis_accurate(relation(Mary, response) == inconsistent_premise) ::: (It provides information that is inconsistent with an explicitly stated premise in Tom's argument.)\nis_accurate(relation(Mary, response) == undesirable_result) ::: (It analyzes an undesirable result of undertaking the course of action that Tom recommends.)\nis_accurate(relation(Mary, response) == alternative_solution) ::: (It defends an alternative solution to the problem that Tom describes.)"
    ]
  },
  {
    "id": "test_816",
    "context": "Computer scientist: For several decades, the number of transistors on new computer microchips, and hence the microchips' computing speed, has doubled about every 18 months. However, from the mid-1990s into the next decade, each such doubling in a microchip' s computing speed was accompanied by a doubling in the cost of producing that microchip.",
    "question": "Which one of the following can be properly inferred from the computer scientist's statements?",
    "options": [
      "It is unlikely that engineers will ever be able to increase the computing speed of microchips without also increasing the cost of producing them.",
      "For the last several decades, computer engineers have focused on increasing the computing speed of computer microchips without making any attempt to control the cost of producing them.",
      "From the mid-1990s into the next decade, a doubling in the cost of fabricating new computer microchips accompanied each doubling in the number of transistors on those microchips.",
      "From the mid-1990s into the next decade, there was little if any increase in the retail cost of computers as a result of the increased number of transistors on microchips."
    ],
    "raw_logic_programs": [
      "# Declarations\ntransistors = Function([int] -> [int])  # Represents the number of transistors on a microchip over time\nspeed = Function([int] -> [int])  # Represents the computing speed of a microchip over time\ncost = Function([int] -> [int])  # Represents the cost of producing a microchip over time\ntime_periods = EnumSort([t1, t2, t3, t4])  # Represents different time periods\n\n# Constraints\nForAll([t:time_periods], speed(t) == 2 * speed(t - 1)) ::: The computing speed doubles every 18 months\nForAll([t:time_periods], transistors(t) == 2 * transistors(t - 1)) ::: The number of transistors doubles every 18 months\nForAll([t:time_periods], cost(t) == 2 * cost(t - 1)) ::: From the mid-1990s into the next decade, the cost doubles with each doubling of computing speed\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the computer scientist's statements?\nis_inferred(ForAll([t:time_periods], Implies(speed(t) > speed(t - 1), cost(t) > cost(t - 1)))) ::: (It is unlikely that engineers will ever be able to increase the computing speed of microchips without also increasing the cost of producing them.\nis_inferred(ForAll([t:time_periods], Implies(speed(t) > speed(t - 1), Not(Exists([c:cost], c < cost(t)))))) ::: (For the last several decades, computer engineers have focused on increasing the computing speed of computer microchips without making any attempt to control the cost of producing them.\nis_inferred(ForAll([t:time_periods], Implies(transistors(t) > transistors(t - 1), cost(t) > cost(t - 1)))) ::: (From the mid-1990s into the next decade, a doubling in the cost of fabricating new computer microchips accompanied each doubling in the number of transistors on those microchips.\nis_inferred(Not(Exists([t:time_periods], cost(t) > cost(t - 1)))) ::: (From the mid-1990s into the next decade, there was little if any increase in the retail cost of computers as a result of the increased number of transistors on microchips."
    ]
  },
  {
    "id": "test_817",
    "context": "It was once thought that pesticide TSX-400 was extremely harmful to the environment but that pesticides Envirochem and Zanar were environmentally harmless. TSX-400 was banned; Envirochem and Zanar were not. However, according to recent studies, Envirochem and Zanar each cause greater environmental harm than does TSX-400. If these studies are accurate, then either Envirochem and Zanar should be banned or TSX-400 should be legalized.",
    "question": "Which one of the following principles, if valid, most helps to justify the argumentation?",
    "options": [
      "Two pesticides should both be illegal only if both are harmful to the environment.",
      "One pesticide should be legal and another illegal only if the former is less harmful to the environment than is the latter.",
      "Two pesticides should not both be legal if one is measurably more harmful to the environment than the other is.",
      "Two pesticides should both be legal only if neither is harmful to the environment."
    ],
    "raw_logic_programs": [
      "# Declarations\npesticides = EnumSort([TSX_400, Envirochem, Zanar])\nharmful = Function([pesticides] -> [bool])\nbanned = Function([pesticides] -> [bool])\n\n# Constraints\nharmful(TSX_400) ::: TSX-400 was thought to be extremely harmful to the environment\nNot(harmful(Envirochem)) ::: Envirochem was thought to be environmentally harmless\nNot(harmful(Zanar)) ::: Zanar was thought to be environmentally harmless\nbanned(TSX_400) ::: TSX-400 was banned\nNot(banned(Envirochem)) ::: Envirochem was not banned\nNot(banned(Zanar)) ::: Zanar was not banned\nharmful(Envirochem) > harmful(TSX_400) ::: Envirochem causes greater environmental harm than TSX-400\nharmful(Zanar) > harmful(TSX_400) ::: Zanar causes greater environmental harm than TSX-400\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the argumentation?\nis_valid(Implies(And(harmful(Envirochem), harmful(Zanar)), And(banned(Envirochem), banned(Zanar)))) ::: (A) Two pesticides should both be illegal only if both are harmful to the environment.\nis_valid(Implies(And(banned(TSX_400), Not(banned(Envirochem))), harmful(TSX_400) < harmful(Envirochem))) ::: (B) One pesticide should be legal and another illegal only if the former is less harmful to the environment than is the latter.\nis_valid(Implies(And(Not(banned(TSX_400)), Not(banned(Envirochem))), harmful(Envirochem) <= harmful(TSX_400))) ::: (C) Two pesticides should not both be legal if one is measurably more harmful to the environment than the other is.\nis_valid(Implies(And(Not(banned(TSX_400)), Not(banned(Envirochem))), Not(harmful(TSX_400)) & Not(harmful(Envirochem)))) ::: (D) Two pesticides should both be legal only if neither is harmful to the environment."
    ]
  },
  {
    "id": "test_818",
    "context": "While studying a large colony of macaque monkeys, scientists interacting with baby monkeys under a week old found that the babies would imitate some, but not all, of the scientists' actions. The babies readily smacked their lips and stuck out their tongues when the scientists did, but stared impassively when the scientists opened and closed their mouths or made hand gestures. Of these four kinds of actions, only lip smacking and sticking out the tongue are used by adult macaques when interacting with babies.",
    "question": "The statements above, if true, most strongly support which one of the following?",
    "options": [
      "Baby macaques under a week old cannot imitate hand gestures because they do not yet control the necessary muscles.",
      "Baby macaques under a week old only imitate human gestures also used by adult macaques.",
      "Baby macaques under a week old mistake the scientists interacting with them for adult macaques.",
      "Baby macaques under a week old are natural mimics of whatever they see."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([lip_smacking, tongue_sticking, mouth_opening, hand_gestures])\nbaby_reactions = Function([actions] -> [bool])\nadult_interactions = Function([actions] -> [bool])\n\n# Constraints\nAnd(baby_reactions(lip_smacking), baby_reactions(tongue_sticking), Not(baby_reactions(mouth_opening)), Not(baby_reactions(hand_gestures))) ::: The babies readily smacked their lips and stuck out their tongues when the scientists did, but stared impassively when the scientists opened and closed their mouths or made hand gestures\nAnd(adult_interactions(lip_smacking), adult_interactions(tongue_sticking), Not(adult_interactions(mouth_opening)), Not(adult_interactions(hand_gestures))) ::: Of these four kinds of actions, only lip smacking and sticking out the tongue are used by adult macaques when interacting with babies\n\n# Options\nQuestion ::: The statements above, if true, most strongly support which one of the following?\nis_supported(ForAll([a:actions], Implies(baby_reactions(a), adult_interactions(a)))) ::: (A) Baby macaques under a week old only imitate human gestures also used by adult macaques\nis_supported(Not(Exists([a:actions], And(baby_reactions(a), Not(adult_interactions(a)))))) ::: (B) Baby macaques under a week old cannot imitate hand gestures because they do not yet control the necessary muscles\nis_supported(Exists([a:actions], And(baby_reactions(a), Not(adult_interactions(a))))) ::: (C) Baby macaques under a week old mistake the scientists interacting with them for adult macaques\nis_supported(ForAll([a:actions], baby_reactions(a))) ::: (D) Baby macaques under a week old are natural mimics of whatever they see"
    ]
  },
  {
    "id": "test_819",
    "context": "Jablonski, who owns a car dealership, has donated cars to driver education programs at area schools for over five years. She found the statistics on car accidents to be disturbing, and she wanted to do something to encourage better driving in young drivers. Some members of the community have shown their support for this action by purchasing cars from Jablonski' s dealership.",
    "question": "Which one of the following propositions is best illustrated by the passage?",
    "options": [
      "Altruistic actions sometimes have positive consequences for those who perform them.",
      "The only way to reduce traffic accidents is through driver education programs.",
      "An action must have broad community support if it is to be successful.",
      "Young drivers are the group most likely to benefit from driver education programs."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([altruistic_positive_consequences, driver_education_reduces_accidents, community_support_needed, young_drivers_benefit])\nillustrates = Function([propositions] -> [bool])\n\n# Constraints\nillustrates(altruistic_positive_consequences) ::: Altruistic actions sometimes have positive consequences for those who perform them\nillustrates(driver_education_reduces_accidents) ::: The only way to reduce traffic accidents is through driver education programs\nillustrates(community_support_needed) ::: An action must have broad community support if it is to be successful\nillustrates(young_drivers_benefit) ::: Young drivers are the group most likely to benefit from driver education programs\n\n# Options\nQuestion ::: Which one of the following propositions is best illustrated by the passage?\nis_best_illustrated(illustrates(altruistic_positive_consequences)) ::: (A)\nis_best_illustrated(illustrates(driver_education_reduces_accidents)) ::: (B)\nis_best_illustrated(illustrates(community_support_needed)) ::: (C)\nis_best_illustrated(illustrates(young_drivers_benefit)) ::: (D)"
    ]
  },
  {
    "id": "test_820",
    "context": "It is illegal to advertise prescription medications in Hedland except directly to physicians, either by mail or in medical journals. A proposed law would allow general advertising of prescription medications. Opponents object that the general population lacks the specialized knowledge to evaluate such advertisements and might ask their physicians for inappropriate medications. But since physicians have the final say as to whether to prescribe a medication for a patient, inappropriate prescriptions would not become more common.",
    "question": "Which of the following would it be most useful to establish in order to evaluate the argument?",
    "options": [
      "Whether some people might go to a physician for no reason other than to ask for a particular medication they have seen advertised",
      "Whether the proposed law requires prescription-medication advertisements directed to the general public to provide the same information as do advertisements directed to physicians",
      "Whether advertising for prescription medications might alert patients to the existence of effective treatments for minor ailments that they had previously thought to be untreatable",
      "Whether physicians would give in to a patient's demand for a prescription medication chosen by the patient when the one originally prescribed by the physician fails to perform as desired"
    ],
    "raw_logic_programs": [
      "# Declarations\nadvertising_methods = EnumSort([mail, medical_journals, general_public])\nstakeholders = EnumSort([physicians, general_population])\nmedications = EnumSort([appropriate, inappropriate])\nlaw_status = EnumSort([current, proposed])\nadvertise = Function([law_status, advertising_methods] -> [bool])\nevaluate_knowledge = Function([stakeholders] -> [bool])\nprescribe = Function([physicians, medications] -> [bool])\n\n# Constraints\nadvertise(current, mail) == True ::: It is legal to advertise prescription medications by mail under current law\nadvertise(current, medical_journals) == True ::: It is legal to advertise prescription medications in medical journals under current law\nadvertise(current, general_public) == False ::: It is illegal to advertise prescription medications to the general public under current law\nadvertise(proposed, general_public) == True ::: The proposed law would allow general advertising of prescription medications\nevaluate_knowledge(general_population) == False ::: The general population lacks the specialized knowledge to evaluate advertisements\nForAll([m:medications], prescribe(physicians, m) == True) ::: Physicians have the final say as to whether to prescribe a medication\n\n# Options\nQuestion ::: Which of the following would it be most useful to establish in order to evaluate the argument?\nis_useful(Exists([p:physicians], prescribe(p, inappropriate) == True)) ::: (A) Whether some people might go to a physician for no reason other than to ask for a particular medication they have seen advertised\nis_useful(ForAll([m:advertising_methods], advertise(proposed, m) == advertise(current, m))) ::: (B) Whether the proposed law requires prescription-medication advertisements directed to the general public to provide the same information as do advertisements directed to physicians\nis_useful(Exists([m:medications], evaluate_knowledge(general_population) == True)) ::: (C) Whether advertising for prescription medications might alert patients to the existence of effective treatments for minor ailments that they had previously thought to be untreatable\nis_useful(Exists([p:physicians], prescribe(p, inappropriate) == True)) ::: (D) Whether physicians would give in to a patient's demand for a prescription medication chosen by the patient when the one originally prescribed by the physician fails to perform as desired"
    ]
  },
  {
    "id": "test_821",
    "context": "The number of airplanes equipped with a new anticollision device has increased steadily during the past two years. During the same period, it has become increasingly common for key information about an airplane' s altitude and speed to disappear suddenly from air traffic controllers' screens. The new anticollision device, which operates at the same frequency as air traffic radar, is ttherefore responsible for the sudden disappearance of key information.",
    "question": "Which one of the following, if true, most seriously weakens the argument?",
    "options": [
      "It was not until the new anticollision device was introduced that key information first began disappearing suddenly from controllers' screens.",
      "The new anticollision device has already prevented a considerable number of mid-air collisions.",
      "The new anticollision device is scheduled to be moved to a different frequency within the next two to three months.",
      "Key information began disappearing from controllers' screens three months before the new anticollision device was first tested."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([anticollision_device_increase, information_disappearance, anticollision_device_introduction, information_disappearance_before_device])\ncauses = Function([events, events] -> [bool])\n\n# Constraints\ncauses(anticollision_device_increase, information_disappearance) ::: The new anticollision device is responsible for the sudden disappearance of key information\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the argument?\nis_weakens(causes(anticollision_device_increase, information_disappearance), information_disappearance_before_device) ::: (Key information began disappearing from controllers' screens three months before the new anticollision device was first tested)"
    ]
  },
  {
    "id": "test_822",
    "context": "Scientist: a new vaccine will soon completely eradicate all types of influenza. The vaccine works on the cellular level, but it will only be effective if applied to the most high-risk individuals during the upcoming flu season. All people over the sixty-five years of age are considered high-risk. Without vaccinating the entire high-risk group, the influenza virus will permanently mutate by next flu season, rendering the vaccine completely ineffective. However, if the high-risk group of people is vaccinated in time, nobody will suffer from influenza ever again. As such, the government should force every high-risk individual to receive the vaccination, even by force, if they refuse to participate.",
    "question": "The scientist would most likely concur with which one of the following?",
    "options": [
      "High-risk individuals who refuse the vaccine should face severe punishment.",
      "The government should take drastic measures when facing a public health crisis.",
      "Fighting influenza is the most important objective for the government.",
      "Science will be able to create a new vaccine next year."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([high_risk, not_high_risk])\nactions = EnumSort([vaccinate, not_vaccinate])\noutcomes = EnumSort([eradicate_influenza, mutate_influenza])\n\n# Constraints\nForAll([i:individuals], Implies(i == high_risk, actions(i) == vaccinate)) ::: All high-risk individuals must be vaccinated\nExists([i:individuals], And(i == high_risk, actions(i) == not_vaccinate)) -> outcomes == mutate_influenza ::: Without vaccinating the entire high-risk group, the influenza virus will mutate\nForAll([i:individuals], And(i == high_risk, actions(i) == vaccinate)) -> outcomes == eradicate_influenza ::: If the high-risk group is vaccinated, influenza will be eradicated\n\n# Options\nQuestion ::: The scientist would most likely concur with which one of the following?\nis_likely_concur(ForAll([i:individuals], Implies(i == high_risk, actions(i) == vaccinate))) ::: (High-risk individuals who refuse the vaccine should face severe punishment.\nis_likely_concur(ForAll([i:individuals], Implies(i == high_risk, actions(i) == vaccinate))) ::: (The government should take drastic measures when facing a public health crisis.\nis_likely_concur(outcomes == eradicate_influenza) ::: (Fighting influenza is the most important objective for the government.\nis_likely_concur(outcomes == mutate_influenza) ::: (Science will be able to create a new vaccine next year."
    ]
  },
  {
    "id": "test_823",
    "context": "McCray' s Dairy Industries stands to reap tremendous profits in the coming year. The new milking apparatus and packing equipment purchased and installed last year allows McCray' s to produce the same quantity of dairy products at less than one third of the previous cost. Restaurants and academic institutions throughout the state will choose to purchase all their dairy products from McCray' s, because they will be available at a much lower cost than similar products from rival producers.",
    "question": "The argument above assumes which of the following?",
    "options": [
      "Statewide production of dairy products will not increase in the coming year.",
      "Physicians see no reason to predict a sharp increase in the number of dairy allergies throughout the state.",
      "The quality of McCray's dairy products meets the acceptability standards of most restaurants and academic institutions throughout the state.",
      "Statewide demand for dairy products will increase substantially in the coming year."
    ],
    "raw_logic_programs": [
      "# Declarations\nassumptions = EnumSort([statewide_production_not_increase, no_increase_dairy_allergies, quality_meets_standards, statewide_demand_increase])\n\n# Constraints\n# The argument assumes that McCray's Dairy Industries will be able to sell their products at a lower cost and that these products will be chosen by restaurants and academic institutions. This implies that the quality of the products must meet the standards required by these buyers.\n\n# Options\nQuestion ::: The argument above assumes which of the following?\nis_assumed(quality_meets_standards) ::: (The quality of McCray's dairy products meets the acceptability standards of most restaurants and academic institutions throughout the state.)"
    ]
  },
  {
    "id": "test_824",
    "context": "Voters commonly condemn politicians for being insincere, but politicians often must disguise their true feelings when they make public statements. If they expressed their honest views-about, say, their party's policies-then achieving politically necessary compromises would be much more difficult. Clearly, the very insincerity that people decry shows that our government is functioning well.",
    "question": "Which of the following, if true, most seriously undermines this reasoning?",
    "options": [
      "Some of the public statements made by politicians about their party's policies could in fact be sincere.",
      "Achieving political compromises is not all that is necessary for the proper functioning of a government.",
      "Voters often judge politicians by criteria other than the sincerity with which they express their views.",
      "Some political compromises are not in the best long-term interest of the government."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([sincere, insincere])\ncriteria = EnumSort([compromise, other])\njudgment = Function([statements, criteria] -> [bool])\n\n# Constraints\nForAll([s:statements], Exists([c:criteria], judgment(s, c))) ::: Politicians often must disguise their true feelings when they make public statements to achieve politically necessary compromises\njudgment(insincere, compromise) ::: The insincerity that people decry shows that our government is functioning well\n\n# Options\nQuestion ::: Which of the following, if true, most seriously undermines this reasoning?\nis_undermining(judgment(sincere, compromise)) ::: (Some of the public statements made by politicians about their party's policies could in fact be sincere.\nis_undermining(Not(judgment(insincere, compromise))) ::: (Achieving political compromises is not all that is necessary for the proper functioning of a government.\nis_undermining(Exists([c:criteria], judgment(insincere, c) == other)) ::: (Voters often judge politicians by criteria other than the sincerity with which they express their views.\nis_undermining(Not(judgment(insincere, compromise))) ::: (Some political compromises are not in the best long-term interest of the government."
    ]
  },
  {
    "id": "test_825",
    "context": "Advertisement: Over 80 percent of the people who test-drive a Zenith car end up buying one. So be warned: you should not test-drive a Zenith unless you are prepared to buy one, because if you so much as drive a Zenith around the block, there is a better than 80 percent chance you will choose to buy it.",
    "question": "If the advertisement is interpreted as implying that the quality of the car is unusually impressive, which one of the following, if true, most clearly casts doubt on that implication?",
    "options": [
      "Almost 90 percent of the people who purchase a car do not do so on the day they take a first test-drive but do so after another test-drive.",
      "Those who take test-drives in cars are, in overwhelming proportions, people who have already decided to buy the model driven unless some fault should become evident.",
      "Test-drives of Zenith cars are, according to Zenith sales personnel, generally more extensive than a drive around the block and encounter varied driving conditions.",
      "In some Zenith cars, a minor part has broken within the first year, and Zenith dealers have issued notices to owners that the dealers will replace the part with a redesigned one at no cost to owners."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([test_drivers, non_test_drivers])\nactions = EnumSort([test_drive, buy])\nprobability = Function([people, actions] -> [float])\n\n# Constraints\nprobability(test_drivers, buy) > 0.8 ::: Over 80 percent of the people who test-drive a Zenith car end up buying one\n\n# Options\nQuestion ::: If the advertisement is interpreted as implying that the quality of the car is unusually impressive, which one of the following, if true, most clearly casts doubt on that implication?\nis_doubtful(probability(non_test_drivers, buy) > 0.1) ::: (Almost 90 percent of the people who purchase a car do not do so on the day they take a first test-drive but do so after another test-drive.\nis_doubtful(ForAll([p:people], Implies(p == test_drivers, probability(p, buy) > 0.8))) ::: (Those who take test-drives in cars are, in overwhelming proportions, people who have already decided to buy the model driven unless some fault should become evident.\nis_doubtful(Exists([p:people], And(p == test_drivers, probability(p, test_drive) > 0.8))) ::: (Test-drives of Zenith cars are, according to Zenith sales personnel, generally more extensive than a drive around the block and encounter varied driving conditions.\nis_doubtful(Exists([p:people], And(p == test_drivers, probability(p, buy) < 0.8))) ::: (In some Zenith cars, a minor part has broken within the first year, and Zenith dealers have issued notices to owners that the dealers will replace the part with a redesigned one at no cost to owners."
    ]
  },
  {
    "id": "test_826",
    "context": "The United States has never been a great international trader. It found most of its raw materials and customers for finished products within its own borders. The terrible consequences of this situation have become apparent, as this country now owes the largest foreign debt in the world and is a playground for wealthy foreign investors. The moral is clear: a country can no more live without foreign trade than a dog can live by eating its own tail.",
    "question": "In order to advance her point of view, the author does each of the following EXCEPT",
    "options": [
      "draw on an analogy",
      "question the ethical basis of an economic situation",
      "identify a cause and an effect",
      "suggest a cause of the current economic situation"
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([draw_analogy, question_ethics, identify_cause_effect, suggest_cause])\nauthor_actions = Function([actions] -> [bool])\n\n# Constraints\nauthor_actions(draw_analogy) ::: The author draws on an analogy: \"a country can no more live without foreign trade than a dog can live by eating its own tail.\"\nauthor_actions(identify_cause_effect) ::: The author identifies a cause and an effect: \"The United States has never been a great international trader\" leading to \"owes the largest foreign debt in the world.\"\nauthor_actions(suggest_cause) ::: The author suggests a cause of the current economic situation: \"The United States has never been a great international trader.\"\n\n# Options\nQuestion ::: In order to advance her point of view, the author does each of the following EXCEPT\nis_not_done(author_actions(question_ethics)) ::: (question the ethical basis of an economic situation)"
    ]
  },
  {
    "id": "test_827",
    "context": "In order to increase production, ABC Company should implement a flextime schedule, which would allow individual employees some flexibility in deciding when to begin and end their workday. Studies have shown that working under flextime schedules is associated with increased employee morale.",
    "question": "The argument depends on the assumption that",
    "options": [
      "an increase in the morale of ABC Company's employees could lead to increased production",
      "employees are most productive during the part of the day when all employees are present",
      "companies that are in competition with ABC Company also use a flextime schedule",
      "the employees who prefer a flextime schedule are the most productive employees at ABC Company"
    ],
    "raw_logic_programs": [
      "# Declarations\ncompany = EnumSort([ABC_Company])\nfactors = EnumSort([production, morale, schedule])\neffects = Function([company, factors] -> [bool])\n\n# Constraints\neffects(ABC_Company, schedule) == True ::: ABC Company should implement a flextime schedule\neffects(ABC_Company, morale) == True ::: working under flextime schedules is associated with increased employee morale\n\n# Options\nQuestion ::: The argument depends on the assumption that\nis_assumption(Implies(effects(ABC_Company, morale), effects(ABC_Company, production))) ::: (an increase in the morale of ABC Company's employees could lead to increased production)\nis_assumption(ForAll([t:time], Implies(effects(ABC_Company, schedule), effects(ABC_Company, production)))) ::: (employees are most productive during the part of the day when all employees are present)\nis_assumption(Exists([c:company], And(c != ABC_Company, effects(c, schedule)))) ::: (companies that are in competition with ABC Company also use a flextime schedule)\nis_assumption(ForAll([e:employees], Implies(effects(ABC_Company, schedule), effects(e, production)))) ::: (the employees who prefer a flextime schedule are the most productive employees at ABC Company)"
    ]
  },
  {
    "id": "test_828",
    "context": "Medical specialists report that patients with back muscle injuries who receive a combination of drugs and physical therapy do only as well as those who receive physical therapy alone. Yet the specialists state that drugs are a necessary part of the treatment of all patients who receive them for back muscle injuries.",
    "question": "Which one of the following, if true, most helps to reconcile the medical specialists' two claims?",
    "options": [
      "Medical specialists treat all patients who have serious back muscle injuries with either physical therapy alone or a combination of drugs and physical therapy.",
      "Some back muscle injuries that have been aggravated by improper attempts at physical therapy, such as home massage, have been successfully treated with drugs.",
      "Medical specialists who prescribe these treatments make accurate judgments about who needs both drugs and physical therapy and who needs physical therapy alone.",
      "Some back muscle injuries have been completely healed by a combination of drugs and physical therapy."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([patient1, patient2, patient3, patient4])\ntreatments = EnumSort([drugs_and_physical_therapy, physical_therapy_alone])\noutcomes = EnumSort([successful, not_successful])\nreceives = Function([patients] -> [treatments])\noutcome = Function([patients] -> [outcomes])\n\n# Constraints\nForAll([p:patients], Implies(receives(p) == drugs_and_physical_therapy, outcome(p) == outcome(p))) ::: patients with back muscle injuries who receive a combination of drugs and physical therapy do only as well as those who receive physical therapy alone\nForAll([p:patients], Implies(receives(p) == drugs_and_physical_therapy, drugs_are_necessary(p))) ::: drugs are a necessary part of the treatment of all patients who receive them for back muscle injuries\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to reconcile the medical specialists' two claims?\nis_reconciling(Medical_specialists_treat_all_patients_with_serious_injuries_with_either_physical_therapy_alone_or_combination) ::: (A)\nis_reconciling(Some_injuries_aggravated_by_improper_physical_therapy_are_successfully_treated_with_drugs) ::: (B)\nis_reconciling(Medical_specialists_make_accurate_judgments_about_who_needs_both_treatments) ::: (C)\nis_reconciling(Some_injuries_completely_healed_by_combination_of_drugs_and_physical_therapy) ::: (D)"
    ]
  },
  {
    "id": "test_829",
    "context": "Samantha recently won a poetry contest at her college, and the poem will be published in a national poetry magazine. Her English professor believes that Samantha is the most talented poet she' s ever taught. Samantha attributes her talent for poetry to her high school English teacher, because her high school English teacher was a talented poet. Every contest winner is automatically admitted into the college' s English doctoral program; thus, Samantha will attend the college' s English doctoral program.",
    "question": "What is a flaw in the argument's reasoning?",
    "options": [
      "It overstates the evidence.",
      "It relies on circular reasoning.",
      "It appeals to an inappropriate authority.",
      "It mistakes a necessary and sufficient condition."
    ],
    "raw_logic_programs": [
      "# Declarations\ntalent = Function([person] -> [bool])\ncontest_winner = Function([person] -> [bool])\nadmitted_to_program = Function([person] -> [bool])\ntaught_by = Function([person, person] -> [bool])\npoet = Function([person] -> [bool])\n\n# Constraints\ntalent(Samantha) ::: Samantha is talented\ncontest_winner(Samantha) ::: Samantha won the contest\nForAll([p:person], Implies(contest_winner(p), admitted_to_program(p))) ::: Every contest winner is automatically admitted into the college's English doctoral program\ntaught_by(Samantha, high_school_teacher) ::: Samantha attributes her talent to her high school teacher\npoet(high_school_teacher) ::: Her high school teacher was a talented poet\n\n# Options\nQuestion ::: What is a flaw in the argument's reasoning?\nis_flaw(It_overstates_the_evidence) ::: (It overstates the evidence.)\nis_flaw(It_relies_on_circular_reasoning) ::: (It relies on circular reasoning.)\nis_flaw(It_appeals_to_an_inappropriate_authority) ::: (It appeals to an inappropriate authority.)\nis_flaw(It_mistakes_a_necessary_and_sufficient_condition) ::: (It mistakes a necessary and sufficient condition.)"
    ]
  },
  {
    "id": "test_830",
    "context": "The cause of the epidemic that devastated Athens in 430 B. C. can finally be identified. Accounts of the epidemic mention the hiccups experienced by many victims, a symptom of no known disease except that caused by the recently discovered Ebola virus. Moreover, other symptoms of the disease caused by the Ebola virus are mentioned in the accounts of the Athenian epidemic.",
    "question": "Each of the following, if true, weakens the argument EXCEPT:",
    "options": [
      "The epidemics known to have been caused by the Ebola virus are usually shorter-lived than was the Athenian epidemic.",
      "The Ebola virus's host animals did not live in Athens at the time of the Athenian epidemic.",
      "Not all of those who are victims of the Ebola virus are afflicted with hiccups.",
      "The Ebola virus is much more contagious than the disease that caused the Athenian epidemic was reported to have been."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([epidemic_cause])\nevidence = EnumSort([hiccups, other_symptoms])\nweakeners = EnumSort([shorter_lived, no_host_animals, not_all_hiccups, more_contagious])\nsupports = Function([arguments, evidence] -> [bool])\nweakens = Function([arguments, weakeners] -> [bool])\n\n# Constraints\nsupports(epidemic_cause, hiccups) ::: Accounts of the epidemic mention the hiccups experienced by many victims\nsupports(epidemic_cause, other_symptoms) ::: Other symptoms of the disease caused by the Ebola virus are mentioned in the accounts of the Athenian epidemic\n\n# Options\nQuestion ::: Each of the following, if true, weakens the argument EXCEPT:\nis_exception(weakens(epidemic_cause, shorter_lived)) ::: (A)\nis_exception(weakens(epidemic_cause, no_host_animals)) ::: (B)\nis_exception(weakens(epidemic_cause, not_all_hiccups)) ::: (C)\nis_exception(weakens(epidemic_cause, more_contagious)) ::: (D)"
    ]
  },
  {
    "id": "test_831",
    "context": "Marc: The fact that the people of our country look back on the past with a great deal of nostalgia demonstrates that they regret the recent revolution. Robert: They are not nostalgic for the recent past, but for the distant past, which the prerevolutionary regime despised; this indicates that although they are troubled, they do not regret the revolution.",
    "question": "Their dialogue provides the most support for the claim that Marc and Robert agree that the people of their country",
    "options": [
      "are looking to the past for solutions to the country's current problems",
      "tend to be most nostalgic for the things that are the farthest in their past",
      "are concerned about the country's current situation and this is evidenced by their nostalgia",
      "tend to underrate past problems when the country faces troubling times"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Marc, Robert])\ntime_periods = EnumSort([recent_past, distant_past])\nfeelings = EnumSort([nostalgic, regretful, troubled])\nregime = EnumSort([prerevolutionary, postrevolutionary])\nagreement = Function([people, time_periods, feelings, regime] -> [bool])\n\n# Constraints\nForAll([p:people, t:time_periods, f:feelings, r:regime], Or(agreement(p, t, f, r), Not(agreement(p, t, f, r)))) ::: Each person either agrees or disagrees with a statement about the people's feelings towards a time period and regime\n\n# Options\nQuestion ::: Their dialogue provides the most support for the claim that Marc and Robert agree that the people of their country\nis_supported(agreement(Marc, distant_past, nostalgic, prerevolutionary) == agreement(Robert, distant_past, nostalgic, prerevolutionary)) ::: (A) are looking to the past for solutions to the country's current problems\nis_supported(agreement(Marc, distant_past, nostalgic, prerevolutionary) == agreement(Robert, distant_past, nostalgic, prerevolutionary)) ::: (B) tend to be most nostalgic for the things that are the farthest in their past\nis_supported(agreement(Marc, recent_past, troubled, postrevolutionary) == agreement(Robert, recent_past, troubled, postrevolutionary)) ::: (C) are concerned about the country's current situation and this is evidenced by their nostalgia\nis_supported(agreement(Marc, distant_past, nostalgic, prerevolutionary) == agreement(Robert, distant_past, nostalgic, prerevolutionary)) ::: (D) tend to underrate past problems when the country faces troubling times"
    ]
  },
  {
    "id": "test_832",
    "context": "The number of different synthetic chemical compounds that are known to be carcinogenic but are nonetheless used as pesticides, preservatives, or food additives is tiny compared to the number of nonsynthetic carcinogenic compounds widely found in plants and animals. It is ttherefore absurd to suppose that the rise in the cancer rate in recent decades is due to synthetic carcinogens.",
    "question": "The reasoning above is most vulnerable to criticism on the grounds that it overlooks the possibility that",
    "options": [
      "some synthetic chemical compounds that are not known to be carcinogenic are in other respects toxic",
      "the rise in the cancer rate in recent decades is due to something other than increased exposure to carcinogens",
      "people can vary greatly in their susceptibility to cancers caused by nonsynthetic carcinogens",
      "people undergo significantly less exposure to carcinogens that are not synthetic than to those that are synthetic"
    ],
    "raw_logic_programs": [
      "# Declarations\nsynthetic_compounds = EnumSort([carcinogenic, non_carcinogenic])\nexposure = Function([synthetic_compounds] -> [int])\ncancer_rate = Function([int] -> [bool])\n\n# Constraints\nexposure(carcinogenic) < exposure(non_carcinogenic) ::: The number of different synthetic chemical compounds that are known to be carcinogenic is tiny compared to nonsynthetic carcinogenic compounds\ncancer_rate(exposure(carcinogenic)) == False ::: It is absurd to suppose that the rise in the cancer rate is due to synthetic carcinogens\n\n# Options\nQuestion ::: The reasoning above is most vulnerable to criticism on the grounds that it overlooks the possibility that\nis_overlooked(Exists([c:synthetic_compounds], And(c != carcinogenic, toxic(c)))) ::: (some synthetic chemical compounds that are not known to be carcinogenic are in other respects toxic\nis_overlooked(Exists([x:int], And(x != exposure(carcinogenic), cancer_rate(x)))) ::: (the rise in the cancer rate in recent decades is due to something other than increased exposure to carcinogens\nis_overlooked(Exists([p:people], susceptibility(p, nonsynthetic_carcinogens) != susceptibility(p, synthetic_carcinogens))) ::: (people can vary greatly in their susceptibility to cancers caused by nonsynthetic carcinogens\nis_overlooked(exposure(non_carcinogenic) < exposure(carcinogenic)) ::: (people undergo significantly less exposure to carcinogens that are not synthetic than to those that are synthetic"
    ]
  },
  {
    "id": "test_833",
    "context": "The populations of certain species of amphibians have declined dramatically in recent years, an effect many scientists attribute to industrial pollution. However, most amphibian species' populations vary greatly from year to year because of natural variations in the weather. It is ttherefore impossible to be sure that the recent decline in those amphibian populations is due to industrial pollution.",
    "question": "The argument depends on assuming which one of the following?",
    "options": [
      "If industrial pollution is severe, it can create more variations in the weather than would occur naturally.",
      "If industrial pollution were reduced, the decline in certain amphibian populations would be reversed, and if industrial pollution increases, the decline in certain amphibian populations will be exacerbated.",
      "The variations in amphibian species' populations that result from natural variations in the weather are not always as large as the amphibian population declines that scientists have attributed to industrial pollution.",
      "The amphibian species whose population declines have been attributed by many scientists to industrial pollution are not known to be among those species whose populations do not vary greatly as a result of natural variations in the weather."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([amphibians])\nfactors = EnumSort([industrial_pollution, natural_weather_variations])\npopulations = Function([species, factors] -> [int])\n\n# Constraints\nForAll([s:species], populations(s, natural_weather_variations) > 0) ::: Most amphibian species' populations vary greatly from year to year because of natural variations in the weather\nForAll([s:species], populations(s, industrial_pollution) < 0) ::: The populations of certain species of amphibians have declined dramatically in recent years, an effect many scientists attribute to industrial pollution\n\n# Options\nQuestion ::: The argument depends on assuming which one of the following?\nis_assumption(ForAll([s:species], populations(s, natural_weather_variations) >= populations(s, industrial_pollution))) ::: (A) If industrial pollution is severe, it can create more variations in the weather than would occur naturally.\nis_assumption(ForAll([s:species], Implies(populations(s, industrial_pollution) < 0, populations(s, industrial_pollution) > 0))) ::: (B) If industrial pollution were reduced, the decline in certain amphibian populations would be reversed, and if industrial pollution increases, the decline in certain amphibian populations will be exacerbated.\nis_assumption(Exists([s:species], populations(s, natural_weather_variations) < populations(s, industrial_pollution))) ::: (C) The variations in amphibian species' populations that result from natural variations in the weather are not always as large as the amphibian population declines that scientists have attributed to industrial pollution.\nis_assumption(ForAll([s:species], Implies(populations(s, industrial_pollution) < 0, populations(s, natural_weather_variations) > 0))) ::: (D) The amphibian species whose population declines have been attributed by many scientists to industrial pollution are not known to be among those species whose populations do not vary greatly as a result of natural variations in the weather."
    ]
  },
  {
    "id": "test_834",
    "context": "The only fossilized bones of large prey found in and around settlements of early humans bear teeth marks of nonhuman predators on areas of the skeleton that had the most meat, and cut marks made by humans on the areas that had the least meat. The predators that hunted large prey invariably ate the meatiest parts of the carcasses, leaving uneaten remains behind.",
    "question": "If the information above is true, it provides the most support for which one of the following?",
    "options": [
      "Early humans would have been more effective hunters of large prey if they had hunted in large groups rather than individually.",
      "Early humans were nomadic, and their settlements followed the migratory patterns of predators of large prey.",
      "Early humans were predators of small prey, not of large prey.",
      "Early humans were not hunters of large prey but scavenged the uneaten remains of prey killed by other predators."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([fossil_evidence, predator_behavior, human_behavior])\nconclusions = EnumSort([effective_hunters, nomadic_settlements, small_prey_predators, scavengers])\nsupports = Function([statements, conclusions] -> [bool])\n\n# Constraints\nsupports(fossil_evidence, scavengers) ::: The only fossilized bones of large prey found in and around settlements of early humans bear teeth marks of nonhuman predators on areas of the skeleton that had the most meat, and cut marks made by humans on the areas that had the least meat\nsupports(predator_behavior, scavengers) ::: The predators that hunted large prey invariably ate the meatiest parts of the carcasses, leaving uneaten remains behind\n\n# Options\nQuestion ::: If the information above is true, it provides the most support for which one of the following?\nis_most_supported(supports(fossil_evidence, scavengers) and supports(predator_behavior, scavengers)) ::: (Early humans were not hunters of large prey but scavenged the uneaten remains of prey killed by other predators)\nis_most_supported(supports(fossil_evidence, effective_hunters)) ::: (Early humans would have been more effective hunters of large prey if they had hunted in large groups rather than individually)\nis_most_supported(supports(fossil_evidence, nomadic_settlements)) ::: (Early humans were nomadic, and their settlements followed the migratory patterns of predators of large prey)\nis_most_supported(supports(fossil_evidence, small_prey_predators)) ::: (Early humans were predators of small prey, not of large prey)"
    ]
  },
  {
    "id": "test_835",
    "context": "Marian Anderson, the famous contralto, did not take success for granted. We know this because Anderson had to struggle early in life, and anyone who has to struggle early in life is able to keep a good perspective on the world.",
    "question": "The conclusion of the argument follows logically if which one of the following is assumed?",
    "options": [
      "Anyone who does not take success for granted has to struggle early in life.",
      "Anyone who does not take success for granted is able to keep a good perspective on the world.",
      "Anyone who is able to keep a good perspective on the world has to struggle early in life.",
      "Anyone who is able to keep a good perspective on the world does not take success for granted."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Marian_Anderson])\nattributes = EnumSort([struggled_early, good_perspective, does_not_take_success_for_granted])\nhas_attribute = Function([people, attributes] -> [bool])\n\n# Constraints\nhas_attribute(Marian_Anderson, struggled_early) ::: Anderson had to struggle early in life\nForAll([p:people], Implies(has_attribute(p, struggled_early), has_attribute(p, good_perspective))) ::: anyone who has to struggle early in life is able to keep a good perspective on the world\n\n# Options\nQuestion ::: The conclusion of the argument follows logically if which one of the following is assumed?\nis_valid(ForAll([p:people], Implies(has_attribute(p, does_not_take_success_for_granted), has_attribute(p, struggled_early)))) ::: (A)\nis_valid(ForAll([p:people], Implies(has_attribute(p, does_not_take_success_for_granted), has_attribute(p, good_perspective)))) ::: (B)\nis_valid(ForAll([p:people], Implies(has_attribute(p, good_perspective), has_attribute(p, struggled_early)))) ::: (C)\nis_valid(ForAll([p:people], Implies(has_attribute(p, good_perspective), has_attribute(p, does_not_take_success_for_granted)))) ::: (D)"
    ]
  },
  {
    "id": "test_836",
    "context": "It is not correct that the people of the United States, relative to comparable countries, are the most lightly taxed. True, the United States has the lowest tax, as percent of gross domestic product, of the Western industrialized countries, but tax rates alone do not tell the whole story. People in the United States pay out of pocket for many goods and services provided from tax revenues elsewhere. Consider universal health care, which is an entitlement supported by tax revenues in every other Western industrialized country. United States government health-care expenditures are equivalent to about 5 percent of the gross domestic product, but private health-care expenditures represent another 7 percent. This 7 percent, then, amounts to a tax.",
    "question": "The argument concerning whether the people of the United States are the most lightly taxed is most vulnerable to which one of the following criticisms?",
    "options": [
      "It sets up a dichotomy between alternatives that are not exclusive.",
      "It generalizes from only a few instances.",
      "It bases a comparison on percentages rather than on absolute numbers.",
      "It unreasonably extends the application of a key term."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([United_States, Other_Western_Countries])\nexpenditures = EnumSort([tax_revenue, private_expenditure])\nservices = EnumSort([health_care])\npercent_gdp = Function([countries, expenditures, services] -> [float])\n\n# Constraints\npercent_gdp(United_States, tax_revenue, health_care) == 5.0 ::: United States government health-care expenditures are equivalent to about 5 percent of the gross domestic product\npercent_gdp(United_States, private_expenditure, health_care) == 7.0 ::: private health-care expenditures represent another 7 percent\nForAll([c:countries], percent_gdp(c, tax_revenue, health_care) > 0) ::: universal health care is an entitlement supported by tax revenues in every other Western industrialized country\n\n# Options\nQuestion ::: The argument concerning whether the people of the United States are the most lightly taxed is most vulnerable to which one of the following criticisms?\nis_vulnerable(It_sets_up_a_dichotomy_between_alternatives_that_are_not_exclusive) ::: (A)\nis_vulnerable(It_generalizes_from_only_a_few_instances) ::: (B)\nis_vulnerable(It_bases_a_comparison_on_percentages_rather_than_on_absolute_numbers) ::: (C)\nis_vulnerable(It_unreasonably_extends_the_application_of_a_key_term) ::: (D)"
    ]
  },
  {
    "id": "test_837",
    "context": "In the past, traditional, 2-D films made by Hollywood studios have been considered more lucrative than 3-D films. Nevertheless, a recent study has found that the most popular films from the past year used 3-D techniques significantly more than less popular films did. This confirms the view that 3-D films have become more lucrative than traditional, 2-D films.",
    "question": "The conclusion above is based on which of the following assumptions?",
    "options": [
      "The majority of films made in the past year were filmed exclusively in 3-D.",
      "The most popular films earn more money than less popular films.",
      "Hollywood studios have the technical capabilities to produce either 2-D or 3-D films.",
      "Films shot in 2-D could be made as easily by using 3-D technologies."
    ],
    "raw_logic_programs": [
      "# Declarations\nfilms = EnumSort([popular, less_popular])\ntechniques = EnumSort([two_d, three_d])\nlucrative = Function([films] -> [bool])\nused_technique = Function([films] -> [techniques])\n\n# Constraints\nused_technique(popular) == three_d ::: The most popular films from the past year used 3-D techniques significantly more than less popular films did\n\n# Options\nQuestion ::: The conclusion above is based on which of the following assumptions?\nis_assumption(lucrative(popular) == True) ::: (The most popular films earn more money than less popular films)\nis_assumption(Count([f:films], used_technique(f) == three_d) > Count([f:films], used_technique(f) == two_d)) ::: (The majority of films made in the past year were filmed exclusively in 3-D)\nis_assumption(Exists([f:films], used_technique(f) == two_d)) ::: (Hollywood studios have the technical capabilities to produce either 2-D or 3-D films)\nis_assumption(ForAll([f:films], Implies(used_technique(f) == two_d, used_technique(f) == three_d))) ::: (Films shot in 2-D could be made as easily by using 3-D technologies)"
    ]
  },
  {
    "id": "test_838",
    "context": "Experimental psychology requires the application of statistics to interpret empirical data and assess their significance. A person will not be able to understand such applications without training in statistics. Ttherefore, the more training one has in statistics, the better one will be at research in experimental psychology.",
    "question": "Which one of the following arguments exhibits a flawed pattern of reasoning most similar to that exhibited by the argument above?",
    "options": [
      "Since many disease processes are biochemical in nature, unless one understands chemistry one will not be able to understand the explanations for many diseases. Ttherefore, if one has no training in chemistry, one will not be able to master medicine.",
      "Most people need the love and support of others; without it, they become depressed and unhappy. Ttherefore, in most instances, the more love and support a person receives, the happier that person will be.",
      "Since most disease processes are biochemical in nature, an understanding of chemistry will enable one to understand most diseases. Ttherefore, one needs little more than training in chemistry to be able to master medicine.",
      "Since in most jobs there are annual wage or salary increases, the longer one has worked, the more raises one will have received. Ttherefore, in a typical job, the longer one has worked, the greater one's income will be."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nreasoning(A) == (Implies(And(Understands(Chemistry), Understands(Diseases)), Master(Medicine))) ::: Since many disease processes are biochemical in nature, unless one understands chemistry one will not be able to understand the explanations for many diseases. Therefore, if one has no training in chemistry, one will not be able to master medicine.\nreasoning(B) == (Implies(And(Needs(Love), Needs(Support)), Happy(Person))) ::: Most people need the love and support of others; without it, they become depressed and unhappy. Therefore, in most instances, the more love and support a person receives, the happier that person will be.\nreasoning(C) == (Implies(Understands(Chemistry), Understands(Diseases))) ::: Since most disease processes are biochemical in nature, an understanding of chemistry will enable one to understand most diseases. Therefore, one needs little more than training in chemistry to be able to master medicine.\nreasoning(D) == (Implies(And(Worked(Long), Received(Raises)), Greater(Income))) ::: Since in most jobs there are annual wage or salary increases, the longer one has worked, the more raises one will have received. Therefore, in a typical job, the longer one has worked, the greater one's income will be.\n\n# Options\nQuestion ::: Which one of the following arguments exhibits a flawed pattern of reasoning most similar to that exhibited by the argument above?\nis_similar_flawed_pattern(reasoning(A)) ::: (A)\nis_similar_flawed_pattern(reasoning(B)) ::: (B)\nis_similar_flawed_pattern(reasoning(C)) ::: (C)\nis_similar_flawed_pattern(reasoning(D)) ::: (D)"
    ]
  },
  {
    "id": "test_839",
    "context": "At night, a flock of crows will generally perch close together in a small place -- often a piece of wooded land -- called a roost. Each morning, the crows leave the roost and fan out in small groups to hunt and scavenge the surrounding area. For most flocks, the crows' hunting extends as far as 100 to 130 kilometers (60 to 80 miles) from the roost. Normally, a flock will continue to occupy the same roost for several consecutive years, and when it abandons a roost site for a new one, the new roost is usually less than eight kilometers (five miles) away:",
    "question": "Of the following claims, which one can most justifiably be rejected on the basis of the statements above?",
    "options": [
      "Once a flock of crows has settled on a new roost site, it is extremely difficult to force it to abandon that site for another.",
      "Crows will abandon their roost site only in response to increases in the population of the flock.",
      "When a flock of crows moves to a new roost site, it generally does so because the area in which it has hunted and scavenged has been depleted of food sources.",
      "When there is a shortage of food in the area in which a flock of crows normally hunts and scavenges, some members of the flock will begin to hunt and scavenge outside that area."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([claim1, claim2, claim3, claim4])\n\n# Constraints\nroost_distance = Function([int] -> [bool])\nhunting_distance = Function([int] -> [bool])\n\nForAll([d:int], Implies(And(100 <= d, d <= 130), hunting_distance(d))) ::: For most flocks, the crows' hunting extends as far as 100 to 130 kilometers\nForAll([d:int], Implies(d < 8, roost_distance(d))) ::: When it abandons a roost site for a new one, the new roost is usually less than eight kilometers away\n\n# Options\nQuestion ::: Of the following claims, which one can most justifiably be rejected on the basis of the statements above?\nis_rejectable(Implies(Exists([d:int], Not(roost_distance(d))), claim1)) ::: (Once a flock of crows has settled on a new roost site, it is extremely difficult to force it to abandon that site for another.\nis_rejectable(Implies(Exists([d:int], Not(roost_distance(d))), claim2)) ::: (Crows will abandon their roost site only in response to increases in the population of the flock.\nis_rejectable(Implies(Exists([d:int], Not(roost_distance(d))), claim3)) ::: (When a flock of crows moves to a new roost site, it generally does so because the area in which it has hunted and scavenged has been depleted of food sources.\nis_rejectable(Implies(Exists([d:int], Not(hunting_distance(d))), claim4)) ::: (When there is a shortage of food in the area in which a flock of crows normally hunts and scavenges, some members of the flock will begin to hunt and scavenge outside that area."
    ]
  },
  {
    "id": "test_840",
    "context": "President Abraham Lincoln presided over a divided nation that would soon be engulfed in the bloodiest war in American history. After Lincoln' s election as President, but prior to his inauguration, seven Southern states seceded, and four more states seceded after the battle of Fort Sumter on April 12, 1861. Later that month, President Lincoln grew concerned that Washington D. C. could not be defended, particularly due to rebel riots in Baltimore. As a result, President Lincoln suspended the right of habeus corpus for the first time in American history. Although President Lincoln took an unprecedented step, his decision was. . .",
    "question": "Which of the following best completes the argument?",
    "options": [
      "unprecedented in American history.",
      "necessary to end the Civil War quickly.",
      "justified in light of the unprecedented national emergency.",
      "illegal under the Constitution of the United States."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([election, inauguration, secession1, secession2, battle, suspension])\nactions = EnumSort([suspend_habeas_corpus])\njustifications = EnumSort([unprecedented, necessary, justified, illegal])\ndecision = Function([actions] -> [justifications])\n\n# Constraints\nBefore(election, inauguration) ::: Lincoln's election occurred before his inauguration\nBefore(inauguration, secession1) ::: Seven Southern states seceded after Lincoln's election but before his inauguration\nBefore(secession1, battle) ::: The battle of Fort Sumter occurred after the first secession\nBefore(battle, secession2) ::: Four more states seceded after the battle of Fort Sumter\nBefore(secession2, suspension) ::: Lincoln suspended habeas corpus after the second secession\nConcerned(After(battle, suspension)) ::: Lincoln was concerned about the defense of Washington D.C. after the battle\n\n# Options\nQuestion ::: Which of the following best completes the argument?\ndecision(suspend_habeas_corpus) == unprecedented ::: (unprecedented in American history)\ndecision(suspend_habeas_corpus) == necessary ::: (necessary to end the Civil War quickly)\ndecision(suspend_habeas_corpus) == justified ::: (justified in light of the unprecedented national emergency)\ndecision(suspend_habeas_corpus) == illegal ::: (illegal under the Constitution of the United States)"
    ]
  },
  {
    "id": "test_841",
    "context": "A provincial government plans to raise the gasoline tax to give people an incentive to drive less, reducing traffic congestion in the long term. However, skeptics point out that most people in the province live in areas where cars are the only viable transportation to jobs and stores and ttherefore cannot greatly change their driving habits in response to higher gasoline prices.",
    "question": "In light of the skeptics' objection, which of the following, if true, would most logically support the prediction that the government's plan will achieve its goal of reducing traffic congestion?",
    "options": [
      "The revenue from the tax will be used to make public transportation a viable means of transportation to jobs and stores for far more people.",
      "Traffic congestion is an especially serious problem for people for whom cars are the only viable means of transportation.",
      "Most residents who cannot greatly change their driving habits could compensate for high gasoline prices by reducing other expenses.",
      "The tax will encourage many residents to switch to more fuel-efficient cars, reducing air pollution and other problems."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `people = EnumSort([residents])`\n- `transportation = EnumSort([cars, public_transportation])`\n- `areas = EnumSort([urban, rural])`\n- `goal = Function([people] -> [bool])`\n- `viable_transportation = Function([people, areas] -> [transportation])`\n- `tax_effect = Function([people] -> [bool])`\n\n# Constraints\n- `ForAll([p:people], viable_transportation(p, rural) == cars)` ::: Most people in the province live in areas where cars are the only viable transportation to jobs and stores.\n- `ForAll([p:people], Implies(viable_transportation(p, rural) == cars, Not(goal(p))))` ::: People who rely solely on cars cannot greatly change their driving habits in response to higher gasoline prices.\n\n# Options\n- `Question` ::: Which of the following, if true, would most logically support the prediction that the government's plan will achieve its goal of reducing traffic congestion?\n- `is_supportive(Exists([p:people], And(tax_effect(p), viable_transportation(p, urban) == public_transportation)))` ::: (The revenue from the tax will be used to make public transportation a viable means of transportation to jobs and stores for far more people.\n- `is_supportive(Exists([p:people], And(tax_effect(p), viable_transportation(p, rural) == cars)))` ::: (Traffic congestion is an especially serious problem for people for whom cars are the only viable means of transportation.\n- `is_supportive(Exists([p:people], And(tax_effect(p), Not(goal(p)))))` ::: (Most residents who cannot greatly change their driving habits could compensate for high gasoline prices by reducing other expenses.\n- `is_supportive(Exists([p:people], And(tax_effect(p), viable_transportation(p, rural) == cars)))` ::: (The tax will encourage many residents to switch to more fuel-efficient cars, reducing air pollution and other problems."
    ]
  },
  {
    "id": "test_842",
    "context": "In an experiment, volunteers walked individually through a dark, abandoned theater. Half of the volunteers had been told that the theater was haunted and the other half that it was under renovation. The first half reported significantly more unusual experiences than the second did. The researchers concluded that reports of encounters with ghosts and other supernatural entities generally result from prior expectations of such experiences.",
    "question": "Which of the following, if true, would most seriously weaken the researchers' reasoning?",
    "options": [
      "Each unusual experience reported by the volunteers had a cause that did not involve the supernatural.",
      "All of the volunteers in the first half believed that the researchers' statement that the theater was haunted was a lie.",
      "None of the volunteers in the second half believed that the unusual experiences they reported were supernatural.",
      "The researchers did not believe that the theater was haunted."
    ],
    "raw_logic_programs": [
      "# Declarations\nvolunteers = EnumSort([first_half, second_half])\nexperiences = EnumSort([unusual, not_unusual])\nbeliefs = EnumSort([haunted, renovation])\nreports = Function([volunteers] -> [experiences])\nbelief = Function([volunteers] -> [beliefs])\n\n# Constraints\nForAll([v:volunteers], Or(reports(v) == unusual, reports(v) == not_unusual)) ::: Each volunteer reports either unusual or not unusual experiences\nForAll([v:volunteers], Or(belief(v) == haunted, belief(v) == renovation)) ::: Each volunteer believes either the theater is haunted or under renovation\nreports(first_half) == unusual ::: The first half reported significantly more unusual experiences\nreports(second_half) == not_unusual ::: The second half reported fewer unusual experiences\n\n# Options\nQuestion ::: Which of the following, if true, would most seriously weaken the researchers' reasoning?\nis_weakened(ForAll([v:volunteers], Exists([c:causes], And(c != supernatural, cause_of(reports(v)) == c)))) ::: (A) Each unusual experience reported by the volunteers had a cause that did not involve the supernatural\nis_weakened(ForAll([v:volunteers], Implies(belief(v) == haunted, belief_in_truth(v) == false))) ::: (B) All of the volunteers in the first half believed that the researchers' statement that the theater was haunted was a lie\nis_weakened(ForAll([v:volunteers], Implies(reports(v) == unusual, belief_in_supernatural(v) == false))) ::: (C) None of the volunteers in the second half believed that the unusual experiences they reported were supernatural\nis_weakened(researchers_belief == haunted) ::: (D) The researchers did not believe that the theater was haunted"
    ]
  },
  {
    "id": "test_843",
    "context": "Several years ago, most of one country' s large banks failed and were taken over by a government agency. The agency is now selling these banks, aiming to strengthen the banking system in the process. But the banking system will not be strengthened if the former owners of these banks buy them back. So the agency is unlikely to achieve its goal, since__.",
    "question": "The conclusion of the argument is properly drawn if which one of the following completes the passage?",
    "options": [
      "all of the bidders for the banks are their former owners",
      "a single company could buy more than one of the banks",
      "the banks sold by the agency will be financially weaker than the country's other banks for some time",
      "the country's overall economy is not much stronger than it was when the large banks failed"
    ],
    "raw_logic_programs": [
      "# Declarations\nbanks = EnumSort([bank1, bank2, bank3, ...])  # Representing the banks being sold\nowners = EnumSort([owner1, owner2, owner3, ...])  # Representing the former owners of the banks\nbidders = EnumSort([bidder1, bidder2, bidder3, ...])  # Representing the current bidders for the banks\nowns = Function([bidders, banks] -> [bool])  # Function to determine if a bidder owns a bank\nformer_owner = Function([owners, banks] -> [bool])  # Function to determine if an owner was a former owner of a bank\n\n# Constraints\nForAll([b:banks], Exists([o:owners], former_owner(o, b))) ::: Each bank has a former owner\nForAll([b:banks], Exists([bid:bidders], owns(bid, b))) ::: Each bank is being bid on by at least one bidder\n\n# Options\nQuestion ::: The conclusion of the argument is properly drawn if which one of the following completes the passage?\nis_valid(ForAll([b:banks], Exists([bid:bidders], And(owns(bid, b), Exists([o:owners], And(former_owner(o, b), bid == o)))))) ::: (A) all of the bidders for the banks are their former owners\nis_valid(Exists([c:companies], Count([b:banks], owns(c, b)) > 1)) ::: (B) a single company could buy more than one of the banks\nis_valid(ForAll([b:banks], weaker_than_other_banks(b))) ::: (C) the banks sold by the agency will be financially weaker than the country's other banks for some time\nis_valid(not_much_stronger_than_before) ::: (D) the country's overall economy is not much stronger than it was when the large banks failed"
    ]
  },
  {
    "id": "test_844",
    "context": "An easy willingness to tell funny stories or jokes about oneself is the surest mark of supreme self-confidence. This willingness, often not acquired until late in life, is even more revealing than is good-natured acquiescence in having others poke fun at one.",
    "question": "Which one of the following inferences is most supported by the statements above?",
    "options": [
      "Highly self-confident people tell funny stories and jokes in order to let their audience know that they are self-confident.",
      "A person who lacks self-confidence will enjoy neither telling nor hearing funny stories about himself or herself.",
      "Telling funny stories or jokes about people in their presence is a way of expressing one's respect for them.",
      "Most people would rather tell a funny story or a joke than listen to one being told."
    ],
    "raw_logic_programs": [
      "# Declarations\nconfidence_levels = EnumSort([high, low])\nactions = EnumSort([tell_funny_stories, enjoy_hearing_stories, express_respect, prefer_telling])\n\n# Constraints\nForAll([c:confidence_levels], Implies(c == high, actions(tell_funny_stories) == true)) ::: Highly self-confident people tell funny stories or jokes about themselves\nForAll([c:confidence_levels], Implies(c == low, actions(enjoy_hearing_stories) == false)) ::: A person who lacks self-confidence will not enjoy hearing funny stories about themselves\n\n# Options\nQuestion ::: Which one of the following inferences is most supported by the statements above?\nis_supported(Implies(actions(tell_funny_stories), actions(express_respect))) ::: (Highly self-confident people tell funny stories and jokes in order to let their audience know that they are self-confident.\nis_supported(Implies(Not(actions(enjoy_hearing_stories)), c == low)) ::: (A person who lacks self-confidence will enjoy neither telling nor hearing funny stories about himself or herself.\nis_supported(Implies(actions(tell_funny_stories), actions(express_respect))) ::: (Telling funny stories or jokes about people in their presence is a way of expressing one's respect for them.\nis_supported(Implies(actions(prefer_telling), Not(actions(enjoy_hearing_stories)))) ::: (Most people would rather tell a funny story or a joke than listen to one being told."
    ]
  },
  {
    "id": "test_845",
    "context": "The new agriculture bill will almost surely fail to pass. The leaders of all major parties have stated that they oppose it.",
    "question": "Which one of the following, if true, adds the most support for the prediction that the agriculture bill will fail to pass?",
    "options": [
      "If the leaders of all major parties endorse the new agriculture bill, it will pass into law.",
      "Most bills that have not been supported by even one leader of a major party have not been passed into law.",
      "Most bills that have not been passed into law were not supported by even one member of a major party.",
      "Most bills that have been passed into law were not unanimously supported by the leaders of all major parties."
    ],
    "raw_logic_programs": [
      "# Declarations\nbills = EnumSort([agriculture_bill])\nparties = EnumSort([major_party])\nleaders = Function([parties] -> [bool])\nsupport = Function([bills, parties] -> [bool])\npass_into_law = Function([bills] -> [bool])\n\n# Constraints\nForAll([p:parties], Not(support(agriculture_bill, p))) ::: The leaders of all major parties have stated that they oppose it.\n\n# Options\nQuestion ::: Which one of the following, if true, adds the most support for the prediction that the agriculture bill will fail to pass?\nis_most_supportive(Implies(ForAll([p:parties], support(agriculture_bill, p)), pass_into_law(agriculture_bill))) ::: (A) If the leaders of all major parties endorse the new agriculture bill, it will pass into law.\nis_most_supportive(Implies(Not(Exists([p:parties], support(agriculture_bill, p))), Not(pass_into_law(agriculture_bill)))) ::: (B) Most bills that have not been supported by even one leader of a major party have not been passed into law.\nis_most_supportive(Implies(Not(pass_into_law(agriculture_bill)), Not(Exists([p:parties], support(agriculture_bill, p))))) ::: (C) Most bills that have not been passed into law were not supported by even one member of a major party.\nis_most_supportive(Implies(pass_into_law(agriculture_bill), Not(ForAll([p:parties], support(agriculture_bill, p))))) ::: (D) Most bills that have been passed into law were not unanimously supported by the leaders of all major parties."
    ]
  },
  {
    "id": "test_846",
    "context": "Of the many test pilots who have flown the new plane, none has found it difficult to operate. So it is unlikely that the test pilot flying the plane tomorrow will find it difficult to operate.",
    "question": "The reasoning in which one of the following arguments is most similar to the reasoning in the argument above?",
    "options": [
      "Neither of the two reviewers who enjoyed Sharlene Lo's new novel hoped that Lo would write a sequel. So it is unlikely that the review of the book in next Sunday's newspaper will express hope that Lo will write a sequel.",
      "Many of the book reviewers who read Wim Jashka's new novel before it was published found it very entertaining. So it is unlikely that most people who buy the book will find it boring.",
      "All of the many book reviewers who read Rachel Nguyen's new novel thought that it was particularly well written. So it is likely that the average reader will enjoy the book.",
      "Many reviewers have read Kip Landau's new novel, but none of them enjoyed it. So it is unlikely that the reviewer for the local newspaper will enjoy the book when she reads it."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nreasoning(A) == (ForAll([p:test_pilots], Not(difficult_to_operate(p))) -> Not(difficult_to_operate(test_pilot_tomorrow))) ::: Of the many test pilots who have flown the new plane, none has found it difficult to operate. So it is unlikely that the test pilot flying the plane tomorrow will find it difficult to operate.\n\n# Options\nQuestion ::: The reasoning in which one of the following arguments is most similar to the reasoning in the argument above?\nis_similar(reasoning(A) == (ForAll([r:reviewers], And(enjoyed(r, novel), Not(hoped_for_sequel(r)))) -> Not(hoped_for_sequel(reviewer_sunday)))) ::: (A)\nis_similar(reasoning(B) == (ForAll([r:reviewers], entertaining(r, novel)) -> Not(boring(most_people)))) ::: (B)\nis_similar(reasoning(C) == (ForAll([r:reviewers], well_written(r, novel)) -> likely(enjoy(average_reader)))) ::: (C)\nis_similar(reasoning(D) == (ForAll([r:reviewers], Not(enjoyed(r, novel))) -> Not(enjoyed(reviewer_local)))) ::: (D)"
    ]
  },
  {
    "id": "test_847",
    "context": "When mercury-vapor streetlights are used in areas inhabited by insect-eating bats, the bats feed almost exclusively around the lights, because the lights attract flying insects. In Greenville, the mercury-vapor streetlights are about to be replaced with energy-saving sodium streetlights, which do not attract insects. This change is likely to result in a drop in the population of insect-eating bats in Greenville, since __.",
    "question": "Which of the following most logically completes the argument below?",
    "options": [
      "the bats are unlikely to feed on insects that do not fly",
      "in the absence of local concentrations of the flying insects on which bats feed, the bats expend much more energy on hunting for food, requiring much larger quantities of insects to sustain each bat",
      "the highway department will be able to replace mercury-vapor streetlights with sodium streetlights within a relatively short time and without disrupting the continuity of lighting at the locations of the streetlights",
      "bats use echolocation to catch insects and ttherefore gain no advantage from the fact that insects flying in the vicinity of streetlights are visible at night"
    ],
    "raw_logic_programs": [
      "# Declarations\nbats = EnumSort([insect_eating])\nlights = EnumSort([mercury_vapor, sodium])\neffects = EnumSort([attract_insects, do_not_attract_insects])\npopulation_change = EnumSort([increase, decrease, no_change])\nfeeding_behavior = EnumSort([feed_around_lights, do_not_feed_around_lights])\nenergy_expenditure = EnumSort([high, low])\n\n# Constraints\nForAll([l:lights], Implies(l == mercury_vapor, effects(l) == attract_insects)) ::: Mercury-vapor streetlights attract flying insects\nForAll([l:lights], Implies(l == sodium, effects(l) == do_not_attract_insects)) ::: Sodium streetlights do not attract insects\nForAll([b:bats], Implies(effects(mercury_vapor) == attract_insects, feeding_behavior(b) == feed_around_lights)) ::: Bats feed around lights that attract insects\nForAll([b:bats], Implies(effects(sodium) == do_not_attract_insects, feeding_behavior(b) == do_not_feed_around_lights)) ::: Bats do not feed around lights that do not attract insects\n\n# Options\nQuestion ::: Which of the following most logically completes the argument below?\nis_logical_completion(Implies(feeding_behavior(insect_eating) == do_not_feed_around_lights, population_change(insect_eating) == decrease)) ::: (the bats are unlikely to feed on insects that do not fly)\nis_logical_completion(Implies(energy_expenditure(insect_eating) == high, population_change(insect_eating) == decrease)) ::: (in the absence of local concentrations of the flying insects on which bats feed, the bats expend much more energy on hunting for food, requiring much larger quantities of insects to sustain each bat)\nis_logical_completion(Implies(effects(sodium) == do_not_attract_insects, population_change(insect_eating) == no_change)) ::: (the highway department will be able to replace mercury-vapor streetlights with sodium streetlights within a relatively short time and without disrupting the continuity of lighting at the locations of the streetlights)\nis_logical_completion(Implies(feeding_behavior(insect_eating) == feed_around_lights, population_change(insect_eating) == no_change)) ::: (bats use echolocation to catch insects and therefore gain no advantage from the fact that insects flying in the vicinity of streetlights are visible at night)"
    ]
  },
  {
    "id": "test_848",
    "context": "The use of automobile safety seats by children aged 4 and under has nearly doubled in the past 8 years. It is clear that this increase has prevented child fatalities that otherwise would have occurred, because although the number of children aged 4 and under who were killed while riding in cars involved in accidents rose 10 percent over the past 8 years, the total number of serious automobile accidents rose by 20 percent during that period.",
    "question": "Which one of the following, if true, most strengthens the argument?",
    "options": [
      "Children are taking more trips in cars today than they were 8 years ago, but the average total time they spend in cars has remained constant.",
      "The proportion of serious automobile accidents involving child passengers has remained constant over the past 8 years.",
      "The sharpest increase in the use of automobile safety seats over the past 8 years has been for children over the age of 2.",
      "The number of fatalities among adults involved in automobile accidents rose by 10 percent over the past 8 years."
    ],
    "raw_logic_programs": [
      "# Declarations\nchildren = EnumSort([aged_4_and_under, over_4])\ntime_periods = EnumSort([past_8_years])\naccidents = EnumSort([serious, non_serious])\nfatalities = Function([children, time_periods, accidents] -> [int])\naccidents_count = Function([time_periods, accidents] -> [int])\nsafety_seat_use = Function([children, time_periods] -> [int])\n\n# Constraints\nsafety_seat_use(aged_4_and_under, past_8_years) == 2 * safety_seat_use(aged_4_and_under, past_8_years - 8) ::: The use of automobile safety seats by children aged 4 and under has nearly doubled in the past 8 years\nfatalities(aged_4_and_under, past_8_years, serious) == 1.1 * fatalities(aged_4_and_under, past_8_years - 8, serious) ::: The number of children aged 4 and under who were killed while riding in cars involved in accidents rose 10 percent over the past 8 years\naccidents_count(past_8_years, serious) == 1.2 * accidents_count(past_8_years - 8, serious) ::: The total number of serious automobile accidents rose by 20 percent during that period\n\n# Options\nQuestion ::: Which one of the following, if true, most strengthens the argument?\nstrengthens(And(safety_seat_use(aged_4_and_under, past_8_years) > safety_seat_use(aged_4_and_under, past_8_years - 8), accidents_count(past_8_years, serious) == accidents_count(past_8_years - 8, serious))) ::: (A) Children are taking more trips in cars today than they were 8 years ago, but the average total time they spend in cars has remained constant.\nstrengthens(accidents_count(past_8_years, serious) / accidents_count(past_8_years, non_serious) == accidents_count(past_8_years - 8, serious) / accidents_count(past_8_years - 8, non_serious)) ::: (B) The proportion of serious automobile accidents involving child passengers has remained constant over the past 8 years.\nstrengthens(safety_seat_use(over_4, past_8_years) > safety_seat_use(over_4, past_8_years - 8)) ::: (C) The sharpest increase in the use of automobile safety seats over the past 8 years has been for children over the age of 2.\nstrengthens(fatalities(over_4, past_8_years, serious) == 1.1 * fatalities(over_4, past_8_years - 8, serious)) ::: (D) The number of fatalities among adults involved in automobile accidents rose by 10 percent over the past 8 years."
    ]
  },
  {
    "id": "test_849",
    "context": "For any given ticket in a 1000-ticket lottery, it is reasonable to believe that that ticket will lose. Hence, it is reasonable to believe that no ticket will win.",
    "question": "Which one of the following exhibits flawed reasoning most similar to the flawed reasoning in the argument above?",
    "options": [
      "When the chances of a certain horse winning the race are 999 out of 1000, it is reasonable to believe that that horse will win. So it is reasonable to believe that no one other than that horse can win.",
      "It is reasonable to believe that if the most recent flip of a given coin was tails, the next flip will be heads. So if a coin has turned up tails the last 1000 times it was flipped, it is reasonable to believe that it will turn up heads the next time it is flipped.",
      "It is unreasonable to believe that 1000 consecutive coin flips will turn up heads, so it is reasonable to believe that this never happens.",
      "It is reasonable to believe for any randomly drawn playing card that it will not be an ace, so it is reasonable to believe that an ace will never be drawn."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([ticket, horse, coin_flip, card_draw])\noutcomes = EnumSort([lose, win, tails, heads, not_ace, ace])\nbelief = Function([events] -> [outcomes])\n\n# Constraints\nbelief(ticket) == lose ::: For any given ticket in a 1000-ticket lottery, it is reasonable to believe that that ticket will lose\nbelief(horse) == win ::: When the chances of a certain horse winning the race are 999 out of 1000, it is reasonable to believe that that horse will win\nbelief(coin_flip) == heads ::: It is reasonable to believe that if the most recent flip of a given coin was tails, the next flip will be heads\nbelief(card_draw) == not_ace ::: It is reasonable to believe for any randomly drawn playing card that it will not be an ace\n\n# Options\nQuestion ::: Which one of the following exhibits flawed reasoning most similar to the flawed reasoning in the argument above?\nis_similar_flaw(belief(ticket) == lose, belief(card_draw) == not_ace) ::: (A) It is reasonable to believe for any randomly drawn playing card that it will not be an ace, so it is reasonable to believe that an ace will never be drawn.\nis_similar_flaw(belief(ticket) == lose, belief(horse) == win) ::: (B) When the chances of a certain horse winning the race are 999 out of 1000, it is reasonable to believe that that horse will win. So it is reasonable to believe that no one other than that horse can win.\nis_similar_flaw(belief(ticket) == lose, belief(coin_flip) == heads) ::: (C) It is reasonable to believe that if the most recent flip of a given coin was tails, the next flip will be heads. So if a coin has turned up tails the last 1000 times it was flipped, it is reasonable to believe that it will turn up heads the next time it is flipped.\nis_similar_flaw(belief(ticket) == lose, belief(coin_flip) == not_ace) ::: (D) It is unreasonable to believe that 1000 consecutive coin flips will turn up heads, so it is reasonable to believe that this never happens."
    ]
  },
  {
    "id": "test_850",
    "context": "In one state, all cities and most towns have antismoking ordinances. A petition entitled \"Petition for Statewide Smoking Restriction\" is being circulated to voters by campaign workers who ask only, \"Do you want to sign a petition for statewide smoking restriction? \" The petition advocates a state law banning smoking in most retail establishments and in government offices that are open to the public.",
    "question": "Which of the following circumstances would make the petition as circulated misleading to voters who understand the proposal as extending the local ordinances statewide?",
    "options": [
      "Health costs associated with smoking cause health insurance premiums to rise for everyone and so affect nonsmokers.",
      "In rural areas of the state, there are relatively few retail establishments and government offices that are open to the public.",
      "The state law would supersede the local antismoking ordinances, which contain stronger bans than the state law does.",
      "The state law would not affect existing local ordinances banning smoking in places where the fire authorities have determined that smoking would constitute a fire hazard."
    ],
    "raw_logic_programs": [
      "# Declarations\ncities_towns = EnumSort([city, town])\nordinances = EnumSort([antismoking, no_ordinance])\npetition = EnumSort([statewide_smoking_restriction])\nlaws = EnumSort([state_law, local_ordinance])\nbans = EnumSort([stronger_ban, weaker_ban, no_ban])\nestablishments = EnumSort([retail, government_office])\n\n# Constraints\nForAll([c:cities_towns], Or(ordinances(c) == antismoking, ordinances(c) == no_ordinance)) ::: All cities and most towns have antismoking ordinances\npetition == statewide_smoking_restriction ::: Petition advocates a state law banning smoking in most retail establishments and in government offices open to the public\n\n# Options\nQuestion ::: Which of the following circumstances would make the petition as circulated misleading to voters who understand the proposal as extending the local ordinances statewide?\nis_misleading(And(laws(state_law) == weaker_ban, laws(local_ordinance) == stronger_ban)) ::: (The state law would supersede the local antismoking ordinances, which contain stronger bans than the state law does.)"
    ]
  },
  {
    "id": "test_851",
    "context": "Philosopher: Nations are not literally persons; they have no thoughts or feelings, and, literally speaking, they perform no actions. Thus they have no moral rights or responsibilities. But no nation can survive unless many of its citizens attribute such rights and responsibilities to it, for nothing else could prompt people to make the sacrifices national citizenship demands. Obviously, then, a nation __.",
    "question": "Which one of the following most logically completes the philosopher's argument?",
    "options": [
      "is not worth the sacrifices that its citizens make on its behalf",
      "cannot continue to exist unless something other than the false belief that the nation has moral rights motivates its citizens to make sacrifices",
      "cannot survive unless many of its citizens have some beliefs that are literally false",
      "can never be a target of moral praise or blame"
    ],
    "raw_logic_programs": [
      "# Declarations\nnations = EnumSort([nation])\ncitizens = EnumSort([citizen])\nbeliefs = Function([citizens, nations] -> [bool])\nsurvive = Function([nations] -> [bool])\n\n# Constraints\nForAll([n:nations], Not(Exists([c:citizens], beliefs(c, n) == True))) ::: Nations are not literally persons; they have no thoughts or feelings, and, literally speaking, they perform no actions\nForAll([n:nations], Not(survive(n))) ::: Thus they have no moral rights or responsibilities\nForAll([n:nations], Implies(Not(Exists([c:citizens], beliefs(c, n) == True)), Not(survive(n)))) ::: But no nation can survive unless many of its citizens attribute such rights and responsibilities to it\n\n# Options\nQuestion ::: Which one of the following most logically completes the philosopher's argument?\nis_valid(Exists([n:nations], Not(survive(n)) & Exists([c:citizens], beliefs(c, n) == False))) ::: (A) is not worth the sacrifices that its citizens make on its behalf\nis_valid(Exists([n:nations], Not(survive(n)) & Not(Exists([c:citizens], beliefs(c, n) == True)))) ::: (B) cannot continue to exist unless something other than the false belief that the nation has moral rights motivates its citizens to make sacrifices\nis_valid(Exists([n:nations], survive(n) & Exists([c:citizens], beliefs(c, n) == False))) ::: (C) cannot survive unless many of its citizens have some beliefs that are literally false\nis_valid(Exists([n:nations], Not(survive(n)))) ::: (D) can never be a target of moral praise or blame"
    ]
  },
  {
    "id": "test_852",
    "context": "An anthropologist hypothesized that a certain medicinal powder contained a significant amount of the deadly toxin T. When the test she performed for the presence of toxin T was negative, the anthropologist did not report the results. A chemist who nevertheless learned about the test results charged the anthropologist with fraud. The anthropologist, however, countered that those results were invalid because the powder had inadvertently been tested in an acidic solution.",
    "question": "In the absence of the anthropologist's reply, which one of the following principles, if established, would most support the chemist's charge?",
    "options": [
      "Scientists can neglect to report some disconfirmations of their hypotheses and yet be innocent of fraud.",
      "Scientists who neglect to report any experiment that could be interpreted as disconfirming their hypotheses have thereby committed fraud.",
      "Scientists commit fraud whenever they report as valid any test result they know to be invalid.",
      "Scientists can commit fraud and yet report some disconfirmations of their hypotheses."
    ],
    "raw_logic_programs": [
      "# Declarations\nhypotheses = EnumSort([anthropologist_hypothesis])\ntests = EnumSort([test_for_toxin_T])\nresults = EnumSort([positive, negative])\nsolutions = EnumSort([acidic, non_acidic])\nactions = EnumSort([report, not_report])\nfraud = EnumSort([innocent, guilty])\n\n# Constraints\ntest_result(tests, hypotheses) == negative ::: The test for the presence of toxin T was negative\naction_taken(tests, hypotheses) == not_report ::: The anthropologist did not report the results\nsolution_used(tests) == acidic ::: The powder was tested in an acidic solution\n\n# Options\nQuestion ::: In the absence of the anthropologist's reply, which one of the following principles, if established, would most support the chemist's charge?\nis_supportive(Implies(And(action_taken(tests, hypotheses) == not_report, test_result(tests, hypotheses) == negative), fraud == guilty)) ::: (Scientists who neglect to report any experiment that could be interpreted as disconfirming their hypotheses have thereby committed fraud.\nis_supportive(Implies(And(action_taken(tests, hypotheses) == not_report, test_result(tests, hypotheses) == negative), fraud == innocent)) ::: (Scientists can neglect to report some disconfirmations of their hypotheses and yet be innocent of fraud.\nis_supportive(Implies(And(action_taken(tests, hypotheses) == report, test_result(tests, hypotheses) == negative, solution_used(tests) == acidic), fraud == guilty)) ::: (Scientists commit fraud whenever they report as valid any test result they know to be invalid.\nis_supportive(Implies(And(fraud == guilty, action_taken(tests, hypotheses) == report), Exists([t:tests], test_result(t, hypotheses) == negative))) ::: (Scientists can commit fraud and yet report some disconfirmations of their hypotheses."
    ]
  },
  {
    "id": "test_853",
    "context": "Concerned about the financial well-being of its elderly citizens, the government of Runagia decided two years ago to increase by 20 percent the government-provided pension paid to all Runagians over 65. Inflation in the intervening period has been negligible, and the increase has been duly received by all eligible Runagians. Nevertheless, many of them are no better off financially than they were before the increase, in large part because __.",
    "question": "Which of the following most logically completes the passage?",
    "options": [
      "they buy goods whose prices tend to rise especially fast in times of inflation",
      "in Runagia children typically supplement the income of elderly parents, but only by enough to provide them with a comfortable living",
      "Runagian banks are so inefficient that it can take up to three weeks to cash a pension check",
      "the pension was increased when the number of elderly Runagians below the poverty level reached an all-time high"
    ],
    "raw_logic_programs": [
      "# Declarations\nrunagians = EnumSort([elderly])\nfactors = EnumSort([goods_prices, children_support, bank_inefficiency, poverty_level])\nfinancial_status = Function([runagians] -> [bool])\n\n# Constraints\nForAll([r:runagians], financial_status(r) == True) ::: All eligible Runagians received the pension increase\nForAll([r:runagians], Exists([f:factors], financial_status(r) == False)) ::: Many are no better off financially due to some factor\n\n# Options\nQuestion ::: Which of the following most logically completes the passage?\nis_reason(financial_status(elderly) == False, goods_prices) ::: (they buy goods whose prices tend to rise especially fast in times of inflation)\nis_reason(financial_status(elderly) == False, children_support) ::: (in Runagia children typically supplement the income of elderly parents, but only by enough to provide them with a comfortable living)\nis_reason(financial_status(elderly) == False, bank_inefficiency) ::: (Runagian banks are so inefficient that it can take up to three weeks to cash a pension check)\nis_reason(financial_status(elderly) == False, poverty_level) ::: (the pension was increased when the number of elderly Runagians below the poverty level reached an all-time high)"
    ]
  },
  {
    "id": "test_854",
    "context": "Archaeologist: Our team discovered 5, 000-year-old copper tools near a Canadian river, in a spot that offered easy access to the raw materials for birchbark canoes birch, cedar, and spruce trees. The tools are of a sort used by the region' s Aboriginal people in making birchbark canoes in more recent times. It is likely ttherefore that Aboriginal people in Canada built birchbark canoes 5, 000 years ago.",
    "question": "The archaeologist's argument depends on the assumption that the copper tools that were found",
    "options": [
      "are not known to have been used by the region's Aboriginal people for any task other than canoe making",
      "were present in the region 5, 000 years ago",
      "were the only kind of tool that would have been used for canoe making 5, 000 years ago",
      "were designed to be used on material from birch, cedar, and spruce trees only"
    ],
    "raw_logic_programs": [
      "# Declarations\ntools = EnumSort([copper_tools])\ntasks = EnumSort([canoe_making, other_tasks])\ntime_periods = EnumSort([5000_years_ago, recent_times])\nmaterials = EnumSort([birch, cedar, spruce])\nused_for = Function([tools, tasks, time_periods] -> [bool])\ndesigned_for = Function([tools, materials] -> [bool])\n\n# Constraints\nused_for(copper_tools, canoe_making, recent_times) ::: The tools are of a sort used by the region's Aboriginal people in making birchbark canoes in more recent times\nExists([t:tasks], used_for(copper_tools, t, 5000_years_ago)) ::: It is likely that Aboriginal people in Canada built birchbark canoes 5,000 years ago\n\n# Options\nQuestion ::: The archaeologist's argument depends on the assumption that the copper tools that were found\nis_assumption(Not(Exists([t:tasks], And(t != canoe_making, used_for(copper_tools, t, recent_times))))) ::: (A) are not known to have been used by the region's Aboriginal people for any task other than canoe making\nis_assumption(Exists([t:tasks], used_for(copper_tools, t, 5000_years_ago))) ::: (B) were present in the region 5,000 years ago\nis_assumption(ForAll([t:tasks], Implies(t == canoe_making, used_for(copper_tools, t, 5000_years_ago)))) ::: (C) were the only kind of tool that would have been used for canoe making 5,000 years ago\nis_assumption(ForAll([m:materials], designed_for(copper_tools, m))) ::: (D) were designed to be used on material from birch, cedar, and spruce trees only"
    ]
  },
  {
    "id": "test_855",
    "context": "Some food historians conclude that recipes compiled by an ancient Roman named Apicius are a reliable indicator of how wealthy Romans prepared and spiced their food. Since few other recipes from ancient Rome have survived, this conclusion is far too hasty. After all, the recipes of Apicius may have been highly atypical, just like the recipes of many notable modem chefs.",
    "question": "The argument does which one of the following?",
    "options": [
      "It takes issue with the view of some food historians by providing a modem analogue that purportedly undercuts their view.",
      "It rejects a view held by some food historians solely on the grounds that there is insufficient evidence to support it.",
      "It offers support for a view held by some food historians by providing a modem analogue to that view.",
      "It uses a conclusion drawn by some food historians as the basis for a conclusion about a modem analogue."
    ],
    "raw_logic_programs": [
      "# Declarations\nhistorians = EnumSort([Apicius, modern_chefs])\nviews = EnumSort([reliable_indicator, atypical])\nconclusion = Function([historians] -> [views])\n\n# Constraints\nconclusion(Apicius) == reliable_indicator ::: Some food historians conclude that recipes compiled by Apicius are a reliable indicator\nconclusion(modern_chefs) == atypical ::: The recipes of many notable modern chefs are highly atypical\n\n# Options\nQuestion ::: The argument does which one of the following?\nprovides_modern_analogue(conclusion(Apicius), conclusion(modern_chefs)) ::: (It takes issue with the view of some food historians by providing a modern analogue that purportedly undercuts their view.\ninsufficient_evidence(conclusion(Apicius)) ::: (It rejects a view held by some food historians solely on the grounds that there is insufficient evidence to support it.\nsupports_view(conclusion(Apicius), conclusion(modern_chefs)) ::: (It offers support for a view held by some food historians by providing a modern analogue to that view.\ndraws_conclusion(conclusion(Apicius), conclusion(modern_chefs)) ::: (It uses a conclusion drawn by some food historians as the basis for a conclusion about a modern analogue."
    ]
  },
  {
    "id": "test_856",
    "context": "The emission of sulfur dioxide when high-sulfur coal is burned is restricted by law. New coal-burning plants usually comply with the law by installing expensive equipment to filter sulfur dioxide from their emissions. These new plants could save money by installing instead less expensive cleaning equipment that chemically removes most sulfur from coal before combustion.",
    "question": "Which of the following, if known, would be most relevant to evaluating the claim above about how new coal-burning plants could save money?",
    "options": [
      "Whether existing plants that use the filtering equipment could replace this equipment with the cleaning equipment and still compete with new plants that install the cleaning equipment",
      "Whether the expense of installing the cleaning equipment in a new plant is less than the expense of installing the cleaning equipment in an older plant",
      "Whether lawful emissions of sulfur dioxide from coal-burning plants are damaging the environment",
      "Whether the process of cleaning the coal is more expensive than the process of filtering the emissions"
    ],
    "raw_logic_programs": [
      "# Declarations\nplants = EnumSort([new_plant, existing_plant])\nequipment = EnumSort([filtering, cleaning])\ncost = Function([plants, equipment] -> [int])\nprocess_cost = Function([equipment] -> [int])\nemissions = Function([plants] -> [bool])\n\n# Constraints\nForAll([p:plants], emissions(p) == True) ::: Emission of sulfur dioxide is restricted by law\nForAll([p:plants], Or(equipment(p) == filtering, equipment(p) == cleaning)) ::: New plants comply by installing either filtering or cleaning equipment\n\n# Options\nQuestion ::: Which of the following, if known, would be most relevant to evaluating the claim above about how new coal-burning plants could save money?\nis_relevant(cost(new_plant, cleaning) < cost(new_plant, filtering)) ::: (A) Whether existing plants that use the filtering equipment could replace this equipment with the cleaning equipment and still compete with new plants that install the cleaning equipment\nis_relevant(cost(new_plant, cleaning) < cost(existing_plant, cleaning)) ::: (B) Whether the expense of installing the cleaning equipment in a new plant is less than the expense of installing the cleaning equipment in an older plant\nis_relevant(emissions(new_plant) == emissions(existing_plant)) ::: (C) Whether lawful emissions of sulfur dioxide from coal-burning plants are damaging the environment\nis_relevant(process_cost(cleaning) < process_cost(filtering)) ::: (D) Whether the process of cleaning the coal is more expensive than the process of filtering the emissions"
    ]
  },
  {
    "id": "test_857",
    "context": "A recent survey quizzed journalism students about the sorts of stories they themselves wished to read. A significant majority said they wanted to see stories dealing with serious governmental and political issues and had little tolerance for the present popularity of stories covering lifestyle trends and celebrity gossip. This indicates that today' s trends in publishing are based on false assumptions about the interests of the public.",
    "question": "Which one of the following most accurately describes a flaw in the argument's reasoning?",
    "options": [
      "It treats a hypothesis as fact even though it is admittedly unsupported.",
      "It relies on the opinions of a group unlikely to be representative of the group at issue in the conclusion.",
      "It takes what is more likely to be the effect of a phenomenon to be its cause.",
      "It employs language that unfairly represents those who are likely to reject the argument's conclusion."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([journalism_students, general_public])\ninterests = EnumSort([serious_issues, lifestyle_trends, celebrity_gossip])\nsurveyed = Function([groups] -> [interests])\n\n# Constraints\nsurveyed(journalism_students) == serious_issues ::: A significant majority of journalism students want stories on serious governmental and political issues\nsurveyed(journalism_students) != lifestyle_trends ::: Journalism students have little tolerance for lifestyle trends\nsurveyed(journalism_students) != celebrity_gossip ::: Journalism students have little tolerance for celebrity gossip\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the argument's reasoning?\nis_flaw(It relies on the opinions of a group unlikely to be representative of the group at issue in the conclusion) ::: (B)"
    ]
  },
  {
    "id": "test_858",
    "context": "The northern cardinal, a nonmigratory songbird, was rare in Nova Scotia in 1980; the province was considered to be beyond that bird' s usual northern range. By 2000, however, field observations indicated that northern cardinals were quite common there. The average winter temperature rose slightly over that period, so warmer winters are probably responsible for the northern cardinal' s proliferation in Nova Scotia.",
    "question": "Which one of the following, if true, most weakens the argument?",
    "options": [
      "According to field observations, the populations of migratory birds fluctuated less during the period from 1980 to 2000 than the populations of nonmigratory birds.",
      "Because of their red plumage, northern cardinals are easier to spot than most other songbird species are.",
      "Bird feeders, an important source of nutrition to wintering birds, became far more common in Nova Scotia after 1980.",
      "Birds that prey on songbirds became more common in Nova Scotia between 1980 and 2000."
    ],
    "raw_logic_programs": [
      "# Declarations\nbirds = EnumSort([northern_cardinal, migratory_birds, nonmigratory_birds, songbirds])\nfactors = EnumSort([temperature, bird_feeders, predators])\nobservations = Function([birds, factors] -> [bool])\n\n# Constraints\nobservations(northern_cardinal, temperature) ::: The average winter temperature rose slightly over that period\nobservations(northern_cardinal, bird_feeders) ::: Bird feeders became far more common in Nova Scotia after 1980\nobservations(songbirds, predators) ::: Birds that prey on songbirds became more common in Nova Scotia between 1980 and 2000\n\n# Options\nQuestion ::: Which one of the following, if true, most weakens the argument?\nis_weakening(observations(migratory_birds, nonmigratory_birds)) ::: (A) According to field observations, the populations of migratory birds fluctuated less during the period from 1980 to 2000 than the populations of nonmigratory birds.\nis_weakening(observations(northern_cardinal, bird_feeders)) ::: (B) Bird feeders, an important source of nutrition to wintering birds, became far more common in Nova Scotia after 1980.\nis_weakening(observations(songbirds, predators)) ::: (C) Birds that prey on songbirds became more common in Nova Scotia between 1980 and 2000."
    ]
  },
  {
    "id": "test_859",
    "context": "Eighteenth-century moralist: You should never make an effort to acquire expensive new tastes, since they are a drain on your purse and in the course of acquiring them you may expose yourself to sensations that are obnoxious to you. Furthermore, the very effort that must be expended in their acquisition attests their superfluity.",
    "question": "The moralist's reasoning is most vulnerable to criticism on the grounds that the moralist",
    "options": [
      "mistakes a cause of acquisition of expensive tastes for an effect of acquisition of such tastes",
      "uses the inherently vague term \"sensations\" without providing a definition of that term",
      "rejects trying to achieve a goal because of the cost of achieving it, without considering the benefits of achieving it",
      "draws a conclusion that simply restates a claim presented in support of that conclusion"
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([effort, expensive_tastes, purse_drain, obnoxious_sensations, superfluity])\nactions = EnumSort([acquire, expose, expend])\nreasoning = Function([concepts, actions] -> [bool])\n\n# Constraints\nreasoning(expensive_tastes, acquire) ::: You should never make an effort to acquire expensive new tastes\nreasoning(expensive_tastes, purse_drain) ::: they are a drain on your purse\nreasoning(expensive_tastes, expose) ::: in the course of acquiring them you may expose yourself to sensations that are obnoxious to you\nreasoning(effort, expend) ::: the very effort that must be expended in their acquisition attests their superfluity\n\n# Options\nQuestion ::: The moralist's reasoning is most vulnerable to criticism on the grounds that the moralist\nis_vulnerable(reasoning(expensive_tastes, acquire) == reasoning(expensive_tastes, expose)) ::: (A) mistakes a cause of acquisition of expensive tastes for an effect of acquisition of such tastes\nis_vulnerable(reasoning(expensive_tastes, expose) == reasoning(obnoxious_sensations, expose)) ::: (B) uses the inherently vague term \"sensations\" without providing a definition of that term\nis_vulnerable(reasoning(expensive_tastes, acquire) == reasoning(expensive_tastes, purse_drain)) ::: (C) rejects trying to achieve a goal because of the cost of achieving it, without considering the benefits of achieving it\nis_vulnerable(reasoning(effort, expend) == reasoning(superfluity, expend)) ::: (D) draws a conclusion that simply restates a claim presented in support of that conclusion"
    ]
  },
  {
    "id": "test_860",
    "context": "Juarez thinks that the sales proposal will be rejected by the committee if it is not rewritten before they see it. Juarez' s opinion is very reliable on such matters. Thus, since the proposal will not be rewritten, it will probably be rejected by the committee.",
    "question": "The reasoning in which one of the following arguments is most similar to the reasoning in the argument above?",
    "options": [
      "A leading science journal states that a certain controversial new medication is safe if the data provided by the company that developed the drug are accurate. Thus, the medication is probably safe, for the science journal is rarely wrong about such matters, and the company's data are accurate.",
      "A leading science journal states that the data provided by the manufacturer of a controversial new medication are probably accurate and that if they are accurate, the medication is safe. Thus, the manufacturer's data are probably accurate, for the science journal is fairly reliable on such matters.",
      "The data from the manufacturer of a controversial new medication are probably accurate, because a leading science journal has published the data and has concluded that the data are probably accurate. Moreover, the journal is fairly reliable on such matters.",
      "A leading science journal has concluded that data provided by the manufacturer of a certain controversial new medication are accurate. The journal is generally reliable on such matters. Thus, the medication is probably safe, for if the company's data are accurate, the medication must be safe."
    ],
    "raw_logic_programs": [
      "# Declarations\nproposals = EnumSort([sales_proposal])\nactions = EnumSort([rewritten, not_rewritten])\noutcomes = EnumSort([rejected, not_rejected])\nopinion = Function([proposals, actions] -> [outcomes])\n\n# Constraints\nopinion(sales_proposal, not_rewritten) == rejected ::: Juarez thinks that the sales proposal will be rejected by the committee if it is not rewritten\nopinion(sales_proposal, rewritten) != rejected ::: Juarez' s opinion is very reliable on such matters\n\n# Options\nQuestion ::: The reasoning in which one of the following arguments is most similar to the reasoning in the argument above?\nis_similar(And(opinion(sales_proposal, not_rewritten) == rejected, opinion(sales_proposal, rewritten) != rejected)) ::: (A)\nis_similar(And(opinion(sales_proposal, rewritten) == not_rejected, opinion(sales_proposal, not_rewritten) == rejected)) ::: (B)\nis_similar(And(opinion(sales_proposal, rewritten) == not_rejected, opinion(sales_proposal, not_rewritten) == not_rejected)) ::: (C)\nis_similar(And(opinion(sales_proposal, rewritten) == rejected, opinion(sales_proposal, not_rewritten) == not_rejected)) ::: (D)"
    ]
  },
  {
    "id": "test_861",
    "context": "Editorialist: Some people argue that highway speed limits should be increased to reflect the actual average speeds of highway drivers, which are currently 10 to 20 percent higher than posted speed limits. Any such increase would greatly decrease highway safety, however; as past experience teaches, higher average highway speeds would result, since even though most drivers who currently violate posted speed limits would obey higher ones, almost all drivers who obey current speed limits would likely increase their speed.",
    "question": "Which one of the following, if true, most seriously weakens the editorialist's argument?",
    "options": [
      "Some drivers who obey current speed limits would not change their speed after the introduction of the new speed limits.",
      "Most drivers who drive 10 to 20 percent faster than current speed limits have never been involved in a highway accident.",
      "Uniformity of speeds among vehicles is more important for highway safety than is a low average highway speed.",
      "Most drivers who violate current speed limits determine their speeds by what they believe to be safe in the situation."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrivers = EnumSort([obey_current, violate_current])\nspeeds = EnumSort([current_speed, increased_speed])\nsafety = EnumSort([safe, unsafe])\nspeed_limit_change = Function([drivers] -> [speeds])\naccident_history = Function([drivers] -> [bool])\nsafety_importance = Function([safety] -> [bool])\n\n# Constraints\nForAll([d:drivers], Implies(speed_limit_change(d) == increased_speed, safety == unsafe)) ::: Any such increase would greatly decrease highway safety\nForAll([d:drivers], Implies(d == violate_current, speed_limit_change(d) == current_speed)) ::: Most drivers who currently violate posted speed limits would obey higher ones\nForAll([d:drivers], Implies(d == obey_current, speed_limit_change(d) == increased_speed)) ::: Almost all drivers who obey current speed limits would likely increase their speed\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the editorialist's argument?\nis_weakening(Exists([d:drivers], And(d == obey_current, speed_limit_change(d) == current_speed))) ::: (A) Some drivers who obey current speed limits would not change their speed after the introduction of the new speed limits.\nis_weakening(ForAll([d:drivers], Implies(d == violate_current, Not(accident_history(d))))) ::: (B) Most drivers who drive 10 to 20 percent faster than current speed limits have never been involved in a highway accident.\nis_weakening(safety_importance(safe) > safety_importance(unsafe)) ::: (C) Uniformity of speeds among vehicles is more important for highway safety than is a low average highway speed.\nis_weakening(ForAll([d:drivers], Implies(d == violate_current, speed_limit_change(d) == current_speed))) ::: (D) Most drivers who violate current speed limits determine their speeds by what they believe to be safe in the situation."
    ]
  },
  {
    "id": "test_862",
    "context": "While playing a game with a ball, both Emma and John carelessly ignored the danger their game posed to nearby objects. An errant throw by John struck and broke a neighbor' s window. Because his throw broke the window, John, but not Emma, should be required to perform chores for the neighbor as compensation for the damage.",
    "question": "Which one of the following conforms most closely to the principle illustrated above?",
    "options": [
      "Susan and Leland disregarded posted warnings in order to skate on a frozen pond. When the ice broke, Susan's ankle was injured. Susan cannot hold the pond's owners responsible for her injuries.",
      "Terry and Chris were racing their cars on a public street. Chris lost control of his car and struck a parked car. Chris, but not Terry, should be required to pay to repair the damage.",
      "While looking after her neighbor's pets, Laura left the door to her neighbor's house unlocked. Fortunately, nothing bad happened as a result. But her neighbor should not trust Laura to look after her pets in the future.",
      "Alexis and Juan rented a boat for the afternoon. Because of improper use by the previous renter, the boat's engine malfunctioned during their excursion. The boat's owner should be required to refund Alexis's and Juan's rental fees."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Emma, John])\nactions = EnumSort([throw, ignore_danger])\nconsequences = EnumSort([broke_window, no_consequence])\nresponsibility = Function([people, consequences] -> [bool])\n\n# Constraints\nresponsibility(John, broke_window) ::: John's throw broke the window\nNot(responsibility(Emma, broke_window)) ::: Emma is not responsible for the broken window\n\n# Options\nQuestion ::: Which one of the following conforms most closely to the principle illustrated above?\nis_similar(And(responsibility(Chris, struck_parked_car), Not(responsibility(Terry, struck_parked_car)))) ::: (Terry and Chris were racing their cars on a public street. Chris lost control of his car and struck a parked car. Chris, but not Terry, should be required to pay to repair the damage.)\nis_similar(And(responsibility(Susan, injured_ankle), Not(responsibility(Leland, injured_ankle)))) ::: (Susan and Leland disregarded posted warnings in order to skate on a frozen pond. When the ice broke, Susan's ankle was injured. Susan cannot hold the pond's owners responsible for her injuries.)\nis_similar(And(responsibility(Laura, no_consequence), Not(responsibility(neighbor, no_consequence)))) ::: (While looking after her neighbor's pets, Laura left the door to her neighbor's house unlocked. Fortunately, nothing bad happened as a result. But her neighbor should not trust Laura to look after her pets in the future.)\nis_similar(And(responsibility(previous_renter, engine_malfunction), Not(responsibility(Alexis, engine_malfunction)), Not(responsibility(Juan, engine_malfunction)))) ::: (Alexis and Juan rented a boat for the afternoon. Because of improper use by the previous renter, the boat's engine malfunctioned during their excursion. The boat's owner should be required to refund Alexis's and Juan's rental fees.)"
    ]
  },
  {
    "id": "test_863",
    "context": "The ancient Nubians inhabited an area in which typhus occurred, yet surprisingly few of their skeletons show the usual evidence of this disease. The skeletons do show deposits of tetracycline, an antibiotic produced by a bacterium common in Nubian soil. This bacterium can flourish on the dried grain used for making two staples of the Nubian diet, beer and bread. Thus, tetracycline in their food probably explains the low incidence of typhus among ancient Nubians.",
    "question": "Which of the following is an assumption on which the argument relies?",
    "options": [
      "Typhus is generally fatal.",
      "The tetracycline deposits did not form after the bodies were buried.",
      "Bread and beer were the only foods eaten by the ancient Nubians which could have contained tetracycline.",
      "Nubian grain became contaminated with tetracycline-producing bacteria prior to being harvested."
    ],
    "raw_logic_programs": [
      "# Declarations\nskeletons = EnumSort([Nubian])\ndiseases = EnumSort([typhus])\nsubstances = EnumSort([tetracycline])\nfoods = EnumSort([beer, bread])\nconditions = EnumSort([fatal, non_fatal])\nevents = EnumSort([before_burial, after_burial])\ncontamination = EnumSort([before_harvest, after_harvest])\n\n# Constraints\nForAll([s:skeletons], Not(ShowsEvidence(s, typhus))) ::: surprisingly few of their skeletons show the usual evidence of this disease\nForAll([s:skeletons], ShowsEvidence(s, tetracycline)) ::: The skeletons do show deposits of tetracycline\nExists([f:foods], Contains(f, tetracycline)) ::: tetracycline in their food probably explains the low incidence of typhus\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument relies?\nis_assumption(Implies(ShowsEvidence(s, typhus), typhus == fatal)) ::: (A) Typhus is generally fatal.\nis_assumption(Implies(ShowsEvidence(s, tetracycline), Formed(tetracycline, before_burial))) ::: (B) The tetracycline deposits did not form after the bodies were buried.\nis_assumption(ForAll([f:foods], Implies(Contains(f, tetracycline), Or(f == beer, f == bread)))) ::: (C) Bread and beer were the only foods eaten by the ancient Nubians which could have contained tetracycline.\nis_assumption(Implies(Contains(beer, tetracycline), Contaminated(beer, before_harvest))) ::: (D) Nubian grain became contaminated with tetracycline-producing bacteria prior to being harvested."
    ]
  },
  {
    "id": "test_864",
    "context": "Several thousand years ago, people in what is now North America began to grow corn, which grows faster and produces more food per unit of land than do the grains these people had grown previously. Corn is less nutritious than those other grains, however, and soon after these people established corn as their staple grain crop, they began having nutrition-related health problems. Yet the people continued to grow corn as their staple grain, although they could have returned to growing the more nutritious grains.",
    "question": "Which one of the following, if true, most helps to explain why the people mentioned continued to grow corn as their staple grain crop?",
    "options": [
      "The variety of corn that the people relied on as their staple grain produced more food than did the ancestors of that variety.",
      "Modern varieties of corn are more nutritious than were the varieties grown by people in North America several thousand years ago.",
      "The people discovered some years after adopting corn as their staple grain that a diet that supplemented corn with certain readily available nongrain foods significantly improved their health.",
      "The people did not domesticate large animals for meat or milk, either of which could supply nutrients not provided by corn."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([North_American_Ancestors])\ngrains = EnumSort([corn, other_grains])\nhealth = EnumSort([good, poor])\ndiet = Function([people] -> [grains])\nnutrition = Function([grains] -> [health])\n\n# Constraints\ndiet(North_American_Ancestors) == corn ::: People in what is now North America began to grow corn as their staple grain crop\nnutrition(corn) == poor ::: Corn is less nutritious than other grains\nnutrition(other_grains) == good ::: Other grains are more nutritious\ndiet(North_American_Ancestors) == corn -> nutrition(corn) == poor ::: After establishing corn as their staple grain, they began having nutrition-related health problems\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain why the people mentioned continued to grow corn as their staple grain crop?\nis_explanation(diet(North_American_Ancestors) == corn, Exists([f:foods], And(supplement(corn, f), nutrition(corn) == good))) ::: (C) The people discovered some years after adopting corn as their staple grain that a diet that supplemented corn with certain readily available nongrain foods significantly improved their health."
    ]
  },
  {
    "id": "test_865",
    "context": "Recent studies indicate a correlation between damage to human chromosome number six and adult schizophrenia. We know, however, that there are people without damage to this chromosome who develop adult schizophrenia and that some people with damage to chromosome number six do not develop adult schizophrenia. So there is no causal connection between damage to human chromosome number six and adult schizophrenia.",
    "question": "Which one of the following most accurately describes a reasoning flaw in the argument above?",
    "options": [
      "The argument ignores the possibility that some but not all types of damage to chromosome number six lead to schizophrenia.",
      "The argument mistakes a cause for an effect.",
      "The argument makes a generalization based on an unrepresentative sample population.",
      "The argument presumes, without providing evidence, that schizophrenia is caused solely by chromosomal damage."
    ],
    "raw_logic_programs": [
      "# Declarations\nchromosome_damage = EnumSort([damaged, not_damaged])\nschizophrenia = EnumSort([develops, does_not_develop])\npeople = EnumSort([person1, person2, person3, person4])  # Example individuals for illustration\nhas_damage = Function([people] -> [chromosome_damage])\ndevelops_schizophrenia = Function([people] -> [schizophrenia])\n\n# Constraints\nExists([p:people], And(has_damage(p) == not_damaged, develops_schizophrenia(p) == develops)) ::: there are people without damage to this chromosome who develop adult schizophrenia\nExists([p:people], And(has_damage(p) == damaged, develops_schizophrenia(p) == does_not_develop)) ::: some people with damage to chromosome number six do not develop adult schizophrenia\n\n# Options\nQuestion ::: Which one of the following most accurately describes a reasoning flaw in the argument above?\nis_flaw(Exists([p:people], And(has_damage(p) == damaged, develops_schizophrenia(p) == develops))) ::: (The argument ignores the possibility that some but not all types of damage to chromosome number six lead to schizophrenia.\nis_flaw(False) ::: (The argument mistakes a cause for an effect.\nis_flaw(False) ::: (The argument makes a generalization based on an unrepresentative sample population.\nis_flaw(False) ::: (The argument presumes, without providing evidence, that schizophrenia is caused solely by chromosomal damage."
    ]
  },
  {
    "id": "test_866",
    "context": "In a car accident, air bags greatly reduce the risk of serious injury. However, statistics show that cars without air bags are less likely to be involved in accidents than are cars with air bags. Thus, cars with air bags are no safer than cars without air bags.",
    "question": "The argument is most vulnerable to criticism on the grounds that it",
    "options": [
      "assumes, without providing justification, that the likelihood of an accident's occurring should weigh at least as heavily as the seriousness of any resulting injury in estimates of relative safety",
      "overlooks the possibility that some accidents involve both cars with air bags and cars without air bags",
      "denies the possibility that cars without air bags have other safety features that reduce the risk of serious injury at least as much as do air bags",
      "assumes, without providing justification, that any car with air bags will probably become involved in an accident"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([air_bags_reduce_injury, cars_without_air_bags_less_likely_accident, cars_with_air_bags_no_safer])\ncriticisms = EnumSort([assumes_likelihood_vs_seriousness, overlooks_accidents_involving_both, denies_other_safety_features, assumes_air_bags_lead_to_accidents])\n\n# Constraints\nForAll([a:arguments], Exists([c:criticisms], is_vulnerable(a, c))) ::: The argument is most vulnerable to criticism on the grounds that it\n\n# Options\nQuestion ::: The argument is most vulnerable to criticism on the grounds that it\nis_vulnerable(air_bags_reduce_injury, assumes_likelihood_vs_seriousness) ::: (assumes, without providing justification, that the likelihood of an accident's occurring should weigh at least as heavily as the seriousness of any resulting injury in estimates of relative safety)\nis_vulnerable(cars_without_air_bags_less_likely_accident, overlooks_accidents_involving_both) ::: (overlooks the possibility that some accidents involve both cars with air bags and cars without air bags)\nis_vulnerable(cars_with_air_bags_no_safer, denies_other_safety_features) ::: (denies the possibility that cars without air bags have other safety features that reduce the risk of serious injury at least as much as do air bags)\nis_vulnerable(cars_with_air_bags_no_safer, assumes_air_bags_lead_to_accidents) ::: (assumes, without providing justification, that any car with air bags will probably become involved in an accident)"
    ]
  },
  {
    "id": "test_867",
    "context": "Camille: Manufacturers of water-saving faucets exaggerate the amount of money such faucets can save. Because the faucets handle such a low volume of water, people using them often let the water run longer than they would otherwise. Rebecca: It is true that showering now takes longer. Nevertheless, I have had lower water bills since I installed a water-saving faucet. Thus, it is not true that the manufacturers' claims are exaggerated.",
    "question": "The reasoning in Rebecca's argument is questionable in that she takes for granted that",
    "options": [
      "she saved as much on her water bills as the manufacturers' claims suggested she would",
      "installing more water-saving faucets in her house would increase her savings",
      "the manufacturers' claims about the savings expected from the installation of water-saving faucets are consistent with one another",
      "the cost of installing her water-saving faucet was less than her overall savings on her water bill"
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([exaggerated, not_exaggerated])\nsavings = Function([claims] -> [bool])\n\n# Constraints\nsavings(exaggerated) == False ::: Camille claims that manufacturers exaggerate savings\nsavings(not_exaggerated) == True ::: Rebecca claims that manufacturers do not exaggerate savings\n\n# Options\nQuestion ::: The reasoning in Rebecca's argument is questionable in that she takes for granted that\nis_assumed(savings(not_exaggerated) == True) ::: (she saved as much on her water bills as the manufacturers' claims suggested she would)\nis_assumed(Exists([faucets:int], savings(not_exaggerated) == True)) ::: (installing more water-saving faucets in her house would increase her savings)\nis_assumed(ForAll([claims], savings(claims) == True)) ::: (the manufacturers' claims about the savings expected from the installation of water-saving faucets are consistent with one another)\nis_assumed(Exists([cost:int], cost < savings(not_exaggerated))) ::: (the cost of installing her water-saving faucet was less than her overall savings on her water bill)"
    ]
  },
  {
    "id": "test_868",
    "context": "Educators studied the performance of 200 students in a university' s history classes. They found that those students who performed the best had either part-time jobs or full-time jobs, had their history classes early in the morning, and had a very limited social life, whereas those students who performed the worst had no jobs, had their history classes early in the morning, and had a very active social life.",
    "question": "Which one of the following, if true, most helps to explain the educators' findings?",
    "options": [
      "Although having a job tends to provide a release from stress, thus increasing academic performance, having a full-time job, like having an active social life, can distract a student from studying.",
      "A larger percentage of those students interested in majoring in history had part-time jobs than had full-time jobs.",
      "The students who had full-time jobs typically worked late-night hours at those jobs.",
      "The students compensated for any study time lost due to their jobs but they did not compensate for any study time lost due to their social lives."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([best, worst])\njobs = EnumSort([part_time, full_time, no_job])\nclass_times = EnumSort([early_morning, other])\nsocial_life = EnumSort([limited, active])\nperformance = Function([students] -> [bool])\n\n# Constraints\nForAll([s:students], Or(performance(s) == (jobs(s) in [part_time, full_time] and class_times(s) == early_morning and social_life(s) == limited), performance(s) == (jobs(s) == no_job and class_times(s) == early_morning and social_life(s) == active))) ::: Educators' findings on student performance\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the educators' findings?\nis_explanation(And(jobs(best) in [part_time, full_time], jobs(worst) == no_job, social_life(best) == limited, social_life(worst) == active, class_times(best) == early_morning, class_times(worst) == early_morning, (jobs(best) == full_time and social_life(best) == limited) or (jobs(best) == part_time and social_life(best) == limited))) ::: (Although having a job tends to provide a release from stress, thus increasing academic performance, having a full-time job, like having an active social life, can distract a student from studying.\nis_explanation(And(jobs(best) == part_time, jobs(worst) == no_job, social_life(best) == limited, social_life(worst) == active, class_times(best) == early_morning, class_times(worst) == early_morning)) ::: (A larger percentage of those students interested in majoring in history had part-time jobs than had full-time jobs.\nis_explanation(And(jobs(best) == full_time, jobs(worst) == no_job, social_life(best) == limited, social_life(worst) == active, class_times(best) == early_morning, class_times(worst) == early_morning, jobs(best) == full_time)) ::: (The students who had full-time jobs typically worked late-night hours at those jobs.\nis_explanation(And(jobs(best) in [part_time, full_time], jobs(worst) == no_job, social_life(best) == limited, social_life(worst) == active, class_times(best) == early_morning, class_times(worst) == early_morning, (jobs(best) in [part_time, full_time] and social_life(best) == limited))) ::: (The students compensated for any study time lost due to their jobs but they did not compensate for any study time lost due to their social lives."
    ]
  },
  {
    "id": "test_869",
    "context": "Chelas and Stelma are required to leave their respective stations immediately to pursue any prisoner who attempts to escape from their sector. Furthermore, unless they are pursuing such a prisoner, Chelas and Stelma are forbidden to leave their stations until their replacements have arrived. On May 11 at 9 P. M. , when Chelas and Stelma finished the four-hour shift in their sector and their replacements arrived, it was discovered that Chelas had violated these rules and Stelma had not.",
    "question": "If the statements above are true, each of the following could be true EXCEPT:",
    "options": [
      "Chelas left his station before 9 P. M. but Stelma did not.",
      "A prisoner attempted to escape from Chelas and Stelma's sector at 7 P. M. and neither Chelas nor Stelma left his or her station before 9 P. M.",
      "Chelas and Stelma were at their respective stations at 9 P. M.",
      "Stelma left her station before 9 P. M. but Chelas did not."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Chelas, Stelma])\nactions = EnumSort([leave_station, stay_station])\ntime = EnumSort([before_9pm, at_9pm, after_9pm])\npursue_prisoner = Function([people, time] -> [bool])\nleave_station = Function([people, time] -> [bool])\n\n# Constraints\nForAll([p:people, t:time], Implies(pursue_prisoner(p, t), leave_station(p, t))) ::: If pursuing a prisoner, they must leave their station\nForAll([p:people, t:time], Implies(Not(pursue_prisoner(p, t)), Not(leave_station(p, t)))) ::: If not pursuing a prisoner, they cannot leave their station until replacements arrive\nleave_station(Chelas, before_9pm) ::: Chelas left his station before 9 P.M.\nNot(leave_station(Stelma, before_9pm)) ::: Stelma did not leave her station before 9 P.M.\n\n# Options\nQuestion ::: If the statements above are true, each of the following could be true EXCEPT:\nis_exception(is_sat(And(leave_station(Chelas, before_9pm), Not(leave_station(Stelma, before_9pm)))) ::: (A) Chelas left his station before 9 P.M. but Stelma did not.\nis_exception(is_sat(And(pursue_prisoner(Chelas, before_9pm), pursue_prisoner(Stelma, before_9pm), Not(leave_station(Chelas, before_9pm)), Not(leave_station(Stelma, before_9pm)))) ::: (B) A prisoner attempted to escape from Chelas and Stelma's sector at 7 P.M. and neither Chelas nor Stelma left his or her station before 9 P.M.\nis_exception(is_sat(And(Not(leave_station(Chelas, at_9pm)), Not(leave_station(Stelma, at_9pm)))) ::: (C) Chelas and Stelma were at their respective stations at 9 P.M.\nis_exception(is_sat(And(leave_station(Stelma, before_9pm), Not(leave_station(Chelas, before_9pm)))) ::: (D) Stelma left her station before 9 P.M. but Chelas did not."
    ]
  },
  {
    "id": "test_870",
    "context": "Economist: The price of tap water in our region should be raised drastically. <b> Supplies in local freshwater reservoirs have been declining for years </b> because water is being used faster than it can be replenished. Since the price of tap water has been low, <b> few users have bothered to adopt even easy conservation measures. </b>",
    "question": "The two sections in boldface play which of the following roles in the economist's argument?",
    "options": [
      "The first is the main conclusion; the second is a conclusion for which support is provided, and which in turn supports the first.",
      "The first is an observation for which the second provides an explanation; the second is the main conclusion but not the only conclusion.",
      "The first is the only conclusion; the second provides an explanation for the first.",
      "The first is a premise supporting the argument's main conclusion; so is the second."
    ],
    "raw_logic_programs": [
      "# Declarations\nsections = EnumSort([first, second])\nroles = EnumSort([main_conclusion, supporting_conclusion, observation, explanation, premise])\nplays_role = Function([sections] -> [roles])\n\n# Constraints\nplays_role(first) == premise ::: The first section is a premise supporting the argument's main conclusion\nplays_role(second) == premise ::: The second section is also a premise supporting the argument's main conclusion\n\n# Options\nQuestion ::: The two sections in boldface play which of the following roles in the economist's argument?\nis_correct(And(plays_role(first) == premise, plays_role(second) == premise)) ::: (The first is a premise supporting the argument's main conclusion; so is the second.)"
    ]
  },
  {
    "id": "test_871",
    "context": "Mayor: Citing the severity of the city' s winters, the city road commissioner has suggested paving our roads with rubberized asphalt, since the pressure of passing vehicles would cause the rubber to flex, breaking up ice on roads and so making ice removal easier and less of a strain on the road-maintenance budget. However, rubberized asphalt is more expensive than plain asphalt and the city' s budget for building and maintaining roads cannot be increased. Ttherefore, the commissioner' s suggestion is not financially feasible.",
    "question": "Which one of the following is assumed by the mayor's argument?",
    "options": [
      "It would cost more to add particles of rubber to asphalt than to add particles of rubber to other materials that are used to pave roads.",
      "Savings in the cost of ice removal would not pay for the increased expense of using rubberized asphalt to pave roads.",
      "The severity of winters in the region in which the city is located does not vary significantly from year to year.",
      "Using rubberized asphalt to pave roads would not have any advantages besides facilitating the removal of ice on roads."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([rubberized_asphalt, plain_asphalt, budget, ice_removal_cost, road_maintenance_cost])\nassumptions = Function([variables] -> [bool])\n\n# Constraints\nassumptions(rubberized_asphalt) > assumptions(plain_asphalt) ::: rubberized asphalt is more expensive than plain asphalt\nassumptions(budget) == assumptions(road_maintenance_cost) ::: the city’s budget for building and maintaining roads cannot be increased\n\n# Options\nQuestion ::: Which one of the following is assumed by the mayor's argument?\nis_assumed(assumptions(ice_removal_cost) < assumptions(rubberized_asphalt) - assumptions(plain_asphalt)) ::: (A) Savings in the cost of ice removal would not pay for the increased expense of using rubberized asphalt to pave roads.\nis_assumed(assumptions(rubberized_asphalt) > assumptions(plain_asphalt)) ::: (B) It would cost more to add particles of rubber to asphalt than to add particles of rubber to other materials that are used to pave roads.\nis_assumed(assumptions(budget) == assumptions(road_maintenance_cost)) ::: (C) The severity of winters in the region in which the city is located does not vary significantly from year to year.\nis_assumed(assumptions(rubberized_asphalt) == assumptions(plain_asphalt)) ::: (D) Using rubberized asphalt to pave roads would not have any advantages besides facilitating the removal of ice on roads."
    ]
  },
  {
    "id": "test_872",
    "context": "Film preservation requires transferring old movies from their original material -- unstable, deteriorating nitrate film -- to stable acetate film. But this is a time-consuming, expensive process, and there is no way to transfer all currently deteriorating nitrate films to acetate before they disintegrate. So some films from the earliest years of Hollywood will not be preserved.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "No new technology for transferring old movies from nitrate film to acetate film will ever be developed.",
      "Some films from the earliest years of Hollywood currently exist solely in their original material.",
      "The least popular films from the earliest years of Hollywood are the ones most likely to be lost.",
      "Transferring films from nitrate to acetate is not the least expensive way of preserving them."
    ],
    "raw_logic_programs": [
      "# Declarations\nfilms = EnumSort([nitrate, acetate])\npreservation_status = Function([films] -> [bool])\nexistence_status = Function([films] -> [bool])\n\n# Constraints\nForAll([f:films], Implies(existence_status(f), preservation_status(f))) ::: Film preservation requires transferring old movies from their original material to stable acetate film\nNot(ForAll([f:films], preservation_status(f))) ::: There is no way to transfer all currently deteriorating nitrate films to acetate before they disintegrate\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(Not(Exists([f:films], And(existence_status(f), Not(preservation_status(f)))))) ::: (A) No new technology for transferring old movies from nitrate film to acetate film will ever be developed\nis_assumption(Exists([f:films], And(existence_status(f), Not(preservation_status(f))))) ::: (B) Some films from the earliest years of Hollywood currently exist solely in their original material\nis_assumption(ForAll([f:films], Implies(Not(preservation_status(f)), Not(existence_status(f))))) ::: (C) The least popular films from the earliest years of Hollywood are the ones most likely to be lost\nis_assumption(Not(Exists([f:films], And(preservation_status(f), Not(existence_status(f)))))) ::: (D) Transferring films from nitrate to acetate is not the least expensive way of preserving them"
    ]
  },
  {
    "id": "test_873",
    "context": "Studies of brain lateralization in animals have purported to show that, whereas most human beings are right-handed, about half of any given group of animals will be \"left-handed\" (i. e. , showing a preference for their left limbs) and half will be \"right-handed. \" This finding is suspect, however; it has long been noted that dogs will almost always \"shake hands\" with the right paw.",
    "question": "Which one of the following, if true, is the strongest defense against the counterexample of dogs that \"shake hands\"?",
    "options": [
      "Dogs are observed to scratch themselves with the left leg as well as with the right leg.",
      "In learning to perform tricks, dogs are influenced by the behavior of their trainers.",
      "People who observe dogs \"shaking hands\" are observing a behavior that dogs perform only with a front paw.",
      "Left-handed people sometimes feel inconvenienced or even stigmatized in a \"right-handed world, \" but dogs face no analogous difficulties."
    ],
    "raw_logic_programs": [
      "# Declarations\nanimals = EnumSort([dogs, other_animals])\nlimbs = EnumSort([left, right])\nbehaviors = EnumSort([shake_hands, scratch, perform_tricks])\npreference = Function([animals, behaviors] -> [limbs])\n\n# Constraints\nForAll([a:animals], Or(preference(a, shake_hands) == left, preference(a, shake_hands) == right)) ::: Animals show a preference for either left or right limbs for shaking hands\nForAll([a:animals], Or(preference(a, scratch) == left, preference(a, scratch) == right)) ::: Animals show a preference for either left or right limbs for scratching\nForAll([a:animals], Or(preference(a, perform_tricks) == left, preference(a, perform_tricks) == right)) ::: Animals show a preference for either left or right limbs for performing tricks\npreference(dogs, shake_hands) == right ::: Dogs almost always \"shake hands\" with the right paw\n\n# Options\nQuestion ::: Which one of the following, if true, is the strongest defense against the counterexample of dogs that \"shake hands\"?\nis_strongest_defense(preference(dogs, scratch) == left) ::: (A) Dogs are observed to scratch themselves with the left leg as well as with the right leg\nis_strongest_defense(preference(dogs, perform_tricks) == preference(trainers, perform_tricks)) ::: (B) In learning to perform tricks, dogs are influenced by the behavior of their trainers\nis_strongest_defense(preference(dogs, shake_hands) == right) ::: (C) People who observe dogs \"shaking hands\" are observing a behavior that dogs perform only with a front paw\nis_strongest_defense(Not(Exists([d:dogs], preference(d, shake_hands) == left))) ::: (D) Left-handed people sometimes feel inconvenienced or even stigmatized in a \"right-handed world,\" but dogs face no analogous difficulties"
    ]
  },
  {
    "id": "test_874",
    "context": "Philosopher: The rational pursuit of happiness is quite different from always doing what one most strongly desires to do. This is because the rational pursuit of happiness must include consideration of long-term consequences, whereas our desires are usually focused on the short term. Moreover, desires are sometimes compulsions, and while ordinary desires result in at least momentary happiness when their goals are attained, compulsions strongly drive a person to pursue goals that offer no happiness even when reached.",
    "question": "If all of the philosopher's statements are true, each of the following could be true EXCEPT:",
    "options": [
      "The majority of people do not have compulsions.",
      "Attaining the goal of any desire results in momentary happiness.",
      "Most people want more than their own personal happiness.",
      "Most people do not pursue happiness rationally."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([rational_pursuit, desires_short_term, desires_compulsions, compulsions_no_happiness])\npeople = EnumSort([majority, most])\npursuit = Function([people] -> [bool])\nhappiness = Function([people] -> [bool])\n\n# Constraints\nForAll([s:statements], s == True) ::: All of the philosopher's statements are true\npursuit(majority) == Not(compulsions_no_happiness) ::: The majority of people do not have compulsions\nhappiness(majority) == desires_short_term ::: Attaining the goal of any desire results in momentary happiness\nhappiness(most) == Not(rational_pursuit) ::: Most people want more than their own personal happiness\npursuit(most) == Not(rational_pursuit) ::: Most people do not pursue happiness rationally\n\n# Options\nQuestion ::: If all of the philosopher's statements are true, each of the following could be true EXCEPT:\nis_exception(is_sat(pursuit(majority) == True)) ::: (A) The majority of people do not have compulsions.\nis_exception(is_sat(happiness(majority) == True)) ::: (B) Attaining the goal of any desire results in momentary happiness.\nis_exception(is_sat(happiness(most) == True)) ::: (C) Most people want more than their own personal happiness.\nis_exception(is_sat(pursuit(most) == True)) ::: (D) Most people do not pursue happiness rationally."
    ]
  },
  {
    "id": "test_875",
    "context": "The technological conservatism of bicycle manufacturers is a reflection of the kinds of demand they are trying to meet. The only cyclists seriously interested in innovation and willing to pay for it are bicycle racers. Ttherefore, innovation in bicycle technology is limited by what authorities will accept as standard for purposes of competition in bicycle races.",
    "question": "Which of the following is an assumption made in drawing the conclusion above?",
    "options": [
      "High-performance bicycles are likely to be improved more as a result of technological innovations developed in small workshops than as a result of technological innovations developed in major manufacturing concerns.",
      "The market for cheap, traditional bicycles cannot expand unless the market for high-performance competition bicycles expands.",
      "The technological conservatism of bicycle manufacturers results primarily from their desire to manufacture a product that can be sold without being altered to suit different national markets.",
      "Bicycle racers do not generate a strong demand for innovations that fall outside what is officially recognized as standard for purposes of competition."
    ],
    "raw_logic_programs": [
      "# Declarations\ncyclists = EnumSort([racers, non_racers])\ndemands = EnumSort([innovation, no_innovation])\nacceptance = EnumSort([standard, non_standard])\nmanufacturers = EnumSort([conservative, non_conservative])\nmarket = EnumSort([expand, not_expand])\n\n# Constraints\nForAll([c:cyclists], Implies(c == racers, demands(c) == innovation)) ::: The only cyclists seriously interested in innovation and willing to pay for it are bicycle racers\nForAll([m:manufacturers], Implies(m == conservative, demands(racers) == innovation)) ::: The technological conservatism of bicycle manufacturers is a reflection of the kinds of demand they are trying to meet\nForAll([d:demands], Implies(d == innovation, acceptance == standard)) ::: Innovation in bicycle technology is limited by what authorities will accept as standard for purposes of competition in bicycle races\n\n# Options\nQuestion ::: Which of the following is an assumption made in drawing the conclusion above?\nis_assumption(Implies(demands(racers) == innovation, acceptance == standard)) ::: (A) Bicycle racers do not generate a strong demand for innovations that fall outside what is officially recognized as standard for purposes of competition"
    ]
  },
  {
    "id": "test_876",
    "context": "Politician: It is wrong for the government to restrict the liberty of individuals, except perhaps in those cases when to fail to do so would allow individuals to cause harm. Yet, to publish something is a liberty, and to offend is not to cause harm.",
    "question": "Which one of the following can be properly inferred from the politician's statements?",
    "options": [
      "It is not wrong for individuals to publish literature that is offensive.",
      "It is not right for the government to restrict the publication of literature that is only offensive.",
      "It is offensive for the government to restrict the liberty of individuals to publish, but it is not harmful.",
      "It is not wrong for the government to restrict individuals' liberty when failing to do so would allow individuals to cause harm."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([individual])\nactions = EnumSort([publish, offend, cause_harm])\ngovernment = EnumSort([restrict_liberty])\nliberty = EnumSort([publish_something, offend])\n\n# Constraints\nForAll([a:actions], Implies(a == cause_harm, government(restrict_liberty) == True)) ::: It is wrong for the government to restrict the liberty of individuals, except perhaps in those cases when to fail to do so would allow individuals to cause harm\nliberty(publish_something) == True ::: to publish something is a liberty\nliberty(offend) == False ::: to offend is not to cause harm\n\n# Options\nQuestion ::: Which one of the following can be properly inferred from the politician's statements?\nis_inferred(liberty(publish_something) == True) ::: (It is not wrong for individuals to publish literature that is offensive.\nis_inferred(And(liberty(publish_something) == True, Not(government(restrict_liberty)))) ::: (It is not right for the government to restrict the publication of literature that is only offensive.\nis_inferred(And(government(restrict_liberty), Not(cause_harm))) ::: (It is offensive for the government to restrict the liberty of individuals to publish, but it is not harmful.\nis_inferred(Implies(Not(government(restrict_liberty)), cause_harm)) ::: (It is not wrong for the government to restrict individuals' liberty when failing to do so would allow individuals to cause harm."
    ]
  },
  {
    "id": "test_877",
    "context": "A cat will not be affectionate toward people unless it is handled when it is a kitten. Since the cat that Paula plans to give to her friend was handled when it was a kitten, that cat will be affectionate toward people.",
    "question": "The flawed reasoning in the argument above most closely parallels that in which one of the following?",
    "options": [
      "Beets do not grow well unless the soil in which they are grown contains trace amounts of boron. Since the beets in this plot are growing well, the soil in the plot must contain trace amounts of boron.",
      "Grass seeds will not germinate well unless they are pressed firmly into the ground. The grass seeds sown in this yard were pressed firmly into the ground, so they will germinate well.",
      "Tulip bulbs will not produce flowers unless they are chilled for two months. Since the tulip bulbs in the clay pot were not chilled for two months, these bulbs will not produce flowers.",
      "Cranberries will not thrive unless they are grown in bogs. Since the cranberries in this area are not grown in bogs, these cranberries will not thrive."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([handled_as_kitten, affectionate, grow_well, contains_boron, germinate_well, pressed_firmly, produce_flowers, chilled, thrive, grown_in_bogs])\nentities = EnumSort([cat, beets, grass_seeds, tulip_bulbs, cranberries])\nsatisfies = Function([entities, conditions] -> [bool])\n\n# Constraints\nForAll([e:entities], Implies(Not(satisfies(e, handled_as_kitten)), Not(satisfies(e, affectionate)))) ::: A cat will not be affectionate toward people unless it is handled when it is a kitten\nsatisfies(cat, handled_as_kitten) ::: The cat that Paula plans to give to her friend was handled when it was a kitten\nsatisfies(cat, affectionate) ::: That cat will be affectionate toward people\n\n# Options\nQuestion ::: The flawed reasoning in the argument above most closely parallels that in which one of the following?\nis_parallel(ForAll([e:entities], Implies(Not(satisfies(e, contains_boron)), Not(satisfies(e, grow_well))))) ::: (A) Beets do not grow well unless the soil in which they are grown contains trace amounts of boron. Since the beets in this plot are growing well, the soil in the plot must contain trace amounts of boron.\nis_parallel(ForAll([e:entities], Implies(Not(satisfies(e, pressed_firmly)), Not(satisfies(e, germinate_well))))) ::: (B) Grass seeds will not germinate well unless they are pressed firmly into the ground. The grass seeds sown in this yard were pressed firmly into the ground, so they will germinate well.\nis_parallel(ForAll([e:entities], Implies(Not(satisfies(e, chilled)), Not(satisfies(e, produce_flowers))))) ::: (C) Tulip bulbs will not produce flowers unless they are chilled for two months. Since the tulip bulbs in the clay pot were not chilled for two months, these bulbs will not produce flowers.\nis_parallel(ForAll([e:entities], Implies(Not(satisfies(e, grown_in_bogs)), Not(satisfies(e, thrive))))) ::: (D) Cranberries will not thrive unless they are grown in bogs. Since the cranberries in this area are not grown in bogs, these cranberries will not thrive."
    ]
  },
  {
    "id": "test_878",
    "context": "Extensive housing construction is underway in Pataska Forest, the habitat of a large population of deer. Because deer feed at the edges of forests, these deer will be attracted to the spaces alongside the new roads being cut through Pataska Forest to serve the new residential areas. Consequently, once the housing is occupied, the annual number of the forest' s deer hit by cars will be much higher than before construction started.",
    "question": "Which of the following is an assumption on which the argument depends?",
    "options": [
      "The development will leave sufficient forest to sustain a significant population of deer.",
      "Deer will be as attracted to the forest edge around new houses as to the forest edge alongside roads.",
      "No deer hunting will be allowed in Pataska Forest when the housing is occupied.",
      "In years past, the annual number of deer that have been hit by cars on existing roads through Pataska Forest has been very low."
    ],
    "raw_logic_programs": [
      "# Declarations\nroads = EnumSort([existing, new])\nevents = EnumSort([construction, occupation])\ndeer_population = Function([events] -> [int])\ndeer_hit_by_cars = Function([roads, events] -> [int])\nforest_area = Function([events] -> [int])\n\n# Constraints\ndeer_hit_by_cars(new, occupation) > deer_hit_by_cars(existing, construction) ::: once the housing is occupied, the annual number of the forest's deer hit by cars will be much higher than before construction started\n\n# Options\nQuestion ::: Which of the following is an assumption on which the argument depends?\nis_assumption(forest_area(occupation) > 0) ::: (The development will leave sufficient forest to sustain a significant population of deer.)\nis_assumption(deer_hit_by_cars(new, occupation) == deer_hit_by_cars(existing, occupation)) ::: (Deer will be as attracted to the forest edge around new houses as to the forest edge alongside roads.)\nis_assumption(deer_population(occupation) > 0) ::: (No deer hunting will be allowed in Pataska Forest when the housing is occupied.)\nis_assumption(deer_hit_by_cars(existing, construction) == 0) ::: (In years past, the annual number of deer that have been hit by cars on existing roads through Pataska Forest has been very low.)"
    ]
  },
  {
    "id": "test_879",
    "context": "Among people who experience migraine headaches, some experience what doctors call \"common\" migraines, whereas others experience \"classical\" migraines. Siblings and spouses of common migraine sufferers are themselves twice as likely as the general population to experience common migraines. Siblings of classical migraine sufferers are four times more likely than the general population to experience classical migraines, whereas spouses of classical migraine sufferers are no more likely than the general population to experience such headaches.",
    "question": "The information above provides the most support for which of the following hypotheses?",
    "options": [
      "People who do not experience migraine headaches are unlikely to have spouses who are migraine headache sufferers.",
      "Unmarried adults are more likely to suffer from classical migraines than they are to suffer from common migraines.",
      "Children of people who suffer from common migraines are not more likely than the general population to experience a common migraine.",
      "Susceptibility to classical migraines is more dependent on hereditary factors than is susceptibility to common migraines."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([general_population, common_sufferer, classical_sufferer, sibling_common, sibling_classical, spouse_common, spouse_classical])\nmigraine_types = EnumSort([common, classical])\nlikelihood = Function([people, migraine_types] -> [float])\n\n# Constraints\nlikelihood(general_population, common) == 1.0 ::: Baseline likelihood for common migraines in the general population\nlikelihood(general_population, classical) == 1.0 ::: Baseline likelihood for classical migraines in the general population\nlikelihood(sibling_common, common) == 2.0 * likelihood(general_population, common) ::: Siblings of common migraine sufferers are twice as likely to experience common migraines\nlikelihood(spouse_common, common) == 2.0 * likelihood(general_population, common) ::: Spouses of common migraine sufferers are twice as likely to experience common migraines\nlikelihood(sibling_classical, classical) == 4.0 * likelihood(general_population, classical) ::: Siblings of classical migraine sufferers are four times as likely to experience classical migraines\nlikelihood(spouse_classical, classical) == likelihood(general_population, classical) ::: Spouses of classical migraine sufferers are no more likely to experience classical migraines\n\n# Options\nQuestion ::: The information above provides the most support for which of the following hypotheses?\nis_supported(likelihood(spouse_common, common) < likelihood(general_population, common)) ::: (A) People who do not experience migraine headaches are unlikely to have spouses who are migraine headache sufferers.\nis_supported(likelihood(general_population, classical) > likelihood(general_population, common)) ::: (B) Unmarried adults are more likely to suffer from classical migraines than they are to suffer from common migraines.\nis_supported(likelihood(general_population, common) == likelihood(sibling_common, common)) ::: (C) Children of people who suffer from common migraines are not more likely than the general population to experience a common migraine.\nis_supported(likelihood(sibling_classical, classical) > likelihood(sibling_common, common)) ::: (D) Susceptibility to classical migraines is more dependent on hereditary factors than is susceptibility to common migraines."
    ]
  },
  {
    "id": "test_880",
    "context": "Most scholars agree that King Alfred (A. D. 849 -- 899) personally translated a number of Latin texts into Old English. One historian contends that Alfred also personally penned his own law code, arguing that the numerous differences between the language of the law code and Alfred's translations of Latin texts are outweighed by the even more numerous similarities. Linguistic similarities, however, are what one expects in texts from the same language, the same time, and the same region. Apart from Alfred's surviving translations and law code, there are only two other extant works from the same dialect and milieu, so it is risky to assume here that linguistic similarities point to common authorship.",
    "question": "The passage above proceeds by",
    "options": [
      "showing that a principle if generally applied would have anomalous consequences",
      "using argument by analogy to undermine a principle implicit in another argument",
      "questioning the plausibility of an assumption on which another argument depends",
      "providing examples that underscore another argument's conclusion"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([historian_argument, passage_argument])\nprinciples = EnumSort([linguistic_similarity, common_authorship])\nassumptions = EnumSort([linguistic_similarity_implies_authorship])\ntexts = EnumSort([law_code, translations, other_texts])\n\n# Constraints\nForAll([t:texts], Exists([p:principles], p == linguistic_similarity)) ::: Linguistic similarities are expected in texts from the same language, time, and region\nForAll([a:assumptions], Implies(a == linguistic_similarity_implies_authorship, Exists([p:principles], p == common_authorship))) ::: The historian's argument assumes linguistic similarities imply common authorship\nForAll([a:assumptions], Not(Implies(a == linguistic_similarity_implies_authorship, Exists([p:principles], p == common_authorship)))) ::: The passage questions the assumption that linguistic similarities imply common authorship\n\n# Options\nQuestion ::: The passage above proceeds by\nis_valid(Implies(Exists([a:assumptions], a == linguistic_similarity_implies_authorship), Exists([p:principles], p == common_authorship))) ::: (A) showing that a principle if generally applied would have anomalous consequences\nis_valid(Implies(Exists([p:principles], p == linguistic_similarity), Not(Exists([a:assumptions], a == linguistic_similarity_implies_authorship)))) ::: (B) using argument by analogy to undermine a principle implicit in another argument\nis_valid(Not(Exists([a:assumptions], a == linguistic_similarity_implies_authorship))) ::: (C) questioning the plausibility of an assumption on which another argument depends\nis_valid(Exists([t:texts], Exists([p:principles], p == linguistic_similarity))) ::: (D) providing examples that underscore another argument's conclusion"
    ]
  },
  {
    "id": "test_881",
    "context": "Houseflies kept in small containers at normal room temperature lived for about 50 days. Houseflies kept in identical containers but at a significantly cooler temperature lived longer than 6 months. Apart from longevity, the only difference detected between the groups was that the flies in the colder environment consumed oxygen much more slowly than did those kept at room temperature.",
    "question": "Which one of the following, if true, most helps to explain the difference in the houseflies' life spans?",
    "options": [
      "Flies kept in small containers cannot fly, although flying greatly increases a fly's rate of oxygen consumption.",
      "For flies kept at room temperature, the larger the container the higher the rate of oxygen consumption.",
      "As a fly consumes oxygen, its cells produce a toxic substance that accumulates in the cells until it kills the fly.",
      "The spiders that prey on flies consume oxygen more slowly in cold weather than in warm weather."
    ],
    "raw_logic_programs": [
      "# Declarations\nflies = EnumSort([room_temp, cold_temp])\nattributes = EnumSort([lifespan, oxygen_consumption])\nvalues = EnumSort([short, long, high, low])\nhas_attribute = Function([flies, attributes] -> [values])\n\n# Constraints\nhas_attribute(room_temp, lifespan) == short ::: Houseflies kept at normal room temperature lived for about 50 days\nhas_attribute(cold_temp, lifespan) == long ::: Houseflies kept at a significantly cooler temperature lived longer than 6 months\nhas_attribute(room_temp, oxygen_consumption) == high ::: Flies at room temperature consumed oxygen much more quickly\nhas_attribute(cold_temp, oxygen_consumption) == low ::: Flies in the colder environment consumed oxygen much more slowly\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the difference in the houseflies' life spans?\nis_explanatory(Implies(has_attribute(room_temp, oxygen_consumption) == high, toxic_substance_accumulation)) ::: (A) Flies kept in small containers cannot fly, although flying greatly increases a fly's rate of oxygen consumption.\nis_explanatory(Implies(has_attribute(room_temp, oxygen_consumption) == high, container_size_effect)) ::: (B) For flies kept at room temperature, the larger the container the higher the rate of oxygen consumption.\nis_explanatory(Implies(has_attribute(room_temp, oxygen_consumption) == high, toxic_substance_accumulation)) ::: (C) As a fly consumes oxygen, its cells produce a toxic substance that accumulates in the cells until it kills the fly.\nis_explanatory(Implies(has_attribute(cold_temp, oxygen_consumption) == low, spider_predation_effect)) ::: (D) The spiders that prey on flies consume oxygen more slowly in cold weather than in warm weather."
    ]
  },
  {
    "id": "test_882",
    "context": "People' s political behavior frequently does not match their rhetoric. Although many complain about government intervention in their lives, they tend not to reelect inactive politicians. But a politician' s activity consists largely in the passage of laws whose enforcement affects voters' lives. Thus, voters often reelect politicians whose behavior they resent.",
    "question": "Which one of the following most accurately describes the role played in the argument by the claim that people tend not to reelect inactive politicians?",
    "options": [
      "It is a premise offered in support of the conclusion that voters often reelect politicians whose behavior they resent.",
      "It is cited as evidence that people's behavior never matches their political beliefs.",
      "It describes a phenomenon for which the argument's conclusion is offered as an explanation.",
      "It is offered as an example of how a politician's activity consists largely in the passage of laws whose enforcement interferes with voters' lives."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([complain_about_intervention, do_not_reelect_inactive, politician_activity, resent_behavior, reelect_resented])\nroles = EnumSort([premise_supporting_conclusion, evidence_behavior_mismatch, phenomenon_explanation, example_politician_activity])\nplays_role = Function([statements] -> [roles])\n\n# Constraints\nplays_role(do_not_reelect_inactive) == premise_supporting_conclusion ::: It is a premise offered in support of the conclusion that voters often reelect politicians whose behavior they resent.\nplays_role(do_not_reelect_inactive) != evidence_behavior_mismatch ::: It is not cited as evidence that people's behavior never matches their political beliefs.\nplays_role(do_not_reelect_inactive) != phenomenon_explanation ::: It does not describe a phenomenon for which the argument's conclusion is offered as an explanation.\nplays_role(do_not_reelect_inactive) != example_politician_activity ::: It is not offered as an example of how a politician's activity consists largely in the passage of laws whose enforcement interferes with voters' lives.\n\n# Options\nQuestion ::: Which one of the following most accurately describes the role played in the argument by the claim that people tend not to reelect inactive politicians?\nis_correct(plays_role(do_not_reelect_inactive) == premise_supporting_conclusion) ::: (It is a premise offered in support of the conclusion that voters often reelect politicians whose behavior they resent.\nis_correct(plays_role(do_not_reelect_inactive) == evidence_behavior_mismatch) ::: (It is cited as evidence that people's behavior never matches their political beliefs.\nis_correct(plays_role(do_not_reelect_inactive) == phenomenon_explanation) ::: (It describes a phenomenon for which the argument's conclusion is offered as an explanation.\nis_correct(plays_role(do_not_reelect_inactive) == example_politician_activity) ::: (It is offered as an example of how a politician's activity consists largely in the passage of laws whose enforcement interferes with voters' lives."
    ]
  },
  {
    "id": "test_883",
    "context": "Cities now suffer from unprecedented levels of air pollution. Urban residents need to wear surgical masks whenever they go outside. Nuclear power is fully in compliance with the Clean Air Act of 1970, which imposes standards on air quality, unlike the current source of power -- coal. Surprisingly, no city has seriously considered transitioning to a nuclear power source. Rural areas use exclusively nuclear power, and they do not suffer from any air pollution.",
    "question": "All of the following explains the discrepancy EXCEPT:",
    "options": [
      "Terrorists would target a nuclear power plant in a heavily populated area.",
      "Transitioning to nuclear power is significantly more expensive than continuing to use coal.",
      "Urban populations have vigorously protested the introduction of nuclear power.",
      "It is impossible to discard nuclear waste in a safe manner."
    ],
    "raw_logic_programs": [
      "# Declarations\ncities = EnumSort([urban, rural])\npower_sources = EnumSort([nuclear, coal])\npollution = Function([cities] -> [bool])\ncompliance = Function([power_sources] -> [bool])\nconsidered_transition = Function([cities] -> [bool])\n\n# Constraints\npollution(urban) == True ::: Urban residents need to wear surgical masks whenever they go outside\npollution(rural) == False ::: Rural areas do not suffer from any air pollution\ncompliance(nuclear) == True ::: Nuclear power is fully in compliance with the Clean Air Act of 1970\ncompliance(coal) == False ::: Coal is not in compliance with the Clean Air Act of 1970\nconsidered_transition(urban) == False ::: No city has seriously considered transitioning to a nuclear power source\nForAll([c:cities], Implies(pollution(c), Exists([p:power_sources], Not(compliance(p))))) ::: Cities with pollution use non-compliant power sources\n\n# Options\nQuestion ::: All of the following explains the discrepancy EXCEPT:\nis_exception(Implies(considered_transition(urban), Not(terrorist_target))) ::: (Terrorists would target a nuclear power plant in a heavily populated area.\nis_exception(Implies(considered_transition(urban), Not(expensive_transition))) ::: (Transitioning to nuclear power is significantly more expensive than continuing to use coal.\nis_exception(Implies(considered_transition(urban), Not(protest))) ::: (Urban populations have vigorously protested the introduction of nuclear power.\nis_exception(Implies(considered_transition(urban), Not(safe_disposal))) ::: (It is impossible to discard nuclear waste in a safe manner."
    ]
  },
  {
    "id": "test_884",
    "context": "Cyclists in the Tour de France are extremely physically fit: all of the winners of this race have had abnormal physiological constitutions. Typical of the abnormal physiology of these athletes are exceptional lung capacity and exceptionally powerful hearts. Tests conducted on last year' s winner did not reveal an exceptionally powerful heart. That cyclist must, ttherefore, have exceptional lung capacity.",
    "question": "The reasoning in the argument is most vulnerable to criticism on the grounds that it overlooks the possibility that",
    "options": [
      "having exceptional lung capacity and an exceptionally powerful heart is an advantage in cycling",
      "cyclists with normal lung capacity rarely have exceptionally powerful hearts",
      "some winners of the Tour de France have neither exceptional lung capacity nor exceptionally powerful hearts",
      "the exceptional lung capacity and exceptionally powerful hearts of Tour de France winners are due to training"
    ],
    "raw_logic_programs": [
      "# Declarations\nwinners = EnumSort([last_year_winner])\nattributes = EnumSort([exceptional_lung_capacity, exceptionally_powerful_heart])\nhas_attribute = Function([winners, attributes] -> [bool])\n\n# Constraints\nForAll([w:winners], Or(has_attribute(w, exceptional_lung_capacity), has_attribute(w, exceptionally_powerful_heart))) ::: All winners have either exceptional lung capacity or exceptionally powerful hearts\nNot(has_attribute(last_year_winner, exceptionally_powerful_heart)) ::: Tests conducted on last year's winner did not reveal an exceptionally powerful heart\n\n# Options\nQuestion ::: The reasoning in the argument is most vulnerable to criticism on the grounds that it overlooks the possibility that\nis_overlooked(And(has_attribute(last_year_winner, exceptional_lung_capacity), has_attribute(last_year_winner, exceptionally_powerful_heart))) ::: (A) having exceptional lung capacity and an exceptionally powerful heart is an advantage in cycling\nis_overlooked(ForAll([w:winners], Implies(Not(has_attribute(w, exceptional_lung_capacity)), Not(has_attribute(w, exceptionally_powerful_heart))))) ::: (B) cyclists with normal lung capacity rarely have exceptionally powerful hearts\nis_overlooked(Exists([w:winners], And(Not(has_attribute(w, exceptional_lung_capacity)), Not(has_attribute(w, exceptionally_powerful_heart))))) ::: (C) some winners of the Tour de France have neither exceptional lung capacity nor exceptionally powerful hearts\nis_overlooked(ForAll([w:winners], Implies(Or(has_attribute(w, exceptional_lung_capacity), has_attribute(w, exceptionally_powerful_heart)), due_to_training(w)))) ::: (D) the exceptional lung capacity and exceptionally powerful hearts of Tour de France winners are due to training"
    ]
  },
  {
    "id": "test_885",
    "context": "Archaeologist: A skeleton of a North American mastodon that became extinct at the peak of the Ice Age was recently discovered. It contains a human-made projectile dissimilar to any found in that part of Eurasia closest to North America. Thus, since Eurasians did not settle in North America until shortly before the peak of the Ice Age, the first Eurasian settlers in North America probably came from a more distant part of Eurasia.",
    "question": "Which one of the following, if true, most seriously weakens the archaeologist's argument?",
    "options": [
      "The people who occupied the Eurasian area closest to North America remained nomadic throughout the Ice Age.",
      "The skeleton of a bear from the same place and time as the mastodon skeleton contains a similar projectile.",
      "The projectile found in the mastodon does not resemble any that were used in Eurasia before or during the Ice Age.",
      "Climatic conditions in North America just before the Ice Age were more conducive to human habitation than were those in the part of Eurasia closest to North America at that time."
    ],
    "raw_logic_programs": [
      "# Declarations\nprojectiles = EnumSort([mastodon_projectile, bear_projectile, eurasian_projectile])\nregions = EnumSort([north_america, closest_eurasia, distant_eurasia])\nevents = EnumSort([ice_age, pre_ice_age])\nsettlers = EnumSort([eurasian_settlers])\n\n# Constraints\nContains(mastodon_projectile, human_made) ::: The mastodon skeleton contains a human-made projectile\nNot(Exists([p:projectiles], And(p != mastodon_projectile, p == eurasian_projectile))) ::: The projectile is dissimilar to any found in the part of Eurasia closest to North America\nExists([s:settlers], And(s == eurasian_settlers, s == closest_eurasia, s == ice_age)) ::: Eurasians settled in North America shortly before the peak of the Ice Age\nExists([s:settlers], And(s == eurasian_settlers, s == distant_eurasia)) ::: The first Eurasian settlers in North America probably came from a more distant part of Eurasia\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the archaeologist's argument?\nis_weakening(Exists([p:projectiles], And(p == bear_projectile, p == mastodon_projectile))) ::: (The skeleton of a bear from the same place and time as the mastodon skeleton contains a similar projectile.\nis_weakening(Not(Exists([p:projectiles], And(p == mastodon_projectile, p == eurasian_projectile)))) ::: (The projectile found in the mastodon does not resemble any that were used in Eurasia before or during the Ice Age.\nis_weakening(Exists([r:regions], And(r == north_america, r == pre_ice_age, r == conducive_to_habitation))) ::: (Climatic conditions in North America just before the Ice Age were more conducive to human habitation than were those in the part of Eurasia closest to North America at that time."
    ]
  },
  {
    "id": "test_886",
    "context": "A high-calorie diet providing adequate fats was a crucial requirement for the evolution of the anatomically modern human brain, a process that began among our early human ancestors. Food resources that could support such a diet were most abundant and reliable in the shore environments that were available to early humans. Nevertheless, the human brain' s evolution took place almost exclusively in savanna and woodland areas.",
    "question": "Which one of the following, if true, would most help to resolve the apparent conflict presented above?",
    "options": [
      "Prehistoric savanna and woodland areas offered more reliable and abundant resources than they do today.",
      "Early humans had a significantly lower metabolic rate than anatomically modern humans, allowing them to expend their fat reserves more efficiently.",
      "The brains of the earliest known humans were 30 percent smaller than the anatomically modern human brain.",
      "Gathering food in shore environments required a significantly greater expenditure of calories by early humans than did gathering food in other environments."
    ],
    "raw_logic_programs": [
      "# Declarations\nenvironments = EnumSort([shore, savanna, woodland])\nresources = Function([environments] -> [bool])\nbrain_evolution = Function([environments] -> [bool])\ncalorie_expenditure = Function([environments] -> [int])\nmetabolic_rate = Function([humans] -> [int])\nbrain_size = Function([humans] -> [int])\n\n# Constraints\nresources(shore) == True ::: Food resources that could support a high-calorie diet were most abundant and reliable in shore environments\nbrain_evolution(savanna) == True ::: The human brain's evolution took place almost exclusively in savanna areas\nbrain_evolution(woodland) == True ::: The human brain's evolution took place almost exclusively in woodland areas\n\n# Options\nQuestion ::: Which one of the following, if true, would most help to resolve the apparent conflict presented above?\nis_resolving(resources(savanna) > resources(shore)) ::: (A) Prehistoric savanna and woodland areas offered more reliable and abundant resources than they do today.\nis_resolving(metabolic_rate(early_humans) < metabolic_rate(modern_humans)) ::: (B) Early humans had a significantly lower metabolic rate than anatomically modern humans, allowing them to expend their fat reserves more efficiently.\nis_resolving(brain_size(early_humans) < brain_size(modern_humans)) ::: (C) The brains of the earliest known humans were 30 percent smaller than the anatomically modern human brain.\nis_resolving(calorie_expenditure(shore) > calorie_expenditure(savanna)) ::: (D) Gathering food in shore environments required a significantly greater expenditure of calories by early humans than did gathering food in other environments."
    ]
  },
  {
    "id": "test_887",
    "context": "Mayor: A huge protest against plans to build a chemical plant in this town was held yesterday. The protesters claim that the factory could cause health problems. But this worry can be dismissed. Most of the protesters were there only because they were paid to show up by property developers who are concerned that the factory would lower the value of nearby land that they own.",
    "question": "Which one of the following most accurately expresses a flaw in reasoning in the mayor's argument?",
    "options": [
      "The argument generalizes on the basis of a few unrepresentative cases.",
      "The argument attempts to persuade by inducing fear of the consequences of rejecting its conclusion.",
      "The argument rejects a claim simply because of the motivation that some people have for making it.",
      "The argument mistakes a claim that a result is possible for a claim that the result is inevitable."
    ],
    "raw_logic_programs": [
      "# Declarations\nprotesters = EnumSort([paid, unpaid])\nclaims = EnumSort([health_problems, property_value])\nmotivations = EnumSort([health_concern, property_concern])\nmayor_argument = Function([protesters, claims, motivations] -> [bool])\n\n# Constraints\nForAll([p:protesters], Exists([c:claims, m:motivations], mayor_argument(p, c, m))) ::: Each protester has a claim and a motivation\nForAll([p:protesters], Implies(p == paid, Exists([m:motivations], m == property_concern))) ::: Most of the protesters were paid by property developers\nForAll([p:protesters], Implies(p == unpaid, Exists([c:claims], c == health_problems))) ::: Unpaid protesters claim health problems\n\n# Options\nQuestion ::: Which one of the following most accurately expresses a flaw in reasoning in the mayor's argument?\nis_flaw(ForAll([c:claims], Implies(c == health_problems, Exists([m:motivations], m == property_concern)))) ::: (The argument generalizes on the basis of a few unrepresentative cases.\nis_flaw(ForAll([c:claims], Implies(c == health_problems, Exists([m:motivations], m == health_concern)))) ::: (The argument attempts to persuade by inducing fear of the consequences of rejecting its conclusion.\nis_flaw(ForAll([c:claims], Implies(c == health_problems, Exists([m:motivations], m == property_concern)))) ::: (The argument rejects a claim simply because of the motivation that some people have for making it.\nis_flaw(ForAll([c:claims], Implies(c == health_problems, Exists([m:motivations], m == health_concern)))) ::: (The argument mistakes a claim that a result is possible for a claim that the result is inevitable."
    ]
  },
  {
    "id": "test_888",
    "context": "Humorous television advertisements are the only effective ones. For if something is humorous it will not only attract people' s attention, it will hold their attention long enough for a message to be conveyed. And, obviously, for an advertisement to be effective it must convey its message.",
    "question": "Which one of the following most accurately describes a flaw in the argument?",
    "options": [
      "It confuses attracting a person's attention with holding a person's attention long enough for a message to be conveyed.",
      "It takes for granted that nothing but humor can attract a person's attention and hold it long enough for a message to be conveyed.",
      "It treats a necessary condition for an advertisement's being effective as if it were a sufficient condition.",
      "It takes for granted that an advertisement's only purpose is to convey its message."
    ],
    "raw_logic_programs": [
      "# Declarations\nadvertisements = EnumSort([humorous, non_humorous])\neffective = Function([advertisements] -> [bool])\nattracts_attention = Function([advertisements] -> [bool])\nholds_attention = Function([advertisements] -> [bool])\nconveys_message = Function([advertisements] -> [bool])\n\n# Constraints\nForAll([a:advertisements], Implies(effective(a), conveys_message(a))) ::: for an advertisement to be effective it must convey its message\nForAll([a:advertisements], Implies(humorous(a), And(attracts_attention(a), holds_attention(a)))) ::: if something is humorous it will attract and hold attention\nForAll([a:advertisements], Implies(And(attracts_attention(a), holds_attention(a)), conveys_message(a))) ::: attracting and holding attention is necessary for conveying a message\n\n# Options\nQuestion ::: Which one of the following most accurately describes a flaw in the argument?\nis_flaw(It_confuses(attracts_attention, holds_attention)) ::: (A)\nis_flaw(It_takes_for_granted(nothing_but_humor_can_attract_and_hold_attention)) ::: (B)\nis_flaw(It_treats_necessary_as_sufficient(effective, conveys_message)) ::: (C)\nis_flaw(It_takes_for_granted(only_purpose_is_to_convey_message)) ::: (D)"
    ]
  },
  {
    "id": "test_889",
    "context": "A new drug, taken twice daily for one month, is an effective treatment for a certain disease. The drug now most commonly prescribed for the disease occasionally has serious side effects such as seizures; in field tests, the new drug's side effects, though no worse than mild nausea, turned out to be much more frequent. Nevertheless, the new drug is clearly preferable as a treatment, since __.",
    "question": "Which of the following most logically completes the argument?",
    "options": [
      "there is a nonprescription medication that when taken with the new drug prevents the onset of nausea",
      "other drugs for the disease have typically been prescribed only for patients allergic to the most commonly prescribed drug",
      "It is possible that the drug now most commonly prescribed has side effects that have not yet been attributed to it",
      "people who experience nausea are prone to discontinue use of the new drug prematurely"
    ],
    "raw_logic_programs": [
      "# Declarations\ndrugs = EnumSort([new_drug, commonly_prescribed_drug])\nside_effects = EnumSort([seizures, mild_nausea])\ntreatment_effectiveness = Function([drugs] -> [bool])\nside_effect_severity = Function([drugs] -> [side_effects])\nside_effect_frequency = Function([drugs] -> [int])\n\n# Constraints\ntreatment_effectiveness(new_drug) == True ::: The new drug is an effective treatment\nside_effect_severity(commonly_prescribed_drug) == seizures ::: The commonly prescribed drug has serious side effects such as seizures\nside_effect_severity(new_drug) == mild_nausea ::: The new drug's side effects are no worse than mild nausea\nside_effect_frequency(new_drug) > side_effect_frequency(commonly_prescribed_drug) ::: The new drug's side effects are more frequent\n\n# Options\nQuestion ::: Which of the following most logically completes the argument?\nis_preferable(Exists([m:medications], And(nonprescription(m), prevents(m, mild_nausea)))) ::: (A) there is a nonprescription medication that when taken with the new drug prevents the onset of nausea\nis_preferable(ForAll([p:patients], Implies(allergic(p, commonly_prescribed_drug), prescribed(p, other_drugs)))) ::: (B) other drugs for the disease have typically been prescribed only for patients allergic to the most commonly prescribed drug\nis_preferable(Exists([s:side_effects], Not(attributed(commonly_prescribed_drug, s)))) ::: (C) It is possible that the drug now most commonly prescribed has side effects that have not yet been attributed to it\nis_preferable(ForAll([p:patients], Implies(experiences(p, mild_nausea), discontinues(p, new_drug)))) ::: (D) people who experience nausea are prone to discontinue use of the new drug prematurely"
    ]
  },
  {
    "id": "test_890",
    "context": "Letter to the editor: Sites are needed for disposal of contaminated dredge spoils from the local harbor. However, the approach you propose would damage commercial fishing operations. One indication of this is that over 20, 000 people have signed petitions opposing your approach and favoring instead the use of sand-capped pits in another area.",
    "question": "Which one of the following most accurately describes a reasoning flaw in the letter's argument?",
    "options": [
      "The argument's conclusion is based on the testimony of people who have not been shown to have appropriate expertise.",
      "The argument takes for granted that no third option is available that will satisfy all the interested parties.",
      "The argument fails to establish that the alternative approach referred to is a viable one.",
      "The argument attempts to establish a particular conclusion because doing so is in the letter writer's self-interest rather than because of any genuine concern for the truth of the matter."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([signers, experts, letter_writer])\napproaches = EnumSort([proposed_approach, sand_capped_pits, third_option])\nconcerns = EnumSort([commercial_fishing, disposal_sites, self_interest])\ntestimony = Function([people, approaches] -> [bool])\nviability = Function([approaches] -> [bool])\ninterest = Function([people, concerns] -> [bool])\n\n# Constraints\nForAll([a:approaches], Or(testimony(signers, a), testimony(experts, a))) ::: The argument's conclusion is based on the testimony of people who have not been shown to have appropriate expertise\nNot(Exists([a:approaches], And(a != proposed_approach, a != sand_capped_pits, viability(a)))) ::: The argument takes for granted that no third option is available that will satisfy all the interested parties\nNot(viability(sand_capped_pits)) ::: The argument fails to establish that the alternative approach referred to is a viable one\ninterest(letter_writer, self_interest) ::: The argument attempts to establish a particular conclusion because doing so is in the letter writer's self-interest rather than because of any genuine concern for the truth of the matter\n\n# Options\nQuestion ::: Which one of the following most accurately describes a reasoning flaw in the letter's argument?\nis_flaw(testimony(signers, proposed_approach)) ::: (A) The argument's conclusion is based on the testimony of people who have not been shown to have appropriate expertise.\nis_flaw(Not(Exists([a:approaches], And(a != proposed_approach, a != sand_capped_pits, viability(a))))) ::: (B) The argument takes for granted that no third option is available that will satisfy all the interested parties.\nis_flaw(Not(viability(sand_capped_pits))) ::: (C) The argument fails to establish that the alternative approach referred to is a viable one.\nis_flaw(interest(letter_writer, self_interest)) ::: (D) The argument attempts to establish a particular conclusion because doing so is in the letter writer's self-interest rather than because of any genuine concern for the truth of the matter."
    ]
  },
  {
    "id": "test_891",
    "context": "There are two ways to manage an existing transportation infrastructure: continuous maintenance at adequate levels, and periodic radical reconstruction. Continuous maintenance dispenses with the need for radical reconstruction, and radical reconstruction is necessitated by failing to perform continuous maintenance. Over the long run, continuous maintenance is far less expensive; nevertheless, it almost never happens.",
    "question": "Which one of the following, if true, most contributes to an explanation of why the first alternative mentioned is almost never adopted?",
    "options": [
      "If continuous maintenance is performed at less-than-adequate levels, the need for radical reconstruction will often arise later than if maintenance had been restricted to responding to emergencies.",
      "Since different parts of the transportation infrastructure are the responsibility of different levels of government, radical reconstruction projects are very difficult to coordinate efficiently.",
      "When funds for transportation infrastructure maintenance are scarce, they are typically distributed in proportion to the amount of traffic that is borne by different elements of the infrastructure.",
      "For long periods, the task of regular maintenance lacks urgency, since the consequences of neglecting it are very slow to manifest themselves."
    ],
    "raw_logic_programs": [
      "# Declarations\nalternatives = EnumSort([continuous_maintenance, radical_reconstruction])\nfactors = EnumSort([cost, necessity, adoption])\ncontributes_to_explanation = Function([factors] -> [bool])\n\n# Constraints\ncontributes_to_explanation(cost) == (continuous_maintenance < radical_reconstruction) ::: Over the long run, continuous maintenance is far less expensive\ncontributes_to_explanation(necessity) == (radical_reconstruction == Not(continuous_maintenance)) ::: Continuous maintenance dispenses with the need for radical reconstruction, and radical reconstruction is necessitated by failing to perform continuous maintenance\ncontributes_to_explanation(adoption) == Not(continuous_maintenance) ::: Nevertheless, it almost never happens\n\n# Options\nQuestion ::: Which one of the following, if true, most contributes to an explanation of why the first alternative mentioned is almost never adopted?\nis_explanation(contributes_to_explanation(adoption) == (consequences_of_neglect == slow_to_manifest)) ::: (D) For long periods, the task of regular maintenance lacks urgency, since the consequences of neglecting it are very slow to manifest themselves."
    ]
  },
  {
    "id": "test_892",
    "context": "Pollen and other allergens can cause cells in the nose to release histamine, a chemical that inflames nasal tissue and causes runny nose, congestion, and sneezing. Antihistamines minimize these allergy symptoms by blocking the action of histamine. In addition, antihistamines have other effects, including drowsiness. However, histamine plays no role in the processes by which colds produce their symptoms.",
    "question": "If the statements above are true, which one of the following must also be true?",
    "options": [
      "The sleeplessness that sometimes accompanies allergies can be effectively treated with antihistamines.",
      "Pollen and other allergens do not cause colds.",
      "Antihistamines, when taken alone, are ineffective against congestion caused by colds.",
      "Any effect antihistamines may have in reducing cold symptoms does not result from blocking the action of histamine."
    ],
    "raw_logic_programs": [
      "# Declarations\n- allergens = EnumSort([pollen, other_allergens])\n- symptoms = EnumSort([runny_nose, congestion, sneezing])\n- conditions = EnumSort([allergy, cold])\n- chemicals = EnumSort([histamine, antihistamine])\n- effects = EnumSort([drowsiness, inflammation])\n- causes_release = Function([allergens, chemicals] -> [bool])\n- blocks_action = Function([chemicals, chemicals] -> [bool])\n- causes_symptoms = Function([chemicals, symptoms] -> [bool])\n- has_effects = Function([chemicals, effects] -> [bool])\n- plays_role = Function([chemicals, conditions] -> [bool])\n\n# Constraints\n- ForAll([a:allergens], causes_release(a, histamine)) ::: Pollen and other allergens can cause cells in the nose to release histamine\n- causes_symptoms(histamine, inflammation) ::: Histamine inflames nasal tissue\n- ForAll([s:symptoms], causes_symptoms(histamine, s)) ::: Histamine causes runny nose, congestion, and sneezing\n- blocks_action(antihistamine, histamine) ::: Antihistamines block the action of histamine\n- has_effects(antihistamine, drowsiness) ::: Antihistamines have the effect of causing drowsiness\n- Not(plays_role(histamine, cold)) ::: Histamine plays no role in the processes by which colds produce their symptoms\n\n# Options\n- Question ::: If the statements above are true, which one of the following must also be true?\n- is_true(ForAll([s:symptoms], Not(causes_symptoms(antihistamine, s)) & plays_role(histamine, cold))) ::: (A) Antihistamines, when taken alone, are ineffective against congestion caused by colds.\n- is_true(Not(plays_role(histamine, cold)) & ForAll([s:symptoms], Not(causes_symptoms(antihistamine, s)))) ::: (B) Any effect antihistamines may have in reducing cold symptoms does not result from blocking the action of histamine."
    ]
  },
  {
    "id": "test_893",
    "context": "For 20 years all applicants for jobs as technicians at EquipCorp were required to demonstrate that they could operate and repair the machinery that was central to EquipCorp' s manufacturing business. Now, however, that particular machinery is obsolete, and very different machinery fills the central role. Ttherefore, the old requirement is no longer a useful method for evaluating whether applicants for jobs as technicians at EquipCorp have the skills necessary for the job.",
    "question": "Which of the following, if true, most strengthens the argument?",
    "options": [
      "Much of the machinery that EquipCorp now uses in manufacturing is very likely to become obsolete within the next 20 years.",
      "Most people applying for jobs as technicians today have much broader skills than did people applying for jobs as technicians 20 years ago.",
      "The skills required to operate and repair the obsolete machinery are useful in operating and maintaining many other types of machinery at EquipCorp that are not obsolete.",
      "Among the people already holding jobs as technicians at Equip Corp, those who are most skillful at operating the new machinery had been some of the least skillful at operating the old machinery"
    ],
    "raw_logic_programs": [
      "# Declarations\napplicants = EnumSort([applicant1, applicant2, ..., applicantN])  # Represents all applicants\nskills = EnumSort([operate_old_machinery, repair_old_machinery, operate_new_machinery, repair_new_machinery])\nrequirements = Function([applicants] -> [bool])  # Whether an applicant meets the job requirements\n\n# Constraints\nForAll([a:applicants], Implies(requirements(a), And(skills(a, operate_old_machinery), skills(a, repair_old_machinery)))) ::: All applicants were required to demonstrate skills in operating and repairing old machinery\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the argument?\nis_strongest(Implies(ForAll([a:applicants], Not(skills(a, operate_old_machinery))), Not(requirements(a)))) ::: (A) Much of the machinery that EquipCorp now uses in manufacturing is very likely to become obsolete within the next 20 years.\nis_strongest(Implies(ForAll([a:applicants], skills(a, operate_new_machinery)), requirements(a))) ::: (B) Most people applying for jobs as technicians today have much broader skills than did people applying for jobs as technicians 20 years ago.\nis_strongest(Implies(ForAll([a:applicants], skills(a, operate_old_machinery)), skills(a, operate_new_machinery))) ::: (C) The skills required to operate and repair the obsolete machinery are useful in operating and maintaining many other types of machinery at EquipCorp that are not obsolete.\nis_strongest(Implies(ForAll([a:applicants], Not(skills(a, operate_old_machinery))), skills(a, operate_new_machinery))) ::: (D) Among the people already holding jobs as technicians at EquipCorp, those who are most skillful at operating the new machinery had been some of the least skillful at operating the old machinery."
    ]
  },
  {
    "id": "test_894",
    "context": "One summer, floods covered low-lying garlic fields situated in a region with a large mosquito population. Since mosquitoes lay their eggs in standing water, flooded fields would normally attract mosquitoes, yet no mosquitoes were found in the fields. Diallyl sulfide, a major component of garlic, is known to repel several species of insects, including mosquitoes, so it is likely that diallyl sulfide from the garlic repelled the mosquitoes.",
    "question": "Which of the following, if true, most strengthens the argument?",
    "options": [
      "Many insect species not repelled by diallyl sulfide were found in the flooded garlic fields throughout the summer.",
      "The mosquito population of the region as a whole was significantly smaller during the year in which the flooding took place than it had been in previous years.",
      "Diallyl sulfide is also found in onions but at concentrations lower than in garlic.",
      "By the end of the summer, most of the garlic plants in the flooded fields had been killed by waterborne fungi."
    ],
    "raw_logic_programs": [
      "# Declarations\ninsects = EnumSort([mosquitoes, other_insects])\nfields = EnumSort([garlic_fields])\ncompounds = EnumSort([diallyl_sulfide])\nrepels = Function([compounds, insects] -> [bool])\nfound_in = Function([insects, fields] -> [bool])\n\n# Constraints\nrepels(diallyl_sulfide, mosquitoes) ::: Diallyl sulfide is known to repel mosquitoes\nNot(found_in(mosquitoes, garlic_fields)) ::: No mosquitoes were found in the garlic fields\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the argument?\nis_strongest(And(Exists([i:insects], Not(repels(diallyl_sulfide, i)) And found_in(i, garlic_fields)))) ::: (A) Many insect species not repelled by diallyl sulfide were found in the flooded garlic fields throughout the summer.\nis_strongest(Not(Exists([i:insects], found_in(i, garlic_fields)))) ::: (B) The mosquito population of the region as a whole was significantly smaller during the year in which the flooding took place than it had been in previous years.\nis_strongest(And(repels(diallyl_sulfide, mosquitoes), Exists([c:compounds], c != diallyl_sulfide))) ::: (C) Diallyl sulfide is also found in onions but at concentrations lower than in garlic.\nis_strongest(Not(Exists([p:plants], found_in(mosquitoes, garlic_fields)))) ::: (D) By the end of the summer, most of the garlic plants in the flooded fields had been killed by waterborne fungi."
    ]
  },
  {
    "id": "test_895",
    "context": "Employee: The company I work for has installed website filtering software that blocks access to non-work-related websites. It claims that being able to visit such sites distracts us, keeping us from doing our best work. But offices that have windows or are nicely decorated can be highly distracting too, and no one claims that people do their best work in an undecorated, windowless room.",
    "question": "Which one of the following arguments is most similar in its reasoning to the employee's argument?",
    "options": [
      "Activists are calling for an electronic device to be banned, for research has shown that prolonged exposure to the device while it is in use causes cancer in laboratory animals. But most chemicals probably cause cancer when administered in very high doses, yet no one would argue that we should ban all these chemicals for that reason.",
      "Acme expects that approximately 1, 000 of its employees will retire over the next year. No one would claim that Acme does not need a work force as large as its present one. So Acme will need to hire approximately 1, 000 people over the next year.",
      "In the movie industry, a film's success is judged in terms of its profit relative to its cost. This is misguided, because under this criterion an expensive movie that sells just as many tickets as a lower-budget movie would be less successful than the lower-budget movie, which is clearly counterintuitive.",
      "Some people advocate moderation in all things. But different people react differently to certain substances, so what counts as a moderate amount of, say, caffeine for you might be too much for me. So to talk about moderation is to fail to take into account people's basic biological differences."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([employee_argument, argument_1, argument_2, argument_3, argument_4])\nreasoning = Function([arguments] -> [str])\n\n# Constraints\nreasoning(employee_argument) == \"The argument points out an inconsistency in the reasoning behind a policy by comparing it to a similar situation where the same reasoning is not applied.\" ::: Employee's argument reasoning\n\nreasoning(argument_1) == \"The argument points out an inconsistency in the reasoning behind a policy by comparing it to a similar situation where the same reasoning is not applied.\" ::: Activists' argument reasoning\nreasoning(argument_2) == \"The argument makes a prediction based on current expectations without addressing potential inconsistencies.\" ::: Acme's argument reasoning\nreasoning(argument_3) == \"The argument critiques a criterion for success by highlighting a counterintuitive outcome.\" ::: Movie industry argument reasoning\nreasoning(argument_4) == \"The argument critiques a general principle by highlighting individual differences.\" ::: Moderation argument reasoning\n\n# Options\nQuestion ::: Which one of the following arguments is most similar in its reasoning to the employee's argument?\nis_similar(reasoning(employee_argument) == reasoning(argument_1)) ::: (A)\nis_similar(reasoning(employee_argument) == reasoning(argument_2)) ::: (B)\nis_similar(reasoning(employee_argument) == reasoning(argument_3)) ::: (C)\nis_similar(reasoning(employee_argument) == reasoning(argument_4)) ::: (D)"
    ]
  },
  {
    "id": "test_896",
    "context": "Alex: Shrimp farming results in damage to the environment, because investors make quick profits from such farming and then abandon the farms. Jolene: I disagree. Although some shrimp farms have proved unsustainable and have been quickly abandoned, properly built shrimp farms take a long time to construct and are costly to operate. Most owners try to make sure that their farms are productive for many years.",
    "question": "Their dialogue provides the most support for the claim that Alex and Jolene disagree with each other over whether",
    "options": [
      "shrimp farming often yields a quick, easy profit",
      "abandonment of a shrimp farm results in damage to the environment",
      "shrimp farming hardly ever damages the environment",
      "most owners of shrimp farms eventually abandon their farms"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([quick_profit, abandonment_damage, rarely_damages, most_abandon])\nagree = Function([statements] -> [bool])\n\n# Constraints\nagree(quick_profit) == (Alex) ::: Alex believes shrimp farming results in quick profits\nagree(abandonment_damage) == (Alex) ::: Alex believes abandonment of shrimp farms results in environmental damage\nagree(rarely_damages) == (Jolene) ::: Jolene believes properly built shrimp farms are sustainable and do not often damage the environment\nagree(most_abandon) == (Alex) ::: Alex implies most owners abandon their farms\n\n# Options\nQuestion ::: Their dialogue provides the most support for the claim that Alex and Jolene disagree with each other over whether\nis_disagreement(agree(quick_profit) == true, agree(quick_profit) == false) ::: (A) shrimp farming often yields a quick, easy profit\nis_disagreement(agree(abandonment_damage) == true, agree(abandonment_damage) == false) ::: (B) abandonment of a shrimp farm results in damage to the environment\nis_disagreement(agree(rarely_damages) == true, agree(rarely_damages) == false) ::: (C) shrimp farming hardly ever damages the environment\nis_disagreement(agree(most_abandon) == true, agree(most_abandon) == false) ::: (D) most owners of shrimp farms eventually abandon their farms"
    ]
  },
  {
    "id": "test_897",
    "context": "Some heartburn-medication advertisements imply that unrelieved heartburn is likely to cause esophageal cancer. This is simply false. The fact is that only about 5 percent of people with severe heartburn have a condition called Barrett' s esophagus, in which cells similar to those in the stomach' s lining develop in the lower esophagus. Only these people have an increased risk of developing cancer because of heartburn.",
    "question": "Which one of the following most accurately expresses the overall conclusion drawn in the argument?",
    "options": [
      "An increase in the risk of esophageal cancer arises from cells similar to those in the stomach's lining developing in the lower esophagus.",
      "Only those people with Barrett's esophagus can suffer an increased risk of developing cancer from heartburn.",
      "Unrelieved heartburn is not likely to cause esophageal cancer.",
      "The dangers touted by heartburn-medication advertisements will affect relatively few of the people who see those advertisements."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([people_with_severe_heartburn, people_with_Barretts_esophagus])\nconditions = EnumSort([severe_heartburn, Barretts_esophagus, increased_cancer_risk])\nadvertisements = EnumSort([heartburn_medication_ads])\nimplies = Function([conditions, conditions] -> [bool])\n\n# Constraints\nimplies(severe_heartburn, increased_cancer_risk) == False ::: Unrelieved heartburn is not likely to cause esophageal cancer\nimplies(Barretts_esophagus, increased_cancer_risk) == True ::: Only those people with Barrett's esophagus can suffer an increased risk of developing cancer from heartburn\nCount([p:people], And(p == people_with_severe_heartburn, implies(severe_heartburn, Barretts_esophagus))) == 0.05 ::: Only about 5 percent of people with severe heartburn have Barrett's esophagus\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the overall conclusion drawn in the argument?\nis_conclusion(implies(severe_heartburn, increased_cancer_risk) == False) ::: (Unrelieved heartburn is not likely to cause esophageal cancer.)\nis_conclusion(implies(Barretts_esophagus, increased_cancer_risk) == True) ::: (Only those people with Barrett's esophagus can suffer an increased risk of developing cancer from heartburn.)\nis_conclusion(implies(severe_heartburn, Barretts_esophagus) == False) ::: (An increase in the risk of esophageal cancer arises from cells similar to those in the stomach's lining developing in the lower esophagus.)\nis_conclusion(Count([p:people], And(p == people_with_severe_heartburn, implies(severe_heartburn, Barretts_esophagus))) == 0.05) ::: (The dangers touted by heartburn-medication advertisements will affect relatively few of the people who see those advertisements.)"
    ]
  },
  {
    "id": "test_898",
    "context": "Alice: Quotas on automobile imports to the United States should be eliminated. Then domestic producers would have to compete directly with Japanese manufacturers and would be forced to produce higher-quality cars. Such competition would be good for consumers. David: You fail to realize, Alice, that quotas on automobile imports are pervasive worldwide. Since Germany, Britain, and France have quotas, so should the United States.",
    "question": "Which one of the following most accurately characterizes David's response to Alice's statement?",
    "options": [
      "David fails to address the reasons Alice cites in favor of her conclusion.",
      "David unfairly directs his argument against Alice personally.",
      "David takes a position that is similar to the one Alice has taken.",
      "David uncovers a hidden assumption underlying Alice's position."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([Alice, David])\npositions = EnumSort([eliminate_quotas, maintain_quotas])\nreasons = EnumSort([competition, global_practice])\naddresses = Function([statements, reasons] -> [bool])\npositions_taken = Function([statements] -> [positions])\n\n# Constraints\npositions_taken(Alice) == eliminate_quotas ::: Alice argues for eliminating quotas\npositions_taken(David) == maintain_quotas ::: David argues for maintaining quotas\naddresses(Alice, competition) == True ::: Alice cites competition as a reason\naddresses(David, global_practice) == True ::: David cites global practice as a reason\n\n# Options\nQuestion ::: Which one of the following most accurately characterizes David's response to Alice's statement?\nis_accurate(David, Not(addresses(David, competition))) ::: (A) David fails to address the reasons Alice cites in favor of her conclusion.\nis_accurate(David, False) ::: (B) David unfairly directs his argument against Alice personally.\nis_accurate(David, positions_taken(David) == positions_taken(Alice)) ::: (C) David takes a position that is similar to the one Alice has taken.\nis_accurate(David, False) ::: (D) David uncovers a hidden assumption underlying Alice's position."
    ]
  },
  {
    "id": "test_899",
    "context": "Country X' s recent stock-trading scandal should not diminish investors' confidence in the country's stock market. For one thing, <b> the discovery of the scandal confirms that Country X has a strong regulatory system </b>, as the following considerations show. In any stock market, some fraudulent activity is inevitable. If a stock market is well regulated, any significant stock-trading fraud in it will very likely be discovered. This deters potential perpetrators and facilitates improvement in regulatory processes.",
    "question": "In the argument, the portion in boldface plays which of the following roles?",
    "options": [
      "It is the argument's only conclusion.",
      "It is a conclusion for which the argument provides support and which itself is used to support the argument's main conclusion.",
      "It is a compound statement containing both the argument's main conclusion and an assumption used to support that conclusion.",
      "It is the argument's main conclusion and is supported by another explicitly stated conclusion for which further support is provided."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([scandal_discovery, strong_regulatory_system, inevitable_fraud, well_regulated_market, fraud_discovery, deterrence, regulatory_improvement])\nroles = EnumSort([main_conclusion, supporting_conclusion, assumption, evidence])\nplays_role = Function([statements] -> [roles])\n\n# Constraints\nplays_role(scandal_discovery) == evidence ::: The discovery of the scandal is evidence.\nplays_role(strong_regulatory_system) == supporting_conclusion ::: The discovery of the scandal confirms that Country X has a strong regulatory system.\nplays_role(inevitable_fraud) == assumption ::: In any stock market, some fraudulent activity is inevitable.\nplays_role(well_regulated_market) == assumption ::: If a stock market is well regulated, any significant stock-trading fraud in it will very likely be discovered.\nplays_role(fraud_discovery) == evidence ::: Fraud discovery deters potential perpetrators and facilitates improvement in regulatory processes.\nplays_role(deterrence) == evidence ::: Deterrence is a result of fraud discovery.\nplays_role(regulatory_improvement) == evidence ::: Regulatory improvement is a result of fraud discovery.\n\n# Options\nQuestion ::: In the argument, the portion in boldface plays which of the following roles?\nis_role(plays_role(strong_regulatory_system) == main_conclusion) ::: (It is the argument's only conclusion.\nis_role(plays_role(strong_regulatory_system) == supporting_conclusion) ::: (It is a conclusion for which the argument provides support and which itself is used to support the argument's main conclusion.\nis_role(plays_role(strong_regulatory_system) == compound_statement) ::: (It is a compound statement containing both the argument's main conclusion and an assumption used to support that conclusion.\nis_role(plays_role(strong_regulatory_system) == main_conclusion) ::: (It is the argument's main conclusion and is supported by another explicitly stated conclusion for which further support is provided."
    ]
  },
  {
    "id": "test_900",
    "context": "If the economy is weak, then prices remain constant although unemployment rises. But unemployment rises only if investment decreases. Fortunately, investment is not decreasing.",
    "question": "If the statements above are true, then which one of the following must be false?",
    "options": [
      "Either unemployment is rising or the economy is not weak.",
      "The economy is weak only if investment decreases.",
      "Either the economy is weak or prices are remaining constant.",
      "Either the economy is weak or investment is decreasing."
    ],
    "raw_logic_programs": [
      "# Declarations\nweak_economy = Bool('weak_economy')\nprices_constant = Bool('prices_constant')\nunemployment_rises = Bool('unemployment_rises')\ninvestment_decreases = Bool('investment_decreases')\n\n# Constraints\nImplies(weak_economy, And(prices_constant, unemployment_rises)) ::: If the economy is weak, then prices remain constant although unemployment rises\nImplies(unemployment_rises, investment_decreases) ::: Unemployment rises only if investment decreases\nNot(investment_decreases) ::: Fortunately, investment is not decreasing\n\n# Options\nQuestion ::: If the statements above are true, then which one of the following must be false?\nis_false(Or(unemployment_rises, Not(weak_economy))) ::: (A) Either unemployment is rising or the economy is not weak\nis_false(Implies(weak_economy, investment_decreases)) ::: (B) The economy is weak only if investment decreases\nis_false(Or(weak_economy, prices_constant)) ::: (C) Either the economy is weak or prices are remaining constant\nis_false(Or(weak_economy, investment_decreases)) ::: (D) Either the economy is weak or investment is decreasing"
    ]
  },
  {
    "id": "test_901",
    "context": "Student: My university recently enacted new penalties for drinking alcohol in on-campus student housing. But the university has attempted to curb on-campus drinking many times in the past, and these attempts have never been successful. Thus, these new penalties are bound to be just as ineffective.",
    "question": "The reasoning in the student's argument is most vulnerable to criticism on the grounds that the argument",
    "options": [
      "overlooks the possibility that the new penalties are relevantly different from the university's past attempts to curb on-campus drinking",
      "presumes, without providing justification, that students' preferred location for drinking alcohol is on-campus student housing",
      "overlooks the possibility that many students did not drink alcohol in on-campus student housing even before the new penalties were enacted",
      "fails to specify what new penalties the university enacted for drinking alcohol in on-campus student housing"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([past_attempts, new_penalties, student_preferences, student_behavior, penalty_details])\nvulnerabilities = EnumSort([overlook_differences, presume_preferences, overlook_behavior, fail_to_specify])\ncriticism = Function([arguments] -> [vulnerabilities])\n\n# Constraints\ncriticism(past_attempts) == overlook_differences ::: overlooks the possibility that the new penalties are relevantly different from the university's past attempts to curb on-campus drinking\ncriticism(student_preferences) == presume_preferences ::: presumes, without providing justification, that students' preferred location for drinking alcohol is on-campus student housing\ncriticism(student_behavior) == overlook_behavior ::: overlooks the possibility that many students did not drink alcohol in on-campus student housing even before the new penalties were enacted\ncriticism(penalty_details) == fail_to_specify ::: fails to specify what new penalties the university enacted for drinking alcohol in on-campus student housing\n\n# Options\nQuestion ::: The reasoning in the student's argument is most vulnerable to criticism on the grounds that the argument\nis_vulnerable(criticism(past_attempts) == overlook_differences) ::: (A)\nis_vulnerable(criticism(student_preferences) == presume_preferences) ::: (B)\nis_vulnerable(criticism(student_behavior) == overlook_behavior) ::: (C)\nis_vulnerable(criticism(penalty_details) == fail_to_specify) ::: (D)"
    ]
  },
  {
    "id": "test_902",
    "context": "Last week, an investigative journalist published an expose in the newspaper, demonstrating that many of the shoes sold in a certain department store in California were made overseas in sweatshops that are alleged to use child labor. This week, the department store experienced a drop in shoe sales, after twelve weeks of robust sales of shoes. The management team of the department store maintains that the unfavorable article in the newspaper last week had nothing to do with their drop in shoe sales this week.",
    "question": "Which of the following, if true, most strongly supports the management team's position?",
    "options": [
      "Other department stores that sell only shoes manufactured in the United States have also reported a decline in shoe sales this week.",
      "This was not the first time this journalist published an expose of some of the products sold in this department store.",
      "Stores typically only acknowledge the adverse effect of news on their business if they experience a sudden decline in sales.",
      "This department store regularly advertises in this particular newspaper, often offering coupons for a variety of products they sell."
    ],
    "raw_logic_programs": [
      "# Declarations\nstores = EnumSort([department_store, other_stores])\nevents = EnumSort([expose_published, drop_in_sales])\ncauses = Function([events, stores] -> [bool])\n\n# Constraints\ncauses(expose_published, department_store) == False ::: The management team maintains that the unfavorable article had nothing to do with their drop in shoe sales\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the management team's position?\nis_supportive(causes(drop_in_sales, other_stores) == True) ::: (A) Other department stores that sell only shoes manufactured in the United States have also reported a decline in shoe sales this week.\nis_supportive(causes(expose_published, department_store) == False) ::: (B) This was not the first time this journalist published an expose of some of the products sold in this department store.\nis_supportive(Implies(causes(expose_published, department_store) == True, drop_in_sales == sudden)) ::: (C) Stores typically only acknowledge the adverse effect of news on their business if they experience a sudden decline in sales.\nis_supportive(causes(advertising, department_store) == True) ::: (D) This department store regularly advertises in this particular newspaper, often offering coupons for a variety of products they sell."
    ]
  },
  {
    "id": "test_903",
    "context": "Saunders: Everyone at last week' s neighborhood association meeting agreed that the row of abandoned and vandalized houses on Carlton Street posed a threat to the safety of our neighborhood. Moreover, no one now disputes that getting the houses torn down eliminated that threat. Some people tried to argue that it was unnecessary to demolish what they claimed were basically sound buildings, since the city had established a fund to help people in need of housing buy and rehabilitate such buildings. The overwhelming success of the demolition strategy, however, proves that the majority, who favored demolition, were right and that those who claimed that the problem could and should be solved by rehabilitating the houses were wrong.",
    "question": "Which one of the following principles, if established, would determine that demolishing the houses was the right decision or instead would determine that the proposal advocated by the opponents of demolition should have been adopted?",
    "options": [
      "When there are two proposals for solving a neighborhood problem, and only one of them would preclude the possibility of trying the other approach if the first proves unsatisfactory, then the approach that does not foreclose the other possibility should be the one adopted.",
      "When what to do about an abandoned neighborhood building is in dispute, the course of action that would result in the most housing for people who need it should be the one adopted unless the building is believed to pose a threat to neighborhood safety.",
      "If one of two proposals for renovating vacant neighborhood buildings requires government funding whereas the second does not, the second proposal should be the one adopted unless the necessary government funds have already been secured.",
      "No proposal for dealing with a threat to a neighborhood's safety should be adopted merely because a majority of the residents of that neighborhood prefer that proposal to a particular counterproposal."
    ],
    "raw_logic_programs": [
      "# Declarations\nproposals = EnumSort([demolition, rehabilitation])\nprinciples = EnumSort([preclude_possibility, most_housing, government_funding, majority_preference])\ndecision = Function([principles] -> [proposals])\n\n# Constraints\nagreed_threat = True ::: Everyone agreed that the houses posed a threat\neliminated_threat = True ::: Getting the houses torn down eliminated the threat\nsuccess_demolition = True ::: The overwhelming success of the demolition strategy\nmajority_favored_demolition = True ::: The majority favored demolition\nopponents_advocated_rehabilitation = True ::: Opponents advocated for rehabilitation\n\n# Options\nQuestion ::: Which one of the following principles, if established, would determine that demolishing the houses was the right decision or instead would determine that the proposal advocated by the opponents of demolition should have been adopted?\ndecision(preclude_possibility) == rehabilitation ::: (When there are two proposals for solving a neighborhood problem, and only one of them would preclude the possibility of trying the other approach if the first proves unsatisfactory, then the approach that does not foreclose the other possibility should be the one adopted.\ndecision(most_housing) == rehabilitation ::: (When what to do about an abandoned neighborhood building is in dispute, the course of action that would result in the most housing for people who need it should be the one adopted unless the building is believed to pose a threat to neighborhood safety.\ndecision(government_funding) == rehabilitation ::: (If one of two proposals for renovating vacant neighborhood buildings requires government funding whereas the second does not, the second proposal should be the one adopted unless the necessary government funds have already been secured.\ndecision(majority_preference) == rehabilitation ::: (No proposal for dealing with a threat to a neighborhood's safety should be adopted merely because a majority of the residents of that neighborhood prefer that proposal to a particular counterproposal."
    ]
  },
  {
    "id": "test_904",
    "context": "Commentator: Most journalists describe their individual political orientations as liberal, and it is often concluded that there is ttherefore a liberal bias in current journalism. This is not the case, however, because newspapers, magazines, radio, and television are all in the business of selling news and advertising, and ttherefore face market pressures that tend to keep them impartial, since in order to maximize profits they must target the broadest customer base possible.",
    "question": "Which one of the following most accurately expresses the main conclusion drawn by the commentator's argument?",
    "options": [
      "Major media must target the broadest customer base possible in order to maximize profits.",
      "Major media face significant market pressures.",
      "Current journalism does not have a liberal political bias.",
      "The individual political orientations of journalists do not constitute acceptable evidence regarding media bias."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([liberal_bias, market_pressures, broad_customer_base, journalist_orientation])\nconclusion = Function([propositions] -> [bool])\n\n# Constraints\nconclusion(market_pressures) ::: Major media face significant market pressures\nconclusion(broad_customer_base) ::: Major media must target the broadest customer base possible in order to maximize profits\nconclusion(journalist_orientation) ::: The individual political orientations of journalists do not constitute acceptable evidence regarding media bias\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the main conclusion drawn by the commentator's argument?\nis_main_conclusion(conclusion(liberal_bias)) ::: (Current journalism does not have a liberal political bias.)\nis_main_conclusion(conclusion(market_pressures)) ::: (Major media face significant market pressures.)\nis_main_conclusion(conclusion(broad_customer_base)) ::: (Major media must target the broadest customer base possible in order to maximize profits.)\nis_main_conclusion(conclusion(journalist_orientation)) ::: (The individual political orientations of journalists do not constitute acceptable evidence regarding media bias.)"
    ]
  },
  {
    "id": "test_905",
    "context": "Some people claim that every human discovery or invention is an instance of self-expression. But what they seem to ignore is that, trivially, anything we do is self-expressive. So, until they can give us a more interesting interpretation of their claim, we are not obliged to take their claim seriously.",
    "question": "Which one of the following, if true, provides the most support for the reasoning above?",
    "options": [
      "No claims that are trivial are worthy of serious consideration.",
      "All claims that are trivial are uninteresting.",
      "Most people do not take trivial claims seriously.",
      "Every claim is open to both interesting and uninteresting interpretations."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([trivial, non_trivial])\ninterpretations = EnumSort([interesting, uninteresting])\nconsideration = Function([claims] -> [bool])\ninterpretation = Function([claims] -> [interpretations])\n\n# Constraints\nForAll([c:claims], Implies(c == trivial, interpretation(c) == uninteresting)) ::: Anything we do is self-expressive, which is trivial\nForAll([c:claims], Implies(interpretation(c) == uninteresting, Not(consideration(c)))) ::: Uninteresting claims are not worthy of serious consideration\n\n# Options\nQuestion ::: Which one of the following, if true, provides the most support for the reasoning above?\nis_supportive(ForAll([c:claims], Implies(c == trivial, Not(consideration(c))))) ::: (A) No claims that are trivial are worthy of serious consideration.\nis_supportive(ForAll([c:claims], Implies(c == trivial, interpretation(c) == uninteresting))) ::: (B) All claims that are trivial are uninteresting.\nis_supportive(Exists([c:claims], And(c == trivial, Not(consideration(c))))) ::: (C) Most people do not take trivial claims seriously.\nis_supportive(ForAll([c:claims], Exists([i:interpretations], interpretation(c) == i))) ::: (D) Every claim is open to both interesting and uninteresting interpretations."
    ]
  },
  {
    "id": "test_906",
    "context": "Educator: It has been argued that our professional organization should make decisions about important issues -- such as raising dues and taking political stands -- by a direct vote of all members rather than by having members vote for officers who in turn make the decisions. This would not, however, be the right way to decide these matters, for the vote of any given individual is much more likely to determine organizational policy by influencing the election of an officer than by influencing the result of a direct vote on a single issue.",
    "question": "Which one of the following principles would, if valid, most help to justify the educator's reasoning?",
    "options": [
      "Important issues facing organizations should be decided by people who can devote their full time to mastering the information relevant to the issues.",
      "Outcomes of organizational elections should be evaluated according to their benefit to the organization as a whole, not according to the fairness of the methods by which they are produced.",
      "An organization's procedures for making organizational decisions should maximize the power of each member of the organization to influence the decisions made.",
      "An officer of an organization should not make a particular decision on an issue unless a majority of the organization's members would approve of that decision."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([A, B, C, D])\nvalid = Function([principles] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the task is to identify which principle would justify the reasoning.\n\n# Options\nQuestion ::: Which one of the following principles would, if valid, most help to justify the educator's reasoning?\nis_valid(valid(A)) ::: (Important issues facing organizations should be decided by people who can devote their full time to mastering the information relevant to the issues.\nis_valid(valid(B)) ::: (Outcomes of organizational elections should be evaluated according to their benefit to the organization as a whole, not according to the fairness of the methods by which they are produced.\nis_valid(valid(C)) ::: (An organization's procedures for making organizational decisions should maximize the power of each member of the organization to influence the decisions made.\nis_valid(valid(D)) ::: (An officer of an organization should not make a particular decision on an issue unless a majority of the organization's members would approve of that decision."
    ]
  },
  {
    "id": "test_907",
    "context": "Many symptoms of mental illnesses are affected by organic factors such as a deficiency in a compound in the brain. What is surprising, however, is the tremendous variation among different countries in the incidence of these symptoms in people with mental illnesses. This variation establishes that the organic factors that affect symptoms of mental illnesses are not distributed evenly around the globe.",
    "question": "The reasoning above is most vulnerable to criticism on the grounds that it",
    "options": [
      "fails to consider the possibility that cultural factors significantly affect how mental illnesses manifest themselves in symptoms",
      "neglects the possibility that nutritional factors that contribute to deficiencies in compounds in the brain vary from culture to culture",
      "does not say how many different mental illnesses are being discussed",
      "presumes, without providing justification, that any change in brain chemistry manifests itself as a change in mental condition"
    ],
    "raw_logic_programs": [
      "# Declarations\nsymptoms = EnumSort([symptom1, symptom2, ..., symptomN])  # Different symptoms of mental illnesses\ncountries = EnumSort([country1, country2, ..., countryM])  # Different countries\norganic_factors = EnumSort([factor1, factor2, ..., factorK])  # Organic factors affecting symptoms\n\n# Constraints\nForAll([s:symptoms, c:countries], Exists([f:organic_factors], affects(f, s, c))) ::: Many symptoms of mental illnesses are affected by organic factors\nExists([s:symptoms], Exists([c1:countries, c2:countries], incidence(s, c1) != incidence(s, c2))) ::: Tremendous variation among different countries in the incidence of these symptoms\nForAll([f:organic_factors], Exists([c1:countries, c2:countries], distribution(f, c1) != distribution(f, c2))) ::: Organic factors are not distributed evenly around the globe\n\n# Options\nQuestion ::: The reasoning above is most vulnerable to criticism on the grounds that it\nis_vulnerable(fails_to_consider(cultural_factors_affect_symptoms)) ::: (A) fails to consider the possibility that cultural factors significantly affect how mental illnesses manifest themselves in symptoms\nis_vulnerable(neglects_nutritional_factors_vary_culture) ::: (B) neglects the possibility that nutritional factors that contribute to deficiencies in compounds in the brain vary from culture to culture\nis_vulnerable(does_not_specify_number_of_illnesses) ::: (C) does not say how many different mental illnesses are being discussed\nis_vulnerable(presumes_change_in_chemistry_manifests_condition) ::: (D) presumes, without providing justification, that any change in brain chemistry manifests itself as a change in mental condition"
    ]
  },
  {
    "id": "test_908",
    "context": "No democracy should require national identification cards, for such cards are characteristic of totalitarian societies and have served only to track and control civilians.",
    "question": "The conclusion drawn above follows logically if which one of the following is assumed?",
    "options": [
      "No feature characteristic of totalitarian societies should be adopted by any democracy.",
      "National identification cards can serve only to track and control citizens.",
      "Those who propose national identification cards aim to make society more totalitarian.",
      "No democracy should track and control its civilians."
    ],
    "raw_logic_programs": [
      "# Declarations\nsocieties = EnumSort([democracy, totalitarian])\nfeatures = EnumSort([national_identification_cards, track_and_control_civilians])\ncharacteristic_of = Function([features, societies] -> [bool])\nadopted_by = Function([features, societies] -> [bool])\n\n# Constraints\ncharacteristic_of(national_identification_cards, totalitarian) ::: National identification cards are characteristic of totalitarian societies\nForAll([s:societies], Implies(characteristic_of(national_identification_cards, s), adopted_by(national_identification_cards, s))) ::: National identification cards have served only to track and control civilians\n\n# Options\nQuestion ::: The conclusion drawn above follows logically if which one of the following is assumed?\nImplies(characteristic_of(national_identification_cards, totalitarian), Not(adopted_by(national_identification_cards, democracy))) ::: (A) No feature characteristic of totalitarian societies should be adopted by any democracy.\nImplies(adopted_by(national_identification_cards, democracy), characteristic_of(national_identification_cards, totalitarian)) ::: (B) National identification cards can serve only to track and control citizens.\nImplies(adopted_by(national_identification_cards, democracy), characteristic_of(national_identification_cards, totalitarian)) ::: (C) Those who propose national identification cards aim to make society more totalitarian.\nImplies(adopted_by(track_and_control_civilians, democracy), Not(adopted_by(national_identification_cards, democracy))) ::: (D) No democracy should track and control its civilians."
    ]
  },
  {
    "id": "test_909",
    "context": "Economist: In order to decide what to do about protecting the ozone layer, we must determine the monetary amount of the economic resources that we would willingly expend to protect it. Such a determination amounts to a calculation of the monetary value of the ozone layer. Environmentalists argue that the ozone layer does not have a calculable monetary value. However, we would not willingly expend an amount equal to all of the world' s economic resources to protect the ozone layer, so the ozone layer is demonstrably worth less than that amount. Thus, the ozone layer has a calculable monetary value.",
    "question": "The reasoning in the economist's argument is flawed in that the argument",
    "options": [
      "gives no reason for thinking that merely establishing an upper limit on a certain monetary value would allow the calculation of that monetary value",
      "uses evidence that the monetary value of a particular natural resource is less than a certain amount in order to establish that the monetary value of any natural resource is less than that amount",
      "presupposes that the ozone layer should not be protected and then argues to that claim as a conclusion",
      "does not directly address the argument of the environmentalists"
    ],
    "raw_logic_programs": [
      "# Declarations\nargument = EnumSort([economist, environmentalists])\nclaims = EnumSort([ozone_monetary_value, upper_limit, calculable_value])\nreasoning_flaws = EnumSort([no_reason_for_upper_limit, evidence_for_any_resource, presupposes_conclusion, does_not_address_argument])\nsupports = Function([argument, claims] -> [bool])\nflawed_reasoning = Function([argument] -> [reasoning_flaws])\n\n# Constraints\nsupports(economist, ozone_monetary_value) ::: Economist claims the ozone layer has a calculable monetary value\nsupports(economist, upper_limit) ::: Economist claims the ozone layer is worth less than all of the world's economic resources\nsupports(environmentalists, Not(calculable_value)) ::: Environmentalists argue the ozone layer does not have a calculable monetary value\n\n# Options\nQuestion ::: The reasoning in the economist's argument is flawed in that the argument\nflawed_reasoning(economist) == no_reason_for_upper_limit ::: (gives no reason for thinking that merely establishing an upper limit on a certain monetary value would allow the calculation of that monetary value\nflawed_reasoning(economist) == evidence_for_any_resource ::: (uses evidence that the monetary value of a particular natural resource is less than a certain amount in order to establish that the monetary value of any natural resource is less than that amount\nflawed_reasoning(economist) == presupposes_conclusion ::: (presupposes that the ozone layer should not be protected and then argues to that claim as a conclusion\nflawed_reasoning(economist) == does_not_address_argument ::: (does not directly address the argument of the environmentalists"
    ]
  },
  {
    "id": "test_910",
    "context": "So-called \"engineered foods, \" usually in powder or liquid form, consist of protein that is distilled from natural sources and supplemented with vitamins and minerals. Although the amino acids contained in such products stimulate the production of growth hormones, these hormones produce growth in connective tissue rather than in muscle mass; this does not improve muscle strength. Hence, athletes, who need to improve their muscular strength, should not consume engineered foods.",
    "question": "The argument depends on assuming which one of the following?",
    "options": [
      "Growth of muscle mass enhances muscle strength only when accompanied by growth of connective tissue.",
      "If an engineered food does not improve muscle strength, there is no other substantial advantage to athletes from consuming it.",
      "An increase in muscle mass produces an increase in strength.",
      "People who are not athletes require neither stronger connective tissue nor muscle strength."
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([athlete])\nfoods = EnumSort([engineered_food])\nbenefits = EnumSort([muscle_strength, other_advantage])\nconsumes = Function([athletes, foods] -> [bool])\nimproves = Function([foods, benefits] -> [bool])\n\n# Constraints\nimproves(engineered_food, muscle_strength) == False ::: Engineered foods do not improve muscle strength\nForAll([a:athletes], Not(consumes(a, engineered_food))) ::: Athletes should not consume engineered foods\n\n# Options\nQuestion ::: The argument depends on assuming which one of the following?\nis_assumption(ForAll([a:athletes], Not(improves(engineered_food, other_advantage)))) ::: (If an engineered food does not improve muscle strength, there is no other substantial advantage to athletes from consuming it.)"
    ]
  },
  {
    "id": "test_911",
    "context": "Domestication of animals is a cooperative activity, and cooperative activities require a sophisticated means of communication. Language provides just such a means. It is likely, ttherefore, that language developed primarily to facilitate animal domestication.",
    "question": "A flaw in the argument is that the argument",
    "options": [
      "draws a conclusion that merely restates a claim presented in support of that conclusion",
      "conflates being necessary for the development of a phenomenon with guaranteeing the development of that phenomenon",
      "assumes that if something serves a purpose it must have developed in order to serve that purpose",
      "takes for granted that every phenomenon has a unique cause"
    ],
    "raw_logic_programs": [
      "# Declarations\nphenomena = EnumSort([domestication, communication, language])\nactivities = EnumSort([cooperative_activity])\nmeans = EnumSort([sophisticated_means])\npurposes = EnumSort([facilitate_domestication])\ncauses = EnumSort([unique_cause])\ndevelops = Function([phenomena, activities, means, purposes, causes] -> [bool])\n\n# Constraints\ndevelops(domestication, cooperative_activity, sophisticated_means, facilitate_domestication, unique_cause) ::: Domestication of animals is a cooperative activity, and cooperative activities require a sophisticated means of communication. Language provides just such a means. It is likely, therefore, that language developed primarily to facilitate animal domestication.\n\n# Options\nQuestion ::: A flaw in the argument is that the argument\nis_flawed(draws_conclusion_restates_claim) ::: (draws a conclusion that merely restates a claim presented in support of that conclusion)\nis_flawed(conflates_necessary_with_guaranteeing) ::: (conflates being necessary for the development of a phenomenon with guaranteeing the development of that phenomenon)\nis_flawed(assumes_purpose_development) ::: (assumes that if something serves a purpose it must have developed in order to serve that purpose)\nis_flawed(takes_for_granted_unique_cause) ::: (takes for granted that every phenomenon has a unique cause)"
    ]
  },
  {
    "id": "test_912",
    "context": "Heavy tapestry fabrics are appropriate only for use in applications that will not need to be laundered frequently. These applications do not include any types of clothing-such as skirts or even jackets- but instead include swags and balloon valances, which are types of window treatments.",
    "question": "Which one of the following statements is most supported by the information above?",
    "options": [
      "Heavy tapestry fabrics are sometimes appropriate for use in types of clothing other than skirts and jackets.",
      "If a fabric is not a heavy tapestry fabric, then it is not appropriate for use in swags.",
      "If heavy tapestry fabrics are appropriate for a particular application, then that application must be a window treatment.",
      "If a fabric is appropriate for use in a skirt or jacket, then that fabric is not a heavy tapestry fabric."
    ],
    "raw_logic_programs": [
      "# Declarations\nfabrics = EnumSort([heavy_tapestry, other])\napplications = EnumSort([clothing, window_treatment, other_application])\nappropriate = Function([fabrics, applications] -> [bool])\n\n# Constraints\nForAll([f:fabrics], Not(appropriate(f, clothing))) ::: Heavy tapestry fabrics are not appropriate for clothing\nappropriate(heavy_tapestry, window_treatment) ::: Heavy tapestry fabrics are appropriate for window treatments\nForAll([a:applications], Implies(appropriate(heavy_tapestry, a), a == window_treatment)) ::: Heavy tapestry fabrics are appropriate only for window treatments\n\n# Options\nQuestion ::: Which one of the following statements is most supported by the information above?\nis_supported(Not(appropriate(heavy_tapestry, clothing))) ::: (Heavy tapestry fabrics are sometimes appropriate for use in types of clothing other than skirts and jackets.\nis_supported(Implies(Not(appropriate(heavy_tapestry, window_treatment)), Not(appropriate(heavy_tapestry, other_application)))) ::: (If a fabric is not a heavy tapestry fabric, then it is not appropriate for use in swags.\nis_supported(Implies(appropriate(heavy_tapestry, window_treatment), window_treatment)) ::: (If heavy tapestry fabrics are appropriate for a particular application, then that application must be a window treatment.\nis_supported(Implies(appropriate(other, clothing), Not(appropriate(heavy_tapestry, clothing)))) ::: (If a fabric is appropriate for use in a skirt or jacket, then that fabric is not a heavy tapestry fabric."
    ]
  },
  {
    "id": "test_913",
    "context": "Consultant: Children taught using innovative new educational methods learn to think more creatively than children taught using rote methods such as drills, but they are less adept at memorizing large amounts of information. Most jobs at Grodex Corporation require the ability to think creatively but do not require a strong ability to memorize. So Grodex should probably conduct its employee-training seminars using the innovative methods, because__.",
    "question": "Which one of the following most logically completes the consultant's argument?",
    "options": [
      "most of the employees at Grodex began in high school to learn the creative thinking skills that they later used on the job",
      "corporations that conduct training seminars for employees using innovative educational methods are generally more successful than are corporations that do not conduct training seminars",
      "the effects of teaching methods in the education of adults are generally very similar to the effects of those methods in the education of children",
      "less than half of the employees at Grodex regularly attend the company's training seminars"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([Grodex])\nskills = EnumSort([creative_thinking, memorization])\nmethods = EnumSort([innovative, rote])\ntraining = Function([employees] -> [methods])\njob_requirements = Function([employees] -> [skills])\n\n# Constraints\nForAll([e:employees], job_requirements(e) == creative_thinking) ::: Most jobs at Grodex Corporation require the ability to think creatively\nForAll([e:employees], Not(job_requirements(e) == memorization)) ::: but do not require a strong ability to memorize\n\n# Options\nQuestion ::: Which one of the following most logically completes the consultant's argument?\nis_logical(ForAll([e:employees], training(e) == innovative)) ::: (A) most of the employees at Grodex began in high school to learn the creative thinking skills that they later used on the job\nis_logical(ForAll([e:employees], training(e) == innovative)) ::: (B) corporations that conduct training seminars for employees using innovative educational methods are generally more successful than are corporations that do not conduct training seminars\nis_logical(ForAll([e:employees], training(e) == innovative)) ::: (C) the effects of teaching methods in the education of adults are generally very similar to the effects of those methods in the education of children\nis_logical(ForAll([e:employees], training(e) == innovative)) ::: (D) less than half of the employees at Grodex regularly attend the company's training seminars"
    ]
  },
  {
    "id": "test_914",
    "context": "Columnist: Neuroscientists have found that states of profound creativity are accompanied by an increase of theta brain waves, which occur in many regions of the brain, including the hippocampus. They also found that listening to music increases theta waves dramatically. Thus, one can attain a state of profound creativity merely by listening to a tape of recorded music.",
    "question": "The columnist's reasoning is most vulnerable to criticism on the grounds that it",
    "options": [
      "ignores the possibility that an increase in theta waves may not always be accompanied by a state of profound creativity",
      "provides insufficient reasons to believe that people who are not in states of profound creativity have low levels of theta brain waves",
      "does not rule out the possibility that listening to music by means other than a tape recording also increases theta waves",
      "takes for granted that there is a causal connection between the hippocampus and being in a state of profound creativity"
    ],
    "raw_logic_programs": [
      "# Declarations\n- theta_increase: Function([activity] -> [bool])\n- profound_creativity: Function([activity] -> [bool])\n- activities = EnumSort([listening_to_music, other_activities])\n\n# Constraints\n- theta_increase(listening_to_music) ::: listening to music increases theta waves\n- ForAll([a:activities], Implies(profound_creativity(a), theta_increase(a))) ::: states of profound creativity are accompanied by an increase of theta brain waves\n\n# Options\n- Question ::: The columnist's reasoning is most vulnerable to criticism on the grounds that it\n- is_vulnerable(Exists([a:activities], And(theta_increase(a), Not(profound_creativity(a))))) ::: (ignores the possibility that an increase in theta waves may not always be accompanied by a state of profound creativity)\n- is_vulnerable(ForAll([a:activities], Implies(Not(profound_creativity(a)), Not(theta_increase(a))))) ::: (provides insufficient reasons to believe that people who are not in states of profound creativity have low levels of theta brain waves)\n- is_vulnerable(Exists([a:activities], And(a != listening_to_music, theta_increase(a)))) ::: (does not rule out the possibility that listening to music by means other than a tape recording also increases theta waves)\n- is_vulnerable(Exists([a:activities], And(profound_creativity(a), Not(theta_increase(a))))) ::: (takes for granted that there is a causal connection between the hippocampus and being in a state of profound creativity)"
    ]
  },
  {
    "id": "test_915",
    "context": "Nitrogen dioxide is a pollutant emitted by automobiles. Catalytic converters, devices designed to reduce nitrogen dioxide emissions, have been required in all new cars in Donia since 1993, and as a result, nitrogen dioxide emissions have been significantly reduced throughout most of the country. Yet although the proportion of new cars in Donia' s capital city has always been comparatively high, nitrogen dioxide emissions there have showed only an insignificant decline since 1993.",
    "question": "Which of the following, if true, most helps to explain the insignificant decline in nitrogen dioxide emissions in Donia's capital city?",
    "options": [
      "The number of new cars sold per year in Donia has declined slightly since 1993.",
      "Pollutants other than nitrogen dioxide that are emitted by automobiles have also been significantly reduced in Donia since 1993.",
      "Most car trips in Donia's capital city are too short for the catalytic converter to reach its effective working temperature.",
      "More of the cars in Donia's capital city were made before 1993 than after 1993."
    ],
    "raw_logic_programs": [
      "# Declarations\ncities = EnumSort([Donia, Capital])\nyears = EnumSort([before_1993, after_1993])\ncars = EnumSort([new, old])\nemissions = Function([cities, years] -> [int])\ntrips = Function([cities] -> [int])\ntemperature_effective = Function([cities] -> [bool])\n\n# Constraints\nemissions(Donia, after_1993) < emissions(Donia, before_1993) ::: Nitrogen dioxide emissions have been significantly reduced throughout most of the country since 1993\nemissions(Capital, after_1993) >= emissions(Capital, before_1993) ::: Nitrogen dioxide emissions in the capital city have showed only an insignificant decline since 1993\nCount([c:cars], c == new) > Count([c:cars], c == old) ::: The proportion of new cars in Donia's capital city has always been comparatively high\n\n# Options\nQuestion ::: Which of the following, if true, most helps to explain the insignificant decline in nitrogen dioxide emissions in Donia's capital city?\nis_explanation(trips(Capital) < temperature_effective(Capital)) ::: (Most car trips in Donia's capital city are too short for the catalytic converter to reach its effective working temperature.)\nis_explanation(Count([c:cars], c == old) > Count([c:cars], c == new)) ::: (More of the cars in Donia's capital city were made before 1993 than after 1993.)"
    ]
  },
  {
    "id": "test_916",
    "context": "Education critics' contention that the use of calculators in mathematics classes will undermine students' knowledge of the rationale underlying calculational procedures is clearly false. Every new information handling technology has produced virtually the same accusation. Some Greek philosophers, for example, believed that the advent of written language would erode people' s capacity to remember information and speak extemporaneously.",
    "question": "The reasoning in the argument above is most vulnerable to criticism on the grounds that the argument",
    "options": [
      "takes for granted that the advantages offered by new information-handling technologies always outweigh the disadvantages",
      "takes a condition that suffices to prove its conclusion to be a condition necessary for the truth of that conclusion",
      "concludes that a hypothesis is false simply because it contradicts other beliefs held by the advocates of that hypothesis",
      "presents only evidence whose relevancy to the issue raised by the opponents has not been established"
    ],
    "raw_logic_programs": [
      "# Declarations\nargument = EnumSort([use_of_calculators, new_technologies, Greek_philosophers])\nclaims = EnumSort([undermine_knowledge, erode_memory, false_accusation])\nevidence = Function([argument] -> [claims])\n\n# Constraints\nevidence(use_of_calculators) == undermine_knowledge ::: Critics claim that the use of calculators will undermine students' knowledge\nevidence(new_technologies) == false_accusation ::: Every new information handling technology has produced virtually the same accusation\nevidence(Greek_philosophers) == erode_memory ::: Some Greek philosophers believed that written language would erode memory\n\n# Options\nQuestion ::: The reasoning in the argument above is most vulnerable to criticism on the grounds that the argument\nis_vulnerable(takes_for_granted(new_technologies, outweigh_disadvantages)) ::: (takes for granted that the advantages offered by new information-handling technologies always outweigh the disadvantages)\nis_vulnerable(takes_condition_sufficient_as_necessary(use_of_calculators, false_accusation)) ::: (takes a condition that suffices to prove its conclusion to be a condition necessary for the truth of that conclusion)\nis_vulnerable(concludes_false_due_to_contradiction(use_of_calculators, other_beliefs)) ::: (concludes that a hypothesis is false simply because it contradicts other beliefs held by the advocates of that hypothesis)\nis_vulnerable(presents_irrelevant_evidence(new_technologies, issue_raised)) ::: (presents only evidence whose relevancy to the issue raised by the opponents has not been established)"
    ]
  },
  {
    "id": "test_917",
    "context": "Copernicus' s astronomical system is superior to Ptolemy' s and was so at the time it was proposed, even though at that time all observational evidence was equally consistent with both theories. Ptolemy believed that the stars revolved around the earth at great speeds. This struck Copernicus as unlikely; he correctly thought that a simpler theory is that the earth rotates on its axis.",
    "question": "This argument most closely conforms to which one of the following principles?",
    "options": [
      "Other things being equal, the more complex of two competing theories is the inferior theory.",
      "If one theory is likely to be true, and another competing theory is likely to be false, then the one likely to be true is the superior of the two.",
      "If all observational evidence is consistent with two competing theories, the one that is more intuitively true is the more practical theory to adopt.",
      "Other things being equal, the simpler of two competing theories is the more scientifically important theory."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([Copernicus, Ptolemy])\nattributes = EnumSort([complexity, likelihood, observational_consistency, intuitive_truth, scientific_importance])\ncomparison = Function([theories, attributes] -> [bool])\n\n# Constraints\ncomparison(Copernicus, observational_consistency) == comparison(Ptolemy, observational_consistency) ::: all observational evidence was equally consistent with both theories\ncomparison(Copernicus, complexity) == False ::: Copernicus' theory is simpler\ncomparison(Ptolemy, complexity) == True ::: Ptolemy's theory is more complex\ncomparison(Copernicus, scientific_importance) == True ::: Copernicus' theory is superior\n\n# Options\nQuestion ::: This argument most closely conforms to which one of the following principles?\nis_conformant(And(comparison(Copernicus, complexity) == False, comparison(Ptolemy, complexity) == True)) ::: (A) Other things being equal, the more complex of two competing theories is the inferior theory.\nis_conformant(And(comparison(Copernicus, likelihood) == True, comparison(Ptolemy, likelihood) == False)) ::: (B) If one theory is likely to be true, and another competing theory is likely to be false, then the one likely to be true is the superior of the two.\nis_conformant(And(comparison(Copernicus, intuitive_truth) == True, comparison(Ptolemy, intuitive_truth) == False)) ::: (C) If all observational evidence is consistent with two competing theories, the one that is more intuitively true is the more practical theory to adopt.\nis_conformant(And(comparison(Copernicus, complexity) == False, comparison(Ptolemy, complexity) == True, comparison(Copernicus, scientific_importance) == True)) ::: (D) Other things being equal, the simpler of two competing theories is the more scientifically important theory."
    ]
  },
  {
    "id": "test_918",
    "context": "Naturalist: A species can survive a change in environment, as long as the change is not too rapid. Ttherefore, the threats we are creating to woodland species arise not from the fact that we are cutting down trees, but rather from the rate at which we are doing so.",
    "question": "The reasoning in which one of the following is most similar to that in the naturalist's argument?",
    "options": [
      "The problem with burning fossil fuels is that the supply is limited; so, the faster we expend these resources, the sooner we will be left without an energy source.",
      "People do not fear change if they know what the change will bring; so, our employees' fear stems not from our company's undergoing change, but from our failing to inform them of what the changes entail.",
      "Until ten years ago, we had good soil and our agriculture flourished. Ttherefore, the recent decline of our agriculture is a result of our soil rapidly eroding and there being nothing that can replace the good soil we lost.",
      "Some students who study thoroughly do well in school. Thus, what is most important for success in school is not how much time a student puts into studying, but rather how thoroughly the student studies."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([naturalist, fossil_fuels, fear_of_change, agriculture, student_success])\nreasoning = Function([arguments] -> [str])\n\n# Constraints\nreasoning(naturalist) == \"A species can survive a change in environment, as long as the change is not too rapid. Therefore, the threats we are creating to woodland species arise not from the fact that we are cutting down trees, but rather from the rate at which we are doing so.\"\n\nreasoning(fossil_fuels) == \"The problem with burning fossil fuels is that the supply is limited; so, the faster we expend these resources, the sooner we will be left without an energy source.\"\n\nreasoning(fear_of_change) == \"People do not fear change if they know what the change will bring; so, our employees' fear stems not from our company's undergoing change, but from our failing to inform them of what the changes entail.\"\n\nreasoning(agriculture) == \"Until ten years ago, we had good soil and our agriculture flourished. Therefore, the recent decline of our agriculture is a result of our soil rapidly eroding and there being nothing that can replace the good soil we lost.\"\n\nreasoning(student_success) == \"Some students who study thoroughly do well in school. Thus, what is most important for success in school is not how much time a student puts into studying, but rather how thoroughly the student studies.\"\n\n# Options\nQuestion ::: The reasoning in which one of the following is most similar to that in the naturalist's argument?\nis_similar(reasoning(naturalist), reasoning(fossil_fuels)) ::: (A)\nis_similar(reasoning(naturalist), reasoning(fear_of_change)) ::: (B)\nis_similar(reasoning(naturalist), reasoning(agriculture)) ::: (C)\nis_similar(reasoning(naturalist), reasoning(student_success)) ::: (D)"
    ]
  },
  {
    "id": "test_919",
    "context": "Newspaper article: People who take vitamin C supplements tend to be healthier than average. This was shown by a study investigating the relationship between high doses of vitamin C and heart disease, which showed that people who regularly consume high doses of vitamin C supplements have a significantly lower than average risk of heart disease.",
    "question": "Which one of the following, if true, would most weaken the argument in the newspaper article?",
    "options": [
      "Taking vitamin C supplements has been found to lower one's risk of developing cancer.",
      "High doses of vitamin C supplements tend to reduce slightly one's resistance to certain common infectious diseases.",
      "Taking both vitamin C supplements and vitamin E supplements lowers one's risk of heart disease far more than does taking either one alone.",
      "Vitamin C taken in the form of supplements has a different effect on the body than does vitamin C taken in food."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([vitamin_c_supplements, health_status, heart_disease_risk])\neffects = Function([arguments] -> [bool])\n\n# Constraints\neffects(vitamin_c_supplements) == True ::: People who take vitamin C supplements tend to be healthier than average\neffects(heart_disease_risk) == True ::: People who regularly consume high doses of vitamin C supplements have a significantly lower than average risk of heart disease\n\n# Options\nQuestion ::: Which one of the following, if true, would most weaken the argument in the newspaper article?\nis_weakened(effects(vitamin_c_supplements) == False) ::: (A) Taking vitamin C supplements has been found to lower one's risk of developing cancer\nis_weakened(effects(heart_disease_risk) == False) ::: (B) High doses of vitamin C supplements tend to reduce slightly one's resistance to certain common infectious diseases\nis_weakened(effects(heart_disease_risk) == False) ::: (C) Taking both vitamin C supplements and vitamin E supplements lowers one's risk of heart disease far more than does taking either one alone\nis_weakened(effects(vitamin_c_supplements) == False) ::: (D) Vitamin C taken in the form of supplements has a different effect on the body than does vitamin C taken in food"
    ]
  },
  {
    "id": "test_920",
    "context": "Some types of organisms originated through endosymbiosis, the engulfing of one organism by another so that a part of the former becomes a functioning part of the latter. An unusual nucleomorph, a structure that contains DNA and resembles a cell nucleus, has been discovered within a plant known as a chlorarachniophyte. Two versions of a particular gene have been found in the DNA of this nucleomorph, and one would expect to find only a single version of this gene if the nucleomorph were not the remains of an engulfed organism' s nucleus.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "Nucleomorphs originated when an organism endosymbiotically engulfed a chlorarachniophyte.",
      "Chlorarachniophytes emerged as the result of two organisms having undergone endosymbiosis.",
      "Only organisms of types that originated through endosymbiosis contain nucleomorphs.",
      "A nucleomorph within the chlorarachniophyte holds all of the genetic material of some other organism."
    ],
    "raw_logic_programs": [
      "# Declarations\norganisms = EnumSort([chlorarachniophyte, engulfed_organism])\nstructures = EnumSort([nucleomorph])\ngenes = EnumSort([gene_version_1, gene_version_2])\ncontains = Function([structures, genes] -> [bool])\noriginated_through_endosymbiosis = Function([organisms] -> [bool])\n\n# Constraints\nAnd(contains(nucleomorph, gene_version_1), contains(nucleomorph, gene_version_2)) ::: Two versions of a particular gene have been found in the DNA of this nucleomorph\nImplies(Not(originated_through_endosymbiosis(engulfed_organism)), Not(contains(nucleomorph, gene_version_2))) ::: One would expect to find only a single version of this gene if the nucleomorph were not the remains of an engulfed organism's nucleus\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(originated_through_endosymbiosis(chlorarachniophyte)) ::: (A) Nucleomorphs originated when an organism endosymbiotically engulfed a chlorarachniophyte.\nis_supported(originated_through_endosymbiosis(engulfed_organism)) ::: (B) Chlorarachniophytes emerged as the result of two organisms having undergone endosymbiosis.\nis_supported(ForAll([o:organisms], Implies(originated_through_endosymbiosis(o), contains(nucleomorph, gene_version_2)))) ::: (C) Only organisms of types that originated through endosymbiosis contain nucleomorphs.\nis_supported(ForAll([g:genes], contains(nucleomorph, g))) ::: (D) A nucleomorph within the chlorarachniophyte holds all of the genetic material of some other organism."
    ]
  },
  {
    "id": "test_921",
    "context": "Nutritionist: Most fad diets prescribe a single narrow range of nutrients for everyone. But because different foods contain nutrients that are helpful for treating or preventing different health problems, dietary needs vary widely from person to person. However, everyone should eat plenty of fruits and vegetables, which protect against a wide range of health problems.",
    "question": "Which one of the following is most strongly supported by the nutritionist's statements?",
    "options": [
      "Fruits and vegetables are the only foods that contain enough different nutrients to protect against a wide range of health problems.",
      "Most fad diets fail to satisfy the dietary needs of some people.",
      "There are very few if any nutrients that are contained in every food other than fruits and vegetables.",
      "Most fad diets require that everyone following them eat plenty of fruits and vegetables."
    ],
    "raw_logic_programs": [
      "# Declarations\ndiets = EnumSort([fad_diet, balanced_diet])\nfoods = EnumSort([fruits_vegetables, other_foods])\nnutrients = Function([foods] -> [bool])\nsatisfies_needs = Function([diets] -> [bool])\n\n# Constraints\nForAll([f:foods], nutrients(f) == (f == fruits_vegetables)) ::: everyone should eat plenty of fruits and vegetables, which protect against a wide range of health problems\nForAll([d:diets], satisfies_needs(d) == (d == balanced_diet)) ::: dietary needs vary widely from person to person\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the nutritionist's statements?\nis_supported(satisfies_needs(fad_diet) == False) ::: (Most fad diets fail to satisfy the dietary needs of some people.)\nis_supported(ForAll([f:foods], Implies(f != fruits_vegetables, Not(nutrients(f))))) ::: (Fruits and vegetables are the only foods that contain enough different nutrients to protect against a wide range of health problems.)\nis_supported(Exists([f:foods], nutrients(f) == True)) ::: (There are very few if any nutrients that are contained in every food other than fruits and vegetables.)\nis_supported(ForAll([d:diets], Implies(d == fad_diet, nutrients(fruits_vegetables) == True))) ::: (Most fad diets require that everyone following them eat plenty of fruits and vegetables.)"
    ]
  },
  {
    "id": "test_922",
    "context": "My father likes turnips, but not potatoes, which he says are tasteless. So it is not true that whoever likes potatoes likes turnips.",
    "question": "The flawed reasoning in the argument above most closely resembles that in which one of the following?",
    "options": [
      "Erica enjoys studying physics, but not pure mathematics, which she says is boring. So it is not true that whoever enjoys studying physics enjoys studying pure mathematics.",
      "Although this recently published work of fiction has more than 75 pages, it is not a novel. Thus, it is not the case that all novels have more than 75 pages.",
      "People who do their own oil changes are car fanatics. My next-door neighbors are car fanatics, so it follows that they do their own oil changes.",
      "This book is not a paperback, but it is expensive. So it is not true that some paperbacks are expensive."
    ],
    "raw_logic_programs": [
      "# Declarations\nlikes = Function([str] -> [bool])\n\n# Constraints\nlikes(\"turnips\") == True ::: My father likes turnips\nlikes(\"potatoes\") == False ::: My father does not like potatoes\n\n# Options\nQuestion ::: The flawed reasoning in the argument above most closely resembles that in which one of the following?\nis_similar(And(likes(\"physics\") == True, likes(\"pure mathematics\") == False)) ::: (A) Erica enjoys studying physics, but not pure mathematics, which she says is boring. So it is not true that whoever enjoys studying physics enjoys studying pure mathematics.\nis_similar(And(likes(\"novel\") == False, likes(\"more than 75 pages\") == True)) ::: (B) Although this recently published work of fiction has more than 75 pages, it is not a novel. Thus, it is not the case that all novels have more than 75 pages.\nis_similar(And(likes(\"car fanatics\") == True, likes(\"do their own oil changes\") == False)) ::: (C) People who do their own oil changes are car fanatics. My next-door neighbors are car fanatics, so it follows that they do their own oil changes.\nis_similar(And(likes(\"paperback\") == False, likes(\"expensive\") == True)) ::: (D) This book is not a paperback, but it is expensive. So it is not true that some paperbacks are expensive."
    ]
  },
  {
    "id": "test_923",
    "context": "After a judge has made the first ruling on a particular point of law, judges must follow that precedent if the original ruling is not contrary to the basic moral values of society. In the absence of precedent, when judges' own legal views do not contradict any widespread public opinion -- and only then -- they may abide by their own legal views in deciding a case.",
    "question": "Of the rulings described below, which one conforms most closely to the principles stated above?",
    "options": [
      "Judge Watanabe must decide a case that depends on an issue for which no legal precedent exists. There is no widespread public opinion on the issue, so Judge Watanabe rules against the defendant because that conforms to her own legal view about the issue.",
      "Judge Levinsky sets a legal precedent when she rules that the \"starfish exception\" applies to children. In deciding a later case concerning the starfish exception, Judge Wilson adheres to his own legal views rather than Judge Levinsky's ruling, even though he does not believe that Judge Levinsky's ruling opposes the basic moral values of society.",
      "Judge Valenzuela decides, in the absence of any precedent, whether children as young as twelve can be legally tried as adults. There is overwhelming public support for trying children twelve and older as adults, a practice that violates Judge Valenzuela's personal moral views. So Judge Valenzuela rules, in keeping with his own legal beliefs, against trying twelveyear-olds as adults.",
      "Judge Swoboda is confronted with a legal issue never before decided. Realizing that his own view on the issue contradicts what most people believe, he nonetheless issues a ruling that accords with his own legal views."
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([Watanabe, Levinsky, Wilson, Valenzuela, Swoboda])\nrulings = EnumSort([precedent, no_precedent])\npublic_opinion = EnumSort([widespread, not_widespread])\nmoral_values = EnumSort([contrary, not_contrary])\ndecisions = Function([judges] -> [bool])\n\n# Constraints\nForAll([j:judges], Implies(rulings(j) == precedent, moral_values(j) == not_contrary)) ::: Judges must follow precedent if the original ruling is not contrary to basic moral values\nForAll([j:judges], Implies(And(rulings(j) == no_precedent, public_opinion(j) == not_widespread), decisions(j) == True)) ::: In the absence of precedent and no widespread public opinion, judges may abide by their own legal views\n\n# Options\nQuestion ::: Of the rulings described below, which one conforms most closely to the principles stated above?\nis_conformant(And(rulings(Watanabe) == no_precedent, public_opinion(Watanabe) == not_widespread, decisions(Watanabe) == True)) ::: (A)\nis_conformant(And(rulings(Wilson) == precedent, moral_values(Wilson) == not_contrary, decisions(Wilson) == False)) ::: (B)\nis_conformant(And(rulings(Valenzuela) == no_precedent, public_opinion(Valenzuela) == widespread, decisions(Valenzuela) == False)) ::: (C)\nis_conformant(And(rulings(Swoboda) == no_precedent, public_opinion(Swoboda) == widespread, decisions(Swoboda) == True)) ::: (D)"
    ]
  },
  {
    "id": "test_924",
    "context": "David Foster Wallace' s Infinite Jest is the holy grail of modern literature. It will stand the test of time in its relevance. Every single person who starts reading Infinite Jest cannot physically put down the book until completing it.",
    "question": "Which of the following is the main point of the passage?",
    "options": [
      "David Foster Wallace's Infinite Jest is the holy grail of modern literature.",
      "Infinite Jest will stand the test of time.",
      "Infinite Jest is a modern classic for good reason and everybody should read it.",
      "David Foster Wallace wrote Infinite Jest."
    ],
    "raw_logic_programs": [
      "# Declarations\nbooks = EnumSort([Infinite_Jest])\nactions = EnumSort([start_reading, complete_reading])\npeople = EnumSort([person])\nreads = Function([people, books, actions] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(reads(p, Infinite_Jest, start_reading), reads(p, Infinite_Jest, complete_reading))) ::: Every single person who starts reading Infinite Jest cannot physically put down the book until completing it\n\n# Options\nQuestion ::: Which of the following is the main point of the passage?\nis_main_point(\"David Foster Wallace's Infinite Jest is the holy grail of modern literature.\") ::: (A)\nis_main_point(\"Infinite Jest will stand the test of time.\") ::: (B)\nis_main_point(\"Infinite Jest is a modern classic for good reason and everybody should read it.\") ::: (C)\nis_main_point(\"David Foster Wallace wrote Infinite Jest.\") ::: (D)"
    ]
  },
  {
    "id": "test_925",
    "context": "A clear advantage of digital technology over traditional printing is that digital documents, being patterns of electronic signals rather than patterns of ink on paper, do not generate waste in the course of their production and use. However, because patterns of electronic signals are necessarily ephemeral, a digital document can easily be destroyed and lost forever.",
    "question": "The statements above best illustrate which one of the following generalizations?",
    "options": [
      "It is more important to be able to preserve information than it is for information to be easily accessible.",
      "A property of a technology may constitute an advantage in one set of circumstances and a disadvantage in others.",
      "Innovations in document storage technologies sometimes decrease, but never eliminate, the risk of destroying documents.",
      "Advances in technology can lead to increases in both convenience and environmental soundness."
    ],
    "raw_logic_programs": [
      "# Declarations\nadvantages = EnumSort([digital_technology, traditional_printing])\nproperties = EnumSort([waste_generation, ephemerality])\ncircumstances = EnumSort([production, preservation])\nillustrates = Function([advantages, properties, circumstances] -> [bool])\n\n# Constraints\nillustrates(digital_technology, waste_generation, production) ::: Digital documents do not generate waste in the course of their production and use\nillustrates(digital_technology, ephemerality, preservation) ::: Digital documents can easily be destroyed and lost forever\n\n# Options\nQuestion ::: The statements above best illustrate which one of the following generalizations?\nis_illustrated(illustrates(digital_technology, ephemerality, preservation) & illustrates(digital_technology, waste_generation, production)) ::: (A property of a technology may constitute an advantage in one set of circumstances and a disadvantage in others.)"
    ]
  },
  {
    "id": "test_926",
    "context": "Lambert: The proposal to raise gasoline taxes to support mass transit networks is unfair. Why should drivers who will never use train or bus lines be forced to pay for them? Keziah: You have misunderstood. The government has always spent far more, per user, from general revenue sources to fund highways than to fund mass transit. The additional revenue from the gasoline tax will simply allow the government to make its distribution of transportation funds more equitable.",
    "question": "Keziah uses which one of the following argumentative strategies in replying to Lambert?",
    "options": [
      "elaborating the context of the issue in order to place the proposal in a more favorable light",
      "appealing to the principle that what benefits society as a whole benefits all individuals within that society",
      "challenging the presupposition that fairness is an appropriate criterion on which to judge the matter",
      "demonstrating that the proposed tax increase will not result in increased expenses for drivers"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Lambert, Keziah])\nstrategies = EnumSort([elaborating_context, appealing_to_principle, challenging_presupposition, demonstrating_no_increase])\n\n# Constraints\nuses_strategy(Keziah, elaborating_context) ::: Keziah elaborates the context of the issue by comparing government spending on highways and mass transit to place the proposal in a more favorable light\nNot(uses_strategy(Keziah, appealing_to_principle)) ::: Keziah does not appeal to the principle that what benefits society as a whole benefits all individuals\nNot(uses_strategy(Keziah, challenging_presupposition)) ::: Keziah does not challenge the presupposition that fairness is an appropriate criterion\nNot(uses_strategy(Keziah, demonstrating_no_increase)) ::: Keziah does not demonstrate that the proposed tax increase will not result in increased expenses for drivers\n\n# Options\nQuestion ::: Keziah uses which one of the following argumentative strategies in replying to Lambert?\nis_valid(uses_strategy(Keziah, elaborating_context)) ::: (A) elaborating the context of the issue in order to place the proposal in a more favorable light\nis_valid(uses_strategy(Keziah, appealing_to_principle)) ::: (B) appealing to the principle that what benefits society as a whole benefits all individuals within that society\nis_valid(uses_strategy(Keziah, challenging_presupposition)) ::: (C) challenging the presupposition that fairness is an appropriate criterion on which to judge the matter\nis_valid(uses_strategy(Keziah, demonstrating_no_increase)) ::: (D) demonstrating that the proposed tax increase will not result in increased expenses for drivers"
    ]
  },
  {
    "id": "test_927",
    "context": "Consumer advocate: it is generally true, at least in this state, that lawyers who advertise a specific service charge less for that service than lawyers who do not advertise. It is also true that <b> each time restrictions on the advertising of legal services have been eliminated, the number of lawyers advertising their services has increased and legal costs to consumers have declined in consequence </b>. However, eliminating the state requirement that legal advertisements must specify fees for specific services would almost certainly increase rather than further reduce consumer' s legal costs. Lawyers would no longer have an incentive to lower their fees when they begin advertising and <b> if no longer required to specify fee arrangements, many lawyers who now advertise would increase their fees </b>.",
    "question": "In the consumer advocate's argument, the two portions in boldface play which of the following roles?",
    "options": [
      "The first acknowledges a consideration that weighs against the main position that the consumer advocate defends; the second is that position.",
      "The first is pattern of cause and effect that the consumer advocate predicts will not hold in the case at issue; the second offers a consideration in support of that prediction.",
      "The first is a generalization that the consumer advocate accepts as true; the second is presented as a consequence that follows from the truth of that generalization.",
      "The first is a pattern of cause and effect that the consumer advocate argues will be repeated in the case at issue; the second acknowledges a circumstance in which that pattern would not hold."
    ],
    "raw_logic_programs": [
      "# Declarations\nportions = EnumSort([first, second])\nroles = EnumSort([acknowledges_against, main_position, pattern_predicted_not_hold, support_prediction, generalization_accepted, consequence_follows, pattern_repeated, circumstance_not_hold])\nplays_role = Function([portions] -> [roles])\n\n# Constraints\nplays_role(first) == pattern_predicted_not_hold ::: The first is a pattern of cause and effect that the consumer advocate predicts will not hold in the case at issue\nplays_role(second) == support_prediction ::: The second offers a consideration in support of that prediction\n\n# Options\nQuestion ::: In the consumer advocate's argument, the two portions in boldface play which of the following roles?\nis_correct(plays_role(first) == acknowledges_against, plays_role(second) == main_position) ::: (A)\nis_correct(plays_role(first) == pattern_predicted_not_hold, plays_role(second) == support_prediction) ::: (B)\nis_correct(plays_role(first) == generalization_accepted, plays_role(second) == consequence_follows) ::: (C)\nis_correct(plays_role(first) == pattern_repeated, plays_role(second) == circumstance_not_hold) ::: (D)"
    ]
  },
  {
    "id": "test_928",
    "context": "Most regular coffee is made from arabica coffee beans because the great majority of consumers prefer its generally richer flavor to that of coffee made from robusta beans. Coffee drinkers who switch to decaffeinated coffee, however, overwhelmingly prefer coffee made from robusta beans, which are unlike arabica beans in that their flavor is not as greatly affected by decaffeination. Depending on the type of bean involved, decaffeination reduces or removes various substances, most of which are flavor-neutral but one of which contributes to the richness of the coffee' s flavor.",
    "question": "The statements above provide the most support for which one of the following conclusions?",
    "options": [
      "Decaffeination of arabica beans extracts more of the substance that enhances a coffee's flavor than does decaffeination of robusta beans.",
      "The annual world crop of arabica beans is not large enough to satisfy completely the world demand for regular coffee.",
      "There are coffee drinkers who switch from drinking regular coffee made from arabica beans to drinking decaffeinated coffee made from arabica beans because coffee made from arabica beans is less costly.",
      "Arabica beans contain more caffeine per unit of weight than do robusta beans."
    ],
    "raw_logic_programs": [
      "# Declarations\nbeans = EnumSort([arabica, robusta])\ncoffee_type = EnumSort([regular, decaffeinated])\npreferences = Function([coffee_type, beans] -> [bool])\neffects = Function([beans] -> [int])\n\n# Constraints\npreferences(regular, arabica) ::: Most regular coffee is made from arabica coffee beans because the great majority of consumers prefer its generally richer flavor\npreferences(decaffeinated, robusta) ::: Coffee drinkers who switch to decaffeinated coffee overwhelmingly prefer coffee made from robusta beans\neffects(arabica) > effects(robusta) ::: Arabica beans' flavor is more affected by decaffeination than robusta beans\n\n# Options\nQuestion ::: The statements above provide the most support for which one of the following conclusions?\nis_supported(effects(arabica) > effects(robusta)) ::: (Decaffeination of arabica beans extracts more of the substance that enhances a coffee's flavor than does decaffeination of robusta beans.\nis_supported(False) ::: (The annual world crop of arabica beans is not large enough to satisfy completely the world demand for regular coffee.\nis_supported(False) ::: (There are coffee drinkers who switch from drinking regular coffee made from arabica beans to drinking decaffeinated coffee made from arabica beans because coffee made from arabica beans is less costly.\nis_supported(False) ::: (Arabica beans contain more caffeine per unit of weight than do robusta beans."
    ]
  },
  {
    "id": "test_929",
    "context": "Even though Allison had plenty of time during the week to write her midterm paper, which is due tomorrow afternoon, she chose to procrastinate. Allison still has enough time to write the paper, but only if she manages to stay in the library all day. However, Allison' s best friend is getting married this afternoon in another city, and Allison is supposed to serve as maid of honor. Ttherefore, because of her irresponsibility in not finishing her paper sooner, Allison will have to decide whether to attend her friend' s wedding or to write her midterm paper.",
    "question": "The argument comes to its conclusion by",
    "options": [
      "arguing that both alternatives cannot be achieved due to an unlucky coincidence rather than an oversight",
      "invoking pathos in the reader to demonstrate why choosing one alternative over another is necessary",
      "showing that two events cannot both happen because a condition necessary for one of the events to occur is incompatible with making the other event occur",
      "pointing to specific evidence that shows that one particular event will occur in order to prove that an alternative event will also occur"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([write_paper, attend_wedding])\nconditions = EnumSort([stay_in_library, serve_as_maid_of_honor])\nnecessary_condition = Function([events] -> [conditions])\n\n# Constraints\nnecessary_condition(write_paper) == stay_in_library ::: Allison still has enough time to write the paper, but only if she manages to stay in the library all day\nnecessary_condition(attend_wedding) == serve_as_maid_of_honor ::: Allison is supposed to serve as maid of honor\n\n# Options\nQuestion ::: The argument comes to its conclusion by\nis_valid(And(Not(Exists([e:events], And(necessary_condition(e) == stay_in_library, necessary_condition(e) == serve_as_maid_of_honor))), Exists([e:events], necessary_condition(e) == stay_in_library), Exists([e:events], necessary_condition(e) == serve_as_maid_of_honor))) ::: (arguing that both alternatives cannot be achieved due to an unlucky coincidence rather than an oversight\nis_valid(Exists([e:events], And(necessary_condition(e) == stay_in_library, necessary_condition(e) == serve_as_maid_of_honor))) ::: (invoking pathos in the reader to demonstrate why choosing one alternative over another is necessary\nis_valid(And(Not(Exists([e:events], And(necessary_condition(e) == stay_in_library, necessary_condition(e) == serve_as_maid_of_honor))), Exists([e:events], necessary_condition(e) == stay_in_library), Exists([e:events], necessary_condition(e) == serve_as_maid_of_honor))) ::: (showing that two events cannot both happen because a condition necessary for one of the events to occur is incompatible with making the other event occur\nis_valid(Exists([e:events], And(necessary_condition(e) == stay_in_library, necessary_condition(e) == serve_as_maid_of_honor))) ::: (pointing to specific evidence that shows that one particular event will occur in order to prove that an alternative event will also occur"
    ]
  },
  {
    "id": "test_930",
    "context": "Mike: People should exercise at least 4 times a week for 30 minutes. Currently only 5 percent of the population meets this recommendation. Sara: We should not judge others on the basis of appearance. People should be comfortable with their body type and not feel continued pressure to look like the models in swimsuit advertisements. Besides, most of those pictures are airbrushed anyway. Mike: But people should be healthier.",
    "question": "Sara responds to Mike by",
    "options": [
      "offering an alternative suggestion for reaching the goal sought by Mike",
      "assuming the underlying reasons for Mike's argument were something other than as stated",
      "disputing the correctness of the facts cited by Mike and offering facts that she considers correct",
      "demonstrating that the data upon which Mike supports his argument is unreliable"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Mike, Sara])\nstatements = EnumSort([exercise_recommendation, appearance_judgment, body_comfort, model_pressure, airbrushed_pictures, health_importance])\nresponses = Function([people, statements] -> [bool])\n\n# Constraints\nresponses(Mike, exercise_recommendation) ::: Mike: People should exercise at least 4 times a week for 30 minutes.\nresponses(Mike, health_importance) ::: Mike: But people should be healthier.\nresponses(Sara, appearance_judgment) ::: Sara: We should not judge others on the basis of appearance.\nresponses(Sara, body_comfort) ::: Sara: People should be comfortable with their body type.\nresponses(Sara, model_pressure) ::: Sara: People should not feel continued pressure to look like models.\nresponses(Sara, airbrushed_pictures) ::: Sara: Most of those pictures are airbrushed anyway.\n\n# Options\nQuestion ::: Sara responds to Mike by\nis_response(assuming_other_reasons(Mike, health_importance)) ::: (assuming the underlying reasons for Mike's argument were something other than as stated)\nis_response(disputing_facts(Mike, exercise_recommendation)) ::: (disputing the correctness of the facts cited by Mike and offering facts that she considers correct)\nis_response(demonstrating_unreliable_data(Mike, exercise_recommendation)) ::: (demonstrating that the data upon which Mike supports his argument is unreliable)"
    ]
  },
  {
    "id": "test_931",
    "context": "Editorial: Many critics of consumerism insist that advertising persuades people that they need certain consumer goods when they merely desire them. However, this accusation rests on a fuzzy distinction, that between wants and needs. In life, it is often impossible to determine whether something is merely desirable or whether it is essential to one' s happiness.",
    "question": "Which one of the following most accurately expresses the conclusion drawn in the editorial's argument?",
    "options": [
      "Critics of consumerism often use fuzzy distinctions to support their claims.",
      "The claim that advertising persuades people that they need things that they merely want rests on a fuzzy distinction.",
      "Many critics of consumerism insist that advertising attempts to blur people's ability to distinguish between wants and needs.",
      "Many critics of consumerism fail to realize that certain things are essential to human happiness."
    ],
    "raw_logic_programs": [
      "# Declarations\ncritics = EnumSort([consumerism_critics])\nclaims = EnumSort([advertising_claims])\ndistinctions = EnumSort([wants_needs_fuzzy_distinction])\narguments = EnumSort([editorial_argument])\nconclusion = Function([arguments] -> [claims])\n\n# Constraints\nForAll([c:critics], Exists([d:distinctions], claims(c) == d)) ::: Many critics of consumerism insist that advertising persuades people that they need certain consumer goods when they merely desire them\nForAll([d:distinctions], Exists([a:arguments], conclusion(a) == d)) ::: The accusation rests on a fuzzy distinction, that between wants and needs\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the conclusion drawn in the editorial's argument?\nis_accurate(conclusion(editorial_argument) == \"Critics of consumerism often use fuzzy distinctions to support their claims.\") ::: (A)\nis_accurate(conclusion(editorial_argument) == \"The claim that advertising persuades people that they need things that they merely want rests on a fuzzy distinction.\") ::: (B)\nis_accurate(conclusion(editorial_argument) == \"Many critics of consumerism insist that advertising attempts to blur people's ability to distinguish between wants and needs.\") ::: (C)\nis_accurate(conclusion(editorial_argument) == \"Many critics of consumerism fail to realize that certain things are essential to human happiness.\") ::: (D)"
    ]
  },
  {
    "id": "test_932",
    "context": "The question whether intelligent life exists elsewhere in the universe is certainly imprecise, because we are not sure how different from us something might be and still count as \"intelligent life. \" Yet we cannot just decide to define \"intelligent life\" in some more precise way since it is likely that we will find and recognize intelligent life elsewhere in the universe only if we leave our definitions open to new, unimagined possibilities.",
    "question": "The argument can most reasonably be interpreted as an objection to which one of the following claims?",
    "options": [
      "Whether or not there is intelligent life elsewhere in the universe, our understanding of intelligent life is limited.",
      "The question whether there is intelligent life elsewhere in the universe is so imprecise as to be meaningless.",
      "The question whether there is intelligent life elsewhere in the universe is one we should not spend our time trying to answer.",
      "The question about the existence of intelligent life elsewhere in the universe must be made more precise if we hope to answer it correctly."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([claim1, claim2, claim3, claim4])\n\n# Constraints\nimprecise_question = True ::: The question whether intelligent life exists elsewhere in the universe is certainly imprecise\nopen_definitions = True ::: We cannot just decide to define \"intelligent life\" in some more precise way since it is likely that we will find and recognize intelligent life elsewhere in the universe only if we leave our definitions open to new, unimagined possibilities\n\n# Options\nQuestion ::: The argument can most reasonably be interpreted as an objection to which one of the following claims?\nis_objection(claim1) ::: (Whether or not there is intelligent life elsewhere in the universe, our understanding of intelligent life is limited.\nis_objection(claim2) ::: (The question whether there is intelligent life elsewhere in the universe is so imprecise as to be meaningless.\nis_objection(claim3) ::: (The question whether there is intelligent life elsewhere in the universe is one we should not spend our time trying to answer.\nis_objection(claim4) ::: (The question about the existence of intelligent life elsewhere in the universe must be made more precise if we hope to answer it correctly."
    ]
  },
  {
    "id": "test_933",
    "context": "Some gardening books published by Garden Path Press recommend tilling the soil and adding compost before starting a new garden on a site, but they do not explain the difference between hot and cold composting. Since any gardening book that recommends adding compost is flawed if it does not explain at least the basics of composting, some books published by Garden Path are flawed.",
    "question": "The argument requires the assumption that",
    "options": [
      "an explanation of the basics of composting must include an explanation of the difference between hot and cold composting",
      "some gardening books that recommend tilling the soil and adding compost before starting a new garden are not flawed",
      "no gardening book that includes an explanation of at least the basics of composting is flawed",
      "gardeners should not add compost to the soil unless they have a thorough understanding of composting"
    ],
    "raw_logic_programs": [
      "# Declarations\nbooks = EnumSort([book1, book2, book3, ...])  # Assume a finite set of books\nrecommends = Function([books] -> [bool])  # Whether a book recommends adding compost\nexplains_basics = Function([books] -> [bool])  # Whether a book explains the basics of composting\nexplains_hot_cold = Function([books] -> [bool])  # Whether a book explains the difference between hot and cold composting\nflawed = Function([books] -> [bool])  # Whether a book is flawed\n\n# Constraints\nForAll([b:books], Implies(recommends(b), Not(explains_basics(b)))) ::: Some gardening books recommend adding compost but do not explain the basics\nForAll([b:books], Implies(recommends(b), flawed(b))) ::: Any book that recommends adding compost and does not explain the basics is flawed\n\n# Options\nQuestion ::: The argument requires the assumption that\nis_required(ForAll([b:books], Implies(explains_basics(b), explains_hot_cold(b)))) ::: (an explanation of the basics of composting must include an explanation of the difference between hot and cold composting)\nis_required(Exists([b:books], And(recommends(b), Not(flawed(b))))) ::: (some gardening books that recommend tilling the soil and adding compost before starting a new garden are not flawed)\nis_required(ForAll([b:books], Implies(explains_basics(b), Not(flawed(b))))) ::: (no gardening book that includes an explanation of at least the basics of composting is flawed)\nis_required(ForAll([b:books], Implies(recommends(b), explains_basics(b)))) ::: (gardeners should not add compost to the soil unless they have a thorough understanding of composting)"
    ]
  },
  {
    "id": "test_934",
    "context": "Concetta: Franchot was a great writer because she was ahead of her time in understanding that industrialization was taking an unconscionable toll on the family structure of the working class. Alicia: Franchot was not a great writer. The mark of a great writer is the ability to move people with the power of the written word, not the ability to be among the first to grasp a social issue. Besides, the social consequences of industrialization were widely understood in Franchot' s day.",
    "question": "In her disagreement with Concetta, Alicia does which one of the followings?",
    "options": [
      "discredits Concetta's evidence and then generalizes from new evidence",
      "accepts Concetta's criterion and then adds evidence to Concetta's case",
      "rejects Concetta's criterion and then disputes a specific claim",
      "disputes Concetta's conclusion and then presents facts in support of an alternative criterion"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Concetta, Alicia])\ncriteria = EnumSort([great_writer, understanding_social_issues])\nclaims = EnumSort([Franchot_great_writer, Franchot_understood_industrialization])\nactions = Function([people, criteria, claims] -> [bool])\n\n# Constraints\nactions(Concetta, understanding_social_issues, Franchot_great_writer) ::: Concetta claims Franchot was a great writer because she understood industrialization's impact\nactions(Alicia, great_writer, Not(Franchot_great_writer)) ::: Alicia claims Franchot was not a great writer based on a different criterion\nactions(Alicia, understanding_social_issues, Not(Franchot_understood_industrialization)) ::: Alicia disputes the specific claim about Franchot's understanding\n\n# Options\nQuestion ::: In her disagreement with Concetta, Alicia does which one of the followings?\nis_valid(And(Not(actions(Alicia, understanding_social_issues, Franchot_great_writer)), actions(Alicia, great_writer, Not(Franchot_great_writer)))) ::: (discredits Concetta's evidence and then generalizes from new evidence)\nis_valid(And(actions(Alicia, understanding_social_issues, Franchot_great_writer), actions(Alicia, understanding_social_issues, Franchot_understood_industrialization))) ::: (accepts Concetta's criterion and then adds evidence to Concetta's case)\nis_valid(And(Not(actions(Alicia, understanding_social_issues, Franchot_great_writer)), Not(actions(Alicia, understanding_social_issues, Franchot_understood_industrialization)))) ::: (rejects Concetta's criterion and then disputes a specific claim)\nis_valid(And(Not(actions(Alicia, understanding_social_issues, Franchot_great_writer)), actions(Alicia, great_writer, Not(Franchot_great_writer)))) ::: (disputes Concetta's conclusion and then presents facts in support of an alternative criterion)"
    ]
  },
  {
    "id": "test_935",
    "context": "The dusky salamander lives only in slow-moving streams where organic debris settles and accumulates. In almost all places in New York State where ducky salamanders used to live, suburban development has cleared uplands and put down asphalt. As a result, rainwater now runs directly into streams, causing increased flow that slows the accumulation of organic sediments. Ttherefore, it is probably the increased flow caused by suburban development that is responsible for the dusky salamander' s virtual disappearance from New York State.",
    "question": "Which of the following, if true, most strongly supports the argument?",
    "options": [
      "The two-line salamander, a species that lives in both slow- and swift-moving waters, continues to thrive in streams in New York State from which dusky salamanders have disappeared.",
      "Much of the suburban development in New York State has been occurring in areas that never provided prime habitat for dusky salamanders.",
      "Dusky salamanders have disappeared in the past ten years from some suburban areas of New York State that were originally developed more than a century ago and that have not experienced significant development for decades.",
      "Suburban development in New York State contributes significantly to pollution of local streams with lawn fertilizers that are poisonous to most small aquatic animals."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([dusky_salamander, two_line_salamander])\nhabitats = EnumSort([slow_moving_streams, swift_moving_streams])\nconditions = EnumSort([suburban_development, increased_flow, pollution])\nexists = Function([species, habitats] -> [bool])\ncauses = Function([conditions] -> [bool])\n\n# Constraints\nexists(dusky_salamander, slow_moving_streams) ::: The dusky salamander lives only in slow-moving streams\nNot(exists(dusky_salamander, swift_moving_streams)) ::: The dusky salamander does not live in swift-moving streams\ncauses(increased_flow) ::: Increased flow slows the accumulation of organic sediments\nNot(exists(dusky_salamander, slow_moving_streams)) ::: Dusky salamanders have virtually disappeared from New York State\ncauses(suburban_development) ::: Suburban development causes increased flow\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the argument?\nis_strong_support(Not(exists(two_line_salamander, slow_moving_streams)) & exists(two_line_salamander, swift_moving_streams)) ::: (A)\nis_strong_support(Not(causes(suburban_development))) ::: (B)\nis_strong_support(Not(causes(suburban_development)) & Not(exists(dusky_salamander, slow_moving_streams))) ::: (C)\nis_strong_support(causes(pollution)) ::: (D)"
    ]
  },
  {
    "id": "test_936",
    "context": "In polluted environments, dolphins gradually accumulated toxins in their body fat, and the larger the dolphin the more accumulated toxin it can tolerate. Nearly 80 percent of the toxins a female dolphin has accumulated pass into the fat-rich milk her nursing calf ingests. Ttherefore, the unusually high mortality rate among dolphin calves in the industrially contaminated waters along Florida' s Gulf Coast is probably the result of their being poisoned by their mother' s milk.",
    "question": "Which of the following, if true, most strengthens the argument?",
    "options": [
      "The rate at which adult dolphins living in the waters along Florida's Gulf Coast accumulate toxins is no higher than that of adult dolphins in comparably polluted waters elsewhere.",
      "Among dolphin calves born in the area along Florida's Gulf Coast, the mortality rate is highest among those with living siblings.",
      "The survival rate of firstborn dolphin calves in the area along Florida's Gulf Coast is highest for those whose mothers were killed before they were weaned.",
      "Dolphins, like other marine mammals, have a higher proportion of body fat than do most land mammals."
    ],
    "raw_logic_programs": [
      "# Declarations\ndolphins = EnumSort([adult, calf])\nlocations = EnumSort([Florida_Gulf_Coast, other_polluted_waters])\ntoxins = Function([dolphins, locations] -> [int])\nmortality_rate = Function([dolphins, locations] -> [int])\nmilk_toxins = Function([dolphins] -> [int])\nsiblings = Function([dolphins] -> [bool])\nsurvival_rate = Function([dolphins, locations] -> [int])\nmothers_status = Function([dolphins] -> [bool])\n\n# Constraints\nForAll([d: dolphins, l: locations], toxins(d, l) >= 0) ::: Dolphins accumulate toxins in their body fat\nForAll([d: dolphins], milk_toxins(d) == 0.8 * toxins(d, Florida_Gulf_Coast)) ::: 80 percent of the toxins a female dolphin has accumulated pass into the milk\nmortality_rate(calf, Florida_Gulf_Coast) > mortality_rate(calf, other_polluted_waters) ::: High mortality rate among dolphin calves in Florida's Gulf Coast\n\n# Options\nQuestion ::: Which of the following, if true, most strengthens the argument?\nis_strongest(And(toxins(adult, Florida_Gulf_Coast) == toxins(adult, other_polluted_waters))) ::: (A)\nis_strongest(And(siblings(calf) == True, mortality_rate(calf, Florida_Gulf_Coast) > mortality_rate(calf, other_polluted_waters))) ::: (B)\nis_strongest(And(mothers_status(calf) == False, survival_rate(calf, Florida_Gulf_Coast) > survival_rate(calf, other_polluted_waters))) ::: (C)\nis_strongest(And(dolphins == marine_mammals, body_fat(dolphins) > body_fat(land_mammals))) ::: (D)"
    ]
  },
  {
    "id": "test_937",
    "context": "Audiences find a speaker more convincing if the speaker begins a speech by arguing briefly against his or her position before providing reasons for accepting it. The reason this technique is so effective is that it makes the speaker appear fair-minded and trustworthy. Ttherefore, candidates for national political office who wish to be successful in winning votes should use this argumentative technique in their speeches.",
    "question": "Which one of the following, if true, most seriously limits the effectiveness of adopting the argument's recommendation?",
    "options": [
      "Political candidates typically have no control over which excerpts from their speeches will be reported by the news media.",
      "Many people do not find arguments made by politicians convincing, since the arguments are often one-sided or oversimplify the issues.",
      "Political candidates have to address audiences of many different sizes and at many different locations in the course of a political campaign.",
      "People decide which political candidate to vote for more on the basis of their opinions of the candidate's character than on the exact positions of the candidate."
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([candidate1, candidate2, candidate3, candidate4, candidate5])\naudiences = EnumSort([audience1, audience2, audience3, audience4, audience5])\ntechnique_used = Function([candidates, audiences] -> [bool])\n\n# Constraints\nForAll([c:candidates, a:audiences], technique_used(c, a)) ::: Candidates for national political office should use the argumentative technique in their speeches\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously limits the effectiveness of adopting the argument's recommendation?\nis_limiting(Exists([c:candidates, a:audiences], Not(technique_used(c, a)) && media_control(c))) ::: (A) Political candidates typically have no control over which excerpts from their speeches will be reported by the news media.\nis_limiting(Exists([c:candidates, a:audiences], Not(technique_used(c, a)) && audience_skepticism(a))) ::: (B) Many people do not find arguments made by politicians convincing, since the arguments are often one-sided or oversimplify the issues.\nis_limiting(Exists([c:candidates, a:audiences], Not(technique_used(c, a)) && varied_audiences(c))) ::: (C) Political candidates have to address audiences of many different sizes and at many different locations in the course of a political campaign.\nis_limiting(Exists([c:candidates, a:audiences], Not(technique_used(c, a)) && character_based_decision(a))) ::: (D) People decide which political candidate to vote for more on the basis of their opinions of the candidate's character than on the exact positions of the candidate."
    ]
  },
  {
    "id": "test_938",
    "context": "Educator: Despite claims that books offer a better reading experience than electronic readers, a recent study found 90% of subjects demonstrated an increased ability to recall facts when that material was presented on an electronic reader rather than on the printed page. Ttherefore, if the reader hopes to have a deeper understanding of the material he or she is reading, that person should study using an electronic reader.",
    "question": "Which of the following calls into question the conclusion of the educator?",
    "options": [
      "The ability to recall information while taking part in a study is similar to the ability to recall information when one reads for leisure.",
      "Those who claim that reading on actual paper improves retention rate cite the importance of where on the page text is located.",
      "Reading comprehension depends on how well one is able to connect facts not on how well one is able to recall facts in isolation.",
      "Electronic readers may be filled with hyperlinks, which can be highly distracting."
    ],
    "raw_logic_programs": [
      "# Declarations\nsubjects = EnumSort([subject1, subject2, ..., subjectN])  # Assuming N subjects in the study\nmediums = EnumSort([electronic_reader, printed_page])\nrecall_ability = Function([subjects, mediums] -> [int])  # Represents the ability to recall facts\n\n# Constraints\nForAll([s:subjects], recall_ability(s, electronic_reader) > recall_ability(s, printed_page)) ::: 90% of subjects demonstrated an increased ability to recall facts on an electronic reader\n\n# Options\nQuestion ::: Which of the following calls into question the conclusion of the educator?\nis_questionable(Implies(ForAll([s:subjects], recall_ability(s, electronic_reader) > recall_ability(s, printed_page)), deeper_understanding(electronic_reader))) ::: The educator's conclusion that electronic readers lead to a deeper understanding\n\nis_questionable(ability_to_recall_study == ability_to_recall_leisure) ::: (A) The ability to recall information while taking part in a study is similar to the ability to recall information when one reads for leisure.\nis_questionable(importance_of_text_location_on_page) ::: (B) Those who claim that reading on actual paper improves retention rate cite the importance of where on the page text is located.\nis_questionable(reading_comprehension_depends_on_fact_connection) ::: (C) Reading comprehension depends on how well one is able to connect facts not on how well one is able to recall facts in isolation.\nis_questionable(hyperlinks_are_distracting) ::: (D) Electronic readers may be filled with hyperlinks, which can be highly distracting."
    ]
  },
  {
    "id": "test_939",
    "context": "Hutonian Government Official: Federal law requires truck drivers to take a long break after driving for ten hours, but truck drivers frequently do not comply. Since the public rest areas along our highways cannot accommodate all the drivers needing a break, we plan to build more rest areas to increase the rate of compliance. Hutonian Business Representative: But if the parking lots around our businesses are considered, there are more than enough parking places.",
    "question": "Which of the following, if true about Hutonia, would provide a reason for persisting with the government official's plan despite the objection?",
    "options": [
      "Even when rest areas are available, some truck drivers park in places, such as highway access ramps, where their trucks are likely to cause accidents.",
      "Some public parking areas, particularly those on heavily traveled roads, are substantially larger than others.",
      "Public parking areas are evenly distributed along the highways.",
      "In comparison to public rest areas, private parking lots near highways tend to be time-consuming for drivers to reach."
    ],
    "raw_logic_programs": [
      "# Declarations\nlocations = EnumSort([public_rest_areas, private_parking_lots, highway_access_ramps])\ndrivers = EnumSort([compliant, non_compliant])\nfactors = EnumSort([availability, size, distribution, accessibility])\nimpact = Function([locations, drivers] -> [bool])\nreason = Function([factors] -> [bool])\n\n# Constraints\nForAll([d:drivers], Implies(impact(public_rest_areas, d), d == compliant)) ::: Federal law requires truck drivers to take a long break after driving for ten hours, but truck drivers frequently do not comply\nForAll([d:drivers], Implies(Not(impact(public_rest_areas, d)), d == non_compliant)) ::: Since the public rest areas along our highways cannot accommodate all the drivers needing a break\nExists([d:drivers], impact(public_rest_areas, d)) ::: we plan to build more rest areas to increase the rate of compliance\nForAll([d:drivers], Implies(impact(private_parking_lots, d), d == compliant)) ::: But if the parking lots around our businesses are considered, there are more than enough parking places\n\n# Options\nQuestion ::: Which of the following, if true about Hutonia, would provide a reason for persisting with the government official's plan despite the objection?\nreason(impact(highway_access_ramps, non_compliant)) ::: (A) Even when rest areas are available, some truck drivers park in places, such as highway access ramps, where their trucks are likely to cause accidents\nreason(impact(public_rest_areas, size)) ::: (B) Some public parking areas, particularly those on heavily traveled roads, are substantially larger than others\nreason(impact(public_rest_areas, distribution)) ::: (C) Public parking areas are evenly distributed along the highways\nreason(impact(private_parking_lots, accessibility)) ::: (D) In comparison to public rest areas, private parking lots near highways tend to be time-consuming for drivers to reach"
    ]
  },
  {
    "id": "test_940",
    "context": "The mayor of Coast Town has determined that the best way to pay for the construction of a new library is to charge all residents and non-residents a fee for visiting Coast Town' s well-regarded beach. The mayor reasons that at current levels of visitation, the revenue generated from the beach visitation fee will pay for the new library within three years.",
    "question": "Which of the following pieces of information would be most useful in evaluating the mayor's conclusion?",
    "options": [
      "Whether visitors to Coast Town's beach will reduce the frequency of their visits in response to the fee.",
      "The manner in which other towns in the state have funded the construction of their libraries.",
      "How many people visited Coast Town's beach last year.",
      "The average level of household income of residents in Coast Town."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([visitors_response, other_towns_funding, last_year_visitors, household_income])\nuseful_information = Function([variables] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the task is to evaluate the mayor's conclusion based on the options provided.\n\n# Options\nQuestion ::: Which of the following pieces of information would be most useful in evaluating the mayor's conclusion?\nis_most_useful(useful_information(visitors_response)) ::: (A) Whether visitors to Coast Town's beach will reduce the frequency of their visits in response to the fee.\nis_most_useful(useful_information(other_towns_funding)) ::: (B) The manner in which other towns in the state have funded the construction of their libraries.\nis_most_useful(useful_information(last_year_visitors)) ::: (C) How many people visited Coast Town's beach last year.\nis_most_useful(useful_information(household_income)) ::: (D) The average level of household income of residents in Coast Town."
    ]
  },
  {
    "id": "test_941",
    "context": "A shortage of orders for Manto Aircraft' s airliners has led analysts to predict that the manufacturer will have to lay off workers. The new order that Consolidated Airlines has just made for 20 of Manto' s model TX jets does not provide a reason for the analysts to revise their predictions , because simultaneously with its new order , Consolidated canceled its existing order for an equal number of Manto' s larger, more expensive model Z jets.",
    "question": "Which of the following , if true, most seriously weakens the argument?",
    "options": [
      "A large number of the airliners in Consolidated fleet are at the beginning of their expected service life",
      "Manto relies more heavily on outside subcontractors to provide the labor to manufacture the Model Z than it does the Model TX",
      "Manto includes all required maintenance work for the first five years in the price of each jet it sells .",
      "The Manto employees who currently work to manufacture the model Z are not proficient at manufacturing the model TX"
    ],
    "raw_logic_programs": [
      "# Declarations\njets = EnumSort([model_TX, model_Z])\norders = Function([jets] -> [int])\nlabor = Function([jets] -> [int])\nproficiency = Function([jets] -> [bool])\n\n# Constraints\norders(model_TX) == 20 ::: Consolidated Airlines has just made an order for 20 of Manto's model TX jets\norders(model_Z) == 20 ::: Consolidated canceled its existing order for an equal number of Manto's model Z jets\nForAll([j:jets], labor(j) >= 0) ::: Labor required for each model is non-negative\n\n# Options\nQuestion ::: Which of the following, if true, most seriously weakens the argument?\nis_weakening(labor(model_Z) > labor(model_TX)) ::: (A large number of the airliners in Consolidated fleet are at the beginning of their expected service life\nis_weakening(labor(model_Z) > labor(model_TX)) ::: (Manto relies more heavily on outside subcontractors to provide the labor to manufacture the Model Z than it does the Model TX\nis_weakening(proficiency(model_Z) == False) ::: (Manto includes all required maintenance work for the first five years in the price of each jet it sells\nis_weakening(proficiency(model_Z) == False) ::: (The Manto employees who currently work to manufacture the model Z are not proficient at manufacturing the model TX"
    ]
  },
  {
    "id": "test_942",
    "context": "Many agriculturally intensive areas of the world are beginning to encounter water scarcity problems. As a result, many farmers in these areas are likely to reduce their output as the water supply they need in order to maintain production shrinks. However, one group of farmers in such a region plans to increase their production by implementing techniques for water conservation.",
    "question": "Which of the following, if true, would most strongly support the prediction that the group's plan will succeed?",
    "options": [
      "Other regions of the world not facing water shortages are likely to make up for the reduction in agricultural output.",
      "Farmers who can gain a larger share of the food market in their regions will be better positioned to control more water resources.",
      "Demand for agricultural products in the group's region is not expected to decline.",
      "More than half the water used for agriculture in the farmers' region is lost to evaporation or leakage from irrigation channels."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([agriculturally_intensive, other_regions])\nfarmers = EnumSort([group, others])\nfactors = EnumSort([water_scarcity, water_conservation, market_share, demand, water_loss])\nplans = Function([farmers, factors] -> [bool])\n\n# Constraints\nplans(group, water_conservation) ::: the group plans to increase their production by implementing techniques for water conservation\nplans(others, water_scarcity) ::: many farmers in these areas are likely to reduce their output as the water supply shrinks\n\n# Options\nQuestion ::: Which of the following, if true, would most strongly support the prediction that the group's plan will succeed?\nis_supportive(plans(group, water_loss)) ::: (A) More than half the water used for agriculture in the farmers' region is lost to evaporation or leakage from irrigation channels.\nis_supportive(plans(group, market_share)) ::: (B) Farmers who can gain a larger share of the food market in their regions will be better positioned to control more water resources.\nis_supportive(plans(group, demand)) ::: (C) Demand for agricultural products in the group's region is not expected to decline.\nis_supportive(plans(others, water_scarcity)) ::: (D) Other regions of the world not facing water shortages are likely to make up for the reduction in agricultural output."
    ]
  },
  {
    "id": "test_943",
    "context": "The fewer restrictions there are on the advertising of legal services, the more lawyers there are who advertise their services, and the lawyers who advertise a specific service usually charge less for that service than the lawyers who do not advertise. Ttherefore, if the state removes any of its current restrictions, such as the one against advertisements that do not specify fee arrangements, overall consumer legal costs will be lower than if the state retains its current restrictions.",
    "question": "If the statements above are true, which of the following must be true?",
    "options": [
      "More consumers will use legal services if there are fewer restrictions on the advertising of legal services.",
      "Some lawyers who now advertise will charge more for specific services if they do not have to specify fee arrangements in the advertisements.",
      "If the restriction against advertisements that do not specify fee arrangements is removed, more lawyers will advertise their services.",
      "If more lawyers advertise lower prices for specific services, some lawyers who do not advertise will also charge less than they currently charge for those services."
    ],
    "raw_logic_programs": [
      "# Declarations\n- `restrictions`: A boolean variable indicating whether there are restrictions on advertising legal services.\n- `advertise`: A function mapping lawyers to a boolean indicating whether they advertise their services.\n- `charge_less`: A function mapping lawyers to a boolean indicating whether they charge less for a specific service.\n\n# Constraints\n- `ForAll([l:lawyers], Implies(advertise(l), charge_less(l)))` ::: Lawyers who advertise a specific service usually charge less for that service than those who do not advertise.\n- `restrictions == False -> Exists([l:lawyers], advertise(l))` ::: If there are fewer restrictions, more lawyers will advertise their services.\n\n# Options\nQuestion ::: If the statements above are true, which of the following must be true?\n- `restrictions == False -> Exists([c:consumers], use_legal_services(c))` ::: (More consumers will use legal services if there are fewer restrictions on the advertising of legal services.\n- `restrictions == False -> Exists([l:lawyers], Not(advertise(l)) -> charge_more(l))` ::: (Some lawyers who now advertise will charge more for specific services if they do not have to specify fee arrangements in the advertisements.\n- `restrictions == False -> Exists([l:lawyers], advertise(l))` ::: (If the restriction against advertisements that do not specify fee arrangements is removed, more lawyers will advertise their services.\n- `Exists([l1:lawyers, l2:lawyers], And(advertise(l1), charge_less(l1), Not(advertise(l2)), charge_less(l2)))` ::: (If more lawyers advertise lower prices for specific services, some lawyers who do not advertise will also charge less than they currently charge for those services."
    ]
  },
  {
    "id": "test_944",
    "context": "Political theorist: For all of its members to be strong in foreign policy, an alliance of countries must respond aggressively to problems. An alliance will do so only if every member of the alliance perceives the problems as grave. But the European Union countries will not all perceive a problem as grave unless they all agree that it threatens their alliance' s economy. Thus, not all of the member countries of the European Union will be strong in foreign policy.",
    "question": "The conclusion drawn above follows logically if which one of the following is assumed?",
    "options": [
      "Problems that appear to some member countries of the European Union to threaten the alliance's economy will not appear so to others.",
      "European Union member countries that fail to perceive the economic relevance of problems are generally weak in foreign policy.",
      "Countries that refuse to join alliances generally respond more aggressively to problems than do countries that do join alliances.",
      "Alliances that are economically beneficial for a given country are not necessarily beneficial with regard to foreign policy."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([EU_member])\nproblems = EnumSort([problem])\nperceives_grave = Function([countries, problems] -> [bool])\nthreatens_economy = Function([problems] -> [bool])\nresponds_aggressively = Function([countries] -> [bool])\nstrong_foreign_policy = Function([countries] -> [bool])\n\n# Constraints\nForAll([c:countries], Implies(strong_foreign_policy(c), responds_aggressively(c))) ::: For all of its members to be strong in foreign policy, an alliance of countries must respond aggressively to problems\nForAll([c:countries], Implies(responds_aggressively(c), perceives_grave(c, problem))) ::: An alliance will do so only if every member of the alliance perceives the problems as grave\nForAll([c:countries], Implies(perceives_grave(c, problem), threatens_economy(problem))) ::: The European Union countries will not all perceive a problem as grave unless they all agree that it threatens their alliance's economy\n\n# Options\nQuestion ::: The conclusion drawn above follows logically if which one of the following is assumed?\nForAll([c1:countries, c2:countries], Implies(threatens_economy(problem), Not(perceives_grave(c1, problem) == perceives_grave(c2, problem)))) ::: (A)\nForAll([c:countries], Implies(Not(perceives_grave(c, problem)), Not(strong_foreign_policy(c)))) ::: (B)\nForAll([c:countries], Implies(Not(join_alliance(c)), responds_aggressively(c))) ::: (C)\nForAll([c:countries], Implies(economically_beneficial(c), Not(strong_foreign_policy(c)))) ::: (D)"
    ]
  },
  {
    "id": "test_945",
    "context": "Homeowner Representative: Statistics show that burglars often target houses that appear unoccupied. Ttherefore, when homeowners are away from their homes for several days, we recommend that they leave lights on, to give the impression that the house is occupied. Crime Expert: The same lights continuously on all night long with no change give a potential burglar a clear signal that the house is unoccupied.",
    "question": "The Crime Expert uses which of the following techniques in responding to the Homeowner Representative?",
    "options": [
      "pointing out an undesired effect of a recommendation",
      "demonstrating that the conclusion is true, but not for the reasons cited",
      "calling into question an unstated assumption",
      "presenting new evidence that calls the conclusion into question"
    ],
    "raw_logic_programs": [
      "# Declarations\ntechniques = EnumSort([undesired_effect, true_but_not_for_reasons, unstated_assumption, new_evidence])\nresponse = Function([techniques] -> [bool])\n\n# Constraints\nresponse(undesired_effect) ::: pointing out an undesired effect of a recommendation\nresponse(true_but_not_for_reasons) ::: demonstrating that the conclusion is true, but not for the reasons cited\nresponse(unstated_assumption) ::: calling into question an unstated assumption\nresponse(new_evidence) ::: presenting new evidence that calls the conclusion into question\n\n# Options\nQuestion ::: The Crime Expert uses which of the following techniques in responding to the Homeowner Representative?\nis_valid(response(undesired_effect)) ::: (pointing out an undesired effect of a recommendation)\nis_valid(response(true_but_not_for_reasons)) ::: (demonstrating that the conclusion is true, but not for the reasons cited)\nis_valid(response(unstated_assumption)) ::: (calling into question an unstated assumption)\nis_valid(response(new_evidence)) ::: (presenting new evidence that calls the conclusion into question)"
    ]
  },
  {
    "id": "test_946",
    "context": "Treat training consists of rewarding dogs with edible treats whenever they respond appropriately to commands. Most dogs will quickly learn what they need to do to receive a treat, so this appears to be an effective training method. However, most dogs who have been treat-trained will not obey commands unless they are shown a treat. Since you cannot always have treats on hand, you should instead use praise and verbal correction to train your dog.",
    "question": "Which one of the following principles, if valid, most helps to justify the reasoning above?",
    "options": [
      "A dog should not be trained by a method that has not proven to be effective for any other dogs.",
      "A dog should be trained by the method that results in a high obedience rate in at least some circumstances.",
      "A dog should be trained to respond to a stimulus that its owner can supply in all situations.",
      "The more often a dog is given a stimulus, the more likely it is that the dog will obey its owner's command even when the owner does not provide that stimulus."
    ],
    "raw_logic_programs": [
      "# Declarations\ndogs = EnumSort([dog])\ntraining_methods = EnumSort([treat_training, praise_and_verbal_correction])\nstimuli = EnumSort([treat, praise, verbal_correction])\nobeys = Function([dogs, stimuli] -> [bool])\ntrained_by = Function([dogs] -> [training_methods])\n\n# Constraints\nForAll([d:dogs], trained_by(d) == treat_training) ::: Most dogs will quickly learn what they need to do to receive a treat\nForAll([d:dogs], Implies(trained_by(d) == treat_training, Not(obeys(d, command)) unless shown(treat))) ::: Most dogs who have been treat-trained will not obey commands unless they are shown a treat\nForAll([d:dogs], Not(Exists([s:stimuli], has_on_hand(s)))) ::: You cannot always have treats on hand\n\n# Options\nQuestion ::: Which one of the following principles, if valid, most helps to justify the reasoning above?\nis_valid(ForAll([d:dogs], Not(trained_by(d) == method) unless Exists([d2:dogs], trained_by(d2) == method and obeys(d2, command)))) ::: (A) A dog should not be trained by a method that has not proven to be effective for any other dogs.\nis_valid(Exists([d:dogs], trained_by(d) == method and obeys(d, command))) ::: (B) A dog should be trained by the method that results in a high obedience rate in at least some circumstances.\nis_valid(ForAll([d:dogs], trained_by(d) == method and ForAll([s:stimuli], has_on_hand(s)))) ::: (C) A dog should be trained to respond to a stimulus that its owner can supply in all situations.\nis_valid(ForAll([d:dogs], Implies(Count([s:stimuli], given(d, s)) > threshold, obeys(d, command) even without stimulus))) ::: (D) The more often a dog is given a stimulus, the more likely it is that the dog will obey its owner's command even when the owner does not provide that stimulus."
    ]
  },
  {
    "id": "test_947",
    "context": "In 1980, Country A had a per capita gross domestic product (GDP) that was $5, 000 higher than that of the European Economic Community. By 1990, the difference, when adjusted for inflation, had increased to $6, 000. Since a rising per capita GDP indicates a rising average standard of living, the average standard of living in Country A must have risen between 1980 and 1990.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Between 1980 and 1990, the average standard of living in the European Economic Community fell.",
      "The per capita GDP of the European Economic Community was not lower by more than $1, 000 in 1990 than it had been in 1980.",
      "In 1990, no member country of the European Economic Community had a per capita GDP higher than that of Country A.",
      "Between 1980 and 1990, Country A and the European Economic Community experienced the same percentage increase in population."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([1980, 1990])\nregions = EnumSort([CountryA, EEC])\ngdp = Function([years, regions] -> [int])\n\n# Constraints\ngdp(1980, CountryA) == gdp(1980, EEC) + 5000 ::: In 1980, Country A had a per capita GDP that was $5,000 higher than that of the EEC\ngdp(1990, CountryA) == gdp(1990, EEC) + 6000 ::: By 1990, the difference, when adjusted for inflation, had increased to $6,000\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([y:years], gdp(y, EEC) <= gdp(y, CountryA))) ::: (A) Between 1980 and 1990, the average standard of living in the European Economic Community fell.\nis_assumption(gdp(1990, EEC) >= gdp(1980, EEC) - 1000) ::: (B) The per capita GDP of the European Economic Community was not lower by more than $1,000 in 1990 than it had been in 1980.\nis_assumption(ForAll([y:years], gdp(y, EEC) < gdp(y, CountryA))) ::: (C) In 1990, no member country of the European Economic Community had a per capita GDP higher than that of Country A.\nis_assumption(ForAll([y:years], population_growth(CountryA) == population_growth(EEC))) ::: (D) Between 1980 and 1990, Country A and the European Economic Community experienced the same percentage increase in population."
    ]
  },
  {
    "id": "test_948",
    "context": "Rose: Let' s not see the movie Winter Fields. I caught a review of it in the local paper and it was the worst review I' ve read in years. Chester: I don' t understand why that might make you not want to see the movie. And besides, nothing in that paper is particularly well written.",
    "question": "Chesters response suggests that he misinterpreted which one of the following expressions used by Rose?",
    "options": [
      "in years",
      "see the movie",
      "caught a review",
      "worst review"
    ],
    "raw_logic_programs": [
      "# Declarations\nexpressions = EnumSort([\"in years\", \"see the movie\", \"caught a review\", \"worst review\"])\nmisinterpreted = Function([expressions] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description for this logic program.\n\n# Options\nQuestion ::: Chester's response suggests that he misinterpreted which one of the following expressions used by Rose?\nis_misinterpreted(misinterpreted(\"in years\")) ::: (A)\nis_misinterpreted(misinterpreted(\"see the movie\")) ::: (B)\nis_misinterpreted(misinterpreted(\"caught a review\")) ::: (C)\nis_misinterpreted(misinterpreted(\"worst review\")) ::: (D)"
    ]
  },
  {
    "id": "test_949",
    "context": "Historian: We can learn about the medical history of individuals through chemical analysis of their hair. It is likely, for example, that Isaac Newton' s psychological problems were due to mercury poisoning; traces of mercury were found in his hair. Analysis is now being done on a lock of Beethoven' s hair. Although no convincing argument has shown that Beethoven ever had a venereal disease, some people hypothesize that venereal disease caused his deafness. Since mercury was commonly ingested in Beethoven' s time to treat venereal disease, if researchers find a trace of mercury in his hair, we can conclude that this hypothesis is correct.",
    "question": "Which one of the following is an assumption on which the historian's argument depends?",
    "options": [
      "None of the mercury introduced into the body can be eliminated.",
      "Mercury poisoning can cause deafness in people with venereal disease.",
      "Mercury is an effective treatment for venereal disease.",
      "Some people in Beethoven's time did not ingest mercury."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Newton, Beethoven])\nconditions = EnumSort([psychological_problems, deafness, venereal_disease])\nsubstances = EnumSort([mercury])\nfindings = Function([individuals, substances] -> [bool])\ncauses = Function([conditions, substances] -> [bool])\ntreatments = Function([conditions, substances] -> [bool])\n\n# Constraints\nfindings(Newton, mercury) == True ::: traces of mercury were found in Newton's hair\ncauses(psychological_problems, mercury) == True ::: Newton's psychological problems were due to mercury poisoning\nfindings(Beethoven, mercury) == True ::: if researchers find a trace of mercury in Beethoven's hair\ntreatments(venereal_disease, mercury) == True ::: mercury was commonly ingested in Beethoven's time to treat venereal disease\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the historian's argument depends?\nis_assumption(ForAll([i:individuals], Not(Exists([s:substances], And(findings(i, s), Not(causes(deafness, s))))))) ::: (A) None of the mercury introduced into the body can be eliminated.\nis_assumption(Exists([s:substances], And(causes(deafness, s), treatments(venereal_disease, s)))) ::: (B) Mercury poisoning can cause deafness in people with venereal disease.\nis_assumption(Exists([s:substances], treatments(venereal_disease, s))) ::: (C) Mercury is an effective treatment for venereal disease.\nis_assumption(Exists([i:individuals], Not(Exists([s:substances], treatments(venereal_disease, s))))) ::: (D) Some people in Beethoven's time did not ingest mercury."
    ]
  },
  {
    "id": "test_950",
    "context": "Crowding on Mooreville' s subway frequently leads to delays, because it is difficult for passengers to exit from the trains. Subway ridership is projected to increase by 20 percent over the next 10 years. The Mooreville Transit Authority plans to increase the number of daily train trips by only 5 percent over the same period. Officials predict that this increase is sufficient to ensure that the incidence of delays due to crowding does not increase.",
    "question": "Which of the following, if true, provides the strongest grounds for the officials' prediction?",
    "options": [
      "The Transit Authority also plans a 5 percent increase in the number of bus trips on routes that connect to subways.",
      "The 5 percent increase in the number of train trips can be achieved without an equal increase in Transit Authority operational costs.",
      "Most of the projected increase in ridership is expected to occur in off-peak hours when trains are now sparsely used.",
      "By changing maintenance schedules, the Transit Authority can achieve the 5 percent increase in train trips without purchasing any new subway cars."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([ridership_increase, train_trip_increase, delay_incidence, off_peak_ridership_increase])\npredictions = Function([variables] -> [bool])\n\n# Constraints\npredictions(ridership_increase == 20) ::: Subway ridership is projected to increase by 20 percent over the next 10 years\npredictions(train_trip_increase == 5) ::: The Mooreville Transit Authority plans to increase the number of daily train trips by only 5 percent over the same period\npredictions(delay_incidence == 0) ::: Officials predict that this increase is sufficient to ensure that the incidence of delays due to crowding does not increase\n\n# Options\nQuestion ::: Which of the following, if true, provides the strongest grounds for the officials' prediction?\nis_strongest_ground(predictions(off_peak_ridership_increase == 1)) ::: (Most of the projected increase in ridership is expected to occur in off-peak hours when trains are now sparsely used)\nis_strongest_ground(predictions(bus_trip_increase == 5)) ::: (The Transit Authority also plans a 5 percent increase in the number of bus trips on routes that connect to subways)\nis_strongest_ground(predictions(cost_increase == 0)) ::: (The 5 percent increase in the number of train trips can be achieved without an equal increase in Transit Authority operational costs)\nis_strongest_ground(predictions(no_new_cars_needed == 1)) ::: (By changing maintenance schedules, the Transit Authority can achieve the 5 percent increase in train trips without purchasing any new subway cars)"
    ]
  },
  {
    "id": "test_951",
    "context": "In each of the last ten years, there have been few complaints to law enforcement agencies of telemarketing fraud. Yet, in the last ten years, fraudulent telemarketing schemes have become a more and more serious problem, bilking victims out of millions of dollars annually.",
    "question": "Which one of the following, if true, most helps to resolve the apparent conflict described above?",
    "options": [
      "Fraudulent telemarketers typically base their operations outside the legal jurisdiction inhabited by the people they solicit, so they must be prosecuted in higher courts.",
      "Some fraudulent telemarketers have concocted phony investment schemes which make it unlikely that victims will detect the fraud until a year or two after the fact, by which time their swindlers are long gone.",
      "Most complaints of telemarketing fraud that authorities investigate involve the use of credit cards, which makes it extremely difficult for law enforcement agencies to track down the perpetrators.",
      "The majority of those who have been defrauded by telemarketers have been inclined not to seek any legal remedy, out of embarrassment at being duped."
    ],
    "raw_logic_programs": [
      "# Declarations\ncomplaints = EnumSort([few, many])\nfraud_schemes = EnumSort([serious_problem, not_serious_problem])\nvictims = EnumSort([seek_remedy, not_seek_remedy])\njurisdiction = EnumSort([inside, outside])\ndetection_time = EnumSort([immediate, delayed])\npayment_method = EnumSort([credit_card, other])\n\n# Constraints\ncomplaints == few ::: In each of the last ten years, there have been few complaints to law enforcement agencies of telemarketing fraud\nfraud_schemes == serious_problem ::: In the last ten years, fraudulent telemarketing schemes have become a more and more serious problem\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to resolve the apparent conflict described above?\nis_resolving(And(jurisdiction == outside, fraud_schemes == serious_problem)) ::: (A) Fraudulent telemarketers typically base their operations outside the legal jurisdiction inhabited by the people they solicit, so they must be prosecuted in higher courts.\nis_resolving(And(detection_time == delayed, fraud_schemes == serious_problem)) ::: (B) Some fraudulent telemarketers have concocted phony investment schemes which make it unlikely that victims will detect the fraud until a year or two after the fact, by which time their swindlers are long gone.\nis_resolving(And(payment_method == credit_card, fraud_schemes == serious_problem)) ::: (C) Most complaints of telemarketing fraud that authorities investigate involve the use of credit cards, which makes it extremely difficult for law enforcement agencies to track down the perpetrators.\nis_resolving(And(victims == not_seek_remedy, fraud_schemes == serious_problem)) ::: (D) The majority of those who have been defrauded by telemarketers have been inclined not to seek any legal remedy, out of embarrassment at being duped."
    ]
  },
  {
    "id": "test_952",
    "context": "Advertiser: Most TV shows depend on funding from advertisers and would be canceled without such funding. However, advertisers will not pay to have their commercials aired during a TV show unless many people watching the show buy the advertised products as a result. So if people generally fail to buy the products advertised during their favorite shows, these shows will soon be canceled. Thus, anyone who feels that a TV show is worth preserving ought to buy the products advertised during that show.",
    "question": "The advertiser's reasoning most closely conforms to which one of the following principles?",
    "options": [
      "If one feels that a TV show is worth preserving, then one should take at least some actions to reduce the likelihood that the show will be canceled.",
      "If a TV show is worth preserving, then everyone should take whatever actions are necessary to prevent that show from being canceled.",
      "If a TV show would be canceled unless many people took certain actions, then everyone who feels that the show is worth preserving ought to take those actions.",
      "If a TV show would be canceled unless many people took certain actions, then those who feel most strongly that it is worth preserving should take those actions."
    ],
    "raw_logic_programs": [
      "# Declarations\nshows = EnumSort([TV_show])\nactions = EnumSort([buy_advertised_products])\npeople = EnumSort([individuals])\npreserve = Function([people, shows] -> [bool])\ncanceled = Function([shows] -> [bool])\nbuy_products = Function([people, shows] -> [bool])\n\n# Constraints\nForAll([s:shows], Implies(Not(Exists([p:people], buy_products(p, s))), canceled(s))) ::: If people generally fail to buy the products advertised during their favorite shows, these shows will soon be canceled\nForAll([p:people, s:shows], Implies(preserve(p, s), buy_products(p, s))) ::: Anyone who feels that a TV show is worth preserving ought to buy the products advertised during that show\n\n# Options\nQuestion ::: The advertiser's reasoning most closely conforms to which one of the following principles?\nis_conform(ForAll([p:people, s:shows], Implies(preserve(p, s), Exists([a:actions], a)))) ::: (A) If one feels that a TV show is worth preserving, then one should take at least some actions to reduce the likelihood that the show will be canceled.\nis_conform(ForAll([s:shows], Implies(preserve(p, s), ForAll([a:actions], a)))) ::: (B) If a TV show is worth preserving, then everyone should take whatever actions are necessary to prevent that show from being canceled.\nis_conform(ForAll([s:shows], Implies(canceled(s), ForAll([p:people], Implies(preserve(p, s), Exists([a:actions], a)))))) ::: (C) If a TV show would be canceled unless many people took certain actions, then everyone who feels that the show is worth preserving ought to take those actions.\nis_conform(ForAll([s:shows], Implies(canceled(s), Exists([p:people], Implies(preserve(p, s), Exists([a:actions], a)))))) ::: (D) If a TV show would be canceled unless many people took certain actions, then those who feel most strongly that it is worth preserving should take those actions."
    ]
  },
  {
    "id": "test_953",
    "context": "Americans democracy is under fire. Voter turnout is at a record low, particularly for local elections. Some municipal elections have less than thirty percent voter participation. Congressional approval ratings have not surpassed 30 percent since 2009, but incumbents win reelection campaigns at a rate of 90 percent. Rank choice voting is the answer. Under this system, voters rank candidates in order of choice, and when their preferred candidate is eliminated in an instantaneous runoff, their vote is transferred to their next most-preferred candidate. As a result, voter participation will increase, since there will be more candidates and competition, leading to more effective representation.",
    "question": "Which one of the following most accurately identifies the argument's primary purpose?",
    "options": [
      "To present a solution to an apparent problem.",
      "To explain rank choice voting.",
      "To criticize the current congressional representatives, especially incumbents.",
      "To support the need for greater competition in elections."
    ],
    "raw_logic_programs": [
      "# Declarations\nproblems = EnumSort([voter_turnout, congressional_approval, incumbency_rate])\nsolutions = EnumSort([rank_choice_voting])\neffects = EnumSort([increased_participation, effective_representation])\narguments = EnumSort([present_solution, explain_system, criticize_representatives, support_competition])\n\n# Constraints\nlow_voter_turnout = True ::: Voter turnout is at a record low, particularly for local elections\nlow_congressional_approval = True ::: Congressional approval ratings have not surpassed 30 percent since 2009\nhigh_incumbency_rate = True ::: Incumbents win reelection campaigns at a rate of 90 percent\nrank_choice_voting_is_solution = True ::: Rank choice voting is the answer\nrank_choice_voting_increases_participation = True ::: Voter participation will increase\nrank_choice_voting_leads_to_effective_representation = True ::: Leading to more effective representation\n\n# Options\nQuestion ::: Which one of the following most accurately identifies the argument's primary purpose?\nis_primary_purpose(arguments.present_solution) ::: (To present a solution to an apparent problem.)\nis_primary_purpose(arguments.explain_system) ::: (To explain rank choice voting.)\nis_primary_purpose(arguments.criticize_representatives) ::: (To criticize the current congressional representatives, especially incumbents.)\nis_primary_purpose(arguments.support_competition) ::: (To support the need for greater competition in elections.)"
    ]
  },
  {
    "id": "test_954",
    "context": "Studies have demonstrated that <b> people who keep daily diet records are far more successful at losing weight than people who don't keep track of what they eat </b>. Researchers believe that this occurs because people who don' t record their diets eat more calories than they intend to consume. One study followed a group of patients who reported that they could not lose weight when consuming only 1, 200 calories a day. The study found that <b> the group consumed, on average, 47% more calories than it claimed and exercised 51% less </b>. In contrast, when dieters record what they eat, their actual consumption more closely matches their reported consumption.",
    "question": "The two boldface portions in the argument above are best described by which of the following statements?",
    "options": [
      "The first is an explanation of why a certain theory is thought to be true; the second is an example of research results that support this theory.",
      "The first demonstrates a cause-effect relationship discovered by the researchers; the second is the basis for the researchers' argument.",
      "The first is an observation that researchers hold to be true; the second provides evidence to substantiate the researchers' explanation for that observation.",
      "The first introduces an example illustrating the truth of a certain theory; the second is an alternate theory."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([first_boldface, second_boldface])\ndescriptions = EnumSort([\n    explanation_supports_theory,\n    cause_effect_relationship,\n    observation_evidence,\n    example_alternate_theory\n])\ndescribes = Function([statements] -> [descriptions])\n\n# Constraints\ndescribes(first_boldface) == observation_evidence ::: The first boldface portion is an observation that researchers hold to be true\ndescribes(second_boldface) == observation_evidence ::: The second boldface portion provides evidence to substantiate the researchers' explanation for that observation\n\n# Options\nQuestion ::: The two boldface portions in the argument above are best described by which of the following statements?\nis_correct(describes(first_boldface) == explanation_supports_theory, describes(second_boldface) == explanation_supports_theory) ::: (The first is an explanation of why a certain theory is thought to be true; the second is an example of research results that support this theory.)\nis_correct(describes(first_boldface) == cause_effect_relationship, describes(second_boldface) == cause_effect_relationship) ::: (The first demonstrates a cause-effect relationship discovered by the researchers; the second is the basis for the researchers' argument.)\nis_correct(describes(first_boldface) == observation_evidence, describes(second_boldface) == observation_evidence) ::: (The first is an observation that researchers hold to be true; the second provides evidence to substantiate the researchers' explanation for that observation.)\nis_correct(describes(first_boldface) == example_alternate_theory, describes(second_boldface) == example_alternate_theory) ::: (The first introduces an example illustrating the truth of a certain theory; the second is an alternate theory.)"
    ]
  },
  {
    "id": "test_955",
    "context": "A metaphor is the application of a word or phrase to something to which it does not literally apply in order to emphasize or indicate a similarity between that to which it would ordinarily apply and that to which it is -- nonliterally -- being applied. Some extremists claim that all uses of language are metaphorical. But this cannot be so, for unless some uses of words are literal, there can be no nonliteral uses of any words.",
    "question": "Which one of the following most accurately expresses the main conclusion of the argument?",
    "options": [
      "It is not the case that all uses of language are metaphorical.",
      "Metaphors are nonliteral uses of language that can be used to suggest similarities between objects.",
      "The ordinary meanings of words must be fixed by convention if the similarities between objects are to be representable by language.",
      "Either all uses of words are literal or all uses of words are metaphorical."
    ],
    "raw_logic_programs": [
      "# Declarations\nuses_of_language = EnumSort([literal, metaphorical])\nextremists_claim = Function([uses_of_language] -> [bool])\nargument_conclusion = Function([uses_of_language] -> [bool])\n\n# Constraints\nextremists_claim(metaphorical) == True ::: Some extremists claim that all uses of language are metaphorical\nargument_conclusion(literal) == True ::: For unless some uses of words are literal, there can be no nonliteral uses of any words\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the main conclusion of the argument?\nis_main_conclusion(argument_conclusion(literal) == True) ::: (It is not the case that all uses of language are metaphorical.\nis_main_conclusion(False) ::: (Metaphors are nonliteral uses of language that can be used to suggest similarities between objects.\nis_main_conclusion(False) ::: (The ordinary meanings of words must be fixed by convention if the similarities between objects are to be representable by language.\nis_main_conclusion(False) ::: (Either all uses of words are literal or all uses of words are metaphorical."
    ]
  },
  {
    "id": "test_956",
    "context": "Baxe Interiors, one of the largest interior design companies in existence, currently has a near monopoly in the corporate market. Several small design companies have won prestigious awards for their corporate work, while Baxe has won none. Nonetheless, the corporate managers who solicit design proposals will only contract with companies they believe are unlikely to go bankrupt, and they believe that only very large companies are unlikely to go bankrupt.",
    "question": "The statements above, if true, most strongly support which one of the following?",
    "options": [
      "There are other very large design companies besides Baxe, but they produce designs that are inferior to Baxe's.",
      "Baxe does not have a near monopoly in the market of any category of interior design other than corporate interiors.",
      "For the most part, designs that are produced by small companies are superior to the designs produced by Baxe.",
      "The existence of interior designs that are superior to those produced by Baxe does not currently threaten its near monopoly in the corporate market."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([Baxe, Small_Companies])\nmarkets = EnumSort([corporate, other])\nattributes = EnumSort([large, small, prestigious_awards, no_awards, near_monopoly, no_monopoly])\nbeliefs = Function([companies] -> [attributes])\nmarket_position = Function([companies, markets] -> [attributes])\n\n# Constraints\nmarket_position(Baxe, corporate) == near_monopoly ::: Baxe Interiors has a near monopoly in the corporate market\nForAll([c:companies], Implies(c != Baxe, market_position(c, corporate) == no_monopoly)) ::: Several small design companies have won prestigious awards for their corporate work, while Baxe has won none\nbeliefs(Baxe) == large ::: Corporate managers believe that only very large companies are unlikely to go bankrupt\nForAll([c:companies], Implies(beliefs(c) == small, market_position(c, corporate) == no_monopoly)) ::: Corporate managers will only contract with companies they believe are unlikely to go bankrupt\n\n# Options\nQuestion ::: The statements above, if true, most strongly support which one of the following?\nis_supported(market_position(Baxe, corporate) == near_monopoly) ::: (The existence of interior designs that are superior to those produced by Baxe does not currently threaten its near monopoly in the corporate market.)"
    ]
  },
  {
    "id": "test_957",
    "context": "Philosopher: I have been told that most university students today have no interest in philosophical issues, but I know from my own experience that this isn' t true. I often go to university campuses to give talks, and the students at my talks have a deep interest in philosophical issues.",
    "question": "The reasoning in the philosopher's argument is flawed in that the argument",
    "options": [
      "treats a group as representative of a larger group when there is reason to believe it is unrepresentative",
      "takes for granted that it is good that university students have an interest in a certain subject just because the person making the argument has that interest",
      "uses the term \"interest\" in two different ways when the argument requires that it be used consistently throughout",
      "takes for granted that just because there is no evidence that interest in something is decreasing, it must be increasing"
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([students_at_talks, university_students])\ninterest = Function([groups] -> [bool])\n\n# Constraints\ninterest(students_at_talks) == True ::: The students at the philosopher's talks have a deep interest in philosophical issues.\n\n# Options\nQuestion ::: The reasoning in the philosopher's argument is flawed in that the argument\nis_flawed(treats_as_representative(students_at_talks, university_students)) ::: (treats a group as representative of a larger group when there is reason to believe it is unrepresentative)\nis_flawed(takes_for_granted(interest(university_students) == True, interest(students_at_talks) == True)) ::: (takes for granted that it is good that university students have an interest in a certain subject just because the person making the argument has that interest)\nis_flawed(uses_term_inconsistently(\"interest\")) ::: (uses the term \"interest\" in two different ways when the argument requires that it be used consistently throughout)\nis_flawed(takes_for_granted(no_evidence_decreasing(interest(university_students)), increasing(interest(university_students)))) ::: (takes for granted that just because there is no evidence that interest in something is decreasing, it must be increasing)"
    ]
  },
  {
    "id": "test_958",
    "context": "Every student who walks to school goes home for lunch. It follows that some students who have parttime jobs do not walk to school.",
    "question": "The conclusion of the argument follows logically if which one of the following is assumed?",
    "options": [
      "Every student who goes home for lunch walks to school.",
      "Some students who do not have part-time jobs go home for lunch.",
      "Some students who do not have part-time jobs do not go home for lunch.",
      "Some students who do not go home for lunch have part-time jobs."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([student1, student2, student3, student4, student5])\nwalks_to_school = Function([students] -> [bool])\ngoes_home_for_lunch = Function([students] -> [bool])\nhas_parttime_job = Function([students] -> [bool])\n\n# Constraints\nForAll([s:students], Implies(walks_to_school(s), goes_home_for_lunch(s))) ::: Every student who walks to school goes home for lunch\n\n# Options\nQuestion ::: The conclusion of the argument follows logically if which one of the following is assumed?\nis_valid(Exists([s:students], And(has_parttime_job(s), Not(walks_to_school(s))))) ::: Some students who have part-time jobs do not walk to school\nis_assumed(ForAll([s:students], Implies(goes_home_for_lunch(s), walks_to_school(s)))) ::: (Every student who goes home for lunch walks to school)\nis_assumed(Exists([s:students], And(Not(has_parttime_job(s)), goes_home_for_lunch(s)))) ::: (Some students who do not have part-time jobs go home for lunch)\nis_assumed(Exists([s:students], And(Not(has_parttime_job(s)), Not(goes_home_for_lunch(s))))) ::: (Some students who do not have part-time jobs do not go home for lunch)\nis_assumed(Exists([s:students], And(Not(goes_home_for_lunch(s)), has_parttime_job(s)))) ::: (Some students who do not go home for lunch have part-time jobs)"
    ]
  },
  {
    "id": "test_959",
    "context": "Consultant: Most workers do not have every item they produce judged for quality, but each piece a freelance writer authors is evaluated. That is why freelance writers produce such high-quality work.",
    "question": "The consultant's statements, if true, most strongly support which one of the following?",
    "options": [
      "By having every piece of their work evaluated, some workers are caused to produce high-quality work.",
      "No other workers produce higher quality work than do freelance writers.",
      "A piece authored by a freelance writer is generally evaluated more strictly than the majority of items most workers produce.",
      "Only freelance writers have every item they produce evaluated for quality."
    ],
    "raw_logic_programs": [
      "# Declarations\nworkers = EnumSort([freelance_writer, other_worker])\nitems = Function([workers] -> [bool])\nevaluated = Function([workers] -> [bool])\nquality = Function([workers] -> [bool])\n\n# Constraints\nForAll([w:workers], Implies(w == freelance_writer, evaluated(w))) ::: Each piece a freelance writer authors is evaluated\nForAll([w:workers], Implies(evaluated(w), quality(w))) ::: If a worker's items are evaluated, they produce high-quality work\nNot(ForAll([w:workers], evaluated(w))) ::: Most workers do not have every item they produce judged for quality\n\n# Options\nQuestion ::: The consultant's statements, if true, most strongly support which one of the following?\nis_supported(Exists([w:workers], And(evaluated(w), quality(w)))) ::: (A) By having every piece of their work evaluated, some workers are caused to produce high-quality work.\nis_supported(Not(Exists([w:workers], And(w != freelance_writer, quality(w))))) ::: (B) No other workers produce higher quality work than do freelance writers.\nis_supported(ForAll([w:workers], Implies(w == freelance_writer, evaluated(w)))) ::: (C) A piece authored by a freelance writer is generally evaluated more strictly than the majority of items most workers produce.\nis_supported(ForAll([w:workers], Implies(w != freelance_writer, Not(evaluated(w))))) ::: (D) Only freelance writers have every item they produce evaluated for quality."
    ]
  },
  {
    "id": "test_960",
    "context": "Industrial accidents are more common when some of the people in safety-sensitive jobs have drinking problems than when none do. Since, even after treatment, people who have had drinking problems are somewhat more likely than other people to have drinking problems in the future, any employer trying to reduce the risk of accidents should bar anyone who has ever been treated for a drinking problem from holding a safety-sensitive job.",
    "question": "Which of the following, if true, most seriously undermines the argument above?",
    "options": [
      "Some industrial accidents are caused by equipment failure rather than by employee error.",
      "People who hold safety-sensitive jobs are subject to stresses that can exacerbate any personal problems they may have, including drinking problems.",
      "Workers who would permanently lose their jobs if they sought treatment for a drinking problem try instead to conceal their problem and continue working for as long as possible.",
      "Some companies place employees who are being treated for drinking problems in residential programs and allow them several weeks of paid sick leave."
    ],
    "raw_logic_programs": [
      "# Declarations\n- accidents = EnumSort([more_common, less_common])\n- people = EnumSort([with_drinking_problems, without_drinking_problems])\n- jobs = EnumSort([safety_sensitive, non_safety_sensitive])\n- treatment_status = EnumSort([treated, not_treated])\n- risk = Function([people, treatment_status] -> [accidents])\n\n# Constraints\n- risk(with_drinking_problems, treated) == more_common ::: Industrial accidents are more common when some of the people in safety-sensitive jobs have drinking problems than when none do\n- ForAll([p:people], risk(p, treated) == more_common) ::: Even after treatment, people who have had drinking problems are somewhat more likely than other people to have drinking problems in the future\n- ForAll([p:people], Implies(p == with_drinking_problems, Not(Exists([j:jobs], j == safety_sensitive)))) ::: Any employer trying to reduce the risk of accidents should bar anyone who has ever been treated for a drinking problem from holding a safety-sensitive job\n\n# Options\nQuestion ::: Which of the following, if true, most seriously undermines the argument above?\n- is_undermining(Exists([a:accidents], a == more_common)) ::: (Some industrial accidents are caused by equipment failure rather than by employee error.\n- is_undermining(Exists([p:people], p == with_drinking_problems)) ::: (People who hold safety-sensitive jobs are subject to stresses that can exacerbate any personal problems they may have, including drinking problems.\n- is_undermining(Exists([p:people, t:treatment_status], And(p == with_drinking_problems, t == not_treated))) ::: (Workers who would permanently lose their jobs if they sought treatment for a drinking problem try instead to conceal their problem and continue working for as long as possible.\n- is_undermining(Exists([p:people, t:treatment_status], And(p == with_drinking_problems, t == treated))) ::: (Some companies place employees who are being treated for drinking problems in residential programs and allow them several weeks of paid sick leave."
    ]
  },
  {
    "id": "test_961",
    "context": "The wild alligator population has declined tenfold over the last two decades, but the number of people killed by alligators has doubled over the same period.",
    "question": "Each of the following explains the apparent paradox EXCEPT:",
    "options": [
      "Zoos have bred exponentially more alligators over the last two decades.",
      "Alligator meat has become an incredibly lucrative industry during the last two decades.",
      "The nature tourism industry has exploded during the last two decades.",
      "People have built homes near swampland where alligators once thrived."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([zoos_breeding, alligator_meat_industry, nature_tourism, homes_near_swamps])\nexplains_paradox = Function([factors] -> [bool])\n\n# Constraints\nForAll([f:factors], explains_paradox(f)) ::: Each factor explains the apparent paradox\n\n# Options\nQuestion ::: Each of the following explains the apparent paradox EXCEPT:\nis_exception(explains_paradox(zoos_breeding)) ::: (A)\nis_exception(explains_paradox(alligator_meat_industry)) ::: (B)\nis_exception(explains_paradox(nature_tourism)) ::: (C)\nis_exception(explains_paradox(homes_near_swamps)) ::: (D)"
    ]
  },
  {
    "id": "test_962",
    "context": "Although the school would receive financial benefits if it had soft drink vending machines in the cafeteria, we should not allow them. Allowing soft drink machines there would not be in our students' interest. If our students start drinking more soft drinks, they will be less healthy.",
    "question": "The argument depends on which of the following?",
    "options": [
      "The amount of soft drinks that most students at the school currently drink is not detrimental to their health.",
      "The school's primary concern should be to promote good health among its students.",
      "If the soft drink vending machines were placed in the cafeteria, students would consume more soft drinks as a result.",
      "Students will not simply bring soft drinks from home if the soft drink vending machines are not placed in the cafeteria."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([student1, student2, ..., studentN])  # Represents all students\nsoft_drinks = EnumSort([none, some, more])  # Represents the amount of soft drinks consumed\nhealth = EnumSort([healthy, less_healthy])  # Represents the health status of students\nvending_machines = BoolSort()  # Represents whether vending machines are in the cafeteria\n\n# Constraints\nForAll([s:students], Implies(vending_machines, soft_drinks(s) == more)) ::: If the soft drink vending machines were placed in the cafeteria, students would consume more soft drinks as a result\nForAll([s:students], Implies(soft_drinks(s) == more, health(s) == less_healthy)) ::: If our students start drinking more soft drinks, they will be less healthy\n\n# Options\nQuestion ::: The argument depends on which of the following?\nis_necessary(ForAll([s:students], Implies(soft_drinks(s) == some, health(s) == healthy))) ::: (The amount of soft drinks that most students at the school currently drink is not detrimental to their health.\nis_necessary(school_concern == promote_good_health) ::: (The school's primary concern should be to promote good health among its students.\nis_necessary(ForAll([s:students], Implies(Not(vending_machines), soft_drinks(s) != more))) ::: (If the soft drink vending machines were placed in the cafeteria, students would consume more soft drinks as a result.\nis_necessary(ForAll([s:students], Implies(Not(vending_machines), soft_drinks(s) != more))) ::: (Students will not simply bring soft drinks from home if the soft drink vending machines are not placed in the cafeteria."
    ]
  },
  {
    "id": "test_963",
    "context": "Because no employee wants to be associated with bad news in the eyes of a superior, information about serious problems at lower levels is progressively softened and distorted as it goes up each step in the management hierarchy. The chief executive is, ttherefore, less well informed about problems at lower levels than are his or her subordinates at those levels.",
    "question": "The conclusion drawn above is based on the assumption that",
    "options": [
      "some employees are more concerned about truth than about the way they are perceived by their superiors",
      "problems should be solved at the level in the management hierarchy at which they occur",
      "employees should be rewarded for accurately reporting problems to their superiors",
      "chief executives obtain information about problems at lower levels from no source other than their subordinates"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([chief_executive, subordinates])\ninformation_sources = EnumSort([subordinates_only, other_sources])\nconcerns = EnumSort([truth, perception])\nreporting = Function([employees] -> [information_sources])\nconcerned_about = Function([employees] -> [concerns])\n\n# Constraints\nForAll([e:employees], concerned_about(e) == perception) ::: No employee wants to be associated with bad news in the eyes of a superior\nreporting(chief_executive) == subordinates_only ::: Information about problems is progressively softened and distorted as it goes up each step in the management hierarchy\n\n# Options\nQuestion ::: The conclusion drawn above is based on the assumption that\nis_assumption(reporting(chief_executive) == subordinates_only) ::: (d) chief executives obtain information about problems at lower levels from no source other than their subordinates"
    ]
  },
  {
    "id": "test_964",
    "context": "When individual employees are all treated equally with identical exposure to training materials, the rate, quality, and quantity of understanding will vary from worker to worker. If all workers are to master a given skill, some of them will need different types of help than others, as any experienced manager knows.",
    "question": "If the statements above are both true, which one of the following conclusions can be drawn on the basis of them?",
    "options": [
      "Unequal treatment of individual workers is required to ensure equality with respect to the job skills they master.",
      "Managers should help each of the workers to understand as much as possible.",
      "The rate and quality of understanding, with understanding defined as the acquiring of the ability to perform a skill with a given field, depend on the quantity of teaching an individual worker receives in any given field.",
      "All workers should have identical exposure to the material being taught in any given field to best understand it."
    ],
    "raw_logic_programs": [
      "# Declarations\nworkers = EnumSort([worker1, worker2, worker3, worker4, worker5])\nskills = EnumSort([skill1, skill2, skill3])\nunderstanding = Function([workers, skills] -> [int])\nhelp_needed = Function([workers, skills] -> [bool])\n\n# Constraints\nForAll([w:workers, s:skills], understanding(w, s) >= 0) ::: The rate, quality, and quantity of understanding will vary from worker to worker\nExists([w:workers, s:skills], help_needed(w, s)) ::: Some workers will need different types of help than others\n\n# Options\nQuestion ::: If the statements above are both true, which one of the following conclusions can be drawn on the basis of them?\nis_valid(Exists([w:workers, s:skills], help_needed(w, s) == True)) ::: (Unequal treatment of individual workers is required to ensure equality with respect to the job skills they master.\nis_valid(ForAll([w:workers, s:skills], understanding(w, s) >= 0)) ::: (Managers should help each of the workers to understand as much as possible.\nis_valid(ForAll([w:workers, s:skills], understanding(w, s) == understanding(w, s))) ::: (The rate and quality of understanding, with understanding defined as the acquiring of the ability to perform a skill with a given field, depend on the quantity of teaching an individual worker receives in any given field.\nis_valid(ForAll([w:workers, s:skills], understanding(w, s) == understanding(w, s))) ::: (All workers should have identical exposure to the material being taught in any given field to best understand it."
    ]
  },
  {
    "id": "test_965",
    "context": "Paretan newspaper editor: David Salino assails as distorted our quotation of remarks on Paretan values by the Qinkoan prime minister and bemoans what he sees as the likely consequences for Paretan-Qinkoan relations. Those consequences will not be our fault, however, since officials at the Qinkoan embassy and scholars at the Institute of Qinkoan Studies have all confirmed that, as printed, our quotation was an acceptable translation of the prime minister' s remarks. No newspaper can fairly be blamed for the consequences of its reporting when that reporting is accurate.",
    "question": "Which one of the following most accurately expresses the conclusion in the editor's response to David Salino?",
    "options": [
      "The newspaper's rendering of the prime minister's remarks was not inaccurate reporting according to the authorities who are in the best position to judge.",
      "Assessing the likely consequences of reporting the prime minister's remarks is irrelevant to the question of whether they ought to have been reported.",
      "The newspaper cannot be held responsible for the adverse consequences that David Salino claims will likely result from the quotation of the prime minister's remarks in the newspaper.",
      "David Salino's assessment of the likely consequences of reporting the prime minister's remarks is inaccurate."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([newspaper_rendering, consequences_irrelevant, newspaper_not_responsible, salino_inaccurate])\nauthorities = EnumSort([Qinkoan_embassy, Institute_of_Qinkoan_Studies])\njudgment = Function([authorities] -> [bool])\nresponsibility = Function([statements] -> [bool])\n\n# Constraints\nForAll([a:authorities], judgment(a) == True) ::: Officials at the Qinkoan embassy and scholars at the Institute of Qinkoan Studies have confirmed the accuracy of the newspaper's rendering\nresponsibility(newspaper_rendering) == True ::: The newspaper's rendering of the prime minister's remarks was not inaccurate reporting according to the authorities who are in the best position to judge\nresponsibility(consequences_irrelevant) == False ::: Assessing the likely consequences of reporting the prime minister's remarks is irrelevant to the question of whether they ought to have been reported\nresponsibility(newspaper_not_responsible) == True ::: The newspaper cannot be held responsible for the adverse consequences that David Salino claims will likely result from the quotation of the prime minister's remarks in the newspaper\nresponsibility(salino_inaccurate) == False ::: David Salino's assessment of the likely consequences of reporting the prime minister's remarks is inaccurate\n\n# Options\nQuestion ::: Which one of the following most accurately expresses the conclusion in the editor's response to David Salino?\nis_conclusion(responsibility(newspaper_rendering)) ::: (The newspaper's rendering of the prime minister's remarks was not inaccurate reporting according to the authorities who are in the best position to judge.\nis_conclusion(responsibility(consequences_irrelevant)) ::: (Assessing the likely consequences of reporting the prime minister's remarks is irrelevant to the question of whether they ought to have been reported.\nis_conclusion(responsibility(newspaper_not_responsible)) ::: (The newspaper cannot be held responsible for the adverse consequences that David Salino claims will likely result from the quotation of the prime minister's remarks in the newspaper.\nis_conclusion(responsibility(salino_inaccurate)) ::: (David Salino's assessment of the likely consequences of reporting the prime minister's remarks is inaccurate."
    ]
  },
  {
    "id": "test_966",
    "context": "University administrator: Graduate students incorrectly claim that teaching assistants should be considered university employees and thus entitled to the usual employee benefits. Granted, teaching assistants teach classes, for which they receive financial compensation. However, the sole purpose of having teaching assistants perform services for the university is to enable them to fund their education. If they were not pursuing degrees here or if they could otherwise fund their education, they would not hold their teaching posts at all.",
    "question": "Which one of the following, if true, most seriously weakens the administrator's argument?",
    "options": [
      "The university has proposed that in the interest of economy, 10 percent of the faculty be replaced with teaching assistants.",
      "Most teaching assistants earn stipends that exceed their cost of tuition.",
      "The university employs adjunct instructors who receive compensation similar to that of its teaching assistants.",
      "Teaching assistants work as much and as hard as do other university employees."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([graduate_students, teaching_assistants, university_employees, university])\nactions = EnumSort([teach_classes, receive_compensation, fund_education, pursue_degrees])\nbenefits = EnumSort([employee_benefits])\nconditions = EnumSort([sole_purpose, financial_compensation])\nproposals = EnumSort([replace_faculty, earn_stipends, employ_adjuncts, work_hard])\nweakens = Function([proposals] -> [bool])\n\n# Constraints\nForAll([e:entities], Implies(e == teaching_assistants, And(Exists([a:actions], a == teach_classes), Exists([a:actions], a == receive_compensation)))) ::: Teaching assistants teach classes and receive financial compensation\nForAll([e:entities], Implies(e == teaching_assistants, Exists([c:conditions], c == sole_purpose))) ::: The sole purpose of having teaching assistants perform services is to fund their education\nForAll([e:entities], Implies(e == teaching_assistants, Not(Exists([b:benefits], b == employee_benefits)))) ::: Teaching assistants are not entitled to employee benefits\n\n# Options\nQuestion ::: Which one of the following, if true, most seriously weakens the administrator's argument?\nweakens(replace_faculty) ::: (The university has proposed that in the interest of economy, 10 percent of the faculty be replaced with teaching assistants.)\nweakens(earn_stipends) ::: (Most teaching assistants earn stipends that exceed their cost of tuition.)\nweakens(employ_adjuncts) ::: (The university employs adjunct instructors who receive compensation similar to that of its teaching assistants.)\nweakens(work_hard) ::: (Teaching assistants work as much and as hard as do other university employees.)"
    ]
  },
  {
    "id": "test_967",
    "context": "Conservative: Socialists begin their arguments with an analysis of history, from which they claim to derive certain trends leading inevitably to a socialist future. But in the day-to-day progress of history there are never such discernible trends. Only in retrospect does inevitability appear, for history occurs through accident, contingency, and individual struggle. Socialist: If we thought the outcome of history were inevitable, we would not work so hard to transform the institutions of capitalist society. But to transform them we must first understand them, and we can only understand them by an analysis of their history. This is why historical analysis is important in socialist argument.",
    "question": "In the dispute the issue between the socialist and the conservative can most accurately be described as whether",
    "options": [
      "socialists analyze history in order to support the view that socialism is inevitable",
      "a socialist society is the inevitable consequence of historical trends that can be identified by an analysis of history",
      "socialists' arguments for the inevitability of socialism are justified",
      "the institutions of capitalist society stand in need of transformation"
    ],
    "raw_logic_programs": [
      "# Declarations\npositions = EnumSort([Conservative, Socialist])\nstatements = EnumSort([inevitability_of_socialism, historical_analysis, transformation_of_capitalism])\nbeliefs = Function([positions, statements] -> [bool])\n\n# Constraints\nbeliefs(Conservative, inevitability_of_socialism) == True ::: Conservative believes socialists argue for the inevitability of socialism\nbeliefs(Socialist, inevitability_of_socialism) == False ::: Socialist denies that they argue for the inevitability of socialism\nbeliefs(Socialist, historical_analysis) == True ::: Socialist believes historical analysis is important for understanding capitalism\nbeliefs(Socialist, transformation_of_capitalism) == True ::: Socialist believes in the need to transform capitalist institutions\n\n# Options\nQuestion ::: In the dispute the issue between the socialist and the conservative can most accurately be described as whether\nis_issue(beliefs(Conservative, inevitability_of_socialism) == beliefs(Socialist, inevitability_of_socialism)) ::: (A) socialists analyze history in order to support the view that socialism is inevitable\nis_issue(beliefs(Socialist, inevitability_of_socialism) == True) ::: (B) a socialist society is the inevitable consequence of historical trends that can be identified by an analysis of history\nis_issue(beliefs(Conservative, inevitability_of_socialism) == beliefs(Socialist, inevitability_of_socialism)) ::: (C) socialists' arguments for the inevitability of socialism are justified\nis_issue(beliefs(Socialist, transformation_of_capitalism) == True) ::: (D) the institutions of capitalist society stand in need of transformation"
    ]
  },
  {
    "id": "test_968",
    "context": "A large number of drivers routinely violate highway speed limits. Since driving at speeds that exceed posted limits is a significant factor in most accidents, installing devices in all cars that prevent those cars from traveling faster than the speed limit would prevent most accidents.",
    "question": "Which one of the following is an assumption on which the argument depends?",
    "options": [
      "Even if the fines for speed-limit violations were increased, the number of such violations would still not be reduced.",
      "Most drivers who exceed the speed limit do so unintentionally.",
      "Most accidents are caused by inexperienced drivers.",
      "A driver seldom needs to exceed the speed limit to avoid an accident when none of the other drivers involved are violating the speed limit."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrivers = EnumSort([driver1, driver2, ..., driverN])  # A large number of drivers\naccidents = EnumSort([accident1, accident2, ..., accidentM])  # A large number of accidents\nspeed_limit = Function([drivers] -> [bool])  # Whether a driver exceeds the speed limit\ncause_accident = Function([drivers, accidents] -> [bool])  # Whether a driver causes an accident\n\n# Constraints\nForAll([d:drivers], Implies(speed_limit(d), Exists([a:accidents], cause_accident(d, a)))) ::: Driving at speeds that exceed posted limits is a significant factor in most accidents\nForAll([d:drivers], Not(speed_limit(d))) ::: Installing devices in all cars that prevent those cars from traveling faster than the speed limit\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the argument depends?\nis_assumption(ForAll([d:drivers], Implies(Not(speed_limit(d)), Not(Exists([a:accidents], cause_accident(d, a)))))) ::: (A driver seldom needs to exceed the speed limit to avoid an accident when none of the other drivers involved are violating the speed limit)"
    ]
  },
  {
    "id": "test_969",
    "context": "A rise in the percentage of all 18-year-olds who were recruited by the armed services of a small republic between 1980 and 1986 correlates with a rise in the percentage of young people who dropped out of high school in that republic. Since 18-year-olds in the republic are generally either high school graduates or high school dropouts, the correlation leads to the conclusion that the republic' s recruitment rates for 18-year-olds depend substantially on recruitment rates for high school dropouts.",
    "question": "Which one of the following statements, if true, most weakens the argument?",
    "options": [
      "The proportion of recruits who had completed at least two years of college education was greater in 1986 than in 1980.",
      "Personnel of the republic's armed services are strongly encouraged to finish their high school education.",
      "Between 1980 and 1986 the percentage of high school graduates among 18-year-olds recruited in the republic rose sharply.",
      "Many of the high-technology systems used by the republic's armed services can be operated only by individuals who have completed a high school education."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([1980, 1986])\neducation_levels = EnumSort([high_school_graduate, high_school_dropout])\nrecruitment_rates = Function([years, education_levels] -> [float])\n\n# Constraints\nForAll([y:years], recruitment_rates(y, high_school_graduate) + recruitment_rates(y, high_school_dropout) <= 1.0) ::: 18-year-olds in the republic are generally either high school graduates or high school dropouts\n\n# Options\nQuestion ::: Which one of the following statements, if true, most weakens the argument?\nis_weakening(recruitment_rates(1986, high_school_graduate) > recruitment_rates(1980, high_school_graduate)) ::: (C) Between 1980 and 1986 the percentage of high school graduates among 18-year-olds recruited in the republic rose sharply"
    ]
  },
  {
    "id": "test_970",
    "context": "The spacing of the four holes on a fragment of a bone flute excavated at a Neanderthal campsite is just what is required to play the third through sixth notes of the diatonic scale--the seven-note musical scale used in much of Western music since the Renaissance. Musicologists ttherefore hypothesize that the diatonic musical scale was developed and used thousands of years before it was adopted by Western musicians.",
    "question": "Which of the following, if true, most strongly supports the hypothesis?",
    "options": [
      "No musical instrument that is known to have used a diatonic scale is of an earlier date than the flute found at the Neanderthal campsite.",
      "The cave-bear leg bone used to make the Neanderthal flute would have been long enough to make a flute capable of playing a complete diatonic scale.",
      "Flutes are the simplest wind instrument that can be constructed to allow playing a diatonic scale.",
      "The flute was made from a cave-bear bone and the campsite at which the flute fragment was excavated was in a cave that also contained skeletal remains of cave bears."
    ],
    "raw_logic_programs": [
      "# Declarations\nhypothesis = Bool('hypothesis')\nevidence = EnumSort([earlier_instruments, complete_scale, simplest_instrument, cave_bear_context])\nsupports = Function([evidence] -> [bool])\n\n# Constraints\nForAll([e:evidence], supports(e) == Implies(e == complete_scale, hypothesis)) ::: The cave-bear leg bone used to make the Neanderthal flute would have been long enough to make a flute capable of playing a complete diatonic scale supports the hypothesis\n\n# Options\nQuestion ::: Which of the following, if true, most strongly supports the hypothesis?\nis_strong_support(supports(earlier_instruments)) ::: (A)\nis_strong_support(supports(complete_scale)) ::: (B)\nis_strong_support(supports(simplest_instrument)) ::: (C)\nis_strong_support(supports(cave_bear_context)) ::: (D)"
    ]
  },
  {
    "id": "test_971",
    "context": "Anthropologist: All music is based on a few main systems of scale building. Clearly, if the popularity of a musical scale were a result of social conditioning, we would expect, given the diversity of social systems, a diverse mixture of diatonic and nondiatonic scales in the world' s music. Yet diatonic scales have always dominated the music of most of the world. Ttherefore, the popularity of diatonic music can be attributed only to innate dispositions of the human mind.",
    "question": "The anthropologist's argument is most vulnerable to criticism on the grounds that it fails to",
    "options": [
      "consider that innate dispositions and social conditioning could jointly affect the popularity of a type of music",
      "explain how innate dispositions increase appreciation of nondiatonic music",
      "consider the possibility that some people appreciate nondiatonic music more than they do diatonic music",
      "consider whether any appreciation of nondiatonic music is demonstrated by some nonhuman species of animals"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([innate_dispositions, social_conditioning])\nmusic_types = EnumSort([diatonic, nondiatonic])\npopularity = Function([music_types] -> [arguments])\n\n# Constraints\nForAll([m:music_types], Exists([a:arguments], popularity(m) == a)) ::: All music is based on a few main systems of scale building\npopularity(diatonic) == innate_dispositions ::: The popularity of diatonic music can be attributed only to innate dispositions of the human mind\nForAll([m:music_types], Implies(popularity(m) == social_conditioning, Exists([a:arguments], a == social_conditioning))) ::: If the popularity of a musical scale were a result of social conditioning, we would expect a diverse mixture of scales\n\n# Options\nQuestion ::: The anthropologist's argument is most vulnerable to criticism on the grounds that it fails to\nis_vulnerable(And(popularity(diatonic) == innate_dispositions, popularity(diatonic) == social_conditioning)) ::: (consider that innate dispositions and social conditioning could jointly affect the popularity of a type of music\nis_vulnerable(Exists([m:music_types], popularity(m) == innate_dispositions)) ::: (explain how innate dispositions increase appreciation of nondiatonic music\nis_vulnerable(Exists([m:music_types], popularity(m) == social_conditioning)) ::: (consider the possibility that some people appreciate nondiatonic music more than they do diatonic music\nis_vulnerable(Exists([m:music_types], popularity(m) == innate_dispositions)) ::: (consider whether any appreciation of nondiatonic music is demonstrated by some nonhuman species of animals"
    ]
  },
  {
    "id": "test_972",
    "context": "Vacuum cleaner salesperson: To prove that this Super XL vacuum cleaner is better than your old vacuum cleaner, I ran your old vacuum once over this dirty carpet. Then I ran the Super XL over the same area. All that dirt that the Super XL picked up is dirt your old vacuum left behind, proving the Super XL is the better vacuum.",
    "question": "The vacuum cleaner salesperson's argument is most vulnerable to the criticism that it",
    "options": [
      "ignores the possibility that if the Super XL had been used first it would have left behind just as much dirt as did the old vacuum cleaner",
      "takes for granted that because the Super XL outperforms one vacuum cleaner it is the best vacuum cleaner available",
      "takes for granted that the Super XL will still perform better than the old vacuum cleaner when it is the same age as the old vacuum cleaner",
      "ignores the possibility that dirt remained in the carpet even after the Super XL had been used in the test"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Super_XL, old_vacuum])\ndirt_picked_up = Function([arguments] -> [int])\n\n# Constraints\ndirt_picked_up(Super_XL) > dirt_picked_up(old_vacuum) ::: The Super XL picked up more dirt than the old vacuum cleaner\n\n# Options\nQuestion ::: The vacuum cleaner salesperson's argument is most vulnerable to the criticism that it\nis_vulnerable(Exists([d:int], And(dirt_picked_up(Super_XL) == d, dirt_picked_up(old_vacuum) == d))) ::: (A) ignores the possibility that if the Super XL had been used first it would have left behind just as much dirt as did the old vacuum cleaner\nis_vulnerable(Exists([v:arguments], And(v != old_vacuum, dirt_picked_up(Super_XL) > dirt_picked_up(v)))) ::: (B) takes for granted that because the Super XL outperforms one vacuum cleaner it is the best vacuum cleaner available\nis_vulnerable(Exists([a:int], And(dirt_picked_up(Super_XL) == a, dirt_picked_up(old_vacuum) == a))) ::: (C) takes for granted that the Super XL will still perform better than the old vacuum cleaner when it is the same age as the old vacuum cleaner\nis_vulnerable(Exists([r:int], And(dirt_picked_up(Super_XL) < r, dirt_picked_up(old_vacuum) < r))) ::: (D) ignores the possibility that dirt remained in the carpet even after the Super XL had been used in the test"
    ]
  },
  {
    "id": "test_973",
    "context": "One theory to explain the sudden extinction of all dinosaurs points to \"drug overdoses\" as the cause. Angiosperms, a certain class of plants, first appeared at the time that dinosaurs became extinct. These plants produce amino-acid-based alkaloids that are psychoactive agents. Most plant-eating mammals avoid these potentially lethal poisons because they taste bitter. Moreover, mammals have livers that help detoxify such drugs. However, dinosaurs could neither taste the bitterness nor detoxify the substance once it was ingested. This theory receives its strongest support from the fact that it helps explain why so many dinosaur fossils are found in unusual and contorted positions.",
    "question": "Which one of the following, if true, would most undermine the theory presented above?",
    "options": [
      "Some poisonous plants do not produce amino-acid-based alkaloids.",
      "Many fossils of large mammals are found in contorted positions.",
      "Carnivorous dinosaurs mostly ate other, vegetarian, dinosaurs that fed on angiosperms.",
      "Mammals sometimes die of drug overdoses from eating angiosperms."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheory = Function([bool])\nfossils = Function([species] -> [bool])\ndiet = Function([species] -> [diet_type])\ndetoxify = Function([species] -> [bool])\ntaste_bitter = Function([species] -> [bool])\nspecies = EnumSort([dinosaurs, mammals, carnivorous_dinosaurs, vegetarian_dinosaurs])\ndiet_type = EnumSort([angiosperms, other_dinosaurs])\n\n# Constraints\ntheory() == And(\n    Not(taste_bitter(dinosaurs)),  # Dinosaurs could not taste bitterness\n    Not(detoxify(dinosaurs)),  # Dinosaurs could not detoxify the substance\n    fossils(dinosaurs)  # Many dinosaur fossils are found in unusual and contorted positions\n)\n\n# Options\nQuestion ::: Which one of the following, if true, would most undermine the theory presented above?\nis_undermining(\n    Not(Exists([p:species], And(p != dinosaurs, fossils(p))))  # Some poisonous plants do not produce amino-acid-based alkaloids\n) ::: (A)\nis_undermining(\n    Exists([p:species], And(p != dinosaurs, fossils(p)))  # Many fossils of large mammals are found in contorted positions\n) ::: (B)\nis_undermining(\n    And(diet(carnivorous_dinosaurs) == other_dinosaurs, diet(vegetarian_dinosaurs) == angiosperms)  # Carnivorous dinosaurs mostly ate other, vegetarian, dinosaurs that fed on angiosperms\n) ::: (C)\nis_undermining(\n    Exists([p:species], And(p == mammals, Not(detoxify(p))))  # Mammals sometimes die of drug overdoses from eating angiosperms\n) ::: (D)"
    ]
  },
  {
    "id": "test_974",
    "context": "Since 1989 the importation of ivory from African elephants into the United States and Canada has been illegal, but the importation of ivory from the excavated tusks of ancient mammoths remains legal in both countries. Following the ban, there was a sharp increase in the importation of ivory that importers identified as mammoth ivory. In 1989 customs officials lacked a technique for distinguishing elephant ivory from that of mammoths. Just after such a technique was invented and its use by customs officials became widely known, there was a dramatic decrease in the amount of ivory presented for importation into the U. S. and Canada that was identified by importers as mammoth ivory.",
    "question": "Which one of the following is most strongly supported by the information above?",
    "options": [
      "Shortly after the importation of ivory from African elephants was outlawed, there was a sharp increase in the total amount of all ivory presented for importation into the U. S. and Canada.",
      "Most of the ivory currently imported into the U. S. and Canada comes from neither African elephants nor mammoths.",
      "Customs officials still cannot reliably distinguish elephant ivory from mammoth ivory.",
      "Much of the ivory imported as mammoth ivory just after the ban on ivory from African elephants went into effect was actually elephant ivory."
    ],
    "raw_logic_programs": [
      "# Declarations\nivory_types = EnumSort([elephant_ivory, mammoth_ivory])\ncountries = EnumSort([US, Canada])\nevents = EnumSort([ban_1989, technique_invented])\nimported_ivory = Function([ivory_types, countries, events] -> [int])\n\n# Constraints\nimported_ivory(elephant_ivory, US, ban_1989) == 0 ::: Since 1989 the importation of ivory from African elephants into the United States has been illegal\nimported_ivory(elephant_ivory, Canada, ban_1989) == 0 ::: Since 1989 the importation of ivory from African elephants into Canada has been illegal\nimported_ivory(mammoth_ivory, US, ban_1989) > imported_ivory(mammoth_ivory, US, technique_invented) ::: Following the ban, there was a sharp increase in the importation of ivory identified as mammoth ivory, but it decreased after the technique was invented\nimported_ivory(mammoth_ivory, Canada, ban_1989) > imported_ivory(mammoth_ivory, Canada, technique_invented) ::: Following the ban, there was a sharp increase in the importation of ivory identified as mammoth ivory, but it decreased after the technique was invented\n\n# Options\nQuestion ::: Which one of the following is most strongly supported by the information above?\nis_supported(imported_ivory(mammoth_ivory, US, ban_1989) + imported_ivory(mammoth_ivory, Canada, ban_1989) > imported_ivory(mammoth_ivory, US, technique_invented) + imported_ivory(mammoth_ivory, Canada, technique_invented)) ::: (Shortly after the importation of ivory from African elephants was outlawed, there was a sharp increase in the total amount of all ivory presented for importation into the U. S. and Canada.\nis_supported(imported_ivory(elephant_ivory, US, technique_invented) == 0 and imported_ivory(elephant_ivory, Canada, technique_invented) == 0) ::: (Most of the ivory currently imported into the U. S. and Canada comes from neither African elephants nor mammoths.\nis_supported(False) ::: (Customs officials still cannot reliably distinguish elephant ivory from mammoth ivory.\nis_supported(imported_ivory(mammoth_ivory, US, ban_1989) > imported_ivory(mammoth_ivory, US, technique_invented) and imported_ivory(mammoth_ivory, Canada, ban_1989) > imported_ivory(mammoth_ivory, Canada, technique_invented)) ::: (Much of the ivory imported as mammoth ivory just after the ban on ivory from African elephants went into effect was actually elephant ivory."
    ]
  },
  {
    "id": "test_975",
    "context": "The government health service has said that it definitely will not pay for patients to take the influenza medicine Antinfia until the drug' s manufacturer, PharmCo, provides detailed information about Antinfia' s cost-effectiveness. PharmCo has responded that obtaining such information would require massive clinical trials. These trials cannot be performed until the drug is in widespread circulation, something that will happen only if the government health service pays for Antinfia.",
    "question": "If the statements of both the government health service and PharmCo are true, which one of the following is most likely to also be true?",
    "options": [
      "The government health service never pays for any medicine unless that medicine has been shown to be cost-effective.",
      "The government health service should pay for patients to take Antinfia.",
      "Antinfia will never be in widespread circulation.",
      "If the government health service does not pay for Antinfia, then many patients will pay for Antinfia themselves."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([government_health_service, PharmCo, Antinfia])\nactions = EnumSort([pay_for, provide_information, perform_trials, widespread_circulation])\nconditions = EnumSort([cost_effectiveness_shown])\n\n# Constraints\nNot(pay_for(government_health_service, Antinfia)) -> Not(provide_information(PharmCo, Antinfia)) ::: The government health service will not pay for Antinfia until PharmCo provides cost-effectiveness information\nprovide_information(PharmCo, Antinfia) -> perform_trials(PharmCo, Antinfia) ::: PharmCo needs to perform trials to provide cost-effectiveness information\nperform_trials(PharmCo, Antinfia) -> widespread_circulation(Antinfia) ::: Trials can only be performed if Antinfia is in widespread circulation\nwidespread_circulation(Antinfia) -> pay_for(government_health_service, Antinfia) ::: Antinfia will be in widespread circulation only if the government health service pays for it\n\n# Options\nQuestion ::: If the statements of both the government health service and PharmCo are true, which one of the following is most likely to also be true?\nis_likely(Not(widespread_circulation(Antinfia))) ::: (Antinfia will never be in widespread circulation)\nis_likely(pay_for(government_health_service, Antinfia)) ::: (The government health service should pay for patients to take Antinfia)\nis_likely(Not(pay_for(government_health_service, Antinfia)) -> pay_for(patients, Antinfia)) ::: (If the government health service does not pay for Antinfia, then many patients will pay for Antinfia themselves)\nis_likely(Not(pay_for(government_health_service, any_medicine)) -> Not(cost_effectiveness_shown(any_medicine))) ::: (The government health service never pays for any medicine unless that medicine has been shown to be cost-effective)"
    ]
  },
  {
    "id": "test_976",
    "context": "Environmentalist: The excessive atmospheric buildup of carbon dioxide, which threatens the welfare of everyone in the world, can be stopped only by reducing the burning of fossil fuels. Any country imposing the strict emission standards on the industrial burning of such fuels that this reduction requires, however, would thereby reduce its gross national product. No nation will be willing to bear singlehandedly the costs of an action that will benefit everyone. It is obvious, then, that the catastrophic consequences of excessive atmospheric carbon dioxide are unavoidable unless __.",
    "question": "Which one of the following most logically completes the argument?",
    "options": [
      "all nations become less concerned with pollution than with the economic burdens of preventing it",
      "multinational corporations agree to voluntary strict emission standards",
      "distrust among nations is eliminated",
      "international agreements produce industrial emission standards"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([Country1, Country2, ..., CountryN])\nactions = EnumSort([reduce_fossil_fuels, impose_strict_standards, reduce_GNP])\nglobal_consequences = EnumSort([catastrophic_consequences, avoid_consequences])\nagreements = EnumSort([international_agreement, voluntary_standards])\n\n# Constraints\nForAll([c:countries], Implies(impose_strict_standards(c), reduce_GNP(c))) ::: Any country imposing the strict emission standards on the industrial burning of such fuels that this reduction requires, however, would thereby reduce its gross national product\nForAll([c:countries], Not(reduce_fossil_fuels(c))) ::: No nation will be willing to bear singlehandedly the costs of an action that will benefit everyone\nExists([c:countries], reduce_fossil_fuels(c)) <=> Not(global_consequences == catastrophic_consequences) ::: The excessive atmospheric buildup of carbon dioxide can be stopped only by reducing the burning of fossil fuels\n\n# Options\nQuestion ::: Which one of the following most logically completes the argument?\nis_logical_completion(global_consequences == avoid_consequences, ForAll([c:countries], Not(reduce_fossil_fuels(c)))) ::: (A) all nations become less concerned with pollution than with the economic burdens of preventing it\nis_logical_completion(global_consequences == avoid_consequences, Exists([a:agreements], a == voluntary_standards)) ::: (B) multinational corporations agree to voluntary strict emission standards\nis_logical_completion(global_consequences == avoid_consequences, ForAll([c1:countries, c2:countries], Not(distrust(c1, c2)))) ::: (C) distrust among nations is eliminated\nis_logical_completion(global_consequences == avoid_consequences, Exists([a:agreements], a == international_agreement)) ::: (D) international agreements produce industrial emission standards"
    ]
  },
  {
    "id": "test_977",
    "context": "Politician: The principle of net neutrality requires Internet service providers to provide access to all content without any discrimination. Repealing net neutrality would allow Internet service providers to slow down speeds or charge additional fees for certain content at will. The largest Internet service providers also own the most popular news networks. Consequently, the removal of net neutrality would threaten the integrity of American democracy.",
    "question": "The strength of the argument depends on which one of the following being true?",
    "options": [
      "American democracy is dependent on fast Internet connections.",
      "American de mocracy is dependent on news networks free from content discrimination.",
      "American democracy is dependent on repealing net neutrality.",
      "American democracy is dependent on universal access to the Internet."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([net_neutrality, isp_control, news_networks, democracy_integrity])\ndepends_on = Function([propositions] -> [bool])\n\n# Constraints\ndepends_on(net_neutrality) ::: The principle of net neutrality requires Internet service providers to provide access to all content without any discrimination\ndepends_on(isp_control) ::: Repealing net neutrality would allow Internet service providers to slow down speeds or charge additional fees for certain content at will\ndepends_on(news_networks) ::: The largest Internet service providers also own the most popular news networks\ndepends_on(democracy_integrity) ::: Consequently, the removal of net neutrality would threaten the integrity of American democracy\n\n# Options\nQuestion ::: The strength of the argument depends on which one of the following being true?\nis_necessary(depends_on(democracy_integrity) == depends_on(news_networks)) ::: (A) American democracy is dependent on fast Internet connections.\nis_necessary(depends_on(democracy_integrity) == depends_on(news_networks)) ::: (B) American democracy is dependent on news networks free from content discrimination.\nis_necessary(depends_on(democracy_integrity) == depends_on(net_neutrality)) ::: (C) American democracy is dependent on repealing net neutrality.\nis_necessary(depends_on(democracy_integrity) == depends_on(isp_control)) ::: (D) American democracy is dependent on universal access to the Internet."
    ]
  },
  {
    "id": "test_978",
    "context": "Because of the recent recession in Country A, most magazines published there have experienced decreases in advertising revenue, so much so that the survival of the most widely read magazines is in grave doubt. At the same time, however, more people in Country A are reading more magazines than ever before, and the number of financially successful magazines in Country A is greater than ever.",
    "question": "Which one the following, if true, most helps to resolve the apparent discrepancy in the information above?",
    "options": [
      "Because of the recession, people in Country A have cut back on magazine subscriptions and are reading borrowed magazines.",
      "Advertising is the main source of revenue only for the most widely read magazines; other magazines rely on circulation for their revenue.",
      "The audience for a successful television show far exceeds the readership of even the most widely read magazine.",
      "Most magazines reduce the amount they charge for advertisements during a recession."
    ],
    "raw_logic_programs": [
      "# Declarations\nmagazines = EnumSort([widely_read, other])\nrevenue_sources = EnumSort([advertising, circulation])\nfinancial_status = EnumSort([successful, struggling])\nreadership = Function([magazines] -> [int])\nrevenue = Function([magazines] -> [revenue_sources])\nstatus = Function([magazines] -> [financial_status])\n\n# Constraints\nForAll([m:magazines], readership(m) > 0) ::: More people in Country A are reading more magazines than ever before\nCount([m:magazines], status(m) == successful) > 0 ::: The number of financially successful magazines in Country A is greater than ever\nstatus(widely_read) == struggling ::: The survival of the most widely read magazines is in grave doubt\nrevenue(widely_read) == advertising ::: Advertising is the main source of revenue for the most widely read magazines\n\n# Options\nQuestion ::: Which one the following, if true, most helps to resolve the apparent discrepancy in the information above?\nis_resolving(And(revenue(other) == circulation, status(other) == successful)) ::: (A) Advertising is the main source of revenue only for the most widely read magazines; other magazines rely on circulation for their revenue\nis_resolving(ForAll([m:magazines], readership(m) > 0)) ::: (B) Because of the recession, people in Country A have cut back on magazine subscriptions and are reading borrowed magazines\nis_resolving(False) ::: (C) The audience for a successful television show far exceeds the readership of even the most widely read magazine\nis_resolving(False) ::: (D) Most magazines reduce the amount they charge for advertisements during a recession"
    ]
  },
  {
    "id": "test_979",
    "context": "Those who support the continued reading and performance of Shakespeare' s plays maintain that in England appreciation for his work has always extended beyond educated elites and that ever since Shakespeare' s own time his plays have always been known and loved by comparatively uneducated people. Skepticism about this claim is borne out by examining early eighteenth-century editions of the plays. These books, with their fine paper and good bindings, must have been far beyond the reach of people of ordinary means.",
    "question": "The main point of the argument is to",
    "options": [
      "suggest that knowledge of Shakespeare's plays is a suitable criterion for distinguishing the educated elite from other members of English society",
      "demonstrate that since Shakespeare's time the people who have known and loved his work have all been members of educated elites",
      "provide evidence that at some time in the past appreciation for Shakespeare's plays was confined to educated elites",
      "confirm the skepticism of the educated elite concerning the worth of Shakespeare's plays"
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([supporters, skeptics])\ntime_periods = EnumSort([Shakespeare_time, early_18th_century])\naudiences = EnumSort([educated_elites, uneducated_people])\nappreciation = Function([claims, time_periods, audiences] -> [bool])\n\n# Constraints\nappreciation(supporters, Shakespeare_time, uneducated_people) ::: Supporters claim that since Shakespeare's time, his plays have been known and loved by uneducated people\nNot(appreciation(skeptics, early_18th_century, uneducated_people)) ::: Skeptics argue that in the early 18th century, appreciation was confined to educated elites\n\n# Options\nQuestion ::: The main point of the argument is to\nis_main_point(appreciation(skeptics, early_18th_century, educated_elites)) ::: (A) suggest that knowledge of Shakespeare's plays is a suitable criterion for distinguishing the educated elite from other members of English society\nis_main_point(Not(appreciation(supporters, Shakespeare_time, uneducated_people))) ::: (B) demonstrate that since Shakespeare's time the people who have known and loved his work have all been members of educated elites\nis_main_point(Not(appreciation(skeptics, early_18th_century, uneducated_people))) ::: (C) provide evidence that at some time in the past appreciation for Shakespeare's plays was confined to educated elites\nis_main_point(Not(appreciation(supporters, early_18th_century, educated_elites))) ::: (D) confirm the skepticism of the educated elite concerning the worth of Shakespeare's plays"
    ]
  },
  {
    "id": "test_980",
    "context": "Historian: It is unlikely that someone would see history as the working out of moral themes unless he or she held clear and unambiguous moral beliefs. However, one' s inclination to morally judge human behavior decreases as one' s knowledge of history increases. Consequently, the more history a person knows, the less likely that person is to view history as the working out of moral themes.",
    "question": "The conclusion of the argument is properly drawn if which one of the following is assumed?",
    "options": [
      "The less inclined one is to morally judge human behavior, the less likely it is that one holds clear and unambiguous moral beliefs.",
      "People tend to be less objective regarding a subject about which they possess extensive knowledge than regarding a subject about which they do not possess extensive knowledge.",
      "Historical events that fail to elicit moral disapproval are generally not considered to exemplify a moral theme.",
      "The more clear and unambiguous one's moral beliefs, the more likely one is to view history as the working out of moral themes."
    ],
    "raw_logic_programs": [
      "# Declarations\n- beliefs = EnumSort([clear_unambiguous, not_clear_unambiguous])\n- inclination = EnumSort([high, low])\n- knowledge = EnumSort([extensive, limited])\n- view_history = EnumSort([moral_themes, not_moral_themes])\n\n# Constraints\n- ForAll([b:beliefs], Implies(b == clear_unambiguous, view_history == moral_themes)) ::: It is unlikely that someone would see history as the working out of moral themes unless he or she held clear and unambiguous moral beliefs.\n- ForAll([k:knowledge], Implies(k == extensive, inclination == low)) ::: One's inclination to morally judge human behavior decreases as one's knowledge of history increases.\n\n# Options\n- Question ::: The conclusion of the argument is properly drawn if which one of the following is assumed?\n- is_assumed(Implies(inclination == low, beliefs == not_clear_unambiguous)) ::: (A) The less inclined one is to morally judge human behavior, the less likely it is that one holds clear and unambiguous moral beliefs.\n- is_assumed(False) ::: (B) People tend to be less objective regarding a subject about which they possess extensive knowledge than regarding a subject about which they do not possess extensive knowledge.\n- is_assumed(False) ::: (C) Historical events that fail to elicit moral disapproval are generally not considered to exemplify a moral theme.\n- is_assumed(Implies(beliefs == clear_unambiguous, view_history == moral_themes)) ::: (D) The more clear and unambiguous one's moral beliefs, the more likely one is to view history as the working out of moral themes."
    ]
  },
  {
    "id": "test_981",
    "context": "Wood-frame houses withstand earthquakes far better than masonry houses do, because wooden frames have some flexibility; their walls can better handle lateral forces. In a recent earthquake, however, a wood-frame house was destroyed, while the masonry house next door was undamaged.",
    "question": "Which one of the following, if true, most helps to explain the results of the earthquake described above?",
    "options": [
      "No structure is completely impervious to the destructive lateral forces exerted by earthquakes.",
      "In earthquake-prone areas, there are many more wood-frame houses than masonry houses.",
      "The masonry house was far more expensive than the wood-frame house.",
      "The walls of the wood-frame house had once been damaged in a flood."
    ],
    "raw_logic_programs": [
      "# Declarations\nhouses = EnumSort([wood_frame, masonry])\nevents = EnumSort([earthquake, flood])\ndamaged = Function([houses, events] -> [bool])\n\n# Constraints\ndamaged(wood_frame, earthquake) == True ::: A wood-frame house was destroyed in the earthquake\ndamaged(masonry, earthquake) == False ::: The masonry house next door was undamaged\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the results of the earthquake described above?\nis_explanation(damaged(wood_frame, flood) == True) ::: (D) The walls of the wood-frame house had once been damaged in a flood\nis_explanation(True) ::: (A) No structure is completely impervious to the destructive lateral forces exerted by earthquakes\nis_explanation(True) ::: (B) In earthquake-prone areas, there are many more wood-frame houses than masonry houses\nis_explanation(True) ::: (C) The masonry house was far more expensive than the wood-frame house"
    ]
  },
  {
    "id": "test_982",
    "context": "The city of Littleville wishes to institute a congestion charge, in which cars driving through the most crowded streets of Littleville, in the downtown area, would pay a fee when they did so. Proponents argue that, in these circumstances, most of the drivers in the city would choose to use outlying roads. This reduction in the traffic in downtown Littleville would help reduce the number of car accidents in the area.",
    "question": "The conclusion drawn in the above argument depends on which of the following assumptions?",
    "options": [
      "Implementing a congestion charge in Littleville would eventually create such traffic on the outlying roads that the number of car accidents would increase.",
      "Drivers in Littleville who can afford the congestion charge are less likely to be involved in a car accident than those who cannot.",
      "Cars driving through downtown Littleville are at greater risk of being involved in a car accident than those that use outlying roads.",
      "Most of Littleville's outlying roads are equipped only to handle cars and not the kind of commercial trucks that often have to make downtown deliveries."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrivers = EnumSort([afford_charge, cannot_afford_charge])\nroads = EnumSort([downtown, outlying])\nrisk = Function([roads] -> [int])\ntraffic = Function([roads] -> [int])\n\n# Constraints\ntraffic(downtown) > traffic(outlying) ::: Most of the drivers in the city would choose to use outlying roads\nrisk(downtown) > risk(outlying) ::: Cars driving through downtown Littleville are at greater risk of being involved in a car accident than those that use outlying roads\n\n# Options\nQuestion ::: The conclusion drawn in the above argument depends on which of the following assumptions?\nis_assumption(traffic(outlying) < traffic(downtown)) ::: (A)\nis_assumption(risk(afford_charge) < risk(cannot_afford_charge)) ::: (B)\nis_assumption(risk(downtown) > risk(outlying)) ::: (C)\nis_assumption(traffic(outlying) < traffic(downtown)) ::: (D)"
    ]
  },
  {
    "id": "test_983",
    "context": "Columnist: A democratic society cannot exist unless its citizens have established strong bonds of mutual trust. Such bonds are formed and strengthened only by a participation in civic organizations, political parties, and other groups outside the family. It is obvious then that widespread reliance on movies and electronic media for entertainment has an inherently corrosive effect on democracy.",
    "question": "Which one of the following is an assumption on which the columnist's argument depends?",
    "options": [
      "Newspapers and other forms of print media strengthen, rather than weaken, democratic institutions.",
      "Anyone who relies on movies and electronic media for entertainment is unable to form a strong bond of mutual trust with a citizen.",
      "Civic organizations cannot usefully advance their goals by using electronic media.",
      "Relying on movies and electronic media for entertainment generally makes people less likely to participate in groups outside their families."
    ],
    "raw_logic_programs": [
      "# Declarations\ncitizens = EnumSort([citizen])\nactivities = EnumSort([civic_organizations, political_parties, other_groups, movies, electronic_media])\nparticipates = Function([citizens, activities] -> [bool])\ntrust_bonds = Function([citizens] -> [bool])\n\n# Constraints\nForAll([c:citizens], Implies(trust_bonds(c), Exists([a:activities], participates(c, a)))) ::: Strong bonds of mutual trust are formed and strengthened by participation in civic organizations, political parties, and other groups outside the family\nForAll([c:citizens], Not(And(participates(c, movies), participates(c, electronic_media)))) ::: Widespread reliance on movies and electronic media for entertainment has an inherently corrosive effect on democracy\n\n# Options\nQuestion ::: Which one of the following is an assumption on which the columnist's argument depends?\nis_assumption(ForAll([c:citizens], Implies(participates(c, movies), Not(trust_bonds(c))))) ::: (A) Newspapers and other forms of print media strengthen, rather than weaken, democratic institutions.\nis_assumption(ForAll([c:citizens], Implies(participates(c, electronic_media), Not(trust_bonds(c))))) ::: (B) Anyone who relies on movies and electronic media for entertainment is unable to form a strong bond of mutual trust with a citizen.\nis_assumption(ForAll([c:citizens], Implies(participates(c, civic_organizations), Not(participates(c, electronic_media))))) ::: (C) Civic organizations cannot usefully advance their goals by using electronic media.\nis_assumption(ForAll([c:citizens], Implies(participates(c, movies), Not(participates(c, civic_organizations))))) ::: (D) Relying on movies and electronic media for entertainment generally makes people less likely to participate in groups outside their families."
    ]
  },
  {
    "id": "test_984",
    "context": "\"Hot spot\" is a term that ecologists use to describe those habitats with the greatest concentrations of species found only in one place -- so-called \"endemic\" species. Many of these hot spots are vulnerable to habitat loss due to commercial development. Furthermore, loss of endemic species accounts for most modern-day extinctions. Thus, given that only a limited number of environmental battles can be waged, it would be reasonable for organizations dedicated to preserving species to __.",
    "question": "Which one of the following most logically completes the argument?",
    "options": [
      "concentrate their resources on protecting hot spot habitats",
      "try to help only those species who are threatened with extinction because of habitat loss",
      "treat all endemic species as equally valuable and equally in need of preservation",
      "accept that most endemic species will become extinct"
    ],
    "raw_logic_programs": [
      "# Declarations\nhabitats = EnumSort([hot_spot, non_hot_spot])\nspecies = EnumSort([endemic, non_endemic])\nthreats = EnumSort([habitat_loss, other_threats])\nactions = EnumSort([protect_hot_spots, help_threatened_species, treat_equally, accept_extinction])\n\n# Constraints\nForAll([h:habitats], Exists([s:species], And(s == endemic, h == hot_spot))) ::: \"Hot spot\" is a term that ecologists use to describe those habitats with the greatest concentrations of species found only in one place -- so-called \"endemic\" species\nForAll([s:species], Implies(s == endemic, Exists([t:threats], t == habitat_loss))) ::: Many of these hot spots are vulnerable to habitat loss due to commercial development\nForAll([s:species], Implies(s == endemic, Exists([t:threats], t == habitat_loss))) ::: Loss of endemic species accounts for most modern-day extinctions\n\n# Options\nQuestion ::: Which one of the following most logically completes the argument?\nis_logical(actions == protect_hot_spots) ::: (A) concentrate their resources on protecting hot spot habitats\nis_logical(actions == help_threatened_species) ::: (B) try to help only those species who are threatened with extinction because of habitat loss\nis_logical(actions == treat_equally) ::: (C) treat all endemic species as equally valuable and equally in need of preservation\nis_logical(actions == accept_extinction) ::: (D) accept that most endemic species will become extinct"
    ]
  },
  {
    "id": "test_985",
    "context": "Human settlement of previously uninhabited areas tends to endanger species of wildlife. However, the Mississippi kite, a bird found on the prairies of North America, flourishes in areas that people have settled. In fact, during the five years since 1985 its population has risen far more rapidly in towns than in rural areas.",
    "question": "Which one of the following, if true, most helps to explain why the Mississippi kite population does not follow the usual pattern?",
    "options": [
      "Towns on the prairies tend to be small, with a low density of human population and large numbers of wild birds and animals.",
      "Trees are denser in towns than elsewhere on the prairie, and these denser trees provide greater protection from hail and windstorms for kites' nests and eggs.",
      "Residents of prairie towns have been setting off loud firecrackers near kites' roosting spots because of the birds' habit of diving at people and frightening them.",
      "Wildlife such as pigeons and raccoons had already adapted successfully to towns and cities long before there were towns on the North American prairies."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([Mississippi_kite])\nareas = EnumSort([towns, rural_areas])\nfactors = EnumSort([human_population_density, tree_density, disturbances, adaptation])\npopulation_change = Function([species, areas] -> [int])\nfactor_effect = Function([factors, areas] -> [bool])\n\n# Constraints\npopulation_change(Mississippi_kite, towns) > population_change(Mississippi_kite, rural_areas) ::: During the five years since 1985, the Mississippi kite population has risen far more rapidly in towns than in rural areas.\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain why the Mississippi kite population does not follow the usual pattern?\nfactor_effect(tree_density, towns) == True ::: (B) Trees are denser in towns than elsewhere on the prairie, and these denser trees provide greater protection from hail and windstorms for kites' nests and eggs.\nfactor_effect(human_population_density, towns) == False ::: (A) Towns on the prairies tend to be small, with a low density of human population and large numbers of wild birds and animals.\nfactor_effect(disturbances, towns) == True ::: (C) Residents of prairie towns have been setting off loud firecrackers near kites' roosting spots because of the birds' habit of diving at people and frightening them.\nfactor_effect(adaptation, towns) == True ::: (D) Wildlife such as pigeons and raccoons had already adapted successfully to towns and cities long before there were towns on the North American prairies."
    ]
  },
  {
    "id": "test_986",
    "context": "Many people do not understand themselves, nor do they try to gain self-understanding. These people might try to understand others, but these attempts are sure to fail, because without self-understanding it is impossible to understand others. It is clear from this that anyone who lacks self-understanding will be incapable of understanding others.",
    "question": "The reasoning in the argument is flawed because the argument",
    "options": [
      "makes use of the inherently vague term \"self- understanding\" without defining that term",
      "mistakes something that is necessary to bring about a situation for something that in itself is enough to bring about that situation",
      "draws a conclusion that simply restates a claim given in support of that conclusion",
      "blames people for something for which they cannot legitimately be held responsible"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nunderstands_self = Function([people] -> [bool])\nunderstands_others = Function([people] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(Not(understands_self(p)), Not(understands_others(p)))) ::: without self-understanding it is impossible to understand others\n\n# Options\nQuestion ::: The reasoning in the argument is flawed because the argument\nis_flawed_due_to_vague_term(\"self-understanding\") ::: (A) makes use of the inherently vague term \"self-understanding\" without defining that term\nis_flawed_due_to_necessity_vs_sufficiency() ::: (B) mistakes something that is necessary to bring about a situation for something that in itself is enough to bring about that situation\nis_flawed_due_to_restatement() ::: (C) draws a conclusion that simply restates a claim given in support of that conclusion\nis_flawed_due_to_unfair_blame() ::: (D) blames people for something for which they cannot legitimately be held responsible"
    ]
  },
  {
    "id": "test_987",
    "context": "Dr. Bradshaw: Gastric bypass surgery will provide sustained health and weight-loss benefits in morbidly obese patients, since it allows morbidly obese patients to have the size of their stomachs reduced to allow them to consume less food, and also allows food to bypass part of the small intestine, ensuring that fewer calories are absorbed. Morbidly obese patients will realize more sustained benefit from gastric bypass surgery than any other treatment regimen could provide. Dr. Hobbes: Not so. Gastric bypass surgery might help morbidly obese patients initially. However, patients undergoing this surgery will eventually become extremely dehydrated and deprived of critical nutrients needed to maintain their health due to the vastly decreased amount of food and beverages they can consume. Eventually, most will develop severe complications from dehydration coupled with nutrient loss. Hence, sustained health benefits will not be obtained.",
    "question": "Dr. Hobbes uses which one of the following strategies in responding to Dr. Bradshaw?",
    "options": [
      "invoking medical statistics that cast doubt on the premises of Dr. Bradshaw's argument",
      "characterizing the surgery described by Dr. Bradshaw as one step in a process that often leads to an undesirable end",
      "providing grounds for dismissing Dr. Bradshaw's interpretation of a key term",
      "citing evidence that Dr. Bradshaw lacks the professional training to judge the case at issue"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Dr_Bradshaw, Dr_Hobbes])\nstrategies = EnumSort([medical_statistics, process_characterization, dismissing_interpretation, questioning_training])\nuses_strategy = Function([arguments] -> [strategies])\n\n# Constraints\nuses_strategy(Dr_Bradshaw) == None ::: Dr. Bradshaw presents an argument in favor of gastric bypass surgery\nuses_strategy(Dr_Hobbes) == process_characterization ::: Dr. Hobbes characterizes the surgery as leading to an undesirable end\n\n# Options\nQuestion ::: Dr. Hobbes uses which one of the following strategies in responding to Dr. Bradshaw?\nis_correct(uses_strategy(Dr_Hobbes) == medical_statistics) ::: (invoking medical statistics that cast doubt on the premises of Dr. Bradshaw's argument)\nis_correct(uses_strategy(Dr_Hobbes) == process_characterization) ::: (characterizing the surgery described by Dr. Bradshaw as one step in a process that often leads to an undesirable end)\nis_correct(uses_strategy(Dr_Hobbes) == dismissing_interpretation) ::: (providing grounds for dismissing Dr. Bradshaw's interpretation of a key term)\nis_correct(uses_strategy(Dr_Hobbes) == questioning_training) ::: (citing evidence that Dr. Bradshaw lacks the professional training to judge the case at issue)"
    ]
  },
  {
    "id": "test_988",
    "context": "In an attempt to create brand loyalties, television advertisers currently target young adults, ages 18 to 25, because on average they have higher discretionary income than do consumers of other age groups. But since the average discretionary income of those over 65 will soon be greater than that of young adults, in the future television advertisers would do better to target consumers over 65 instead.",
    "question": "Which one of the following, if true, would most weaken the argument above?",
    "options": [
      "The older a consumer is, the more likely he or she is to have already established brand loyalties.",
      "The greater a consumer's discretionary income, the more likely advertising is to encourage that consumer to buy.",
      "Consumers over the age of 65 tend to watch different television shows than do young adults.",
      "The number of consumers over the age of 65 is increasing more rapidly than is the number of young adults."
    ],
    "raw_logic_programs": [
      "# Declarations\nage_groups = EnumSort([young_adults, over_65])\nfactors = EnumSort([discretionary_income, brand_loyalties, television_shows, population_growth])\ntargeting = Function([age_groups, factors] -> [bool])\n\n# Constraints\ntargeting(young_adults, discretionary_income) ::: young adults have higher discretionary income than other age groups\ntargeting(over_65, discretionary_income) ::: over 65 will soon have greater discretionary income than young adults\n\n# Options\nQuestion ::: Which one of the following, if true, would most weaken the argument above?\nImplies(targeting(over_65, brand_loyalties), Not(targeting(over_65, discretionary_income))) ::: (A) The older a consumer is, the more likely he or she is to have already established brand loyalties.\nImplies(targeting(over_65, discretionary_income), targeting(over_65, brand_loyalties)) ::: (B) The greater a consumer's discretionary income, the more likely advertising is to encourage that consumer to buy.\nImplies(targeting(over_65, television_shows), Not(targeting(young_adults, television_shows))) ::: (C) Consumers over the age of 65 tend to watch different television shows than do young adults.\nImplies(targeting(over_65, population_growth), targeting(over_65, discretionary_income)) ::: (D) The number of consumers over the age of 65 is increasing more rapidly than is the number of young adults."
    ]
  },
  {
    "id": "test_989",
    "context": "In setting environmental standards for industry and others to meet, it is inadvisable to require the best results that state-Of-the-art technology can achieve. Current technology is able to detect and eliminate even extremely minute amounts of contaminants, but at a cost that is exorbitant relative to the improvement achieved. So it would be reasonable instead to set standards by taking into account all of the current and future risks involved.",
    "question": "The argument given concerning the reasonable way to set standards presupposes that",
    "options": [
      "the only contaminants worth measuring are generated by industry",
      "it is not costly to prevent large amounts of contaminants from entering the environment",
      "minute amounts of some contaminants can be poisonous",
      "there are effective ways to take into account all of the relevant risks posed by allowing different levels of contaminants"
    ],
    "raw_logic_programs": [
      "# Declarations\ncontaminants = EnumSort([minute, large])\nsources = EnumSort([industry, others])\nrisks = EnumSort([current, future])\nstandards = Function([contaminants, sources, risks] -> [bool])\n\n# Constraints\nForAll([c:contaminants, s:sources, r:risks], standards(c, s, r) == True) ::: standards should take into account all of the current and future risks involved\n\n# Options\nQuestion ::: The argument given concerning the reasonable way to set standards presupposes that\nis_presupposed(Exists([r:risks], standards(minute, industry, r))) ::: (the only contaminants worth measuring are generated by industry)\nis_presupposed(Exists([c:contaminants], standards(c, industry, current) == False)) ::: (it is not costly to prevent large amounts of contaminants from entering the environment)\nis_presupposed(Exists([r:risks], standards(minute, industry, r) == True)) ::: (minute amounts of some contaminants can be poisonous)\nis_presupposed(Exists([c:contaminants, s:sources], standards(c, s, current) == True)) ::: (there are effective ways to take into account all of the relevant risks posed by allowing different levels of contaminants)"
    ]
  },
  {
    "id": "test_990",
    "context": "Ashley: Words like \"of\" and \"upon, \" unlike \"pencil\" and \"shirt, \" do not refer to anything. Joshua: I agree; and since such words are meaningless, they should be abandoned.",
    "question": "Joshua's remarks indicate that he interpreted Ashley's statement to imply that",
    "options": [
      "only words that refer to something have meaning",
      "words that refer to something are meaningful",
      "words that are not useful are meaningless",
      "all words that refer to something are useful"
    ],
    "raw_logic_programs": [
      "# Declarations\nwords = EnumSort([of, upon, pencil, shirt])\nrefers_to_something = Function([words] -> [bool])\nmeaningful = Function([words] -> [bool])\n\n# Constraints\nForAll([w:words], Implies(Or(w == of, w == upon), Not(refers_to_something(w)))) ::: Words like \"of\" and \"upon\" do not refer to anything\nForAll([w:words], Implies(Or(w == pencil, w == shirt), refers_to_something(w))) ::: Words like \"pencil\" and \"shirt\" refer to something\n\n# Options\nQuestion ::: Joshua's remarks indicate that he interpreted Ashley's statement to imply that\nis_interpreted(ForAll([w:words], Implies(Not(refers_to_something(w)), Not(meaningful(w))))) ::: (only words that refer to something have meaning)\nis_interpreted(ForAll([w:words], Implies(refers_to_something(w), meaningful(w)))) ::: (words that refer to something are meaningful)\nis_interpreted(ForAll([w:words], Implies(Not(meaningful(w)), Not(refers_to_something(w))))) ::: (words that are not useful are meaningless)\nis_interpreted(ForAll([w:words], Implies(refers_to_something(w), meaningful(w)))) ::: (all words that refer to something are useful)"
    ]
  },
  {
    "id": "test_991",
    "context": "Legal rules are expressed in general terms. They concern classifications of persons and actions and they prescribe legal consequences for persons and actions falling into the relevant categories. The application of a rule to a particular case, ttherefore, involves a decision on whether the facts of that case fall within the categories mentioned in the rule. This decision establishes the legal effect of what happened rather than any matter of fact.",
    "question": "The passage provides the most support for which one of the following?",
    "options": [
      "Making legal decisions does not involve matters of fact.",
      "The application of a rule to a particular case need not be left to a judge.",
      "Matters of fact, like legal rules, can sometimes be expressed in general terms.",
      "Whether the facts of a case fall into a relevant category is not itself a matter of fact."
    ],
    "raw_logic_programs": [
      "# Declarations\ncategories = EnumSort([persons, actions])\nconsequences = EnumSort([legal_consequences])\ncases = EnumSort([particular_case])\nfacts = Function([cases] -> [categories])\nlegal_effect = Function([cases] -> [consequences])\n\n# Constraints\nForAll([c:cases], Exists([cat:categories], facts(c) == cat)) ::: The application of a rule to a particular case involves a decision on whether the facts of that case fall within the categories mentioned in the rule\nForAll([c:cases], Exists([con:consequences], legal_effect(c) == con)) ::: This decision establishes the legal effect of what happened rather than any matter of fact\n\n# Options\nQuestion ::: The passage provides the most support for which one of the following?\nis_supported(Not(Exists([c:cases], facts(c) == matter_of_fact))) ::: (A) Making legal decisions does not involve matters of fact.\nis_supported(Not(Exists([c:cases], legal_effect(c) == judge_decision))) ::: (B) The application of a rule to a particular case need not be left to a judge.\nis_supported(Exists([c:cases], facts(c) == general_terms)) ::: (C) Matters of fact, like legal rules, can sometimes be expressed in general terms.\nis_supported(Not(Exists([c:cases], facts(c) == matter_of_fact))) ::: (D) Whether the facts of a case fall into a relevant category is not itself a matter of fact."
    ]
  },
  {
    "id": "test_992",
    "context": "In university towns, police issue far more parking citations during the school year than they do during the times when the students are out of town. Ttherefore, we know that most parking citations in university towns are issued to students.",
    "question": "Which one of the following is most similar in its flawed reasoning to the flawed reasoning in the argument above?",
    "options": [
      "We know that most people who go to a university are studious because most of those people study while they attend the university.",
      "We know that this houseplant gets more of the sunlight from the window, because it is greener than that houseplant.",
      "We know that most of the snacks parents buy go to other people's children, because when other people's children come to visit, parents give out more snacks than usual.",
      "We know that consumers buy more fruit during the summer than they buy during the winter, because there are far more varieties of fruit available in the summer than in the winter."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nreasoning(A) == (ForAll([p:people], Implies(go_to_university(p), studious(p))) == ForAll([p:people], Implies(attend_university(p), study(p)))) ::: We know that most people who go to a university are studious because most of those people study while they attend the university.\nreasoning(B) == (ForAll([p:plants], Implies(gets_more_sunlight(p), greener(p))) == ForAll([p:plants], Implies(greener(p), gets_more_sunlight(p)))) ::: We know that this houseplant gets more of the sunlight from the window, because it is greener than that houseplant.\nreasoning(C) == (ForAll([s:snacks], Implies(bought_by_parents(s), given_to_other_children(s))) == ForAll([s:snacks], Implies(given_to_other_children(s), bought_by_parents(s)))) ::: We know that most of the snacks parents buy go to other people's children, because when other people's children come to visit, parents give out more snacks than usual.\nreasoning(D) == (ForAll([f:fruits], Implies(bought_in_summer(f), more_varieties_available(f))) == ForAll([f:fruits], Implies(more_varieties_available(f), bought_in_summer(f)))) ::: We know that consumers buy more fruit during the summer than they buy during the winter, because there are far more varieties of fruit available in the summer than in the winter.\n\n# Options\nQuestion ::: Which one of the following is most similar in its flawed reasoning to the flawed reasoning in the argument above?\nis_similar_flawed_reasoning(reasoning(A)) ::: (A)\nis_similar_flawed_reasoning(reasoning(B)) ::: (B)\nis_similar_flawed_reasoning(reasoning(C)) ::: (C)\nis_similar_flawed_reasoning(reasoning(D)) ::: (D)"
    ]
  },
  {
    "id": "test_993",
    "context": "Many corporations have recently offered computer-assisted continuing education programs for their employees. Employees' reactions after several years have been decidedly mixed. Whereas workers have found computers very useful in studying accounting, they have found them of little help in studying management and of no help at all with developing marketing skills.",
    "question": "Which one of the following, if true, most helps to explain the employees' mixed reactions?",
    "options": [
      "The corporations have offered more computer-assisted programs in marketing than in accounting and management.",
      "Many corporations are reluctant to teach advanced computer technology to their employees.",
      "Employees are more likely to maintain interest in training programs that use the newest computers and technology than in those that do not.",
      "Of the disciplines and skills mentioned, the exactness of accounting makes it most suitable to computer-assisted education."
    ],
    "raw_logic_programs": [
      "# Declarations\ndisciplines = EnumSort([accounting, management, marketing])\nusefulness = Function([disciplines] -> [int])\n\n# Constraints\nusefulness(accounting) > usefulness(management) ::: Workers have found computers very useful in studying accounting, but of little help in studying management\nusefulness(management) > usefulness(marketing) ::: Workers have found computers of little help in studying management and of no help at all with developing marketing skills\n\n# Options\nQuestion ::: Which one of the following, if true, most helps to explain the employees' mixed reactions?\nis_explanation(usefulness(accounting) > usefulness(management) > usefulness(marketing)) ::: (The corporations have offered more computer-assisted programs in marketing than in accounting and management.\nis_explanation(usefulness(accounting) > usefulness(management) > usefulness(marketing)) ::: (Many corporations are reluctant to teach advanced computer technology to their employees.\nis_explanation(usefulness(accounting) > usefulness(management) > usefulness(marketing)) ::: (Employees are more likely to maintain interest in training programs that use the newest computers and technology than in those that do not.\nis_explanation(usefulness(accounting) > usefulness(management) > usefulness(marketing)) ::: (Of the disciplines and skills mentioned, the exactness of accounting makes it most suitable to computer-assisted education."
    ]
  },
  {
    "id": "test_994",
    "context": "Some cleaning fluids, synthetic carpets, wall paneling, and other products release toxins, such as formaldehyde and benzene, into the household air supply. This is not a problem in well-ventilated houses, but it is a problem in houses that are so well insulated that they trap toxins as well as heat. Recent tests, however, demonstrate that houseplants remove some household toxins from the air and thereby eliminate their danger. In one test, 20 large plants eliminated formaldehyde from a small, well-insulated house.",
    "question": "The passage is structured to lead to which one of the following conclusions?",
    "options": [
      "Keeping houseplants is an effective means of trapping heat in a poorly insulated house.",
      "Keeping houseplants can compensate for some of the negative effects of poor ventilation.",
      "Nonsynthetic products do not release toxins into houses.",
      "The air in a well-insulated house with houseplants will contain fewer toxins than the air in a well-ventilated house without houseplants."
    ],
    "raw_logic_programs": [
      "# Declarations\ntoxins = EnumSort([formaldehyde, benzene])\nhouses = EnumSort([well_ventilated, well_insulated])\nproducts = EnumSort([cleaning_fluids, synthetic_carpets, wall_paneling, other_products])\neffects = EnumSort([trap_heat, release_toxins, remove_toxins])\nhouseplants = EnumSort([present, absent])\n\n# Constraints\nForAll([p:products], Implies(p == cleaning_fluids, effects(p) == release_toxins)) ::: Some cleaning fluids release toxins\nForAll([p:products], Implies(p == synthetic_carpets, effects(p) == release_toxins)) ::: Synthetic carpets release toxins\nForAll([p:products], Implies(p == wall_paneling, effects(p) == release_toxins)) ::: Wall paneling releases toxins\nForAll([p:products], Implies(p == other_products, effects(p) == release_toxins)) ::: Other products release toxins\nForAll([h:houses], Implies(h == well_ventilated, Not(effects(h) == trap_heat))) ::: Well-ventilated houses do not trap heat\nForAll([h:houses], Implies(h == well_insulated, effects(h) == trap_heat)) ::: Well-insulated houses trap heat\nForAll([h:houses], Implies(h == well_insulated, effects(h) == release_toxins)) ::: Well-insulated houses trap toxins\nForAll([h:houses, t:toxins], Implies(h == well_insulated, Exists([p:houseplants], And(p == present, effects(p) == remove_toxins)))) ::: Houseplants remove toxins in well-insulated houses\n\n# Options\nQuestion ::: The passage is structured to lead to which one of the following conclusions?\nis_conclusion(Exists([p:houseplants], And(p == present, effects(p) == trap_heat))) ::: (A) Keeping houseplants is an effective means of trapping heat in a poorly insulated house.\nis_conclusion(Exists([p:houseplants], And(p == present, effects(p) == remove_toxins))) ::: (B) Keeping houseplants can compensate for some of the negative effects of poor ventilation.\nis_conclusion(Not(Exists([p:products], effects(p) == release_toxins))) ::: (C) Nonsynthetic products do not release toxins into houses.\nis_conclusion(Exists([h:houses, p:houseplants], And(h == well_insulated, p == present, effects(p) == remove_toxins))) ::: (D) The air in a well-insulated house with houseplants will contain fewer toxins than the air in a well-ventilated house without houseplants."
    ]
  },
  {
    "id": "test_995",
    "context": "In clinical trials of new medicines, half of the subjects receive the drug being tested and half receive a physiologically inert substance -- a placebo. Trials are designed with the intention that neither subjects nor experimenters will find out which subjects are actually being given the drug being tested. However, this intention is frequently frustrated because__.",
    "question": "Which one of the following, if true, most appropriately completes the explanation?",
    "options": [
      "subjects who believe they are receiving the drug being tested often display improvements in their conditions regardless of whether what is administered to them is physiologically active or not",
      "the people who are subjects for clinical trials must, by law, be volunteers and must be informed of the possibility that they will receive a placebo",
      "often the subjects who receive the drug being tested develop symptoms that the experimenters recognize as side effects of the physiologically active drug",
      "in general, when the trial is intended to establish the experimental drug's safety rather than its effectiveness, all of the subjects are healthy volunteers"
    ],
    "raw_logic_programs": [
      "# Declarations\nsubjects = EnumSort([subject1, subject2, ..., subjectN])\ntreatments = EnumSort([drug, placebo])\noutcomes = EnumSort([improvement, no_improvement, side_effects])\nreceives = Function([subjects] -> [treatments])\noutcome = Function([subjects] -> [outcomes])\n\n# Constraints\nCount([s:subjects], receives(s) == drug) == Count([s:subjects], receives(s) == placebo) ::: Half of the subjects receive the drug and half receive a placebo\nForAll([s:subjects], Or(outcome(s) == improvement, outcome(s) == no_improvement, outcome(s) == side_effects)) ::: Each subject displays one of the outcomes\n\n# Options\nQuestion ::: Which one of the following, if true, most appropriately completes the explanation?\nis_explanation(Exists([s:subjects], And(receives(s) == placebo, outcome(s) == improvement))) ::: (A) subjects who believe they are receiving the drug being tested often display improvements in their conditions regardless of whether what is administered to them is physiologically active or not\nis_explanation(ForAll([s:subjects], receives(s) == placebo)) ::: (B) the people who are subjects for clinical trials must, by law, be volunteers and must be informed of the possibility that they will receive a placebo\nis_explanation(Exists([s:subjects], And(receives(s) == drug, outcome(s) == side_effects))) ::: (C) often the subjects who receive the drug being tested develop symptoms that the experimenters recognize as side effects of the physiologically active drug\nis_explanation(ForAll([s:subjects], outcome(s) == no_improvement)) ::: (D) in general, when the trial is intended to establish the experimental drug's safety rather than its effectiveness, all of the subjects are healthy volunteers"
    ]
  },
  {
    "id": "test_996",
    "context": "In a study, infant monkeys given a choice between two surrogate mothers -- a bare wire structure equipped with a milk bottle, or a soft, suede-covered wire structure equipped with a milk bottle -- unhesitatingly chose the latter. When given a choice between a bare wire structure equipped with a milk bottle and a soft, suede-covered wire structure lacking a milk bottle, they unhesitatingly chose the former.",
    "question": "Which one of the following is most supported by the information above?",
    "options": [
      "Infant monkeys' desire for food is stronger than their desire for warmth and comfort.",
      "For infant monkeys, a milk bottle is a less convincing substitute for their mother's teat than suede is for their mother's touch.",
      "Infant monkeys' desire for warmth and comfort is nearly as strong as their desire for food.",
      "For infant monkeys, suede is a less convincing substitute for their mother's touch than animal fur would be."
    ],
    "raw_logic_programs": [
      "# Declarations\nstructures = EnumSort([bare_wire_with_milk, suede_covered_with_milk, suede_covered_without_milk])\npreferences = Function([structures] -> [bool])\n\n# Constraints\npreferences(suede_covered_with_milk) == True ::: Infant monkeys chose the suede-covered structure with milk over the bare wire structure with milk\npreferences(bare_wire_with_milk) == True ::: Infant monkeys chose the bare wire structure with milk over the suede-covered structure without milk\n\n# Options\nQuestion ::: Which one of the following is most supported by the information above?\nis_supported(preferences(bare_wire_with_milk) > preferences(suede_covered_without_milk)) ::: (A) Infant monkeys' desire for food is stronger than their desire for warmth and comfort.\nis_supported(preferences(suede_covered_with_milk) > preferences(bare_wire_with_milk)) ::: (B) For infant monkeys, a milk bottle is a less convincing substitute for their mother's teat than suede is for their mother's touch.\nis_supported(preferences(suede_covered_with_milk) == preferences(bare_wire_with_milk)) ::: (C) Infant monkeys' desire for warmth and comfort is nearly as strong as their desire for food.\nis_supported(False) ::: (D) For infant monkeys, suede is a less convincing substitute for their mother's touch than animal fur would be."
    ]
  },
  {
    "id": "test_997",
    "context": "Historian: The ancient Greeks failed to recognize that, morally, democracy is no improvement over monarchy. It is wrong for an individual to have the power to choose the course of action for a government, so it is no less wrong to grant this power to society, which is just a collection of individuals.",
    "question": "The pattern of flawed reasoning in the argument above is most similar to that in which one of the following?",
    "options": [
      "Laws that contain exemptions for some individuals based on no relevant consideration are fundamentally immoral. If it is wrong for a given person to commit an act, then it is wrong for anyone else in similar circumstances to commit the act.",
      "There is no point in trying to find someone else to solve that problem. If Robin cannot solve it, then none of Robin's friends would be able to solve it.",
      "We should not pick Hank for the relay team. He has not won a race all season, so there is no reason to expect him to help the relay team win.",
      "There is no point in asking the club to purchase tents and make them available for use by club members. No member of the club can afford one of those tents, so the club is unable to afford any either."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([GreekArgument, ExemptionArgument, ProblemSolvingArgument, RelayTeamArgument, ClubPurchaseArgument])\nflawed_reasoning = Function([arguments] -> [bool])\n\n# Constraints\nflawed_reasoning(GreekArgument) ::: The ancient Greeks failed to recognize that, morally, democracy is no improvement over monarchy. It is wrong for an individual to have the power to choose the course of action for a government, so it is no less wrong to grant this power to society, which is just a collection of individuals.\n\n# Options\nQuestion ::: The pattern of flawed reasoning in the argument above is most similar to that in which one of the following?\nis_similar(flawed_reasoning(ExemptionArgument)) ::: (A) Laws that contain exemptions for some individuals based on no relevant consideration are fundamentally immoral. If it is wrong for a given person to commit an act, then it is wrong for anyone else in similar circumstances to commit the act.\nis_similar(flawed_reasoning(ProblemSolvingArgument)) ::: (B) There is no point in trying to find someone else to solve that problem. If Robin cannot solve it, then none of Robin's friends would be able to solve it.\nis_similar(flawed_reasoning(RelayTeamArgument)) ::: (C) We should not pick Hank for the relay team. He has not won a race all season, so there is no reason to expect him to help the relay team win.\nis_similar(flawed_reasoning(ClubPurchaseArgument)) ::: (D) There is no point in asking the club to purchase tents and make them available for use by club members. No member of the club can afford one of those tents, so the club is unable to afford any either."
    ]
  },
  {
    "id": "test_998",
    "context": "Editorial: Clearly, during the past two years, the unemployment situation in our city has been improving. Studies show that the number of unemployed people who are actively looking for jobs has steadily decreased during that period.",
    "question": "The editorial's reasoning is most vulnerable to criticism on the grounds that it",
    "options": [
      "fails to take into account the possibility that many unemployed workers who still desire jobs may have stopped looking for jobs",
      "presumes, without providing justification, that the government is at least partly responsible for the improvement in the employment situation",
      "relies on data from a period that is too short to justify an inference about a general trend",
      "ignores other economic indicators, which may not have improved during the past two years"
    ],
    "raw_logic_programs": [
      "# Declarations\nunemployed_people = EnumSort([actively_looking, not_actively_looking])\ntime_periods = EnumSort([past_two_years])\nemployment_situation = Function([time_periods] -> [bool])\n\n# Constraints\nForAll([t:time_periods], Count([u:unemployed_people], u == actively_looking) < Count([u:unemployed_people], u == not_actively_looking)) ::: Studies show that the number of unemployed people who are actively looking for jobs has steadily decreased during that period\n\n# Options\nQuestion ::: The editorial's reasoning is most vulnerable to criticism on the grounds that it\nis_vulnerable(Exists([u:unemployed_people], And(u == not_actively_looking, desires_job(u)))) ::: (A) fails to take into account the possibility that many unemployed workers who still desire jobs may have stopped looking for jobs\nis_vulnerable(Assumes(government_responsible_for_improvement)) ::: (B) presumes, without providing justification, that the government is at least partly responsible for the improvement in the employment situation\nis_vulnerable(Short_time_period(past_two_years)) ::: (C) relies on data from a period that is too short to justify an inference about a general trend\nis_vulnerable(Ignores(other_economic_indicators)) ::: (D) ignores other economic indicators, which may not have improved during the past two years"
    ]
  },
  {
    "id": "test_999",
    "context": "Jim: I hear that the company is considering giving Fred and Dorothy 25 percent raises. That would make their salaries higher than mine. Since I have worked here longer than they have, it would be unfair to raise their salaries unless mine is raised to at least what theirs will be. Tasha: Thirty-five employees have been here the same length of time you have and earn the same salary you earn. It would be unfair to raise your salary without raising theirs.",
    "question": "Which one of the following principles most helps to justify both parties' statements?",
    "options": [
      "In order to be fair, a business must pay an employee a salary commensurate with his or her experience in the field.",
      "In order to be fair, a business must always pay one employee more than another if the first employee has worked for the company longer than the second has.",
      "In order to be fair, a business must never pay one employee more than another unless the first employee has worked for the company longer than the second has.",
      "In order to be fair, a business must always pay employees a salary commensurate with the amount of time they work every day."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([Jim, Fred, Dorothy, Others])\nsalary = Function([employees] -> [int])\nexperience = Function([employees] -> [int])\n\n# Constraints\nexperience(Jim) > experience(Fred) ::: Jim has worked longer than Fred\nexperience(Jim) > experience(Dorothy) ::: Jim has worked longer than Dorothy\nForAll([e:employees], experience(e) == experience(Jim) -> salary(e) == salary(Jim)) ::: Thirty-five employees have been here the same length of time as Jim and earn the same salary\n\n# Options\nQuestion ::: Which one of the following principles most helps to justify both parties' statements?\nis_justified(ForAll([e1, e2:employees], Implies(experience(e1) > experience(e2), salary(e1) >= salary(e2)))) ::: (A) In order to be fair, a business must pay an employee a salary commensurate with his or her experience in the field.\nis_justified(ForAll([e1, e2:employees], Implies(experience(e1) > experience(e2), salary(e1) > salary(e2)))) ::: (B) In order to be fair, a business must always pay one employee more than another if the first employee has worked for the company longer than the second has.\nis_justified(ForAll([e1, e2:employees], Implies(salary(e1) > salary(e2), experience(e1) > experience(e2)))) ::: (C) In order to be fair, a business must never pay one employee more than another unless the first employee has worked for the company longer than the second has.\nis_justified(ForAll([e:employees], salary(e) == experience(e))) ::: (D) In order to be fair, a business must always pay employees a salary commensurate with the amount of time they work every day."
    ]
  }
]