[
  {
    "id": 0,
    "context": "In the planning of a new district in a township, it was decided to build a special community in the southeast, northwest, centered on the citizen park.These four communities are designated as cultural area, leisure area, commercial area and administrative service area.It is known that the administrative service area is southwest of the cultural area, and the cultural area is southeast of the leisure area.",
    "question": "Based on the above statement, which of the following can be derived?",
    "answer": "A",
    "options": [
      "A.Civic Park is north of the administrative service area",
      "B.The leisure area is southwest of the cultural area",
      "C.The cultural district is in the northeast of the business district",
      "D.The business district is southeast of the leisure area"
    ],
    "raw_logic_programs": [
      "# Declarations\nareas = EnumSort([cultural, leisure, commercial, administrative])\ndirections = EnumSort([north, south, east, west, northeast, southeast, southwest, northwest])\nlocation = Function([areas] -> [directions])\n\n# Constraints\nlocation(administrative) == southwest ::: The administrative service area is southwest of the cultural area\nlocation(cultural) == southeast ::: The cultural area is southeast of the leisure area\n\n# Options\nQuestion ::: Based on the above statement, which of the following can be derived?\nis_derived(location(civic_park) == north) ::: (A) Civic Park is north of the administrative service area\nis_derived(location(leisure) == southwest) ::: (B) The leisure area is southwest of the cultural area\nis_derived(location(cultural) == northeast) ::: (C) The cultural district is in the northeast of the business district\nis_derived(location(commercial) == southeast) ::: (D) The business district is southeast of the leisure area"
    ],
    "entities": 12,
    "entities_found": 12,
    "functions": 1,
    "functions_correct": 0,
    "special_entities" : 2,
    "coreference": 3,
    "coreference_found": 1,
    "constraints": 2,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 1,
    "context": "The company sent three young staff members to the South for business trip.The three of them happened to be sitting in a row.At least one of the two people sitting on the right side of 24 years old was 20 years old.20 years old.At least one of the two people sitting on the left of the accountant is a salesperson, and one of the two people sitting on the right of the salesperson is also a salesperson.",
    "question": "So what are the three young people on business?",
    "answer": "A",
    "options": [
      "A.20-year-old accountant, 20-year-old salesperson, 24-year-old salesperson",
      "B.20-year-old accountant, 24-year-old salesperson, 24-year-old salesperson",
      "C.24-year-old accountant, 20-year-old salesperson, 20-year-old salesperson",
      "D.20-year-old accountant, 20-year-old accountant, 24-year-old salesperson"
    ],
    "raw_logic_programs": [
      "# Declarations\nages = EnumSort([20, 24])\npositions = EnumSort([left, middle, right])\nroles = EnumSort([accountant, salesperson])\nperson = Function([positions] -> [ages, roles])\n\n# Constraints\nExists([p1:positions, p2:positions], And(p1 != p2, person(p1)[0] == 24, person(p2)[0] == 20, Or(p1 == middle, p2 == middle))) ::: At least one of the two people sitting on the right side of 24 years old was 20 years old\nExists([p1:positions, p2:positions], And(p1 != p2, person(p1)[1] == accountant, person(p2)[1] == salesperson, Or(p1 == middle, p2 == middle))) ::: At least one of the two people sitting on the left of the accountant is a salesperson\nExists([p1:positions, p2:positions], And(p1 != p2, person(p1)[1] == salesperson, person(p2)[1] == salesperson, Or(p1 == middle, p2 == middle))) ::: One of the two people sitting on the right of the salesperson is also a salesperson\n\n# Options\nQuestion ::: So what are the three young people on business?\nis_valid(And(person(left) == (20, accountant), person(middle) == (20, salesperson), person(right) == (24, salesperson))) ::: (A)\nis_valid(And(person(left) == (20, accountant), person(middle) == (24, salesperson), person(right) == (24, salesperson))) ::: (B)\nis_valid(And(person(left) == (24, accountant), person(middle) == (20, salesperson), person(right) == (20, salesperson))) ::: (C)\nis_valid(And(person(left) == (20, accountant), person(middle) == (20, accountant), person(right) == (24, salesperson))) ::: (D)"
    ],
    "entities": 7,
    "entities_found": 7,
    "functions": 1,
    "functions_correct": 1,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 3,
    "constraints_correct": 3,
    "option_correct": 4
  },
  {
    "id": 2,
    "context": "In recent years, graduate entrance examinations have continued to heat up.Correspondingly, a variety of postgraduate counseling classes have emerged, especially English and political counseling classes are almost a must for the postgraduates.Xiaozhuang, who has just started working, also intends to take the postgraduate entrance exam, so Xiaozhuang must take English tutoring classes",
    "question": "Which of the following can best strengthen the above argument",
    "answer": "D",
    "options": [
      "A.If you take an English tutoring class, you can pass the graduate entrance exam",
      "B.Only those who intend to take the graduate entrance exam will participate in the English tutoring class",
      "C.Even if you take an English tutoring class, you may not be able to pass the graduate entrance exam",
      "D.If you do not participate in the English tutoring class, you cannot pass the graduate entrance exam"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Xiaozhuang])\nclasses = EnumSort([English, Political])\nintends_to_take_exam = Function([people] -> [bool])\ntakes_class = Function([people, classes] -> [bool])\n\n# Constraints\nintends_to_take_exam(Xiaozhuang) ::: Xiaozhuang intends to take the postgraduate entrance exam\ntakes_class(Xiaozhuang, English) ::: Xiaozhuang must take English tutoring classes\n\n# Options\nQuestion ::: Which of the following can best strengthen the above argument?\nis_strongest(Implies(takes_class(Xiaozhuang, English), intends_to_take_exam(Xiaozhuang))) ::: (A)\nis_strongest(Implies(intends_to_take_exam(Xiaozhuang), takes_class(Xiaozhuang, English))) ::: (B)\nis_strongest(Not(Implies(takes_class(Xiaozhuang, English), intends_to_take_exam(Xiaozhuang)))) ::: (C)\nis_strongest(Implies(Not(takes_class(Xiaozhuang, English)), Not(intends_to_take_exam(Xiaozhuang)))) ::: (D)"
    ],
    "entities": 7,
    "entities_found": 7, 
    "functions": 4,
    "functions_correct": 2,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 3,
    "constraints_correct": 3,
    "option_correct": 0
  },
  {
    "id": 3,
    "context": "A unit conducted the year-end assessment and after democratic voting, five people were identified as candidates for the first prize.In the selection of five in four, the following factors need to be considered? 1) At least one person of Bingding is selected.2) If E is selected, then A and B are also selected.3) A maximum of 2 people are selected.",
    "question": "According to the above statement, it can be concluded that who is not in the fourth?",
    "answer": "D",
    "options": [
      "A.A.",
      "B.B.",
      "C.C.",
      "D.Ding."
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([A, B, C, D, E])\nselected = Function([candidates] -> [bool])\n\n# Constraints\nOr(selected(A), selected(B), selected(C), selected(D), selected(E)) ::: At least one person of Bingding is selected\nImplies(selected(E), And(selected(A), selected(B))) ::: If E is selected, then A and B are also selected\nCount([c:candidates], selected(c)) <= 2 ::: A maximum of 2 people are selected\n\n# Options\nQuestion ::: According to the above statement, it can be concluded that who is not in the fourth?\nis_unsat(selected(A)) ::: (A)\nis_unsat(selected(B)) ::: (B)\nis_unsat(selected(C)) ::: (C)\nis_unsat(selected(D)) ::: (D)"
    ],
    "entities": 5,
    "entities_found": 5, 
    "functions": 1,
    "functions_correct": 1,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 3,
    "constraints_correct": 3,
    "option_correct": 4
  },
  {
    "id": 4,
    "context": "Zhang Ming, Li Ying, Wang Jia and Chen Rui work in a team.They come from four provinces of Jiangsu, Anhui, Fujian and Shandong.Each person can only speak a dialect of their origin.Speaking of southern Fujian dialects, Shandong people have the highest educational level and can speak Central Plains Mandarin.Wang Jia has a lower education level than Fujianese.Li Ying can speak Huizhou dialect and is a colleague with his classmates from Jiangsu.Chen Rui does not understand the dialect of southern Fujian.",
    "question": "According to the above statement, you can get which of the following?",
    "answer": "B",
    "options": [
      "A Chen Rui can't speak the Central Plains Mandarin",
      "B Zhang Ming speaks Minnan dialect",
      "C Li Ying is from Shandong",
      "D Wang Jia can speak Huizhou dialect"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Zhang_Ming, Li_Ying, Wang_Jia, Chen_Rui])\nprovinces = EnumSort([Jiangsu, Anhui, Fujian, Shandong])\ndialects = EnumSort([Minnan, Huizhou, Central_Plains_Mandarin])\neducation_level = EnumSort([low, high])\norigin = Function([people] -> [provinces])\nspeaks = Function([people] -> [dialects])\neducation = Function([people] -> [education_level])\n\n# Constraints\nForAll([p:people], Exists([d:dialects], speaks(p) == d)) ::: Each person can only speak a dialect of their origin\nForAll([p:people], Exists([pr:provinces], origin(p) == pr)) ::: Each person comes from one of the four provinces\nAnd(speaks(Zhang_Ming) == Minnan, origin(Zhang_Ming) == Fujian) ::: Speaking of southern Fujian dialects\nAnd(origin(Shandong) == Shandong, education(Shandong) == high, speaks(Shandong) == Central_Plains_Mandarin) ::: Shandong people have the highest educational level and can speak Central Plains Mandarin\neducation(Wang_Jia) == low ::: Wang Jia has a lower education level than Fujianese\nAnd(speaks(Li_Ying) == Huizhou, origin(Li_Ying) == Anhui, origin(Jiangsu) == Jiangsu) ::: Li Ying can speak Huizhou dialect and is a colleague with his classmates from Jiangsu\nNot(speaks(Chen_Rui) == Minnan) ::: Chen Rui does not understand the dialect of southern Fujian\n\n# Options\nQuestion ::: According to the above statement, you can get which of the following?\nis_unsat(speaks(Chen_Rui) == Central_Plains_Mandarin) ::: (A) Chen Rui can't speak the Central Plains Mandarin\nis_sat(speaks(Zhang_Ming) == Minnan) ::: (B) Zhang Ming speaks Minnan dialect\nis_sat(origin(Li_Ying) == Shandong) ::: (C) Li Ying is from Shandong\nis_unsat(speaks(Wang_Jia) == Huizhou) ::: (D) Wang Jia can speak Huizhou dialect"
    ],
    "entities": 12,
    "entities_found": 11, 
    "functions": 3,
    "functions_correct": 3,
    "special_entities" : 3,
    "coreference": 3,
    "coreference_found": 1,
    "constraints": 7,
    "constraints_correct": 4,
    "option_correct": 4
  },
  {
    "id": 5,
    "context": "The person in charge of the relevant department said that pilots will be carried out in some areas this year to prepare for the system and policy preparations for the comprehensive clean-up of 'small property houses', and require all localities to confirm the registration and certification of rural collective land.All small-property houses are not subject to registration and are not protected by law.Therefore, this newly built house in Hexi Village is not protected by law.",
    "question": "Which of the following is true will most weaken the above argument",
    "answer": "D",
    "options": [
      "A.This newly built house in Hexi Village has been tacitly approved by relevant departments",
      "B.This newly built house in Hexi Village is a small property house",
      "C.This newly built house in Hexi Village is built on rural collective land",
      "D.Some of the newly built houses in Hexi Village are not small property houses"
    ],
    "raw_logic_programs": [
      "# Declarations\nhouses = EnumSort([new_house_Hexi])\nproperties = EnumSort([small_property, registered, protected_by_law, tacitly_approved, built_on_rural_land])\nhas_property = Function([houses, properties] -> [bool])\n\n# Constraints\nForAll([h:houses], Implies(has_property(h, small_property), Not(has_property(h, registered)))) ::: All small-property houses are not subject to registration\nForAll([h:houses], Implies(has_property(h, small_property), Not(has_property(h, protected_by_law)))) ::: All small-property houses are not protected by law\nhas_property(new_house_Hexi, small_property) ::: This newly built house in Hexi Village is a small property house\n\n# Options\nQuestion ::: Which of the following is true will most weaken the above argument\nis_weakened(has_property(new_house_Hexi, tacitly_approved)) ::: (A)\nis_weakened(has_property(new_house_Hexi, small_property)) ::: (B)\nis_weakened(has_property(new_house_Hexi, built_on_rural_land)) ::: (C)\nis_weakened(Exists([h:houses], And(h != new_house_Hexi, Not(has_property(h, small_property))))) ::: (D)"
    ],
    "entities": 6,
    "entities_found": 6, 
    "functions": 2,
    "functions_correct": 1,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 3,
    "constraints_correct": 2,
    "option_correct": 0
  },
  {
    "id": 6,
    "context": "There are five teams participating in the game.The audience had the following comments on the results? (1) The champion is either the Shannan team or the Jiangbei team.(2) The champion is neither Shanbei nor Jiangnan.(3) The champion is Jiangnan Team.(4) The champion is not the Shannan team.",
    "question": "The result of the match showed that only one argument was correct, so who won the championship?",
    "answer": "C",
    "options": [
      "A Shannan",
      "B Jiangnan",
      "C Shanbei",
      "D Jiangbei"
    ],
    "raw_logic_programs": [
      "# Declarations\nteams = EnumSort([Shannan, Jiangnan, Shanbei, Jiangbei])\nchampion = Function([] -> [teams])\n\n# Constraints\nOr(champion() == Shannan, champion() == Jiangbei) ::: The champion is either the Shannan team or the Jiangbei team\nAnd(champion() != Shanbei, champion() != Jiangnan) ::: The champion is neither Shanbei nor Jiangnan\nchampion() == Jiangnan ::: The champion is Jiangnan Team\nchampion() != Shannan ::: The champion is not the Shannan team\n\n# Options\nQuestion ::: The result of the match showed that only one argument was correct, so who won the championship?\nis_correct(champion() == Shannan) ::: (A)\nis_correct(champion() == Jiangnan) ::: (B)\nis_correct(champion() == Shanbei) ::: (C)\nis_correct(champion() == Jiangbei) ::: (D)"
    ],
    "entities": 4,
    "entities_found": 4, 
    "functions": 1,
    "functions_correct": 1,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 4,
    "constraints_correct": 4,
    "option_correct": 0
  },
  {
    "id": 7,
    "context": "Compared with small and medium-sized cities, especially small cities and towns, large cities have higher living costs, which inevitably limits the entry of rural population.Therefore, the development of large cities alone cannot actually achieve urbanization",
    "question": "Which of the following is the conclusion must be assumed",
    "answer": "C",
    "options": [
      "A.Urbanization is the only way for China's development",
      "B.Simple development of large cities is not conducive to the promotion of urbanization",
      "C.To achieve urbanization, the city must fully absorb the rural population",
      "D.The attractiveness of large cities to the rural population in the outside world is significantly lower than that of small and medium-sized cities"
    ],
    "raw_logic_programs": [
      "# Declarations\ncities = EnumSort([small, medium, large])\npopulation = EnumSort([rural, urban])\ndevelopment = Function([cities] -> [bool])\ncosts = Function([cities] -> [int])\nentry = Function([population, cities] -> [bool])\n\n# Constraints\nForAll([c:cities], costs(large) > costs(c)) ::: large cities have higher living costs\nForAll([p:population], Implies(costs(large) > costs(small), Not(entry(p, large)))) ::: higher living costs limit the entry of rural population\nNot(development(large)) ::: development of large cities alone cannot achieve urbanization\n\n# Options\nQuestion ::: Which of the following is the conclusion must be assumed?\nis_assumed(Not(development(large))) ::: (B) Simple development of large cities is not conducive to the promotion of urbanization\nis_assumed(ForAll([p:population], Implies(entry(p, large), entry(p, small)))) ::: (C) To achieve urbanization, the city must fully absorb the rural population\nis_assumed(ForAll([p:population], Not(entry(p, large)))) ::: (D) The attractiveness of large cities to the rural population in the outside world is significantly lower than that of small and medium-sized cities"
    ],
    "entities": 5,
    "entities_found": 5, 
    "functions": 3,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 4,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 8,
    "context": "Researchers recently discovered that there is an area called the thalamus pillow deep in the human brain, which is like an information desk operator, responsible for sorting out the external stimulus information and focusing human attention on the most important for behavior and survival Information.The researchers pointed out that this discovery is expected to bring new treatments for disorders such as attention deficit hyperactivity disorder and schizophrenia caused by lack of attention.",
    "question": "Which of the following is assumed by the above argument",
    "answer": "D",
    "options": [
      "A.Some schizophrenia are not caused by lack of attention",
      "B.Visual information is only transmitted through the visual cortex to obtain a neural network to transmit",
      "C.Researchers have developed a new technology that can directly track the communication between the nerve cortex in the visual cortex and thalamus occipital region",
      "D.The brain cannot process too much information in detail at the same time, and will only selectively focus on the things most relevant to the behavior"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nassumed = Function([statements] -> [bool])\n\n# Constraints\n# The argument is based on the discovery of the thalamus pillow's role in focusing attention and its potential impact on treating disorders caused by lack of attention.\n\n# Options\nQuestion ::: Which of the following is assumed by the above argument?\nis_assumed(assumed(A)) ::: (A) Some schizophrenia are not caused by lack of attention\nis_assumed(assumed(B)) ::: (B) Visual information is only transmitted through the visual cortex to obtain a neural network to transmit\nis_assumed(assumed(C)) ::: (C) Researchers have developed a new technology that can directly track the communication between the nerve cortex in the visual cortex and thalamus occipital region\nis_assumed(assumed(D)) ::: (D) The brain cannot process too much information in detail at the same time, and will only selectively focus on the things most relevant to the behavior"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 9,
    "context": "According to a report, in the year to March, mainland Chinese buyers became the second largest group of foreign buyers buying US real estate, with a transaction volume of US $ 9 billion, second only to Canada.This is 23% higher than the previous year 's USD 7.3 billion transaction volume and 88% higher than the previous year 's USD 4.8 billion transaction volume.Some people think that there are more and more rich people in China who are transferring their property abroad.",
    "question": "Which of the following is true is the best argument against the above argument",
    "answer": "B",
    "options": [
      "A? Many Chinese people buy homes for their children to study in the US",
      "B? Although the turnover has increased by 23%, the volume of Chinese buyers has not increased this year",
      "C.There are groups of real estate speculators among the wealthy Chinese who have speculated in Beijing and Shanghai",
      "D.The risk of the US real estate market has been small in recent years and has a certain function of value preservation and appreciation"
    ],
    "raw_logic_programs": [
      "# Declarations\nbuyers = EnumSort([Chinese, Canadian, Other])\ntransactions = Function([buyers] -> [float])\nyear = EnumSort([previous, current])\ntransaction_volume = Function([year] -> [float])\n\n# Constraints\ntransactions(Chinese) == 9.0 ::: mainland Chinese buyers' transaction volume in the current year\ntransactions(Canadian) > transactions(Chinese) ::: Canadian buyers have a higher transaction volume than Chinese buyers\ntransaction_volume(current) == 9.0 ::: current year's transaction volume for Chinese buyers\ntransaction_volume(previous) == 7.3 ::: previous year's transaction volume for Chinese buyers\ntransaction_volume(previous - 1) == 4.8 ::: transaction volume for Chinese buyers two years ago\ntransaction_volume(current) == transaction_volume(previous) * 1.23 ::: 23% increase from the previous year\ntransaction_volume(previous) == transaction_volume(previous - 1) * 1.88 ::: 88% increase from two years ago\n\n# Options\nQuestion ::: Which of the following is true is the best argument against the above argument?\nis_best_argument(And(transaction_volume(current) > transaction_volume(previous), Not(Exists([b:buyers], transactions(b) > transactions(Chinese))))) ::: (A) Many Chinese people buy homes for their children to study in the US\nis_best_argument(And(transaction_volume(current) > transaction_volume(previous), Not(transaction_volume(current) > transaction_volume(previous)))) ::: (B) Although the turnover has increased by 23%, the volume of Chinese buyers has not increased this year\nis_best_argument(Exists([b:buyers], transactions(b) > transactions(Chinese))) ::: (C) There are groups of real estate speculators among the wealthy Chinese who have speculated in Beijing and Shanghai\nis_best_argument(And(transaction_volume(current) > transaction_volume(previous), Exists([b:buyers], transactions(b) > transactions(Chinese)))) ::: (D) The risk of the US real estate market has been small in recent years and has a certain function of value preservation and appreciation"
    ],
    "entities": 6,
    "entities_found": 4, 
    "functions": 3,
    "functions_correct": 2,
    "special_entities" : 1,
    "coreference": 1,
    "coreference_found": 0,
    "constraints": 8,
    "constraints_correct": 5,
    "option_correct": 0
  },
  {
    "id": 10,
    "context": "People often use microwave ovens to heat food.Some people think that microwave oven heating changes the molecular structure of food, producing molecules that the human body cannot recognize.These strange molecular formulas are unacceptable to the human body, and some are toxic and may even cause cancer.Therefore, people or animals who often eat microwave foods will have serious physiological changes in their bodies, which will cause serious health problems.",
    "question": "Which of the following can best question the above view?",
    "answer": "D",
    "options": [
      "A.Microwave heating will not cause more nutrient loss than other cooking methods",
      "B.China's microwave oven production standards are consistent with international standards and EU standards",
      "C.It is also common for developed countries to use microwave ovens",
      "D.The microwave only heats the water molecules in the food, the food does not change chemically"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nvalidity = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], validity(s) == True) ::: Each statement is considered as a potential valid argument\n\n# Options\nQuestion ::: Which of the following can best question the above view?\nis_best_question(validity(A)) ::: (A) Microwave heating will not cause more nutrient loss than other cooking methods\nis_best_question(validity(B)) ::: (B) China's microwave oven production standards are consistent with international standards and EU standards\nis_best_question(validity(C)) ::: (C) It is also common for developed countries to use microwave ovens\nis_best_question(validity(D)) ::: (D) The microwave only heats the water molecules in the food, the food does not change chemically"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 11,
    "context": "A research report shows that the proportion of children of cadres in Peking University increased from 20% in the 1980s to nearly 40% in 1977, surpassing the children of workers, farmers and professional technicians, and becoming the largest source of students.According to this, some media believe that the proportion of students and children of Peking University students has been rising for 20 years, surpassing other classes.",
    "question": "Which one, if true, most doubts the views of the above media",
    "answer": "A",
    "options": [
      "A.Many of the cadres counted in the past 20 years are enterprise cadres, which used to include only government officials",
      "B.Compared with foreign countries, Chinese education provides workers and peasants with more opportunities for education and social mobility",
      "C.After the founding of New China, more and more children of workers and peasants entered the university",
      "D.Some of the workers 'children in the statistics may be former farmers' children"
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([cadres, workers, farmers, professional_technicians])\nyears = EnumSort([1980s, 1977])\nproportion = Function([groups, years] -> [float])\n\n# Constraints\nproportion(cadres, 1980s) == 0.20 ::: The proportion of children of cadres in Peking University in the 1980s was 20%\nproportion(cadres, 1977) == 0.40 ::: The proportion of children of cadres in Peking University in 1977 was nearly 40%\nproportion(cadres, 1977) > proportion(workers, 1977) ::: In 1977, the proportion of children of cadres surpassed the children of workers\nproportion(cadres, 1977) > proportion(farmers, 1977) ::: In 1977, the proportion of children of cadres surpassed the children of farmers\nproportion(cadres, 1977) > proportion(professional_technicians, 1977) ::: In 1977, the proportion of children of cadres surpassed the children of professional technicians\n\n# Options\nQuestion ::: Which one, if true, most doubts the views of the above media?\nis_doubtful(And(Exists([y:years], proportion(cadres, y) > proportion(workers, y)), Exists([y:years], proportion(cadres, y) > proportion(farmers, y)), Exists([y:years], proportion(cadres, y) > proportion(professional_technicians, y)))) ::: (A)\nis_doubtful(And(Exists([y:years], proportion(workers, y) > proportion(cadres, y)), Exists([y:years], proportion(farmers, y) > proportion(cadres, y)), Exists([y:years], proportion(professional_technicians, y) > proportion(cadres, y)))) ::: (B)\nis_doubtful(Exists([y:years], proportion(workers, y) > proportion(cadres, y))) ::: (C)\nis_doubtful(Exists([y:years], proportion(farmers, y) > proportion(cadres, y))) ::: (D)"
    ],
    "entities": 2,
    "entities_found": 2, 
    "functions": 3,
    "functions_correct": 2,
    "special_entities" : 1,
    "coreference": 2,
    "coreference_found": 2,
    "constraints": 4,
    "constraints_correct": 3,
    "option_correct": 0
  },
  {
    "id": 12,
    "context": "Lotus leaf is the leaf of the aquatic herbaceous plant for many years.Its chemical components mainly include lotus alkaloid, citric acid, malic acid, gluconic acid, oxalic acid, succinic acid, and other basic components against mitosis.Lotus leaf contains a variety of alkaloids, brassin glycosides, lotus leaf glycosides and other ingredients, can effectively reduce cholesterol and triglycerides, has a good effect on hyperlipidemia and obese patients.Lotus leaf infusion and decoction can expand blood vessels, clear heat and relieve heat, and lower blood pressure.Some experts pointed out that lotus leaf is a good medicine for weight loss.Which of the following",
    "question": "If it is true, can it most support the opinions of the above experts?",
    "answer": "D",
    "options": [
      "A.Lotus leaf promotes gastrointestinal motility and clears the body of stool;",
      "B.Lotus leaf tea is a food, not a medicine, which has the advantages of non-toxicity and safety;",
      "C.Lotus leaf tea becomes a liquid food after soaking in water, and is quickly absorbed in the stomach for a short time, with higher concentration and greater irritation.",
      "D.After taking lotus leaf products, a layer of fat isolation film is formed on the human intestinal wall, which can effectively prevent the absorption of fat;"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_opinion = Function([statements] -> [bool])\n\n# Constraints\n# The problem description provides information about the benefits of lotus leaf, particularly in weight loss, reducing cholesterol, and lowering blood pressure.\n\n# Options\nQuestion ::: If it is true, can it most support the opinions of the above experts?\nsupports_opinion(A) ::: (A) Lotus leaf promotes gastrointestinal motility and clears the body of stool\nsupports_opinion(B) ::: (B) Lotus leaf tea is a food, not a medicine, which has the advantages of non-toxicity and safety\nsupports_opinion(C) ::: (C) Lotus leaf tea becomes a liquid food after soaking in water, and is quickly absorbed in the stomach for a short time, with higher concentration and greater irritation\nsupports_opinion(D) ::: (D) After taking lotus leaf products, a layer of fat isolation film is formed on the human intestinal wall, which can effectively prevent the absorption of fat"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 13,
    "context": "On August 3, 2003, a 'human fossil of 110,000 years ago' was unearthed from the Zhangkoudong ancient human site in Jiuxiang, Yiliang County.The announcement of this excavation immediately attracted wide attention from the media and experts.Many experts who participated in the excavation believe that the appearance of this human tooth fossil indicates that Zhangkoudong had human activities as early as 110,000 years ago.It will rewrite the Kunming area defined by the ancient human ruins of Longtan Mountain in Chenggong County.Mankind has only 30,000 years of history.",
    "question": "Which of the following, if true, most doubts the opinions of the above experts?",
    "answer": "B",
    "options": [
      "A.Academics are inherently controversial, and everyone has the right to express their opinions;",
      "B.Some experts analyzed the fossil's long axis, crown shape, crown lip and tongue surface protrusion and enamel, etc., that this fossil is not a human incisor fossil, but a deer tooth fossil;",
      "C.This tooth fossil was excavated in the red sand layer 20 cm below the calcium plate 110,000 years ago;",
      "D.Some experts used the uranium method to date the calcium plates of each layer of Zhangkou Cave, and proved that the earliest deposits of the fossil tooth were formed 300,000 years ago;"
    ],
    "raw_logic_programs": [
      "# Declarations\nopinions = EnumSort([experts_opinion, alternative_opinion])\nevidence = EnumSort([fossil_type, dating_method, excavation_layer])\ndoubts = Function([opinions, evidence] -> [bool])\n\n# Constraints\ndoubts(experts_opinion, fossil_type) == False ::: Experts believe the fossil is a human tooth\ndoubts(experts_opinion, dating_method) == False ::: Experts believe the dating method supports their claim\ndoubts(experts_opinion, excavation_layer) == False ::: Experts believe the excavation layer supports their claim\n\n# Options\nQuestion ::: Which of the following, if true, most doubts the opinions of the above experts?\nis_most_doubtful(doubts(alternative_opinion, fossil_type) == True) ::: (B) Some experts analyzed the fossil's long axis, crown shape, crown lip and tongue surface protrusion and enamel, etc., that this fossil is not a human incisor fossil, but a deer tooth fossil\nis_most_doubtful(doubts(alternative_opinion, dating_method) == True) ::: (D) Some experts used the uranium method to date the calcium plates of each layer of Zhangkou Cave, and proved that the earliest deposits of the fossil tooth were formed 300,000 years ago"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 14,
    "context": "In the recruitment examination for the public selection of deputy chiefs in a certain department, a total of 7 people were registered as A.B, C, D, E, F and G.According to statistics, the highest academic qualifications among the 7 people are undergraduate and doctor.Among them there are 3 people who graduated with Ph.D and 3 women. It is known that?A, B, and C have the same educational level, while F and G have different educational levels; E, F, and G have the same gender, and A and D have different genders.The final appointment was a female doctor.",
    "question": "Based on the above statement, which of the following can be derived?",
    "answer": "D",
    "options": [
      "A.A is a male doctor;",
      "B.I am a female doctor;",
      "C. G is not a male doctor;",
      "D. D is a female doctor."
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([A, B, C, D, E, G1, G2])\ngenders = EnumSort([male, female])\neducation_levels = EnumSort([undergraduate, doctor])\ngender = Function([candidates] -> [genders])\neducation = Function([candidates] -> [education_levels])\n\n# Constraints\nCount([c:candidates], education(c) == doctor) == 3 ::: There are 3 people who graduated with Ph.D.\nCount([c:candidates], gender(c) == female) == 3 ::: There are 3 women\nAnd(education(A) == education(B), education(B) == education(C)) ::: A, B, and C have the same educational level\neducation(G1) != education(G2) ::: G1 and G2 have different educational levels\nAnd(gender(E) == gender(G1), gender(G1) == gender(G2)) ::: E, G1, and G2 have the same gender\ngender(A) != gender(D) ::: A and D have different genders\nExists([c:candidates], And(gender(c) == female, education(c) == doctor)) ::: The final appointment was a female doctor\n\n# Options\nQuestion ::: Based on the above statement, which of the following can be derived?\nis_derived(And(gender(A) == male, education(A) == doctor)) ::: (A)\nis_derived(And(gender(B) == female, education(B) == doctor)) ::: (B)\nis_derived(Not(And(gender(G1) == male, education(G1) == doctor))) ::: (C)\nis_derived(And(gender(D) == female, education(D) == doctor)) ::: (D)"
    ],
    "entities": 11,
    "entities_found": 11, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 1,
    "coreference": 1,
    "coreference_found": 1,
    "constraints": 6,
    "constraints_correct": 6,
    "option_correct": 0
  },
  {
    "id": 15,
    "context": "There are five stations set up from west to east along a section of the high-speed railway along the river.It is known that Fuyi Station is east of Haoyun Station and West of Huyao Station, and is adjacent to Huyao Station; Jiushang Station is adjacent to Yinling Station.",
    "question": "Based on the above information, regarding the order of the five stations from west to east, which of the following is possible?",
    "answer": "C",
    "options": [
      "A.Yinling Station, Haoyun Station, Jiushang Station, Fuyi Station, Hu Yao Station;",
      "B.Fuyi Station, Hu Yao Station, Jiushang Station, Yinling Station, Haoyun Station;",
      "C.Haoyun Station, Yinling Station, Jiushang Station, Fuyi Station, Hu Yao Station;",
      "D.Haoyun Station, Hu Yao Station, Fuyi Station, Yinling Station, Jiushang Station;"
    ],
    "raw_logic_programs": [
      "# Declarations\nstations = EnumSort([Fuyi, Haoyun, Huyao, Jiushang, Yinling])\nposition = Function([stations] -> [int])\nForAll([s:stations], And(1 <= position(s), position(s) <= 5))\n\n# Constraints\nposition(Fuyi) > position(Haoyun) ::: Fuyi Station is east of Haoyun Station\nposition(Fuyi) < position(Huyao) ::: Fuyi Station is west of Huyao Station\nAbs(position(Fuyi) - position(Huyao)) == 1 ::: Fuyi Station is adjacent to Huyao Station\nAbs(position(Jiushang) - position(Yinling)) == 1 ::: Jiushang Station is adjacent to Yinling Station\n\n# Options\nQuestion ::: Regarding the order of the five stations from west to east, which of the following is possible?\nis_possible(And(position(Yinling) == 1, position(Haoyun) == 2, position(Jiushang) == 3, position(Fuyi) == 4, position(Huyao) == 5)) ::: (A)\nis_possible(And(position(Fuyi) == 1, position(Huyao) == 2, position(Jiushang) == 3, position(Yinling) == 4, position(Haoyun) == 5)) ::: (B)\nis_possible(And(position(Haoyun) == 1, position(Yinling) == 2, position(Jiushang) == 3, position(Fuyi) == 4, position(Huyao) == 5)) ::: (C)\nis_possible(And(position(Haoyun) == 1, position(Huyao) == 2, position(Fuyi) == 3, position(Yinling) == 4, position(Jiushang) == 5)) ::: (D)"
    ],
    "entities": 5,
    "entities_found": 5, 
    "functions": 1,
    "functions_correct": 1,
    "special_entities" : 3,
    "coreference": 3,
    "coreference_found": 3,
    "constraints": 5,
    "constraints_correct": 5,
    "option_correct": 0
  },
  {
    "id": 16,
    "context": "There are five stations set up from west to east along a section of the high-speed railway along the river.It is known that Fuyi Station is east of Haoyun Station and West of Huyao Station, and is adjacent to Huyao Station; Jiushang Station is adjacent to Yinling Station.",
    "question": "If Jiushang Station is adjacent to Haoyun Station and east of Haoyun Station, it can be concluded that?",
    "answer": "A",
    "options": [
      "A.Hu Yao is standing on the east side;",
      "B.Fuyi is standing in the west;",
      "C.Yinling is standing on the east side;",
      "D.Leek standing on the west side;"
    ],
    "raw_logic_programs": [
      "# Declarations\nstations = EnumSort([Fuyi, Haoyun, Huyao, Jiushang, Yinling])\nposition = Function([stations] -> [int])\n\n# Constraints\nForAll([s:stations], And(1 <= position(s), position(s) <= 5)) ::: Each station has a unique position from 1 to 5\nDistinct([s:stations], position(s)) ::: No two stations can occupy the same position\nAnd(position(Haoyun) < position(Fuyi), position(Fuyi) < position(Huyao), position(Fuyi) + 1 == position(Huyao)) ::: Fuyi Station is east of Haoyun Station and west of Huyao Station, and is adjacent to Huyao Station\nOr(position(Jiushang) + 1 == position(Yinling), position(Jiushang) - 1 == position(Yinling)) ::: Jiushang Station is adjacent to Yinling Station\n\n# Additional Constraint from Question\nAnd(position(Jiushang) == position(Haoyun) + 1, position(Jiushang) > position(Haoyun)) ::: Jiushang Station is adjacent to Haoyun Station and east of Haoyun Station\n\n# Options\nQuestion ::: If Jiushang Station is adjacent to Haoyun Station and east of Haoyun Station, it can be concluded that?\nis_valid(position(Huyao) > position(Jiushang)) ::: (A) Huyao is standing on the east side\nis_valid(position(Fuyi) < position(Jiushang)) ::: (B) Fuyi is standing in the west\nis_valid(position(Yinling) > position(Jiushang)) ::: (C) Yinling is standing on the east side\nis_valid(position(Haoyun) < position(Jiushang)) ::: (D) Leek standing on the west side\n\nNote: The options provided in the question seem to have some inconsistencies or errors in naming (e.g., \"Leek\" is not mentioned in the problem description). The logic program assumes that the options are related to the positions of the stations mentioned in the problem."
    ],
    "entities": 5,
    "entities_found": 5, 
    "functions": 1,
    "functions_correct": 1,
    "special_entities" : 3,
    "coreference": 3,
    "coreference_found": 3,
    "constraints": 6,
    "constraints_correct": 6,
    "option_correct": 4
  },
  {
    "id": 17,
    "context": "There are five stations set up from west to east along a section of the high-speed railway along the river.It is known that Fuyi Station is east of Haoyun Station and West of Huyao Station, and is adjacent to Huyao Station; Jiushang Station is adjacent to Yinling Station.",
    "question": "If Hao Yun stands to the east of Jiushang Station, you can get?",
    "answer": "B",
    "options": [
      "A.Yinling Station is adjacent to Haoyun Station and west of Haoyun Station;",
      "B.Haoyun Station is adjacent to Fuyi Station and west of Fuyi Station;",
      "C.Jiushang Station is adjacent to Haoyun Station and west of Haoyun Station;",
      "D.Yinling Station is adjacent to Fuyi Station and west of Fuyi Station;"
    ],
    "raw_logic_programs": [
      "# Declarations\nstations = EnumSort([Fuyi, Haoyun, Huyao, Jiushang, Yinling])\nposition = Function([stations] -> [int])\nForAll([s:stations], And(1 <= position(s), position(s) <= 5))\n\n# Constraints\nposition(Fuyi) > position(Haoyun) ::: Fuyi Station is east of Haoyun Station\nposition(Fuyi) < position(Huyao) ::: Fuyi Station is west of Huyao Station\nAbs(position(Fuyi) - position(Huyao)) == 1 ::: Fuyi Station is adjacent to Huyao Station\nAbs(position(Jiushang) - position(Yinling)) == 1 ::: Jiushang Station is adjacent to Yinling Station\n\n# Options\nQuestion ::: If Haoyun Station is to the east of Jiushang Station, you can get?\nis_sat(And(Abs(position(Yinling) - position(Haoyun)) == 1, position(Yinling) < position(Haoyun))) ::: (A) Yinling Station is adjacent to Haoyun Station and west of Haoyun Station\nis_sat(And(Abs(position(Haoyun) - position(Fuyi)) == 1, position(Haoyun) < position(Fuyi))) ::: (B) Haoyun Station is adjacent to Fuyi Station and west of Fuyi Station\nis_sat(And(Abs(position(Jiushang) - position(Haoyun)) == 1, position(Jiushang) < position(Haoyun))) ::: (C) Jiushang Station is adjacent to Haoyun Station and west of Haoyun Station\nis_sat(And(Abs(position(Yinling) - position(Fuyi)) == 1, position(Yinling) < position(Fuyi))) ::: (D) Yinling Station is adjacent to Fuyi Station and west of Fuyi Station"
    ],
    "entities": 5,
    "entities_found": 5, 
    "functions": 1,
    "functions_correct": 1,
    "special_entities" : 3,
    "coreference": 3,
    "coreference_found": 3,
    "constraints": 6,
    "constraints_correct": 6,
    "option_correct": 4
  },
  {
    "id": 18,
    "context": "There are five stations set up from west to east along a section of the high-speed railway along the river.It is known that Fuyi Station is east of Haoyun Station and West of Huyao Station, and is adjacent to Huyao Station; Jiushang Station is adjacent to Yinling Station.",
    "question": "If Haoyun Station is adjacent to Yinling Station, you can get?",
    "answer": "D",
    "options": [
      "A.Yinling is standing west of Haoyun Station",
      "B.Fuyi standing west of Jiushang Station",
      "C.Hao Yun stands west of Yinling Station",
      "D.Jiu Shang standing west of Fuyi Station"
    ],
    "raw_logic_programs": [
      "# Declarations\nstations = EnumSort([Fuyi, Haoyun, Huyao, Jiushang, Yinling])\nposition = Function([stations] -> [int])\nForAll([s:stations], And(1 <= position(s), position(s) <= 5))\n\n# Constraints\nposition(Fuyi) > position(Haoyun) ::: Fuyi Station is east of Haoyun Station\nposition(Fuyi) < position(Huyao) ::: Fuyi Station is west of Huyao Station\nAbs(position(Fuyi) - position(Huyao)) == 1 ::: Fuyi Station is adjacent to Huyao Station\nAbs(position(Jiushang) - position(Yinling)) == 1 ::: Jiushang Station is adjacent to Yinling Station\n\n# Options\nQuestion ::: If Haoyun Station is adjacent to Yinling Station, you can get?\nis_sat(And(Abs(position(Haoyun) - position(Yinling)) == 1, position(Yinling) < position(Haoyun))) ::: (A) Yinling is standing west of Haoyun Station\nis_sat(And(Abs(position(Haoyun) - position(Yinling)) == 1, position(Fuyi) < position(Jiushang))) ::: (B) Fuyi standing west of Jiushang Station\nis_sat(And(Abs(position(Haoyun) - position(Yinling)) == 1, position(Haoyun) < position(Yinling))) ::: (C) Hao Yun stands west of Yinling Station\nis_sat(And(Abs(position(Haoyun) - position(Yinling)) == 1, position(Jiushang) < position(Fuyi))) ::: (D) Jiu Shang standing west of Fuyi Station"
    ],
    "entities": 5,
    "entities_found": 5, 
    "functions": 1,
    "functions_correct": 1,
    "special_entities" : 3,
    "coreference": 3,
    "coreference_found": 3,
    "constraints": 6,
    "constraints_correct": 6,
    "option_correct": 4
  },
  {
    "id": 19,
    "context": "Leeds lived in the middle Jurassic about 165 million years ago.
    It is a huge fish in the dinosaur era.
    Leeds can grow up to 9 meters long within 20 years of birth, with an average life span of about 40 years.
    The largest body length can even reach 16.5 meters.
    This size is comparable to the largest whale shark in modern times, 
    and the average lifespan of the whale shark is about 70 years, so the growth rate of Leeds is likely to exceed that of the whale shark.",
    "question": "Which of the following, if true, can best refute the above argument?",
    "answer": "B",
    "options": [
      "A.Leeds fish and whale sharks feed on plankton and small animals in the ocean, and the growth rate cannot be significantly different.",
      "B.Although the lifespan of the Leeds fish and the whale shark differ greatly, they all reach adulthood around the age of 20, and their body shape is basically fixed.",
      "C.Although the lifespan of fish is different, their growth stages basically correspond to their juvenile, adult, middle-aged and elderly",
      "D.There is no obvious change in the growth cycle of Jurassic fish and modern fish"
    ],
    "raw_logic_programs": [
      "# Declarations\n
      species = EnumSort([Leeds, WhaleShark])\n
      attributes = EnumSort([growth_rate, lifespan, adulthood_age])\n
      values = EnumSort([high, low, same, different, fixed, variable])\n\n# 
      
      Constraints\n
      growth_rate(Leeds) > growth_rate(WhaleShark) ::: The growth rate of Leeds is likely to exceed that of the whale shark\n
      lifespan(Leeds) < lifespan(WhaleShark) ::: The average lifespan of Leeds is about 40 years, while the whale shark is about 70 years\n
      adulthood_age(Leeds) == adulthood_age(WhaleShark) ::: Both reach adulthood around the age of 20\n\n# 
      
      Options\nQuestion ::: Which of the following, if true, can best refute the above argument?\n
      is_refutation(And(growth_rate(Leeds) == growth_rate(WhaleShark), feeds_on(Leeds) == feeds_on(WhaleShark))) ::: (A)\n
      is_refutation(And(adulthood_age(Leeds) == adulthood_age(WhaleShark), body_shape_fixed(Leeds) == body_shape_fixed(WhaleShark))) ::: (B)\n
      is_refutation(And(lifespan_stages(Leeds) == lifespan_stages(WhaleShark))) ::: (C)\n
      is_refutation(And(growth_cycle(Leeds) == growth_cycle(WhaleShark))) ::: (D)"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 20,
    "context": "In 27.3 years, three canoes were continuously excavated on the Huai River beach in Xinyang County, Henan.Among them, in 2010, the first canoe was discovered under the Huaihe River beach in the Zhangzhuang Formation of Xuzhuang Village, Chengjiao Township, Xixian County, which was proved to be one of the earliest and largest canoe in China.The canoe is 9.3 meters long, 0.8 meters wide and 0.6 meters high.According to carbon-14 measurement, the materials for these canoes are exactly the same as the wood produced in tropical regions of Yunnan.This shows that in ancient times more than 3,000 years ago, the climate in Henan was very similar to the tropical climate.The climate on both sides of the middle and lower reaches of the Huaihe River is warm and humid, with tall and dense forests and a wide variety of animals and plants.",
    "question": "Which of the following, if true, will best support the above argument?",
    "answer": "A",
    "options": [
      "A.The raw materials of these canoes cannot be transported from the distant Yunnan virgin forest, they can only be obtained locally",
      "B.These canoes have been soaked in water for thousands of years and are very heavy",
      "C.The place where the Qi Zhou Qiu Jian story takes place is the Chu area, including south of Xuchang, Henan",
      "D.The canoe hull is pointed at both ends and is chiseled from a complete log for better preservation"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_argument = Function([statements] -> [bool])\n\n# Constraints\nargument = \"In ancient times more than 3,000 years ago, the climate in Henan was very similar to the tropical climate.\"\n\n# Options\nQuestion ::: Which of the following, if true, will best support the above argument?\nsupports_argument(A) ::: (A) The raw materials of these canoes cannot be transported from the distant Yunnan virgin forest, they can only be obtained locally\nsupports_argument(B) ::: (B) These canoes have been soaked in water for thousands of years and are very heavy\nsupports_argument(C) ::: (C) The place where the Qi Zhou Qiu Jian story takes place is the Chu area, including south of Xuchang, Henan\nsupports_argument(D) ::: (D) The canoe hull is pointed at both ends and is chiseled from a complete log for better preservation"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 21,
    "context": "In a study, 51 middle school student volunteers were divided into a test group and a control group to receive the same mathematics training.During the five-day training, the researchers used a technique called transcranial random noise stimulation to lightly shock the areas of the brains of 25 test group members that were considered to be related to computing power.The subsequent test results showed that the mathematics ability of the test group members was significantly higher than that of the control group members.To their surprise, the effect of this ability improvement can last at least half a year.The researchers therefore believe that micro-shocks in the brain can improve the brain's computing power.",
    "question": "Which of the following, if true, best supports the above researchers 'views?",
    "answer": "C",
    "options": [
      "A.This non-invasive stimulus is inexpensive and will not cause any pain to the human body",
      "B.After a slight electric shock to the brain, the blood flow between the neurons in the brain is significantly enhanced, but it returns to normal after multiple stimulations",
      "C.Before the experiment, the mathematics scores of the two groups of students were almost the same",
      "D.Subjects with microshocks in the brain are more concerned about their behavior, and their concentration is more focused during the test"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([test_group, control_group])\nabilities = EnumSort([math_ability])\nshocks = EnumSort([micro_shocks, no_shocks])\nscores = Function([students] -> [int])\nimprovement = Function([students] -> [bool])\n\n# Constraints\nCount([s:students], s == test_group) == 25 ::: 25 test group members received micro-shocks\nCount([s:students], s == control_group) == 26 ::: 26 control group members did not receive micro-shocks\nForAll([s:students], Implies(s == test_group, shocks(s) == micro_shocks)) ::: Test group received micro-shocks\nForAll([s:students], Implies(s == control_group, shocks(s) == no_shocks)) ::: Control group did not receive micro-shocks\nForAll([s:students], Implies(shocks(s) == micro_shocks, improvement(s) == True)) ::: Micro-shocks improve math ability\nForAll([s:students], Implies(shocks(s) == no_shocks, improvement(s) == False)) ::: No improvement without micro-shocks\n\n# Options\nQuestion ::: Which of the following, if true, best supports the above researchers' views?\nis_supportive(And(scores(test_group) == scores(control_group), improvement(test_group) == True)) ::: (A)\nis_supportive(And(scores(test_group) > scores(control_group), improvement(test_group) == True)) ::: (B)\nis_supportive(And(scores(test_group) == scores(control_group), improvement(test_group) == False)) ::: (C)\nis_supportive(And(scores(test_group) > scores(control_group), improvement(test_group) == False)) ::: (D)"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 22,
    "context": "An institution conducted a survey on the average house prices of three types of residential housing in three cities (A.B, and C) in eastern China (these are villas, ordinary commercial houses, and affordable housing from high to low), and the published information includes The following content? according to the price of villa houses, from high to low are A City, B City, and C City; according to the price of ordinary commercial houses, from high to low are A City, B City, and B City; according to affordable housing prices , From high to low are B city, A city, C city.",
    "question": "Regarding the overall average price of residential housing in the above three cities, which of the following judgments is wrong?",
    "answer": "D",
    "options": [
      "A.The overall average price of residential housing in A City is the highest",
      "B.The overall average price of residential housing in City B is in the middle",
      "C.The overall average price of residential housing in Cingcheng is the lowest",
      "D.The overall average price of residential housing in A City is the lowest"
    ],
    "raw_logic_programs": [
      "# Declarations\ncities = EnumSort([A, B, C])\nhousing_types = EnumSort([villas, ordinary_commercial, affordable])\nprices = Function([cities, housing_types] -> [int])\n\n# Constraints\nAnd(prices(A, villas) > prices(B, villas), prices(B, villas) > prices(C, villas)) ::: according to the price of villa houses, from high to low are A City, B City, and C City\nAnd(prices(A, ordinary_commercial) > prices(B, ordinary_commercial), prices(B, ordinary_commercial) > prices(C, ordinary_commercial)) ::: according to the price of ordinary commercial houses, from high to low are A City, B City, and C City\nAnd(prices(B, affordable) > prices(A, affordable), prices(A, affordable) > prices(C, affordable)) ::: according to affordable housing prices, from high to low are B city, A city, C city\n\n# Options\nQuestion ::: Regarding the overall average price of residential housing in the above three cities, which of the following judgments is wrong?\nis_wrong(average(prices(A, villas), prices(A, ordinary_commercial), prices(A, affordable)) > average(prices(B, villas), prices(B, ordinary_commercial), prices(B, affordable)) > average(prices(C, villas), prices(C, ordinary_commercial), prices(C, affordable))) ::: (A)\nis_wrong(average(prices(B, villas), prices(B, ordinary_commercial), prices(B, affordable)) > average(prices(C, villas), prices(C, ordinary_commercial), prices(C, affordable)) > average(prices(A, villas), prices(A, ordinary_commercial), prices(A, affordable))) ::: (B)\nis_wrong(average(prices(C, villas), prices(C, ordinary_commercial), prices(C, affordable)) < average(prices(A, villas), prices(A, ordinary_commercial), prices(A, affordable)) < average(prices(B, villas), prices(B, ordinary_commercial), prices(B, affordable))) ::: (C)\nis_wrong(average(prices(A, villas), prices(A, ordinary_commercial), prices(A, affordable)) < average(prices(B, villas), prices(B, ordinary_commercial), prices(B, affordable)) < average(prices(C, villas), prices(C, ordinary_commercial), prices(C, affordable))) ::: (D)"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 23,
    "context": "The secret of the 'age' of human male and female ancestors is hidden in the Y chromosome and mitochondria.The Y chromosome only passes from father to son, while mitochondria only pass from mother to daughter.Looking back through these two genetic materials, we can find that all men have a common male ancestor 'Y chromosome Adam', and all women have a common female ancestor 'mitochondrial Eve'.The researchers conducted genome sequencing and comparative analysis of 69 males from nine different populations, such as Asia, Africa, and Latin America, and found that this male common ancestor 'Y chromosome Adam' was formed about 156,000 to 120,000 years ago.Using the same technical analysis of mitochondria, the researchers also calculated that this female common ancestor 'mitochondrial Eve' was formed between 148,000 and 99,000 years ago.",
    "question": "Which of the following is most appropriate as a corollary of the above discussion?",
    "answer": "A",
    "options": [
      "A.'Y chromosome Adam' and 'mitochondrial Eve' were formed in the same period, and 'age' is close, 'Y chromosome Adam' may be earlier.",
      "B.15 years ago, there was only one man 'Adam' on earth",
      "C.As two individuals, 'Adam' and 'Eve' should never meet",
      "D.Men and women are born together and have conceived modern humans together"
    ],
    "raw_logic_programs": [
      "# Declarations\nancestors = EnumSort([Y_chromosome_Adam, mitochondrial_Eve])\ntime_periods = EnumSort([formed_156k_to_120k_years_ago, formed_148k_to_99k_years_ago])\nformed = Function([ancestors] -> [time_periods])\n\n# Constraints\nformed(Y_chromosome_Adam) == formed_156k_to_120k_years_ago ::: Y chromosome Adam was formed about 156,000 to 120,000 years ago\nformed(mitochondrial_Eve) == formed_148k_to_99k_years_ago ::: mitochondrial Eve was formed between 148,000 and 99,000 years ago\n\n# Options\nQuestion ::: Which of the following is most appropriate as a corollary of the above discussion?\nis_corollary(And(formed(Y_chromosome_Adam) == formed_156k_to_120k_years_ago, formed(mitochondrial_Eve) == formed_148k_to_99k_years_ago)) ::: (A) 'Y chromosome Adam' and 'mitochondrial Eve' were formed in the same period, and 'age' is close, 'Y chromosome Adam' may be earlier.\nis_corollary(False) ::: (B) 15 years ago, there was only one man 'Adam' on earth\nis_corollary(False) ::: (C) As two individuals, 'Adam' and 'Eve' should never meet\nis_corollary(False) ::: (D) Men and women are born together and have conceived modern humans together"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 24,
    "context": "Research has found that insects 'breathe' through the stomata system on their bodies.The stomata are connected to the trachea, and more and more layers of smaller and smaller air are attached from top to bottom, thereby bringing oxygen to the whole body.At the current level of oxygen in the atmosphere, the total length of the stomata system has reached the limit; if the total length exceeds this limit, the oxygen supply capacity will be insufficient.Therefore, it can be judged that the amount of oxygen content can determine the size of insects.",
    "question": "Which of the following, if true, would best support the above argument?",
    "answer": "B",
    "options": [
      "A.Studies of invertebrates in the ocean have also found that in colder water and with higher oxygen content, the organisms there are also larger",
      "B.During the Carboniferous period, the concentration of oxygen in the earth 's atmosphere was as high as 35%, much higher than the current 21%.At that time, there were many giant insects on the earth, and the wingspan of the dragonfly was close to one meter.",
      "C.Small locusts cannot survive in a low-oxygen environment, especially in an environment with an oxygen concentration below 15%.Adult locusts can survive in an environment with 2% oxygen",
      "D.Under the environment with high oxygen content and high air pressure, the tested fruit flies lived to the fifth generation and their body size increased by 20%"
    ],
    "raw_logic_programs": [
      "# Declarations\ninsects = EnumSort([insects])\noxygen_levels = EnumSort([current, higher, lower])\nsize = Function([insects, oxygen_levels] -> [int])\n\n# Constraints\nsize(insects, current) == limit ::: At the current level of oxygen in the atmosphere, the total length of the stomata system has reached the limit\nForAll([o:oxygen_levels], size(insects, o) <= limit) ::: if the total length exceeds this limit, the oxygen supply capacity will be insufficient\nForAll([o1:oxygen_levels, o2:oxygen_levels], Implies(o1 < o2, size(insects, o1) < size(insects, o2))) ::: the amount of oxygen content can determine the size of insects\n\n# Options\nQuestion ::: Which of the following, if true, would best support the above argument?\nis_supportive(Studies of invertebrates in the ocean have also found that in colder water and with higher oxygen content, the organisms there are also larger) ::: (A)\nis_supportive(During the Carboniferous period, the concentration of oxygen in the earth's atmosphere was as high as 35%, much higher than the current 21%. At that time, there were many giant insects on the earth, and the wingspan of the dragonfly was close to one meter.) ::: (B)\nis_supportive(Small locusts cannot survive in a low-oxygen environment, especially in an environment with an oxygen concentration below 15%. Adult locusts can survive in an environment with 2% oxygen) ::: (C)\nis_supportive(Under the environment with high oxygen content and high air pressure, the tested fruit flies lived to the fifth generation and their body size increased by 20%) ::: (D)"
    ],
    "entities": 0,
    "entities_found": 0, 
    "functions": 0,
    "functions_correct": 0,
    "special_entities" : 0,
    "coreference": 0,
    "coreference_found": 0,
    "constraints": 0,
    "constraints_correct": 0,
    "option_correct": 0
  },
  {
    "id": 25,
    "context": "A certain class intends to select two of three girls from Fang Rufen, Guo Yanran, He Zhilian, and three from five male students such as Peng Youwen, Qiu Zhijie, Ren Xiangyang, Song Wenkai, Tang Xiaohua to form a five-person support group for college students to volunteer teaching in the mountains.Requirements? (1) Guo Yanran and Tang Xiaohua are not selected at the same time; (2) Peng Youwen and Song Kaiwen are not selected at the same time; (3) Qiu Zhijie and Tang Xiaohua are not selected at the same time.",
    "question": "Which of the following must be selected?",
    "answer": "D",
    "options": [
      "A.Fang Rufen",
      "B.Guo Yanran",
      "C.Song Kaiwen",
      "D.Ren Xiangyang"
    ],
    "raw_logic_programs": [
      "# Declarations\ngirls = EnumSort([Fang_Rufen, Guo_Yanran, He_Zhilian])\nboys = EnumSort([Peng_Youwen, Qiu_Zhijie, Ren_Xiangyang, Song_Wenkai, Tang_Xiaohua])\nselected_girls = Function([girls] -> [bool])\nselected_boys = Function([boys] -> [bool])\n\n# Constraints\nCount([g:girls], selected_girls(g)) == 2 ::: Select two of three girls\nCount([b:boys], selected_boys(b)) == 3 ::: Select three of five boys\nNot(And(selected_girls(Guo_Yanran), selected_boys(Tang_Xiaohua))) ::: Guo Yanran and Tang Xiaohua are not selected at the same time\nNot(And(selected_boys(Peng_Youwen), selected_boys(Song_Wenkai))) ::: Peng Youwen and Song Kaiwen are not selected at the same time\nNot(And(selected_boys(Qiu_Zhijie), selected_boys(Tang_Xiaohua))) ::: Qiu Zhijie and Tang Xiaohua are not selected at the same time\n\n# Options\nQuestion ::: Which of the following must be selected?\nis_must(ForAll([g:girls], selected_girls(Fang_Rufen))) ::: (A) Fang Rufen\nis_must(ForAll([g:girls], selected_girls(Guo_Yanran))) ::: (B) Guo Yanran\nis_must(ForAll([b:boys], selected_boys(Song_Wenkai))) ::: (C) Song Kaiwen\nis_must(ForAll([b:boys], selected_boys(Ren_Xiangyang))) ::: (D) Ren Xiangyang"
    ]
  },
  {
    "id": 26,
    "context": "A certain class intends to select two of three girls from Fang Rufen, Guo Yanran, He Zhilian, and three from five male students such as Peng Youwen, Qiu Zhijie, Ren Xiangyang, Song Wenkai, Tang Xiaohua to form a five-person support group for college students to volunteer teaching in the mountains.Requirements? (1) Guo Yanran and Tang Xiaohua are not selected at the same time; (2) Peng Youwen and Song Kaiwen are not selected at the same time; (3) Qiu Zhijie and Tang Xiaohua are not selected at the same time.",
    "question": "If Guo Yanran is selected, which of the following must also be selected?",
    "answer": "D",
    "options": [
      "A.Fang Rufen",
      "B.He Zhilian",
      "C.Peng Youwen",
      "D.Qiu Zhijie"
    ],
    "raw_logic_programs": [
      "# Declarations\ngirls = EnumSort([Fang_Rufen, Guo_Yanran, He_Zhilian])\nboys = EnumSort([Peng_Youwen, Qiu_Zhijie, Ren_Xiangyang, Song_Wenkai, Tang_Xiaohua])\nselected_girls = Function([girls] -> [bool])\nselected_boys = Function([boys] -> [bool])\n\n# Constraints\nCount([g:girls], selected_girls(g)) == 2 ::: Select two of three girls\nCount([b:boys], selected_boys(b)) == 3 ::: Select three of five boys\nNot(And(selected_girls(Guo_Yanran), selected_boys(Tang_Xiaohua))) ::: Guo Yanran and Tang Xiaohua are not selected at the same time\nNot(And(selected_boys(Peng_Youwen), selected_boys(Song_Wenkai))) ::: Peng Youwen and Song Kaiwen are not selected at the same time\nNot(And(selected_boys(Qiu_Zhijie), selected_boys(Tang_Xiaohua))) ::: Qiu Zhijie and Tang Xiaohua are not selected at the same time\n\n# Options\nQuestion ::: If Guo Yanran is selected, which of the following must also be selected?\nis_must(selected_girls(Fang_Rufen)) ::: (A)\nis_must(selected_girls(He_Zhilian)) ::: (B)\nis_must(selected_boys(Peng_Youwen)) ::: (C)\nis_must(selected_boys(Qiu_Zhijie)) ::: (D)"
    ]
  },
  {
    "id": 27,
    "context": "A certain class intends to select two of three girls from Fang Rufen, Guo Yanran, He Zhilian, and three from five boys, including Peng Youwen, Qiu Zhijie, Ren Xiangyang, Song Wenkai, and Tang Xiaohua, to form a five-person support group for university students to volunteer teaching in the mountains.Requirements? (1) Guo Yanran and Tang Xiaohua are not selected at the same time; (2) Peng Youwen and Song Kaiwen are not selected at the same time; (3) Qiu Zhijie and Tang Xiaohua are not selected at the same time.",
    "question": "If He Zhilian is not selected, which of the following is not selected?",
    "answer": "A",
    "options": [
      "A.Tang Xiaohua",
      "B.Peng Youwen",
      "C.Qiu Zhijie",
      "D.Song Wenkai"
    ],
    "raw_logic_programs": [
      "# Declarations\ngirls = EnumSort([Fang_Rufen, Guo_Yanran, He_Zhilian])\nboys = EnumSort([Peng_Youwen, Qiu_Zhijie, Ren_Xiangyang, Song_Wenkai, Tang_Xiaohua])\nselected = Function([girls + boys] -> [bool])\n\n# Constraints\nCount([g:girls], selected(g)) == 2 ::: Select two of three girls\nCount([b:boys], selected(b)) == 3 ::: Select three of five boys\nNot(And(selected(Guo_Yanran), selected(Tang_Xiaohua))) ::: Guo Yanran and Tang Xiaohua are not selected at the same time\nNot(And(selected(Peng_Youwen), selected(Song_Wenkai))) ::: Peng Youwen and Song Kaiwen are not selected at the same time\nNot(And(selected(Qiu_Zhijie), selected(Tang_Xiaohua))) ::: Qiu Zhijie and Tang Xiaohua are not selected at the same time\n\n# Options\nQuestion ::: If He Zhilian is not selected, which of the following is not selected?\nis_unsat(selected(Tang_Xiaohua)) ::: (A)\nis_unsat(selected(Peng_Youwen)) ::: (B)\nis_unsat(selected(Qiu_Zhijie)) ::: (C)\nis_unsat(selected(Song_Wenkai)) ::: (D)"
    ]
  },
  {
    "id": 28,
    "context": "A certain class intends to select two of three girls from Fang Rufen, Guo Yanran, He Zhilian, and three from five boys, including Peng Youwen, Qiu Zhijie, Ren Xiangyang, Song Wenkai, and Tang Xiaohua, to form a five-person support group for university students to volunteer teaching in the mountains.Requirements? (1) Guo Yanran and Tang Xiaohua are not selected at the same time; (2) Peng Youwen and Song Kaiwen are not selected at the same time; (3) Qiu Zhijie and Tang Xiaohua are not selected at the same time.",
    "question": "If Tang Xiaohua is selected, which two of the following must be selected?",
    "answer": "D",
    "options": [
      "A.Fang Rufen and Guo Yanran",
      "B.Guo Yanran and He Zhilian",
      "C.Peng Youwen and He Zhilian",
      "D.Fang Rufen and He Zhilian"
    ],
    "raw_logic_programs": [
      "# Declarations\ngirls = EnumSort([Fang_Rufen, Guo_Yanran, He_Zhilian])\nboys = EnumSort([Peng_Youwen, Qiu_Zhijie, Ren_Xiangyang, Song_Wenkai, Tang_Xiaohua])\nselected_girls = Function([girls] -> [bool])\nselected_boys = Function([boys] -> [bool])\n\n# Constraints\nCount([g:girls], selected_girls(g)) == 2 ::: Select two of three girls\nCount([b:boys], selected_boys(b)) == 3 ::: Select three of five boys\nNot(And(selected_girls(Guo_Yanran), selected_boys(Tang_Xiaohua))) ::: Guo Yanran and Tang Xiaohua are not selected at the same time\nNot(And(selected_boys(Peng_Youwen), selected_boys(Song_Wenkai))) ::: Peng Youwen and Song Kaiwen are not selected at the same time\nNot(And(selected_boys(Qiu_Zhijie), selected_boys(Tang_Xiaohua))) ::: Qiu Zhijie and Tang Xiaohua are not selected at the same time\n\n# Options\nQuestion ::: If Tang Xiaohua is selected, which two of the following must be selected?\nis_must(And(selected_girls(Fang_Rufen), selected_girls(Guo_Yanran))) ::: (A)\nis_must(And(selected_girls(Guo_Yanran), selected_girls(He_Zhilian))) ::: (B)\nis_must(And(selected_boys(Peng_Youwen), selected_girls(He_Zhilian))) ::: (C)\nis_must(And(selected_girls(Fang_Rufen), selected_girls(He_Zhilian))) ::: (D)"
    ]
  },
  {
    "id": 29,
    "context": "From the 'Aklyusian monkey', the researchers discovered the characteristics of many apes.For example, a bone in its heel is short and wide.In addition, the 'Aklyusian monkey' has a small eye socket, and scientists speculate that it is active during the day, just like the ancestors of the early apes.",
    "question": "Which of the following, if true, best supports the above-mentioned scientists 'speculation?",
    "answer": "D",
    "options": [
      "A.The short and wide hind bone makes this primate good at jumping and preying in the bushes",
      "B.There is no strict proportional relationship between animal vision and orbital size",
      "C.The time when the earliest great apes separated from other primates was at least 55 million years ago",
      "D.Animals dominated by nocturnal activities, generally have larger eyes"
    ],
    "raw_logic_programs": [
      "# Declarations\ncharacteristics = EnumSort([short_wide_heel, small_eye_socket, active_during_day])\nspeculation = Function([characteristics] -> [bool])\n\n# Constraints\nspeculation(small_eye_socket) == True ::: The 'Aklyusian monkey' has a small eye socket, and scientists speculate that it is active during the day\n\n# Options\nQuestion ::: Which of the following, if true, best supports the above-mentioned scientists' speculation?\nis_supportive(Implies(small_eye_socket, active_during_day)) ::: (A) The short and wide hind bone makes this primate good at jumping and preying in the bushes\nis_supportive(Implies(Not(small_eye_socket), Not(active_during_day))) ::: (B) There is no strict proportional relationship between animal vision and orbital size\nis_supportive(Implies(small_eye_socket, active_during_day)) ::: (C) The time when the earliest great apes separated from other primates was at least 55 million years ago\nis_supportive(Implies(Not(small_eye_socket), Not(active_during_day))) ::: (D) Animals dominated by nocturnal activities generally have larger eyes"
    ]
  },
  {
    "id": 30,
    "context": "Conne Levi with a 'moe' look looks like other newborns.But because it is the world's first test-tube baby screened by next-generation gene sequencing technology, his advent has attracted the attention of experts and scholars.Not long ago, this news detonated the audience at the 'European Society of Human Reproduction and Embryology Annual Meeting' held in London, England.And ordinary people also believe that humans may usher in the era of 'customized babies'.",
    "question": "Which of the following, if true, would best refute the views of ordinary people?",
    "answer": "C",
    "options": [
      "A.'Artificial' genetic screening does not rule out that there will be loopholes; in natural conception, the guidelines for survival of the fittest in nature seem to be more subtle and effective",
      "B.It can be seen from the development history of modern science and technology that technological development is often faster than human cognition, and sometimes technology will go further and deviate from the track of human cognition",
      "C.Gene screening is mainly to avoid reproductive defects, this technology brings opportunities for human eugenics and eugenics; as for 'customized babies', the concept of cloning is more involved, the two should not be confused",
      "D.'Customized babies' have not been tried globally, this concept also challenges the most controversial human reproductive ethics"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrefutes = Function([statements] -> [bool])\n\n# Constraints\nrefutes(A) ::: 'Artificial' genetic screening does not rule out that there will be loopholes; in natural conception, the guidelines for survival of the fittest in nature seem to be more subtle and effective\nrefutes(B) ::: It can be seen from the development history of modern science and technology that technological development is often faster than human cognition, and sometimes technology will go further and deviate from the track of human cognition\nrefutes(C) ::: Gene screening is mainly to avoid reproductive defects, this technology brings opportunities for human eugenics and eugenics; as for 'customized babies', the concept of cloning is more involved, the two should not be confused\nrefutes(D) ::: 'Customized babies' have not been tried globally, this concept also challenges the most controversial human reproductive ethics\n\n# Options\nQuestion ::: Which of the following, if true, would best refute the views of ordinary people?\nis_best_refute(refutes(A)) ::: (A)\nis_best_refute(refutes(B)) ::: (B)\nis_best_refute(refutes(C)) ::: (C)\nis_best_refute(refutes(D)) ::: (D)"
    ]
  },
  {
    "id": 31,
    "context": "The basis of life-the main component of protein is an amino acid molecule.It is an organic molecule.Although people have not directly observed amino acid molecules in cosmic space, scientists have used hydrogen, water, oxygen, methane and formaldehyde in the laboratory to simulate the natural conditions of space.Kinds of amino acids.The raw materials used to synthesize amino acids are abundant in interstellar molecules.It is not difficult to imagine that there must also be amino acid molecules in the universe.As long as there is an appropriate environment, they may be transformed into proteins and further develop into organic life.According to this speculation, there are living bodies on other planets than the earth, and may even be living bodies with higher intelligence.",
    "question": "Which of the following is true to best refute the above speculation?",
    "answer": "A",
    "options": [
      "A.There is a huge difference between the process of developing from protein to organic life and the process from organic molecules to protein",
      "B.Higher intelligence is not only a product of material evolution, but also a product of continuous socialization",
      "C.In the natural environment, the synthesis of amino acid molecules from existing interstellar molecules is a small probability event",
      "D.Some interstellar molecules are not found in the Earth 's environment, and they are still not available in the laboratory"
    ],
    "raw_logic_programs": [
      "# Declarations\ncomponents = EnumSort([amino_acid, protein, organic_life, higher_intelligence])\nprocesses = EnumSort([synthesis, development, evolution, socialization])\nevents = EnumSort([small_probability, large_probability])\nenvironments = EnumSort([earth, space, laboratory])\nmolecules = EnumSort([interstellar, earth_specific])\nexistence = Function([components, environments] -> [bool])\nprocess_occurs = Function([processes, environments] -> [bool])\nprobability = Function([processes] -> [events])\navailability = Function([molecules, environments] -> [bool])\n\n# Constraints\nexistence(amino_acid, space) ::: amino acid molecules are speculated to exist in space\nexistence(protein, earth) ::: proteins are known to exist on Earth\nexistence(organic_life, earth) ::: organic life is known to exist on Earth\nexistence(higher_intelligence, earth) ::: higher intelligence is known to exist on Earth\nprocess_occurs(synthesis, laboratory) ::: synthesis of amino acids has been simulated in the laboratory\navailability(interstellar, space) ::: interstellar molecules are abundant in space\navailability(earth_specific, earth) ::: earth-specific molecules are found on Earth\n\n# Options\nQuestion ::: Which of the following is true to best refute the above speculation?\nis_true(And(process_occurs(development, earth), Not(process_occurs(development, space)))) ::: (A) There is a huge difference between the process of developing from protein to organic life and the process from organic molecules to protein\nis_true(And(process_occurs(evolution, earth), process_occurs(socialization, earth), Not(process_occurs(socialization, space)))) ::: (B) Higher intelligence is not only a product of material evolution, but also a product of continuous socialization\nis_true(probability(synthesis) == small_probability) ::: (C) In the natural environment, the synthesis of amino acid molecules from existing interstellar molecules is a small probability event\nis_true(And(Not(availability(interstellar, earth)), Not(availability(interstellar, laboratory)))) ::: (D) Some interstellar molecules are not found in the Earth's environment, and they are still not available in the laboratory"
    ]
  },
  {
    "id": 32,
    "context": "To date, the oldest Homo sapiens remains have appeared in Africa, about 200,000 years ago.According to this, many scientists believe that humans originated in Africa, and Homo sapiens, the direct ancestor of modern people, evolved in Africa about 200,000 years ago, and then slowly migrated northwards about 150,000 to 200,000 years ago , Crossing the Middle East to Europe and Asia, and gradually migrating to other parts of the world.",
    "question": "Which of the following, if true, can best refute the views of the above scientists?",
    "answer": "D",
    "options": [
      "A.Modern Homo sapiens, living in the late Paleolithic period, about 40,000 to 10,000 years ago.There are hundreds of places where late Homo sapiens fossils or cultural sites have been found in our country",
      "B.In an archaeological excavation in South America, people discovered the fossils of Homo sapiens skulls that lived about 170,000 years ago",
      "C.Homo sapiens have the extraordinary ability to communicate with each other, make plans, and solve difficult problems",
      "D.Eight Homo sapiens teeth 400,000 years ago were discovered in the Qesem cave 12 km east of Tel Aviv, Israel"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nvalidity = Function([statements] -> [bool])\n\n# Constraints\nvalidity(A) == False ::: Modern Homo sapiens fossils or cultural sites found in our country do not refute the origin theory\nvalidity(C) == False ::: The extraordinary abilities of Homo sapiens do not refute the origin theory\n\n# Options\nQuestion ::: Which of the following, if true, can best refute the views of the above scientists?\nis_refutation(validity(B) == True) ::: (B)\nis_refutation(validity(D) == True) ::: (D)"
    ]
  },
  {
    "id": 33,
    "context": "By analyzing the light released or absorbed by the atoms of an object, you can measure whether the object is far away from the earth or close to the earth.When the object is far away from the earth, the frequency of these lights will move to the red end (low frequency) of the spectrum, referred to as 'red shift' 'On the contrary, it is called' blue shift '.The unique light emitted by the atoms is also affected by the mass of the elementary particles that make up the atoms, especially the electrons.If the mass of an atom increases, the energy of the photons it releases will also become higher, so the release and absorption frequencies will be blue-shifted.Conversely, if the particles become lighter and lighter, the frequency will be red-shifted.Astronomical observations have found that most galaxies have a redshift phenomenon.Moreover, the farther the galaxy is from the earth, the greater the redshift.According to this, many scientists believe that the universe must be constantly expanding.",
    "question": "Which of the following, if true, can best refute the views of the above scientists?",
    "answer": "C",
    "options": [
      "A.In the distant universe, some blue-shifted objects were also found",
      "B.The earth is not in the center of the universe",
      "C.The stars that people can observe may be less than one percent of the real universe",
      "D.From the perspective of other celestial bodies in the universe, redshift is also an absolute dominant phenomenon"
    ],
    "raw_logic_programs": [
      "# Declarations\nobjects = EnumSort([object1, object2, ..., objectN])\nshifts = EnumSort([red_shift, blue_shift])\ndistances = EnumSort([far, close])\nmass_changes = EnumSort([increase, decrease])\nobservations = Function([objects] -> [shifts])\ndistances_from_earth = Function([objects] -> [distances])\nmass_effects = Function([objects] -> [mass_changes])\n\n# Constraints\nForAll([o:objects], Implies(distances_from_earth(o) == far, observations(o) == red_shift)) ::: When the object is far away from the earth, the frequency of these lights will move to the red end (low frequency) of the spectrum\nForAll([o:objects], Implies(mass_effects(o) == increase, observations(o) == blue_shift)) ::: If the mass of an atom increases, the energy of the photons it releases will also become higher, so the release and absorption frequencies will be blue-shifted\nForAll([o:objects], Implies(mass_effects(o) == decrease, observations(o) == red_shift)) ::: Conversely, if the particles become lighter and lighter, the frequency will be red-shifted\nForAll([o:objects], Exists([d:distances], observations(o) == red_shift)) ::: Astronomical observations have found that most galaxies have a redshift phenomenon\nForAll([o1:objects, o2:objects], Implies(distances_from_earth(o1) > distances_from_earth(o2), observations(o1) == red_shift)) ::: The farther the galaxy is from the earth, the greater the redshift\n\n# Options\nQuestion ::: Which of the following, if true, can best refute the views of the above scientists?\nis_refutation(Exists([o:objects], And(distances_from_earth(o) == far, observations(o) == blue_shift))) ::: (A) In the distant universe, some blue-shifted objects were also found\nis_refutation(False) ::: (B) The earth is not in the center of the universe\nis_refutation(False) ::: (C) The stars that people can observe may be less than one percent of the real universe\nis_refutation(False) ::: (D) From the perspective of other celestial bodies in the universe, redshift is also an absolute dominant phenomenon"
    ]
  },
  {
    "id": 34,
    "context": "A company has a 6-story office building.The company's finance department, planning department, administration department, sales department, human resources department, and research and development department work here, and each department occupies one of the floors.Known? (1) The two floors of the human resources department and the sales department are not adjacent; (2) The finance department is on the next floor of the planning department; (3) The floor of the administrative department is above the planning department, but in the manpower Below the Resources Department.",
    "question": "In order from bottom to top, which of the following matches the distribution of the above floors?",
    "answer": "A",
    "options": [
      "A.Finance Department, Planning Department, Administration Department, Human Resources Department, R & D Department, Sales Department",
      "B.Finance Department, Planning Department, Administration Department, Human Resources Department, Sales Department, R & D Department",
      "C.Planning Department, Finance Department, Sales Department, R & D Department, Administration Department, Human Resources Department",
      "D.Sales Department, Finance Department, Planning Department, R & D Department, Human Resources Department, Administration Department"
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([finance, planning, administration, sales, human_resources, research_and_development])\nfloors = EnumSort([1, 2, 3, 4, 5, 6])\noccupies = Function([departments] -> [floors])\n\n# Constraints\nNot(Abs(occupies(human_resources) - occupies(sales)) == 1) ::: The two floors of the human resources department and the sales department are not adjacent\noccupies(finance) == occupies(planning) + 1 ::: The finance department is on the next floor of the planning department\nAnd(occupies(administration) > occupies(planning), occupies(administration) < occupies(human_resources)) ::: The floor of the administrative department is above the planning department, but below the human resources department\n\n# Options\nQuestion ::: In order from bottom to top, which of the following matches the distribution of the above floors?\nis_valid(And(occupies(finance) == 1, occupies(planning) == 2, occupies(administration) == 3, occupies(human_resources) == 4, occupies(research_and_development) == 5, occupies(sales) == 6)) ::: (A)\nis_valid(And(occupies(finance) == 1, occupies(planning) == 2, occupies(administration) == 3, occupies(human_resources) == 4, occupies(sales) == 5, occupies(research_and_development) == 6)) ::: (B)\nis_valid(And(occupies(planning) == 1, occupies(finance) == 2, occupies(sales) == 3, occupies(research_and_development) == 4, occupies(administration) == 5, occupies(human_resources) == 6)) ::: (C)\nis_valid(And(occupies(sales) == 1, occupies(finance) == 2, occupies(planning) == 3, occupies(research_and_development) == 4, occupies(human_resources) == 5, occupies(administration) == 6)) ::: (D)"
    ]
  },
  {
    "id": 35,
    "context": "A company has a 6-story office building.The company's finance department, planning department, administration department, sales department, human resources department, and research and development department work here, and each department occupies one of the floors.Known? (1) The two floors of the human resources department and the sales department are not adjacent; (2) The finance department is on the next floor of the planning department; (3) The floor of the administrative department is above the planning department, but in the manpower Below the Resources Department.",
    "question": "If the Human Resources Department is not at the upper level of the Administration Department, which of the following may be correct?",
    "answer": "B",
    "options": [
      "A.The sales department is on the upper level of the R & D department",
      "B.The sales department is one level above the administrative department",
      "C.The sales department is at the next level of the planning department",
      "D.Sales Department is on the second floor"
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([finance, planning, administration, sales, human_resources, research_and_development])\nfloors = EnumSort([1, 2, 3, 4, 5, 6])\noccupies = Function([departments] -> [floors])\n\n# Constraints\nDistinct([d:departments], occupies(d)) ::: Each department occupies one of the floors\nAbs(occupies(human_resources) - occupies(sales)) > 1 ::: The two floors of the human resources department and the sales department are not adjacent\noccupies(finance) == occupies(planning) + 1 ::: The finance department is on the next floor of the planning department\nAnd(occupies(administration) > occupies(planning), occupies(administration) < occupies(human_resources)) ::: The floor of the administrative department is above the planning department, but below the human resources department\n\n# Options\nQuestion ::: If the Human Resources Department is not at the upper level of the Administration Department, which of the following may be correct?\nis_sat(And(occupies(sales) > occupies(research_and_development))) ::: (A) The sales department is on the upper level of the R & D department\nis_sat(occupies(sales) == occupies(administration) + 1) ::: (B) The sales department is one level above the administrative department\nis_sat(occupies(sales) == occupies(planning) + 1) ::: (C) The sales department is at the next level of the planning department\nis_sat(occupies(sales) == 2) ::: (D) Sales Department is on the second floor"
    ]
  },
  {
    "id": 36,
    "context": "A company has a 6-story office building.The company's finance department, planning department, administration department, sales department, human resources department, and research and development department work here, and each department occupies one of the floors.Known? (1) The two floors of the human resources department and the sales department are not adjacent; (2) The finance department is on the next floor of the planning department; (3) The floor of the administrative department is above the planning department, but in the manpower Below the Resources Department.",
    "question": "If the human resources department is not on the top floor, the floors that the R & D department may be on are?",
    "answer": "D",
    "options": [
      "A.3, 4, 6",
      "B.3, 4, 5",
      "C.4, 5",
      "D.5, 6"
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([finance, planning, administration, sales, human_resources, research_and_development])\nfloors = EnumSort([1, 2, 3, 4, 5, 6])\noccupies = Function([departments] -> [floors])\n\n# Constraints\nDistinct([d:departments], occupies(d)) ::: Each department occupies one of the floors\nNot(Abs(occupies(human_resources) - occupies(sales)) == 1) ::: The two floors of the human resources department and the sales department are not adjacent\noccupies(finance) == occupies(planning) + 1 ::: The finance department is on the next floor of the planning department\nAnd(occupies(planning) < occupies(administration), occupies(administration) < occupies(human_resources)) ::: The floor of the administrative department is above the planning department, but below the human resources department\n\n# Options\nQuestion ::: If the human resources department is not on the top floor, the floors that the R & D department may be on are?\nis_possible([occupies(research_and_development) == 3, occupies(research_and_development) == 4, occupies(research_and_development) == 6]) ::: (A)\nis_possible([occupies(research_and_development) == 3, occupies(research_and_development) == 4, occupies(research_and_development) == 5]) ::: (B)\nis_possible([occupies(research_and_development) == 4, occupies(research_and_development) == 5]) ::: (C)\nis_possible([occupies(research_and_development) == 5, occupies(research_and_development) == 6]) ::: (D)"
    ]
  },
  {
    "id": 37,
    "context": "A company has a 6-story office building.The company's finance department, planning department, administration department, sales department, human resources department, and research and development department work here, and each department occupies one of the floors.Known? (1) The two floors of the human resources department and the sales department are not adjacent; (2) The finance department is on the next floor of the planning department; (3) The floor of the administrative department is above the planning department, but in the manpower Below the Resources Department.",
    "question": "If the Finance Department is on the third level, which of the following may be correct?",
    "answer": "B",
    "options": [
      "A.The R & D department is on the fifth floor",
      "B.The R & D department is on the upper level of the sales department",
      "C.The Administration Department is not on the upper level of the Planning Department",
      "D.The sales department is on a certain layer above the planning department"
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([finance, planning, administration, sales, human_resources, research_and_development])\nfloors = EnumSort([1, 2, 3, 4, 5, 6])\noccupies = Function([departments] -> [floors])\n\n# Constraints\noccupies(finance) == 3 ::: The Finance Department is on the third level\noccupies(human_resources) != occupies(sales) + 1 ::: The two floors of the human resources department and the sales department are not adjacent\noccupies(human_resources) != occupies(sales) - 1 ::: The two floors of the human resources department and the sales department are not adjacent\noccupies(finance) == occupies(planning) + 1 ::: The finance department is on the next floor of the planning department\noccupies(administration) > occupies(planning) ::: The floor of the administrative department is above the planning department\noccupies(administration) < occupies(human_resources) ::: The floor of the administrative department is below the human resources department\n\n# Options\nQuestion ::: If the Finance Department is on the third level, which of the following may be correct?\nis_sat(occupies(research_and_development) == 5) ::: (A) The R & D department is on the fifth floor\nis_sat(occupies(research_and_development) > occupies(sales)) ::: (B) The R & D department is on the upper level of the sales department\nis_sat(occupies(administration) <= occupies(planning)) ::: (C) The Administration Department is not on the upper level of the Planning Department\nis_sat(occupies(sales) > occupies(planning)) ::: (D) The sales department is on a certain layer above the planning department"
    ]
  },
  {
    "id": 38,
    "context": "A company has a 6-story office building.The company's finance department, planning department, administration department, sales department, human resources department, and research and development department work here, and each department occupies one of the floors.Known? (1) The two floors of the human resources department and the sales department are not adjacent; (2) The finance department is on the next floor of the planning department; (3) The floor of the administrative department is above the planning department, but in the manpower Below the Resources Department.",
    "question": "Which of the following may be the two departments where the first and second tiers are located?",
    "answer": "C",
    "options": [
      "A.Finance Department, Sales Department",
      "B.Planning Department, Sales Department",
      "C.R & D Department and Sales Department",
      "D.Sales Department, Planning Department"
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([finance, planning, administration, sales, human_resources, research_and_development])\nfloors = EnumSort([1, 2, 3, 4, 5, 6])\noccupies = Function([departments] -> [floors])\n\n# Constraints\nNot(Abs(occupies(human_resources) - occupies(sales)) == 1) ::: The two floors of the human resources department and the sales department are not adjacent\noccupies(finance) == occupies(planning) + 1 ::: The finance department is on the next floor of the planning department\nAnd(occupies(administration) > occupies(planning), occupies(administration) < occupies(human_resources)) ::: The floor of the administrative department is above the planning department, but below the human resources department\n\n# Options\nQuestion ::: Which of the following may be the two departments where the first and second tiers are located?\nis_sat(And(occupies(finance) == 1, occupies(sales) == 2)) ::: (A)\nis_sat(And(occupies(planning) == 1, occupies(sales) == 2)) ::: (B)\nis_sat(And(occupies(research_and_development) == 1, occupies(sales) == 2)) ::: (C)\nis_sat(And(occupies(sales) == 1, occupies(planning) == 2)) ::: (D)"
    ]
  },
  {
    "id": 39,
    "context": "All landscape rooms can see the landscape, but Li Wenbing's family can't see the landscape.Therefore, Li Wenbing's family is not a landscape room.",
    "question": "Which of the following is most similar to the above argument?",
    "answer": "D",
    "options": [
      "A.Kind people will be respected by the villagers, Chenggong who is kind and charitable will be respected by the villagers, so Chenggong is a kind person",
      "B.Vegetables in Dongdun Market are very cheap.This basket of vegetables is not bought in Dongdun Market.Therefore, this basket of vegetables is not cheap",
      "C.Employees of Jiutian Company can speak English, Lin Yingrui is an employee of Jiutian Company, therefore, Lin Yingrui can speak English",
      "D.Anyone who meets the basic conditions can apply for a small loan.Sun Wen did not apply for a small loan.Therefore, Sun Wen did not meet the basic conditions"
    ],
    "raw_logic_programs": [
      "# Declarations\nrooms = EnumSort([landscape_room, non_landscape_room])\nfamilies = EnumSort([Li_Wenbing_family])\ncan_see_landscape = Function([rooms] -> [bool])\nis_landscape_room = Function([families] -> [rooms])\n\n# Constraints\nForAll([r:rooms], Implies(r == landscape_room, can_see_landscape(r))) ::: All landscape rooms can see the landscape\nNot(can_see_landscape(is_landscape_room(Li_Wenbing_family))) ::: Li Wenbing's family can't see the landscape\n\n# Options\nQuestion ::: Which of the following is most similar to the above argument?\nis_similar(Implies(And(vegetables_in_Dongdun_Market, cheap), Not(bought_in_Dongdun_Market), Not(cheap))) ::: (B)"
    ]
  },
  {
    "id": 40,
    "context": "Chili relieves indigestion.' People who suffer from indigestion after eating a hot meal may be shocked when they see this sentence, and they can't believe it.However, the conclusions made by Italian experts through experiments are the same.They gave the experimenters suffering from indigestion to take the tablets containing chili before meals.After 5 weeks, 60% of the experimenters' discomfort symptoms were relieved.",
    "question": "Which of the following, if true, would best refute the above experimental conclusion?",
    "answer": "A",
    "options": [
      "A.The capsaicin contained in chili can hinder the secretion of a neurotransmitter to a certain extent",
      "B.In this experiment, 5% of the experimenters' discomfort symptoms worsened",
      "C.In another group of subjects who took the pill after meals, 55% of the subjects' symptoms were alleviated",
      "D.After paying attention to a healthy diet, patients with dyspepsia will generally ease the symptoms of discomfort within one month"
    ],
    "raw_logic_programs": [
      "# Declarations\nexperimenters = EnumSort([group_before, group_after, control_group])\nsymptoms = EnumSort([relieved, worsened, unchanged])\ntreatment = Function([experimenters] -> [symptoms])\n\n# Constraints\ntreatment(group_before) == relieved ::: 60% of the experimenters' discomfort symptoms were relieved in the group that took the tablets before meals\n\n# Options\nQuestion ::: Which of the following, if true, would best refute the above experimental conclusion?\nis_refute(treatment(group_after) == relieved) ::: (C) In another group of subjects who took the pill after meals, 55% of the subjects' symptoms were alleviated\nis_refute(treatment(control_group) == relieved) ::: (D) After paying attention to a healthy diet, patients with dyspepsia will generally ease the symptoms of discomfort within one month\nis_refute(treatment(group_before) == worsened) ::: (B) In this experiment, 5% of the experimenters' discomfort symptoms worsened\nis_refute(Exists([c:control_group], treatment(c) == unchanged)) ::: (A) The capsaicin contained in chili can hinder the secretion of a neurotransmitter to a certain extent"
    ]
  },
  {
    "id": 41,
    "context": "Aptripa Cave is located near the bay of Dilos in the Peninsula of Maina, and is as large as four football fields.This cave dates back to the Neolithic Age, but was not accidentally discovered by a man walking a dog until the 1950s.After decades of scientific research work, archaeologists excavated tools, pottery, obsidian, silver and copper utensils from the cave, and thus believed that hundreds of people had lived in the cave.",
    "question": "Which of the following, if true, can best refute the above argument?",
    "answer": "B",
    "options": [
      "A.The cave inspired the description of hell in Greek mythology",
      "B.The cave is actually an ancient cemetery and funeral venue",
      "C.There is no prehistoric village in Europe that has been found earlier than the cave",
      "D.The entrance to the cave collapsed 5000 years ago"
    ],
    "raw_logic_programs": [
      "# Declarations\ncave = EnumSort([Aptripa_Cave])\nartifacts = EnumSort([tools, pottery, obsidian, silver, copper_utensils])\nhypothesis = EnumSort([inhabited, cemetery])\nevidence = Function([cave] -> [artifacts])\nbelief = Function([cave] -> [hypothesis])\n\n# Constraints\nForAll([c:cave], And(evidence(c) == [tools, pottery, obsidian, silver, copper_utensils], belief(c) == inhabited)) ::: archaeologists excavated tools, pottery, obsidian, silver and copper utensils from the cave, and thus believed that hundreds of people had lived in the cave\n\n# Options\nQuestion ::: Which of the following, if true, can best refute the above argument?\nis_refutation(belief(Aptripa_Cave) == cemetery) ::: (B) The cave is actually an ancient cemetery and funeral venue\nis_refutation(entrance_collapsed(Aptripa_Cave, 5000)) ::: (D) The entrance to the cave collapsed 5000 years ago"
    ]
  },
  {
    "id": 42,
    "context": "Researchers in a country reported that they found meteorites about 200 million years old in the strata of a certain area, and they were probably traces of flying objects when a huge meteorite hit the present province of Quebec, Canada.The clay layer with a thickness of about 5 cm also contains high concentrations of elements such as iridium and platinum, which are 50 to 2000 times the concentration normally found on the ground.In addition, this rock also contains special minerals in the formation of the late Bacques.Since the upper and lower strata also contain marine plankton fossils, it can be determined that the impact period was about 215 million years ago.",
    "question": "Which of the following, if true, would best support the above research findings?",
    "answer": "C",
    "options": [
      "A.The rock was formed after the accumulation layer of the deep seabed in the ancient times exposed above the ground",
      "B.In the late Paleozoic Triassic (approximately 200 million to 237 million years ago) ammonite and other species were extinct on a large scale",
      "C.Elements such as iridium and platinum are peculiar to meteorites and usually only exist in trace amounts on the surface",
      "D.In ancient times, there have been many incidents of meteorite impacting the earth"
    ],
    "raw_logic_programs": [
      "# Declarations\nstrata = EnumSort([upper, lower, clay_layer])\nelements = EnumSort([iridium, platinum])\ntime_periods = EnumSort([late_Bacques, Triassic])\nfindings = Function([strata, elements] -> [int])\ncontains_minerals = Function([strata] -> [bool])\ncontains_fossils = Function([strata] -> [bool])\nimpact_period = Function() -> [int]\n\n# Constraints\nForAll([e:elements], And(findings(clay_layer, e) >= 50, findings(clay_layer, e) <= 2000)) ::: The clay layer contains high concentrations of elements such as iridium and platinum, which are 50 to 2000 times the concentration normally found on the ground\ncontains_minerals(late_Bacques) ::: This rock also contains special minerals in the formation of the late Bacques\nForAll([s:strata], contains_fossils(s)) ::: The upper and lower strata also contain marine plankton fossils\nimpact_period() == 215 ::: It can be determined that the impact period was about 215 million years ago\n\n# Options\nQuestion ::: Which of the following, if true, would best support the above research findings?\nis_supportive(findings(clay_layer, iridium) > 0) ::: (A) The rock was formed after the accumulation layer of the deep seabed in the ancient times exposed above the ground\nis_supportive(Exists([t:time_periods], And(t == Triassic, impact_period() >= 200, impact_period() <= 237))) ::: (B) In the late Paleozoic Triassic (approximately 200 million to 237 million years ago) ammonite and other species were extinct on a large scale\nis_supportive(ForAll([e:elements], findings(clay_layer, e) > 0)) ::: (C) Elements such as iridium and platinum are peculiar to meteorites and usually only exist in trace amounts on the surface\nis_supportive(Exists([t:time_periods], t == late_Bacques)) ::: (D) In ancient times, there have been many incidents of meteorite impacting the earth"
    ]
  },
  {
    "id": 43,
    "context": "A newly recruited researcher in 2013 by a scientific research unit, or 'introduced talent' with a deputy high title or above, or a fresh graduate PhD student with Beijing household registration.The fresh graduate PhD students live in postdoctoral apartments, and the 'introduced talents' all live in the 'Peony Garden' community.",
    "question": "Regarding the newly recruited researchers of the unit in 2013, which of the following judgments is correct?",
    "answer": "D",
    "options": [
      "A.None of those who live in postdoctoral apartments have deputy senior titles or above",
      "B.Those who have a Ph.D.have Beijing household registration",
      "C.None of the people living in the 'Peony Garden' community have a doctorate",
      "D.All non-graduate PhD students live in the 'Peony Garden' community"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([new_recruit, introduced_talent, fresh_graduate])\nresidences = EnumSort([postdoctoral_apartments, peony_garden])\ntitles = EnumSort([deputy_high, none])\nregistrations = EnumSort([beijing, none])\nhas_title = Function([people] -> [titles])\nhas_registration = Function([people] -> [registrations])\nlives_in = Function([people] -> [residences])\n\n# Constraints\nForAll([p:people], Or(p == new_recruit, p == introduced_talent, p == fresh_graduate)) ::: A newly recruited researcher in 2013 by a scientific research unit, or 'introduced talent' with a deputy high title or above, or a fresh graduate PhD student with Beijing household registration\nForAll([p:people], Implies(p == fresh_graduate, lives_in(p) == postdoctoral_apartments)) ::: The fresh graduate PhD students live in postdoctoral apartments\nForAll([p:people], Implies(p == introduced_talent, lives_in(p) == peony_garden)) ::: The 'introduced talents' all live in the 'Peony Garden' community\n\n# Options\nQuestion ::: Regarding the newly recruited researchers of the unit in 2013, which of the following judgments is correct?\nis_correct(ForAll([p:people], Implies(lives_in(p) == postdoctoral_apartments, has_title(p) != deputy_high))) ::: (A) None of those who live in postdoctoral apartments have deputy senior titles or above\nis_correct(ForAll([p:people], Implies(has_title(p) == none, has_registration(p) == beijing))) ::: (B) Those who have a Ph.D. have Beijing household registration\nis_correct(ForAll([p:people], Implies(lives_in(p) == peony_garden, has_title(p) == none))) ::: (C) None of the people living in the 'Peony Garden' community have a doctorate\nis_correct(ForAll([p:people], Implies(has_title(p) != none, lives_in(p) == peony_garden))) ::: (D) All non-graduate PhD students live in the 'Peony Garden' community"
    ]
  },
  {
    "id": 44,
    "context": "Recently, discussions on whether to gradually extend the retirement age have been launched on the Internet.According to a month's blog statistics from a discussion column on this issue on a website, about half of the blog posts with more than 200 words that give reasons agree to gradually extend the retirement age to alleviate the social security pressure caused by the aging population; About 80% of the blog posts opposed extending the retirement age, mainly because of the negative impact on youth employment.",
    "question": "Which of the following, if true, best supports the idea of â€‹â€‹gradually extending the retirement age?",
    "answer": "A",
    "options": [
      "A.Many people now find a second career after going through retirement procedures",
      "B.Respecting the elderly and loving children is a fine tradition in China for thousands of years, which should be carried forward",
      "C.The employment problem of young people should be solved by economic development and transformation and upgrading",
      "D.Due to the implementation of the one-child policy for many years, China's aging problem will be more acute than many Western developed countries"
    ],
    "raw_logic_programs": [
      "# Declarations\nblog_posts = EnumSort([post1, post2, ..., postN])  # Assume a finite set of blog posts\nword_count = Function([blog_posts] -> [int])\ngives_reasons = Function([blog_posts] -> [bool])\nagrees = Function([blog_posts] -> [bool])\nopposes = Function([blog_posts] -> [bool])\n\n# Constraints\nForAll([p:blog_posts], Implies(word_count(p) > 200, gives_reasons(p))) ::: Blog posts with more than 200 words give reasons\nCount([p:blog_posts], And(word_count(p) > 200, agrees(p))) / Count([p:blog_posts], word_count(p) > 200) == 0.5 ::: About half of the blog posts with more than 200 words agree to extend the retirement age\nCount([p:blog_posts], opposes(p)) / Count([p:blog_posts]) == 0.8 ::: About 80% of the blog posts oppose extending the retirement age\n\n# Options\nQuestion ::: Which of the following, if true, best supports the idea of gradually extending the retirement age?\nsupports_extension(A) ::: Many people now find a second career after going through retirement procedures\nsupports_extension(B) ::: Respecting the elderly and loving children is a fine tradition in China for thousands of years, which should be carried forward\nsupports_extension(C) ::: The employment problem of young people should be solved by economic development and transformation and upgrading\nsupports_extension(D) ::: Due to the implementation of the one-child policy for many years, China's aging problem will be more acute than many Western developed countries"
    ]
  },
  {
    "id": 45,
    "context": "A certain online forum made a statistical comparison of posts about social issues published by netizens in the past year and 5 years ago, and found that posts such as money-gathering, poverty alleviation, and bravery have increased such posts by 50%.Posts related to evildoing, escaping evil, and killing more people have increased by 90%.This shows that the social atmosphere is rapidly deteriorating.",
    "question": "Which of the following, if true, would weaken the above argument most?",
    "answer": "D",
    "options": [
      "A.'Good things don't go out, bad things spread thousands of miles.' Throughout the ages",
      "B.The number of Internet users has quadrupled in the past 5 years",
      "C.In recent years, some people have used rumors online to achieve profit-making purposes.",
      "D.The online forum is a legal forum"
    ],
    "raw_logic_programs": [
      "# Declarations\nposts = EnumSort([money_gathering, poverty_alleviation, bravery, evildoing, escaping_evil, killing])\ntime_periods = EnumSort([past_year, five_years_ago])\nincrease_rate = Function([posts] -> [int])\nuser_growth = Function([time_periods] -> [int])\n\n# Constraints\nincrease_rate(money_gathering) == 50 ::: Posts such as money-gathering have increased by 50%\nincrease_rate(poverty_alleviation) == 50 ::: Posts such as poverty alleviation have increased by 50%\nincrease_rate(bravery) == 50 ::: Posts such as bravery have increased by 50%\nincrease_rate(evildoing) == 90 ::: Posts related to evildoing have increased by 90%\nincrease_rate(escaping_evil) == 90 ::: Posts related to escaping evil have increased by 90%\nincrease_rate(killing) == 90 ::: Posts related to killing have increased by 90%\n\n# Options\nQuestion ::: Which of the following, if true, would weaken the above argument most?\nis_weakened(user_growth(past_year) == 4 * user_growth(five_years_ago)) ::: (B) The number of Internet users has quadrupled in the past 5 years\nis_weakened(Exists([p:posts], rumors(p))) ::: (C) In recent years, some people have used rumors online to achieve profit-making purposes.\nis_weakened(legal_forum) ::: (D) The online forum is a legal forum"
    ]
  },
  {
    "id": 46,
    "context": "On November 17, 2012, the 'Tianhe No.1' supercomputer developed by the National University of Defense Technology became the world's fastest computing speed with a peak speed of 4700 trillion times and a continuous speed of 2568 trillion floating-point operations per second Computer.Less than three years later, at the 2013 International Supercomputer Conference in Leipzig, Germany on June 17, 2013, the international TOP500 organization announced the latest list of the world's top 500 supercomputers.The 'Tianhe 2' developed by the National University of Defense Technology topped the list with its peak calculation speed of 549 million times per second and continuous calculation speed of 339 million times per second.Compared to the US 'Titanium' supercomputer, which ranked first in the world, the calculation speed is twice that of the latter.",
    "question": "Which of the following is most suitable as a corollary of the above discussion",
    "answer": "D",
    "options": [
      "A.Only the United States and China can make supercomputers in the world",
      "B.Only China National Defense University has successfully developed a supercomputer",
      "C.Only the supercomputers in the United States and China have been ranked first in the world in terms of computing speed",
      "D.China's 'Tianhe 2' computing speed is clearly ahead of other supercomputers"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([United_States, China])\nsupercomputers = EnumSort([Tianhe_1, Tianhe_2, Titanium])\nattributes = EnumSort([peak_speed, continuous_speed, rank])\nvalues = EnumSort([fastest, twice, first, ahead])\n\n# Constraints\nAnd(\n    Attribute(Tianhe_1, peak_speed) == fastest,\n    Attribute(Tianhe_1, continuous_speed) == fastest,\n    Attribute(Tianhe_2, peak_speed) == fastest,\n    Attribute(Tianhe_2, continuous_speed) == fastest,\n    Attribute(Tianhe_2, rank) == first,\n    Attribute(Titanium, rank) == first,\n    Attribute(Tianhe_2, peak_speed) == twice * Attribute(Titanium, peak_speed)\n) ::: Descriptions of the supercomputers' speeds and rankings\n\n# Options\nQuestion ::: Which of the following is most suitable as a corollary of the above discussion?\nis_corollary(And(Attribute(Tianhe_2, rank) == first, Attribute(Tianhe_2, peak_speed) == ahead)) ::: (D) China's 'Tianhe 2' computing speed is clearly ahead of other supercomputers"
    ]
  },
  {
    "id": 47,
    "context": "With the help of animal fossils and DNA retained in specimens, and using increasingly advanced cloning and genetic techniques, humans have been able to 'resurrect' some already extinct animals, such as mammoths, dodos, dinosaurs, etc.At the same time, the scientific community also started a big discussion about whether humans should revive extinct animals.Supporters believe that reanimated animals are expected to restore the damaged ecological environment in some areas.For example, Mammoths live on the vast grasslands of Siberia, and their excrement is an excellent fertilizer to nourish the grasslands.After the mammoth became extinct, grasslands lacking fertilizer were gradually replaced by tundra.If the mammoth can be resurrected and returned to Siberia, it will help reduce the area of â€‹â€‹tundra and gradually restore the grassland ecosystem.",
    "question": "Which of the following, if true, would best refute the arguments of the above supporters?",
    "answer": "C",
    "options": [
      "A.If you invest a lot of time, energy and cost to resurrect the disappeared creatures, it will inevitably contain and weaken the protection of existing endangered animals, and the result will not be worth the loss.",
      "B.Merely cloning an individual of an extinct animal does not mean that humans have the ability to resurrect the entire population",
      "C.Even if the extinct animals can be resurrected in batches, the habitat suitable for their growth may have long since disappeared.If you can not give heavy organisms a suitable environment for survival, all efforts will be in vain",
      "D.The vast majority of these animals gradually disappeared in the course of human development.It was human activities that led to their extinction"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([supporters, refuters])\nstatements = EnumSort([restore_ecosystem, weaken_protection, cloning_individual, habitat_disappeared, human_extinction])\nsupports = Function([arguments] -> [statements])\n\n# Constraints\nsupports(supporters) == restore_ecosystem ::: Supporters believe that reanimated animals are expected to restore the damaged ecological environment in some areas\n\n# Options\nQuestion ::: Which of the following, if true, would best refute the arguments of the above supporters?\nis_best_refute(supports(refuters) == weaken_protection) ::: (A)\nis_best_refute(supports(refuters) == cloning_individual) ::: (B)\nis_best_refute(supports(refuters) == habitat_disappeared) ::: (C)\nis_best_refute(supports(refuters) == human_extinction) ::: (D)"
    ]
  },
  {
    "id": 48,
    "context": "Many pregnant women have symptoms of vitamin deficiency, but this is usually not due to the lack of vitamins in the diet of pregnant women, but because of the growth of babies in the abdomen, they have a higher demand for vitamins than others.",
    "question": "Which of the following is most important for evaluating the above conclusion?",
    "answer": "B",
    "options": [
      "A.Test the daily diet of some pregnant women who do not lack vitamins to determine the vitamin content.",
      "B.Test pregnant women and other women who have enough vitamins in their daily diet to determine whether they lack vitamins.",
      "C.Test pregnant women and other women with insufficient vitamins in their daily diet and determine whether they are deficient in vitamins.",
      "D.Test the daily diet of some pregnant women who lack vitamins to determine the content of vitamins."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([pregnant_women, other_women])\nvitamin_status = EnumSort([sufficient, deficient])\ndiet_status = EnumSort([sufficient_diet, insufficient_diet])\nvitamin_demand = Function([groups] -> [vitamin_status])\ndiet_content = Function([groups] -> [diet_status])\n\n# Constraints\nForAll([g:groups], Implies(vitamin_demand(g) == deficient, diet_content(g) == sufficient_diet)) ::: Many pregnant women have symptoms of vitamin deficiency, but this is usually not due to the lack of vitamins in the diet\n\n# Options\nQuestion ::: Which of the following is most important for evaluating the above conclusion?\nis_important(Exists([g:groups], And(diet_content(g) == sufficient_diet, vitamin_demand(g) == sufficient))) ::: (A)\nis_important(Exists([g:groups], And(diet_content(g) == sufficient_diet, vitamin_demand(g) == deficient))) ::: (B)\nis_important(Exists([g:groups], And(diet_content(g) == insufficient_diet, vitamin_demand(g) == deficient))) ::: (C)\nis_important(Exists([g:groups], And(diet_content(g) == insufficient_diet, vitamin_demand(g) == sufficient))) ::: (D)"
    ]
  },
  {
    "id": 49,
    "context": "The education system has two aspects, one is compulsory education and the other is higher education.A reasonable education system requires everyone to have the right to compulsory education and to have access to higher education through fair competition.",
    "question": "Which of the following conclusions can be drawn from the above conclusions?",
    "answer": "C",
    "options": [
      "A.An education system that does not allow everyone to go to college is unreasonable.",
      "B.An education system that guarantees everyone to enjoy compulsory education is reasonable.",
      "C.An education system that does not allow everyone to enjoy the right to compulsory education is unreasonable.",
      "D.There should be more requirements for a reasonable education system."
    ],
    "raw_logic_programs": [
      "# Declarations\naspects = EnumSort([compulsory_education, higher_education])\nrights = EnumSort([right_to_compulsory_education, access_to_higher_education])\nsystem = Function([aspects] -> [bool])\n\n# Constraints\nsystem(compulsory_education) == True ::: everyone has the right to compulsory education\nsystem(higher_education) == True ::: access to higher education through fair competition\n\n# Options\nQuestion ::: Which of the following conclusions can be drawn from the above conclusions?\nis_valid(Implies(Not(system(higher_education)), False)) ::: (A) An education system that does not allow everyone to go to college is unreasonable.\nis_valid(system(compulsory_education)) ::: (B) An education system that guarantees everyone to enjoy compulsory education is reasonable.\nis_valid(Implies(Not(system(compulsory_education)), False)) ::: (C) An education system that does not allow everyone to enjoy the right to compulsory education is unreasonable.\nis_valid(False) ::: (D) There should be more requirements for a reasonable education system."
    ]
  },
  {
    "id": 50,
    "context": "A survey of traffic accidents has found that the incidence of traffic accidents is actually similar in cities where drunk driving is strictly investigated and those who do not.However, most experts believe that strict investigation of drunk driving can indeed reduce the occurrence of traffic accidents.",
    "question": "Which of the following is most helpful in eliminating this inconsistency?",
    "answer": "A",
    "options": [
      "A.Severe investigations of drunk driving have occurred in urban traffic accidents.",
      "B.The city that implements strict investigation of drunk driving has not eliminated drunk driving.",
      "C.It is more important to improve drivers' traffic safety awareness than strict management.",
      "D.In addition to strict investigation of drunk driving, other traffic violations should also be stopped."
    ],
    "raw_logic_programs": [
      "# Declarations\ncities = EnumSort([strict_investigation, no_strict_investigation])\naccidents = Function([cities] -> [int])\nbelief = Function([cities] -> [bool])\n\n# Constraints\naccidents(strict_investigation) == accidents(no_strict_investigation) ::: The incidence of traffic accidents is similar in cities with and without strict investigation\nbelief(strict_investigation) == True ::: Experts believe strict investigation reduces accidents\n\n# Options\nQuestion ::: Which of the following is most helpful in eliminating this inconsistency?\nis_helpful(Exists([c:cities], And(belief(c), accidents(c) > 0))) ::: (A)\nis_helpful(Exists([c:cities], And(belief(c), Not(eliminated_drunk_driving(c))))) ::: (B)\nis_helpful(Exists([c:cities], And(belief(c), improve_safety_awareness(c) > strict_management(c)))) ::: (C)\nis_helpful(Exists([c:cities], And(belief(c), stop_other_violations(c)))) ::: (D)"
    ]
  },
  {
    "id": 51,
    "context": "On the eve of the Minsk talks of the Ukrainian authorities 'coordination group, the speakers of' Donetsk People 's Republic 'and' Lugansk People 's Republic 'announced their negotiating positions? if the Ukrainian authorities do not recognize their territories and the special status of Russian, And without stopping its military operations in the southeast, the conflict cannot be resolved.In addition, the two 'Republics' insisted on pardoning all militia armed participants and political prisoners.Some Ukrainian observers commented? Do we recognize the special status of these two so-called 'Republics' and can we resolve the conflict by pardoning the militia?",
    "question": "The comments of Ukrainian observers are best used to refute which of the following?",
    "answer": "D",
    "options": [
      "A.Even if the Ukrainian authorities recognize the special status of the two 'Republic' territories and Russian language, and pardon all militia armed participants and political prisoners, the conflict may still not be resolved.",
      "B.Even if the conflict is resolved, it is not necessarily because the Ukrainian authorities recognize the 'Republic' territory and the special status of Russian.",
      "C.If the conflict is to be resolved, the Ukrainian authorities must recognize the special status of the two 'Republic' territories and the Russian language, and pardon all militia armed participants and political prisoners.",
      "D.As long as the Ukrainian authorities recognize the special status of the two 'Republic' territories and the Russian language, and pardon all militia armed participants and political prisoners, the conflict can be resolved."
    ],
    "raw_logic_programs": [
      "# Declarations\nconflict_resolved = BoolSort()\nrecognize_status = BoolSort()\npardon_militia = BoolSort()\n\n# Constraints\nImplies(Not(recognize_status), Not(conflict_resolved)) ::: if the Ukrainian authorities do not recognize their territories and the special status of Russian, the conflict cannot be resolved\nImplies(Not(pardon_militia), Not(conflict_resolved)) ::: if the Ukrainian authorities do not pardon all militia armed participants and political prisoners, the conflict cannot be resolved\n\n# Options\nQuestion ::: The comments of Ukrainian observers are best used to refute which of the following?\nis_refuted(Implies(And(recognize_status, pardon_militia), Not(conflict_resolved))) ::: (A)\nis_refuted(Implies(conflict_resolved, Not(And(recognize_status, pardon_militia)))) ::: (B)\nis_refuted(Implies(conflict_resolved, And(recognize_status, pardon_militia))) ::: (C)\nis_refuted(Implies(And(recognize_status, pardon_militia), conflict_resolved)) ::: (D)"
    ]
  },
  {
    "id": 52,
    "context": "With the rapid development of the Internet, it has become a reality to buy your favorite products without leaving home.Even in countries and regions with low economic development levels, people can satisfy their pursuit of material life through online shopping.",
    "question": "Which of the following can most question the above view?",
    "answer": "D",
    "options": [
      "A.As online shopping sales increase, related taxes and fees will also increase.",
      "B.Even in the era when there is no Internet, people can still buy their favorite products through physical stores.",
      "C.The display of goods on the Internet cannot fully reflect the real situation.",
      "D.People's satisfaction with the pursuit of material life depends only on the level of economic development in the region."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([internet_development, online_shopping, economic_development, material_pursuit])\nquestions = EnumSort([question_view])\noptions = EnumSort([A, B, C, D])\n\n# Constraints\nForAll([s:statements], Exists([q:questions], implies(q, s))) ::: The rapid development of the Internet allows buying products without leaving home, even in low economic development regions, satisfying material pursuit through online shopping.\n\n# Options\nQuestion ::: Which of the following can most question the above view?\nis_questioning(implies(online_shopping, increase_taxes)) ::: (A)\nis_questioning(implies(no_internet, physical_stores)) ::: (B)\nis_questioning(implies(internet_display, not_reflect_real)) ::: (C)\nis_questioning(implies(material_satisfaction, economic_development)) ::: (D)"
    ]
  },
  {
    "id": 53,
    "context": "Wang Gang must be a university teacher, because he not only has a doctorate from a prestigious school, but also has more than one year of research experience in a research institution overseas.",
    "question": "Which of the following can guarantee the correctness of the above statement?",
    "answer": "A",
    "options": [
      "A.Unless it is a university teacher, it is impossible to have a doctorate from a prestigious school and have more than one year of research experience in an overseas research institution.",
      "B.In recent years, college teachers have required overseas research experience.",
      "C.Some middle school teachers also have doctorate degrees and overseas research experience.",
      "D.Unless they are PhDs and have more than one year of overseas research experience, they cannot become university teachers."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Wang_Gang])\nattributes = EnumSort([university_teacher, doctorate, overseas_research_experience])\nhas_attribute = Function([individuals, attributes] -> [bool])\n\n# Constraints\nhas_attribute(Wang_Gang, doctorate) ::: Wang Gang has a doctorate from a prestigious school\nhas_attribute(Wang_Gang, overseas_research_experience) ::: Wang Gang has more than one year of research experience in a research institution overseas\n\n# Options\nQuestion ::: Which of the following can guarantee the correctness of the above statement?\nis_guarantee(ForAll([i:individuals], Implies(And(has_attribute(i, doctorate), has_attribute(i, overseas_research_experience)), has_attribute(i, university_teacher)))) ::: (A)\nis_guarantee(ForAll([i:individuals], Implies(has_attribute(i, university_teacher), has_attribute(i, overseas_research_experience)))) ::: (B)\nis_guarantee(Exists([i:individuals], And(has_attribute(i, doctorate), has_attribute(i, overseas_research_experience)))) ::: (C)\nis_guarantee(ForAll([i:individuals], Implies(has_attribute(i, university_teacher), And(has_attribute(i, doctorate), has_attribute(i, overseas_research_experience))))) ::: (D)"
    ]
  },
  {
    "id": 54,
    "context": "If Malaysia Airlines 'passenger plane did not malfunction and was not hijacked by terrorist organizations, it must have been shot down by a missile.If the passenger plane is shot down by a missile, it will be discovered by the satellite; if the satellite finds that the passenger plane is shot down by the missile, it will be announced to the media.",
    "question": "If you want to get the conclusion that the plane was hijacked by a terrorist organization, which of the following should be added?",
    "answer": "B",
    "options": [
      "A.The passenger plane was not shot down by the missile.",
      "B.There were no reports of missiles shooting down the passenger plane, and the passenger plane did not malfunction.",
      "C.The passenger plane did not malfunction.",
      "D.The passenger plane malfunctioned and no missiles shot down the passenger plane."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([malfunction, hijacked, shot_down, discovered_by_satellite, announced_to_media])\nstatus = Function([events] -> [bool])\n\n# Constraints\nNot(status(malfunction)) And Not(status(hijacked)) -> status(shot_down) ::: If the plane did not malfunction and was not hijacked, it must have been shot down\nstatus(shot_down) -> status(discovered_by_satellite) ::: If the plane is shot down, it will be discovered by the satellite\nstatus(discovered_by_satellite) -> status(announced_to_media) ::: If the satellite discovers the plane was shot down, it will be announced to the media\n\n# Options\nQuestion ::: If you want to get the conclusion that the plane was hijacked by a terrorist organization, which of the following should be added?\nis_sat(status(hijacked) And Not(status(shot_down))) ::: (A) The passenger plane was not shot down by the missile.\nis_sat(Not(status(announced_to_media)) And Not(status(malfunction)) And status(hijacked)) ::: (B) There were no reports of missiles shooting down the passenger plane, and the passenger plane did not malfunction.\nis_sat(Not(status(malfunction)) And status(hijacked)) ::: (C) The passenger plane did not malfunction.\nis_sat(status(malfunction) And Not(status(shot_down)) And status(hijacked)) ::: (D) The passenger plane malfunctioned and no missiles shot down the passenger plane."
    ]
  },
  {
    "id": 55,
    "context": "Making more money makes people happier, at least to some extent.But new research shows that the reverse is also true, and happy people can make more money.Researchers at the University of London, after researching more than 10,000 Americans, found that those with positive emotions who are more satisfied with life as they grow up have higher incomes when they reach the age of 29.",
    "question": "Which of the following can best question the above research conclusions?",
    "answer": "C",
    "options": [
      "A.Most of the young people who grew up in wealthier families have a negative attitude towards life.",
      "B.In addition to emotions, the degree of specialization and work ability will directly affect the income level.",
      "C.Most young people who are more satisfied with their lives are born in wealthier families, and all have a good professional background.",
      "D.It should compare the occupational distribution of the respondents."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([income, happiness, family_wealth, professional_background, work_ability, specialization])\npeople = EnumSort([person1, person2, ..., person10000])  # Representing the 10,000 Americans studied\nattributes = Function([people, variables] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(attributes(p, happiness), attributes(p, income))) ::: Happy people can make more money\nForAll([p:people], Implies(attributes(p, family_wealth), attributes(p, income))) ::: People from wealthier families tend to have higher incomes\nForAll([p:people], Implies(attributes(p, professional_background), attributes(p, income))) ::: People with a good professional background tend to have higher incomes\nForAll([p:people], Implies(attributes(p, work_ability), attributes(p, income))) ::: Work ability affects income level\nForAll([p:people], Implies(attributes(p, specialization), attributes(p, income))) ::: Specialization affects income level\n\n# Options\nQuestion ::: Which of the following can best question the above research conclusions?\nis_valid(Exists([p:people], And(attributes(p, family_wealth), Not(attributes(p, happiness))))) ::: (A) Most of the young people who grew up in wealthier families have a negative attitude towards life.\nis_valid(Exists([p:people], And(attributes(p, specialization), attributes(p, work_ability), Not(attributes(p, happiness))))) ::: (B) In addition to emotions, the degree of specialization and work ability will directly affect the income level.\nis_valid(Exists([p:people], And(attributes(p, family_wealth), attributes(p, professional_background), attributes(p, happiness)))) ::: (C) Most young people who are more satisfied with their lives are born in wealthier families, and all have a good professional background.\nis_valid(Exists([p:people], And(attributes(p, professional_background), Not(attributes(p, happiness))))) ::: (D) It should compare the occupational distribution of the respondents."
    ]
  },
  {
    "id": 56,
    "context": "Teacher Zhang said? This time, all the students in our class have passed the examination.Therefore, none of the students in our class have passed.",
    "question": "Which of the following is most similar to the above reasoning?",
    "answer": "D",
    "options": [
      "A.All the students who passed the bottom-up exam passed the review, so all the students who passed the review passed.",
      "B.All the students who failed the bottom-up exam did not review well, so the students who did not review well did not pass.",
      "C.All the students who have participated in the bottom-up examination have been carefully prepared.Therefore, the students who have not taken the bottom-up examination have not been carefully prepared.",
      "D.All heroes can stand the test, so those who cannot stand the test are not heroes."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([all_passed, none_passed])\nreasoning = Function([statements] -> [bool])\n\n# Constraints\nreasoning(all_passed) == True ::: This time, all the students in our class have passed the examination.\nreasoning(none_passed) == True ::: Therefore, none of the students in our class have passed.\n\n# Options\nQuestion ::: Which of the following is most similar to the above reasoning?\nis_similar(And(reasoning(all_passed) == True, reasoning(none_passed) == True)) ::: (A)\nis_similar(And(reasoning(all_passed) == False, reasoning(none_passed) == True)) ::: (B)\nis_similar(And(reasoning(all_passed) == True, reasoning(none_passed) == False)) ::: (C)\nis_similar(And(reasoning(all_passed) == False, reasoning(none_passed) == False)) ::: (D)"
    ]
  },
  {
    "id": 57,
    "context": "In the past five years, food prices in City W have increased by an average of 25%.At the same time, residents' food purchases accounted for only about 8% of the city's monthly household income.As a result, the average income of households in City W has increased in the past two years.",
    "question": "Which of the following is most likely the hypothesis of the above argument?",
    "answer": "D",
    "options": [
      "A.In the past five years, the living standards of families in City W have generally improved.",
      "B.Over the past five years, the average price of other commodities in City W, except food, has risen by 25%.",
      "C.In the past five years, the amount of food purchased by residents of W has increased by 8%.",
      "D.In the past five years, the amount of food purchased by each household in City W has not changed."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([food_prices, household_income, food_purchases, living_standards, commodity_prices])\ntime_periods = EnumSort([past_five_years, past_two_years])\nchanges = EnumSort([increase, decrease, no_change])\n\n# Constraints\nchange(food_prices, past_five_years) == increase ::: Food prices in City W have increased by an average of 25% in the past five years\nchange(household_income, past_two_years) == increase ::: The average income of households in City W has increased in the past two years\nchange(food_purchases, past_five_years) == no_change ::: Residents' food purchases accounted for only about 8% of the city's monthly household income\n\n# Options\nQuestion ::: Which of the following is most likely the hypothesis of the above argument?\nis_hypothesis(change(living_standards, past_five_years) == increase) ::: (A)\nis_hypothesis(change(commodity_prices, past_five_years) == increase) ::: (B)\nis_hypothesis(change(food_purchases, past_five_years) == increase) ::: (C)\nis_hypothesis(change(food_purchases, past_five_years) == no_change) ::: (D)"
    ]
  },
  {
    "id": 58,
    "context": "The proliferation of private cars in a certain city has aggravated the air pollution in the city, and often caused severe congestion on multiple road sections during the morning and evening peaks.In order to solve this problem, the city government decided to implement all-weather single and double number travel restrictions for private cars, that is, only private cars with ending numbers on odd days are allowed to travel, and only private cars with ending numbers are allowed on even days.",
    "question": "Which of the following can best question the decision of the city government?",
    "answer": "B",
    "options": [
      "A.There is a large automobile production company in the city, and the order restriction will definitely affect the automobile sales of the enterprise.",
      "B.Private car owners in the city generally have two or more private cars.",
      "C.The owners of private cars in the city are generally wealthy, and they do not care about the fines for violations.",
      "D.Mass transit is being developed in the city, which will help overcome congestion."
    ],
    "raw_logic_programs": [
      "# Declarations\ndays = EnumSort([odd, even])\ncar_owners = EnumSort([single_car, multiple_cars])\nrestrictions = Function([days, car_owners] -> [bool])\n\n# Constraints\nForAll([d:days], Or(restrictions(d, single_car), restrictions(d, multiple_cars))) ::: Only private cars with ending numbers on odd days are allowed to travel, and only private cars with ending numbers are allowed on even days\n\n# Options\nQuestion ::: Which of the following can best question the decision of the city government?\nis_best_question(Exists([d:days], restrictions(d, multiple_cars))) ::: (A)\nis_best_question(Exists([d:days], Not(restrictions(d, multiple_cars)))) ::: (B)\nis_best_question(Exists([d:days], Not(restrictions(d, single_car)))) ::: (C)\nis_best_question(Exists([d:days], restrictions(d, single_car))) ::: (D)"
    ]
  },
  {
    "id": 59,
    "context": "All undergraduates who enter the Beijing University for a master's degree without a test have already obtained the recommended qualifications of their schools",
    "question": "Which of the following means exactly the same as the above assertion?",
    "answer": "A",
    "options": [
      "A.Undergraduates who do not have the qualifications recommended by their school cannot be exempted from going to Peking University to study for a master's degree.",
      "B.Undergraduates who go to Nanyang University to study for a master's degree without a test may not obtain the recommended qualifications of their schools.",
      "C.Undergraduates who have obtained the qualifications recommended by their school may not necessarily be able to enter the university for a master's degree.",
      "D.In addition to Peking University.Undergraduates can also go to other schools to study for a master's degree."
    ],
    "raw_logic_programs": [
      "# Declarations\nuniversities = EnumSort([Beijing_University, Nanyang_University, Other_Universities])\nstudents = EnumSort([undergraduates])\nqualifications = EnumSort([recommended_qualifications])\nentry = Function([students, universities] -> [bool])\nhas_qualifications = Function([students] -> [qualifications])\n\n# Constraints\nForAll([s:students], Implies(entry(s, Beijing_University) == True, has_qualifications(s) == recommended_qualifications)) ::: All undergraduates who enter the Beijing University for a master's degree without a test have already obtained the recommended qualifications of their schools\n\n# Options\nQuestion ::: Which of the following means exactly the same as the above assertion?\nis_equivalent(ForAll([s:students], Implies(Not(has_qualifications(s) == recommended_qualifications), Not(entry(s, Beijing_University) == True)))) ::: (A)\nis_equivalent(Exists([s:students], And(entry(s, Nanyang_University) == True, Not(has_qualifications(s) == recommended_qualifications)))) ::: (B)\nis_equivalent(Exists([s:students], And(has_qualifications(s) == recommended_qualifications, Not(entry(s, Beijing_University) == True)))) ::: (C)\nis_equivalent(Exists([s:students], And(entry(s, Other_Universities) == True, Not(entry(s, Beijing_University) == True)))) ::: (D)"
    ]
  },
  {
    "id": 60,
    "context": "Compared with mineral water, pure water lacks minerals, and some of them are essential for the human body.Therefore, nutrition expert Lao Zhang suggested that those who regularly drink pure water change their habits and drink more mineral water.",
    "question": "Which of the following can weaken Lao Zhang 's suggestion the most?",
    "answer": "D",
    "options": [
      "A.Most of the nutrients people need are not from drinking water.",
      "B.What the human body needs is not just minerals.",
      "C.Drinking water other than pure water and mineral water.",
      "D.People can get essential minerals from other foods."
    ],
    "raw_logic_programs": [
      "# Declarations\nnutrients = EnumSort([minerals, other_nutrients])\nsources = EnumSort([pure_water, mineral_water, other_foods])\nprovides = Function([sources, nutrients] -> [bool])\n\n# Constraints\nprovides(mineral_water, minerals) ::: Mineral water provides minerals\nNot(provides(pure_water, minerals)) ::: Pure water lacks minerals\nprovides(other_foods, minerals) ::: Other foods provide minerals\n\n# Options\nQuestion ::: Which of the following can weaken Lao Zhang's suggestion the most?\nis_weakened(ForAll([n:nutrients], Implies(provides(mineral_water, n), provides(other_foods, n)))) ::: (A) Most of the nutrients people need are not from drinking water.\nis_weakened(Exists([n:nutrients], Not(provides(mineral_water, n)))) ::: (B) What the human body needs is not just minerals.\nis_weakened(Exists([s:sources], And(s != pure_water, s != mineral_water, provides(s, minerals)))) ::: (C) Drinking water other than pure water and mineral water.\nis_weakened(provides(other_foods, minerals)) ::: (D) People can get essential minerals from other foods."
    ]
  },
  {
    "id": 61,
    "context": "An evaluation agency conducted a social survey to evaluate the popularity of books.The results show that the sales of life books exceed the sales of science and technology books, so the popularity of life books is higher than that of science and technology books.",
    "question": "Which of the following best refutes the above argument?",
    "answer": "A",
    "options": [
      "A.The sales volume only partially reflects the popularity of the book.",
      "B.Those who purchase technology books are often highly educated.",
      "C.The types of life books far exceed the types of science and technology books.",
      "D.Some books sold may not be read."
    ],
    "raw_logic_programs": [
      "# Declarations\nbooks = EnumSort([life, science, technology])\npopularity = Function([books] -> [int])\nsales = Function([books] -> [int])\n\n# Constraints\nsales(life) > sales(science) ::: sales of life books exceed the sales of science books\nsales(life) > sales(technology) ::: sales of life books exceed the sales of technology books\npopularity(life) > popularity(science) ::: the popularity of life books is higher than that of science books\npopularity(life) > popularity(technology) ::: the popularity of life books is higher than that of technology books\n\n# Options\nQuestion ::: Which of the following best refutes the above argument?\nis_refutation(sales(life) != popularity(life)) ::: (A) The sales volume only partially reflects the popularity of the book.\nis_refutation(Exists([b:books], And(b == technology, sales(b) < popularity(b)))) ::: (B) Those who purchase technology books are often highly educated.\nis_refutation(Count([b:books], b == life) > Count([b:books], Or(b == science, b == technology))) ::: (C) The types of life books far exceed the types of science and technology books.\nis_refutation(Exists([b:books], And(sales(b) > 0, popularity(b) == 0))) ::: (D) Some books sold may not be read."
    ]
  },
  {
    "id": 62,
    "context": "The report of the Ministry of Health shows that the cost of health care has indeed increased over the years.It can be seen that the medical conditions enjoyed by each of us have greatly improved.",
    "question": "Which of the following raises the most serious question to the above conclusion?",
    "answer": "A",
    "options": [
      "A.The vast majority of health care costs are spent on high-tech intensive care for high-risk patients.",
      "B.Without increasing costs, our health conditions may also improve.",
      "C.70% of the state's allocation to the health sector is for infrastructure construction.",
      "D.The cost of care for elderly chronic diseases is very large."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nconclusion = Function([bool])\n\n# Constraints\nconclusion() == True ::: The report concludes that the cost of health care has increased and medical conditions have improved.\n\n# Options\nQuestion ::: Which of the following raises the most serious question to the above conclusion?\nis_serious_question(Implies(conclusion(), Not(A))) ::: (A) The vast majority of health care costs are spent on high-tech intensive care for high-risk patients.\nis_serious_question(Implies(conclusion(), Not(B))) ::: (B) Without increasing costs, our health conditions may also improve.\nis_serious_question(Implies(conclusion(), Not(C))) ::: (C) 70% of the state's allocation to the health sector is for infrastructure construction.\nis_serious_question(Implies(conclusion(), Not(D))) ::: (D) The cost of care for elderly chronic diseases is very large."
    ]
  },
  {
    "id": 63,
    "context": "Five graduate students Zhang, Wang, Li, Zhao, and Liu graduated from a linguistics major in a college of arts of a university in 2014, and were hired by one of the three employers, Tianshu, Tianji, and Tianxuan, and at least one of them was hired by each unit.name.Known? (1) Li was hired by Tianshu; (2) Li and Zhao were not hired by the same unit; (3) Liu and Zhao were hired by the same unit; (4) If Zhang was hired by Tianxuan, then Wang Ye Was hired by Tianxuan.",
    "question": "Which of the following may be correct?",
    "answer": "D",
    "options": [
      "A.Li and Liu were hired by the same unit.",
      "B.Wang, Zhao and Liu were all hired by Tianji.",
      "C.Only Liu was hired by Tian Xuan.",
      "D.Only Wang was hired by Tianxuan."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Zhang, Wang, Li, Zhao, Liu])\nemployers = EnumSort([Tianshu, Tianji, Tianxuan])\nhired_by = Function([students] -> [employers])\n\n# Constraints\nhired_by(Li) == Tianshu ::: Li was hired by Tianshu\nhired_by(Li) != hired_by(Zhao) ::: Li and Zhao were not hired by the same unit\nhired_by(Liu) == hired_by(Zhao) ::: Liu and Zhao were hired by the same unit\nImplies(hired_by(Zhang) == Tianxuan, hired_by(Wang) == Tianxuan) ::: If Zhang was hired by Tianxuan, then Wang was hired by Tianxuan\nForAll([e:employers], Exists([s:students], hired_by(s) == e)) ::: At least one student was hired by each employer\n\n# Options\nQuestion ::: Which of the following may be correct?\nis_possible(hired_by(Li) == hired_by(Liu)) ::: (A) Li and Liu were hired by the same unit.\nis_possible(And(hired_by(Wang) == Tianji, hired_by(Zhao) == Tianji, hired_by(Liu) == Tianji)) ::: (B) Wang, Zhao and Liu were all hired by Tianji.\nis_possible(And(hired_by(Liu) == Tianxuan, ForAll([s:students], Implies(s != Liu, hired_by(s) != Tianxuan)))) ::: (C) Only Liu was hired by Tianxuan.\nis_possible(And(hired_by(Wang) == Tianxuan, ForAll([s:students], Implies(s != Wang, hired_by(s) != Tianxuan)))) ::: (D) Only Wang was hired by Tianxuan."
    ]
  },
  {
    "id": 64,
    "context": "Five graduate students Zhang, Wang, Li, Zhao, and Liu graduated from a linguistics major in a college of arts of a university in 2014, and were hired by one of the three employers, Tianshu, Tianji, and Tianxuan, and at least one of them was hired by each unit.name.Known? (1) Li was hired by Tianshu; (2) Li and Zhao were not hired by the same unit; (3) Liu and Zhao were hired by the same unit; (4) If Zhang was hired by Tianxuan, then Wang Ye Was hired by Tianxuan.",
    "question": "Which of the following must be correct?",
    "answer": "C",
    "options": [
      "A.Zhang and Wang were hired by the same unit.",
      "B.Wang and Liu were hired by different units",
      "C.Tianshu hired at most two people.",
      "D.Tianshu and Tianxuan employ the same number of people."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Zhang, Wang, Li, Zhao, Liu])\nemployers = EnumSort([Tianshu, Tianji, Tianxuan])\nhired_by = Function([students] -> [employers])\n\n# Constraints\nhired_by(Li) == Tianshu ::: Li was hired by Tianshu\nhired_by(Li) != hired_by(Zhao) ::: Li and Zhao were not hired by the same unit\nhired_by(Liu) == hired_by(Zhao) ::: Liu and Zhao were hired by the same unit\nImplies(hired_by(Zhang) == Tianxuan, hired_by(Wang) == Tianxuan) ::: If Zhang was hired by Tianxuan, then Wang was hired by Tianxuan\nForAll([e:employers], Count([s:students], hired_by(s) == e) >= 1) ::: At least one student was hired by each employer\n\n# Options\nQuestion ::: Which of the following must be correct?\nis_must(ForAll([e:employers], hired_by(Zhang) == hired_by(Wang))) ::: (A) Zhang and Wang were hired by the same unit.\nis_must(Not(ForAll([e:employers], hired_by(Wang) == hired_by(Liu)))) ::: (B) Wang and Liu were hired by different units\nis_must(Count([s:students], hired_by(s) == Tianshu) <= 2) ::: (C) Tianshu hired at most two people.\nis_must(Count([s:students], hired_by(s) == Tianshu) == Count([s:students], hired_by(s) == Tianxuan)) ::: (D) Tianshu and Tianxuan employ the same number of people."
    ]
  },
  {
    "id": 65,
    "context": "Five graduate students Zhang, Wang, Li, Zhao, and Liu graduated from a linguistics major in a college of arts of a university in 2014, and were hired by one of the three employers, Tianshu, Tianji, and Tianxuan, and at least one of them was hired by each unit.name.Known? (1) Li was hired by Tianshu; (2) Li and Zhao were not hired by the same unit; (3) Liu and Zhao were hired by the same unit; (4) If Zhang was hired by Tianxuan, then Wang Ye Was hired by Tianxuan.",
    "question": "Which of the following is correct, you can determine the employer of each graduate?",
    "answer": "B",
    "options": [
      "A.Li was hired by Tianshu.",
      "B.Zhang was hired by Tianxuan.",
      "C.Zhang was hired by Tianshu.",
      "D.Liu was hired by Tianji."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Zhang, Wang, Li, Zhao, Liu])\nemployers = EnumSort([Tianshu, Tianji, Tianxuan])\nhired_by = Function([students] -> [employers])\n\n# Constraints\nhired_by(Li) == Tianshu ::: Li was hired by Tianshu\nhired_by(Li) != hired_by(Zhao) ::: Li and Zhao were not hired by the same unit\nhired_by(Liu) == hired_by(Zhao) ::: Liu and Zhao were hired by the same unit\nImplies(hired_by(Zhang) == Tianxuan, hired_by(Wang) == Tianxuan) ::: If Zhang was hired by Tianxuan, then Wang was hired by Tianxuan\nForAll([e:employers], Exists([s:students], hired_by(s) == e)) ::: At least one student was hired by each employer\n\n# Options\nQuestion ::: Which of the following is correct, you can determine the employer of each graduate?\nis_determined(hired_by(Li) == Tianshu) ::: (A)\nis_determined(hired_by(Zhang) == Tianxuan) ::: (B)\nis_determined(hired_by(Zhang) == Tianshu) ::: (C)\nis_determined(hired_by(Liu) == Tianji) ::: (D)"
    ]
  },
  {
    "id": 66,
    "context": "Five graduate students Zhang, Wang, Li, Zhao, and Liu graduated from a linguistics major in a college of arts of a university in 2014, and were hired by one of the three employers, Tianshu, Tianji, and Tianxuan, and at least one of them was hired by each unit.name.Known? (1) Li was hired by Tianshu; (2) Li and Zhao were not hired by the same unit; (3) Liu and Zhao were hired by the same unit; (4) If Zhang was hired by Tianxuan, then Wang Ye Was hired by Tianxuan.",
    "question": "If Liu was hired by Tianxuan, which of the following must be wrong?",
    "answer": "D",
    "options": [
      "A.Tianxuan hired 3 people.",
      "B.Li's employer only hired him.",
      "C.Wang was hired by Tianxuan.",
      "D.Zhang was hired by Tianxuan."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Zhang, Wang, Li, Zhao, Liu])\nemployers = EnumSort([Tianshu, Tianji, Tianxuan])\nhired_by = Function([students] -> [employers])\n\n# Constraints\nhired_by(Li) == Tianshu ::: Li was hired by Tianshu\nhired_by(Li) != hired_by(Zhao) ::: Li and Zhao were not hired by the same unit\nhired_by(Liu) == hired_by(Zhao) ::: Liu and Zhao were hired by the same unit\nImplies(hired_by(Zhang) == Tianxuan, hired_by(Wang) == Tianxuan) ::: If Zhang was hired by Tianxuan, then Wang was hired by Tianxuan\n\n# Options\nQuestion ::: If Liu was hired by Tianxuan, which of the following must be wrong?\nis_wrong(Count([s:students], hired_by(s) == Tianxuan) == 3) ::: (A)\nis_wrong(Count([s:students], hired_by(s) == Tianshu) == 1) ::: (B)\nis_wrong(hired_by(Wang) == Tianxuan) ::: (C)\nis_wrong(hired_by(Zhang) == Tianxuan) ::: (D)"
    ]
  },
  {
    "id": 67,
    "context": "There are two types of community-organized activities? health care and leisure.The organizer's statistics on all participants found that? the elderly in the community have participated in all health-related activities, and some have participated in all leisure-type activities .",
    "question": "According to this statistic, which of the following must be true?",
    "answer": "C",
    "options": [
      "A.Some activities organized by the community do not involve the elderly in the community.",
      "B.Some elderly people in the community do not participate in any activities organized by the community.",
      "C.Any activity organized by a community will involve the elderly in the community.",
      "D.Middle-aged people in the community also participated in community-organized activities."
    ],
    "raw_logic_programs": [
      "# Declarations\nparticipants = EnumSort([elderly, middle_aged])\nactivities = EnumSort([health_care, leisure])\nparticipates = Function([participants, activities] -> [bool])\n\n# Constraints\nForAll([a:activities], participates(elderly, a)) ::: the elderly in the community have participated in all health-related activities\nExists([a:activities], participates(elderly, a)) ::: some have participated in all leisure-type activities\n\n# Options\nQuestion ::: According to this statistic, which of the following must be true?\nis_must_true(Exists([a:activities], Not(participates(elderly, a)))) ::: (A) Some activities organized by the community do not involve the elderly in the community.\nis_must_true(Exists([p:participants], ForAll([a:activities], Not(participates(p, a))))) ::: (B) Some elderly people in the community do not participate in any activities organized by the community.\nis_must_true(ForAll([a:activities], participates(elderly, a))) ::: (C) Any activity organized by a community will involve the elderly in the community.\nis_must_true(Exists([a:activities], participates(middle_aged, a))) ::: (D) Middle-aged people in the community also participated in community-organized activities."
    ]
  },
  {
    "id": 68,
    "context": "A national academic conference held by a society receives nearly 1,000 conference papers each time.In order to ensure the quality of the conference communication papers, the academic conference organizing committee decided to select only 10% of the papers from the conference papers as conference communication papers each time.",
    "question": "The decision of the academic conference organizing committee is most likely based on which of the following assumptions?",
    "answer": "A",
    "options": [
      "A.There is always a certain percentage of paper quality in every conference paper submitted.",
      "B.The number of conference papers received each time in the future will not change significantly.",
      "C.90% of conference papers do not meet the quality of conference papers.",
      "D.The academic conference organizing committee can make accurate judgments on the quality of the paper."
    ],
    "raw_logic_programs": [
      "# Declarations\npapers = EnumSort([conference_papers, communication_papers])\nquality = Function([papers] -> [bool])\npercentage = Function([papers] -> [int])\n\n# Constraints\npercentage(conference_papers) == 1000 ::: A national academic conference held by a society receives nearly 1,000 conference papers each time\npercentage(communication_papers) == 0.1 * percentage(conference_papers) ::: The academic conference organizing committee decided to select only 10% of the papers from the conference papers as conference communication papers each time\n\n# Options\nQuestion ::: The decision of the academic conference organizing committee is most likely based on which of the following assumptions?\nis_assumption(Exists([p:papers], quality(p) == True)) ::: (A) There is always a certain percentage of paper quality in every conference paper submitted.\nis_assumption(ForAll([p:papers], percentage(p) == 1000)) ::: (B) The number of conference papers received each time in the future will not change significantly.\nis_assumption(ForAll([p:papers], Not(quality(p)))) ::: (C) 90% of conference papers do not meet the quality of conference papers.\nis_assumption(Exists([p:papers], quality(p) == True)) ::: (D) The academic conference organizing committee can make accurate judgments on the quality of the paper."
    ]
  },
  {
    "id": 69,
    "context": "A blogger declared? 'My analysis of the future trend of housing prices has received more than 1,000 netizens' follow-up posts.I counted them, and 85% of the follow-up posts agree with my opinion.This shows Most people agree with me.'",
    "question": "Which of the following can best question the blogger 's conclusion?",
    "answer": "D",
    "options": [
      "A.Although some people agree with his views, they do not agree with his analysis.",
      "B.The blogger's other articles with higher approval ratings later proved to be wrong.",
      "C.Some of the objections to the post are more fully justified.",
      "D.Most people who follow this blogger's article are their loyal fans."
    ],
    "raw_logic_programs": [
      "# Declarations\nposts = EnumSort([agree, disagree])\nfollowers = EnumSort([loyal, casual])\nopinions = Function([posts] -> [int])\nfollowers_type = Function([followers] -> [int])\n\n# Constraints\nopinions(agree) == 0.85 * 1000 ::: 85% of the follow-up posts agree with the blogger's opinion\nopinions(disagree) == 0.15 * 1000 ::: 15% of the follow-up posts disagree with the blogger's opinion\n\n# Options\nQuestion ::: Which of the following can best question the blogger's conclusion?\nis_best_question(Exists([f:followers], followers_type(f) == loyal)) ::: (A) Although some people agree with his views, they do not agree with his analysis.\nis_best_question(Exists([f:followers], followers_type(f) == loyal)) ::: (B) The blogger's other articles with higher approval ratings later proved to be wrong.\nis_best_question(Exists([f:followers], followers_type(f) == loyal)) ::: (C) Some of the objections to the post are more fully justified.\nis_best_question(Exists([f:followers], followers_type(f) == loyal)) ::: (D) Most people who follow this blogger's article are their loyal fans."
    ]
  },
  {
    "id": 70,
    "context": "In judicial trials, the so-called affirmative misjudgment refers to convicting an innocent person as guilty, referred to as misjudgment? negative misjudgment refers to convicting a guilty person as innocent, referred to as misplacement.The fundamental principle of judicial justice is 'to not let a bad person go, not to injustice a good person'.A jurist believes that measuring whether a court implements the principles of judicial justice well in handling cases depends on whether its rate of positive misjudgments is low enough.",
    "question": "Which of the following can most strongly support the views of the above jurists?",
    "answer": "B",
    "options": [
      "A.The accuracy of handling cases in various courts has improved significantly.",
      "B.The negative misjudgment rate of each court is basically the same.",
      "C.Wrong judgment rather than misplacement is a reflection of the 'left' thinking in the judiciary.",
      "D.Most of the losses caused by misplacement are remedyable; the damage caused by the misjudgment to the victim is irreparable."
    ],
    "raw_logic_programs": [
      "# Declarations\nmisjudgment_types = EnumSort([affirmative, negative])\ncourts = EnumSort([court1, court2, court3, court4])\nmisjudgment_rate = Function([courts, misjudgment_types] -> [float])\n\n# Constraints\nForAll([c:courts], misjudgment_rate(c, affirmative) < threshold) ::: The rate of positive misjudgments should be low enough\n\n# Options\nQuestion ::: Which of the following can most strongly support the views of the above jurists?\nis_strong_support(Exists([c:courts], misjudgment_rate(c, affirmative) < misjudgment_rate(c, negative))) ::: (A)\nis_strong_support(ForAll([c1:courts, c2:courts], misjudgment_rate(c1, negative) == misjudgment_rate(c2, negative))) ::: (B)\nis_strong_support(ForAll([c:courts], misjudgment_rate(c, affirmative) > misjudgment_rate(c, negative))) ::: (C)\nis_strong_support(ForAll([c:courts], misjudgment_rate(c, affirmative) > 0)) ::: (D)"
    ]
  },
  {
    "id": 71,
    "context": "As long as there are scammers in this society and some people have greed in their hearts, then someone must be cheated.So if society progresses so that no one is deceived, then people in that society must have universally eliminated greed.",
    "question": "Which of the following best supports the above argument?",
    "answer": "D",
    "options": [
      "A.The greater the greed, the easier it is to be deceived.",
      "B.The society has improved, and the scammers will no longer exist.",
      "C.With the progress of society, the quality of people will generally improve, and greed will gradually be eliminated.",
      "D.No matter in what society, scammers always exist."
    ],
    "raw_logic_programs": [
      "# Declarations\nscammers_exist = Bool('scammers_exist')\ngreed_exists = Bool('greed_exists')\nsomeone_cheated = Bool('someone_cheated')\nsociety_progressed = Bool('society_progressed')\nno_one_deceived = Bool('no_one_deceived')\ngreed_eliminated = Bool('greed_eliminated')\n\n# Constraints\nImplies(And(scammers_exist, greed_exists), someone_cheated) ::: As long as there are scammers in this society and some people have greed in their hearts, then someone must be cheated\nImplies(no_one_deceived, greed_eliminated) ::: If society progresses so that no one is deceived, then people in that society must have universally eliminated greed\n\n# Options\nQuestion ::: Which of the following best supports the above argument?\nImplies(society_progressed, Not(scammers_exist)) ::: (A) The greater the greed, the easier it is to be deceived.\nImplies(society_progressed, Not(scammers_exist)) ::: (B) The society has improved, and the scammers will no longer exist.\nImplies(society_progressed, greed_eliminated) ::: (C) With the progress of society, the quality of people will generally improve, and greed will gradually be eliminated.\nImplies(society_progressed, scammers_exist) ::: (D) No matter in what society, scammers always exist."
    ]
  },
  {
    "id": 72,
    "context": "After multiple rounds of elimination, four players A.B, C and D compete for the final ranking.The ranking does not have a parallel ranking.Analysts predict? I, the first place is either A or B; II.If C Not the first, Ding is not the first; III, A is not the first.",
    "question": "If only one sentence of the analyst 's prediction is correct, who is the first?",
    "answer": "D",
    "options": [
      "A.C",
      "B.B",
      "C.Can't push",
      "D.Ding"
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([A, B, C, D])\nrank = Function([players] -> [int])\nForAll([p:players], And(1 <= rank(p), rank(p) <= 4))\n\n# Constraints\nDistinct([p:players], rank(p)) ::: The ranking does not have a parallel ranking\nOr(rank(A) == 1, rank(B) == 1) ::: I, the first place is either A or B\nImplies(rank(C) != 1, rank(D) != 1) ::: II, if C is not the first, D is not the first\nrank(A) != 1 ::: III, A is not the first\n\n# Options\nQuestion ::: If only one sentence of the analyst's prediction is correct, who is the first?\nis_sat(rank(C) == 1) ::: (A)\nis_sat(rank(B) == 1) ::: (B)\nis_sat(rank(A) == 1) ::: (C)\nis_sat(rank(D) == 1) ::: (D)"
    ]
  },
  {
    "id": 73,
    "context": "It is wrong to say that foods with a high content of refined sugar will not cause acquired diabetes, because foods with a high content of refined sugar will cause obesity, and obesity is an important cause of acquired diabetes.",
    "question": "Which of the following is most similar to the above argument?",
    "answer": "D",
    "options": [
      "A.It is wrong to say that Alexander is a Plato student.In fact, Alexander was a student of Aristotle, and Aristotle was a student of Plato.",
      "B.It is true that excessive fertilization is the main cause of lawn diseases and insect pests.Because excessive fertilization can cause the grass to grow madly, and the grass that grows madly has little resistance to diseases and insect pests.",
      "C.It is wrong for people who frequently participate in strenuous exercise to cause sudden death.Because the violent cause is cardiovascular and cerebrovascular diseases, and vigorous exercise does not necessarily cause cardiovascular and cerebrovascular diseases.",
      "D.It is wrong to say that inferior gasoline will not cause abnormal fuel consumption.Because inferior gasoline can cause very normal aging of engine valves, and abnormal aging of motive valves can cause abnormal fuel consumption."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nsimilarity = Function([arguments] -> [bool])\n\n# Constraints\nsimilarity(A) == False ::: The argument structure in (A) does not match the original argument's causal chain.\nsimilarity(B) == False ::: The argument in (B) supports a claim rather than refuting a statement, differing from the original argument's structure.\nsimilarity(C) == False ::: The argument in (C) refutes a claim but does not establish a causal chain like the original argument.\nsimilarity(D) == True ::: The argument in (D) follows a similar structure by refuting a claim through a causal chain.\n\n# Options\nQuestion ::: Which of the following is most similar to the above argument?\nis_most_similar(similarity(A)) ::: (A)\nis_most_similar(similarity(B)) ::: (B)\nis_most_similar(similarity(C)) ::: (C)\nis_most_similar(similarity(D)) ::: (D)"
    ]
  },
  {
    "id": 74,
    "context": "In the football player transfer market this summer, only those who perform well during the World Cup and also perform well in clubs can be favored and chased by many clubs.",
    "question": "If the above statement is true, which of the following cannot be true?",
    "answer": "C",
    "options": [
      "A.Veteran Klose broke Ronaldo's 15-ball World Cup goal record with 16 goals at the World Cup, but still did not win the favor of many clubs.",
      "B.J.Ronaldo won the World Cup Golden Boots.At the same time, with the excellent performance of the club, he successfully transferred to Real Madrid in the case of many clubs chasing.",
      "C.Royce failed to represent the German team in the Brazil World Cup due to injury, but he has an excellent performance in the Bundesliga club field, and has been favored by top giants such as Real Madrid and Barcelona in the transfer market.",
      "D.Dortmund top scorer Lewandowski successfully transferred to Bayern Munich."
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([Klose, Ronaldo, Royce, Lewandowski])\nperformances = EnumSort([world_cup, club])\nfavored = Function([players] -> [bool])\nperformed_well = Function([players, performances] -> [bool])\n\n# Constraints\nForAll([p:players], favored(p) == And(performed_well(p, world_cup), performed_well(p, club))) ::: Only those who perform well during the World Cup and also perform well in clubs can be favored and chased by many clubs.\n\n# Options\nQuestion ::: If the above statement is true, which of the following cannot be true?\nis_unsat(And(performed_well(Klose, world_cup), Not(favored(Klose)))) ::: (A)\nis_unsat(And(performed_well(Ronaldo, world_cup), performed_well(Ronaldo, club), favored(Ronaldo))) ::: (B)\nis_unsat(And(Not(performed_well(Royce, world_cup)), performed_well(Royce, club), favored(Royce))) ::: (C)\nis_unsat(favored(Lewandowski)) ::: (D)"
    ]
  },
  {
    "id": 75,
    "context": "In recent years, overseas study markets in Europe and the United States have continued to heat up, and more and more Chinese have sent their children out.At the same time, part of the returned scholars were caught in a job-hunting dilemma and became a 'sea waiter' family.An authoritative person pointed out? 'As a job seeker with an overseas degree, if you have real knowledge and basic social skills, and can be accurately positioned in the career selection process, then you cannot become a' sea wait.'Daejeon is The returnee who has obtained a master's degree in the UK has not yet found a job.",
    "question": "Which of the following conclusions can be made based on the above discussion?",
    "answer": "B",
    "options": [
      "A.Datian has real talent and basic social skills, but the positioning is not accurate.",
      "B.Datian either does not have real talent, or lacks basic social skills, or fails to accurately locate in the career selection process.",
      "C.Datian does not possess real knowledge and basic social skills, but the positioning is accurate.",
      "D.Datian does not have real knowledge and basic social skills, and does not have an accurate positioning."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([Daejeon])\nattributes = EnumSort([real_knowledge, basic_social_skills, accurate_positioning])\nhas_attribute = Function([individuals, attributes] -> [bool])\n\n# Constraints\nNot(has_attribute(Daejeon, real_knowledge) and has_attribute(Daejeon, basic_social_skills) and has_attribute(Daejeon, accurate_positioning)) ::: Daejeon is a 'sea waiter', so he does not have all three attributes\n\n# Options\nQuestion ::: Which of the following conclusions can be made based on the above discussion?\nis_valid(And(has_attribute(Daejeon, real_knowledge), has_attribute(Daejeon, basic_social_skills), Not(has_attribute(Daejeon, accurate_positioning)))) ::: (A)\nis_valid(Or(Not(has_attribute(Daejeon, real_knowledge)), Not(has_attribute(Daejeon, basic_social_skills)), Not(has_attribute(Daejeon, accurate_positioning)))) ::: (B)\nis_valid(And(Not(has_attribute(Daejeon, real_knowledge)), Not(has_attribute(Daejeon, basic_social_skills)), has_attribute(Daejeon, accurate_positioning))) ::: (C)\nis_valid(And(Not(has_attribute(Daejeon, real_knowledge)), Not(has_attribute(Daejeon, basic_social_skills)), Not(has_attribute(Daejeon, accurate_positioning)))) ::: (D)"
    ]
  },
  {
    "id": 76,
    "context": "Some college teachers have overseas doctorates, so some overseas doctors have a high level.",
    "question": "Which of the following can guarantee the correctness of the above statement?",
    "answer": "A",
    "options": [
      "A.All college teachers have a very high level.",
      "B.Not all college teachers have a high level.",
      "C.Some college teachers have a very high level.",
      "D.All high-level teachers have overseas doctorate degrees."
    ],
    "raw_logic_programs": [
      "# Declarations\nteachers = EnumSort([college_teacher, overseas_doctor])\nlevels = EnumSort([high, very_high])\nhas_doctorate = Function([teachers] -> [bool])\nhas_level = Function([teachers] -> [levels])\n\n# Constraints\nExists([t:teachers], And(has_doctorate(t), t == college_teacher)) ::: Some college teachers have overseas doctorates\nExists([t:teachers], And(has_doctorate(t), has_level(t) == high)) ::: Some overseas doctors have a high level\n\n# Options\nQuestion ::: Which of the following can guarantee the correctness of the above statement?\nis_guaranteed(ForAll([t:teachers], Implies(t == college_teacher, has_level(t) == very_high))) ::: (A)\nis_guaranteed(Not(ForAll([t:teachers], Implies(t == college_teacher, has_level(t) == high)))) ::: (B)\nis_guaranteed(Exists([t:teachers], And(t == college_teacher, has_level(t) == very_high))) ::: (C)\nis_guaranteed(ForAll([t:teachers], Implies(has_level(t) == high, has_doctorate(t)))) ::: (D)"
    ]
  },
  {
    "id": 77,
    "context": "There are only two secondary schools in Nankou Township.The results of the first middle school students are generally better than those of the second middle school.Since Li Ming from Nankou Town has the best grades in the first year of college, he must have graduated from Nankou Town No.1 Middle School.",
    "question": "Which of the following is most similar to the question-making argument?",
    "answer": "D",
    "options": [
      "A.If the parent has a good education for the child, the child's performance in the school is generally better.Because Wang Zheng's performance in the school is not good, his parents must be poorly educated.",
      "B.If the child recites the poem for 1 hour every day, it will be exported into chapters.Guo Na recites the poems for less than an hour every day, so she cannot export to chapters.",
      "C.If people know how to make money, they can generally accumulate more wealth.Therefore, Mr.Peng's wealth comes from his resourcefulness.",
      "D.Northerners are usually taller than southerners.Marin is the highest in the class, so he must be a northerner."
    ],
    "raw_logic_programs": [
      "# Declarations\nschools = EnumSort([FirstMiddleSchool, SecondMiddleSchool])\nstudents = EnumSort([LiMing])\ngrades = EnumSort([best, better, good, average, poor])\ngraduated = Function([students] -> [schools])\nperformance = Function([schools] -> [grades])\ncollege_performance = Function([students] -> [grades])\n\n# Constraints\nperformance(FirstMiddleSchool) > performance(SecondMiddleSchool) ::: The results of the first middle school students are generally better than those of the second middle school\ncollege_performance(LiMing) == best ::: Li Ming from Nankou Town has the best grades in the first year of college\n\n# Options\nQuestion ::: Which of the following is most similar to the question-making argument?\nis_similar(Implies(And(performance(FirstMiddleSchool) > performance(SecondMiddleSchool), college_performance(LiMing) == best), graduated(LiMing) == FirstMiddleSchool)) ::: (A)\nis_similar(Implies(And(performance(FirstMiddleSchool) > performance(SecondMiddleSchool), college_performance(LiMing) == best), graduated(LiMing) == FirstMiddleSchool)) ::: (B)\nis_similar(Implies(And(performance(FirstMiddleSchool) > performance(SecondMiddleSchool), college_performance(LiMing) == best), graduated(LiMing) == FirstMiddleSchool)) ::: (C)\nis_similar(Implies(And(performance(FirstMiddleSchool) > performance(SecondMiddleSchool), college_performance(LiMing) == best), graduated(LiMing) == FirstMiddleSchool)) ::: (D)"
    ]
  },
  {
    "id": 78,
    "context": "There are more and more Chinese computer software that can correct vocabulary, grammar and punctuation are used incorrectly.Even if journalists do not have a good Chinese language foundation, they will not hinder writing.Therefore, schools that train journalists do not need to pay attention to the improvement of students 'Chinese ability, but should pay attention to the training of journalists' other qualities.",
    "question": "Which of the following, if true, would most weaken the above arguments and suggestions?",
    "answer": "A",
    "options": [
      "A.Avoiding errors in vocabulary, grammar, and punctuation does not necessarily ensure the language quality of the manuscript.",
      "B.Journalism courses have always emphasized and required students to be proficient in using computers and familiar with various software.",
      "C.The more effective the Chinese software is, the more likely it is to be pirated.",
      "D.Opening a new course at the School of Journalism requires a complicated process of argumentation and approval."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([vocabulary, grammar, punctuation, language_quality, computer_proficiency, software_familiarity, piracy, course_approval])\neffects = Function([arguments] -> [bool])\n\n# Constraints\neffects(vocabulary) == True ::: Chinese software can correct vocabulary errors\neffects(grammar) == True ::: Chinese software can correct grammar errors\neffects(punctuation) == True ::: Chinese software can correct punctuation errors\neffects(language_quality) == False ::: Even if journalists do not have a good Chinese language foundation, they will not hinder writing\neffects(computer_proficiency) == False ::: Schools should focus on training journalists' other qualities\neffects(software_familiarity) == False ::: Schools should focus on training journalists' other qualities\n\n# Options\nQuestion ::: Which of the following, if true, would most weaken the above arguments and suggestions?\nis_weakened(Implies(effects(vocabulary), Not(effects(language_quality)))) ::: (A) Avoiding errors in vocabulary, grammar, and punctuation does not necessarily ensure the language quality of the manuscript.\nis_weakened(Implies(effects(computer_proficiency), effects(software_familiarity))) ::: (B) Journalism courses have always emphasized and required students to be proficient in using computers and familiar with various software.\nis_weakened(Implies(effects(piracy), Not(effects(language_quality)))) ::: (C) The more effective the Chinese software is, the more likely it is to be pirated.\nis_weakened(Implies(effects(course_approval), Not(effects(language_quality)))) ::: (D) Opening a new course at the School of Journalism requires a complicated process of argumentation and approval."
    ]
  },
  {
    "id": 79,
    "context": "It is generally believed that left-handers are more prone to operating accidents than right-handers.This is a misunderstanding.In fact, most housework accidents range from fires, burns, and small finger cuts to right-handers.",
    "question": "Which of the following most appropriately summarizes the loopholes in the above argument?",
    "answer": "D",
    "options": [
      "A.Make a substantive distinction between two types of phenomena that have no substantive difference.",
      "B.Make an analogy between two types of objects that are not comparable.",
      "C.The proportion of housework accidents in the whole operation accidents is not considered.",
      "D.Not taking into account the proportion of left-handers among all people."
    ],
    "raw_logic_programs": [
      "# Declarations\naccidents = EnumSort([operating_accidents, housework_accidents])\nhandedness = EnumSort([left_hander, right_hander])\nprone_to_accidents = Function([handedness, accidents] -> [bool])\n\n# Constraints\nprone_to_accidents(right_hander, housework_accidents) ::: Most housework accidents range from fires, burns, and small finger cuts to right-handers\nNot(prone_to_accidents(left_hander, operating_accidents)) ::: It is generally believed that left-handers are more prone to operating accidents than right-handers. This is a misunderstanding.\n\n# Options\nQuestion ::: Which of the following most appropriately summarizes the loopholes in the above argument?\nis_valid(And(Not(prone_to_accidents(left_hander, operating_accidents)), prone_to_accidents(right_hander, housework_accidents))) ::: (A)\nis_valid(And(prone_to_accidents(left_hander, operating_accidents), Not(prone_to_accidents(right_hander, housework_accidents)))) ::: (B)\nis_valid(Not(Exists([a:accidents], prone_to_accidents(left_hander, a)))) ::: (C)\nis_valid(Not(Exists([h:handedness], prone_to_accidents(h, operating_accidents)))) ::: (D)"
    ]
  },
  {
    "id": 80,
    "context": "The raw material of cement is very cheap, like limestone and mud everywhere can be used as raw material of cement.However, the price of cement will be influenced by the price of oil, because it takes a lot of energy to convert raw materials from Pakistan to cement in high-temperature furnaces.",
    "question": "Based on the above conclusions, which of the following conclusions is most likely to be drawn?",
    "answer": "B",
    "options": [
      "A.Petroleum is one of the raw materials contained in cement",
      "B.Petroleum is the energy source of some high-temperature furnaces for making cement",
      "C.The price of cement falls as the price of oil rises",
      "D.The higher the price of cement, the higher the price of limestone"
    ],
    "raw_logic_programs": [
      "# Declarations\nmaterials = EnumSort([limestone, mud, oil])\nproducts = EnumSort([cement])\nfactors = EnumSort([price, energy])\ninfluences = Function([factors, products] -> [bool])\n\n# Constraints\ninfluences(price, cement) == influences(price, oil) ::: the price of cement is influenced by the price of oil\ninfluences(energy, cement) == influences(energy, oil) ::: energy is required to convert raw materials to cement\n\n# Options\nQuestion ::: Based on the above conclusions, which of the following conclusions is most likely to be drawn?\nis_likely(influences(energy, oil)) ::: (A) Petroleum is one of the raw materials contained in cement\nis_likely(influences(energy, oil)) ::: (B) Petroleum is the energy source of some high-temperature furnaces for making cement\nis_likely(Not(influences(price, cement) == influences(price, oil))) ::: (C) The price of cement falls as the price of oil rises\nis_likely(influences(price, limestone)) ::: (D) The higher the price of cement, the higher the price of limestone"
    ]
  },
  {
    "id": 81,
    "context": "Ms.Zheng? Hengyuan 's GDP (gross domestic product) growth rate over the past decade is higher than that of Yiyang, so Hengyuan 's economic prospects are better than Yiyang.Mr.Hu? I disagree with you.Although the GDP growth rate of Hengyuan City is higher than that of the Yiyang market, the GDP of Yiyang City is larger.",
    "question": "Which of the following most accurately summarizes the controversial focus of Ms.Zheng and Mr.Hu?",
    "answer": "D",
    "options": [
      "A.Is the GDP of Yiyang City greater than that of Hengyuan City?",
      "B.Is the GDP growth rate of Hengyuan City really higher than that of Angyang City?",
      "C.A city's GDP has a large value, is the economic outlook necessarily good?",
      "D.A city's GDP growth rate is high, is the economic outlook necessarily good?"
    ],
    "raw_logic_programs": [
      "# Declarations\ncities = EnumSort([Hengyuan, Yiyang])\nattributes = EnumSort([GDP, GDP_growth_rate, economic_prospects])\ncomparison = Function([cities, attributes] -> [int])\n\n# Constraints\ncomparison(Hengyuan, GDP_growth_rate) > comparison(Yiyang, GDP_growth_rate) ::: Hengyuan's GDP growth rate is higher than Yiyang's\ncomparison(Yiyang, GDP) > comparison(Hengyuan, GDP) ::: Yiyang's GDP is larger than Hengyuan's\n\n# Options\nQuestion ::: Which of the following most accurately summarizes the controversial focus of Ms. Zheng and Mr. Hu?\nis_accurate_summary(comparison(Yiyang, GDP) > comparison(Hengyuan, GDP)) ::: (A)\nis_accurate_summary(comparison(Hengyuan, GDP_growth_rate) > comparison(Yiyang, GDP_growth_rate)) ::: (B)\nis_accurate_summary(Implies(comparison(Yiyang, GDP) > comparison(Hengyuan, GDP), comparison(Yiyang, economic_prospects) > comparison(Hengyuan, economic_prospects))) ::: (C)\nis_accurate_summary(Implies(comparison(Hengyuan, GDP_growth_rate) > comparison(Yiyang, GDP_growth_rate), comparison(Hengyuan, economic_prospects) > comparison(Yiyang, economic_prospects))) ::: (D)"
    ]
  },
  {
    "id": 82,
    "context": "Clinical trials have shown that for people who occasionally consume a certain amount of beef jerky, most brands of beef jerky additives do not cause arterial hardening.Therefore, people can eat beef jerky without worrying about health effects.",
    "question": "Which of the following, if true, would most weaken the above argument?",
    "answer": "B",
    "options": [
      "A.Eating large amounts of beef jerky is not conducive to arterial health.",
      "B.Arterial health is not equal to physical health.",
      "C.Meat contains substances harmful to the human body.",
      "D.People who like to eat beef jerky often like to eat other foods that are harmful to arterial health."
    ],
    "raw_logic_programs": [
      "# Declarations\nargument = EnumSort([beef_jerky, additives, arterial_hardening, health_effects])\nconsumption = Function([argument] -> [bool])\ncauses = Function([argument, argument] -> [bool])\n\n# Constraints\nForAll([a:argument], Implies(consumption(beef_jerky), Not(causes(additives, arterial_hardening)))) ::: Most brands of beef jerky additives do not cause arterial hardening\nImplies(consumption(beef_jerky), Not(causes(beef_jerky, health_effects))) ::: People can eat beef jerky without worrying about health effects\n\n# Options\nQuestion ::: Which of the following, if true, would most weaken the above argument?\nis_weakened(Exists([a:argument], And(consumption(beef_jerky), causes(beef_jerky, arterial_hardening)))) ::: (A)\nis_weakened(Exists([a:argument], And(consumption(beef_jerky), Not(causes(arterial_hardening, health_effects))))) ::: (B)\nis_weakened(Exists([a:argument], And(consumption(beef_jerky), causes(meat, health_effects)))) ::: (C)\nis_weakened(Exists([a:argument], And(consumption(beef_jerky), causes(other_foods, arterial_hardening)))) ::: (D)"
    ]
  },
  {
    "id": 83,
    "context": "The Peace Foundation decided to suspend funding for S, on the grounds that such funding may be used in part for weapons research.In this regard, the S Institute promises? All the funding of the Peace Foundation will not be used for any weapon-related research.As a result, the Peace Foundation withdrew the above decision and reached a conclusion; as long as the S Institute kept its promise, the above funding of the Peace Foundation would no longer benefit weapons research.",
    "question": "Which of the following most appropriately summarizes the loopholes in the conclusions of the Peace Foundation?",
    "answer": "C",
    "options": [
      "A.Ignore this possibility? S Institute does not keep its promises.",
      "B.Ignore this possibility? S Institute can use weapons from other sources for weapons research.",
      "C.Ignored this possibility? the funding of the Peace Foundation enabled S Research to have all the ability to switch other funds to weapons research.",
      "D.Ignore this possibility? weapons research does not necessarily endanger peace."
    ],
    "raw_logic_programs": [
      "# Declarations\ninstitutes = EnumSort([S_Institute])\nfunding_sources = EnumSort([Peace_Foundation, Other_Sources])\nresearch_types = EnumSort([weapons_research, non_weapons_research])\nfunding_used_for = Function([institutes, funding_sources] -> [research_types])\n\n# Constraints\nForAll([i:institutes], funding_used_for(i, Peace_Foundation) != weapons_research) ::: All the funding of the Peace Foundation will not be used for any weapon-related research\n\n# Options\nQuestion ::: Which of the following most appropriately summarizes the loopholes in the conclusions of the Peace Foundation?\nis_loophole(Exists([i:institutes], funding_used_for(i, Peace_Foundation) == weapons_research)) ::: (A) Ignore this possibility? S Institute does not keep its promises.\nis_loophole(Exists([i:institutes], funding_used_for(i, Other_Sources) == weapons_research)) ::: (B) Ignore this possibility? S Institute can use weapons from other sources for weapons research.\nis_loophole(Exists([i:institutes], And(funding_used_for(i, Peace_Foundation) == non_weapons_research, funding_used_for(i, Other_Sources) == weapons_research))) ::: (C) Ignored this possibility? the funding of the Peace Foundation enabled S Research to have all the ability to switch other funds to weapons research.\nis_loophole(False) ::: (D) Ignore this possibility? weapons research does not necessarily endanger peace."
    ]
  },
  {
    "id": 84,
    "context": "Based on the following questions? Most people think that advertisers do whatever they can to attract customers.But advertisers are not always like this.Recently, in order to expand sales, a family magazine called 'Bay' was renamed 'Inferno', which mainly published violent and pornographic content.As a result, some perennial advertisers from the original 'Bay' magazine refused to renew the contract and turned to other publications.This shows that these advertisers not only consider economic benefits, but also take into account their ethical responsibilities.",
    "question": "If the following items are true, they can weaken the above argument, except",
    "answer": "A",
    "options": [
      "A.The violent and pornographic content published in Purgatory magazine is more moderate in similar magazines.",
      "B.Magazines that publish violent and pornographic content usually sell well, but have low credibility.",
      "C.The above-mentioned advertisers who refused to renew their contracts mainly promoted household goods.",
      "D.The advertising cost of the purgatory magazine after the name change is several times higher than before the name change."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([advertisers, magazine, content, sales, ethics])\nactions = EnumSort([rename, refuse, renew, consider])\nfactors = EnumSort([economic_benefits, ethical_responsibilities])\nweakens = Function([arguments, actions, factors] -> [bool])\n\n# Constraints\nForAll([a:arguments], Exists([f:factors], And(weakens(a, refuse, f), Not(weakens(a, renew, f))))) ::: Advertisers refused to renew contracts due to ethical responsibilities, not just economic benefits\n\n# Options\nQuestion ::: If the following items are true, they can weaken the above argument, except\nis_exception(weakens(content, rename, ethical_responsibilities)) ::: (A)\nis_exception(weakens(magazine, sales, economic_benefits)) ::: (B)\nis_exception(weakens(advertisers, refuse, economic_benefits)) ::: (C)\nis_exception(weakens(magazine, rename, economic_benefits)) ::: (D)"
    ]
  },
  {
    "id": 85,
    "context": "Based on the following questions? Most people think that advertisers do whatever they can to attract customers.But advertisers are not always like this.Recently, in order to expand sales, a family magazine called 'Bay' was renamed 'Inferno', which mainly published violent and pornographic content.As a result, some perennial advertisers from the original 'Bay' magazine refused to renew the contract and turned to other publications.This shows that these advertisers not only consider economic benefits, but also take into account their ethical responsibilities.",
    "question": "If the following item is true, can the argument be strengthened most?",
    "answer": "D",
    "options": [
      "A.The cost and selling price of 'Inferno' are lower than that of 'Harbour'.",
      "B.The above advertisers who refused to renew their contracts have not affected the benefits after switching to other publications.",
      "C.Readers of family magazines are generally not interested in violent and pornographic content.",
      "D.Some clients who advertise in other family magazines and so on turn to 'Inferno' magazine."
    ],
    "raw_logic_programs": [
      "# Declarations\nmagazines = EnumSort([Bay, Inferno, Harbour])\nadvertisers = EnumSort([Advertiser1, Advertiser2, Advertiser3, ...])  # Assuming a finite set of advertisers\ncontent_types = EnumSort([family, violent_pornographic])\nactions = EnumSort([renew, not_renew])\nconsiderations = EnumSort([economic, ethical])\n\n# Constraints\nForAll([a:advertisers], Or(actions(a, Bay) == renew, actions(a, Bay) == not_renew)) ::: Advertisers either renew or do not renew their contracts with 'Bay'\nForAll([a:advertisers], Implies(actions(a, Bay) == not_renew, actions(a, Inferno) == not_renew)) ::: Advertisers who do not renew with 'Bay' also do not renew with 'Inferno'\nForAll([a:advertisers], Implies(actions(a, Bay) == not_renew, considerations(a) == ethical)) ::: Advertisers who do not renew with 'Bay' consider ethical responsibilities\ncontent_type(Bay) == family ::: 'Bay' is a family magazine\ncontent_type(Inferno) == violent_pornographic ::: 'Inferno' publishes violent and pornographic content\n\n# Options\nQuestion ::: If the following item is true, can the argument be strengthened most?\nis_strengthened(Implies(cost(Inferno) < cost(Harbour), price(Inferno) < price(Harbour))) ::: (A)\nis_strengthened(ForAll([a:advertisers], Implies(actions(a, Bay) == not_renew, benefits(a, other_publications) == benefits(a, Bay)))) ::: (B)\nis_strengthened(ForAll([r:readers], Implies(reader_type(r) == family, not_interested(r, violent_pornographic)))) ::: (C)\nis_strengthened(Exists([c:clients], Implies(advertises(c, family_magazines), advertises(c, Inferno)))) ::: (D)"
    ]
  },
  {
    "id": 86,
    "context": "The area of â€‹â€‹the equatorial rainforest in country H decreases at an alarming rate every year, which has attracted global attention.However, data from satellite photos show that the reduction in rainforest area in country H last year was significantly lower than in previous years.Last year, the government of Country H spent millions of dollars to stop deforestation and forest fires.The government of country H claimed that the data from the satellite photos indicated that the efforts of the government to protect the equatorial rainforest had achieved remarkable results.",
    "question": "Which of the following, if true, would most weaken the above conclusions of the government of Country H?",
    "answer": "C",
    "options": [
      "A.Last year, H 's financial investment to protect the equatorial rainforest was significantly lower than in previous years.",
      "B.The area of â€‹â€‹the equatorial rainforest in country G, which is adjacent to country H, has not decreased.",
      "C.Last year's dry season in Country H saw unusually large and continuous rainfall.",
      "D.The cost of rainforest protection in country H only accounts for a small percentage of annual fiscal expenditure."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([H, G])\nfactors = EnumSort([financial_investment, rainfall, fiscal_expenditure])\nrainforest_area = Function([countries] -> [int])\ninvestment = Function([countries] -> [int])\nrainfall = Function([countries] -> [int])\nfiscal_expenditure = Function([countries] -> [int])\n\n# Constraints\nrainforest_area(H) < rainforest_area(H, previous_year) ::: The area of the equatorial rainforest in country H decreases every year\nrainforest_area(H, last_year) < rainforest_area(H, previous_year) ::: The reduction in rainforest area in country H last year was significantly lower than in previous years\ninvestment(H, last_year) > 0 ::: The government of Country H spent millions of dollars to stop deforestation and forest fires\nrainforest_area(H, last_year) < rainforest_area(H, previous_year) ::: Data from satellite photos show the reduction in rainforest area\nrainforest_area(H, last_year) < rainforest_area(H, previous_year) ::: The government claimed the efforts had achieved remarkable results\n\n# Options\nQuestion ::: Which of the following, if true, would most weaken the above conclusions of the government of Country H?\nis_weakened(And(investment(H, last_year) < investment(H, previous_year))) ::: (A)\nis_weakened(And(rainforest_area(G) == rainforest_area(G, previous_year))) ::: (B)\nis_weakened(And(rainfall(H, last_year) > rainfall(H, previous_year))) ::: (C)\nis_weakened(And(investment(H, last_year) / fiscal_expenditure(H, last_year) < threshold)) ::: (D)"
    ]
  },
  {
    "id": 87,
    "context": "According to a psychological theory, to be happy, one must maintain an intimate relationship with those around him.However, the great painters in the world often spend most of their time in loneliness and have no intimate relationships.Therefore, the above argument of this psychological theory is untenable.",
    "question": "Which of the following is most likely assumed by the above argument?",
    "answer": "D",
    "options": [
      "A.The psychological theory is to reveal the relationship between inner experience and artistic achievement.",
      "B.People with intimate relationships have little time for loneliness.",
      "C.Loneliness is necessary for great painting artists.",
      "D.Artists who have achieved great achievements cannot be unhappy."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheory = EnumSort([psychological_theory])\npeople = EnumSort([great_painters, general_people])\nconditions = EnumSort([happy, intimate_relationship, loneliness, great_achievement])\nassumes = Function([theory, people, conditions] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(assumes(psychological_theory, p, happy), assumes(psychological_theory, p, intimate_relationship))) ::: According to a psychological theory, to be happy, one must maintain an intimate relationship with those around him\nForAll([p:people], Implies(assumes(psychological_theory, p, great_achievement), Not(assumes(psychological_theory, p, intimate_relationship)))) ::: The great painters in the world often spend most of their time in loneliness and have no intimate relationships\nNot(assumes(psychological_theory, great_painters, happy)) ::: Therefore, the above argument of this psychological theory is untenable\n\n# Options\nQuestion ::: Which of the following is most likely assumed by the above argument?\nis_assumed(assumes(psychological_theory, great_painters, great_achievement)) ::: (A)\nis_assumed(ForAll([p:people], Implies(assumes(psychological_theory, p, intimate_relationship), Not(assumes(psychological_theory, p, loneliness))))) ::: (B)\nis_assumed(assumes(psychological_theory, great_painters, loneliness)) ::: (C)\nis_assumed(ForAll([p:people], Implies(assumes(psychological_theory, p, great_achievement), Not(assumes(psychological_theory, p, unhappy))))) ::: (D)"
    ]
  },
  {
    "id": 88,
    "context": "Xiao Chen? At present, part of the orbit of Comet 1996D3 is far from the sun, but recently it can be found to emit flickering light through the solar telescope.In the past, people never observed such flashes of comets far away from the sun, so this flicker must be an unusual scene.Xiao Wang? Normally people don't observe comets far away from the sun.The 1996D3 comet flicker light discovered this time was obtained by continuous and careful tracking observation.",
    "question": "Which of the following most accurately summarizes the method Xiao Wang used to refute Xiao Chen's views?",
    "answer": "B",
    "options": [
      "A.Point out that the key concepts used by Xiao Chen are ambiguous.",
      "B.pointed out that Xiao Chen's argument is clearly lacking in persuasion.",
      "C.pointed out that Xiao Chen's arguments contradict themselves.",
      "D.Disagree with Xiao Chen's conclusion, and put forward another explanation for Xiao Chen's argument.E.Agree with Xiao Chen's conclusion, but put forward another explanation for Xiao Chen's argument."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Xiao_Chen, Xiao_Wang])\nobservations = EnumSort([flicker, distance_from_sun])\narguments = Function([people] -> [observations])\n\n# Constraints\nobservations(Xiao_Chen) == flicker ::: Xiao Chen observes flickering light from Comet 1996D3\nobservations(Xiao_Wang) == distance_from_sun ::: Xiao Wang notes the comet is far from the sun\n\n# Options\nQuestion ::: Which of the following most accurately summarizes the method Xiao Wang used to refute Xiao Chen's views?\nis_valid(And(Disagree(Xiao_Wang, conclusion(Xiao_Chen)), Propose_Alternative(Xiao_Wang, argument(Xiao_Chen)))) ::: (D)\nis_valid(Agree(Xiao_Wang, conclusion(Xiao_Chen)), Propose_Alternative(Xiao_Wang, argument(Xiao_Chen))) ::: (E)"
    ]
  },
  {
    "id": 89,
    "context": "Mr.Chen is going to hold a gathering of friends and family.He came forward and invited his father's brother-in-law, his brother-in-law's father, his brother's mother-in-law, his brother-in-law's brother.",
    "question": "How many guests did Mr.Chen come forward to invite?",
    "answer": "D",
    "options": [
      "A.No guest invited",
      "B.1 guest",
      "C.2 guests",
      "D.3 guests"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Mr_Chen, Father, Brother, Brother_in_law, Uncle, Brother_in_law_father, Brother_mother_in_law, Brother_in_law_brother])\ninvited = Function([people] -> [bool])\n\n# Constraints\ninvited(Uncle) == True ::: Mr. Chen's father's brother-in-law\ninvited(Brother_in_law_father) == True ::: Mr. Chen's brother-in-law's father\ninvited(Brother_mother_in_law) == True ::: Mr. Chen's brother's mother-in-law\ninvited(Brother_in_law_brother) == True ::: Mr. Chen's brother-in-law's brother\n\n# Options\nQuestion ::: How many guests did Mr. Chen come forward to invite?\nis_correct(Count([p:people], invited(p)) == 0) ::: (A)\nis_correct(Count([p:people], invited(p)) == 1) ::: (B)\nis_correct(Count([p:people], invited(p)) == 2) ::: (C)\nis_correct(Count([p:people], invited(p)) == 3) ::: (D)"
    ]
  },
  {
    "id": 90,
    "context": "Crimes involving the use of firearms are more likely to lead to murder than other types of crimes.However, most crimes involving the use of firearms did not result in homicides.Therefore, there is no need to distinguish the illegal use of firearms as a serious criminal offense in the criminal law from other criminal offenses.",
    "question": "The logic loophole in the above argument is most similar to the following one?",
    "answer": "B",
    "options": [
      "A.Obese people are more likely to suffer from heart disease than people with normal weight.However, obese people make up a very small percentage of our population.Therefore, in our country, there is no need for the medical and health community to emphasize the risk of heart disease.",
      "B.Unchecked sex is more likely to be infected with AIDS than checkpoint.However, among people with unchecked sex, only a small percentage of people are infected with AIDS.Therefore, there is no need to emphasize the harm of unchecked sex in the propaganda of AIDS prevention.",
      "C.The prevailing view is that smoking is more likely to cause lung cancer than not smoking.However, in some countries, the proportion of people with lung cancer who have a history of smoking is not higher than the proportion of the total population who have a history of smoking.Therefore, the above popular opinion is likely to be a prejudice.",
      "D.High-income people are more capable of enjoying life than low-income people.But there are many high-income earners who claim to be unhappy.Therefore, those who pursue a happy life need not pay attention to the level of income."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([firearms_crime, obesity, unchecked_sex, smoking, income])\nconclusions = EnumSort([no_need_distinguish_firearms, no_need_emphasize_heart_disease, no_need_emphasize_unchecked_sex, popular_opinion_prejudice, no_need_focus_income])\nsimilarity = Function([arguments] -> [conclusions])\n\n# Constraints\nsimilarity(firearms_crime) == no_need_distinguish_firearms ::: The original argument's conclusion\nsimilarity(obesity) == no_need_emphasize_heart_disease ::: (A) Obese people and heart disease\nsimilarity(unchecked_sex) == no_need_emphasize_unchecked_sex ::: (B) Unchecked sex and AIDS\nsimilarity(smoking) == popular_opinion_prejudice ::: (C) Smoking and lung cancer\nsimilarity(income) == no_need_focus_income ::: (D) Income and happiness\n\n# Options\nQuestion ::: The logic loophole in the above argument is most similar to the following one?\nis_similar(similarity(firearms_crime) == similarity(obesity)) ::: (A)\nis_similar(similarity(firearms_crime) == similarity(unchecked_sex)) ::: (B)\nis_similar(similarity(firearms_crime) == similarity(smoking)) ::: (C)\nis_similar(similarity(firearms_crime) == similarity(income)) ::: (D)"
    ]
  },
  {
    "id": 91,
    "context": "Zhang Shan received a higher bonus than Li Si.After learning that Wang Wu's bonus was higher than Miao Xiaoqin, Zhang Shan's bonus was also higher than Miao Xiaoqin.",
    "question": "The following assumptions can make the above inference hold, except",
    "answer": "A",
    "options": [
      "A.Wang Wu's bonus is higher than Li Si's.",
      "B.Li Si's bonus is higher than Miao Xiaoqin's.",
      "C.Li Si's bonus is higher than Wang Wu's.",
      "D.Li Si's bonus is as high as Wang Wu's."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Zhang_Shan, Li_Si, Wang_Wu, Miao_Xiaoqin])\nbonus = Function([people] -> [int])\n\n# Constraints\nbonus(Zhang_Shan) > bonus(Li_Si) ::: Zhang Shan received a higher bonus than Li Si\nbonus(Wang_Wu) > bonus(Miao_Xiaoqin) ::: Wang Wu's bonus was higher than Miao Xiaoqin\nbonus(Zhang_Shan) > bonus(Miao_Xiaoqin) ::: Zhang Shan's bonus was also higher than Miao Xiaoqin\n\n# Options\nQuestion ::: The following assumptions can make the above inference hold, except\nis_exception(is_sat(bonus(Wang_Wu) > bonus(Li_Si))) ::: (A)\nis_exception(is_sat(bonus(Li_Si) > bonus(Miao_Xiaoqin))) ::: (B)\nis_exception(is_sat(bonus(Li_Si) > bonus(Wang_Wu))) ::: (C)\nis_exception(is_sat(bonus(Li_Si) == bonus(Wang_Wu))) ::: (D)"
    ]
  },
  {
    "id": 92,
    "context": "A laboratory has three types of robots, A.B, and C.Type A can recognize colors, type B can recognize shapes, and type C can neither recognize colors nor shapes.The laboratory experimented with robots 1 and 2 with red balls, blue balls, red squares, and blue squares, and ordered them to pick up the red balls, but number 1 picked up the red squares, and number 2 picked up the blue balls.",
    "question": "Based on the above experiment, which of the following must be true?",
    "answer": "D",
    "options": [
      "A.Both No.1 and No.2 are type C.",
      "B.Only one of No.1 and No.2 is C type.",
      "C.No.1 is type A and No.2 is type B.",
      "D.No.1 is not Type B and No.2 is not Type A."
    ],
    "raw_logic_programs": [
      "# Declarations\nrobots = EnumSort([robot1, robot2])\ntypes = EnumSort([typeA, typeB, typeC])\nrecognizes = Function([robots] -> [types])\n\n# Constraints\nrecognizes(robot1) != typeA ::: Robot 1 picked up red squares, so it cannot recognize colors (not type A)\nrecognizes(robot2) != typeB ::: Robot 2 picked up blue balls, so it cannot recognize shapes (not type B)\n\n# Options\nQuestion ::: Based on the above experiment, which of the following must be true?\nis_true(And(recognizes(robot1) == typeC, recognizes(robot2) == typeC)) ::: (A) Both No.1 and No.2 are type C.\nis_true(Xor(recognizes(robot1) == typeC, recognizes(robot2) == typeC)) ::: (B) Only one of No.1 and No.2 is C type.\nis_true(And(recognizes(robot1) == typeA, recognizes(robot2) == typeB)) ::: (C) No.1 is type A and No.2 is type B.\nis_true(And(recognizes(robot1) != typeB, recognizes(robot2) != typeA)) ::: (D) No.1 is not Type B and No.2 is not Type A."
    ]
  },
  {
    "id": 93,
    "context": "Statistics show that in car accidents, the proportion of cars with airbags is higher than that of cars without airbags.Therefore, installing an airbag in a car does not make the car owner safer.",
    "question": "Which of the following most appropriately points out the loophole of the above argument?",
    "answer": "D",
    "options": [
      "A.Assume without explanation? Any car equipped with airbags may experience a car accident.",
      "B.Ignore this possibility? Owners without airbags pay more attention to driving cautiously.",
      "C.Improper assumption? In any car accident, the airbag will automatically open.",
      "D.Improperly equate the possibility of a car accident with the seriousness of the car owner 's injury in the accident."
    ],
    "raw_logic_programs": [
      "# Declarations\ncars = EnumSort([with_airbags, without_airbags])\naccidents = EnumSort([involved, not_involved])\nsafety = EnumSort([safer, not_safer])\nequipped = Function([cars] -> [accidents])\nowner_safety = Function([cars] -> [safety])\n\n# Constraints\nForAll([c:cars], equipped(c) == involved) ::: The proportion of cars with airbags involved in accidents is higher than those without airbags\n\n# Options\nQuestion ::: Which of the following most appropriately points out the loophole of the above argument?\nis_valid(Exists([c:cars], And(equipped(c) == involved, owner_safety(c) == safer))) ::: (A) Assume without explanation? Any car equipped with airbags may experience a car accident.\nis_valid(Exists([c:cars], And(equipped(c) == not_involved, owner_safety(c) == safer))) ::: (B) Ignore this possibility? Owners without airbags pay more attention to driving cautiously.\nis_valid(Exists([c:cars], And(equipped(c) == involved, owner_safety(c) == not_safer))) ::: (C) Improper assumption? In any car accident, the airbag will automatically open.\nis_valid(Exists([c:cars], And(equipped(c) == involved, owner_safety(c) == not_safer))) ::: (D) Improperly equate the possibility of a car accident with the seriousness of the car owner's injury in the accident."
    ]
  },
  {
    "id": 94,
    "context": "Some good goods are not cheap.Therefore, not all good goods are good goods.'",
    "question": "An analogy with which of the following inferences shows that the above inferences are not true?",
    "answer": "D",
    "options": [
      "A.People in Hunan don't like chili.Therefore, some people who love chili are not Hunanese.",
      "B.Some people are not selfish.Therefore, people are not all selfish.",
      "C.A good motivation does not necessarily have a good effect.Therefore, good effects do not necessarily result from good motivation.",
      "D.Some southerners are not Cantonese.Therefore, not all Cantonese are Southerners."
    ],
    "raw_logic_programs": [
      "# Declarations\ngoods = EnumSort([good_goods, cheap_goods])\nproperties = EnumSort([good, cheap])\nhas_property = Function([goods, properties] -> [bool])\n\n# Constraints\nExists([g:goods], And(has_property(g, good), Not(has_property(g, cheap)))) ::: Some good goods are not cheap\n\n# Options\nQuestion ::: An analogy with which of the following inferences shows that the above inferences are not true?\nis_analogy(Exists([p:people], And(Not(likes_chili(p)), Not(hunanese(p))))) ::: (A)\nis_analogy(Exists([p:people], And(Not(selfish(p)), Not(all_selfish(p))))) ::: (B)\nis_analogy(Exists([m:motivations], And(Not(good_effect(m)), Not(good_motivation(m))))) ::: (C)\nis_analogy(Exists([s:southerners], And(Not(cantonese(s)), Not(all_cantonese(s))))) ::: (D)"
    ]
  },
  {
    "id": 95,
    "context": "A school classifies students' academic performance into four grades of excellent, good, middle and poor by grade level.In a school year, the top 10% of the total score of each exam is excellent; the latter 30% is poor, and the rest are good and medium.In the previous school year, more students with excellent grades in the second grade were more than those with excellent grades in the first grade.",
    "question": "If the above determination is true, which of the following must be true?",
    "answer": "B",
    "options": [
      "A.Students with poor grades in the second grade are less than those with poor grades in the first grade.",
      "B.There are more students with poor grades in the second grade than those with poor grades in the first grade.",
      "C.There are more students with good grades in the second grade than those with good grades in the first grade.",
      "D.The students with good grades in the second grade are less than those with good grades in the first grade."
    ],
    "raw_logic_programs": [
      "# Declarations\ngrades = EnumSort([excellent, good, middle, poor])\ngrades_distribution = Function([int, grades] -> [int])  # Maps grade level and grade to the number of students\n\n# Constraints\nForAll([level:int], grades_distribution(level, excellent) > grades_distribution(level, poor)) ::: The top 10% is excellent, the latter 30% is poor, and the rest are good and middle\ngrades_distribution(2, excellent) > grades_distribution(1, excellent) ::: More students with excellent grades in the second grade than in the first grade\n\n# Options\nQuestion ::: If the above determination is true, which of the following must be true?\nis_must_true(grades_distribution(2, poor) < grades_distribution(1, poor)) ::: (A)\nis_must_true(grades_distribution(2, poor) > grades_distribution(1, poor)) ::: (B)\nis_must_true(grades_distribution(2, good) > grades_distribution(1, good)) ::: (C)\nis_must_true(grades_distribution(2, good) < grades_distribution(1, good)) ::: (D)"
    ]
  },
  {
    "id": 96,
    "context": "There are 90 patients, all suffering from refractory disease T, who have taken the same conventional drugs.These patients were divided into two groups of equal numbers.The first group took W, an experimental drug used to treat T, and the second group took placebo without W.Statistics after 10 years show that 44 deaths occurred in both groups.Therefore, this test drug is ineffective.",
    "question": "Which of the following, if true, would most weaken the above argument?",
    "answer": "A",
    "options": [
      "A.Among the patients who died above, the average year of death of the second group was two years earlier than the first group.",
      "B.Among the patients who died, the average life span of the second group was two years shorter than that of the first group.",
      "C.Among the above living patients, the second group is more severely ill than the first group.",
      "D.Among the above living patients, the second group is older than the first group."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([group1, group2])\noutcomes = EnumSort([alive, dead])\nyears = IntSort()\nlifespan = Function([patients, outcomes] -> [years])\nseverity = Function([patients, outcomes] -> [int])\nage = Function([patients, outcomes] -> [years])\n\n# Constraints\nCount([p:patients], outcomes(p) == dead) == 44 ::: 44 deaths occurred in both groups\nCount([p:patients], outcomes(p) == alive) == 46 ::: Remaining patients are alive\n\n# Options\nQuestion ::: Which of the following, if true, would most weaken the above argument?\nis_weaken(ForAll([p:patients], lifespan(group2, dead) < lifespan(group1, dead))) ::: (A) Among the patients who died above, the average year of death of the second group was two years earlier than the first group.\nis_weaken(ForAll([p:patients], lifespan(group2, dead) < lifespan(group1, dead))) ::: (B) Among the patients who died, the average life span of the second group was two years shorter than that of the first group.\nis_weaken(ForAll([p:patients], severity(group2, alive) > severity(group1, alive))) ::: (C) Among the above living patients, the second group is more severely ill than the first group.\nis_weaken(ForAll([p:patients], age(group2, alive) > age(group1, alive))) ::: (D) Among the above living patients, the second group is older than the first group."
    ]
  },
  {
    "id": 97,
    "context": "Kobayashi was refused to enter the deep pool because he did not wear a swimming cap.Kobayashi showed the deep water certificate? According to regulations, I can enter the deep pool.The regulations of the swimming pool are? those who do not wear swimming caps are not allowed to enter the swimming pool; only those with a deep water certificate can enter the deep pool.",
    "question": "Kobayashi is most likely to understand the rules of swimming as?",
    "answer": "C",
    "options": [
      "A.You cannot enter the deep pool unless you have a deep water certificate.",
      "B.Only those who hold a deep water certificate need not wear a swimming cap.",
      "C.If you have a deep water certificate, you can enter the deep pool.",
      "D.Those who are allowed to enter the swimming pool may not be allowed to enter the deep pool."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Kobayashi])\npools = EnumSort([swimming_pool, deep_pool])\nrequirements = EnumSort([swimming_cap, deep_water_certificate])\nhas_requirement = Function([people, requirements] -> [bool])\ncan_enter = Function([people, pools] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(Not(has_requirement(p, swimming_cap)), Not(can_enter(p, swimming_pool)))) ::: those who do not wear swimming caps are not allowed to enter the swimming pool\nForAll([p:people], Implies(Not(has_requirement(p, deep_water_certificate)), Not(can_enter(p, deep_pool)))) ::: only those with a deep water certificate can enter the deep pool\n\n# Options\nQuestion ::: Kobayashi is most likely to understand the rules of swimming as?\nis_likely_understood(Implies(Not(has_requirement(Kobayashi, deep_water_certificate)), Not(can_enter(Kobayashi, deep_pool)))) ::: (A)\nis_likely_understood(Implies(has_requirement(Kobayashi, deep_water_certificate), Not(has_requirement(Kobayashi, swimming_cap)))) ::: (B)\nis_likely_understood(Implies(has_requirement(Kobayashi, deep_water_certificate), can_enter(Kobayashi, deep_pool))) ::: (C)\nis_likely_understood(Implies(can_enter(Kobayashi, swimming_pool), Not(can_enter(Kobayashi, deep_pool)))) ::: (D)"
    ]
  },
  {
    "id": 98,
    "context": "The number of crocodiles in the North Atlantic Ocean has declined sharply, but the number of seals has increased significantly at almost the same time.Some people say that it is the seal that caused the reduction of crocodiles.This argument is difficult to establish because seals rarely feed on crocodiles.",
    "question": "Which of the following, if true, would most weaken the above argument?",
    "answer": "D",
    "options": [
      "A.Seawater pollution causes more damage to crocodiles than seals.",
      "B.Despite the sharp decrease in the number of crocodiles and the increase in the number of seals, there are still fewer seals in the North Atlantic Ocean than crocodiles.",
      "C.Before the number of seals increased, the number of crocodiles in the North Atlantic Ocean decreased.",
      "D.Crocodiles only eat capelin, and capelin is also the main food for seals."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([crocodiles, seals])\nevents = EnumSort([decline, increase])\ncauses = EnumSort([pollution, predation, food_competition])\ntime = EnumSort([before, after])\n\n# Constraints\nevent_occurrence = Function([species, events, time] -> [bool])\ncause_effect = Function([causes, species] -> [bool])\n\nevent_occurrence(crocodiles, decline, after) ::: The number of crocodiles in the North Atlantic Ocean has declined sharply\nevent_occurrence(seals, increase, after) ::: The number of seals has increased significantly at almost the same time\nNot(cause_effect(predation, crocodiles)) ::: Seals rarely feed on crocodiles\n\n# Options\nQuestion ::: Which of the following, if true, would most weaken the above argument?\nis_weakened(cause_effect(pollution, crocodiles) > cause_effect(pollution, seals)) ::: (A)\nis_weakened(And(event_occurrence(crocodiles, decline, after), event_occurrence(seals, increase, after), Count([species], event_occurrence(species, increase, after)) < Count([species], event_occurrence(species, decline, after)))) ::: (B)\nis_weakened(event_occurrence(crocodiles, decline, before)) ::: (C)\nis_weakened(And(cause_effect(food_competition, crocodiles), cause_effect(food_competition, seals))) ::: (D)"
    ]
  },
  {
    "id": 99,
    "context": "No one can make mistakes, and everyone may make serious mistakes.",
    "question": "If the above determination is true, which of the following must be true?",
    "answer": "C",
    "options": [
      "A.Everyone may make mistakes, but some people may not make serious mistakes.",
      "B.Everyone may make mistakes, but all people may not make serious mistakes.",
      "C.Everyone will make mistakes, but some people may not make serious mistakes.",
      "D.Everyone will make mistakes, but all people may not make serious mistakes."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Person])\nmistakes = EnumSort([mistake, serious_mistake])\ncan_make = Function([people, mistakes] -> [bool])\n\n# Constraints\nForAll([p:people], Not(can_make(p, mistake))) ::: No one can make mistakes\nForAll([p:people], can_make(p, serious_mistake)) ::: Everyone may make serious mistakes\n\n# Options\nQuestion ::: If the above determination is true, which of the following must be true?\nis_true(ForAll([p:people], And(can_make(p, mistake), Not(can_make(p, serious_mistake))))) ::: (A)\nis_true(ForAll([p:people], And(can_make(p, mistake), Not(ForAll([p:people], can_make(p, serious_mistake))))) ::: (B)\nis_true(ForAll([p:people], And(Not(can_make(p, mistake)), Not(can_make(p, serious_mistake))))) ::: (C)\nis_true(ForAll([p:people], And(Not(can_make(p, mistake)), Not(ForAll([p:people], can_make(p, serious_mistake))))) ::: (D)"
    ]
  },
  {
    "id": 100,
    "context": "A company has six general manager assistants F, G, H, I, M and P, and three departments, each of which is in charge of three general manager assistants.Each assistant general manager is in charge of at least one department.The following conditions must be met? (1) There is only one assistant to the general manager in charge of three departments at the same time.(2) F and G are not in charge of the same department.(3) H and I are not in charge of the same department.",
    "question": "Which of the following must be true?",
    "answer": "A",
    "options": [
      "A.Some assistants to the general manager are in charge of the two departments.",
      "B.Any department is in charge of F or G.",
      "C.M and P are in charge of only one department.",
      "D.No department is in charge of F, M and P."
    ],
    "raw_logic_programs": [
      "# Declarations\nassistants = EnumSort([F, G, H, I, M, P])\ndepartments = EnumSort([D1, D2, D3])\nin_charge = Function([assistants, departments] -> [bool])\n\n# Constraints\nExists([a:assistants], Count([d:departments], in_charge(a, d)) == 3) ::: There is only one assistant to the general manager in charge of three departments at the same time\nForAll([d:departments], Not(And(in_charge(F, d), in_charge(G, d)))) ::: F and G are not in charge of the same department\nForAll([d:departments], Not(And(in_charge(H, d), in_charge(I, d)))) ::: H and I are not in charge of the same department\nForAll([a:assistants], Count([d:departments], in_charge(a, d)) >= 1) ::: Each assistant general manager is in charge of at least one department\n\n# Options\nQuestion ::: Which of the following must be true?\nis_must_true(Exists([a:assistants], Count([d:departments], in_charge(a, d)) == 2)) ::: (A) Some assistants to the general manager are in charge of the two departments\nis_must_true(ForAll([d:departments], Or(in_charge(F, d), in_charge(G, d)))) ::: (B) Any department is in charge of F or G\nis_must_true(And(Count([d:departments], in_charge(M, d)) == 1, Count([d:departments], in_charge(P, d)) == 1)) ::: (C) M and P are in charge of only one department\nis_must_true(Not(Exists([d:departments], And(in_charge(F, d), in_charge(M, d), in_charge(P, d))))) ::: (D) No department is in charge of F, M and P"
    ]
  },
  {
    "id": 101,
    "context": "A company has six general manager assistants F, G, H, I, M and P, and three departments, each of which is in charge of three general manager assistants.Each assistant general manager is in charge of at least one department.The following conditions must be met? (1) There is only one assistant to the general manager in charge of three departments at the same time.(2) F and G are not in charge of the same department.(3) H and I are not in charge of the same department.",
    "question": "If F and M are not in charge of the same department, which of the following must be true?",
    "answer": "C",
    "options": [
      "A.F and H are in charge of the same department.",
      "B.F and I are in charge of the same department.",
      "C.I and P are in charge of the same department.",
      "D.M and G are in charge of the same department."
    ],
    "raw_logic_programs": [
      "# Declarations\nassistants = EnumSort([F, G, H, I, M, P])\ndepartments = EnumSort([D1, D2, D3])\nin_charge = Function([assistants, departments] -> [bool])\n\n# Constraints\nExists([a:assistants], Count([d:departments], in_charge(a, d)) == 3) ::: There is only one assistant to the general manager in charge of three departments at the same time\nForAll([a:assistants], Count([d:departments], in_charge(a, d)) >= 1) ::: Each assistant general manager is in charge of at least one department\nForAll([d:departments], Not(And(in_charge(F, d), in_charge(G, d)))) ::: F and G are not in charge of the same department\nForAll([d:departments], Not(And(in_charge(H, d), in_charge(I, d)))) ::: H and I are not in charge of the same department\n\n# Additional Constraint\nForAll([d:departments], Not(And(in_charge(F, d), in_charge(M, d)))) ::: F and M are not in charge of the same department\n\n# Options\nQuestion ::: If F and M are not in charge of the same department, which of the following must be true?\nis_must_true(Exists([d:departments], And(in_charge(F, d), in_charge(H, d)))) ::: (A)\nis_must_true(Exists([d:departments], And(in_charge(F, d), in_charge(I, d)))) ::: (B)\nis_must_true(Exists([d:departments], And(in_charge(I, d), in_charge(P, d)))) ::: (C)\nis_must_true(Exists([d:departments], And(in_charge(M, d), in_charge(G, d)))) ::: (D)"
    ]
  },
  {
    "id": 102,
    "context": "Ancient Greek philosophers said that life without reflection is worthless.",
    "question": "Which of the following options is the closest to the meaning of this maxim?",
    "answer": "C",
    "options": [
      "A.Only after introspection can life be of value.",
      "B.To be valuable in life, we must reflect on it from time to time.",
      "C.I'm confused for a lifetime.",
      "D.People should live to understand."
    ],
    "raw_logic_programs": [
      "# Declarations\nphilosophers = EnumSort([Ancient_Greek])\nconcepts = EnumSort([life, reflection, worth])\nstatements = Function([philosophers, concepts] -> [bool])\n\n# Constraints\nstatements(Ancient_Greek, life) == True ::: Ancient Greek philosophers said that life is a subject of discussion\nstatements(Ancient_Greek, reflection) == True ::: Ancient Greek philosophers said that reflection is a subject of discussion\nstatements(Ancient_Greek, worth) == True ::: Ancient Greek philosophers said that worth is a subject of discussion\nstatements(Ancient_Greek, life) == statements(Ancient_Greek, reflection) == statements(Ancient_Greek, worth) ::: life without reflection is worthless\n\n# Options\nQuestion ::: Which of the following options is the closest to the meaning of this maxim?\nis_closest(And(statements(Ancient_Greek, life), statements(Ancient_Greek, reflection), statements(Ancient_Greek, worth))) ::: (A)\nis_closest(And(statements(Ancient_Greek, life), statements(Ancient_Greek, reflection))) ::: (B)\nis_closest(Not(statements(Ancient_Greek, life))) ::: (C)\nis_closest(statements(Ancient_Greek, life)) ::: (D)"
    ]
  },
  {
    "id": 103,
    "context": "People's daily thinking and actions, even if they are extremely small, contain conscious active behaviors and some kind of creativity, and all the behaviors of computers are controlled by pre-programmed programs, so it is impossible for computers to own people The initiative and creativity.",
    "question": "Which of the following supplements will most strongly support the reasoning in the question stem?",
    "answer": "B",
    "options": [
      "A.The computer can have the learning function like a human.",
      "B.Computer programs cannot simulate human initiative and creativity.",
      "C.In the future society, it is difficult to say whether people control computers or control computers.",
      "D.People can compile computer programs that simulate human initiative and creativity."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([people, computers])\nattributes = EnumSort([initiative, creativity])\nhas_attribute = Function([entities, attributes] -> [bool])\n\n# Constraints\nForAll([e:entities], Or(e == people, e == computers)) ::: People's daily thinking and actions contain conscious active behaviors and some kind of creativity\nForAll([a:attributes], has_attribute(people, a)) ::: People have initiative and creativity\nForAll([a:attributes], Not(has_attribute(computers, a))) ::: Computers do not have initiative and creativity\n\n# Options\nQuestion ::: Which of the following supplements will most strongly support the reasoning in the question stem?\nis_strong_support(Not(Exists([a:attributes], has_attribute(computers, a)))) ::: (A)\nis_strong_support(ForAll([a:attributes], Not(has_attribute(computers, a)))) ::: (B)\nis_strong_support(Exists([e:entities], Or(e == people, e == computers))) ::: (C)\nis_strong_support(Exists([a:attributes], has_attribute(computers, a))) ::: (D)"
    ]
  },
  {
    "id": 104,
    "context": "Plants must first bloom before they can produce seeds.There are two types of tarragon-Russian tarragon and French tarragon.They look very similar.Russian tarragon blooms and French tarragon does not bloom, but the leaves of Russian tarragon But there is no unique flavor that makes French tarragon an ideal condiment.",
    "question": "Which of the following conclusions can be deduced from the above discussion?",
    "answer": "C",
    "options": [
      "A.As an ornamental plant, French tarragon is more popular than Russian tarragon.",
      "B.The flower of Russian tarragon may not have fragrance.",
      "C.The plant grown from tarragon seeds is not French tarragon.",
      "D.Apart from Russian tarragon and French tarragon, there are no other types of tarragon."
    ],
    "raw_logic_programs": [
      "# Declarations\ntarragon_types = EnumSort([Russian, French])\nproperties = EnumSort([blooms, produces_seeds, has_unique_flavor])\nhas_property = Function([tarragon_types, properties] -> [bool])\n\n# Constraints\nhas_property(Russian, blooms) ::: Russian tarragon blooms\nNot(has_property(French, blooms)) ::: French tarragon does not bloom\nForAll([t:tarragon_types], Implies(has_property(t, blooms), has_property(t, produces_seeds))) ::: Plants must first bloom before they can produce seeds\nhas_property(French, has_unique_flavor) ::: French tarragon has a unique flavor\n\n# Options\nQuestion ::: Which of the following conclusions can be deduced from the above discussion?\nis_deduced(has_property(Russian, blooms) & Not(has_property(French, blooms))) ::: (A)\nis_deduced(Exists([t:tarragon_types], Not(has_property(t, has_unique_flavor)))) ::: (B)\nis_deduced(Not(has_property(French, produces_seeds))) ::: (C)\nis_deduced(ForAll([t:tarragon_types], Or(t == Russian, t == French))) ::: (D)"
    ]
  },
  {
    "id": 105,
    "context": "Some Taiwan independence elements argue that all people under the jurisdiction of the People 's Republic of China are Chinese, and Taiwanese are not under the jurisdiction of the People 's Republic of China.Therefore, Taiwanese are not Chinese.",
    "question": "Which of the following reasoning clearly shows that the above argument is not valid?",
    "answer": "A",
    "options": [
      "A.All successful people have to eat in clothes.I am not a successful person now, so I do n't have to eat in clothes.",
      "B.Commodities have use value, and air certainly has use value, so air is of course a commodity.",
      "C.All technical backbones study hard.Xiao Zhang is a technical backbone.Therefore, Xiao Zhang is a hard-working person.",
      "D.Criminal behaviors are illegal behaviors, and violations should be condemned by the society, so all criminal behaviors should be condemned by the society."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([people_under_PR, Taiwanese, Chinese])\njurisdiction = Function([entities] -> [bool])\nidentity = Function([entities] -> [bool])\n\n# Constraints\nForAll([e:entities], Implies(jurisdiction(e), identity(e))) ::: All people under the jurisdiction of the People's Republic of China are Chinese\nNot(jurisdiction(Taiwanese)) ::: Taiwanese are not under the jurisdiction of the People's Republic of China\n\n# Options\nQuestion ::: Which of the following reasoning clearly shows that the above argument is not valid?\nis_invalid(Implies(Not(identity(Taiwanese)), Not(jurisdiction(Taiwanese)))) ::: (A)\nis_invalid(Implies(And(identity(Chinese), identity(air)), identity(commodity))) ::: (B)\nis_invalid(Implies(And(identity(technical_backbone), identity(Xiao_Zhang)), identity(hard_working))) ::: (C)\nis_invalid(Implies(And(identity(criminal_behavior), identity(illegal_behavior)), identity(condemned_by_society))) ::: (D)"
    ]
  },
  {
    "id": 106,
    "context": "A doctor takes a capsule made of lycopene extracted from tomatoes to a group of prostate cancer patients awaiting surgery, 15 mg twice a day.Three weeks later, the tumors of this group of patients were significantly reduced, and some were almost eliminated.The doctor speculated that lycopene has the effect of reducing prostate tumors.",
    "question": "Which of the following, if true, best supports the doctor 's conclusion?",
    "answer": "C",
    "options": [
      "A.The age of prostate cancer patients taking lycopene is between 45-65 years old.",
      "B.A few of the prostate cancer patients taking lycopene are in serious condition.",
      "C.There is a similar group of patients with prostate tumors awaiting surgery.They did not take lycopene capsules, and their tumors did not shrink.",
      "D.Lycopene exists not only in tomatoes, but also in fruits such as watermelons and grapes."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([group_with_lycopene, group_without_lycopene])\ntumor_size = Function([patients] -> [int])\n\n# Constraints\ntumor_size(group_with_lycopene) < initial_tumor_size ::: The tumors of the group taking lycopene were significantly reduced\ntumor_size(group_without_lycopene) == initial_tumor_size ::: The tumors of the group not taking lycopene did not shrink\n\n# Options\nQuestion ::: Which of the following, if true, best supports the doctor's conclusion?\nis_supportive(tumor_size(group_with_lycopene) < tumor_size(group_without_lycopene)) ::: (C) There is a similar group of patients with prostate tumors awaiting surgery. They did not take lycopene capsules, and their tumors did not shrink."
    ]
  },
  {
    "id": 107,
    "context": "A heating station has 5 valves to control the delivery of steam to the outside.The following operating rules must be followed when using these valves? (1) If valve No.1 is opened, then valve No.2 must be opened and valve No.5 must be closed.(2) If valve No.2 or valve No.5 is opened, valve No.4 must be closed.(3) No.3 valve and No.4 valve cannot be closed at the same time.",
    "question": "Now we need to open the No.1 valve, which two valves are to be opened at the same time?",
    "answer": "B",
    "options": [
      "A.No.2 valve and No.4 valve.",
      "C.No.3 valve and No.5 valve.",
      "B.No.2 valve and No.3 valve.",
      "D.No.4 valve and No.5 valve."
    ],
    "raw_logic_programs": [
      "# Declarations\nvalves = EnumSort([1, 2, 3, 4, 5])\nopened = Function([valves] -> [bool])\n\n# Constraints\nImplies(opened(1), And(opened(2), Not(opened(5)))) ::: If valve No.1 is opened, then valve No.2 must be opened and valve No.5 must be closed\nForAll([v:valves], Implies(Or(opened(2), opened(5)), Not(opened(4)))) ::: If valve No.2 or valve No.5 is opened, valve No.4 must be closed\nNot(And(Not(opened(3)), Not(opened(4)))) ::: No.3 valve and No.4 valve cannot be closed at the same time\n\n# Options\nQuestion ::: Now we need to open the No.1 valve, which two valves are to be opened at the same time?\nis_sat(And(opened(2), opened(4))) ::: (A)\nis_sat(And(opened(2), opened(3))) ::: (B)\nis_sat(And(opened(3), opened(5))) ::: (C)\nis_sat(And(opened(4), opened(5))) ::: (D)"
    ]
  },
  {
    "id": 108,
    "context": "Since 1997, Hong Kong has fallen into a severe economic recession; it was this year that Hong Kong began to implement 'one country, two systems.' Some claim that 'one country, two systems' caused Hong Kong's economic recession.",
    "question": "Which of the following questions is most relevant for refuting the above reasoning?",
    "answer": "A",
    "options": [
      "A.If two things happen at the same time or one after another, can we be sure that there is a causal relationship between them?",
      "B.Why did Taiwan, Singapore, South Korea, and the United States also experience economic recession during this period?",
      "C.Why the economy of mainland China is booming.",
      "D.Why was the economic situation of the United Kingdom, which used to regulate Hong Kong, bad during this period?"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([economic_recession, one_country_two_systems])\nlocations = EnumSort([Hong_Kong, Taiwan, Singapore, South_Korea, United_States, China, United_Kingdom])\ncausal_relationship = Function([events, locations] -> [bool])\n\n# Constraints\ncausal_relationship(one_country_two_systems, Hong_Kong) ::: Some claim that 'one country, two systems' caused Hong Kong's economic recession\n\n# Options\nQuestion ::: Which of the following questions is most relevant for refuting the above reasoning?\nis_relevant(And(Exists([e1:events, e2:events], e1 != e2), Not(causal_relationship(economic_recession, Hong_Kong)))) ::: (A)\nis_relevant(And(Exists([l:locations], l != Hong_Kong), causal_relationship(economic_recession, l))) ::: (B)\nis_relevant(causal_relationship(economic_recession, China)) ::: (C)\nis_relevant(causal_relationship(economic_recession, United_Kingdom)) ::: (D)"
    ]
  },
  {
    "id": 109,
    "context": "According to some general principles of human nature, people in social life, no matter how high their status or education, their behavior always changes with the environment.There are both good and evil aspects in human nature.Everyone actually has a self-interested complex or tendency, and they are called 'rational economic men.'",
    "question": "Which of the following options is not the implied meaning or conclusion that can be derived?",
    "answer": "D",
    "options": [
      "A.When a person provides a role or service to society, it is impossible not to consider his own economic interests.",
      "B.Once they have public power, some people are very likely to use 'power rent-seeking' and engage in power and money transactions.",
      "C.Some institutional factors should be designed to restrict the behavior of government officials.",
      "D.The management of government officials should mainly depend on raising their awareness of self-discipline."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([good_aspects, evil_aspects, self_interested_complex])\nbehaviors = EnumSort([role_service, power_rent_seeking, institutional_restriction, self_discipline_awareness])\nimplied_meaning = Function([principles] -> [behaviors])\n\n# Constraints\nForAll([p:principles], Exists([b:behaviors], implied_meaning(p) == b)) ::: Each principle has an implied meaning or conclusion\n\n# Options\nQuestion ::: Which of the following options is not the implied meaning or conclusion that can be derived?\nis_not_implied(implied_meaning(self_interested_complex) == role_service) ::: (A)\nis_not_implied(implied_meaning(evil_aspects) == power_rent_seeking) ::: (B)\nis_not_implied(implied_meaning(evil_aspects) == institutional_restriction) ::: (C)\nis_not_implied(implied_meaning(good_aspects) == self_discipline_awareness) ::: (D)"
    ]
  },
  {
    "id": 110,
    "context": "On the last day of military training, a class of students fired live ammunition.Several instructors talked about the shooting results of a class.Instructor Zhang said? 'This time the military training time is too short, no one in this class will have excellent shooting results.' Instructor Sun said? 'No, several people have trained before, and their shooting performance will be excellent.' The instructor said? 'I think the monitor or the sports commissioner can achieve excellent results.'",
    "question": "It turned out that only one of the three instructors was right.Which one of the following must be true?",
    "answer": "D",
    "options": [
      "A.The shooting performance of everyone in the class is not excellent.",
      "B.Someone in the class has excellent shooting performance.",
      "C.The squad leader's shooting performance is excellent.",
      "D.The shooting performance of the Sports Committee is not excellent."
    ],
    "raw_logic_programs": [
      "# Declarations\ninstructors = EnumSort([Zhang, Sun, Instructor])\nstudents = EnumSort([everyone, several, monitor, sports_commissioner])\nperformance = Function([students] -> [bool])\n\n# Constraints\n# Zhang's statement: \"No one in this class will have excellent shooting results.\"\nForAll([s:students], Not(performance(s))) ::: Zhang's statement\n\n# Sun's statement: \"Several people have trained before, and their shooting performance will be excellent.\"\nExists([s:students], performance(s)) ::: Sun's statement\n\n# Instructor's statement: \"The monitor or the sports commissioner can achieve excellent results.\"\nOr(performance(monitor), performance(sports_commissioner)) ::: Instructor's statement\n\n# Only one of the three instructors was right\nCount([i:instructors], is_correct(i)) == 1 ::: Only one instructor is correct\n\n# Options\nQuestion ::: Which one of the following must be true?\nis_must_true(Not(performance(everyone))) ::: (A)\nis_must_true(Exists([s:students], performance(s))) ::: (B)\nis_must_true(performance(monitor)) ::: (C)\nis_must_true(Not(performance(sports_commissioner))) ::: (D)"
    ]
  },
  {
    "id": 111,
    "context": "There is an authoritative public opinion polling agency that investigates the causes of the terrorist attacks on September 11, and found that 40% of the people believed that they were caused by unfair foreign policy of the United States, and 55% It is believed that it is due to the conflict between Islamic civilization and Western civilization.23% of people believe that it is due to the evil nature of terrorists, and 19% of them did not express their views.",
    "question": "Which of the following best explains the contradictory statement above?",
    "answer": "C",
    "options": [
      "A.The sampling of the survey sample is not random and therefore not representative.",
      "B.Some respondents later changed their views.",
      "C.Many investigators believe that the causes of the 'September 11' terrorist attacks were not single but compound.",
      "D.There are technical errors in the calculation of the investigation results."
    ],
    "raw_logic_programs": [
      "# Declarations\nbeliefs = EnumSort([unfair_foreign_policy, conflict_civilizations, evil_nature_terrorists, no_opinion])\npercentages = Function([beliefs] -> [int])\n\n# Constraints\npercentages(unfair_foreign_policy) == 40 ::: 40% of the people believed that they were caused by unfair foreign policy of the United States\npercentages(conflict_civilizations) == 55 ::: 55% believed that it is due to the conflict between Islamic civilization and Western civilization\npercentages(evil_nature_terrorists) == 23 ::: 23% of people believe that it is due to the evil nature of terrorists\npercentages(no_opinion) == 19 ::: 19% of them did not express their views\n\n# Options\nQuestion ::: Which of the following best explains the contradictory statement above?\nis_best_explanation(Exists([b1:beliefs, b2:beliefs], And(b1 != b2, percentages(b1) + percentages(b2) > 100))) ::: (A)\nis_best_explanation(Exists([b:beliefs], percentages(b) < 0)) ::: (B)\nis_best_explanation(Exists([b1:beliefs, b2:beliefs, b3:beliefs], And(b1 != b2, b2 != b3, b1 != b3, percentages(b1) + percentages(b2) + percentages(b3) > 100))) ::: (C)\nis_best_explanation(Exists([b:beliefs], percentages(b) > 100)) ::: (D)"
    ]
  },
  {
    "id": 112,
    "context": "A solid wood flooring seller solemnly promised in his contract text? 'The flooring sold in this shop is definitely made of wood; it is responsible for free installation, except for the cost of materials required for installation; free warranty for one year, but not the fault of the company Except for the losses caused.If there is fraud, the company is willing to bear legal responsibility and pay more than 1,000 times the compensation.The company reserves the right to interpret this contract.'",
    "question": "Which of the following options is a correct evaluation of the company and its contract?",
    "answer": "B",
    "options": [
      "A.The company must be very honest because it promises to pay more than 1,000 times in compensation if fraud is discovered.",
      "B.The company's contract actually has no binding force on its behavior.",
      "C.The floors sold by the company must be real solid wood floors.",
      "D.From the customer's perspective, the company's contract terms are acceptable."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompany = EnumSort([honest, binding, real_wood, acceptable])\ncontract = Function([company] -> [bool])\n\n# Constraints\ncontract(honest) == Implies(fraud_discovered, compensation > 1000) ::: The company promises to pay more than 1,000 times in compensation if fraud is discovered\ncontract(binding) == False ::: The company's contract actually has no binding force on its behavior\ncontract(real_wood) == True ::: The floors sold by the company must be real solid wood floors\ncontract(acceptable) == True ::: From the customer's perspective, the company's contract terms are acceptable\n\n# Options\nQuestion ::: Which of the following options is a correct evaluation of the company and its contract?\nis_correct(contract(honest)) ::: (A)\nis_correct(contract(binding)) ::: (B)\nis_correct(contract(real_wood)) ::: (C)\nis_correct(contract(acceptable)) ::: (D)"
    ]
  },
  {
    "id": 113,
    "context": "The people in Harbin are all northerners, and some people in Harbin are not workers.",
    "question": "If the above proposition is true, then which of the following must be true?",
    "answer": "B",
    "options": [
      "A.Some northerners are workers.",
      "C.Some workers are Northerners.",
      "B.Some northerners are not workers.",
      "D.Some workers are not Northerners."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([northerners, workers, harbin_people])\nis_northerner = Function([people] -> [bool])\nis_worker = Function([people] -> [bool])\nis_harbin_person = Function([people] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(is_harbin_person(p), is_northerner(p))) ::: The people in Harbin are all northerners\nExists([p:people], And(is_harbin_person(p), Not(is_worker(p)))) ::: Some people in Harbin are not workers\n\n# Options\nQuestion ::: If the above proposition is true, then which of the following must be true?\nis_must_true(Exists([p:people], And(is_northerner(p), is_worker(p)))) ::: (A) Some northerners are workers.\nis_must_true(Exists([p:people], And(is_worker(p), is_northerner(p)))) ::: (C) Some workers are Northerners.\nis_must_true(Exists([p:people], And(is_northerner(p), Not(is_worker(p))))) ::: (B) Some northerners are not workers.\nis_must_true(Exists([p:people], And(is_worker(p), Not(is_northerner(p))))) ::: (D) Some workers are not Northerners."
    ]
  },
  {
    "id": 114,
    "context": "In an experiment, a doctoral student and a robot independently answered a set of questions through a computer, and a group of scientists then identified which answers on the computer screen were made by the doctoral student and which answers were made by the robot Yes, and the error rate of the identification result is as high as 78%.Some people think that the set of questions posed in the experiment is definitely insufficient, since they cannot make a group of scientists distinguish the doctoral student from the robot.",
    "question": "These people's suspicions are based on which of the following unstated premises?",
    "answer": "D",
    "options": [
      "A.Some robots are able to play games with chess masters.",
      "B.The doctoral student is a master of Go.",
      "C.That robot is IBM's latest generation product.",
      "D.There was a considerable difference between the doctoral student and the robot."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([doctoral_student, robot])\nquestions = EnumSort([q1, q2, q3, ..., qn])\nanswers = Function([entities, questions] -> [str])\nidentified = Function([questions] -> [entities])\nerror_rate = Function() -> [int]\n\n# Constraints\nForAll([q:questions], Or(identified(q) == doctoral_student, identified(q) == robot)) ::: Scientists identified each answer as either from the doctoral student or the robot\nerror_rate() == 78 ::: The error rate of the identification result is as high as 78%\n\n# Options\nQuestion ::: These people's suspicions are based on which of the following unstated premises?\nis_unstated_premise(Exists([q:questions], answers(doctoral_student, q) != answers(robot, q))) ::: (A) Some robots are able to play games with chess masters.\nis_unstated_premise(Exists([q:questions], answers(doctoral_student, q) == \"Go master\")) ::: (B) The doctoral student is a master of Go.\nis_unstated_premise(Exists([q:questions], answers(robot, q) == \"IBM's latest generation product\")) ::: (C) That robot is IBM's latest generation product.\nis_unstated_premise(Exists([q:questions], answers(doctoral_student, q) != answers(robot, q))) ::: (D) There was a considerable difference between the doctoral student and the robot."
    ]
  },
  {
    "id": 115,
    "context": "Prince Lima in Li Na's mind is tall, handsome and doctor.She knew four men, Wang Wei, Wu Gang, Li Qiang, and Liu Dawei, and one of them met all the conditions she required.(1) Among the 4 men, there are 3 tall men, 2 doctors, and 1 is handsome; (2) Wang Wei and Wu Gang are both doctors; (3) Liu Dawei and Li Qiang are the same height; (4) Li Qiang and Wang Wei Not all are tall.",
    "question": "Who can meet all the requirements of Li Na?",
    "answer": "C",
    "options": [
      "A.Liu Dawei",
      "B.Li Qiang",
      "C.Wu Gang",
      "D.Wang Wei"
    ],
    "raw_logic_programs": [
      "# Declarations\nmen = EnumSort([Wang_Wei, Wu_Gang, Li_Qiang, Liu_Dawei])\nattributes = EnumSort([tall, handsome, doctor])\nhas_attribute = Function([men, attributes] -> [bool])\n\n# Constraints\nCount([m:men], has_attribute(m, tall)) == 3 ::: Among the 4 men, there are 3 tall men\nCount([m:men], has_attribute(m, doctor)) == 2 ::: Among the 4 men, there are 2 doctors\nCount([m:men], has_attribute(m, handsome)) == 1 ::: Among the 4 men, there is 1 handsome man\nAnd(has_attribute(Wang_Wei, doctor), has_attribute(Wu_Gang, doctor)) ::: Wang Wei and Wu Gang are both doctors\nhas_attribute(Liu_Dawei, tall) == has_attribute(Li_Qiang, tall) ::: Liu Dawei and Li Qiang are the same height\nNot(And(has_attribute(Li_Qiang, tall), has_attribute(Wang_Wei, tall))) ::: Li Qiang and Wang Wei not all are tall\n\n# Options\nQuestion ::: Who can meet all the requirements of Li Na?\nis_valid(And(has_attribute(Liu_Dawei, tall), has_attribute(Liu_Dawei, handsome), has_attribute(Liu_Dawei, doctor))) ::: (A)\nis_valid(And(has_attribute(Li_Qiang, tall), has_attribute(Li_Qiang, handsome), has_attribute(Li_Qiang, doctor))) ::: (B)\nis_valid(And(has_attribute(Wu_Gang, tall), has_attribute(Wu_Gang, handsome), has_attribute(Wu_Gang, doctor))) ::: (C)\nis_valid(And(has_attribute(Wang_Wei, tall), has_attribute(Wang_Wei, handsome), has_attribute(Wang_Wei, doctor))) ::: (D)"
    ]
  },
  {
    "id": 116,
    "context": "Take n (n> 1) natural numbers in turn to form a finite sequence.The odd sequence and even sequence are obviously shorter than the natural sequence.However, if the natural number sequence is extended indefinitely, the odd and even sequence must be smaller than the whole; in an infinite world, the part may be equal to the whole.",
    "question": "Which of the following cannot be a logical inference from the above conclusion?",
    "answer": "B",
    "options": [
      "A.In a poor world, part may be smaller than whole.",
      "B.In an infinite world, parts must not be equal to wholes.",
      "C.In an infinite world, the whole may equal parts.",
      "D.In a poor world, the whole must be larger than the part."
    ],
    "raw_logic_programs": [
      "# Declarations\nworlds = EnumSort([poor, infinite])\nrelations = EnumSort([part_smaller_than_whole, part_equal_to_whole, whole_larger_than_part])\ninference = Function([worlds, relations] -> [bool])\n\n# Constraints\ninference(infinite, part_equal_to_whole) ::: In an infinite world, the part may be equal to the whole\ninference(poor, part_smaller_than_whole) ::: In a poor world, part may be smaller than whole\ninference(poor, whole_larger_than_part) ::: In a poor world, the whole must be larger than the part\n\n# Options\nQuestion ::: Which of the following cannot be a logical inference from the above conclusion?\nis_invalid(inference(poor, part_smaller_than_whole)) ::: (A)\nis_invalid(inference(infinite, part_equal_to_whole)) ::: (B)\nis_invalid(inference(infinite, part_equal_to_whole)) ::: (C)\nis_invalid(inference(poor, whole_larger_than_part)) ::: (D)"
    ]
  },
  {
    "id": 117,
    "context": "People who participate in Taekwondo exercise are generally healthier than those who do not participate in Taekwondo exercise.Therefore, Taekwondo exercise helps improve health.",
    "question": "Which of the following, if true, is the most doubtful of the above conclusion?",
    "answer": "C",
    "options": [
      "A.Every year, a small number of people are injured by accidents in Taekwondo.",
      "B.Taekwondo can train people's reaction ability and enhance people's agility.",
      "C.Only healthy people participate in Taekwondo.",
      "D.Men love taekwondo more than women."
    ],
    "raw_logic_programs": [
      "# Declarations\nparticipants = EnumSort([participate, not_participate])\nhealth_status = EnumSort([healthier, not_healthier])\nexercise_effect = Function([participants] -> [health_status])\n\n# Constraints\nexercise_effect(participate) == healthier ::: People who participate in Taekwondo exercise are generally healthier\nexercise_effect(not_participate) != healthier ::: than those who do not participate in Taekwondo exercise\n\n# Options\nQuestion ::: Which of the following, if true, is the most doubtful of the above conclusion?\nis_doubtful(Exists([p:participants], And(p == participate, exercise_effect(p) != healthier))) ::: (A) Every year, a small number of people are injured by accidents in Taekwondo.\nis_doubtful(Exists([p:participants], And(p == participate, exercise_effect(p) == healthier))) ::: (B) Taekwondo can train people's reaction ability and enhance people's agility.\nis_doubtful(Exists([p:participants], And(p == participate, exercise_effect(p) == healthier))) ::: (C) Only healthy people participate in Taekwondo.\nis_doubtful(Exists([p:participants], And(p == participate, exercise_effect(p) == healthier))) ::: (D) Men love taekwondo more than women."
    ]
  },
  {
    "id": 118,
    "context": "Scientists have found that the content of a protein called 'SK3' in the brains of experimental rats of different ages is closely related to their memory ability? the brain content of SK3 protein in the brains of old experimental rats is higher, but the content in younger experimental rats is less; and Older rats have worse memory than younger rats.Therefore, scientists believe that increased brain SK3 protein content will lead to memory loss in the experimental mice.",
    "question": "Which of the following, if true, best supports the scientist 's conclusion?",
    "answer": "C",
    "options": [
      "A.In young experimental rats, it is also found that the brain SK3 protein content is high.",
      "B.It has been found that the human brain also contains SK3 protein.",
      "C.When the scientists tried to reduce the content of SK3 protein in the brains of old experimental mice, their memory improved.",
      "D.Scientists have figured out the molecular structure of SK3 protein."
    ],
    "raw_logic_programs": [
      "# Declarations\nrats = EnumSort([young, old])\nprotein_content = Function([rats] -> [int])\nmemory_ability = Function([rats] -> [int])\n\n# Constraints\nprotein_content(old) > protein_content(young) ::: the brain content of SK3 protein in the brains of old experimental rats is higher\nmemory_ability(young) > memory_ability(old) ::: older rats have worse memory than younger rats\n\n# Options\nQuestion ::: Which of the following, if true, best supports the scientist's conclusion?\nis_supportive(protein_content(young) > some_threshold) ::: (A) In young experimental rats, it is also found that the brain SK3 protein content is high.\nis_supportive(human_brain_contains_SK3) ::: (B) It has been found that the human brain also contains SK3 protein.\nis_supportive(reducing_SK3_improves_memory(old)) ::: (C) When the scientists tried to reduce the content of SK3 protein in the brains of old experimental mice, their memory improved.\nis_supportive(known_SK3_structure) ::: (D) Scientists have figured out the molecular structure of SK3 protein."
    ]
  },
  {
    "id": 119,
    "context": "The late famous logician Jin Yuelin of China heard the words 'Money is like dung' and 'Friends are worth a thousand dollars' when he was a child, and found that there are logical problems because they can lead to the absurd conclusion of 'friends are like dung'.",
    "question": "Since the conclusion of 'friends like dung' is not true, it can be logically derived?",
    "answer": "B",
    "options": [
      "A.The expression 'money is like dung' is false.",
      "B.If a friend is indeed worth a lot of money, then money is not like dung.",
      "C.The statement that 'friends are valuable' is true.",
      "D.The words 'Money is like dung' and 'Friends are worth a thousand dollars' are either true or false."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([money_like_dung, friends_worth_thousand, friends_like_dung])\ntruth_values = EnumSort([true, false])\ntruth = Function([statements] -> [truth_values])\n\n# Constraints\nImplies(And(truth(money_like_dung) == true, truth(friends_worth_thousand) == true), truth(friends_like_dung) == true) ::: If both 'Money is like dung' and 'Friends are worth a thousand dollars' are true, then 'friends are like dung' is true\n\n# Options\nQuestion ::: Since the conclusion of 'friends like dung' is not true, it can be logically derived?\nis_derived(truth(money_like_dung) == false) ::: (A) The expression 'money is like dung' is false.\nis_derived(Implies(truth(friends_worth_thousand) == true, truth(money_like_dung) == false)) ::: (B) If a friend is indeed worth a lot of money, then money is not like dung.\nis_derived(truth(friends_worth_thousand) == true) ::: (C) The statement that 'friends are valuable' is true.\nis_derived(Or(truth(money_like_dung) == true, truth(money_like_dung) == false) and Or(truth(friends_worth_thousand) == true, truth(friends_worth_thousand) == false)) ::: (D) The words 'Money is like dung' and 'Friends are worth a thousand dollars' are either true or false."
    ]
  },
  {
    "id": 120,
    "context": "Recently, some countries in the world, especially the United States and Japan, have blamed their domestic economic mystery on China 's fixed exchange rate system between the RMB and the US dollar.Some domestic manufacturing companies have caused pressure.",
    "question": "The following are all questions about the above views, except?",
    "answer": "D",
    "options": [
      "A.Japan has been in recession for more than ten years.At that time, China 's merchandise exports were very small, and the renminbi was very weak.",
      "B.The US economic recession was mainly caused by the destruction of the myth of the Internet economy, and the '9.11' terrorist attacks exacerbated this recession.",
      "C.China's GDP accounts for only 3.9% of the world's total, foreign trade is less than 5% of the world's, and it does not have the ability to affect the world market price and supply and demand.",
      "D.Consumers in Western countries have benefited greatly from cheap goods in China."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([United_States, Japan, China])\nfactors = EnumSort([exchange_rate, domestic_economy, manufacturing_pressure])\nquestions = EnumSort([A, B, C, D])\nviews = Function([countries, factors] -> [bool])\nis_question_about_view = Function([questions, factors] -> [bool])\n\n# Constraints\nviews(United_States, exchange_rate) ::: The United States blames its domestic economic mystery on China's fixed exchange rate system\nviews(Japan, exchange_rate) ::: Japan blames its domestic economic mystery on China's fixed exchange rate system\nviews(United_States, manufacturing_pressure) ::: Domestic manufacturing companies in the United States have caused pressure\nviews(Japan, manufacturing_pressure) ::: Domestic manufacturing companies in Japan have caused pressure\n\n# Options\nQuestion ::: The following are all questions about the above views, except?\nis_exception(is_question_about_view(A, exchange_rate)) ::: (A)\nis_exception(is_question_about_view(B, domestic_economy)) ::: (B)\nis_exception(is_question_about_view(C, exchange_rate)) ::: (C)\nis_exception(is_question_about_view(D, manufacturing_pressure)) ::: (D)"
    ]
  },
  {
    "id": 121,
    "context": "The football game in the 'Master Cup 2003 China Robot Competition' is in progress.Three professors predicted the final result? Professor Zhao said? 'The champion is not the Tsinghua University team nor the Zhejiang University team.' Professor Qian said ? 'The champion is not the Tsinghua University team, but the University of Science and Technology of China.' Professor Sun said? 'The champion is not the China University of Science and Technology team, but the Tsinghua University team.The results of the competition showed that only one of them judged both, one 'S judgment is one-to-one wrong, the other one is wrong.",
    "question": "According to the above situation, we know that the winner is",
    "answer": "A",
    "options": [
      "A.Tsinghua University Team",
      "B.China University of Science and Technology Team",
      "C.Zhejiang University Team",
      "D.Beijing University of Aeronautics and Astronautics"
    ],
    "raw_logic_programs": [
      "# Declarations\nuniversities = EnumSort([Tsinghua, Zhejiang, USTC, BUAA])\nchampion = Function([universities] -> [bool])\n\n# Constraints\n# Professor Zhao's statement: \"The champion is not the Tsinghua University team nor the Zhejiang University team.\"\nzhao_statement = And(Not(champion(Tsinghua)), Not(champion(Zhejiang)))\n\n# Professor Qian's statement: \"The champion is not the Tsinghua University team, but the University of Science and Technology of China.\"\nqian_statement = And(Not(champion(Tsinghua)), champion(USTC))\n\n# Professor Sun's statement: \"The champion is not the China University of Science and Technology team, but the Tsinghua University team.\"\nsun_statement = And(Not(champion(USTC)), champion(Tsinghua))\n\n# Only one professor's statement is completely true, one is completely false, and the other is partially true.\none_true = Or(\n    And(zhao_statement, Not(qian_statement), Not(sun_statement)),\n    And(Not(zhao_statement), qian_statement, Not(sun_statement)),\n    And(Not(zhao_statement), Not(qian_statement), sun_statement)\n)\n\n# Options\nQuestion ::: According to the above situation, we know that the winner is\nis_valid(champion(Tsinghua)) ::: (A)\nis_valid(champion(USTC)) ::: (B)\nis_valid(champion(Zhejiang)) ::: (C)\nis_valid(champion(BUAA)) ::: (D)"
    ]
  },
  {
    "id": 122,
    "context": "One year before the graduates of Harvard University came out of the school, the school conducted a survey on their life goals.The result was that 27% of them had no goals at all, 60% had blurred goals, and 10% had a close relationship Goals, only 3% of people have long-term and clear goals.Twenty-five years later, those 3% of people have made unremitting efforts towards a goal and become the elite of the society, while the rest have much worse achievements.this means______",
    "question": "Which sentence is most appropriate for the following?",
    "answer": "C",
    "options": [
      "A.You should determine your life goals as soon as possible.",
      "B.Life has no meaning, but we should add a meaning to it.",
      "C.Whether there is a long-term and clear life goal has a very important impact on the size of life achievements.",
      "D.If you have a long-term and clear life goal, you will be successful in life."
    ],
    "raw_logic_programs": [
      "# Declarations\ngraduates = EnumSort([no_goals, blurred_goals, close_relationship_goals, long_term_clear_goals])\npercentages = Function([graduates] -> [int])\nachievements = Function([graduates] -> [str])\n\n# Constraints\npercentages(no_goals) == 27 ::: 27% of them had no goals at all\npercentages(blurred_goals) == 60 ::: 60% had blurred goals\npercentages(close_relationship_goals) == 10 ::: 10% had close relationship goals\npercentages(long_term_clear_goals) == 3 ::: 3% of people have long-term and clear goals\nachievements(long_term_clear_goals) == \"elite\" ::: those 3% of people have become the elite of the society\nForAll([g:graduates], Implies(g != long_term_clear_goals, achievements(g) == \"worse\")) ::: the rest have much worse achievements\n\n# Options\nQuestion ::: Which sentence is most appropriate for the following?\nis_most_appropriate(\"You should determine your life goals as soon as possible.\") ::: (A)\nis_most_appropriate(\"Life has no meaning, but we should add a meaning to it.\") ::: (B)\nis_most_appropriate(\"Whether there is a long-term and clear life goal has a very important impact on the size of life achievements.\") ::: (C)\nis_most_appropriate(\"If you have a long-term and clear life goal, you will be successful in life.\") ::: (D)"
    ]
  },
  {
    "id": 123,
    "context": "Confucius said? 'Do not do what you don't want to do to others.'",
    "question": "Which of the following options is not a logical inference from the above sentence?",
    "answer": "B",
    "options": [
      "A.Only those who do what they want can do it to others.",
      "B.If you want, then give it to others.",
      "C.Don't treat others unless you want to.",
      "D.Whatever is applied to people should be what they want."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([do, not_do])\npeople = EnumSort([self, others])\nwants = Function([people, actions] -> [bool])\n\n# Constraints\nForAll([a:actions], Implies(wants(self, a), wants(others, a))) ::: Do not do what you don't want to do to others\n\n# Options\nQuestion ::: Which of the following options is not a logical inference from the above sentence?\nis_not_inference(Implies(wants(self, do), wants(others, do))) ::: (A)\nis_not_inference(Implies(wants(self, do), wants(others, do))) ::: (B)\nis_not_inference(Implies(Not(wants(self, do)), Not(wants(others, do)))) ::: (C)\nis_not_inference(ForAll([a:actions], Implies(wants(others, a), wants(self, a)))) ::: (D)"
    ]
  },
  {
    "id": 124,
    "context": "Most people think that the thinking of scientists is based on strict logical reasoning, not on image thinking means such as analogy, intuition, and epiphany.However, research shows that Nobel Prize winners make more use of these image thinking methods than general scientists.Therefore, image thinking methods help to achieve major scientific breakthroughs.",
    "question": "The above conclusion is based on which of the following assumptions?",
    "answer": "C",
    "options": [
      "A.Organized, step-by-step reasoning is essential for general scientific research.",
      "B.Nobel Prize winners have the ability to think creatively through analogy, intuition, and insight.",
      "C.Nobel winners have made major scientific breakthroughs.",
      "D.Nobel Prize winners are smarter and harder than ordinary scientists."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([general_scientists, nobel_prize_winners])\nthinking_methods = EnumSort([logical_reasoning, image_thinking])\nuse_method = Function([people, thinking_methods] -> [bool])\nachieve_breakthrough = Function([people] -> [bool])\n\n# Constraints\nuse_method(general_scientists, logical_reasoning) ::: Most people think that the thinking of scientists is based on strict logical reasoning\nuse_method(nobel_prize_winners, image_thinking) ::: Nobel Prize winners make more use of these image thinking methods than general scientists\n\n# Options\nQuestion ::: The above conclusion is based on which of the following assumptions?\nImplies(use_method(nobel_prize_winners, image_thinking), achieve_breakthrough(nobel_prize_winners)) ::: (A) Organized, step-by-step reasoning is essential for general scientific research.\nImplies(use_method(nobel_prize_winners, image_thinking), achieve_breakthrough(nobel_prize_winners)) ::: (B) Nobel Prize winners have the ability to think creatively through analogy, intuition, and insight.\nImplies(achieve_breakthrough(nobel_prize_winners), use_method(nobel_prize_winners, image_thinking)) ::: (C) Nobel winners have made major scientific breakthroughs.\nImplies(use_method(nobel_prize_winners, image_thinking), achieve_breakthrough(nobel_prize_winners)) ::: (D) Nobel Prize winners are smarter and harder than ordinary scientists."
    ]
  },
  {
    "id": 125,
    "context": "A supermarket often finds that customers steal goods without paying, which affects the profit of the supermarket.As a result, the management of the supermarket decided to install monitoring equipment in the supermarket and increase the number of shopping guides, thereby increasing the profit margin of the supermarket.",
    "question": "Which of the following is most important for evaluating the decision of the supermarket management?",
    "answer": "D",
    "options": [
      "A.The ratio of the purchase price to the selling price of the supermarket goods.",
      "B.The quantity and price of goods sold by the supermarket every day.",
      "C.The number of customers who shop at the supermarket every day and the level of consumption.",
      "D.The ratio of the loss in the supermarket caused by customers stealing commodities, compared with the cost of operating monitoring equipment and increasing shopping guides."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([purchase_selling_ratio, quantity_price_sold, customer_count_consumption_level, loss_cost_ratio])\ndecision_evaluation = Function([factors] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the focus is on evaluating the decision.\n\n# Options\nQuestion ::: Which of the following is most important for evaluating the decision of the supermarket management?\nis_most_important(decision_evaluation(loss_cost_ratio)) ::: (A)\nis_most_important(decision_evaluation(purchase_selling_ratio)) ::: (B)\nis_most_important(decision_evaluation(quantity_price_sold)) ::: (C)\nis_most_important(decision_evaluation(customer_count_consumption_level)) ::: (D)"
    ]
  },
  {
    "id": 126,
    "context": "In the early days of its formation, the earth was a fast rotating body in the state of lava, most of the iron element was in its core part; some molten liquid was thrown from the surface of this rotating body, and later condensed to form the moon.",
    "question": "If the above theory about the origin of the moon is correct, which one of the following conclusions can best be supported?",
    "answer": "B",
    "options": [
      "A.The moon is the only fairly large object that orbits the earth.",
      "B.The iron content of the core part of the moon is smaller than that of the core part of the earth.",
      "C.The solidification of the lunar surface is after the solidification of the earth's surface.",
      "D.Like the earth, the moon has a solid surface structure and a core of lava."
    ],
    "raw_logic_programs": [
      "# Declarations\nbodies = EnumSort([earth, moon])\nelements = EnumSort([iron])\nstates = EnumSort([solid, liquid, lava])\ncore_content = Function([bodies, elements] -> [int])\nsurface_state = Function([bodies] -> [states])\n\n# Constraints\ncore_content(earth, iron) > core_content(moon, iron) ::: Most of the iron element was in the core part of the earth, implying the moon has less iron in its core\nsurface_state(moon) == solid ::: The moon later condensed to form a solid surface\nsurface_state(earth) == solid ::: The earth eventually solidified from a state of lava\n\n# Options\nQuestion ::: If the above theory about the origin of the moon is correct, which one of the following conclusions can best be supported?\nis_supported(core_content(moon, iron) < core_content(earth, iron)) ::: (B)\nis_supported(surface_state(moon) == solid) ::: (C)\nis_supported(surface_state(earth) == solid) ::: (D)"
    ]
  },
  {
    "id": 127,
    "context": "There are 9 passengers on a helicopter, including 1 scientist, 2 entrepreneurs, 2 lawyers, 3 Americans, and 4 Chinese.",
    "question": "Which of the following supplements can explain the inconsistency between the total number of people mentioned in the question stem and the number of people with different identities?",
    "answer": "C",
    "options": [
      "A.The scientist and one of the Americans are husband and wife.",
      "B.The products of one of the entrepreneurs are mainly exported to the United States.",
      "C.Two entrepreneurs are Chinese, and another American is a lawyer.",
      "D.One of the lawyers is the legal adviser of one of the entrepreneurs."
    ],
    "raw_logic_programs": [
      "# Declarations\npassengers = EnumSort([scientist, entrepreneur1, entrepreneur2, lawyer1, lawyer2, american1, american2, american3, chinese1, chinese2, chinese3, chinese4])\nroles = EnumSort([scientist_role, entrepreneur_role, lawyer_role, american_role, chinese_role])\nhas_role = Function([passengers, roles] -> [bool])\n\n# Constraints\nCount([p:passengers], has_role(p, scientist_role)) == 1 ::: There is 1 scientist\nCount([p:passengers], has_role(p, entrepreneur_role)) == 2 ::: There are 2 entrepreneurs\nCount([p:passengers], has_role(p, lawyer_role)) == 2 ::: There are 2 lawyers\nCount([p:passengers], has_role(p, american_role)) == 3 ::: There are 3 Americans\nCount([p:passengers], has_role(p, chinese_role)) == 4 ::: There are 4 Chinese\n\n# Options\nQuestion ::: Which of the following supplements can explain the inconsistency between the total number of people mentioned in the question stem and the number of people with different identities?\nis_consistent(And(has_role(scientist, scientist_role), has_role(american1, american_role))) ::: (A) The scientist and one of the Americans are husband and wife.\nis_consistent(has_role(entrepreneur1, entrepreneur_role)) ::: (B) The products of one of the entrepreneurs are mainly exported to the United States.\nis_consistent(And(has_role(entrepreneur1, entrepreneur_role), has_role(entrepreneur2, entrepreneur_role), has_role(chinese1, chinese_role), has_role(chinese2, chinese_role), has_role(lawyer1, lawyer_role), has_role(american3, american_role))) ::: (C) Two entrepreneurs are Chinese, and another American is a lawyer.\nis_consistent(And(has_role(lawyer1, lawyer_role), has_role(entrepreneur1, entrepreneur_role))) ::: (D) One of the lawyers is the legal adviser of one of the entrepreneurs."
    ]
  },
  {
    "id": 128,
    "context": "Before the finals of the men 's team division of the World Table Tennis Championships, the coach of Country S was lining up.His idea was? if the No.4 player 's competitive state is good and the injury has healed, then let No.4 player play; only Player No.4 can't play, only player No.6 is sent out.",
    "question": "If the No.6 player plays in the final, which of the following must be true?",
    "answer": "D",
    "options": [
      "A.Player 4 is seriously injured.",
      "B.Player 4's competitive state is not good.",
      "C.No.6 player was not injured.",
      "D.If player 4's injury has healed, then his competitive state is not good."
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([Player4, Player6])\nstates = EnumSort([good, not_good])\ninjuries = EnumSort([healed, not_healed])\nplays = Function([players] -> [bool])\ncompetitive_state = Function([players] -> [states])\ninjury_status = Function([players] -> [injuries])\n\n# Constraints\nImplies(And(competitive_state(Player4) == good, injury_status(Player4) == healed), plays(Player4) == True) ::: if the No.4 player's competitive state is good and the injury has healed, then let No.4 player play\nImplies(Not(plays(Player4)), plays(Player6)) ::: only Player No.4 can't play, only player No.6 is sent out\n\n# Options\nQuestion ::: If the No.6 player plays in the final, which of the following must be true?\nis_must_true(And(plays(Player6), injury_status(Player4) == not_healed)) ::: (A) Player 4 is seriously injured.\nis_must_true(And(plays(Player6), competitive_state(Player4) == not_good)) ::: (B) Player 4's competitive state is not good.\nis_must_true(And(plays(Player6), injury_status(Player6) == healed)) ::: (C) No.6 player was not injured.\nis_must_true(Implies(injury_status(Player4) == healed, competitive_state(Player4) == not_good)) ::: (D) If player 4's injury has healed, then his competitive state is not good."
    ]
  },
  {
    "id": 129,
    "context": "When a osprey holds a fish, such as herring, cod or courgette, and returns to the nest from the fishing ground, the other osprey will seek food along its whereabouts.However, if the Osprey is a plaice, other Ospreys rarely do this.Although Osprey eats plaice like other fish.",
    "question": "Which of the following is most helpful in explaining the Osprey 's predatory habits mentioned above?",
    "answer": "C",
    "options": [
      "A.Osprey rarely catch herring, cod or courgette.",
      "B.The water where plaice lives is shallower than the water where herring, cod or courgette lives.",
      "C.Herring, cod or courgette are group activities, but plaice is not.",
      "D.Plaice and cod have protective colors, while herring and courgette have no protective colors."
    ],
    "raw_logic_programs": [
      "# Declarations\nospreys = EnumSort([osprey1, osprey2])\nfish_types = EnumSort([herring, cod, courgette, plaice])\nholds = Function([ospreys] -> [fish_types])\nseeks_food = Function([ospreys] -> [bool])\n\n# Constraints\nForAll([o:ospreys], Or(holds(o) == herring, holds(o) == cod, holds(o) == courgette, holds(o) == plaice)) ::: An osprey holds a fish of type herring, cod, courgette, or plaice\nForAll([o:ospreys], Implies(holds(o) == plaice, Not(seeks_food(o)))) ::: If an osprey holds a plaice, other ospreys rarely seek food\nForAll([o:ospreys], Implies(Or(holds(o) == herring, holds(o) == cod, holds(o) == courgette), seeks_food(o))) ::: If an osprey holds herring, cod, or courgette, other ospreys seek food\n\n# Options\nQuestion ::: Which of the following is most helpful in explaining the Osprey's predatory habits mentioned above?\nis_helpful(And(holds(osprey1) == herring, holds(osprey2) == plaice, Not(seeks_food(osprey2)))) ::: (A) Osprey rarely catch herring, cod or courgette.\nis_helpful(And(holds(osprey1) == plaice, holds(osprey2) == herring, seeks_food(osprey2))) ::: (B) The water where plaice lives is shallower than the water where herring, cod or courgette lives.\nis_helpful(And(holds(osprey1) == herring, holds(osprey2) == plaice, Not(seeks_food(osprey2)))) ::: (C) Herring, cod or courgette are group activities, but plaice is not.\nis_helpful(And(holds(osprey1) == plaice, holds(osprey2) == cod, seeks_food(osprey2))) ::: (D) Plaice and cod have protective colors, while herring and courgette have no protective colors."
    ]
  },
  {
    "id": 130,
    "context": "The function of the government is to meet the real needs of the people.Unless the government knows what those needs are, the government cannot meet those needs.Freedom of expression can ensure that government officials hear such demand messages.Therefore, for a healthy country, free speech is essential.",
    "question": "Which of the following, if true, cannot weaken the above argument?",
    "answer": "D",
    "options": [
      "A.In most cases, the people do not know what they really need.",
      "B.Free speech ultimately tends to disrupt social order, and good social order is a prerequisite for meeting the needs of the masses.",
      "C.The legitimate function of the government is not to satisfy the needs of the people, but to provide equal opportunities for the people.",
      "D.Freedom of expression is insufficient to satisfy the needs of the masses, and good social order is also essential."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([government_function, needs_knowledge, freedom_expression, healthy_country])\nstatements = EnumSort([real_needs, knows_needs, hears_demands, essential_free_speech])\nweakens = Function([arguments, statements] -> [bool])\n\n# Constraints\nForAll([a:arguments], Exists([s:statements], weakens(a, s))) ::: Each argument can be weakened by at least one statement\nweakens(government_function, real_needs) ::: The function of the government is to meet the real needs of the people\nweakens(needs_knowledge, knows_needs) ::: Unless the government knows what those needs are, the government cannot meet those needs\nweakens(freedom_expression, hears_demands) ::: Freedom of expression can ensure that government officials hear such demand messages\nweakens(healthy_country, essential_free_speech) ::: Therefore, for a healthy country, free speech is essential\n\n# Options\nQuestion ::: Which of the following, if true, cannot weaken the above argument?\nis_not_weakening(weakens(government_function, real_needs)) ::: (A)\nis_not_weakening(weakens(healthy_country, essential_free_speech)) ::: (B)\nis_not_weakening(weakens(government_function, real_needs)) ::: (C)\nis_not_weakening(weakens(healthy_country, essential_free_speech)) ::: (D)"
    ]
  },
  {
    "id": 131,
    "context": "In the past, we had a lot of unrealistic high-profile in moral propaganda, so that a lot of the population said one thing and made one behind the other, and split personality.Through thinking about this phenomenon, some scholars have proposed that we should only ask ordinary people to abide by the 'bottom line ethics'.",
    "question": "Based on your understanding, which of the following options is most appropriate as the definition of 'bottom line ethics'?",
    "answer": "B",
    "options": [
      "A.The bottom line ethics is not to steal or kill.",
      "B.The bottom line ethics are some of the most basic and basic codes of conduct and rules that should be observed by ordinary people in a society.",
      "C.The bottom line ethics is not an ethics that requires selfless dedication.",
      "D.If one compares human morality to a building, the bottom line ethics is the fundamental part of that building."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([steal_or_kill, basic_codes, selfless_dedication, fundamental_part])\ndefinition = Function([concepts] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, so we will not define any constraints here.\n\n# Options\nQuestion ::: Based on your understanding, which of the following options is most appropriate as the definition of 'bottom line ethics'?\nis_appropriate(definition(steal_or_kill)) ::: (A)\nis_appropriate(definition(basic_codes)) ::: (B)\nis_appropriate(definition(selfless_dedication)) ::: (C)\nis_appropriate(definition(fundamental_part)) ::: (D)"
    ]
  },
  {
    "id": 132,
    "context": "In the 3000m finals of the World Athletics Championships, they always ran among the top three players A.B, and C.One was an American player, one was a German player, and the other was a Kenyan player.After the game, I learned? (1) A 's performance is better than German 's; (2) Kenyan 's performance is worse than B 's; and (3) C praises Kenyan 's performance.",
    "question": "Which of the following must be true?",
    "answer": "C",
    "options": [
      "A.A.B, and C are Kenyan, German, and American.",
      "B.The Kenyan player is the champion, the American player is the runner-up, and the German player is the third.",
      "C.A.B and C are Kenyan players, American players and German players.",
      "D.The American player is the champion, the German player is the runner-up, and the Kenyan player is the third."
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([A, B, C])\nnationalities = EnumSort([American, German, Kenyan])\nperformance = Function([players] -> [int])\nnationality = Function([players] -> [nationalities])\n\n# Constraints\nDistinct([p:players], nationality(p)) ::: Each player has a unique nationality\nperformance(A) < performance(nationality(German)) ::: A's performance is better than German's\nperformance(nationality(Kenyan)) > performance(B) ::: Kenyan's performance is worse than B's\nperformance(C) < performance(nationality(Kenyan)) ::: C praises Kenyan's performance\n\n# Options\nQuestion ::: Which of the following must be true?\nis_true(And(nationality(A) == Kenyan, nationality(B) == German, nationality(C) == American)) ::: (A)\nis_true(And(performance(nationality(Kenyan)) == 1, performance(nationality(American)) == 2, performance(nationality(German)) == 3)) ::: (B)\nis_true(And(nationality(A) == Kenyan, nationality(B) == American, nationality(C) == German)) ::: (C)\nis_true(And(performance(nationality(American)) == 1, performance(nationality(German)) == 2, performance(nationality(Kenyan)) == 3)) ::: (D)"
    ]
  },
  {
    "id": 133,
    "context": "Recently, hundreds of seals died from eating a fish contaminated with chemicals.Even small amounts of this chemical can poison mammals.However, some people have not been poisoned after eating this fish.",
    "question": "Which of the following, if correct, is most helpful in explaining the contradictions in the above statement?",
    "answer": "B",
    "options": [
      "A.The fish contaminated with this chemical has not been harmed by the chemical itself.",
      "B.Toxic chemicals gather in the parts of the fish that seals eat but people don't.",
      "C.Traces of this chemical poison were also found in the bodies of some people who ate neither fish nor fish products.",
      "D.Fish contaminated with this chemical only accounts for a small portion of the seal 's total food intake."
    ],
    "raw_logic_programs": [
      "# Declarations\nseals = EnumSort([seal1, seal2, ..., sealN])  # Representing multiple seals\npeople = EnumSort([person1, person2, ..., personM])  # Representing multiple people\nfish = EnumSort([fish1, fish2, ..., fishK])  # Representing multiple fish\nchemicals = EnumSort([chemical1])  # Representing the specific chemical\n\neats = Function([seals + people, fish] -> [bool])  # Whether a seal or person eats a specific fish\ncontaminated = Function([fish] -> [bool])  # Whether a fish is contaminated with the chemical\npoisoned = Function([seals + people] -> [bool])  # Whether a seal or person is poisoned\n\n# Constraints\nForAll([s:seals, f:fish], Implies(And(eats(s, f), contaminated(f)), poisoned(s))) ::: Even small amounts of this chemical can poison mammals\nExists([p:people, f:fish], And(eats(p, f), contaminated(f), Not(poisoned(p)))) ::: Some people have not been poisoned after eating this fish\n\n# Options\nQuestion ::: Which of the following, if correct, is most helpful in explaining the contradictions in the above statement?\nis_explanatory(ForAll([f:fish], Not(harmed(f)))) ::: (A) The fish contaminated with this chemical has not been harmed by the chemical itself.\nis_explanatory(ForAll([f:fish], Implies(contaminated(f), gathers_in_parts_seals_eat(f)))) ::: (B) Toxic chemicals gather in the parts of the fish that seals eat but people don't.\nis_explanatory(Exists([p:people], And(traces_found(p), Not(eats_fish(p))))) ::: (C) Traces of this chemical poison were also found in the bodies of some people who ate neither fish nor fish products.\nis_explanatory(ForAll([s:seals], Implies(eats(s, fish_contaminated), small_portion_of_diet(s)))) ::: (D) Fish contaminated with this chemical only accounts for a small portion of the seal's total food intake."
    ]
  },
  {
    "id": 134,
    "context": "The United States adopted such a policy after the '9.11' terrorist attack? 'Either stand with us to fight terrorism, then you are our friend; or do not stand with us, then you are us Enemy.'",
    "question": "Which of the following is different from the expression in the stem?",
    "answer": "C",
    "options": [
      "A.There is a car advertisement? 'Or if you drive Cadillac, then you are rich; or if you don't drive at all, then you are poor!'",
      "B.People who take football as a profession have only two destinies? either win, then you are a hero, face flowers, cheers, money, beauty; or lose, then you are a scumbag, a fool, face reproach, anger, verbal abuse, and beat your teeth Swallow it.",
      "C.If a professor has enough ability, he can even train stupid students; therefore, if he cannot train stupid students, it means that his ability is not enough.",
      "D.Either you are a morally noble person, then you will selflessly contribute everything to yourself; or if you are a mean person, then you will do whatever you want for personal gain."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nexpressions = Function([statements] -> [bool])\n\n# Constraints\nexpressions(A) == Or(Implies(drives_cadillac, rich), Implies(Not(drives), poor)) ::: Car advertisement expression\nexpressions(B) == Or(Implies(professional_footballer_wins, hero), Implies(professional_footballer_loses, scumbag)) ::: Football profession expression\nexpressions(C) == Implies(Implies(professor_has_ability, trains_stupid_students), Not(trains_stupid_students) -> Not(professor_has_ability)) ::: Professor ability expression\nexpressions(D) == Or(Implies(morally_noble, selfless_contribution), Implies(mean_person, personal_gain)) ::: Moral character expression\n\n# Options\nQuestion ::: Which of the following is different from the expression in the stem?\nis_different(expressions(A)) ::: (A)\nis_different(expressions(B)) ::: (B)\nis_different(expressions(C)) ::: (C)\nis_different(expressions(D)) ::: (D)"
    ]
  },
  {
    "id": 135,
    "context": "A television advertisement said that grassland green birds and chickens, hungry to eat grass and greedy to eat grasshoppers, seem to imply that the nutritional value of the breeder chicken and its eggs is related to the grassland food eaten by the breeder chicken.",
    "question": "To verify this conclusion, which of the following experimental methods is the most reliable?",
    "answer": "C",
    "options": [
      "A.Select an excellent breed of laying hens to feed on the grassland, and then compare with the nutrient composition of the common chickens fed on the grassland.",
      "B.Test and compare the nutritional content of chicken food on grassland and non-grassland chicken food.",
      "C.Choose laying hens of the same breed grade, half of them are fed on the grassland and half are fed on the non-steppe, and then compare their nutritional content.",
      "D.Select different breeds of laying hens, feed them on the grassland, and compare their nutritional content."
    ],
    "raw_logic_programs": [
      "# Declarations\nbirds = EnumSort([grassland_green_birds, chickens])\nfoods = EnumSort([grass, grasshoppers])\nnutritional_value = Function([birds] -> [float])\nfood_eaten = Function([birds] -> [foods])\n\n# Constraints\nForAll([b:birds], Or(food_eaten(b) == grass, food_eaten(b) == grasshoppers)) ::: Birds eat either grass or grasshoppers\nnutritional_value(chickens) == Function([food_eaten(chickens)]) ::: Nutritional value of chickens is related to the food they eat\n\n# Options\nQuestion ::: To verify this conclusion, which of the following experimental methods is the most reliable?\nis_reliable(And(Select(b:birds, b == chickens), Compare(nutritional_value(chickens), nutritional_value(common_chickens)))) ::: (A)\nis_reliable(Compare(nutritional_content(grassland_food), nutritional_content(non_grassland_food))) ::: (B)\nis_reliable(And(Select(b:birds, b == chickens), Compare(nutritional_value(grassland_chickens), nutritional_value(non_grassland_chickens)))) ::: (C)\nis_reliable(And(Select(b:birds, b == chickens), Compare(nutritional_value(different_breeds)))) ::: (D)"
    ]
  },
  {
    "id": 136,
    "context": "The salesperson said to customers? 'The compressor is the core component of the refrigerator.The Penguin refrigerator uses the same high quality compressor as the Polar Bear refrigerator.Because the price of the Penguin refrigerator is much lower than that of the Polar Bear refrigerator So, when you buy a Penguin refrigerator instead of a Polar Bear refrigerator, you can get the same cooling effect with less money.'",
    "question": "Which of the following, if proven, can reasonably lead to the salesperson 's conclusion?",
    "answer": "C",
    "options": [
      "A.Polar bear brand refrigerators have more advertisements than penguin brand refrigerators.",
      "B.The salesperson earned less revenue from selling a Penguin refrigerator than from selling a Polar Bear refrigerator.",
      "C.The refrigeration effect of a refrigerator is solely determined by the quality of its compressor.",
      "D.The annual sales volume of refrigerators is larger than the annual sales volume of Polar Bear refrigerators."
    ],
    "raw_logic_programs": [
      "# Declarations\nrefrigerators = EnumSort([Penguin, Polar_Bear])\ncomponents = EnumSort([compressor])\nquality = Function([refrigerators, components] -> [int])\nprice = Function([refrigerators] -> [int])\ncooling_effect = Function([refrigerators] -> [int])\n\n# Constraints\nquality(Penguin, compressor) == quality(Polar_Bear, compressor) ::: The Penguin refrigerator uses the same high quality compressor as the Polar Bear refrigerator\nprice(Penguin) < price(Polar_Bear) ::: The price of the Penguin refrigerator is much lower than that of the Polar Bear refrigerator\n\n# Options\nQuestion ::: Which of the following, if proven, can reasonably lead to the salesperson's conclusion?\nis_reasonable(ForAll([r:refrigerators], cooling_effect(r) == quality(r, compressor))) ::: (C) The refrigeration effect of a refrigerator is solely determined by the quality of its compressor"
    ]
  },
  {
    "id": 137,
    "context": "Some people firmly believe that there are other advanced civilizations other than human civilization in the universe, because there is no theory and evidence to prove that such a civilization cannot exist.",
    "question": "Which of the following options is the same as the argument in the question stem?",
    "answer": "B",
    "options": [
      "A.There are savages in the Shennongjia area because someone has seen the savages.",
      "B.Since you can't prove that ghosts don't exist, so ghosts exist.",
      "C.Scientists are not born smart, for example, Einstein did not seem very smart when he was a child.",
      "D.A scholastic philosopher does not believe that human nerves converge in the brain.The reason is that in Aristotle's writings, nerves are generated from the heart."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\npremises = Function([arguments] -> [bool])\nconclusions = Function([arguments] -> [bool])\n\n# Constraints\npremises(A) == True ::: Someone has seen the savages\nconclusions(A) == True ::: There are savages in the Shennongjia area\n\npremises(B) == Not(Exists([x], Not(ghosts_exist(x)))) ::: You can't prove that ghosts don't exist\nconclusions(B) == Exists([x], ghosts_exist(x)) ::: Ghosts exist\n\npremises(C) == Not(Exists([x], smart(x))) ::: Scientists are not born smart\nconclusions(C) == Not(smart(Einstein)) ::: Einstein did not seem very smart when he was a child\n\npremises(D) == Not(Exists([x], nerves_converge_in_brain(x))) ::: A scholastic philosopher does not believe that human nerves converge in the brain\nconclusions(D) == nerves_generated_from_heart(Aristotle) ::: In Aristotle's writings, nerves are generated from the heart\n\n# Options\nQuestion ::: Which of the following options is the same as the argument in the question stem?\nis_same_argument(premises(B) == conclusions(B)) ::: (B)"
    ]
  },
  {
    "id": 138,
    "context": "There are four assertions about a criminal case? (1) There is evidence that Chen Hu did not commit the crime; (2) The perpetrator is either Wang Guang, Chen Hu, or Zhu Tong; (3) There is also evidence that Wang Guang did not commit the crime; (4) The TV screen showed? At the time of the incident, Zhu Tong was in the auditorium of a football game away from the crime scene.",
    "question": "Which of the following is a correct description of the four assertions in the stem?",
    "answer": "B",
    "options": [
      "A.It can be deduced from the above assertion? there is only one crime.",
      "B.At least one of the above assertions is false.",
      "C.From these assertions, it can be concluded that the evidence that Wang Guang did not commit the crime is false.",
      "D.Zhu Tong is definitely not in the audience of the football match."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Wang_Guang, Chen_Hu, Zhu_Tong])\ncommitted_crime = Function([people] -> [bool])\nevidence = Function([people] -> [bool])\n\n# Constraints\nevidence(Chen_Hu) == False ::: There is evidence that Chen Hu did not commit the crime\nOr(committed_crime(Wang_Guang), committed_crime(Chen_Hu), committed_crime(Zhu_Tong)) ::: The perpetrator is either Wang Guang, Chen Hu, or Zhu Tong\nevidence(Wang_Guang) == False ::: There is also evidence that Wang Guang did not commit the crime\nNot(committed_crime(Zhu_Tong)) ::: At the time of the incident, Zhu Tong was in the auditorium of a football game away from the crime scene\n\n# Options\nQuestion ::: Which of the following is a correct description of the four assertions in the stem?\nis_valid(And(Exists([p:people], committed_crime(p)), Count([p:people], committed_crime(p)) == 1)) ::: (A) It can be deduced from the above assertion that there is only one crime.\nis_valid(Or(Not(evidence(Chen_Hu)), Not(evidence(Wang_Guang)), committed_crime(Zhu_Tong))) ::: (B) At least one of the above assertions is false.\nis_valid(Not(evidence(Wang_Guang))) ::: (C) From these assertions, it can be concluded that the evidence that Wang Guang did not commit the crime is false.\nis_valid(Not(committed_crime(Zhu_Tong))) ::: (D) Zhu Tong is definitely not in the audience of the football match."
    ]
  },
  {
    "id": 139,
    "context": "TV commercial? Well, this wine should be a little longer and the craft should be more refined.Good wine, you can drink a little.(Advertisers looked at Bancheng Shaoguo in their hands) Well, Bancheng Shaoguo, you can drink a little.",
    "question": "In order to make the last sentence in the subject a logical inference from the previous sentences, which of the following premises needs to be added?",
    "answer": "C",
    "options": [
      "A.Moutai is the most famous good wine in China.",
      "C.Wuliangye and Bancheng Shaojiao are good wines.",
      "B.It's been a long time for Bancheng casserole wine.",
      "D.The craft of Bancheng casserole is excellent."
    ],
    "raw_logic_programs": [
      "# Declarations\nwines = EnumSort([Bancheng_Shaoguo, Moutai, Wuliangye])\nqualities = EnumSort([good_wine, refined_craft])\nhas_quality = Function([wines, qualities] -> [bool])\n\n# Constraints\nhas_quality(Bancheng_Shaoguo, good_wine) ::: Good wine, you can drink a little.\nhas_quality(Bancheng_Shaoguo, refined_craft) ::: The craft should be more refined.\n\n# Options\nQuestion ::: In order to make the last sentence in the subject a logical inference from the previous sentences, which of the following premises needs to be added?\nis_necessary(has_quality(Moutai, good_wine)) ::: (A)\nis_necessary(has_quality(Wuliangye, good_wine) and has_quality(Bancheng_Shaoguo, good_wine)) ::: (C)\nis_necessary(has_quality(Bancheng_Shaoguo, refined_craft)) ::: (B)\nis_necessary(has_quality(Bancheng_Shaoguo, refined_craft)) ::: (D)"
    ]
  },
  {
    "id": 140,
    "context": "European fern is a poisonous wild grass that has spread and destroyed many pastures in the northern hemisphere in recent years.One way to deal with this wild grass is to spend less money and be self-sustaining by introducing the natural enemy of this plant.Therefore, some scientists suggested that the moths that feed on the European fern produced in the southern hemisphere were released into the northern hemisphere affected by this wild grass to control the growth of the European fern.",
    "question": "If the scientist 's proposal to control the European fern is adopted, which of the following is necessary for its success?",
    "answer": "C",
    "options": [
      "A.This northern fern of the northern hemisphere also grows in areas with similar climate and soil conditions in the southern hemisphere.",
      "B.In addition to eating European ferns, the moths they stock also eat other wild grasses that grow in the northern hemisphere.",
      "C.The stocked moths can survive in the northern hemisphere and can form a large enough group to reduce the number of European ferns and prevent their growth.",
      "D.When the number of European ferns decreases, livestock will become immune to diseases caused by this wild grass."
    ],
    "raw_logic_programs": [
      "# Declarations\nhemispheres = EnumSort([northern, southern])\nplants = EnumSort([european_fern])\nanimals = EnumSort([moths])\nconditions = EnumSort([climate, soil])\nactions = EnumSort([introduce_moths])\neffects = EnumSort([reduce_fern, prevent_growth, moth_survival, form_large_group, livestock_immunity])\n\n# Constraints\nExists([a:actions], a == introduce_moths) ::: Scientists propose introducing moths to control European fern\nForAll([h:hemispheres, p:plants], Exists([c:conditions], And(h == northern, p == european_fern, c == climate, c == soil))) ::: European fern grows in areas with specific climate and soil conditions\n\n# Options\nQuestion ::: If the scientist's proposal to control the European fern is adopted, which of the following is necessary for its success?\nis_necessary(And(Exists([h:hemispheres], h == southern), Exists([c:conditions], c == climate, c == soil))) ::: (A)\nis_necessary(Exists([a:animals], And(a == moths, Exists([p:plants], p != european_fern)))) ::: (B)\nis_necessary(And(Exists([e:effects], e == moth_survival), Exists([e:effects], e == form_large_group), Exists([e:effects], e == reduce_fern), Exists([e:effects], e == prevent_growth))) ::: (C)\nis_necessary(Exists([e:effects], e == livestock_immunity)) ::: (D)"
    ]
  },
  {
    "id": 141,
    "context": "Koreans love sauerkraut and Cuihua loves sauerkraut, so Cuihua is Korean.",
    "question": "Which of the following options most clearly shows the absurdity of the above reasoning?",
    "answer": "B",
    "options": [
      "A.All Cretans are lying, John is Cretan, so John is lying.",
      "B.Walking animals have legs, and tables have legs, so tables are walking animals.",
      "C.Nishimura loves Cuihua.Cuihua loves pickled cabbage.Therefore, Nishimura loves pickled cabbage.",
      "D.All gold glitters, so some glitters are gold."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([Koreans, Cuihua, sauerkraut, John, Cretans, lying, walking_animals, legs, tables, Nishimura, pickled_cabbage, gold, glitters])\nloves = Function([entities, entities] -> [bool])\nis = Function([entities, entities] -> [bool])\n\n# Constraints\nForAll([e:entities], Implies(is(e, Koreans), loves(e, sauerkraut))) ::: Koreans love sauerkraut\nloves(Cuihua, sauerkraut) ::: Cuihua loves sauerkraut\nis(Cuihua, Koreans) ::: so Cuihua is Korean\n\n# Options\nQuestion ::: Which of the following options most clearly shows the absurdity of the above reasoning?\nis_absurd(And(ForAll([e:entities], Implies(is(e, Cretans), is(e, lying))), is(John, Cretans), is(John, lying))) ::: (A)\nis_absurd(And(ForAll([e:entities], Implies(is(e, walking_animals), is(e, legs))), is(tables, legs), is(tables, walking_animals))) ::: (B)\nis_absurd(And(loves(Nishimura, Cuihua), loves(Cuihua, pickled_cabbage), loves(Nishimura, pickled_cabbage))) ::: (C)\nis_absurd(And(ForAll([e:entities], Implies(is(e, gold), is(e, glitters))), Exists([e:entities], And(is(e, glitters), is(e, gold))))) ::: (D)"
    ]
  },
  {
    "id": 142,
    "context": "Workers of state-owned enterprises are laid off and migrant workers enter the city, causing a high unemployment rate and a great threat to social stability.Therefore, we must increase the scale of economic development and accelerate the speed of economic development.",
    "question": "Which of the following provides the strongest support for the argument in the question stem?",
    "answer": "B",
    "options": [
      "A.Only by increasing the scale of economic development and accelerating the speed of economic development can more jobs be created.",
      "B.There is a certain relationship between the scale and speed of economic development and the social employment rate.",
      "C.If a person is unemployed, it will affect the life of himself and his family.",
      "D.Unemployed people are easily irritable, emotionally depressed, and deviant."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([unemployment_rate, social_stability, economic_scale, economic_speed, job_creation])\nrelationships = Function([variables] -> [bool])\n\n# Constraints\nrelationships(unemployment_rate) == high ::: Workers of state-owned enterprises are laid off and migrant workers enter the city, causing a high unemployment rate\nrelationships(social_stability) == threatened ::: High unemployment rate causes a great threat to social stability\nrelationships(economic_scale) == increase ::: We must increase the scale of economic development\nrelationships(economic_speed) == accelerate ::: We must accelerate the speed of economic development\n\n# Options\nQuestion ::: Which of the following provides the strongest support for the argument in the question stem?\nis_strongest_support(relationships(job_creation) == increase) ::: (A) Only by increasing the scale of economic development and accelerating the speed of economic development can more jobs be created.\nis_strongest_support(Exists([r:relationships], r(economic_scale) == r(social_stability))) ::: (B) There is a certain relationship between the scale and speed of economic development and the social employment rate.\nis_strongest_support(relationships(unemployment_rate) == affects_life) ::: (C) If a person is unemployed, it will affect the life of himself and his family.\nis_strongest_support(relationships(unemployment_rate) == emotional_impact) ::: (D) Unemployed people are easily irritable, emotionally depressed, and deviant."
    ]
  },
  {
    "id": 143,
    "context": "There are six switches S, T, W, X, Y, and Z in a circuit.The following conditions must be met when using these switches? (1) If W is on, then X must be on; (2) Only off Turn on S to turn off T; (3) T and X cannot be connected at the same time, nor can they be turned off at the same time; (4) If Y and Z are turned on at the same time, then W must also be turned on.",
    "question": "If S and Z are now connected at the same time, which of the following must be true?",
    "answer": "A",
    "options": [
      "A.T is the on state and Y is the off state.",
      "C.Both T and Y are off.",
      "B.Both W and T are on.",
      "D.X is the on state and Y is the off state."
    ],
    "raw_logic_programs": [
      "# Declarations\nswitches = EnumSort([S, T, W, X, Y, Z])\nstate = EnumSort([on, off])\nis_on = Function([switches] -> [state])\n\n# Constraints\nImplies(is_on(W) == on, is_on(X) == on) ::: If W is on, then X must be on\nImplies(is_on(S) == on, is_on(T) == off) ::: Only off Turn on S to turn off T\nNot(And(is_on(T) == on, is_on(X) == on)) ::: T and X cannot be connected at the same time\nNot(And(is_on(T) == off, is_on(X) == off)) ::: T and X cannot be turned off at the same time\nImplies(And(is_on(Y) == on, is_on(Z) == on), is_on(W) == on) ::: If Y and Z are turned on at the same time, then W must also be turned on\n\n# Options\nAnd(is_on(S) == on, is_on(Z) == on) ::: If S and Z are now connected at the same time\n\n# Options\nQuestion ::: Which of the following must be true?\nis_must_true(And(is_on(T) == on, is_on(Y) == off)) ::: (A)\nis_must_true(And(is_on(W) == on, is_on(T) == on)) ::: (B)\nis_must_true(And(is_on(T) == off, is_on(Y) == off)) ::: (C)\nis_must_true(And(is_on(X) == on, is_on(Y) == off)) ::: (D)"
    ]
  },
  {
    "id": 144,
    "context": "There are 7 heart disease patients E, F, G, H, I, J, K to be assigned to 4 doctors for treatment, they are Dr.Zhang, Dr.Li, Dr.Wang and Dr.Liu.Only one doctor is responsible for each patient, and each doctor is responsible for the treatment of up to two patients.Among the patients, J and K are children, and the remaining 5 are adults; E, F, and J are males, and the remaining 4 are females.The following conditions must be met? (1) Dr.Zhang is only responsible for treating male patients.(2) Dr.Li can only be responsible for the treatment of 1 patient.(3) If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child.",
    "question": "Based on the above conditions, which of the following must be true?",
    "answer": "C",
    "options": [
      "A.Doctor F is responsible for treatment.",
      "C.J is treated by Dr.Zhang.",
      "B.C is treated by Dr.Liu.",
      "D.H is treated by Dr.Wang."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([E, F, G, H, I, J, K])\ndoctors = EnumSort([Zhang, Li, Wang, Liu])\ngenders = EnumSort([male, female])\nages = EnumSort([adult, child])\nassigned = Function([patients] -> [doctors])\ngender = Function([patients] -> [genders])\nage = Function([patients] -> [ages])\n\n# Constraints\nForAll([p:patients], Exists([d:doctors], assigned(p) == d)) ::: Each patient is assigned to exactly one doctor\nForAll([d:doctors], Count([p:patients], assigned(p) == d) <= 2) ::: Each doctor is responsible for the treatment of up to two patients\nForAll([p:patients], Implies(assigned(p) == Zhang, gender(p) == male)) ::: Dr.Zhang is only responsible for treating male patients\nCount([p:patients], assigned(p) == Li) == 1 ::: Dr.Li can only be responsible for the treatment of 1 patient\nForAll([d:doctors], Implies(Exists([p:patients], And(age(p) == child, assigned(p) == d)), Exists([p:patients], And(age(p) == adult, gender(p) == gender(p), assigned(p) == d)))) ::: If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child\n\n# Patient details\ngender(E) == male\ngender(F) == male\ngender(G) == female\ngender(H) == female\ngender(I) == female\ngender(J) == male\ngender(K) == female\n\nage(E) == adult\nage(F) == adult\nage(G) == adult\nage(H) == adult\nage(I) == adult\nage(J) == child\nage(K) == child\n\n# Options\nQuestion ::: Based on the above conditions, which of the following must be true?\nis_must_true(assigned(F) == Liu) ::: (A)\nis_must_true(assigned(J) == Zhang) ::: (C)\nis_must_true(assigned(C) == Liu) ::: (B)\nis_must_true(assigned(H) == Wang) ::: (D)"
    ]
  },
  {
    "id": 145,
    "context": "There are 7 heart disease patients E, F, G, H, I, J, K to be assigned to 4 doctors for treatment, they are Dr.Zhang, Dr.Li, Dr.Wang and Dr.Liu.Only one doctor is responsible for each patient, and each doctor is responsible for the treatment of up to two patients.Among the patients, J and K are children, and the remaining 5 are adults; E, F, and J are males, and the remaining 4 are females.The following conditions must be met? (1) Dr.Zhang is only responsible for treating male patients.(2) Dr.Li can only be responsible for the treatment of 1 patient.(3) If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child.",
    "question": "Each of the following patients can be treated by Dr.Li, except which one?",
    "answer": "D",
    "options": [
      "A.E",
      "B.G",
      "C.I",
      "D.K"
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([E, F, G, H, I, J, K])\ndoctors = EnumSort([Zhang, Li, Wang, Liu])\ngender = EnumSort([male, female])\nage_group = EnumSort([adult, child])\nassigned = Function([patients] -> [doctors])\npatient_gender = Function([patients] -> [gender])\npatient_age = Function([patients] -> [age_group])\n\n# Constraints\nForAll([p:patients], Exists([d:doctors], assigned(p) == d)) ::: Each patient is assigned to exactly one doctor\nForAll([d:doctors], Count([p:patients], assigned(p) == d) <= 2) ::: Each doctor is responsible for the treatment of up to two patients\nForAll([p:patients], Implies(assigned(p) == Zhang, patient_gender(p) == male)) ::: Dr.Zhang is only responsible for treating male patients\nCount([p:patients], assigned(p) == Li) == 1 ::: Dr.Li can only be responsible for the treatment of 1 patient\nForAll([d:doctors], Implies(Exists([p:patients], And(patient_age(p) == child, assigned(p) == d)), Exists([p2:patients], And(patient_age(p2) == adult, patient_gender(p2) == patient_gender(p), assigned(p2) == d)))) ::: If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child\n\n# Patient details\npatient_gender(E) == male\npatient_gender(F) == male\npatient_gender(G) == female\npatient_gender(H) == female\npatient_gender(I) == female\npatient_gender(J) == male\npatient_gender(K) == female\n\npatient_age(E) == adult\npatient_age(F) == adult\npatient_age(G) == adult\npatient_age(H) == adult\npatient_age(I) == adult\npatient_age(J) == child\npatient_age(K) == child\n\n# Options\nQuestion ::: Each of the following patients can be treated by Dr.Li, except which one?\nis_unsat(assigned(E) == Li) ::: (A)\nis_unsat(assigned(G) == Li) ::: (B)\nis_unsat(assigned(I) == Li) ::: (C)\nis_unsat(assigned(K) == Li) ::: (D)"
    ]
  },
  {
    "id": 146,
    "context": "There are 7 heart disease patients E, F, G, H, I, J, K to be assigned to 4 doctors for treatment, they are Dr.Zhang, Dr.Li, Dr.Wang and Dr.Liu.Only one doctor is responsible for each patient, and each doctor is responsible for the treatment of up to two patients.Among the patients, J and K are children, and the remaining 5 are adults; E, F, and J are males, and the remaining 4 are females.The following conditions must be met? (1) Dr.Zhang is only responsible for treating male patients.(2) Dr.Li can only be responsible for the treatment of 1 patient.(3) If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child.",
    "question": "If E is treated by Dr.Wang, which of the following must be true?",
    "answer": "C",
    "options": [
      "A.Doctor F is responsible for treatment.",
      "C.H is treated by Dr.Liu.",
      "B.G is treated by Dr.Wang.",
      "D.K is treated by Dr.Liu."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([E, F, G, H, I, J, K])\ndoctors = EnumSort([Dr_Zhang, Dr_Li, Dr_Wang, Dr_Liu])\ngenders = EnumSort([male, female])\nages = EnumSort([adult, child])\nassigned = Function([patients] -> [doctors])\ngender = Function([patients] -> [genders])\nage = Function([patients] -> [ages])\n\n# Constraints\nForAll([p:patients], Exists([d:doctors], assigned(p) == d)) ::: Each patient is assigned to exactly one doctor\nForAll([d:doctors], Count([p:patients], assigned(p) == d) <= 2) ::: Each doctor is responsible for the treatment of up to two patients\nForAll([p:patients], Implies(assigned(p) == Dr_Zhang, gender(p) == male)) ::: Dr.Zhang is only responsible for treating male patients\nCount([p:patients], assigned(p) == Dr_Li) == 1 ::: Dr.Li can only be responsible for the treatment of 1 patient\nForAll([d:doctors], ForAll([p:patients], Implies(And(age(p) == child, assigned(p) == d), Exists([a:patients], And(age(a) == adult, gender(a) == gender(p), assigned(a) == d))))) ::: If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child\n\n# Additional Information\ngender(E) == male\ngender(F) == male\ngender(G) == female\ngender(H) == female\ngender(I) == female\ngender(J) == male\ngender(K) == female\n\nage(E) == adult\nage(F) == adult\nage(G) == adult\nage(H) == adult\nage(I) == adult\nage(J) == child\nage(K) == child\n\nassigned(E) == Dr_Wang ::: If E is treated by Dr.Wang\n\n# Options\nQuestion ::: Which of the following must be true?\nis_must_true(assigned(F) == Dr_Wang) ::: (A)\nis_must_true(assigned(G) == Dr_Wang) ::: (B)\nis_must_true(assigned(H) == Dr_Liu) ::: (C)\nis_must_true(assigned(K) == Dr_Liu) ::: (D)"
    ]
  },
  {
    "id": 147,
    "context": "There are 7 heart disease patients E, F, G, H, I, J, K to be assigned to 4 doctors for treatment, they are Dr.Zhang, Dr.Li, Dr.Wang and Dr.Liu.Only one doctor is responsible for each patient, and each doctor is responsible for the treatment of up to two patients.Among the patients, J and K are children, and the remaining 5 are adults; E, F, and J are males, and the remaining 4 are females.The following conditions must be met? (1) Dr.Zhang is only responsible for treating male patients.(2) Dr.Li can only be responsible for the treatment of 1 patient.(3) If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child.",
    "question": "If Dr.Li is responsible for the treatment of G, which of the following may be true?",
    "answer": "B",
    "options": [
      "A.Dr.Liu is responsible for the treatment of E and F.",
      "C.H and I are treated by Dr.Liu.",
      "B.I and K are treated by Dr.Wang.",
      "D.Dr.Wang is responsible for the treatment of E and K."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([E, F, G, H, I, J, K])\ndoctors = EnumSort([Dr_Zhang, Dr_Li, Dr_Wang, Dr_Liu])\ngenders = EnumSort([male, female])\nages = EnumSort([adult, child])\nassigned = Function([patients] -> [doctors])\ngender = Function([patients] -> [genders])\nage = Function([patients] -> [ages])\n\n# Constraints\nForAll([p:patients], Or(assigned(p) == Dr_Zhang, assigned(p) == Dr_Li, assigned(p) == Dr_Wang, assigned(p) == Dr_Liu)) ::: Each patient is assigned to one doctor\nForAll([d:doctors], Count([p:patients], assigned(p) == d) <= 2) ::: Each doctor is responsible for the treatment of up to two patients\nForAll([p:patients], Or(gender(p) == male, gender(p) == female)) ::: Each patient has a gender\nForAll([p:patients], Or(age(p) == adult, age(p) == child)) ::: Each patient has an age\nAnd(gender(E) == male, gender(F) == male, gender(J) == male, gender(G) == female, gender(H) == female, gender(I) == female, gender(K) == female) ::: Gender of each patient\nAnd(age(J) == child, age(K) == child, age(E) == adult, age(F) == adult, age(G) == adult, age(H) == adult, age(I) == adult) ::: Age of each patient\nForAll([p:patients], Implies(assigned(p) == Dr_Zhang, gender(p) == male)) ::: Dr.Zhang is only responsible for treating male patients\nCount([p:patients], assigned(p) == Dr_Li) == 1 ::: Dr.Li can only be responsible for the treatment of 1 patient\nForAll([d:doctors], Implies(Exists([p:patients], And(assigned(p) == d, age(p) == child)), Exists([p:patients], And(assigned(p) == d, age(p) == adult, gender(p) == gender(p))))) ::: If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child\nassigned(G) == Dr_Li ::: Dr.Li is responsible for the treatment of G\n\n# Options\nQuestion ::: If Dr.Li is responsible for the treatment of G, which of the following may be true?\nis_sat(And(assigned(E) == Dr_Liu, assigned(F) == Dr_Liu)) ::: (A)\nis_sat(And(assigned(H) == Dr_Liu, assigned(I) == Dr_Liu)) ::: (C)\nis_sat(And(assigned(I) == Dr_Wang, assigned(K) == Dr_Wang)) ::: (B)\nis_sat(And(assigned(E) == Dr_Wang, assigned(K) == Dr_Wang)) ::: (D)"
    ]
  },
  {
    "id": 148,
    "context": "There are 7 heart disease patients E, F, G, H, I, J, K to be assigned to 4 doctors for treatment, they are Dr.Zhang, Dr.Li, Dr.Wang and Dr.Liu.Only one doctor is responsible for each patient, and each doctor is responsible for the treatment of up to two patients.Among the patients, J and K are children, and the remaining 5 are adults; E, F, and J are males, and the remaining 4 are females.The following conditions must be met? (1) Dr.Zhang is only responsible for treating male patients.(2) Dr.Li can only be responsible for the treatment of 1 patient.(3) If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child.",
    "question": "According to the question, which of the following must be true?",
    "answer": "A",
    "options": [
      "A.Dr.Wang is responsible for treating at least one female patient.",
      "B.Dr.Wang is responsible for treating at least one child patient.",
      "C.Dr.Liu is responsible for treating at least one male patient.",
      "D.Dr.Liu is responsible for treating at least one child patient."
    ],
    "raw_logic_programs": [
      "# Declarations\npatients = EnumSort([E, F, G, H, I, J, K])\ndoctors = EnumSort([Zhang, Li, Wang, Liu])\ngenders = EnumSort([male, female])\nages = EnumSort([adult, child])\nassigned = Function([patients] -> [doctors])\ngender = Function([patients] -> [genders])\nage = Function([patients] -> [ages])\n\n# Constraints\nForAll([p:patients], Exists([d:doctors], assigned(p) == d)) ::: Each patient is assigned to exactly one doctor\nForAll([d:doctors], Count([p:patients], assigned(p) == d) <= 2) ::: Each doctor is responsible for the treatment of up to two patients\nForAll([p:patients], Implies(assigned(p) == Zhang, gender(p) == male)) ::: Dr.Zhang is only responsible for treating male patients\nCount([p:patients], assigned(p) == Li) == 1 ::: Dr.Li can only be responsible for the treatment of 1 patient\nForAll([d:doctors], Implies(Exists([p:patients], And(assigned(p) == d, age(p) == child)), Exists([p:patients], And(assigned(p) == d, age(p) == adult, gender(p) == gender(p))))) ::: If a doctor is responsible for treating a child patient, then he must be responsible for the treatment of an adult patient of the same sex as the child\n\n# Patient details\ngender(E) == male\ngender(F) == male\ngender(G) == female\ngender(H) == female\ngender(I) == female\ngender(J) == male\ngender(K) == female\n\nage(E) == adult\nage(F) == adult\nage(G) == adult\nage(H) == adult\nage(I) == adult\nage(J) == child\nage(K) == child\n\n# Options\nQuestion ::: According to the question, which of the following must be true?\nis_must_true(Exists([p:patients], And(assigned(p) == Wang, gender(p) == female))) ::: (A) Dr.Wang is responsible for treating at least one female patient.\nis_must_true(Exists([p:patients], And(assigned(p) == Wang, age(p) == child))) ::: (B) Dr.Wang is responsible for treating at least one child patient.\nis_must_true(Exists([p:patients], And(assigned(p) == Liu, gender(p) == male))) ::: (C) Dr.Liu is responsible for treating at least one male patient.\nis_must_true(Exists([p:patients], And(assigned(p) == Liu, age(p) == child))) ::: (D) Dr.Liu is responsible for treating at least one child patient."
    ]
  },
  {
    "id": 149,
    "context": "Three Chinese students Zhang Lin, Zhao Qiang, Li Shan and three foreign students John, Jesse, and Anna went on a summer vacation.Alternative tourist destinations include Xi'an, Hangzhou, Dalian and Zhangjiajie.It is already known that? (1) each person can only go to one place; (2) wherever Chinese students go, foreign students must go; (3) where there are foreign students, Chinese students must go; (4) John went to Xi'an or Hangzhou, and Zhao Qiang went to Zhangjiajie.",
    "question": "If Jesse goes to Dalian, which of the following must be true?",
    "answer": "A",
    "options": [
      "A.Anna went to Zhangjiajie.",
      "C.Li Shan went to Xi'an.",
      "B.Zhang Lin went to Dalian.",
      "D.John went to Hangzhou."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Zhang_Lin, Zhao_Qiang, Li_Shan, John, Jesse, Anna])\ndestinations = EnumSort([Xian, Hangzhou, Dalian, Zhangjiajie])\ngoes_to = Function([students] -> [destinations])\n\n# Constraints\nForAll([s:students], Exists([d:destinations], goes_to(s) == d)) ::: each person can only go to one place\nForAll([d:destinations], Implies(Exists([s:students], And(s in [Zhang_Lin, Zhao_Qiang, Li_Shan], goes_to(s) == d)), ForAll([f:students], Implies(f in [John, Jesse, Anna], goes_to(f) == d)))) ::: wherever Chinese students go, foreign students must go\nForAll([d:destinations], Implies(Exists([f:students], And(f in [John, Jesse, Anna], goes_to(f) == d)), ForAll([s:students], Implies(s in [Zhang_Lin, Zhao_Qiang, Li_Shan], goes_to(s) == d)))) ::: where there are foreign students, Chinese students must go\nOr(goes_to(John) == Xian, goes_to(John) == Hangzhou) ::: John went to Xi'an or Hangzhou\ngoes_to(Zhao_Qiang) == Zhangjiajie ::: Zhao Qiang went to Zhangjiajie\n\n# Options\nQuestion ::: If Jesse goes to Dalian, which of the following must be true?\nis_valid(goes_to(Jesse) == Dalian) -> goes_to(Anna) == Zhangjiajie ::: (A) Anna went to Zhangjiajie\nis_valid(goes_to(Jesse) == Dalian) -> goes_to(Zhang_Lin) == Dalian ::: (B) Zhang Lin went to Dalian\nis_valid(goes_to(Jesse) == Dalian) -> goes_to(Li_Shan) == Xian ::: (C) Li Shan went to Xi'an\nis_valid(goes_to(Jesse) == Dalian) -> goes_to(John) == Hangzhou ::: (D) John went to Hangzhou"
    ]
  },
  {
    "id": 150,
    "context": "Three Chinese students Zhang Lin, Zhao Qiang, Li Shan and three foreign students John, Jesse, and Anna went on a summer vacation.Alternative tourist destinations include Xi'an, Hangzhou, Dalian and Zhangjiajie.It is already known that? (1) each person can only go to one place; (2) wherever Chinese students go, foreign students must go; (3) where there are foreign students, Chinese students must go; (4) John went to Xi'an or Hangzhou, and Zhao Qiang went to Zhangjiajie.",
    "question": "If the conclusion of the question is true, which two people cannot go to Hangzhou at the same time?",
    "answer": "C",
    "options": [
      "A.Zhang Lin and Li Shan",
      "B.Li Shan and Anna",
      "C.Jesse and Anna",
      "D.Zhang Lin and Jessie"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Zhang_Lin, Zhao_Qiang, Li_Shan, John, Jesse, Anna])\ndestinations = EnumSort([Xian, Hangzhou, Dalian, Zhangjiajie])\nvisits = Function([students] -> [destinations])\n\n# Constraints\nForAll([s:students], Exists([d:destinations], visits(s) == d)) ::: each person can only go to one place\nForAll([d:destinations], Implies(Exists([s:students], And(s in [Zhang_Lin, Zhao_Qiang, Li_Shan], visits(s) == d)), Exists([s:students], And(s in [John, Jesse, Anna], visits(s) == d)))) ::: wherever Chinese students go, foreign students must go\nForAll([d:destinations], Implies(Exists([s:students], And(s in [John, Jesse, Anna], visits(s) == d)), Exists([s:students], And(s in [Zhang_Lin, Zhao_Qiang, Li_Shan], visits(s) == d)))) ::: where there are foreign students, Chinese students must go\nOr(visits(John) == Xian, visits(John) == Hangzhou) ::: John went to Xi'an or Hangzhou\nvisits(Zhao_Qiang) == Zhangjiajie ::: Zhao Qiang went to Zhangjiajie\n\n# Options\nQuestion ::: If the conclusion of the question is true, which two people cannot go to Hangzhou at the same time?\nis_unsat(And(visits(Zhang_Lin) == Hangzhou, visits(Li_Shan) == Hangzhou)) ::: (A)\nis_unsat(And(visits(Li_Shan) == Hangzhou, visits(Anna) == Hangzhou)) ::: (B)\nis_unsat(And(visits(Jesse) == Hangzhou, visits(Anna) == Hangzhou)) ::: (C)\nis_unsat(And(visits(Zhang_Lin) == Hangzhou, visits(Jesse) == Hangzhou)) ::: (D)"
    ]
  },
  {
    "id": 151,
    "context": "Xiao Qiang and Xiao Gang are two brothers.Xiao Qiang's study time is longer than that of Xiao Gang's, and Xiao Qiang has more books than Xiao Gang.",
    "question": "Based on the question, can you determine which of the following options is true?",
    "answer": "D",
    "options": [
      "A.Xiao Qiang's knowledge is richer than Xiao Gang's.",
      "B.Xiao Qiang himself is smarter than Xiao Gang.",
      "C.Xiao Qiang's treatment of life is more effective than Xiao Gang's treatment.",
      "D.The information in the question stem is not enough to compare the difference between Xiao Qiang and Xiao Gang in other aspects."
    ],
    "raw_logic_programs": [
      "# Declarations\nbrothers = EnumSort([Xiao_Qiang, Xiao_Gang])\nattributes = EnumSort([study_time, number_of_books])\ncomparison = Function([brothers, attributes] -> [int])\n\n# Constraints\ncomparison(Xiao_Qiang, study_time) > comparison(Xiao_Gang, study_time) ::: Xiao Qiang's study time is longer than that of Xiao Gang's\ncomparison(Xiao_Qiang, number_of_books) > comparison(Xiao_Gang, number_of_books) ::: Xiao Qiang has more books than Xiao Gang\n\n# Options\nQuestion ::: Based on the question, can you determine which of the following options is true?\nis_true(knowledge(Xiao_Qiang) > knowledge(Xiao_Gang)) ::: (A) Xiao Qiang's knowledge is richer than Xiao Gang's.\nis_true(smartness(Xiao_Qiang) > smartness(Xiao_Gang)) ::: (B) Xiao Qiang himself is smarter than Xiao Gang.\nis_true(effectiveness(Xiao_Qiang) > effectiveness(Xiao_Gang)) ::: (C) Xiao Qiang's treatment of life is more effective than Xiao Gang's treatment.\nis_true(Not(Exists([attr:attributes], comparison(Xiao_Qiang, attr) != comparison(Xiao_Gang, attr)))) ::: (D) The information in the question stem is not enough to compare the difference between Xiao Qiang and Xiao Gang in other aspects."
    ]
  },
  {
    "id": 152,
    "context": "The fact that the Chinese women's volleyball team won the Athens Olympics has made us understand many truths.For example, when failure is not the final fact, you must not easily accept failure! When there is a faint hope of victory, we still have to do our best to fight for victory! Otherwise, it is not a real powerhouse.",
    "question": "Which of the following options can be derived from the above questions?",
    "answer": "B",
    "options": [
      "A.The real strong will never accept failure.",
      "B.Only when failure becomes a fact that cannot be changed, the real strong will accept failure.",
      "C.Losers will easily accept failure.",
      "D.As the song that the female line sings loves to say, the sunshine is always behind the wind and rain."
    ],
    "raw_logic_programs": [
      "# Declarations\ntruths = EnumSort([failure_not_final, fight_for_victory, real_powerhouse])\nstatements = EnumSort([A, B, C, D])\nderived = Function([statements] -> [bool])\n\n# Constraints\nderived(A) == False ::: The real strong will never accept failure is not directly supported by the problem statement.\nderived(B) == True ::: Only when failure becomes a fact that cannot be changed, the real strong will accept failure is supported by the idea that failure should not be accepted if it is not final.\nderived(C) == False ::: Losers will easily accept failure is not directly supported by the problem statement.\nderived(D) == False ::: The statement about the song is not directly related to the truths derived from the problem statement.\n\n# Options\nQuestion ::: Which of the following options can be derived from the above questions?\nis_derived(derived(A)) ::: (A)\nis_derived(derived(B)) ::: (B)\nis_derived(derived(C)) ::: (C)\nis_derived(derived(D)) ::: (D)"
    ]
  },
  {
    "id": 153,
    "context": "A rare and endangered animal of the northern salamander in Xinjiang.It was first discovered by a Russian explorer in 1840, but disappeared for more than 100 years.It was rediscovered in Hot Spring County, Xinjiang in 1898.But the data shows that in the 15 years since 1898, the number of northern salamanders in Xinjiang has been reduced by half.Some experts believe that the habitat of the northern salamander in Xinjiang was originally a local pasture, and the cattle and sheep walking around on the grassland in summer will trample them to death, resulting in a sharp decline in their numbers.",
    "question": "Which of the following is true will raise the most doubts about the opinions of the above experts?",
    "answer": "B",
    "options": [
      "A.In 1997, the 'Hot Spring Xinjiang Northern Salamander Nature Reserve' was established, and local herders' awareness of protecting Xinjiang Northern Salamander is increasing.",
      "B.In recent years, the rainfall has decreased and the groundwater level has fallen, which has affected the water source environment in which the northern salamander in Xinjiang lives.",
      "C.Xinjiang salamander is a kind of animal that is afraid of light.Most of them hide under the rocks of the creek during the day, and avoid the trampling of cattle and sheep.",
      "D.Xinjiang's northern salamanders are located in the mountains, and most tourists cannot enter at all."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ndoubts = Function([statements] -> [bool])\n\n# Constraints\ndoubts(A) == False ::: The establishment of a nature reserve and increased awareness would support the experts' opinions, not raise doubts.\ndoubts(B) == False ::: Decreased rainfall and groundwater levels affecting the salamander's habitat would support the experts' opinions, not raise doubts.\ndoubts(C) == True ::: If the salamanders hide under rocks and avoid trampling, it raises doubts about the experts' opinion that trampling by cattle and sheep is the main cause of their decline.\ndoubts(D) == False ::: The inaccessibility of the salamanders' habitat to tourists does not directly address the experts' opinion about cattle and sheep trampling.\n\n# Options\nQuestion ::: Which of the following is true will raise the most doubts about the opinions of the above experts?\nis_true(doubts(A)) ::: (A)\nis_true(doubts(B)) ::: (B)\nis_true(doubts(C)) ::: (C)\nis_true(doubts(D)) ::: (D)"
    ]
  },
  {
    "id": 154,
    "context": "Essayist? Wisdom and cleverness are desirable qualities.However, being smart does not mean that he is very smart, and being smart does not mean that he is very smart.Some of the people I met were smart and some were wise, but no one possessed both qualities.",
    "question": "If the essayist's statement is true, which of the following options cannot be true?",
    "answer": "A",
    "options": [
      "A.No one is smart but no wisdom, and no one is smart but not smart.",
      "B.Most people are smart and wise.",
      "C.No one is smart and wise.",
      "D.Most people are neither smart nor wise."
    ],
    "raw_logic_programs": [
      "# Declarations\nqualities = EnumSort([smart, wise])\npeople = EnumSort([person1, person2, person3, person4, person5])  # Assume a finite set of people for simplicity\nhas_quality = Function([people, qualities] -> [bool])\n\n# Constraints\nForAll([p:people], Not(And(has_quality(p, smart), has_quality(p, wise)))) ::: No one possesses both qualities\n\n# Options\nQuestion ::: If the essayist's statement is true, which of the following options cannot be true?\nis_unsat(ForAll([p:people], Or(Not(has_quality(p, smart)), Not(has_quality(p, wise))))) ::: (A) No one is smart but no wisdom, and no one is smart but not smart.\nis_unsat(Count([p:people], And(has_quality(p, smart), has_quality(p, wise))) > len(people) / 2) ::: (B) Most people are smart and wise.\nis_unsat(ForAll([p:people], Not(And(has_quality(p, smart), has_quality(p, wise))))) ::: (C) No one is smart and wise.\nis_unsat(Count([p:people], Not(Or(has_quality(p, smart), has_quality(p, wise)))) > len(people) / 2) ::: (D) Most people are neither smart nor wise."
    ]
  },
  {
    "id": 155,
    "context": "In response to whether Iraq actually possessed weapons of mass destruction or just attempted to acquire them, US President Bush said? 'Is there any difference? If he acquires these weapons, he will become more dangerous.He is' The threat that the United States should resolve after the 9.11 incident.For 12 years, the world has been saying that he is very dangerous, and we have only solved this danger until now.The actual possession of weapons of mass destruction is not different from the one he had planned to possess weapons of mass destruction.",
    "question": "Which of the following options does not apply to Bush 's logic?",
    "answer": "D",
    "options": [
      "A.If you did not think about accepting bribes, it would mean that Bush actually accepted the bribe.",
      "B.Bin Laden wants to be a good person, meaning Bin Laden is a good person.",
      "C.The United States thinks that the '9.11 incident' did not happen, and the '9.11 incident' really did not happen.",
      "D.If the Iraq War is not waged, there will be no more than 1,000 Americans killed in Iraq."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\napplies_to_logic = Function([statements] -> [bool])\n\n# Constraints\n# Bush's logic equates the intention or attempt to possess weapons with actual possession.\n# Therefore, statements that equate intention with reality would apply to Bush's logic.\n\n# Options\nQuestion ::: Which of the following options does not apply to Bush's logic?\nis_not_applicable(applies_to_logic(A)) ::: (A) If you did not think about accepting bribes, it would mean that Bush actually accepted the bribe.\nis_not_applicable(applies_to_logic(B)) ::: (B) Bin Laden wants to be a good person, meaning Bin Laden is a good person.\nis_not_applicable(applies_to_logic(C)) ::: (C) The United States thinks that the '9.11 incident' did not happen, and the '9.11 incident' really did not happen.\nis_not_applicable(applies_to_logic(D)) ::: (D) If the Iraq War is not waged, there will be no more than 1,000 Americans killed in Iraq."
    ]
  },
  {
    "id": 156,
    "context": "There are six statements A.B, C, D, E, and F in a database, but this database is currently uncoordinated, and certain statements must be deleted to restore the coordination of the database.Known? (1) If statement A is retained, then statement B and statement C must be retained.(2) If statement E is retained, statement D and statement C must be deleted at the same time.(3) Statement F can only be retained if statement E is retained.(4) Statement A is important information and cannot be deleted.",
    "question": "If the above items are true, which of the following must be true?",
    "answer": "D",
    "options": [
      "A.Keep statement E and delete statement C.",
      "B.At the same time retain the statement C and statement D.",
      "C.Keep statement E and delete statement D.",
      "D.Delete statement E and statement F at the same time."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D, E, F])\nretained = Function([statements] -> [bool])\n\n# Constraints\nretained(A) == True ::: Statement A is important information and cannot be deleted\nImplies(retained(A), And(retained(B), retained(C))) ::: If statement A is retained, then statement B and statement C must be retained\nImplies(retained(E), And(Not(retained(D)), Not(retained(C)))) ::: If statement E is retained, statement D and statement C must be deleted at the same time\nImplies(retained(F), retained(E)) ::: Statement F can only be retained if statement E is retained\n\n# Options\nQuestion ::: If the above items are true, which of the following must be true?\nis_must_true(And(retained(E), Not(retained(C)))) ::: (A) Keep statement E and delete statement C.\nis_must_true(And(retained(C), retained(D))) ::: (B) At the same time retain the statement C and statement D.\nis_must_true(And(retained(E), Not(retained(D)))) ::: (C) Keep statement E and delete statement D.\nis_must_true(And(Not(retained(E)), Not(retained(F)))) ::: (D) Delete statement E and statement F at the same time."
    ]
  },
  {
    "id": 157,
    "context": "The brain tissue of animals with behavior disorder contains a large amount of aluminum.Because a silicon-based compound can fix these aluminum elements and prevent them from affecting brain tissue, this compound can be used to treat behavioral disorders in animals.",
    "question": "The above argument is based on which of the following unstated premises?",
    "answer": "B",
    "options": [
      "A.There are no side effects after introducing these silicon-based compounds into the brain.",
      "B.These aluminum elements are the cause of behavior disorder, not the result.",
      "C.Different kinds of animals require different amounts of silicon-based compounds for treatment.",
      "D.Normal animal brain tissue does not contain aluminum."
    ],
    "raw_logic_programs": [
      "# Declarations\nelements = EnumSort([aluminum, silicon_based_compound])\nconditions = EnumSort([behavior_disorder, normal])\nanimals = EnumSort([animal])\ncauses = Function([elements, conditions] -> [bool])\ntreats = Function([elements, conditions] -> [bool])\n\n# Constraints\ncauses(aluminum, behavior_disorder) ::: The brain tissue of animals with behavior disorder contains a large amount of aluminum\ntreats(silicon_based_compound, behavior_disorder) ::: A silicon-based compound can fix these aluminum elements and prevent them from affecting brain tissue\n\n# Options\nQuestion ::: The above argument is based on which of the following unstated premises?\nis_unstated(ForAll([a:animals], Not(causes(silicon_based_compound, normal)))) ::: (A)\nis_unstated(ForAll([a:animals], causes(aluminum, behavior_disorder))) ::: (B)\nis_unstated(Exists([a:animals], treats(silicon_based_compound, behavior_disorder))) ::: (C)\nis_unstated(ForAll([a:animals], Not(causes(aluminum, normal)))) ::: (D)"
    ]
  },
  {
    "id": 158,
    "context": "Wedding seeing, love seeing; love letter seeing, missing seeing, flower seeing, spring seeing; fruit seeing, nutrition seeing; helping seeing, caring seeing; windy seeing The air is invisible; the diploma is invisible and the level is invisible.Someone concluded from this that things that are invisible are more valuable than things that are visible.",
    "question": "Which of the following options uses the same reasoning method as in the question stem?",
    "answer": "B",
    "options": [
      "A.Triangles can be divided into three types? right triangle, obtuse triangle, and acute triangle.The sum of three internal angles of a right triangle is equal to 180 â„ƒ, the sum of three internal angles of an obtuse triangle is equal to 180 â„ƒ, and the sum of three internal angles of an acute triangle is equal to 180 â„ƒ, so the sum of the triangles of all triangles is equal to 180 â„ƒ.",
      "B.I like 'accidental' to 'necessary'.You see, the Olympic Games are full of suspense, so the competition is exciting; most of the artist 's creations come from 'spirit'.Scientists 'discoveries and inventions are often connected with' intuition ',' epiphany 'and' opportunity '; in the vast crowd Occasionally and encounter 'he' or 'she', shoot each other Cupid's arrow, to achieve the best marriage in life.Therefore, I love 'accidental', I want to shout 'Long live accidental'!",
      "C.Surgeons can see X-rays when performing surgery on patients, lawyers can view defense books when defending defendants, architects can compare design drawings when building a house, and teachers can read various reference books for class preparation.Why are students not allowed to Reading textbooks and other relevant materials during the exam?",
      "D.The roses are beautiful because all the words are beautiful."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([wedding, love, love_letter, missing, flower, spring, fruit, nutrition, helping, caring, windy, air, diploma, level])\nvisibility = EnumSort([visible, invisible])\nvalue = EnumSort([valuable, not_valuable])\nis_visible = Function([concepts] -> [visibility])\nis_valuable = Function([concepts] -> [value])\n\n# Constraints\nForAll([c:concepts], Implies(is_visible(c) == invisible, is_valuable(c) == valuable)) ::: things that are invisible are more valuable than things that are visible\n\n# Options\nQuestion ::: Which of the following options uses the same reasoning method as in the question stem?\nis_same_reasoning(ForAll([t:triangles], sum_of_angles(t) == 180)) ::: (A)\nis_same_reasoning(ForAll([events:events], Implies(is_accidental(events), is_preferred(events)))) ::: (B)\nis_same_reasoning(ForAll([professions:professions], Implies(can_use_resources(professions), should_allow_students(professions)))) ::: (C)\nis_same_reasoning(ForAll([objects:objects], Implies(is_beautiful(objects), is_beautiful(words)))) ::: (D)"
    ]
  },
  {
    "id": 159,
    "context": "In the 110-meter hurdles competition at the Olympic Games, Liu Xiang won the championship and broke the Olympic record, tying the world record.He said to reporters? 'Who said Asians can't be the sprint king ?! As long as I am there! You believe me!', 'Black athletes have been monopolizing this project for many years.Yellow-skinned athletes cannot be old Behind black athletes, from me, a new chapter will be written! '",
    "question": "The fact that Liu Xiang won the championship and his words do not constitute a rebuttal to which of the following assertions?",
    "answer": "C",
    "options": [
      "A.Only black athletes can become track and field champions.",
      "B.All sprint kings are not yellow-skinned players.",
      "C.Most track and field champions are black athletes.",
      "D.If who is the king of sprint, whoever has the African-black descent."
    ],
    "raw_logic_programs": [
      "# Declarations\nassertions = EnumSort([A, B, C, D])\nrebuttal = Function([assertions] -> [bool])\n\n# Constraints\nrebuttal(A) == False ::: Liu Xiang's win and words do not rebut the assertion that only black athletes can become track and field champions, as he is not black.\nrebuttal(B) == False ::: Liu Xiang's win and words do not rebut the assertion that all sprint kings are not yellow-skinned players, as he is yellow-skinned and a sprint king.\nrebuttal(C) == True ::: Liu Xiang's win and words could rebut the assertion that most track and field champions are black athletes, as he is not black.\nrebuttal(D) == False ::: Liu Xiang's win and words do not rebut the assertion that if someone is the king of sprint, they must have African-black descent, as he does not have African-black descent.\n\n# Options\nQuestion ::: The fact that Liu Xiang won the championship and his words do not constitute a rebuttal to which of the following assertions?\nis_true(rebuttal(A)) ::: (A)\nis_true(rebuttal(B)) ::: (B)\nis_true(rebuttal(C)) ::: (C)\nis_true(rebuttal(D)) ::: (D)"
    ]
  },
  {
    "id": 160,
    "context": "Some insects die after the first propagation of the larvae, while others can survive for a few years after their next generation is guaranteed survival.The latter insects include those that make a beneficial contribution to the ecosystem, such as bees.",
    "question": "Which of the following conclusions can be drawn from the above statement?",
    "answer": "C",
    "options": [
      "A.Insects that do not play a major role in the ecosystem usually die after the first reproduction.",
      "B.Most bees will live well after the next generation can live on their own.",
      "C.Bees usually do not die immediately after a reproduction.",
      "D.Most insects can live independently as soon as they are born and do not require the care of adult insects."
    ],
    "raw_logic_programs": [
      "# Declarations\ninsects = EnumSort([beneficial, non_beneficial])\nsurvival = Function([insects] -> [bool])\n\n# Constraints\nsurvival(beneficial) == True ::: Beneficial insects can survive for a few years after their next generation is guaranteed survival\nsurvival(non_beneficial) == False ::: Non-beneficial insects die after the first propagation of the larvae\n\n# Options\nQuestion ::: Which of the following conclusions can be drawn from the above statement?\nis_valid(ForAll([i:insects], Implies(Not(survival(i)), i == non_beneficial))) ::: (A) Insects that do not play a major role in the ecosystem usually die after the first reproduction.\nis_valid(survival(beneficial)) ::: (B) Most bees will live well after the next generation can live on their own.\nis_valid(survival(beneficial)) ::: (C) Bees usually do not die immediately after a reproduction.\nis_valid(False) ::: (D) Most insects can live independently as soon as they are born and do not require the care of adult insects."
    ]
  },
  {
    "id": 161,
    "context": "The media has recently been filled with gossip news about a celebrity, which puts the celebrity in an awkward situation? if she does not come forward to clarify and refute, those rumors will be believed by the public; if she comes forward to clarify and refute, This will attract more people's attention and make those gossip news spread faster and wider.This may be the price that celebrities have to pay.",
    "question": "If the statement in the stem is true, which of the following must be true?",
    "answer": "A",
    "options": [
      "A.The celebrity can't actually stop the gossip news from damaging her personal reputation.",
      "B.The reputation of a celebrity will not be affected by gossip news in the media.",
      "C.When faced with gossip news, the best strategy the celebrity can take is to clarify the truth.",
      "D.Some friends of the celebrity came forward to praise her, which would have a counter-effect."
    ],
    "raw_logic_programs": [
      "# Declarations\ncelebrity = EnumSort([celebrity])\nactions = EnumSort([do_nothing, clarify])\noutcomes = EnumSort([rumors_believed, attention_increased])\neffects = Function([celebrity, actions] -> [outcomes])\n\n# Constraints\nForAll([c:celebrity], Implies(effects(c, do_nothing) == rumors_believed, effects(c, clarify) == attention_increased)) ::: If she does not come forward to clarify and refute, those rumors will be believed by the public; if she comes forward to clarify and refute, this will attract more people's attention and make those gossip news spread faster and wider.\n\n# Options\nQuestion ::: If the statement in the stem is true, which of the following must be true?\nis_true(ForAll([c:celebrity], Or(effects(c, do_nothing) == rumors_believed, effects(c, clarify) == attention_increased))) ::: (A) The celebrity can't actually stop the gossip news from damaging her personal reputation.\nis_false(ForAll([c:celebrity], effects(c, do_nothing) == rumors_believed)) ::: (B) The reputation of a celebrity will not be affected by gossip news in the media.\nis_false(ForAll([c:celebrity], effects(c, clarify) == attention_increased)) ::: (C) When faced with gossip news, the best strategy the celebrity can take is to clarify the truth.\nis_undetermined(Exists([c:celebrity], effects(c, clarify) == attention_increased)) ::: (D) Some friends of the celebrity came forward to praise her, which would have a counter-effect."
    ]
  },
  {
    "id": 162,
    "context": "A tourist group travels to Mulan paddock.The members ride horses, archery, eat barbecue, and finally go to the shop to buy souvenirs.Known? (1) Someone bought a Mongolian knife.(2) Someone did not buy a Mongolian knife.(3) Both Mr.Zhang and Ms.Wang of the regiment bought Mongolian knives.",
    "question": "If only one of the above three sentences is true, which of the following must be true?",
    "answer": "A",
    "options": [
      "A.Neither Mr Zhang nor Ms Wang bought Mongolian knives.",
      "B.Mr.Zhang bought a Mongolian knife, but Ms.Wang did not.",
      "C.Mr.Li of the tour group bought a Mongolian knife.",
      "D.Both Mr Zhang and Ms Wang bought Mongolian knives."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Mr_Zhang, Ms_Wang, Mr_Li])\nbought_knife = Function([people] -> [bool])\n\n# Constraints\n# Known statements\nstatement1 = Exists([p:people], bought_knife(p))  # Someone bought a Mongolian knife\nstatement2 = Exists([p:people], Not(bought_knife(p)))  # Someone did not buy a Mongolian knife\nstatement3 = And(bought_knife(Mr_Zhang), bought_knife(Ms_Wang))  # Both Mr. Zhang and Ms. Wang bought Mongolian knives\n\n# Only one of the statements is true\nonly_one_true = Or(\n    And(statement1, Not(statement2), Not(statement3)),\n    And(Not(statement1), statement2, Not(statement3)),\n    And(Not(statement1), Not(statement2), statement3)\n)\n\n# Options\nQuestion ::: If only one of the above three sentences is true, which of the following must be true?\nis_must_true(And(Not(bought_knife(Mr_Zhang)), Not(bought_knife(Ms_Wang)))) ::: (A) Neither Mr Zhang nor Ms Wang bought Mongolian knives.\nis_must_true(And(bought_knife(Mr_Zhang), Not(bought_knife(Ms_Wang)))) ::: (B) Mr. Zhang bought a Mongolian knife, but Ms. Wang did not.\nis_must_true(bought_knife(Mr_Li)) ::: (C) Mr. Li of the tour group bought a Mongolian knife.\nis_must_true(And(bought_knife(Mr_Zhang), bought_knife(Ms_Wang))) ::: (D) Both Mr Zhang and Ms Wang bought Mongolian knives."
    ]
  },
  {
    "id": 163,
    "context": "Due to recent market changes, Green Island must increase productivity by 10% over the next two years, otherwise it will go bankrupt.In fact, from the perspective of Green Island's production and management structure, if it can increase productivity by 10%, then it can achieve the goal of increasing productivity by 20%.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.If Green Island cannot achieve its goal of increasing productivity by 20%, it will go bankrupt.",
      "B.In the next two years, if Green Island increases productivity by 20%, it will not go bankrupt.",
      "C.If the market does not change, Green Island does not need to increase productivity to prevent bankruptcy.",
      "D.In the next two years, Green Island may increase productivity by 10%, but it is impossible to achieve the goal of increasing by 20%."
    ],
    "raw_logic_programs": [
      "# Declarations\nproductivity_increase = EnumSort([increase_10, increase_20, no_increase])\nbankruptcy_status = EnumSort([bankrupt, not_bankrupt])\nmarket_change = EnumSort([changed, not_changed])\nachieve_goal = Function([productivity_increase] -> [bool])\nbankruptcy = Function([productivity_increase, market_change] -> [bankruptcy_status])\n\n# Constraints\nachieve_goal(increase_10) == True ::: If it can increase productivity by 10%, then it can achieve the goal of increasing productivity by 20%\nbankruptcy(increase_10, changed) == not_bankrupt ::: Green Island must increase productivity by 10% over the next two years, otherwise it will go bankrupt\nbankruptcy(no_increase, changed) == bankrupt ::: Green Island must increase productivity by 10% over the next two years, otherwise it will go bankrupt\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nImplies(Not(achieve_goal(increase_20)), bankruptcy(no_increase, changed) == bankrupt) ::: (A) If Green Island cannot achieve its goal of increasing productivity by 20%, it will go bankrupt.\nImplies(achieve_goal(increase_20), bankruptcy(increase_20, changed) == not_bankrupt) ::: (B) In the next two years, if Green Island increases productivity by 20%, it will not go bankrupt.\nImplies(market_change == not_changed, bankruptcy(no_increase, not_changed) == not_bankrupt) ::: (C) If the market does not change, Green Island does not need to increase productivity to prevent bankruptcy.\nImplies(achieve_goal(increase_10), Not(achieve_goal(increase_20))) ::: (D) In the next two years, Green Island may increase productivity by 10%, but it is impossible to achieve the goal of increasing by 20%."
    ]
  },
  {
    "id": 164,
    "context": "There is a toxin-producing microorganism that turns sea water into red.This phenomenon is called red tide.When the main food source of sea otters is contaminated with red tide toxins, sea otters will not forage in those areas.One explanation for this behavior of sea otters is that sea otters will taste a few clams before they formally forage somewhere , And be able to detect any toxins in it.",
    "question": "Which of the following is true will most strongly indicate that the above explanation is incorrect?",
    "answer": "C",
    "options": [
      "A.In some sea areas where red tides appear, there are no clams or sea otters.",
      "B.A small amount of red tide toxin will not cause any harm, but a large amount of this toxin will kill sea otters.",
      "C.When a piece of seawater affected by the red tide was artificially dyed brown-red, the sea otters did not eat the clams in those places.",
      "D.The presence of sea otters in a certain sea area is a remarkable sign that other marine life can be found there."
    ],
    "raw_logic_programs": [
      "# Declarations\nareas = EnumSort([area1, area2, area3, area4])\nconditions = EnumSort([red_tide, no_clams, dyed_water])\nsea_otters = Function([areas] -> [bool])\nclams = Function([areas] -> [bool])\nred_tide_present = Function([areas] -> [bool])\ndyed_water_present = Function([areas] -> [bool])\n\n# Constraints\nForAll([a:areas], Implies(red_tide_present(a), Not(sea_otters(a)))) ::: When the main food source of sea otters is contaminated with red tide toxins, sea otters will not forage in those areas\nForAll([a:areas], Implies(And(sea_otters(a), clams(a)), Not(red_tide_present(a)))) ::: Sea otters will taste a few clams before they formally forage somewhere and be able to detect any toxins in it\n\n# Options\nQuestion ::: Which of the following is true will most strongly indicate that the above explanation is incorrect?\nis_strongly_indicate(And(Not(clams(area1)), Not(sea_otters(area1)), red_tide_present(area1))) ::: (A)\nis_strongly_indicate(ForAll([a:areas], Implies(red_tide_present(a), Not(sea_otters(a))))) ::: (B)\nis_strongly_indicate(And(dyed_water_present(area2), Not(sea_otters(area2)), clams(area2))) ::: (C)\nis_strongly_indicate(ForAll([a:areas], Implies(sea_otters(a), Exists([c:conditions], Not(c == red_tide))))) ::: (D)"
    ]
  },
  {
    "id": 165,
    "context": "The 12th International Conference on Logic, Methodology and Philosophy of Science was held in Spain.At least one of Professor Huck, Professor Maas and Professor Regg participated in this conference.Known? (1) Those who sign up for the conference must submit an English academic paper, and the invitation letter will only be issued after expert review.(2) If Professor Huck participates in this conference, then Professor Mas must participate.(3) Professor Leigh submitted a German academic paper to the conference.",
    "question": "Based on the above, which of the following must be true?",
    "answer": "B",
    "options": [
      "A.Professor Huck attended the conference.",
      "B.Professor Mas participated in the conference.",
      "C.Professor Regg attended the conference.",
      "D.Both Professor Huck and Professor Mas participated in the conference."
    ],
    "raw_logic_programs": [
      "# Declarations\nprofessors = EnumSort([Huck, Maas, Regg, Leigh])\nparticipates = Function([professors] -> [bool])\nsubmitted_english_paper = Function([professors] -> [bool])\n\n# Constraints\nOr(participates(Huck), participates(Maas), participates(Regg)) ::: At least one of Professor Huck, Professor Maas, and Professor Regg participated in this conference\nForAll([p:professors], Implies(participates(p), submitted_english_paper(p))) ::: Those who sign up for the conference must submit an English academic paper\nImplies(participates(Huck), participates(Maas)) ::: If Professor Huck participates in this conference, then Professor Maas must participate\nNot(submitted_english_paper(Leigh)) ::: Professor Leigh submitted a German academic paper to the conference\n\n# Options\nQuestion ::: Based on the above, which of the following must be true?\nis_must_true(participates(Huck)) ::: (A)\nis_must_true(participates(Maas)) ::: (B)\nis_must_true(participates(Regg)) ::: (C)\nis_must_true(And(participates(Huck), participates(Maas))) ::: (D)"
    ]
  },
  {
    "id": 166,
    "context": "The hurricane that threatened the continental United States was triggered by the high pressure on the west coast of Africa.Whenever there is heavy rainfall in the area south of the Sahara Desert, the continental United States will be hit by a particularly frequent hurricane.Therefore, a large amount of rainfall must be the cause of the hurricane that increases the pressure of the airflow.",
    "question": "Which of the following arguments contains defects most similar to those in the above argument?",
    "answer": "B",
    "options": [
      "A.Cars drive faster on long streets than on short streets, so pedestrians on long streets are more dangerous than pedestrians on short streets.",
      "B.Many people who later become entrepreneurs often participate in competitive sports when they are in college.Therefore, participation in competitive sports must promote the ability to make people entrepreneurs.",
      "C.The petals of mulberry chrysanthemum will be closed at noon, so the petals of mulberry chrysanthemum will definitely open at night.",
      "D.The events in Eastern Europe will affect the political situation in Central America, so the liberalization of Eastern Europe will lead to the liberalization of Central America."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\ndefects = Function([arguments] -> [bool])\n\n# Constraints\ndefects(A) ::: Cars drive faster on long streets than on short streets, so pedestrians on long streets are more dangerous than pedestrians on short streets.\ndefects(B) ::: Many people who later become entrepreneurs often participate in competitive sports when they are in college. Therefore, participation in competitive sports must promote the ability to make people entrepreneurs.\ndefects(C) ::: The petals of mulberry chrysanthemum will be closed at noon, so the petals of mulberry chrysanthemum will definitely open at night.\ndefects(D) ::: The events in Eastern Europe will affect the political situation in Central America, so the liberalization of Eastern Europe will lead to the liberalization of Central America.\n\n# Options\nQuestion ::: Which of the following arguments contains defects most similar to those in the above argument?\nis_similar(defects(B)) ::: (B)"
    ]
  },
  {
    "id": 167,
    "context": "It is generally believed that the result of tossing a coin of uniform quality is random.But in fact, the result of tossing is determined by the momentum of the coin toss and the initial height.Nonetheless, it is very difficult to accurately predict the outcome of a coin toss.",
    "question": "Which of the following is most helpful in explaining the phenomenon mentioned in the title, that is, the result of the throw is determined by certain factors, but it is difficult to predict?",
    "answer": "D",
    "options": [
      "A.For a long time, tossing coins has been used as a typical example of random events.",
      "B.If you toss a coin of uneven quality, the result can always be accurately predicted.",
      "C.If the initial height of the coin toss remains stable, the result of the coin toss will be determined solely by the tossing force.",
      "D.Accurate prediction of coin tossing results requires accurate estimation of the initial height and impulse of coin tossing."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([momentum, initial_height])\noutcome = Function([factors] -> [bool])\npredictable = Function([factors] -> [bool])\n\n# Constraints\nForAll([f:factors], outcome(f) == True) ::: The result of tossing is determined by the momentum of the coin toss and the initial height\nForAll([f:factors], Not(predictable(f))) ::: It is very difficult to accurately predict the outcome of a coin toss\n\n# Options\nQuestion ::: Which of the following is most helpful in explaining the phenomenon mentioned in the title, that is, the result of the throw is determined by certain factors, but it is difficult to predict?\nis_helpful(And(outcome(momentum), outcome(initial_height), Not(predictable(momentum)), Not(predictable(initial_height)))) ::: (A)\nis_helpful(And(Not(outcome(momentum)), Not(outcome(initial_height)), predictable(momentum), predictable(initial_height))) ::: (B)\nis_helpful(And(outcome(momentum), Not(outcome(initial_height)), Not(predictable(momentum)), predictable(initial_height))) ::: (C)\nis_helpful(And(outcome(momentum), outcome(initial_height), Not(predictable(momentum)), Not(predictable(initial_height)))) ::: (D)"
    ]
  },
  {
    "id": 168,
    "context": "No notochords are catheter animals, and all pterosaurs are catheter animals.Therefore, no pterosaurs belong to the great ape family.",
    "question": "Which of the following statements must be assumed in the above reasoning?",
    "answer": "B",
    "options": [
      "A.All great apes are catheter animals.",
      "B.All great apes are notochords.",
      "C.No great apes are notochords.",
      "D.No notochord is pterosaur."
    ],
    "raw_logic_programs": [
      "# Declarations\ncategories = EnumSort([notochords, catheter_animals, pterosaurs, great_apes])\nbelongs_to = Function([categories, categories] -> [bool])\n\n# Constraints\nForAll([x:categories], Implies(belongs_to(x, notochords), Not(belongs_to(x, catheter_animals)))) ::: No notochords are catheter animals\nForAll([x:categories], Implies(belongs_to(x, pterosaurs), belongs_to(x, catheter_animals))) ::: All pterosaurs are catheter animals\n\n# Options\nQuestion ::: Which of the following statements must be assumed in the above reasoning?\nis_assumed(ForAll([x:categories], Implies(belongs_to(x, great_apes), belongs_to(x, catheter_animals)))) ::: (A)\nis_assumed(ForAll([x:categories], Implies(belongs_to(x, great_apes), belongs_to(x, notochords)))) ::: (B)\nis_assumed(ForAll([x:categories], Implies(belongs_to(x, great_apes), Not(belongs_to(x, notochords))))) ::: (C)\nis_assumed(ForAll([x:categories], Implies(belongs_to(x, notochords), Not(belongs_to(x, pterosaurs))))) ::: (D)"
    ]
  },
  {
    "id": 169,
    "context": "Premier Wen Jiabao said in an interview with the editor-in-chief of The Washington Post? 1.3 billion, which is a big number.If you use multiplication, a small problem, multiplied by 1.3 billion, will become a big problem; if you use division, a large total, divided by 1.3 billion, will become a small number .This is something many foreigners do not understand.",
    "question": "Which of the following options is closest to what Premier Wen Jiabao said above?",
    "answer": "D",
    "options": [
      "A.It is an extremely difficult task for 1.3 billion people to live a good life.Which ones have to threaten others?",
      "B.China's large population makes China's affairs very complicated and arduous, so remember to be cautious for politicians.",
      "C.China has a large population and arduous development tasks, and it is impossible to threaten any other country.",
      "D.Everyone collects firewood and the flame is high."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\npremier_statement = Function([statements] -> [bool])\n\n# Constraints\npremier_statement(A) == False ::: It is an extremely difficult task for 1.3 billion people to live a good life. Which ones have to threaten others?\npremier_statement(B) == True ::: China's large population makes China's affairs very complicated and arduous, so remember to be cautious for politicians.\npremier_statement(C) == False ::: China has a large population and arduous development tasks, and it is impossible to threaten any other country.\npremier_statement(D) == False ::: Everyone collects firewood and the flame is high.\n\n# Options\nQuestion ::: Which of the following options is closest to what Premier Wen Jiabao said above?\nis_closest(premier_statement(B)) ::: (B)"
    ]
  },
  {
    "id": 170,
    "context": "Scientists applied desulfurized ash residues from some power plants to 40 acres of saline-alkali land in Inner Mongolia.As a result, corn and grass have grown in this land.The scientists concluded that the desulfurized ash residues from coal-fired power plants can be used to transform saline-alkali land.",
    "question": "Which of the following, if true, best supports the scientist 's conclusion?",
    "answer": "C",
    "options": [
      "A.The corn grown in the saline-alkali land improved with desulfurized ash has similar growth to the corn in the fertile soil.",
      "B.The main component of desulfurized ash is gypsum, and the use of gypsum to improve saline-alkali land has a history of more than 100 years.",
      "C.The saline land without desulfurized ash residue is covered with dust on the 40-mu test field, and weeds are rare.",
      "D.The contents of heavy metals and pollutants in these desulfurized ash residues have not exceeded national standards."
    ],
    "raw_logic_programs": [
      "# Declarations\nland_types = EnumSort([saline_alkali, fertile])\nplants = EnumSort([corn, grass, weeds])\ntreatments = EnumSort([desulfurized_ash, none])\ngrowth = Function([land_types, treatments, plants] -> [bool])\n\n# Constraints\ngrowth(saline_alkali, desulfurized_ash, corn) ::: corn has grown in saline-alkali land with desulfurized ash\ngrowth(saline_alkali, desulfurized_ash, grass) ::: grass has grown in saline-alkali land with desulfurized ash\nNot(growth(saline_alkali, none, weeds)) ::: weeds are rare in saline-alkali land without desulfurized ash\n\n# Options\nQuestion ::: Which of the following, if true, best supports the scientist's conclusion?\nis_supportive(And(growth(saline_alkali, desulfurized_ash, corn), growth(fertile, none, corn))) ::: (A)\nis_supportive(Exists([t:treatments], growth(saline_alkali, t, corn) == growth(saline_alkali, desulfurized_ash, corn))) ::: (B)\nis_supportive(Not(growth(saline_alkali, none, weeds))) ::: (C)\nis_supportive(ForAll([t:treatments], Not(growth(saline_alkali, t, weeds)))) ::: (D)"
    ]
  },
  {
    "id": 171,
    "context": "Seven security guards of Zhao, Qian, Sun, Li, Wu, Zheng, and Wang take turns on a night shift every week.In terms of duty time.It is known that Zhao is one day later than Sun; Li is two days later than Wu; Qian is three days earlier than Wang; Zheng is between Qian and Sun, and is on Thursday.",
    "question": "Based on the above questions, which of the following options for night duty is true?",
    "answer": "C",
    "options": [
      "A.Wu on Sunday.",
      "C.The money is on Tuesday.",
      "B.Lee is on Tuesday.",
      "D.Sun is on Friday."
    ],
    "raw_logic_programs": [
      "# Declarations\nguards = EnumSort([Zhao, Qian, Sun, Li, Wu, Zheng, Wang])\ndays = EnumSort([Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday])\nduty = Function([guards] -> [days])\n\n# Constraints\nduty(Zhao) == duty(Sun) + 1 ::: Zhao is one day later than Sun\nduty(Li) == duty(Wu) + 2 ::: Li is two days later than Wu\nduty(Qian) == duty(Wang) - 3 ::: Qian is three days earlier than Wang\nduty(Zheng) > duty(Qian) ::: Zheng is between Qian and Sun\nduty(Zheng) < duty(Sun) ::: Zheng is between Qian and Sun\nduty(Zheng) == Thursday ::: Zheng is on Thursday\n\n# Options\nQuestion ::: Based on the above questions, which of the following options for night duty is true?\nis_true(duty(Wu) == Sunday) ::: (A)\nis_true(duty(Qian) == Tuesday) ::: (C)\nis_true(duty(Li) == Tuesday) ::: (B)\nis_true(duty(Sun) == Friday) ::: (D)"
    ]
  },
  {
    "id": 172,
    "context": "As long as they stay in academia, novelists cannot become great.The observation and analysis skills accumulated by the discipline of college life are very useful for novelists.However, only by sinking into daily life can one grasp the various emotions of life by intuition, and college life is obviously incompatible with it.",
    "question": "Which of the following statements is based on the assumptions that the above argument relies on?",
    "answer": "C",
    "options": [
      "A.Great novelists have the ability to observe and analyze.",
      "B.The grasp of emotions in daily life cannot be obtained only through observation and analysis.",
      "C.Without an intuitive grasp of emotions in everyday life, novelists cannot achieve their greatness.",
      "D.Along with the investment in life and sensible observation, the novelist will become great."
    ],
    "raw_logic_programs": [
      "# Declarations\nabilities = EnumSort([observation_analysis, intuitive_grasp])\nstatus = EnumSort([academia, daily_life])\nnovelists = Function([status] -> [abilities])\n\n# Constraints\nForAll([s:status], Implies(s == academia, novelists(s) != intuitive_grasp)) ::: As long as they stay in academia, novelists cannot become great\nForAll([s:status], Implies(s == academia, novelists(s) == observation_analysis)) ::: The observation and analysis skills accumulated by the discipline of college life are very useful for novelists\nForAll([s:status], Implies(s == daily_life, novelists(s) == intuitive_grasp)) ::: Only by sinking into daily life can one grasp the various emotions of life by intuition\n\n# Options\nQuestion ::: Which of the following statements is based on the assumptions that the above argument relies on?\nis_assumption(Implies(novelists(daily_life) == intuitive_grasp, novelists(daily_life) == observation_analysis)) ::: (A)\nis_assumption(Implies(novelists(daily_life) == observation_analysis, novelists(daily_life) != intuitive_grasp)) ::: (B)\nis_assumption(Implies(novelists(daily_life) != intuitive_grasp, novelists(daily_life) != great)) ::: (C)\nis_assumption(Implies(And(novelists(daily_life) == intuitive_grasp, novelists(daily_life) == observation_analysis), novelists(daily_life) == great)) ::: (D)"
    ]
  },
  {
    "id": 173,
    "context": "Leishmaniasis is an infectious disease that is transmitted by sand flies biting sick mice and then biting.When building a new town in a certain area, although leishmaniasis and sand flies are both swords in the area, epidemiologists warn that strengthening rodent control to reduce the number of rats will do more harm than good.Profit.",
    "question": "If the above statement is true, which of the following best confirms the expert's warning?",
    "answer": "D",
    "options": [
      "A.Rats infected with Leishmaniasis have few chances of directly transmitting the disease to people.",
      "B.Leishmaniasis is more contagious in rats than in humans.",
      "C.Sand flies that do not infect leishmaniasis are not harmful to human health.",
      "D.Sand flies bite people only when the number of mice is insufficient."
    ],
    "raw_logic_programs": [
      "# Declarations\ndisease = EnumSort([leishmaniasis])\nvectors = EnumSort([sand_flies])\nhosts = EnumSort([mice, humans])\ntransmission = Function([vectors, hosts] -> [bool])\npopulation_control = Function([hosts] -> [bool])\n\n# Constraints\ntransmission(sand_flies, mice) ::: sand flies biting sick mice\ntransmission(sand_flies, humans) ::: sand flies biting humans\npopulation_control(mice) ::: strengthening rodent control to reduce the number of rats\n\n# Options\nQuestion ::: If the above statement is true, which of the following best confirms the expert's warning?\nis_confirmed(And(transmission(sand_flies, mice), Not(transmission(mice, humans)))) ::: (A) Rats infected with Leishmaniasis have few chances of directly transmitting the disease to people.\nis_confirmed(And(transmission(sand_flies, mice), transmission(mice, mice))) ::: (B) Leishmaniasis is more contagious in rats than in humans.\nis_confirmed(Not(transmission(sand_flies, humans))) ::: (C) Sand flies that do not infect leishmaniasis are not harmful to human health.\nis_confirmed(Implies(Not(transmission(sand_flies, mice)), transmission(sand_flies, humans))) ::: (D) Sand flies bite people only when the number of mice is insufficient."
    ]
  },
  {
    "id": 174,
    "context": "Zhang Shan said? The cruel murderer should be sentenced to capital punishment, which is a wise act.Because it can stop abhorrent crimes and minimize the suffering of the entire society over a long period of time.The death penalty is a self-prevention for a sound society.Li Si said? You have ignored a statement about whether a country or society has the right to deprive anyone.If there is no such right, it does not matter whether the death penalty can prevent crime.",
    "question": "Assuming that the death penalty cannot prevent crime, then in which of the following ways will Zhang Shan and Li Si 's views be affected?",
    "answer": "C",
    "options": [
      "A.Neither Zhang Shan nor Li Si 's views will be strengthened or weakened.",
      "B.Li Si 's view was weakened, and Zhang Shan 's view was strengthened.",
      "C.Zhang Shan's view was weakened, Li Si's view was not affected.",
      "D.Both Zhang Shan and Li Si's views were weakened."
    ],
    "raw_logic_programs": [
      "# Declarations\nviews = EnumSort([Zhang_Shan, Li_Si])\neffects = EnumSort([strengthened, weakened, not_affected])\nprevention = Bool('prevention')  # Represents whether the death penalty can prevent crime\n\n# Constraints\nZhang_Shan_view = Implies(prevention, effects(Zhang_Shan) == strengthened)  # Zhang Shan's view is based on the prevention of crime\nLi_Si_view = Implies(Not(prevention), effects(Li_Si) == not_affected)  # Li Si's view is based on the right to deprive, not prevention\n\n# Options\nQuestion ::: Assuming that the death penalty cannot prevent crime, then in which of the following ways will Zhang Shan and Li Si's views be affected?\neffects(Zhang_Shan) == not_affected, effects(Li_Si) == not_affected ::: (A) Neither Zhang Shan nor Li Si's views will be strengthened or weakened.\neffects(Zhang_Shan) == strengthened, effects(Li_Si) == weakened ::: (B) Li Si's view was weakened, and Zhang Shan's view was strengthened.\neffects(Zhang_Shan) == weakened, effects(Li_Si) == not_affected ::: (C) Zhang Shan's view was weakened, Li Si's view was not affected.\neffects(Zhang_Shan) == weakened, effects(Li_Si) == weakened ::: (D) Both Zhang Shan and Li Si's views were weakened."
    ]
  },
  {
    "id": 175,
    "context": "Professor? If both parents are O-type blood, the blood type of their children can only be O-type, which is a genetic rule.Student? This is not true.My father has blood type B, and I have blood type O.",
    "question": "Students are most likely to understand the professor 's statement as?",
    "answer": "A",
    "options": [
      "A.Only people with blood type O will have children with blood type O.",
      "B.People with type O blood cannot have children with type B blood.",
      "C.People with blood type B will always have children with blood type O.",
      "D.If both parents have type B blood, their children will also have type B blood."
    ],
    "raw_logic_programs": [
      "# Declarations\nblood_types = EnumSort([O, A, B, AB])\nparent1 = Function([blood_types] -> [blood_types])\nparent2 = Function([blood_types] -> [blood_types])\nchild = Function([blood_types] -> [blood_types])\n\n# Constraints\nForAll([p1:blood_types, p2:blood_types], Implies(And(parent1(p1) == O, parent2(p2) == O), child(O) == O)) ::: If both parents are O-type blood, the blood type of their children can only be O-type\n\n# Options\nQuestion ::: Students are most likely to understand the professor's statement as?\nis_understood(Implies(ForAll([p1:blood_types, p2:blood_types], And(parent1(p1) == O, parent2(p2) == O)), ForAll([c:blood_types], child(c) == O))) ::: (A)\nis_understood(Implies(ForAll([p1:blood_types, p2:blood_types], And(parent1(p1) == O, parent2(p2) == O)), Not(Exists([c:blood_types], child(c) == B)))) ::: (B)\nis_understood(Implies(ForAll([p1:blood_types], parent1(p1) == B), ForAll([c:blood_types], child(c) == O))) ::: (C)\nis_understood(Implies(ForAll([p1:blood_types, p2:blood_types], And(parent1(p1) == B, parent2(p2) == B)), ForAll([c:blood_types], child(c) == B))) ::: (D)"
    ]
  },
  {
    "id": 176,
    "context": "There is a psychological theory that to be happy, one must maintain an intimate relationship with another.However, the greatest philosophers in the world spent most of their lives in isolation, and had no intimate relationships.Therefore, this psychological theory must be wrong.",
    "question": "Which of the following must be assumed in the above conclusion?",
    "answer": "D",
    "options": [
      "A.The greatest philosophers in the world prefer to avoid intimate relationships.",
      "B.People with intimate relationships rarely spend their time alone.",
      "C.Loneliness is necessary for philosophers to meditate.",
      "D.The greatest philosophers in the world are happy."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([philosophers, others])\nstates = EnumSort([happy, not_happy])\nrelationships = EnumSort([intimate, not_intimate])\nhas_relationship = Function([people] -> [relationships])\nis_happy = Function([people] -> [states])\n\n# Constraints\nForAll([p:people], Implies(has_relationship(p) == intimate, is_happy(p) == happy)) ::: According to the psychological theory, to be happy, one must maintain an intimate relationship\nForAll([p:people], Implies(has_relationship(p) == not_intimate, is_happy(p) == not_happy)) ::: If one does not have an intimate relationship, they are not happy according to the theory\nForAll([p:people], Implies(p == philosophers, has_relationship(p) == not_intimate)) ::: The greatest philosophers in the world had no intimate relationships\n\n# Options\nQuestion ::: Which of the following must be assumed in the above conclusion?\nis_assumed(is_happy(philosophers) == happy) ::: (D) The greatest philosophers in the world are happy"
    ]
  },
  {
    "id": 177,
    "context": "If a person's behavior has a detrimental impact on others and society, others or society can of course blame and interfere with him.But assuming this is not the case? For example, a person smoking in a house where he lives alone, a person yelling in the wilderness, a person browsing the Internet in the middle of the night, should n't he? In my opinion, whether to interfere with an act depends on whether such interference is beneficial to the improvement of the public interest, whether it violates the legal rights of the parties, and so on.",
    "question": "Which of the following is the speaker who is most willing to answer the question?",
    "answer": "C",
    "options": [
      "A.Social interests always take priority over personal interests",
      "B.Interference with individual actions does not increase the interests of society as a whole.",
      "C.Actions that do not harm the interests of others should not be criticized and interfered by society.",
      "D.When one 's actions are beneficial to others, the overall interests of a society can be improved."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([smoking_alone, yelling_wilderness, browsing_internet])\ncriteria = EnumSort([detrimental_impact, public_interest_improvement, legal_rights_violation])\ninterference = Function([actions, criteria] -> [bool])\n\n# Constraints\nForAll([a:actions], Not(interference(a, detrimental_impact))) ::: Assuming the actions do not have a detrimental impact on others and society\nForAll([a:actions], Not(interference(a, public_interest_improvement))) ::: Interference depends on whether it is beneficial to the improvement of the public interest\nForAll([a:actions], Not(interference(a, legal_rights_violation))) ::: Interference depends on whether it violates the legal rights of the parties\n\n# Options\nQuestion ::: Which of the following is the speaker who is most willing to answer the question?\nis_most_willing(ForAll([a:actions], Not(interference(a, public_interest_improvement)))) ::: (A) Social interests always take priority over personal interests\nis_most_willing(ForAll([a:actions], Not(interference(a, public_interest_improvement)))) ::: (B) Interference with individual actions does not increase the interests of society as a whole.\nis_most_willing(ForAll([a:actions], Not(interference(a, detrimental_impact)))) ::: (C) Actions that do not harm the interests of others should not be criticized and interfered by society.\nis_most_willing(ForAll([a:actions], Not(interference(a, public_interest_improvement)))) ::: (D) When one's actions are beneficial to others, the overall interests of a society can be improved."
    ]
  },
  {
    "id": 178,
    "context": "Compared with us, people who lived a century ago have far fewer recreational projects.Therefore, they like reading more than we do today.",
    "question": "Which of the following statements is true, which weakens the argument most strongly?",
    "answer": "D",
    "options": [
      "A.Many books published a century ago have poor literacy.",
      "B.The number of books sold today is much greater than it was a century ago.",
      "C.One of the more popular recreational projects is playing mahjong.",
      "D.On average, people who lived a century ago have far less leisure time than people who are now."
    ],
    "raw_logic_programs": [
      "# Declarations\ntime_periods = EnumSort([century_ago, today])\nactivities = EnumSort([recreational_projects, reading, leisure_time, books_sold])\npreferences = Function([time_periods, activities] -> [int])\n\n# Constraints\npreferences(century_ago, recreational_projects) < preferences(today, recreational_projects) ::: People who lived a century ago have far fewer recreational projects compared with us\npreferences(century_ago, reading) > preferences(today, reading) ::: Therefore, they like reading more than we do today\n\n# Options\nQuestion ::: Which of the following statements is true, which weakens the argument most strongly?\nis_true(preferences(today, books_sold) > preferences(century_ago, books_sold)) ::: (B) The number of books sold today is much greater than it was a century ago\nis_true(preferences(today, leisure_time) > preferences(century_ago, leisure_time)) ::: (D) On average, people who lived a century ago have far less leisure time than people who are now"
    ]
  },
  {
    "id": 179,
    "context": "Research shows that people who rarely take antibiotics have a stronger immune system than people who take antibiotics regularly.However, there is no evidence that taking antibiotics weakens the immune system.",
    "question": "Which of the following, if correct, will best reconcile the inconsistencies between the information in the question?",
    "answer": "B",
    "options": [
      "A.Some people often take antibiotics because their doctors prescribe antibiotics for both viral and bacterial infections.",
      "B.People with strong immunity rarely contract diseases that people usually treat with antibiotics.",
      "C.Despite the many side effects of antibiotics, some people still use these drugs.",
      "D.People with poor immunity can hardly recover from bacterial infections without taking antibiotics."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([rarely_take_antibiotics, regularly_take_antibiotics])\nimmune_strength = EnumSort([strong, weak])\ntakes_antibiotics = Function([people] -> [bool])\nimmune_system = Function([people] -> [immune_strength])\n\n# Constraints\nForAll([p:people], Implies(takes_antibiotics(p), immune_system(p) == weak)) ::: People who rarely take antibiotics have a stronger immune system than people who take antibiotics regularly\nNot(Exists([p:people], And(takes_antibiotics(p), immune_system(p) == strong))) ::: There is no evidence that taking antibiotics weakens the immune system\n\n# Options\nQuestion ::: Which of the following, if correct, will best reconcile the inconsistencies between the information in the question?\nis_reconcile(And(takes_antibiotics(regularly_take_antibiotics), prescribed_for_both_infections)) ::: (A)\nis_reconcile(And(immune_system(rarely_take_antibiotics) == strong, rarely_contract_diseases)) ::: (B)\nis_reconcile(And(has_side_effects, still_use_antibiotics)) ::: (C)\nis_reconcile(And(immune_system(regularly_take_antibiotics) == weak, need_antibiotics_to_recover)) ::: (D)"
    ]
  },
  {
    "id": 180,
    "context": "There are voters in favor of all candidates'",
    "question": "The above argument cannot be derived?",
    "answer": "C",
    "options": [
      "A.All candidates have votes in favor.",
      "B.Some voters favored some candidates.",
      "C.All voters favor all candidates.",
      "D.Not all voters disapprove of all candidates."
    ],
    "raw_logic_programs": [
      "I'm sorry, but the problem description seems incomplete or unclear. Could you please provide more details or clarify the problem statement so that I can assist you in formulating it as a logic program?"
    ]
  },
  {
    "id": 181,
    "context": "Some people talked about the photos of the abuse of captives by the US military? 'If you don't want to be caught on the spot when doing stupid things, don't do stupid things.",
    "question": "Which of the following sentences is different from the above sentence?",
    "answer": "D",
    "options": [
      "A.If you do stupid things, be prepared to be caught on the spot while doing stupid things.",
      "B.Only by not being stupid can we avoid being caught on the spot when doing stupid things.",
      "C.Either you are caught on the spot when you are stupid, or you do n't do stupid things.",
      "D.If you are caught on the spot when doing stupid things, consider yourself unlucky."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([do_stupid_things, caught_on_spot])\nstatements = Function([actions] -> [bool])\n\n# Constraints\nstatements(do_stupid_things) == True ::: If you don't want to be caught on the spot when doing stupid things, don't do stupid things.\n\n# Options\nQuestion ::: Which of the following sentences is different from the above sentence?\nis_different(Implies(statements(do_stupid_things), statements(caught_on_spot))) ::: (A)\nis_different(Implies(Not(statements(do_stupid_things)), Not(statements(caught_on_spot)))) ::: (B)\nis_different(Or(statements(caught_on_spot), Not(statements(do_stupid_things)))) ::: (C)\nis_different(Implies(statements(caught_on_spot), statements(do_stupid_things))) ::: (D)"
    ]
  },
  {
    "id": 182,
    "context": "It is difficult to keep the deep part of the wound free from bacterial infections, even high-efficiency antibiotics cannot kill the bacteria living deep in the wound.However, many doctors have wrapped the wound with a sweet substance such as sucrose to remove the bacteria deep in the wound.",
    "question": "If any of the following is true, it is most helpful to explain why sucrose kills bacteria deep in the wound?",
    "answer": "A",
    "options": [
      "A.Bacteria deep in the wound thrive in a humid environment, and sucrose has a dehydrating effect.",
      "B.Many kinds of bacteria take sucrose as a nutrient, and when they get sugar, they multiply quickly.",
      "C.Some foods containing sucrose can weaken the effects of certain antibiotics.",
      "D.High-efficiency antibiotics have only been developed recently, and the use of sucrose to treat wounds has a long history."
    ],
    "raw_logic_programs": [
      "# Declarations\nbacteria = EnumSort([deep_wound_bacteria])\nsubstances = EnumSort([sucrose, antibiotics])\neffects = EnumSort([dehydrating, nutrient, weaken_antibiotics, historical_use])\nenvironment = EnumSort([humid])\n\n# Constraints\nForAll([b:bacteria], Exists([s:substances], Not(kills(s, b)))) ::: high-efficiency antibiotics cannot kill the bacteria living deep in the wound\nForAll([d:doctors], wraps(d, wound, sucrose)) ::: many doctors have wrapped the wound with a sweet substance such as sucrose to remove the bacteria deep in the wound\n\n# Options\nQuestion ::: If any of the following is true, it is most helpful to explain why sucrose kills bacteria deep in the wound?\nis_helpful(And(thrive(bacteria, humid), has_effect(sucrose, dehydrating))) ::: (A)\nis_helpful(And(takes_as_nutrient(bacteria, sucrose), multiplies_quickly(bacteria))) ::: (B)\nis_helpful(And(contains(some_foods, sucrose), weakens_effect(some_foods, antibiotics))) ::: (C)\nis_helpful(And(recently_developed(antibiotics), historical_use(sucrose))) ::: (D)"
    ]
  },
  {
    "id": 183,
    "context": "David is a senior CEO, he made up his mind to go to a company with the best pay.Huizhong Company and Kangtuo Company intend to hire him.The two companies have the same treatment in other respects, only the salary is slightly different.The conditions provided by Huizhong Company are? half a year's salary is 500,000 US dollars, and the salary is increased by 50,000 US dollars every six months.Kang Tuo's conditions are? annual salary of 1 million US dollars, annual salary increase of 200,000 US dollars.",
    "question": "Which one of the following correctly describes David's choice?",
    "answer": "B",
    "options": [
      "A.David will go to Cantor because he will get $ 150,000 more in two years.",
      "B.David will go to Huizhong Company because he will get more than 50,000 US dollars every year.",
      "C.David will go to Cantor because he will spend an extra $ 50,000 per year.",
      "D.David will go to Huizhong Company because he will spend an extra $ 70,000 every year."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([Huizhong, Kangtuo])\ntime_periods = EnumSort([half_year, year])\nsalary = Function([companies, time_periods] -> [int])\n\n# Constraints\nsalary(Huizhong, half_year) == 500000 ::: Huizhong Company offers half a year's salary of 500,000 US dollars\nsalary(Huizhong, year) == salary(Huizhong, half_year) * 2 + 50000 ::: Huizhong Company increases salary by 50,000 US dollars every six months\nsalary(Kangtuo, year) == 1000000 ::: Kangtuo Company offers an annual salary of 1 million US dollars\nsalary(Kangtuo, year) == salary(Kangtuo, year) + 200000 ::: Kangtuo Company increases annual salary by 200,000 US dollars\n\n# Options\nQuestion ::: Which one of the following correctly describes David's choice?\nis_correct_choice(salary(Kangtuo, year * 2) - salary(Huizhong, year * 2) == 150000) ::: (A) David will go to Kangtuo because he will get $150,000 more in two years.\nis_correct_choice(salary(Huizhong, year) - salary(Kangtuo, year) > 50000) ::: (B) David will go to Huizhong Company because he will get more than 50,000 US dollars every year.\nis_correct_choice(salary(Kangtuo, year) - salary(Huizhong, year) == 50000) ::: (C) David will go to Kangtuo because he will spend an extra $50,000 per year.\nis_correct_choice(salary(Huizhong, year) - salary(Kangtuo, year) == 70000) ::: (D) David will go to Huizhong Company because he will spend an extra $70,000 every year."
    ]
  },
  {
    "id": 184,
    "context": "The intelligence department intercepted the three pieces of cryptographic information sent by the terrorists.After analysis by cryptographers, 'Alingoits Doximayo Makasey' means 'kidnapping student (host) hostage', and 'Huholikaso Makasey Mugbudengs' means 'hostage holding (see) 'Reporter', 'Mugbudengs Ftoufgke Alingoits' means 'kidnapping reporters away'.",
    "question": "Regarding the meaning of the relevant words in this cryptographic language, which of the following statements may be true?",
    "answer": "B",
    "options": [
      "A.'Doximayo' means 'hostage'",
      "C.'Mugbudengs' means 'kidnapping'.",
      "B.'Doximayo' means 'student'",
      "D.I don't know what they mean."
    ],
    "raw_logic_programs": [
      "# Declarations\nwords = EnumSort(['Alingoits', 'Doximayo', 'Makasey', 'Huholikaso', 'Mugbudengs', 'Ftoufgke'])\nmeanings = EnumSort(['kidnapping', 'student', 'host', 'hostage', 'holding', 'see', 'reporter', 'away'])\nmeaning_of = Function([words] -> [meanings])\n\n# Constraints\nAnd(meaning_of('Alingoits') == 'kidnapping', meaning_of('Doximayo') == 'student', meaning_of('Makasey') == 'hostage') ::: 'Alingoits Doximayo Makasey' means 'kidnapping student (host) hostage'\nAnd(meaning_of('Huholikaso') == 'holding', meaning_of('Makasey') == 'hostage', meaning_of('Mugbudengs') == 'reporter') ::: 'Huholikaso Makasey Mugbudengs' means 'hostage holding (see) Reporter'\nAnd(meaning_of('Mugbudengs') == 'reporter', meaning_of('Ftoufgke') == 'away', meaning_of('Alingoits') == 'kidnapping') ::: 'Mugbudengs Ftoufgke Alingoits' means 'kidnapping reporters away'\n\n# Options\nQuestion ::: Regarding the meaning of the relevant words in this cryptographic language, which of the following statements may be true?\nis_possible(meaning_of('Doximayo') == 'hostage') ::: (A)\nis_possible(meaning_of('Mugbudengs') == 'kidnapping') ::: (C)\nis_possible(meaning_of('Doximayo') == 'student') ::: (B)\nis_possible(True) ::: (D)"
    ]
  },
  {
    "id": 185,
    "context": "Aluminum alloys have widely replaced steel in military equipment because they provide the same protection and are lighter in weight.But the manufacturing cost of an aluminum alloy armored vehicle is twice that of a newly armored vehicle.Therefore, from a financial point of view, it is not advisable to replace steel armored vehicles with aluminum alloy armored vehicles with the same protective properties.",
    "question": "Which of the following is true can raise greater doubts about the above conclusion?",
    "answer": "A",
    "options": [
      "A.After the aluminum alloy armored vehicle is put into use, the running cost is one-third of the steel armored vehicle with the same performance.",
      "B.After the introduction of aluminum alloy armored vehicles, the army must retain maintenance personnel and purchase new tools and parts.",
      "C.The maintenance cost of steel armored vehicles is the lowest among all armored vehicles currently used by the military.",
      "D.It is expected that the price of aluminum alloy materials will remain stable, while the price of steel materials may decline."
    ],
    "raw_logic_programs": [
      "# Declarations\nvehicles = EnumSort([steel, aluminum_alloy])\ncosts = Function([vehicles] -> [int])\nrunning_costs = Function([vehicles] -> [int])\nmaintenance_costs = Function([vehicles] -> [int])\nmaterial_prices = Function([vehicles] -> [int])\n\n# Constraints\ncosts(aluminum_alloy) == 2 * costs(steel) ::: The manufacturing cost of an aluminum alloy armored vehicle is twice that of a steel armored vehicle\nForAll([v:vehicles], running_costs(v) >= 0) ::: Running costs are non-negative\nForAll([v:vehicles], maintenance_costs(v) >= 0) ::: Maintenance costs are non-negative\nForAll([v:vehicles], material_prices(v) >= 0) ::: Material prices are non-negative\n\n# Options\nQuestion ::: Which of the following is true can raise greater doubts about the above conclusion?\nis_doubtful(running_costs(aluminum_alloy) == (1/3) * running_costs(steel)) ::: (A) After the aluminum alloy armored vehicle is put into use, the running cost is one-third of the steel armored vehicle with the same performance.\nis_doubtful(Exists([p:vehicles], And(maintenance_costs(p) > 0, new_tools_and_parts_needed))) ::: (B) After the introduction of aluminum alloy armored vehicles, the army must retain maintenance personnel and purchase new tools and parts.\nis_doubtful(maintenance_costs(steel) == Min([maintenance_costs(v) for v in vehicles])) ::: (C) The maintenance cost of steel armored vehicles is the lowest among all armored vehicles currently used by the military.\nis_doubtful(material_prices(aluminum_alloy) == material_prices(steel) and material_prices(steel) > 0) ::: (D) It is expected that the price of aluminum alloy materials will remain stable, while the price of steel materials may decline."
    ]
  },
  {
    "id": 186,
    "context": "At the beginning of this century, Wegener proposed the theory of continental drift.Because his theory assumed that the motive force enough to cause continental drift was found, he was strongly opposed.We can now accept Wegener 's theory, not because we have determined enough power to drift the continent, but because the new instrument finally allows us to confirm the movement of the continent through observation.",
    "question": "The above example best illustrates which of the following scientific statements?",
    "answer": "D",
    "options": [
      "A.The goal of science is to use a simple and harmonious theory to accurately explain the diversity of nature.",
      "B.In the mathematical description of nature, science has become very precise in identifying potential dynamics.",
      "C.With the help of probability theory and mathematical statistics, science has shifted from describing single phenomena to studying the whole thing.",
      "D.When an event assumed by a theory is confirmed, the theory can be accepted even if there is no explanation for the cause of the event."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([Wegener_theory])\nevents = EnumSort([continental_drift])\ncauses = EnumSort([motive_force])\ninstruments = EnumSort([new_instrument])\nconfirmations = EnumSort([observation])\n\n# Constraints\nAssumed(theories, causes) ::: Wegener's theory assumed a motive force\nOpposed(theories) ::: Wegener's theory was strongly opposed\nAccepted(theories) ::: We can now accept Wegener's theory\nNot(Determined(causes)) ::: Not because we have determined the motive force\nConfirmed(events, confirmations) ::: New instrument allows confirmation of continental drift through observation\n\n# Options\nQuestion ::: The above example best illustrates which of the following scientific statements?\nis_illustrated(And(Confirmed(events, confirmations), Not(Determined(causes)))) ::: (D) When an event assumed by a theory is confirmed, the theory can be accepted even if there is no explanation for the cause of the event."
    ]
  },
  {
    "id": 187,
    "context": "Both Zhang Fei and Li Bai applied for the MBA this year.There are four assertions about their exams? (1) They have at least one exam; (2) Zhang Fei is not necessarily exam; Bai did pass the exam; (4) Not that Zhang Fei might fail the exam.The final admission result shows that two of the four assertions are true and two are false.",
    "question": "Which of the following results can be derived from the above conditions?",
    "answer": "A",
    "options": [
      "A.Zhang Fei was admitted, but Li Bai was not.",
      "B.Both Zhang Fei and Li Bai were admitted.",
      "C.Zhang Fei and Li Bai failed the exam",
      "D.Li Bai was admitted, but Zhang Fei was not."
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([ZhangFei, LiBai])\nresults = EnumSort([admitted, not_admitted])\nassertions = EnumSort([assertion1, assertion2, assertion3, assertion4])\ntruth_values = EnumSort([true, false])\nexam_passed = Function([candidates] -> [bool])\nassertion_truth = Function([assertions] -> [truth_values])\n\n# Constraints\nassertion_truth(assertion1) == true ::: They have at least one exam\nassertion_truth(assertion2) == Not(exam_passed(ZhangFei)) ::: Zhang Fei is not necessarily exam\nassertion_truth(assertion3) == exam_passed(LiBai) ::: Bai did pass the exam\nassertion_truth(assertion4) == Not(Not(exam_passed(ZhangFei))) ::: Not that Zhang Fei might fail the exam\nCount([a:assertions], assertion_truth(a) == true) == 2 ::: Two of the assertions are true\nCount([a:assertions], assertion_truth(a) == false) == 2 ::: Two of the assertions are false\n\n# Options\nQuestion ::: Which of the following results can be derived from the above conditions?\nis_derived(And(exam_passed(ZhangFei), Not(exam_passed(LiBai)))) ::: (A) Zhang Fei was admitted, but Li Bai was not.\nis_derived(And(exam_passed(ZhangFei), exam_passed(LiBai))) ::: (B) Both Zhang Fei and Li Bai were admitted.\nis_derived(And(Not(exam_passed(ZhangFei)), Not(exam_passed(LiBai)))) ::: (C) Zhang Fei and Li Bai failed the exam.\nis_derived(And(Not(exam_passed(ZhangFei)), exam_passed(LiBai))) ::: (D) Li Bai was admitted, but Zhang Fei was not."
    ]
  },
  {
    "id": 188,
    "context": "On the African grassland, a ferocious leopard can catch almost any antelope that it decides to hunt.And once the antelope does not stare at the hungry leopard, its best chance of escape is that the leopard quickly finds another animal as its target.Therefore, antelopes follow the group activities to reduce the risk of being eaten by leopards.",
    "question": "Which of the following is the assumption on which the above argument is based?",
    "answer": "C",
    "options": [
      "A.Leopards depend on predators for their livelihood.",
      "B.The sheer number of antelopes in the antelope flock can prevent leopard attacks.",
      "C.Leopards cannot eat the entire antelope flock at once.",
      "D.On the African grasslands, leopards are the main natural enemies of antelopes."
    ],
    "raw_logic_programs": [
      "# Declarations\nanimals = EnumSort([leopard, antelope])\nactions = EnumSort([hunt, escape, stare, find_target, follow_group])\nconditions = EnumSort([risk_reduction, target_change])\nassumptions = EnumSort([A, B, C, D])\n\n# Constraints\nForAll([a:animals], Exists([ac:actions], True)) ::: Each animal can perform actions\nImplies(Not(stare(antelope)), find_target(leopard)) ::: Once the antelope does not stare at the leopard, the leopard finds another target\nImplies(follow_group(antelope), risk_reduction) ::: Antelopes follow group activities to reduce risk\n\n# Options\nQuestion ::: Which of the following is the assumption on which the above argument is based?\nis_assumption(Implies(hunt(leopard), Not(depend_on_predators(leopard)))) ::: (A)\nis_assumption(Implies(follow_group(antelope), prevent_attacks)) ::: (B)\nis_assumption(Implies(Not(eat_all(leopard, antelope)), risk_reduction)) ::: (C)\nis_assumption(Implies(hunt(leopard), main_enemy(leopard, antelope))) ::: (D)"
    ]
  },
  {
    "id": 189,
    "context": "If a person increases the number of meals per day but does not increase the total amount of meals, his cholesterol level will obviously decrease.However, most people consume more food while increasing the number of meals.",
    "question": "If the above statement is true, which of the following options will it most strongly support?",
    "answer": "B",
    "options": [
      "A.For most people, his daily food intake does not significantly affect his cholesterol level.",
      "B.For most people, increasing the number of meals a day will not result in a significant reduction in cholesterol levels.",
      "C.For most people, the amount of food eaten per day will not be affected by the number of foods eaten per day.",
      "D.For most people, the amount of food consumed is greatly affected by the time taken to eat."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nmeals_per_day = Function([people] -> [int])\ntotal_food_intake = Function([people] -> [int])\ncholesterol_level = Function([people] -> [int])\n\n# Constraints\nForAll([p:people], Implies(Increase(meals_per_day(p)), Decrease(cholesterol_level(p)))) ::: If a person increases the number of meals per day but does not increase the total amount of meals, his cholesterol level will obviously decrease\nForAll([p:people], Implies(Increase(meals_per_day(p)), Increase(total_food_intake(p)))) ::: Most people consume more food while increasing the number of meals\n\n# Options\nQuestion ::: If the above statement is true, which of the following options will it most strongly support?\nis_supported(ForAll([p:people], Not(SignificantEffect(total_food_intake(p), cholesterol_level(p))))) ::: (A)\nis_supported(ForAll([p:people], Not(SignificantReduction(cholesterol_level(p), Increase(meals_per_day(p)))))) ::: (B)\nis_supported(ForAll([p:people], Not(Affected(total_food_intake(p), meals_per_day(p))))) ::: (C)\nis_supported(ForAll([p:people], GreatlyAffected(total_food_intake(p), time_taken_to_eat(p)))) ::: (D)"
    ]
  },
  {
    "id": 190,
    "context": "To treat a person fairly is to treat him without prejudice.But our friends usually hope that we regard their interests as more important than others.In this way, considering that we always strive to maintain friendship with our friends, we cannot treat our friends fairly.",
    "question": "The above argument must assume which of the following?",
    "answer": "D",
    "options": [
      "A.When dealing with interpersonal relationships between non-friends, people can remain impartial.",
      "B.The ideal of justice has nothing to do with dealing with most relationships.",
      "C.Keeping close friends with some people is very important in one's life.",
      "D.A person cannot be fair to someone at the same time and will regard his interests as more important than others."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([friends, non_friends])\ntreatment = EnumSort([fair, biased])\nrelationships = EnumSort([friendship, non_friendship])\ninterests = EnumSort([more_important, less_important])\ntreats = Function([people, treatment] -> [bool])\nregards = Function([people, interests] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(treats(p, fair), Not(regards(p, more_important)))) ::: To treat a person fairly is to treat him without prejudice\nForAll([p:people], Implies(treats(p, biased), regards(p, more_important))) ::: Our friends usually hope that we regard their interests as more important than others\nForAll([p:people], Implies(treats(p, fair), Not(treats(p, biased)))) ::: We cannot treat our friends fairly\n\n# Options\nQuestion ::: The above argument must assume which of the following?\nis_assumption(ForAll([p:people], Implies(p == non_friends, treats(p, fair)))) ::: (A)\nis_assumption(ForAll([r:relationships], Implies(r == non_friendship, Not(treats(friends, fair))))) ::: (B)\nis_assumption(Exists([p:people], regards(p, more_important))) ::: (C)\nis_assumption(ForAll([p:people], Not(And(treats(p, fair), regards(p, more_important))))) ::: (D)"
    ]
  },
  {
    "id": 191,
    "context": "There are 6 scholars F, G, J, L, M, and N, who will speak at a logical meeting, and the speeches are arranged in the following order? (1) Each speaker speaks only once, and only once at the same time By.(2) Three speakers speak before lunch, and the other three speak after lunch.(3) G must speak before lunch.(4) Only one speaker is between M and N.(5) F speaks in the first or third place.",
    "question": "If J is the first speaker, who must be the second speaker?",
    "answer": "B",
    "options": [
      "A.F",
      "C.L",
      "B.G",
      "D.M"
    ],
    "raw_logic_programs": [
      "# Declarations\nscholars = EnumSort([F, G, J, L, M, N])\npositions = EnumSort([1, 2, 3, 4, 5, 6])\nspeaks = Function([scholars] -> [positions])\n\n# Constraints\nDistinct([s:scholars], speaks(s)) ::: Each speaker speaks only once, and no two speakers speak at the same time\nCount([p:positions], speaks(p) <= 3) == 3 ::: Three speakers speak before lunch\nspeaks(G) <= 3 ::: G must speak before lunch\nExists([p:positions], And(speaks(M) == p, Or(speaks(N) == p + 1, speaks(N) == p - 1))) ::: Only one speaker is between M and N\nOr(speaks(F) == 1, speaks(F) == 3) ::: F speaks in the first or third place\nspeaks(J) == 1 ::: J is the first speaker\n\n# Options\nQuestion ::: If J is the first speaker, who must be the second speaker?\nis_valid(speaks(F) == 2) ::: (A)\nis_valid(speaks(G) == 2) ::: (B)\nis_valid(speaks(L) == 2) ::: (C)\nis_valid(speaks(M) == 2) ::: (D)"
    ]
  },
  {
    "id": 192,
    "context": "There are 6 scholars F, G, J, L, M, and N, who will speak at a logical meeting, and the speeches are arranged in the following order? (1) Each speaker speaks only once, and only once at the same time By.(2) Three speakers speak before lunch, and the other three speak after lunch.(3) G must speak before lunch.(4) Only one speaker is between M and N.(5) F speaks in the first or third place.",
    "question": "If J is the fourth speaker, who must be the third speaker?",
    "answer": "D",
    "options": [
      "A.F or M",
      "C.L or N",
      "B.G or L",
      "D.M or N"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\nscholars = EnumSort([F, G, J, L, M, N])\npositions = EnumSort([1, 2, 3, 4, 5, 6])\nspeaks = Function([scholars] -> [positions])\n\n# Constraints\nDistinct([s:scholars], speaks(s)) ::: Each speaker speaks only once, and only once at the same time\nCount([p:positions], speaks(_, p) <= 3) ::: Three speakers speak before lunch, and the other three speak after lunch\nspeaks(G) <= 3 ::: G must speak before lunch\nExists([p:positions], And(speaks(M) == p, speaks(N) == p + 2)) ::: Only one speaker is between M and N\nOr(speaks(F) == 1, speaks(F) == 3) ::: F speaks in the first or third place\nspeaks(J) == 4 ::: J is the fourth speaker\n\n# Options\nQuestion ::: If J is the fourth speaker, who must be the third speaker?\nis_valid(Or(speaks(F) == 3, speaks(M) == 3)) ::: (A)\nis_valid(Or(speaks(G) == 3, speaks(L) == 3)) ::: (B)\nis_valid(Or(speaks(L) == 3, speaks(N) == 3)) ::: (C)\nis_valid(Or(speaks(M) == 3, speaks(N) == 3)) ::: (D)\n```"
    ]
  },
  {
    "id": 193,
    "context": "There are 6 scholars F, G, J, L, M, and N, who will speak at a logical meeting, and the speeches are arranged in the following order? (1) Each speaker speaks only once, and only once at the same time By.(2) Three speakers speak before lunch, and the other three speak after lunch.(3) G must speak before lunch.(4) Only one speaker is between M and N.(5) F speaks in the first or third place.",
    "question": "If L speaks before lunch and M is not the sixth speaker, the speaker immediately after M must be?",
    "answer": "C",
    "options": [
      "A.F",
      "C.J",
      "B.G",
      "D.N"
    ],
    "raw_logic_programs": [
      "# Declarations\nscholars = EnumSort([F, G, J, L, M, N])\npositions = EnumSort([1, 2, 3, 4, 5, 6])\nspeaks = Function([scholars] -> [positions])\n\n# Constraints\nDistinct([s:scholars], speaks(s)) ::: Each speaker speaks only once, and no two speakers speak at the same time\nCount([p:positions], speaks(G) <= 3) ::: G must speak before lunch\nExists([p:positions], And(speaks(M) == p, Or(speaks(N) == p + 1, speaks(N) == p - 1))) ::: Only one speaker is between M and N\nOr(speaks(F) == 1, speaks(F) == 3) ::: F speaks in the first or third place\nspeaks(L) <= 3 ::: L speaks before lunch\nspeaks(M) != 6 ::: M is not the sixth speaker\n\n# Options\nQuestion ::: If L speaks before lunch and M is not the sixth speaker, the speaker immediately after M must be?\nis_sat(speaks(F) == speaks(M) + 1) ::: (A)\nis_sat(speaks(G) == speaks(M) + 1) ::: (B)\nis_sat(speaks(J) == speaks(M) + 1) ::: (C)\nis_sat(speaks(N) == speaks(M) + 1) ::: (D)"
    ]
  },
  {
    "id": 194,
    "context": "There are 6 scholars F, G, J, L, M, and N, who will speak at a logical meeting, and the speeches are arranged in the following order? (1) Each speaker speaks only once, and only once at the same time By.(2) Three speakers speak before lunch, and the other three speak after lunch.(3) G must speak before lunch.(4) Only one speaker is between M and N.(5) F speaks in the first or third place.",
    "question": "If the speeches of M and N are separated by lunch, which of the following lists all speakers that can be arranged between M and N?",
    "answer": "D",
    "options": [
      "A.G, J",
      "C.F, G, J",
      "B.J, L",
      "D.F, G, J, L"
    ],
    "raw_logic_programs": [
      "# Declarations\nscholars = EnumSort([F, G, J, L, M, N])\npositions = EnumSort([1, 2, 3, 4, 5, 6])\nspeaks = Function([scholars] -> [positions])\n\n# Constraints\nDistinct([s:scholars], speaks(s)) ::: Each speaker speaks only once, and only once at the same time\nCount([p:positions], speaks(p) <= 3) == 3 ::: Three speakers speak before lunch, and the other three speak after lunch\nspeaks(G) <= 3 ::: G must speak before lunch\nExists([p:positions], And(speaks(M) == p, speaks(N) == p + 2)) ::: Only one speaker is between M and N\nOr(speaks(F) == 1, speaks(F) == 3) ::: F speaks in the first or third place\n\n# Options\nQuestion ::: If the speeches of M and N are separated by lunch, which of the following lists all speakers that can be arranged between M and N?\nis_valid(And(speaks(G) > speaks(M), speaks(G) < speaks(N), speaks(J) > speaks(M), speaks(J) < speaks(N))) ::: (A)\nis_valid(And(speaks(J) > speaks(M), speaks(J) < speaks(N), speaks(L) > speaks(M), speaks(L) < speaks(N))) ::: (B)\nis_valid(And(speaks(F) > speaks(M), speaks(F) < speaks(N), speaks(G) > speaks(M), speaks(G) < speaks(N), speaks(J) > speaks(M), speaks(J) < speaks(N))) ::: (C)\nis_valid(And(speaks(F) > speaks(M), speaks(F) < speaks(N), speaks(G) > speaks(M), speaks(G) < speaks(N), speaks(J) > speaks(M), speaks(J) < speaks(N), speaks(L) > speaks(M), speaks(L) < speaks(N))) ::: (D)"
    ]
  },
  {
    "id": 195,
    "context": "There are 6 scholars F, G, J, L, M, and N, who will speak at a logical meeting, and the speeches are arranged in the following order? (1) Each speaker speaks only once, and only once at the same time By.(2) Three speakers speak before lunch, and the other three speak after lunch.(3) G must speak before lunch.(4) Only one speaker is between M and N.(5) F speaks in the first or third place.",
    "question": "If J speaks before F, how many N can be ranked?",
    "answer": "A",
    "options": [
      "A.Fourth place",
      "B.Second place",
      "C.the third",
      "D.First place"
    ],
    "raw_logic_programs": [
      "# Declarations\nscholars = EnumSort([F, G, J, L, M, N])\npositions = EnumSort([1, 2, 3, 4, 5, 6])\nspeaks = Function([scholars] -> [positions])\n\n# Constraints\nDistinct([s:scholars], speaks(s)) ::: Each speaker speaks only once, and no two speakers speak at the same time\nCount([p:positions], speaks(G) <= 3) ::: G must speak before lunch\nExists([p:positions], And(speaks(M) == p, Or(speaks(N) == p + 1, speaks(N) == p - 1))) ::: Only one speaker is between M and N\nOr(speaks(F) == 1, speaks(F) == 3) ::: F speaks in the first or third place\n\n# Options\nQuestion ::: If J speaks before F, how many positions can N be ranked?\nis_valid(Exists([p:positions], speaks(N) == 4)) ::: (A)\nis_valid(Exists([p:positions], speaks(N) == 2)) ::: (B)\nis_valid(Exists([p:positions], speaks(N) == 3)) ::: (C)\nis_valid(Exists([p:positions], speaks(N) == 1)) ::: (D)"
    ]
  },
  {
    "id": 196,
    "context": "A provincial Go team coach selects 4 of the 7 players from E, F, G, H, J, K and M to participate in the professional league.The selection must meet the following conditions? E or F has one person to participate, but not both .One of J or K will participate, but not both.If J participates, then G participates.Unless F participates, M does not participate.",
    "question": "Which of the following four players can participate in the game together?",
    "answer": "D",
    "options": [
      "A.E, F, H, K",
      "C.E, H, J, M",
      "B.E, G, J, M",
      "D.F, H, K, M"
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([E, F, G, H, J, K, M])\nselected = Function([players] -> [bool])\n\n# Constraints\nOr(selected(E), selected(F)) ::: E or F has one person to participate\nNot(And(selected(E), selected(F))) ::: but not both\nOr(selected(J), selected(K)) ::: One of J or K will participate\nNot(And(selected(J), selected(K))) ::: but not both\nImplies(selected(J), selected(G)) ::: If J participates, then G participates\nImplies(Not(selected(F)), Not(selected(M))) ::: Unless F participates, M does not participate\n\n# Options\nQuestion ::: Which of the following four players can participate in the game together?\nis_sat(And(selected(E), selected(F), selected(H), selected(K))) ::: (A)\nis_sat(And(selected(E), selected(H), selected(J), selected(M))) ::: (C)\nis_sat(And(selected(E), selected(G), selected(J), selected(M))) ::: (B)\nis_sat(And(selected(F), selected(H), selected(K), selected(M))) ::: (D)"
    ]
  },
  {
    "id": 197,
    "context": "A provincial Go team coach selects 4 of the 7 players from E, F, G, H, J, K and M to participate in the professional league.The selection must meet the following conditions? E or F has one person to participate, but not both .One of J or K will participate, but not both.If J participates, then G participates.Unless F participates, M does not participate.",
    "question": "Which of the following players will definitely participate in the game?",
    "answer": "B",
    "options": [
      "A.F or M, or both.",
      "C.H or J, or both.",
      "B.G or H, or both.",
      "D.J or M, or both."
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([E, F, G, H, J, K, M])\nparticipates = Function([players] -> [bool])\n\n# Constraints\nXor(participates(E), participates(F)) ::: E or F has one person to participate, but not both\nXor(participates(J), participates(K)) ::: One of J or K will participate, but not both\nImplies(participates(J), participates(G)) ::: If J participates, then G participates\nImplies(Not(participates(F)), Not(participates(M))) ::: Unless F participates, M does not participate\n\n# Options\nQuestion ::: Which of the following players will definitely participate in the game?\nis_definite(Or(participates(F), participates(M))) ::: (A)\nis_definite(Or(participates(G), participates(H))) ::: (B)\nis_definite(Or(participates(H), participates(J))) ::: (C)\nis_definite(Or(participates(J), participates(M))) ::: (D)"
    ]
  },
  {
    "id": 198,
    "context": "A provincial Go team coach selects 4 of the 7 players from E, F, G, H, J, K and M to participate in the professional league.The selection must meet the following conditions? E or F has one person to participate, but not both .One of J or K will participate, but not both.If J participates, then G participates.Unless F participates, M does not participate.",
    "question": "Which of the following listed players cannot participate in the game together?",
    "answer": "C",
    "options": [
      "A.E and J",
      "C.E and M",
      "B.F and G",
      "D.F and J"
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([E, F, G, H, J, K, M])\nparticipates = Function([players] -> [bool])\n\n# Constraints\nXor(participates(E), participates(F)) ::: E or F has one person to participate, but not both\nXor(participates(J), participates(K)) ::: One of J or K will participate, but not both\nImplies(participates(J), participates(G)) ::: If J participates, then G participates\nImplies(Not(participates(F)), Not(participates(M))) ::: Unless F participates, M does not participate\n\n# Options\nQuestion ::: Which of the following listed players cannot participate in the game together?\nis_unsat(And(participates(E), participates(J))) ::: (A)\nis_unsat(And(participates(E), participates(M))) ::: (C)\nis_unsat(And(participates(F), participates(G))) ::: (B)\nis_unsat(And(participates(F), participates(J))) ::: (D)"
    ]
  },
  {
    "id": 199,
    "context": "A provincial Go team coach selects 4 of the 7 players from E, F, G, H, J, K and M to participate in the professional league.The selection must meet the following conditions? E or F has one person to participate, but not both .One of J or K will participate, but not both.If J participates, then G participates.Unless F participates, M does not participate.",
    "question": "If H does not participate in the game, which of the following two players must be included in the game?",
    "answer": "A",
    "options": [
      "A.F and G",
      "C.F and K",
      "B.E and M",
      "D.G and K"
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([E, F, G, H, J, K, M])\nparticipates = Function([players] -> [bool])\n\n# Constraints\nOr(And(participates(E), Not(participates(F))), And(Not(participates(E)), participates(F))) ::: E or F has one person to participate, but not both\nOr(And(participates(J), Not(participates(K))), And(Not(participates(J)), participates(K))) ::: One of J or K will participate, but not both\nImplies(participates(J), participates(G)) ::: If J participates, then G participates\nImplies(Not(participates(F)), Not(participates(M))) ::: Unless F participates, M does not participate\n\n# Options\nQuestion ::: If H does not participate in the game, which of the following two players must be included in the game?\nis_must_include(And(participates(F), participates(G)), Not(participates(H))) ::: (A) F and G\nis_must_include(And(participates(F), participates(K)), Not(participates(H))) ::: (C) F and K\nis_must_include(And(participates(E), participates(M)), Not(participates(H))) ::: (B) E and M\nis_must_include(And(participates(G), participates(K)), Not(participates(H))) ::: (D) G and K"
    ]
  },
  {
    "id": 200,
    "context": "A provincial Go team coach selects 4 of the 7 players from E, F, G, H, J, K and M to participate in the professional league.The selection must meet the following conditions? E or F has one person to participate, but not both .One of J or K will participate, but not both.If J participates, then G participates.Unless F participates, M does not participate.",
    "question": "Which two of the following players will be selected by the coach to make the four-person team the only choice?",
    "answer": "D",
    "options": [
      "A.F and H",
      "C.G and M",
      "B.G and J",
      "D.H and M"
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([E, F, G, H, J, K, M])\nselected = Function([players] -> [bool])\n\n# Constraints\nOr(selected(E), selected(F)) ::: E or F has one person to participate\nNot(And(selected(E), selected(F))) ::: but not both\nOr(selected(J), selected(K)) ::: One of J or K will participate\nNot(And(selected(J), selected(K))) ::: but not both\nImplies(selected(J), selected(G)) ::: If J participates, then G participates\nImplies(Not(selected(F)), Not(selected(M))) ::: Unless F participates, M does not participate\n\n# Options\nQuestion ::: Which two of the following players will be selected by the coach to make the four-person team the only choice?\nis_only_choice(And(selected(F), selected(H))) ::: (A)\nis_only_choice(And(selected(G), selected(J))) ::: (B)\nis_only_choice(And(selected(G), selected(M))) ::: (C)\nis_only_choice(And(selected(H), selected(M))) ::: (D)"
    ]
  },
  {
    "id": 201,
    "context": "No religious proposition can be verified as true by observation or experiment.Therefore, it is impossible to know the truth of any proposition of religion.",
    "question": "In order to deduce the above conclusions logically, it is necessary to assume which of the following is the premise?",
    "answer": "C",
    "options": [
      "A.If a proposition can be proved to be true by observation or experiment, its truth can be known.",
      "B.Observation or experiment alone cannot confirm the truth of any proposition.",
      "C.To know the truth of a proposition, it needs to be proved to be true through observation or experiment.",
      "D.People determine the authenticity of religious propositions through faith."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([religious, non_religious])\nmethods = EnumSort([observation, experiment])\ntruth_known = Function([propositions] -> [bool])\nverified = Function([propositions, methods] -> [bool])\n\n# Constraints\nForAll([p:propositions], Not(verified(p, observation))) ::: No religious proposition can be verified as true by observation\nForAll([p:propositions], Not(verified(p, experiment))) ::: No religious proposition can be verified as true by experiment\n\n# Options\nQuestion ::: In order to deduce the above conclusions logically, it is necessary to assume which of the following is the premise?\nis_necessary(ForAll([p:propositions], Implies(Exists([m:methods], verified(p, m)), truth_known(p)))) ::: (A)\nis_necessary(ForAll([p:propositions], Not(Exists([m:methods], verified(p, m))))) ::: (B)\nis_necessary(ForAll([p:propositions], Implies(truth_known(p), Exists([m:methods], verified(p, m))))) ::: (C)\nis_necessary(ForAll([p:propositions], Implies(p == religious, Not(truth_known(p))))) ::: (D)"
    ]
  },
  {
    "id": 202,
    "context": "The attitude towards intellectuals marks the civilization of a nation; the attitude towards workers and peasants tests the conscience and conscience of the nation.therefore_______",
    "question": "Which of the following statements can best complete the above argument?",
    "answer": "D",
    "options": [
      "A.Intellectuals, workers and farmers should be treated equally.",
      "B.How to treat workers and farmers is even more important than how to treat intellectuals.",
      "C.Intellectuals can be treated twice as much as workers and farmers.",
      "D.Intellectuals should be treated well, as should workers and farmers."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([intellectuals, workers, peasants])\nattitude = Function([entities] -> [int])\n\n# Constraints\nForAll([e:entities], attitude(e) >= 0) ::: Attitude towards each entity is non-negative\n\n# Options\nQuestion ::: Which of the following statements can best complete the above argument?\nis_best_completion(And(attitude(intellectuals) == attitude(workers), attitude(workers) == attitude(peasants))) ::: (A)\nis_best_completion(attitude(workers) > attitude(intellectuals)) ::: (B)\nis_best_completion(attitude(intellectuals) == 2 * attitude(workers)) ::: (C)\nis_best_completion(And(attitude(intellectuals) > 0, attitude(workers) > 0, attitude(peasants) > 0)) ::: (D)"
    ]
  },
  {
    "id": 203,
    "context": "Since the emperor, the official history of China has been the diary of the emperor 's own family.That is the standard image of the emperor.To understand the true face of the emperor, one must also read Ye Shi, which is a portrayal of the emperor's life.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "C",
    "options": [
      "A.All the official history records are personal matters of the emperor's family.",
      "B.Only by reading wild history can you know the little-known privacy of the emperor.",
      "C.Only by combining Zhengshi and Yeshi can we see the true face of the emperor.",
      "D.The official history records the emperor's major affairs, while the wild history describes the emperor's daily affairs."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrelies_on = Function([statements] -> [bool])\n\n# Constraints\n# The argument suggests that to understand the true face of the emperor, one must read both the official history and Ye Shi.\n# This implies that the official history alone is not sufficient, and Ye Shi provides additional necessary information.\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nrelies_on(C) ::: (C) Only by combining Zhengshi and Yeshi can we see the true face of the emperor."
    ]
  },
  {
    "id": 204,
    "context": "In recent years, China's housing prices have risen rapidly.In the fourth quarter of 2004, various government departments issued a number of measures to suppress the excessively rapid growth of housing prices, but national housing prices continued to rise in the first quarter of 2005.It was asserted that rising land prices are the chief culprit in soaring housing prices.",
    "question": "Which of the following, if true, is the most doubtful of an assertion?",
    "answer": "B",
    "options": [
      "A.Shanghai's housing prices in the first quarter of 2005 increased by 19.1% over the same period last year, and land prices rose by 6.53%.",
      "B.Residential prices in Beijing increased by 7.2% in the first quarter of 2005 compared with the same period last year, and residential land prices rose by 0.37%.",
      "C.The chairman of Huayuan Real Estate believes that as land development costs increase, house prices will definitely increase.",
      "D.The chairman of Yongtai Development Company said? 'The skyrocketing housing prices are because supply has not kept up with demand.'"
    ],
    "raw_logic_programs": [
      "# Declarations\nassertions = EnumSort([A, B, C, D])\ntruth_values = EnumSort([true, false])\ndoubtful = Function([assertions] -> [truth_values])\n\n# Constraints\n# The problem does not provide specific constraints for the assertions, but we can infer that the assertion is doubtful if the correlation between land prices and housing prices is weak or contradicted.\n\n# Options\nQuestion ::: Which of the following, if true, is the most doubtful of an assertion?\nis_doubtful(doubtful(A) == true) ::: (A) Shanghai's housing prices in the first quarter of 2005 increased by 19.1% over the same period last year, and land prices rose by 6.53%.\nis_doubtful(doubtful(B) == true) ::: (B) Residential prices in Beijing increased by 7.2% in the first quarter of 2005 compared with the same period last year, and residential land prices rose by 0.37%.\nis_doubtful(doubtful(C) == true) ::: (C) The chairman of Huayuan Real Estate believes that as land development costs increase, house prices will definitely increase.\nis_doubtful(doubtful(D) == true) ::: (D) The chairman of Yongtai Development Company said, 'The skyrocketing housing prices are because supply has not kept up with demand.'"
    ]
  },
  {
    "id": 205,
    "context": "The virtuous cycle of the economy refers to not relying too much on government investment and relying on its own power to achieve a basic balance of total social supply and total social demand and economic growth.In recent years, China 's steady economic growth has been achieved through increased government investment.",
    "question": "If the above statement is true, which of the following conclusions can best be supported?",
    "answer": "C",
    "options": [
      "A.The virtuous cycle of the economy can be realized only by the investment momentum and consumption momentum generated by the economy itself.",
      "B.The virtuous cycle of the economy is a prerequisite for achieving a basic balance between total social supply and total demand.",
      "C.Stable economic growth in a certain period does not mean that the economy in this period has turned into a virtuous circle.",
      "D.In recent years, China's economic growth rate has remained above 7%."
    ],
    "raw_logic_programs": [
      "# Declarations\neconomic_concepts = EnumSort([virtuous_cycle, government_investment, economic_growth, social_supply_demand_balance])\nstatements = EnumSort([statement_true, statement_false])\nsupports = Function([statements, economic_concepts] -> [bool])\n\n# Constraints\nsupports(statement_true, government_investment) ::: China's steady economic growth has been achieved through increased government investment\nNot(supports(statement_true, virtuous_cycle)) ::: The virtuous cycle of the economy refers to not relying too much on government investment\n\n# Options\nQuestion ::: If the above statement is true, which of the following conclusions can best be supported?\nis_supported(supports(statement_true, economic_growth) & Not(supports(statement_true, virtuous_cycle))) ::: (A)\nis_supported(supports(statement_true, social_supply_demand_balance) & supports(statement_true, virtuous_cycle)) ::: (B)\nis_supported(supports(statement_true, economic_growth) & Not(supports(statement_true, virtuous_cycle))) ::: (C)\nis_supported(supports(statement_true, economic_growth)) ::: (D)"
    ]
  },
  {
    "id": 206,
    "context": "Culture is reflected in how a person treats himself, others, and the natural environment in which he lives.In a society with a solid cultural environment, people know how to respect themselves-he is meticulous and meticulous and has taste; people know how to respect others-he is not overbearing and morality is not overbearing; people know how to respect nature-he does not rob Only if you do not plunder do you have a sustainable life.",
    "question": "Which of the following cannot be derived from the above sentence?",
    "answer": "D",
    "options": [
      "A.If a person is careful, he has no taste.",
      "B.If a person is overbearing, he is immoral.",
      "C.If humans plunder nature, there will be no sustainable life.",
      "D.If a person is immoral, he is overbearing and careful."
    ],
    "raw_logic_programs": [
      "# Declarations\ntraits = EnumSort([careful, tasteful, overbearing, moral, plundering, sustainable_life])\npeople = EnumSort([person, society])\n\n# Constraints\nForAll([p:people], Implies(And(p == society, Not(plundering)), sustainable_life)) ::: Only if you do not plunder do you have a sustainable life\nForAll([p:people], Implies(And(p == person, careful), tasteful)) ::: If a person is careful, he has taste\nForAll([p:people], Implies(And(p == person, overbearing), Not(moral))) ::: If a person is overbearing, he is not moral\n\n# Options\nQuestion ::: Which of the following cannot be derived from the above sentence?\nis_unsat(Implies(careful, Not(tasteful))) ::: (A)\nis_unsat(Implies(overbearing, Not(moral))) ::: (B)\nis_unsat(Implies(plundering, Not(sustainable_life))) ::: (C)\nis_unsat(Implies(Not(moral), And(overbearing, careful))) ::: (D)"
    ]
  },
  {
    "id": 207,
    "context": "An editor is considering the issue of choosing the manuscript for the theoretical version of the newspaper.Six papers from E, F, G, J and K are available.Taking into account the content of the article, the layout of the newspaper and other factors.(1) If paper E is used, then paper F cannot be used but paper K must be used; (2) Paper G or paper H can only be used without paper J.(3) If you don't need thesis G, you don't need thesis K.(4) Essay E is a manuscript requested by a celebrity and cannot be used.",
    "question": "If the above items are true, which of the following items must be true?",
    "answer": "C",
    "options": [
      "A.Paper E is used, but paper H is not used.",
      "B.Both articles G and H are used.",
      "C.No paper J, but paper K.",
      "D.Both G and J articles are unnecessary."
    ],
    "raw_logic_programs": [
      "# Declarations\npapers = EnumSort([E, F, G, H, J, K])\nused = Function([papers] -> [bool])\n\n# Constraints\nNot(used(E)) ::: Essay E is a manuscript requested by a celebrity and cannot be used\nImplies(used(E), And(Not(used(F)), used(K))) ::: If paper E is used, then paper F cannot be used but paper K must be used\nImplies(Or(used(G), used(H)), Not(used(J))) ::: Paper G or paper H can only be used without paper J\nImplies(Not(used(G)), Not(used(K))) ::: If you don't need thesis G, you don't need thesis K\n\n# Options\nQuestion ::: If the above items are true, which of the following items must be true?\nis_valid(And(used(E), Not(used(H)))) ::: (A) Paper E is used, but paper H is not used.\nis_valid(And(used(G), used(H))) ::: (B) Both articles G and H are used.\nis_valid(And(Not(used(J)), used(K))) ::: (C) No paper J, but paper K.\nis_valid(And(Not(used(G)), Not(used(J)))) ::: (D) Both G and J articles are unnecessary."
    ]
  },
  {
    "id": 208,
    "context": "The proactive fiscal policy uses the method of issuing treasury bonds to make up for the fiscal deficit.The old bonds are due, the principal and interest have to be repaid, and some of the new bonds issued have to pay off the old bonds.As time goes by, there are more and more old debts, more and more new debts are used to pay off old debts, less investment is used, and the economic benefits are getting worse.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "D",
    "options": [
      "A.The economic benefits of active fiscal policy are declining.",
      "B.The funds raised by the proactive fiscal policy can only be used for infrastructure construction.",
      "C.The method of using government bonds to make up for fiscal deficits cannot be used for a long time.",
      "D.Before the maturity of the national debt, its investment return is not enough to repay the debt."
    ],
    "raw_logic_programs": [
      "# Declarations\nbonds = EnumSort([old_bonds, new_bonds])\nuses = EnumSort([repay_old, invest])\npolicy = Function([bonds] -> [uses])\n\n# Constraints\npolicy(old_bonds) == repay_old ::: The old bonds are due, the principal and interest have to be repaid\npolicy(new_bonds) == repay_old ::: Some of the new bonds issued have to pay off the old bonds\nCount([b:bonds], policy(b) == repay_old) > Count([b:bonds], policy(b) == invest) ::: More and more new debts are used to pay off old debts, less investment is used\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(Count([b:bonds], policy(b) == invest) < Count([b:bonds], policy(b) == repay_old)) ::: (A)\nis_assumption(ForAll([b:bonds], Implies(policy(b) == invest, False))) ::: (B)\nis_assumption(Exists([b:bonds], policy(b) == repay_old)) ::: (C)\nis_assumption(ForAll([b:bonds], Implies(policy(b) == invest, False))) ::: (D)"
    ]
  },
  {
    "id": 209,
    "context": "The truth of history is not equal to the true history.Lu Xun said that 'Historical Records' is 'History's unique song, without rhyme'.Good historical works must break through the rigid historical truth view, directly touch the souls of historical figures, and write the essence of history.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "B",
    "options": [
      "A.Good historical works not only faithfully report historical facts, but also vividly portray the souls of characters.",
      "B.Historical works that merely faithfully record historical facts are not good historical works.",
      "C.Among all historical works, only 'Historical Records' is a good historical work.",
      "D.It is just a vivid depiction of the souls of historical figures.Works that do not report historical facts are not historical works."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nassumption = Function([statements] -> [bool])\n\n# Constraints\nargument = \"Good historical works must break through the rigid historical truth view, directly touch the souls of historical figures, and write the essence of history.\"\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(assumption(A)) ::: (A) Good historical works not only faithfully report historical facts, but also vividly portray the souls of characters.\nis_assumption(assumption(B)) ::: (B) Historical works that merely faithfully record historical facts are not good historical works.\nis_assumption(assumption(C)) ::: (C) Among all historical works, only 'Historical Records' is a good historical work.\nis_assumption(assumption(D)) ::: (D) It is just a vivid depiction of the souls of historical figures. Works that do not report historical facts are not historical works."
    ]
  },
  {
    "id": 210,
    "context": "If you want to start your own company, you have to know that you are great in one thing, for example, your product is better than others; when others are doing as well, you are faster than others; others are also When it is equally fast, you have a lower cost than others, and when others have the same cost, you have higher added value than others.",
    "question": "Which of the following is closest to the meaning of the above paragraph?",
    "answer": "C",
    "options": [
      "A.Only by doing the best in at least one thing can your company gain a foothold in the market competition.",
      "B.If your company is not the best in anything, it is likely to lose out in the market competition.",
      "C.If your company does the best thing in at least one thing, it will definitely make huge profits.",
      "D.Unless your company is doing its best in at least one thing, it cannot succeed in market competition."
    ],
    "raw_logic_programs": [
      "# Declarations\nqualities = EnumSort([product_quality, speed, cost, added_value])\ncomparison = Function([qualities] -> [bool])\n\n# Constraints\nForAll([q:qualities], Or(comparison(q) == better, comparison(q) == equal, comparison(q) == worse)) ::: You are either better, equal, or worse in each quality compared to others\n\n# Options\nQuestion ::: Which of the following is closest to the meaning of the above paragraph?\nis_closest(Exists([q:qualities], comparison(q) == better)) ::: (A) Only by doing the best in at least one thing can your company gain a foothold in the market competition.\nis_closest(Not(Exists([q:qualities], comparison(q) == better))) ::: (B) If your company is not the best in anything, it is likely to lose out in the market competition.\nis_closest(Exists([q:qualities], comparison(q) == better)) ::: (C) If your company does the best thing in at least one thing, it will definitely make huge profits.\nis_closest(Not(Exists([q:qualities], comparison(q) == better))) ::: (D) Unless your company is doing its best in at least one thing, it cannot succeed in market competition."
    ]
  },
  {
    "id": 211,
    "context": "The report on an important experimental result is controversial.The experiment was repeated under the guidance of a scientist, but the same result as the original experiment was not obtained; the scientist concluded from this? the initial experiment The result is caused by the wrong measurement method.",
    "question": "Which of the following is the hypothetical hypothesis of this scientist?",
    "answer": "A",
    "options": [
      "A.If the result of an experiment is correct, then the experiment under the same conditions should yield the same result.",
      "B.Since the initial experiment was not recorded in sufficient detail, it is unlikely to repeat this experiment completely.",
      "C.Repeating the experiment will not cause problematic results due to the wrong measurement method as the original experiment.",
      "D.The initial experimental results made a theoretical principle questionable, and the basis of the principle itself is insufficient."
    ],
    "raw_logic_programs": [
      "# Declarations\nexperiments = EnumSort([initial, repeated])\nresults = EnumSort([correct, incorrect])\nmeasurement_methods = EnumSort([correct_method, incorrect_method])\nobtained_result = Function([experiments] -> [results])\nmeasurement_method = Function([experiments] -> [measurement_methods])\n\n# Constraints\nobtained_result(initial) == correct ::: The initial experiment result is considered correct\nobtained_result(repeated) == incorrect ::: The repeated experiment did not obtain the same result as the initial experiment\nmeasurement_method(initial) == incorrect_method ::: The scientist concluded the initial experiment result is caused by the wrong measurement method\n\n# Options\nQuestion ::: Which of the following is the hypothetical hypothesis of this scientist?\nis_hypothesis(Implies(obtained_result(initial) == correct, obtained_result(repeated) == correct)) ::: (A)\nis_hypothesis(Not(Exists([d:details], recorded(initial, d)))) ::: (B)\nis_hypothesis(Not(Exists([m:measurement_methods], measurement_method(repeated) == incorrect_method))) ::: (C)\nis_hypothesis(Implies(obtained_result(initial) == correct, Not(Exists([p:principles], questioned(p))))) ::: (D)"
    ]
  },
  {
    "id": 212,
    "context": "There must be an outside world, because if there is something outside me that can shine or reflect, shining the light into my eyes, which gives me a visual experience, I ca n't see the buildings, the crowds and the stars these things.And, not only have visual experience like me, but others also have such visual experience; book knowledge also tells us repeatedly that there is an outside world outside of us.",
    "question": "Which of the following does not constitute doubt or rebuttal to the above argument?",
    "answer": "D",
    "options": [
      "A.To use sensory evidence to explain the existence of the external world requires presupposing the existence of the external world in the mind.",
      "B.How do you prove that others have similar visual experience to you?",
      "C.Since the visual experience is reliable, Mirage is not a so-called illusion, but a real existence.",
      "D.If there is no external world and natural science knowledge is not a true reflection of it, then why does natural science achieve such great success in practice?"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\ndoubt_or_rebuttal = Function([arguments] -> [bool])\n\n# Constraints\ndoubt_or_rebuttal(A) == True ::: To use sensory evidence to explain the existence of the external world requires presupposing the existence of the external world in the mind.\ndoubt_or_rebuttal(B) == True ::: How do you prove that others have similar visual experience to you?\ndoubt_or_rebuttal(C) == True ::: Since the visual experience is reliable, Mirage is not a so-called illusion, but a real existence.\ndoubt_or_rebuttal(D) == False ::: If there is no external world and natural science knowledge is not a true reflection of it, then why does natural science achieve such great success in practice?\n\n# Options\nQuestion ::: Which of the following does not constitute doubt or rebuttal to the above argument?\nis_not_doubt_or_rebuttal(doubt_or_rebuttal(D) == False) ::: (D)"
    ]
  },
  {
    "id": 213,
    "context": "Either adopt a austerity fiscal policy or an expansion fiscal policy.Since the austerity fiscal policy will cause more people to be laid off, it is necessary to adopt an expansion fiscal policy.",
    "question": "Which of the following questions is most important for commenting on the above argument?",
    "answer": "D",
    "options": [
      "A.Are there any other adverse effects of the austerity finances?",
      "B.Is there a fiscal policy that is neither austerity nor expansion?",
      "C.Can the expanded fiscal policy significantly increase the employment rate?",
      "D.Can the expanded fiscal policy lead to other adverse consequences?"
    ],
    "raw_logic_programs": [
      "# Declarations\npolicies = EnumSort([austerity, expansion])\neffects = EnumSort([layoffs, increase_employment, adverse_consequences])\ncauses = Function([policies] -> [effects])\n\n# Constraints\ncauses(austerity) == layoffs ::: The austerity fiscal policy will cause more people to be laid off\ncauses(expansion) == increase_employment ::: The expansion fiscal policy is assumed to increase employment\n\n# Options\nQuestion ::: Which of the following questions is most important for commenting on the above argument?\nis_important(Exists([e:effects], e == adverse_consequences)) ::: (A) Are there any other adverse effects of the austerity finances?\nis_important(Exists([p:policies], And(p != austerity, p != expansion))) ::: (B) Is there a fiscal policy that is neither austerity nor expansion?\nis_important(causes(expansion) == increase_employment) ::: (C) Can the expanded fiscal policy significantly increase the employment rate?\nis_important(Exists([e:effects], e == adverse_consequences)) ::: (D) Can the expanded fiscal policy lead to other adverse consequences?"
    ]
  },
  {
    "id": 214,
    "context": "The Terracotta Warriors and Horses of Qin Shihuang unearthed in Shaanxi were painted on the surface with raw lacquer and painted.This provides important information for studying the clothing color of the soldiers of the Qin Dynasty.However, after the terracotta warriors are unearthed, the raw paint on the surface will quickly warp and curl, causing the entire painted layer to fall off.Therefore, it must be protected by two methods of protection liquid and monomer penetration, otherwise it cannot be used for research.Once these two methods are used to protect the terracotta warriors, all the information about the Qin Dynasty painting techniques that researchers may obtain from it will be broken.",
    "question": "If the above statement is true, which of the following must be true?",
    "answer": "D",
    "options": [
      "A.After taking protective measures, the Qin Terracotta Warriors and Horses can only provide information about the clothes of the Qin Dynasty soldiers.",
      "B.A terracotta warrior for studying the clothes of the Qin dynasty soldiers cannot be a source of new information for understanding the painting techniques of the Qin dynasty.",
      "C.The Terracotta Army of Qin is the only source of information for understanding the painting techniques of the Qin Dynasty.",
      "D.A terracotta warrior without protective measures can provide more information than a terracotta warrior after taking protective measures."
    ],
    "raw_logic_programs": [
      "# Declarations\nterracotta_warriors = EnumSort([protected, unprotected])\ninformation = EnumSort([clothing_color, painting_techniques])\nprovides_info = Function([terracotta_warriors, information] -> [bool])\n\n# Constraints\nForAll([w:terracotta_warriors], And(provides_info(w, clothing_color), Not(provides_info(w, painting_techniques)))) ::: Once protected, terracotta warriors cannot provide information about painting techniques\n\n# Options\nQuestion ::: If the above statement is true, which of the following must be true?\nis_true(And(provides_info(protected, clothing_color), Not(provides_info(protected, painting_techniques)))) ::: (A)\nis_true(Not(provides_info(protected, painting_techniques))) ::: (B)\nis_true(False) ::: (C)  # This option is not supported by the given constraints\nis_true(provides_info(unprotected, painting_techniques)) ::: (D)"
    ]
  },
  {
    "id": 215,
    "context": "Real estate developers in a city can only raise more development funds through direct loans from banks or through pre-sale of commercial housing.The government does not allow banks to increase direct loans to the real estate industry.As a result, real estate developers in the city cannot raise more development funds because _______",
    "question": "Which of the following options can logically complete the above argument?",
    "answer": "B",
    "options": [
      "A.Some real estate developers have pre-sold commercial housing and ran away with money, making the completion of the project far away.",
      "B.The central bank canceled the pre-sale system for commercial housing.",
      "C.Construction companies are reluctant to advance construction.",
      "D.Some developers postpone delivery after the sale of off-plan houses, which makes many buyers doubt the developers."
    ],
    "raw_logic_programs": [
      "# Declarations\nsources = EnumSort([direct_loans, pre_sale])\nactions = EnumSort([raise_funds])\ndevelopers = EnumSort([real_estate_developers])\ngovernment_policies = EnumSort([no_increase_loans, cancel_pre_sale])\n\n# Constraints\nForAll([d:developers], Or(actions(d) == direct_loans, actions(d) == pre_sale)) ::: Real estate developers can only raise more development funds through direct loans or pre-sale\nForAll([d:developers], Not(actions(d) == direct_loans)) ::: The government does not allow banks to increase direct loans to the real estate industry\n\n# Options\nQuestion ::: Which of the following options can logically complete the above argument?\nis_logical_consequence(government_policies == cancel_pre_sale) ::: (B) The central bank canceled the pre-sale system for commercial housing."
    ]
  },
  {
    "id": 216,
    "context": "If you do not try to provide the income of the low-income earners, society will be unstable; if you do not allow the private economy to get a return, the economy will not be able to go up.Faced with the dilemma of income and distribution, it is correct to advocate 'efficiency first, and fairness'.If we listen to the idea of â€‹â€‹'fairness first, and efficiency', our economy will return to 'neither efficiency nor fairness.' Years.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "D",
    "options": [
      "A.The biggest problem in the current society is the dilemma of income and distribution",
      "B.Between the dilemma of income and distribution, there is a third path to balance.",
      "C.'Equal efficiency and fairness' is better than 'efficiency first, fairness' and 'fair priority, efficiency'.",
      "D.Advocating 'efficiency first and fairness' will not bring the economy back to the era of 'inefficiency and inequity'."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nassumption = Function([statements] -> [bool])\n\n# Constraints\n# The argument relies on the assumption that advocating 'efficiency first and fairness' will not bring the economy back to the era of 'inefficiency and inequity'.\nassumption(D) ::: Advocating 'efficiency first and fairness' will not bring the economy back to the era of 'inefficiency and inequity'.\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(assumption(A)) ::: (A)\nis_assumption(assumption(B)) ::: (B)\nis_assumption(assumption(C)) ::: (C)\nis_assumption(assumption(D)) ::: (D)"
    ]
  },
  {
    "id": 217,
    "context": "As an educational undertaking, universities belong to non-economic industries, and their output is difficult to measure with monetary indicators and physical indicators, so university ranking is not as easy as enterprise ranking.University rankings must also be based on a mature market economy system and a stable system, and there must be a recognized notary ranking agency.In China, the prerequisites for university rankings are far from being met, and recognized university ranking institutions have not yet been created.Therefore, China is currently not suitable for university rankings.",
    "question": "Which of the following does not constitute a rebuttal to the above argument?",
    "answer": "A",
    "options": [
      "A.University rankings have a great influence on the reputation of the school and the candidates' application.",
      "B.There is no such close relationship between university rankings and mature market economic systems.",
      "C.The ranking of enterprises is not easy, and it is not very accurate, just for reference value.",
      "D.Recognized ranking agencies can only be generated from ranking practice."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nrebuttal = Function([arguments] -> [bool])\n\n# Constraints\nForAll([a:arguments], rebuttal(a) == True) ::: Each argument is considered a potential rebuttal\n\n# Options\nQuestion ::: Which of the following does not constitute a rebuttal to the above argument?\nis_not_rebuttal(rebuttal(A)) ::: (A)\nis_not_rebuttal(rebuttal(B)) ::: (B)\nis_not_rebuttal(rebuttal(C)) ::: (C)\nis_not_rebuttal(rebuttal(D)) ::: (D)"
    ]
  },
  {
    "id": 218,
    "context": "Researchers have found that eating more than five servings of yam, corn, carrots, onions, or other similar vegetables every day can reduce the risk of pancreatic cancer.They surveyed 2,230 respondents, including 532 patients with pancreatic cancer, and then classified the agricultural products consumed by the cancer, and asked them about other lifestyle habits, such as overall diet and smoking, and compared it with 1701 other people.Compare living habits.It was found that people who ate at least five servings of vegetables per day were half as likely to develop pancreatic cancer as those who ate less than two servings of vegetables per day.",
    "question": "Which of the following questions does not constitute a doubt about the reliability of the above research conclusion?",
    "answer": "B",
    "options": [
      "A.Are all the interviewees saying in the survey true?",
      "B.What is the proportion of men and women in patients with pancreatic cancer?",
      "C.Is there an important omission in the differences in living habits between patients with pancreatic cancer and non-pancreatic cancer involved in the investigation?",
      "D.Are there genetic causes for patients with pancreatic cancer?"
    ],
    "raw_logic_programs": [
      "# Declarations\nrespondents = EnumSort([cancer_patients, non_cancer_patients])\nvegetable_servings = EnumSort([less_than_two, at_least_five])\nlifestyle_factors = EnumSort([diet, smoking, genetics])\nsurveyed = Function([respondents] -> [vegetable_servings])\nlifestyle = Function([respondents, lifestyle_factors] -> [bool])\n\n# Constraints\nCount([r:respondents], surveyed(r) == at_least_five) > Count([r:respondents], surveyed(r) == less_than_two) ::: people who ate at least five servings of vegetables per day were half as likely to develop pancreatic cancer as those who ate less than two servings\n\n# Options\nQuestion ::: Which of the following questions does not constitute a doubt about the reliability of the above research conclusion?\nis_not_doubtful(ForAll([r:respondents], lifestyle(r, diet) == True)) ::: (A)\nis_not_doubtful(Exists([r:respondents], lifestyle(r, smoking) == True)) ::: (B)\nis_not_doubtful(Exists([r:respondents], lifestyle(r, diet) == False)) ::: (C)\nis_not_doubtful(Exists([r:respondents], lifestyle(r, genetics) == True)) ::: (D)"
    ]
  },
  {
    "id": 219,
    "context": "Researchers have found that eating more than five servings of yam, corn, carrots, onions, or other similar vegetables every day can reduce the risk of pancreatic cancer.They surveyed 2,230 respondents, including 532 patients with pancreatic cancer, and then classified the agricultural products consumed by the cancer, and asked them about other lifestyle habits, such as overall diet and smoking, and compared it with 1701 other people.Compare living habits.It was found that people who ate at least five servings of vegetables per day were half as likely to develop pancreatic cancer as those who ate less than two servings of vegetables per day.",
    "question": "Which of the following methods is most helpful to prove the reliability of the above research conclusion?",
    "answer": "A",
    "options": [
      "A.Find out the proportion of pancreatic cancer patients in the meat-based group who rarely consumes the above vegetables.",
      "B.Study the clinical manifestations and treatment methods of patients with pancreatic cancer.",
      "C.Try to make the lives of pancreatic cancer patients as happy as possible to extend their lifespan.",
      "D.Through laboratory research, find out which ingredients are contained in the above vegetables."
    ],
    "raw_logic_programs": [
      "# Declarations\nrespondents = EnumSort([cancer_patients, non_cancer_patients])\nvegetable_intake = EnumSort([less_than_two_servings, at_least_five_servings])\nlifestyle_factors = Function([respondents] -> [vegetable_intake])\n\n# Constraints\nCount([r:respondents], lifestyle_factors(r) == at_least_five_servings) > Count([r:respondents], lifestyle_factors(r) == less_than_two_servings) ::: People who ate at least five servings of vegetables per day were half as likely to develop pancreatic cancer as those who ate less than two servings\n\n# Options\nQuestion ::: Which of the following methods is most helpful to prove the reliability of the above research conclusion?\nis_helpful(Compare([r:respondents], lifestyle_factors(r) == less_than_two_servings, r == cancer_patients)) ::: (A)\nis_helpful(Study([r:respondents], r == cancer_patients)) ::: (B)\nis_helpful(Enhance_life_quality([r:respondents], r == cancer_patients)) ::: (C)\nis_helpful(Identify_ingredients([v:vegetables], v in [yam, corn, carrots, onions])) ::: (D)"
    ]
  },
  {
    "id": 220,
    "context": "At home, the concept of privatization seems to be the separation of state-owned assets.In essence, it is the protection of private property ownership.If there is no legal basis for the protection of this right, state-owned assets can be separated and the property can be confiscated at any time.",
    "question": "If the above is true, which statement is most strongly supported?",
    "answer": "C",
    "options": [
      "A.If there is no private property to protect, the law protecting private property is meaningless.",
      "B.Even if there is a law protecting private property, it cannot be effectively enforced.",
      "C.The privatization system is based on the legal rights to own private property.",
      "D.Privatization and market liberalization are issues that should be valued by the socialist market economy."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([privatization, private_property, legal_protection, state_owned_assets])\nstatements = EnumSort([A, B, C, D])\nsupports = Function([statements] -> [bool])\n\n# Constraints\nImplies(privatization == separation_of_state_owned_assets, legal_protection == protection_of_private_property) ::: Privatization is the separation of state-owned assets and protection of private property ownership\nImplies(Not(legal_protection), state_owned_assets == separable_and_confiscable) ::: Without legal protection, state-owned assets can be separated and confiscated\n\n# Options\nQuestion ::: If the above is true, which statement is most strongly supported?\nsupports(A) ::: (A) If there is no private property to protect, the law protecting private property is meaningless.\nsupports(B) ::: (B) Even if there is a law protecting private property, it cannot be effectively enforced.\nsupports(C) ::: (C) The privatization system is based on the legal rights to own private property.\nsupports(D) ::: (D) Privatization and market liberalization are issues that should be valued by the socialist market economy."
    ]
  },
  {
    "id": 221,
    "context": "The development prospect of Huaizhou City is not optimistic.Its development depends on industry.Industry provides jobs and wages for residents, and its natural environment depends on eliminating industrial pollution.Industrial pollution threatens its air, water and buildings.Unfortunately, its industry inevitably produces pollution.",
    "question": "If all of the above are true, which of them strongly supports the following statement?",
    "answer": "B",
    "options": [
      "A.The quality of life in Huaizhou depends only on its economic growth and natural living environment.",
      "B.Huaizhou City will certainly encounter the problems of stagnation of economic development or deterioration of the natural environment.",
      "C.The economic environment of Huaizhou has deteriorated in recent years.",
      "D.The pollution of air, water and buildings in Huaizhou City is mainly caused by chemical companies."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ntruth_values = EnumSort([true, false])\nsupports = Function([statements] -> [truth_values])\n\n# Constraints\nsupports(A) == false ::: The quality of life in Huaizhou depends only on its economic growth and natural living environment is not strongly supported by the given information.\nsupports(C) == false ::: The economic environment of Huaizhou has deteriorated in recent years is not directly supported by the given information.\nsupports(D) == false ::: The pollution of air, water and buildings in Huaizhou City is mainly caused by chemical companies is not directly supported by the given information.\n\n# Options\nQuestion ::: If all of the above are true, which of them strongly supports the following statement?\nis_strong_support(supports(B) == true) ::: (B) Huaizhou City will certainly encounter the problems of stagnation of economic development or deterioration of the natural environment."
    ]
  },
  {
    "id": 222,
    "context": "For listed companies, only companies with dividends can issue new stocks.However, if a company has a dividend, it does not need funds.If it needs financing, there is no way to pay dividends.",
    "question": "If the above statement is true, which of the following statements cannot be false?",
    "answer": "A",
    "options": [
      "A.A listed company does not need financing, or is not a company with dividends.",
      "B.A listed company needs financing, or a company without dividends.",
      "C.A listed company does not need to issue new stocks, or is not a company with dividends.",
      "D.The only way for a listed company to finance is to issue new stocks."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([listed_company])\nattributes = EnumSort([dividends, needs_financing, issues_new_stocks])\nhas_attribute = Function([companies, attributes] -> [bool])\n\n# Constraints\nForAll([c:companies], Implies(has_attribute(c, dividends), Not(has_attribute(c, needs_financing)))) ::: if a company has a dividend, it does not need funds\nForAll([c:companies], Implies(has_attribute(c, needs_financing), Not(has_attribute(c, dividends)))) ::: if it needs financing, there is no way to pay dividends\nForAll([c:companies], Implies(has_attribute(c, issues_new_stocks), has_attribute(c, dividends))) ::: only companies with dividends can issue new stocks\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements cannot be false?\nis_not_false(Or(Not(has_attribute(listed_company, needs_financing)), Not(has_attribute(listed_company, dividends)))) ::: (A)\nis_not_false(Or(has_attribute(listed_company, needs_financing), Not(has_attribute(listed_company, dividends)))) ::: (B)\nis_not_false(Or(Not(has_attribute(listed_company, issues_new_stocks)), Not(has_attribute(listed_company, dividends)))) ::: (C)\nis_not_false(ForAll([c:companies], Implies(has_attribute(c, needs_financing), has_attribute(c, issues_new_stocks)))) ::: (D)"
    ]
  },
  {
    "id": 223,
    "context": "For listed companies, only companies with dividends can issue new stocks.However, if a company has a dividend, it does not need funds.If it needs financing, there is no way to pay dividends.",
    "question": "If the above statement is true, which statement cannot be true?",
    "answer": "D",
    "options": [
      "A.A listed company needs financing and has no way to pay dividends.",
      "B.A listed company either needs financing or has no way to pay dividends.",
      "C.A listed company does not need financing, it will definitely pay dividends.",
      "D.A listed company needs both financing and dividends."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([listed_company])\nproperties = EnumSort([dividends, needs_financing, can_issue_stocks])\nhas_property = Function([companies, properties] -> [bool])\n\n# Constraints\nForAll([c:companies], Implies(has_property(c, dividends), Not(has_property(c, needs_financing)))) ::: if a company has a dividend, it does not need funds\nForAll([c:companies], Implies(has_property(c, needs_financing), Not(has_property(c, dividends)))) ::: if it needs financing, there is no way to pay dividends\nForAll([c:companies], Implies(has_property(c, dividends), has_property(c, can_issue_stocks))) ::: only companies with dividends can issue new stocks\n\n# Options\nQuestion ::: If the above statement is true, which statement cannot be true?\nis_unsat(And(has_property(listed_company, needs_financing), Not(has_property(listed_company, dividends)))) ::: (A)\nis_unsat(Or(has_property(listed_company, needs_financing), Not(has_property(listed_company, dividends)))) ::: (B)\nis_unsat(Implies(Not(has_property(listed_company, needs_financing)), has_property(listed_company, dividends))) ::: (C)\nis_unsat(And(has_property(listed_company, needs_financing), has_property(listed_company, dividends))) ::: (D)"
    ]
  },
  {
    "id": 224,
    "context": "A survey of the trustworthiness of businessmen in 31 provinces, municipalities and autonomous regions in China shows that half of the locals believe that the locals are trustworthy.For example, the reliability score scored by Beijingers for Beijingers is 57.9.The score for the Tianjin people was 15, with one exception, that is, Hainanese do not trust Hainanese themselves.",
    "question": "If the following statement is true, in addition to which one can provide a reasonable explanation for the above exception?",
    "answer": "C",
    "options": [
      "A.Hainan is already full of liars and does not trust each other.",
      "B.The vast majority of the spot-checked people in Hainan were left to go there for business.",
      "C.Foreigners do not understand Hainan businessmen and give them a low trust score.",
      "D.Most businessmen doing business in Hainan are not locals."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([Beijing, Tianjin, Hainan, OtherRegions])\ntrustworthiness = Function([regions, regions] -> [float])\n\n# Constraints\ntrustworthiness(Beijing, Beijing) == 57.9 ::: The reliability score scored by Beijingers for Beijingers is 57.9\ntrustworthiness(Tianjin, Tianjin) == 15 ::: The score for the Tianjin people was 15\ntrustworthiness(Hainan, Hainan) < 50 ::: Hainanese do not trust Hainanese themselves\nForAll([r:regions], trustworthiness(r, r) >= 50) ::: Half of the locals believe that the locals are trustworthy\n\n# Options\nQuestion ::: If the following statement is true, in addition to which one can provide a reasonable explanation for the above exception?\nis_reasonable_explanation(trustworthiness(Hainan, Hainan) < 50, \"Hainan is already full of liars and does not trust each other.\") ::: (A)\nis_reasonable_explanation(trustworthiness(Hainan, Hainan) < 50, \"The vast majority of the spot-checked people in Hainan were left to go there for business.\") ::: (B)\nis_reasonable_explanation(trustworthiness(Hainan, Hainan) < 50, \"Foreigners do not understand Hainan businessmen and give them a low trust score.\") ::: (C)\nis_reasonable_explanation(trustworthiness(Hainan, Hainan) < 50, \"Most businessmen doing business in Hainan are not locals.\") ::: (D)"
    ]
  },
  {
    "id": 225,
    "context": "History is not a net prepared by the innocent hand.Of all the causes of depravity and moral loss, rights are the most eternal and active.Therefore, some systems should be designed to limit and prevent the abuse of power.",
    "question": "The following hypothesis can give the strongest support for the above reasoning?",
    "answer": "B",
    "options": [
      "A.We should try to avoid depravity and moral loss.",
      "B.Power often depraves and destroys morality.",
      "C.People without rights have no chance to degenerate morally.",
      "D.Some depraved and morally degraded people usually have great power."
    ],
    "raw_logic_programs": [
      "# Declarations\ncauses = EnumSort([depravity, moral_loss, rights, power])\nsystems = EnumSort([limit, prevent])\nactions = Function([systems, causes] -> [bool])\n\n# Constraints\nForAll([c:causes], Or(c == depravity, c == moral_loss, c == rights)) ::: Of all the causes of depravity and moral loss, rights are the most eternal and active\nForAll([s:systems], Or(actions(s, limit), actions(s, prevent))) ::: Some systems should be designed to limit and prevent the abuse of power\n\n# Options\nQuestion ::: The following hypothesis can give the strongest support for the above reasoning?\nis_strongest_support(Implies(actions(limit, power), actions(prevent, depravity))) ::: (A)\nis_strongest_support(Implies(actions(limit, power), actions(prevent, moral_loss))) ::: (B)\nis_strongest_support(Implies(Not(actions(limit, rights)), Not(actions(prevent, depravity)))) ::: (C)\nis_strongest_support(Implies(actions(limit, power), actions(prevent, rights))) ::: (D)"
    ]
  },
  {
    "id": 226,
    "context": "The characteristic of capital is the pursuit of profit.In the first half of 2004, the price increase in China exceeded the interest rate of bank deposits.From January to July, residents 'income continued to increase, but the growth rate of residents' savings deposits continued to decline.Outflow deposits in July reached about 100 billion yuan, and the proportion of time deposits in all deposits continued to decline.",
    "question": "Which of the following, if true, can best explain the flow of most of the 100 billion yuan savings funds?",
    "answer": "C",
    "options": [
      "A.As the expected price continues to rise, many residents' funds can only survive, so that they can buy the goods they need at any time.",
      "B.Due to the expected increase in bank interest rates, many residents' funds can only survive for a period of time.",
      "C.As the state controls the scale of loans, the funds of the majority of private enterprises are tight, and private lending is active.The interest on lending has been much higher than the bank deposit interest rate.",
      "D.Because bank deposit interest rates are too low, many residents consider whether to buy stocks or funds."
    ],
    "raw_logic_programs": [
      "# Declarations\nfunds = EnumSort([savings, consumption, private_lending, investments])\nevents = EnumSort([price_increase, interest_rate_increase, loan_control, low_interest_rates])\nflow = Function([funds] -> [bool])\ncauses = Function([events] -> [bool])\n\n# Constraints\ncauses(price_increase) ::: The price increase in China exceeded the interest rate of bank deposits\ncauses(interest_rate_increase) ::: Expected increase in bank interest rates\ncauses(loan_control) ::: State controls the scale of loans\ncauses(low_interest_rates) ::: Bank deposit interest rates are too low\n\n# Options\nQuestion ::: Which of the following, if true, can best explain the flow of most of the 100 billion yuan savings funds?\nis_best_explanation(And(flow(consumption), causes(price_increase))) ::: (A) As the expected price continues to rise, many residents' funds can only survive, so that they can buy the goods they need at any time.\nis_best_explanation(And(flow(savings), causes(interest_rate_increase))) ::: (B) Due to the expected increase in bank interest rates, many residents' funds can only survive for a period of time.\nis_best_explanation(And(flow(private_lending), causes(loan_control))) ::: (C) As the state controls the scale of loans, the funds of the majority of private enterprises are tight, and private lending is active. The interest on lending has been much higher than the bank deposit interest rate.\nis_best_explanation(And(flow(investments), causes(low_interest_rates))) ::: (D) Because bank deposit interest rates are too low, many residents consider whether to buy stocks or funds."
    ]
  },
  {
    "id": 227,
    "context": "If a crisis occurs, the company can take a very effective approach to eliminate the crisis, in fact, it can increase the company's reputation.A very good reputation may be destroyed in an instant, and a bad reputation often requires a long time to eliminate it.",
    "question": "If the above statement is true, which statement is best supported?",
    "answer": "A",
    "options": [
      "A.It is easier to destroy a good reputation than to eliminate a bad reputation.",
      "B.If the risk of reputation is not a risk, then there is no risk.",
      "C.Maintaining the company's reputation is the most important responsibility of the board of directors.",
      "D.Eliminating a bad reputation is harder than winning a good reputation."
    ],
    "raw_logic_programs": [
      "# Declarations\nreputation_states = EnumSort([good, bad])\nactions = EnumSort([destroy, eliminate])\ntime = EnumSort([instant, long_time])\neffectiveness = EnumSort([easy, hard])\nrisk = EnumSort([risk, no_risk])\nresponsibility = EnumSort([important, not_important])\n\n# Constraints\nForAll([r:reputation_states], Implies(r == good, actions(destroy) == instant)) ::: A very good reputation may be destroyed in an instant\nForAll([r:reputation_states], Implies(r == bad, actions(eliminate) == long_time)) ::: A bad reputation often requires a long time to eliminate it\n\n# Options\nQuestion ::: If the above statement is true, which statement is best supported?\nis_supported(And(actions(destroy) == instant, actions(eliminate) == long_time, effectiveness(destroy) == easy, effectiveness(eliminate) == hard)) ::: (A) It is easier to destroy a good reputation than to eliminate a bad reputation.\nis_supported(Implies(risk == no_risk, risk == no_risk)) ::: (B) If the risk of reputation is not a risk, then there is no risk.\nis_supported(responsibility == important) ::: (C) Maintaining the company's reputation is the most important responsibility of the board of directors.\nis_supported(And(actions(eliminate) == long_time, effectiveness(eliminate) == hard)) ::: (D) Eliminating a bad reputation is harder than winning a good reputation."
    ]
  },
  {
    "id": 228,
    "context": "In the history of China, officials are generally given a relatively low salary, so that the emperor can control him, because after the salary is low, the officials must be corrupt.The emperor can grasp this handle and heal him if he wants to heal him.If the salary is high and the officials do not have to be embezzled, the emperor will not be able to govern him.",
    "question": "Which of the following is the hypothesis that the above argument relies on?",
    "answer": "C",
    "options": [
      "A.Forcing officials to embezzle is the most stupid way for emperors to control officials.",
      "B.Forcing officials to embezzle is the cheapest way for the emperor to control officials.",
      "C.Forcing officials to embezzle is the only way for the emperor to control officials.",
      "D.Forcing officials to embezzle is the best way for the emperor to control officials."
    ],
    "raw_logic_programs": [
      "# Declarations\nofficials = EnumSort([official])\nsalary = EnumSort([low, high])\nembezzlement = EnumSort([yes, no])\ncontrol = EnumSort([can_control, cannot_control])\nsalary_level = Function([officials] -> [salary])\nembezzles = Function([officials] -> [embezzlement])\nemperor_control = Function([officials] -> [control])\n\n# Constraints\nForAll([o:officials], Implies(salary_level(o) == low, embezzles(o) == yes)) ::: If the salary is low, officials must embezzle\nForAll([o:officials], Implies(embezzles(o) == yes, emperor_control(o) == can_control)) ::: If officials embezzle, the emperor can control them\nForAll([o:officials], Implies(salary_level(o) == high, embezzles(o) == no)) ::: If the salary is high, officials do not have to embezzle\nForAll([o:officials], Implies(embezzles(o) == no, emperor_control(o) == cannot_control)) ::: If officials do not embezzle, the emperor cannot control them\n\n# Options\nQuestion ::: Which of the following is the hypothesis that the above argument relies on?\nis_hypothesis(ForAll([o:officials], Implies(emperor_control(o) == can_control, embezzles(o) == yes))) ::: (A)\nis_hypothesis(ForAll([o:officials], Implies(emperor_control(o) == can_control, embezzles(o) == yes))) ::: (B)\nis_hypothesis(ForAll([o:officials], Implies(emperor_control(o) == can_control, embezzles(o) == yes))) ::: (C)\nis_hypothesis(ForAll([o:officials], Implies(emperor_control(o) == can_control, embezzles(o) == yes))) ::: (D)"
    ]
  },
  {
    "id": 229,
    "context": "Over the past five years, the average price of new commercial housing has increased by 25% per square meter.In the average family budget for the same period, the proportion of the cost of buying commercial housing remained unchanged.Therefore, the average family budget must have increased by 25% in the past five years.",
    "question": "Which of the following statements about the situation over the past five years is the assumption upon which the above discussion relies?",
    "answer": "A",
    "options": [
      "A.On average, the area of â€‹â€‹new commercial housing purchased by each household remains unchanged.",
      "B.The proportion of food and children 's education in each family 's budget remains unchanged.",
      "C.The total cost of buying new commercial housing nationwide has increased by 25%.",
      "D.The proportion of all housing-related expenditures in each family budget remains unchanged."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([average_price_increase, family_budget_increase, housing_area_change, housing_cost_proportion_change])\nassumptions = Function([variables] -> [bool])\n\n# Constraints\nassumptions(average_price_increase) == True ::: The average price of new commercial housing has increased by 25% per square meter.\nassumptions(family_budget_increase) == True ::: The average family budget must have increased by 25% in the past five years.\nassumptions(housing_cost_proportion_change) == False ::: The proportion of the cost of buying commercial housing in the average family budget remained unchanged.\n\n# Options\nQuestion ::: Which of the following statements about the situation over the past five years is the assumption upon which the above discussion relies?\nis_assumption(assumptions(housing_area_change) == False) ::: (A) On average, the area of new commercial housing purchased by each household remains unchanged.\nis_assumption(assumptions(housing_area_change) == True) ::: (B) The proportion of food and children's education in each family's budget remains unchanged.\nis_assumption(assumptions(housing_area_change) == True) ::: (C) The total cost of buying new commercial housing nationwide has increased by 25%.\nis_assumption(assumptions(housing_area_change) == True) ::: (D) The proportion of all housing-related expenditures in each family budget remains unchanged."
    ]
  },
  {
    "id": 230,
    "context": "I can relate some external symbols to some inner events, for example, to associate moaning and face distortion with the feeling of pain.I learned from the pain experience that when I feel pain, I often moan and twist my face.Therefore, once I see that others have the same external signs, I take it for granted that they also have the same inner activity events as me.After all, between me and others, the behavior and normal physiological functions are obviously similar.Why aren't they similar in inner activities?",
    "question": "Which of the following can most strongly support the above argument?",
    "answer": "A",
    "options": [
      "A.Similar results must have similar reasons.",
      "B.There may be a close connection between pain and moaning and face twisting.",
      "C.There may be an intrinsic relationship between behavior and inner activities.",
      "D.People are similar in many ways."
    ],
    "raw_logic_programs": [
      "# Declarations\nexternal_signs = EnumSort([moaning, face_distortion])\ninner_events = EnumSort([feeling_pain])\npeople = EnumSort([me, others])\nhas_sign = Function([people, external_signs] -> [bool])\nhas_event = Function([people, inner_events] -> [bool])\n\n# Constraints\nForAll([s:external_signs], Implies(has_event(me, feeling_pain), has_sign(me, s))) ::: I learned from the pain experience that when I feel pain, I often moan and twist my face\nForAll([s:external_signs], Implies(has_sign(others, s), has_event(others, feeling_pain))) ::: Once I see that others have the same external signs, I take it for granted that they also have the same inner activity events as me\nForAll([p:people], Similar(behavior(p), physiological_functions(p))) ::: Between me and others, the behavior and normal physiological functions are obviously similar\n\n# Options\nQuestion ::: Which of the following can most strongly support the above argument?\nis_strong_support(Similar(results, reasons)) ::: (A)\nis_strong_support(Exists([s:external_signs], CloseConnection(pain, s))) ::: (B)\nis_strong_support(IntrinsicRelationship(behavior, inner_activities)) ::: (C)\nis_strong_support(Similar(people)) ::: (D)"
    ]
  },
  {
    "id": 231,
    "context": "In a world of material surplus, some people die because of material shortage.This morally disgusting and intellectually absurd stupidity shocked and shamed me.",
    "question": "Which of the following is the obvious meaning of the above sentence?",
    "answer": "C",
    "options": [
      "A.In a world of excess material, someone died because of a shortage of material because he was too lazy.",
      "B.In a world with excess material, someone died because of material shortage because he was stupid.",
      "C.From the two levels of morality and intelligence, we should have designed a distribution system so that each member of society can live a decent and dignified life.",
      "D.In a world of material surplus, someone died because of material shortage because of a defect in his personality."
    ],
    "raw_logic_programs": [
      "# Declarations\nworld_state = EnumSort([material_surplus, material_shortage])\npeople = EnumSort([some_people])\ncauses = EnumSort([moral_disgust, intellectual_absurdity, stupidity, shame])\noutcomes = EnumSort([death_due_to_shortage])\nreasons = EnumSort([laziness, stupidity, system_failure, personality_defect])\n\n# Constraints\nExists([p:people], And(world_state == material_surplus, outcomes == death_due_to_shortage)) ::: In a world of material surplus, some people die because of material shortage\nForAll([c:causes], Or(c == moral_disgust, c == intellectual_absurdity, c == stupidity, c == shame)) ::: This morally disgusting and intellectually absurd stupidity shocked and shamed me\n\n# Options\nQuestion ::: Which of the following is the obvious meaning of the above sentence?\nis_obvious(And(world_state == material_surplus, outcomes == death_due_to_shortage, reasons == laziness)) ::: (A)\nis_obvious(And(world_state == material_surplus, outcomes == death_due_to_shortage, reasons == stupidity)) ::: (B)\nis_obvious(And(world_state == material_surplus, outcomes == death_due_to_shortage, reasons == system_failure)) ::: (C)\nis_obvious(And(world_state == material_surplus, outcomes == death_due_to_shortage, reasons == personality_defect)) ::: (D)"
    ]
  },
  {
    "id": 232,
    "context": "The money earned by the employees of an enterprise is a wage that is included in the cost, and the money earned by the boss is a profit that is not included in the cost.If the cost is high, the profit is low, and if the profit is high, the cost is low.",
    "question": "If the above statement is true, which of the following conclusions is most strongly supported?",
    "answer": "C",
    "options": [
      "A.Employees hold shares in the enterprise, and there is a conflict of interest with the boss.",
      "B.If the employee holds shares in the enterprise, there is no conflict in the interests of the boss and the employee.",
      "C.If the employee does not have shares in the enterprise, the boss and the employee will have conflicts of interest.",
      "D.The boss always makes more money than the employees."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([employees, boss])\nfinancials = EnumSort([wage, profit, cost])\nrelations = Function([financials] -> [bool])\n\n# Constraints\nrelations(wage) == True ::: The money earned by the employees is a wage included in the cost\nrelations(profit) == Not(relations(cost)) ::: If the cost is high, the profit is low, and if the profit is high, the cost is low\n\n# Options\nQuestion ::: If the above statement is true, which of the following conclusions is most strongly supported?\nis_supported(And(relations(wage), relations(profit), conflict_of_interest(employees, boss))) ::: (A)\nis_supported(Implies(holds_shares(employees), Not(conflict_of_interest(employees, boss)))) ::: (B)\nis_supported(Implies(Not(holds_shares(employees)), conflict_of_interest(employees, boss))) ::: (C)\nis_supported(profit(boss) > wage(employees)) ::: (D)"
    ]
  },
  {
    "id": 233,
    "context": "The question of all enterprises in the past was such a question; 'What should I do, what can I do to make money?' After joining the WTO, the question becomes? 'What can I do to be the best?'",
    "question": "Which of the following statements gives the most reasonable explanation for the change in the above problem?",
    "answer": "D",
    "options": [
      "A.The change of the problem means that the transition from the competition of the enterprise to the competition of the industry.",
      "B.Only by being the best can companies make big money.",
      "C.Only in a profitable industry can we do our best.",
      "D.What used to be good or bad in the industry is now only good or bad for enterprises."
    ],
    "raw_logic_programs": [
      "# Declarations\nquestions = EnumSort([past_enterprise_question, post_WTO_question])\nstatements = EnumSort([A, B, C, D])\nexplains_change = Function([questions, statements] -> [bool])\n\n# Constraints\nexplains_change(past_enterprise_question, A) == False ::: The past question was about making money, not industry competition\nexplains_change(past_enterprise_question, B) == False ::: The past question was not about being the best\nexplains_change(past_enterprise_question, C) == False ::: The past question was not about doing the best\nexplains_change(past_enterprise_question, D) == False ::: The past question was not about good or bad for enterprises\n\nexplains_change(post_WTO_question, A) == False ::: The post-WTO question is not about industry competition\nexplains_change(post_WTO_question, B) == True ::: The post-WTO question is about being the best, which can lead to making big money\nexplains_change(post_WTO_question, C) == False ::: The post-WTO question is not about being in a profitable industry\nexplains_change(post_WTO_question, D) == False ::: The post-WTO question is not about good or bad for enterprises\n\n# Options\nQuestion ::: Which of the following statements gives the most reasonable explanation for the change in the above problem?\nis_reasonable(explains_change(post_WTO_question, B)) ::: (B)"
    ]
  },
  {
    "id": 234,
    "context": "If I debate with you, can we distinguish between true and false? You and I do n't know, and everyone else has prejudices.Who can we judge? Please judge with someone who shares your opinion.Since he has the same opinion as you, how can he judge? Please judge by someone who has the same opinion as me.Since he has the same opinion as me, how can he judge? Please judge with people who have different opinions from you and me.Since he has different opinions from you and me, how can he judge? Therefore, 'invincible'.",
    "question": "Which of the following most accurately describes the shortcomings of the above argument?",
    "answer": "A",
    "options": [
      "A.The above argument seriously ignores the implementation standards and logical standards beyond the debaters and commentators.",
      "B.The above argument has a logical error of 'confused concept'.",
      "C.The reasons in the above argument are untrue and inconsistent with each other.",
      "D.The above argument is guilty of a 'mis-problem' logical error."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([debate, judge, opinion])\nerrors = EnumSort([implementation_standards, confused_concept, untrue_inconsistent, mis_problem])\nhas_error = Function([arguments] -> [errors])\n\n# Constraints\nForAll([a:arguments], Exists([e:errors], has_error(a) == e)) ::: Each argument has at least one error\n\n# Options\nQuestion ::: Which of the following most accurately describes the shortcomings of the above argument?\nis_most_accurate(has_error(debate) == implementation_standards) ::: (A)\nis_most_accurate(has_error(debate) == confused_concept) ::: (B)\nis_most_accurate(has_error(debate) == untrue_inconsistent) ::: (C)\nis_most_accurate(has_error(debate) == mis_problem) ::: (D)"
    ]
  },
  {
    "id": 235,
    "context": "Corporate governance depends on the laws made by the legislator.However, the law alone is not enough, and it must also rely on the best action guidelines for managers.For example, the criterion of 'the directors of a company should have excellent talents', the law cannot give a standard definition of what is 'excellent talents'.The advantage of the optimal action criterion is that it adopts a more flexible standard.",
    "question": "Which of the following statements is the hypothesis upon which the superior argument depends?",
    "answer": "B",
    "options": [
      "A.Only when the law can be implemented, the law will have an effect.",
      "B.Adopting a less flexible standard cannot take advantage of the optimal action criterion.",
      "C.Adopting a more flexible standard to formulate laws will bring trouble to the implementation of laws.",
      "D.Even if you can only take advantage of the most actionable standards, the law is indispensable."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ndepends_on = Function([statements] -> [bool])\n\n# Constraints\ndepends_on(A) ::: Only when the law can be implemented, the law will have an effect.\ndepends_on(B) ::: Adopting a less flexible standard cannot take advantage of the optimal action criterion.\ndepends_on(C) ::: Adopting a more flexible standard to formulate laws will bring trouble to the implementation of laws.\ndepends_on(D) ::: Even if you can only take advantage of the most actionable standards, the law is indispensable.\n\n# Options\nQuestion ::: Which of the following statements is the hypothesis upon which the superior argument depends?\nis_hypothesis(depends_on(A)) ::: (A)\nis_hypothesis(depends_on(B)) ::: (B)\nis_hypothesis(depends_on(C)) ::: (C)\nis_hypothesis(depends_on(D)) ::: (D)"
    ]
  },
  {
    "id": 236,
    "context": "The grace of today 's Paris is as beautiful as ever, because the German commander who occupied him decided to disobey when he received Hitler 's order to 'completely destroy Paris before retreating,' and saved an ancient city at the expense of his life.When Liang Shuming's shells of Japanese military aircraft exploded beside him, he was quietly sitting in the garden, continuing to study, thinking about the issues of culture and education in the East and West-insisting on 'value' and 'order', and destroying this 'value' 'Order' is resistant to culture.",
    "question": "Which of the following cannot be derived from the meaning of the title?",
    "answer": "D",
    "options": [
      "A.Being able to read literately does not mean being literate.",
      "B.Having extensive knowledge does not mean literacy.",
      "C.Culture means doing something, not doing something? a little intolerable thought is the root of living creatures; a period of inaction is a pillar of support.",
      "D.Culture is a sign that different people of different nationalities distinguish each other."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nderived = Function([statements] -> [bool])\n\n# Constraints\n# The problem description does not provide explicit constraints, but it implies that the statements should be evaluated based on the context provided.\n\n# Options\nQuestion ::: Which of the following cannot be derived from the meaning of the title?\nis_unsat(derived(A)) ::: (A)\nis_unsat(derived(B)) ::: (B)\nis_unsat(derived(C)) ::: (C)\nis_unsat(derived(D)) ::: (D)"
    ]
  },
  {
    "id": 237,
    "context": "Enterprise competition is based on efficiency, and efficiency is based on family.The various systems in our country are not intended to destroy family relationships, but to maximize family relationships.",
    "question": "If the following statement is true, which one will weaken the above conclusion most seriously?",
    "answer": "B",
    "options": [
      "A.Kinship can be built not only on the foundation of private morality, but also on the foundation of public morality.",
      "B.The main function of the system is to dilute family relationships and prevent people from using them to do bad things.",
      "C.Affection can bring efficiency to the enterprise, and once it is turned into hatred, it can also bring disaster to the enterprise.",
      "D.Although the system can inspire affection, the system itself cannot tolerate any kind of affection."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ntruth_value = Function([statements] -> [bool])\n\n# Constraints\ntruth_value(A) == True ::: Kinship can be built not only on the foundation of private morality, but also on the foundation of public morality\ntruth_value(B) == True ::: The main function of the system is to dilute family relationships and prevent people from using them to do bad things\ntruth_value(C) == True ::: Affection can bring efficiency to the enterprise, and once it is turned into hatred, it can also bring disaster to the enterprise\ntruth_value(D) == True ::: Although the system can inspire affection, the system itself cannot tolerate any kind of affection\n\n# Options\nQuestion ::: If the following statement is true, which one will weaken the above conclusion most seriously?\nis_weaken(truth_value(B)) ::: (A)\nis_weaken(truth_value(B)) ::: (B)\nis_weaken(truth_value(C)) ::: (C)\nis_weaken(truth_value(D)) ::: (D)"
    ]
  },
  {
    "id": 238,
    "context": "The Amendment (Draft) of China's Personal Income Tax Law raises the deduction standard for salary income from the original 800 yuan / month to 1500 yuan / month; when the person's monthly income is less than 1500 yuan, no tax is required; After taxing the income after 1,500 yuan, an official commented that the starting point for personal income tax should not be too high, because taxation is also a citizen's right.If the starting point is too high, it will deprive low-income earners the honor of being the most taxpayers.",
    "question": "Which of the following is true and can raise the most doubts about this official 's argument?",
    "answer": "D",
    "options": [
      "A.All countries in the world levy pre-tax deductions on residents' basic living expenses when collecting personal income tax to ensure the reproduction of social labor.",
      "B.A low personal income tax will also affect the honor of low-income earners as taxpayers.",
      "C.One of the functions of personal income tax is to regulate social distribution and narrow the gap between rich and poor.",
      "D.China's tax system is dominated by commodity taxes.As long as a person buys and consumes commodities, he pays taxes to the state."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\ntruth = Function([arguments] -> [bool])\ndoubts = Function([arguments] -> [bool])\n\n# Constraints\ntruth(A) ::: All countries in the world levy pre-tax deductions on residents' basic living expenses when collecting personal income tax to ensure the reproduction of social labor.\ntruth(B) ::: A low personal income tax will also affect the honor of low-income earners as taxpayers.\ntruth(C) ::: One of the functions of personal income tax is to regulate social distribution and narrow the gap between rich and poor.\ntruth(D) ::: China's tax system is dominated by commodity taxes. As long as a person buys and consumes commodities, he pays taxes to the state.\n\n# Options\nQuestion ::: Which of the following is true and can raise the most doubts about this official's argument?\ndoubts(A) ::: (A)\ndoubts(B) ::: (B)\ndoubts(C) ::: (C)\ndoubts(D) ::: (D)"
    ]
  },
  {
    "id": 239,
    "context": "Whether a person does good behavior or bad behavior depends on the length of his life.If he only lived one day, it would be best for him to steal other people 's things because he would not suffer the fear of being caught.Stealing things from others is not the best for someone who can still live for 20 years, because he will suffer the fear of being caught.",
    "question": "If the following statements are true, except for which one can weaken the above argument?",
    "answer": "A",
    "options": [
      "A.Only by suffering from the fear of being caught will you not steal things from others.",
      "B.For people who only live one day, the best course of action may be a meal of beef.",
      "C.The length of life is not a sufficient condition for a person to choose to do good or bad behavior.",
      "D.For some people who steal other people's things, conscience condemnation will cause greater pain than fear of seizing."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nbehaviors = EnumSort([good, bad])\nlife_length = Function([people] -> [int])\nfear_of_being_caught = Function([people] -> [bool])\nconscience_condemnation = Function([people] -> [bool])\nbest_action = Function([people] -> [behaviors])\n\n# Constraints\nForAll([p:people], Implies(life_length(p) == 1, best_action(p) == bad)) ::: If he only lived one day, it would be best for him to steal other people 's things\nForAll([p:people], Implies(life_length(p) == 20, best_action(p) == good)) ::: Stealing things from others is not the best for someone who can still live for 20 years\n\n# Options\nQuestion ::: If the following statements are true, except for which one can weaken the above argument?\nis_weakened(Implies(fear_of_being_caught(person), Not(best_action(person) == bad))) ::: (A)\nis_weakened(Implies(life_length(person) == 1, best_action(person) == good)) ::: (B)\nis_weakened(Not(Implies(life_length(person) > 0, Or(best_action(person) == good, best_action(person) == bad)))) ::: (C)\nis_weakened(Implies(conscience_condemnation(person), Not(best_action(person) == bad))) ::: (D)"
    ]
  },
  {
    "id": 240,
    "context": "Whether a person does good behavior or bad behavior depends on the length of his life.If he only lived one day, it would be best for him to steal other people 's things because he would not suffer the fear of being caught.Stealing things from others is not the best for someone who can still live for 20 years, because he will suffer the fear of being caught.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "A",
    "options": [
      "A.Before deciding whether to steal something from someone else, a person can know exactly how long he can live.",
      "B.Anyone who steals things from others will not live for a few days.",
      "C.As long as you are not caught, worrying about being caught will not cause pain to people, because the people who steal things have already been prepared.",
      "D.A person who knows that he cannot live for a few days usually chooses to do something good instead of doing something bad."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nbehaviors = EnumSort([good, bad])\nlife_length = Function([people] -> [int])\nchooses_behavior = Function([people] -> [behaviors])\n\n# Constraints\nForAll([p:people], Implies(life_length(p) == 1, chooses_behavior(p) == bad)) ::: If he only lived one day, it would be best for him to steal other people 's things\nForAll([p:people], Implies(life_length(p) == 20, chooses_behavior(p) == good)) ::: Stealing things from others is not the best for someone who can still live for 20 years\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(ForAll([p:people], Exists([l:int], life_length(p) == l))) ::: (A) Before deciding whether to steal something from someone else, a person can know exactly how long he can live.\nis_assumption(ForAll([p:people], Implies(chooses_behavior(p) == bad, life_length(p) <= 1))) ::: (B) Anyone who steals things from others will not live for a few days.\nis_assumption(ForAll([p:people], Implies(Not(caught(p)), Not(worry(p))))) ::: (C) As long as you are not caught, worrying about being caught will not cause pain to people, because the people who steal things have already been prepared.\nis_assumption(ForAll([p:people], Implies(life_length(p) <= 1, chooses_behavior(p) == good))) ::: (D) A person who knows that he cannot live for a few days usually chooses to do something good instead of doing something bad."
    ]
  },
  {
    "id": 241,
    "context": "The members of the printing group and the binding group are mainly from the following seven employees-F, G, H, J, K, L and M.The members of each group must meet the following conditions? (1) Each group has at least 3 employees .(2) F and K cannot be in the same group.(3) If K is in a certain group, J must also be in this group.(4) M is at least one of the members of these two groups.(5) At least one of the same employees in both groups.",
    "question": "Which of the following lists are acceptable member choices for these two groups?",
    "answer": "B",
    "options": [
      "A.Printing? F, G, H Binding? G, J, K, L",
      "B.Printing? F, H, J Binding? G, H, L, M",
      "C.Printing? F, H, M Binding? G, K, L, M",
      "D.Printing? F, H, J, K Binding? H, L, M"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([F, G, H, J, K, L, M])\ngroups = EnumSort([printing, binding])\nmember = Function([groups, employees] -> [bool])\n\n# Constraints\nForAll([g:groups], Count([e:employees], member(g, e)) >= 3) ::: Each group has at least 3 employees\nNot(And(member(printing, F), member(printing, K))) ::: F and K cannot be in the same group\nNot(And(member(binding, F), member(binding, K))) ::: F and K cannot be in the same group\nForAll([g:groups], Implies(member(g, K), member(g, J))) ::: If K is in a certain group, J must also be in this group\nOr(member(printing, M), member(binding, M)) ::: M is at least one of the members of these two groups\nExists([e:employees], And(member(printing, e), member(binding, e))) ::: At least one of the same employees in both groups\n\n# Options\nQuestion ::: Which of the following lists are acceptable member choices for these two groups?\nis_valid(And(member(printing, F), member(printing, G), member(printing, H), member(binding, G), member(binding, J), member(binding, K), member(binding, L))) ::: (A)\nis_valid(And(member(printing, F), member(printing, H), member(printing, J), member(binding, G), member(binding, H), member(binding, L), member(binding, M))) ::: (B)\nis_valid(And(member(printing, F), member(printing, H), member(printing, M), member(binding, G), member(binding, K), member(binding, L), member(binding, M))) ::: (C)\nis_valid(And(member(printing, F), member(printing, H), member(printing, J), member(printing, K), member(binding, H), member(binding, L), member(binding, M))) ::: (D)"
    ]
  },
  {
    "id": 242,
    "context": "The members of the printing group and the binding group are mainly from the following seven employees-F, G, H, J, K, L and M.The members of each group must meet the following conditions? (1) Each group has at least 3 employees .(2) F and K cannot be in the same group.(3) If K is in a certain group, J must also be in this group.(4) M is at least one of the members of these two groups.(5) At least one of the same employees in both groups.",
    "question": "If the members of the printing group are composed of F, H, L, and M, and the members of the binding group are composed of G, H, and J, then K can replace which member of the two groups without violating any of the given conditions?",
    "answer": "B",
    "options": [
      "A.F",
      "B.G",
      "C.H",
      "D.L"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([F, G, H, J, K, L, M])\ngroups = EnumSort([printing, binding])\nmember_of = Function([employees, groups] -> [bool])\n\n# Constraints\nForAll([g:groups], Count([e:employees], member_of(e, g)) >= 3) ::: Each group has at least 3 employees\nNot(And(member_of(F, printing), member_of(K, printing))) ::: F and K cannot be in the same group\nNot(And(member_of(F, binding), member_of(K, binding))) ::: F and K cannot be in the same group\nForAll([g:groups], Implies(member_of(K, g), member_of(J, g))) ::: If K is in a certain group, J must also be in this group\nOr(member_of(M, printing), member_of(M, binding)) ::: M is at least one of the members of these two groups\nExists([e:employees], And(member_of(e, printing), member_of(e, binding))) ::: At least one of the same employees in both groups\n\n# Options\nQuestion ::: If the members of the printing group are composed of F, H, L, and M, and the members of the binding group are composed of G, H, and J, then K can replace which member of the two groups without violating any of the given conditions?\nis_valid(And(Not(member_of(K, printing)), member_of(K, binding), member_of(K, G))) ::: (A)\nis_valid(And(member_of(K, printing), Not(member_of(K, binding)), member_of(K, F))) ::: (B)\nis_valid(And(member_of(K, printing), member_of(K, binding), member_of(K, H))) ::: (C)\nis_valid(And(member_of(K, printing), Not(member_of(K, binding)), member_of(K, L))) ::: (D)"
    ]
  },
  {
    "id": 243,
    "context": "The members of the printing group and the binding group are mainly from the following seven employees-F, G, H, J, K, L and M.The members of each group must meet the following conditions? (1) Each group has at least 3 employees .(2) F and K cannot be in the same group.(3) If K is in a certain group, J must also be in this group.(4) M is at least one of the members of these two groups.(5) At least one of the same employees in both groups.",
    "question": "If the printing group has only three members, G, H, and L, and under sufficient conditions, the two groups have as many common members as possible, then which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.The binding group and the printing group happen to have a common member.",
      "B.The binding group and the printing group have exactly two members in common.",
      "C.The number of members in the binding and printing groups is the same.",
      "D.The number of members of the bookbinding group is at least one more than that of the printing group."
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([F, G, H, J, K, L, M])\ngroups = EnumSort([printing, binding])\nmember = Function([groups, employees] -> [bool])\n\n# Constraints\nForAll([g:groups], Count([e:employees], member(g, e)) >= 3) ::: Each group has at least 3 employees\nNot(And(member(printing, F), member(printing, K))) ::: F and K cannot be in the same group\nForAll([g:groups], Implies(member(g, K), member(g, J))) ::: If K is in a certain group, J must also be in this group\nOr(member(printing, M), member(binding, M)) ::: M is at least one of the members of these two groups\nExists([e:employees], And(member(printing, e), member(binding, e))) ::: At least one of the same employees in both groups\n\n# Additional Constraints for the Question\nAnd(member(printing, G), member(printing, H), member(printing, L), Not(member(printing, F)), Not(member(printing, J)), Not(member(printing, K)), Not(member(printing, M))) ::: The printing group has only three members: G, H, and L\n\n# Options\nQuestion ::: If the printing group has only three members, G, H, and L, and under sufficient conditions, the two groups have as many common members as possible, then which of the following statements must be true?\nis_must_true(Exists([e:employees], And(member(binding, e), member(printing, e)))) ::: (A) The binding group and the printing group happen to have a common member.\nis_must_true(Count([e:employees], And(member(binding, e), member(printing, e))) == 2) ::: (B) The binding group and the printing group have exactly two members in common.\nis_must_true(Count([e:employees], member(binding, e)) == Count([e:employees], member(printing, e))) ::: (C) The number of members in the binding and printing groups is the same.\nis_must_true(Count([e:employees], member(binding, e)) >= Count([e:employees], member(printing, e)) + 1) ::: (D) The number of members of the bookbinding group is at least one more than that of the printing group."
    ]
  },
  {
    "id": 244,
    "context": "The members of the printing group and the binding group are mainly from the following seven employees-F, G, H, J, K, L and M.The members of each group must meet the following conditions? (1) Each group has at least 3 employees .(2) F and K cannot be in the same group.(3) If K is in a certain group, J must also be in this group.(4) M is at least one of the members of these two groups.(5) At least one of the same employees in both groups.",
    "question": "If both K and L are members of both groups, and the printing group has exactly three members, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.F in printing group",
      "B.F in the binding group",
      "C.G in the printing group",
      "D.M in the bookbinding group"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([F, G, H, J, K, L, M])\ngroups = EnumSort([printing, binding])\nmember = Function([employees, groups] -> [bool])\n\n# Constraints\nForAll([g:groups], Count([e:employees], member(e, g)) >= 3) ::: Each group has at least 3 employees\nForAll([g:groups], Not(And(member(F, g), member(K, g)))) ::: F and K cannot be in the same group\nForAll([g:groups], Implies(member(K, g), member(J, g))) ::: If K is in a certain group, J must also be in this group\nExists([g:groups], member(M, g)) ::: M is at least one of the members of these two groups\nExists([e:employees], And(member(e, printing), member(e, binding))) ::: At least one of the same employees in both groups\n\n# Additional Constraints for the Question\nAnd(member(K, printing), member(K, binding), member(L, printing), member(L, binding)) ::: Both K and L are members of both groups\nCount([e:employees], member(e, printing)) == 3 ::: The printing group has exactly three members\n\n# Options\nQuestion ::: If both K and L are members of both groups, and the printing group has exactly three members, which of the following statements must be true?\nis_valid(member(F, printing)) ::: (A) F in printing group\nis_valid(member(F, binding)) ::: (B) F in the binding group\nis_valid(member(G, printing)) ::: (C) G in the printing group\nis_valid(member(M, binding)) ::: (D) M in the bookbinding group"
    ]
  },
  {
    "id": 245,
    "context": "The members of the printing group and the binding group are mainly from the following seven employees-F, G, H, J, K, L and M.The members of each group must meet the following conditions? (1) Each group has at least 3 employees .(2) F and K cannot be in the same group.(3) If K is in a certain group, J must also be in this group.(4) M is at least one of the members of these two groups.(5) At least one of the same employees in both groups.",
    "question": "How many employees can be a member of printing group and binding group at most?",
    "answer": "C",
    "options": [
      "A.4",
      "B.5",
      "C.6",
      "D.7"
    ],
    "raw_logic_programs": [
      "# Declarations\nemployees = EnumSort([F, G, H, J, K, L, M])\ngroups = EnumSort([printing, binding])\nmember = Function([employees, groups] -> [bool])\n\n# Constraints\nForAll([g:groups], Count([e:employees], member(e, g)) >= 3) ::: Each group has at least 3 employees\nForAll([g:groups], Not(And(member(F, g), member(K, g)))) ::: F and K cannot be in the same group\nForAll([g:groups], Implies(member(K, g), member(J, g))) ::: If K is in a certain group, J must also be in this group\nExists([g:groups], member(M, g)) ::: M is at least one of the members of these two groups\nExists([e:employees], And(member(e, printing), member(e, binding))) ::: At least one of the same employees in both groups\n\n# Options\nQuestion ::: How many employees can be a member of printing group and binding group at most?\nis_max(Count([e:employees], And(member(e, printing), member(e, binding))) == 4) ::: (A)\nis_max(Count([e:employees], And(member(e, printing), member(e, binding))) == 5) ::: (B)\nis_max(Count([e:employees], And(member(e, printing), member(e, binding))) == 6) ::: (C)\nis_max(Count([e:employees], And(member(e, printing), member(e, binding))) == 7) ::: (D)"
    ]
  },
  {
    "id": 246,
    "context": "In a magic show, from the seven magicians-G.H.K.L.N.P and Q, choose 6 people to play, and the performance is divided into two teams? 1 team and 2 teams.Each team consists of three positions? front, middle, and back.The magicians on the field happen to occupy one position each.The choice and location of the magician must meet the following conditions? (1) If G or H is arranged to play, they must be in front Bit.(2) If K is scheduled to play, he must be in the middle.(3) If L is scheduled to play, he must be on team 1.(4) Neither P nor K can be in the same team as N.(5) P cannot be in the same team as Q.(6) If H is in team 2, Q is in the middle of team 1.",
    "question": "Which of the following lists are acceptable arrangements for the second team's performance?",
    "answer": "D",
    "options": [
      "A.Before? H Middle? P After? K",
      "B.Before? H Middle? L After? N",
      "C.Before? G In? Q After? P",
      "D.Before? G In? Q After? N"
    ],
    "raw_logic_programs": [
      "# Declarations\nmagicians = EnumSort([G, H, K, L, N, P, Q])\nteams = EnumSort([team1, team2])\npositions = EnumSort([front, middle, back])\nplays = Function([magicians] -> [teams])\nposition = Function([magicians] -> [positions])\n\n# Constraints\nForAll([m:magicians], Exists([t:teams, p:positions], And(plays(m) == t, position(m) == p))) ::: Each magician occupies one position in one team\nForAll([m:magicians], Count([t:teams], plays(m) == t) <= 1) ::: Each magician is in at most one team\nForAll([m:magicians], Count([p:positions], position(m) == p) <= 1) ::: Each magician occupies at most one position\n\n# Specific constraints\nForAll([m:magicians], Implies(Or(m == G, m == H), position(m) == front)) ::: If G or H is arranged to play, they must be in the front\nImplies(plays(K) != None, position(K) == middle) ::: If K is scheduled to play, he must be in the middle\nImplies(plays(L) != None, plays(L) == team1) ::: If L is scheduled to play, he must be on team 1\nForAll([m:magicians], Implies(Or(m == P, m == K), plays(m) != plays(N))) ::: Neither P nor K can be in the same team as N\nplays(P) != plays(Q) ::: P cannot be in the same team as Q\nImplies(plays(H) == team2, position(Q) == middle) ::: If H is in team 2, Q is in the middle of team 1\n\n# Options\nQuestion ::: Which of the following lists are acceptable arrangements for the second team's performance?\nis_acceptable(And(position(H) == front, position(P) == middle, position(K) == back, plays(H) == team2, plays(P) == team2, plays(K) == team2)) ::: (A)\nis_acceptable(And(position(H) == front, position(L) == middle, position(N) == back, plays(H) == team2, plays(L) == team2, plays(N) == team2)) ::: (B)\nis_acceptable(And(position(G) == front, position(Q) == middle, position(P) == back, plays(G) == team2, plays(Q) == team2, plays(P) == team2)) ::: (C)\nis_acceptable(And(position(G) == front, position(Q) == middle, position(N) == back, plays(G) == team2, plays(Q) == team2, plays(N) == team2)) ::: (D)"
    ]
  },
  {
    "id": 247,
    "context": "In a magic show, from the seven magicians-G.H.K.L.N.P and Q, choose 6 people to play, and the performance is divided into two teams? 1 team and 2 teams.Each team consists of three positions? front, middle, and back.The magicians on the field happen to occupy one position each.The choice and location of the magician must meet the following conditions? (1) If G or H is arranged to play, they must be in the front.Bit.(2) If K is scheduled to play, he must be in the middle.(3) If L is scheduled to play, he must be on team 1.(4) Neither P nor K can be in the same team as N.(5) P cannot be in the same team as Q.(6) If H is in team 2, Q is in the middle of team 1.",
    "question": "If H is in Team 2, which of the listed arrangements is acceptable for Team 1?",
    "answer": "A",
    "options": [
      "A.Before? L Middle? Q After? N",
      "B.Before? G In? K After? N",
      "C.Before? L Middle? Q After? G",
      "D.Before? G Middle? K After? L"
    ],
    "raw_logic_programs": [
      "# Declarations\nmagicians = EnumSort([G, H, K, L, N, P, Q])\nteams = EnumSort([team1, team2])\npositions = EnumSort([front, middle, back])\nassigned_team = Function([magicians] -> [teams])\nassigned_position = Function([magicians] -> [positions])\n\n# Constraints\nForAll([m:magicians], Exists([t:teams, p:positions], And(assigned_team(m) == t, assigned_position(m) == p))) ::: Each magician is assigned to a team and a position\nForAll([t:teams], Count([m:magicians], assigned_team(m) == t) == 3) ::: Each team consists of three magicians\nForAll([p:positions], Count([m:magicians], assigned_position(m) == p) == 2) ::: Each position is occupied by two magicians\n\n# Specific Constraints\nForAll([m:magicians], Implies(Or(m == G, m == H), assigned_position(m) == front)) ::: If G or H is arranged to play, they must be in the front\nImplies(assigned_team(K) != None, assigned_position(K) == middle) ::: If K is scheduled to play, he must be in the middle\nImplies(assigned_team(L) != None, assigned_team(L) == team1) ::: If L is scheduled to play, he must be on team 1\nForAll([m:magicians], Implies(Or(m == P, m == K), assigned_team(m) != assigned_team(N))) ::: Neither P nor K can be in the same team as N\nassigned_team(P) != assigned_team(Q) ::: P cannot be in the same team as Q\nImplies(assigned_team(H) == team2, assigned_position(Q) == middle) ::: If H is in team 2, Q is in the middle of team 1\n\n# Options\nQuestion ::: If H is in Team 2, which of the listed arrangements is acceptable for Team 1?\nis_acceptable(And(assigned_team(L) == team1, assigned_position(L) == front, assigned_position(Q) == middle, assigned_position(N) == back)) ::: (A)\nis_acceptable(And(assigned_team(G) == team1, assigned_position(G) == front, assigned_position(K) == middle, assigned_position(N) == back)) ::: (B)\nis_acceptable(And(assigned_team(L) == team1, assigned_position(L) == front, assigned_position(Q) == middle, assigned_position(G) == back)) ::: (C)\nis_acceptable(And(assigned_team(G) == team1, assigned_position(G) == front, assigned_position(K) == middle, assigned_position(L) == back)) ::: (D)"
    ]
  },
  {
    "id": 248,
    "context": "In a magic show, from the seven magicians-G.H.K.L.N.P and Q, choose 6 people to play, and the performance is divided into two teams? 1 team and 2 teams.Each team consists of three positions? front, middle, and back.The magicians on the field happen to occupy one position each.The choice and location of the magician must meet the following conditions? (1) If G or H is arranged to play, they must be in the front.Bit.(2) If K is scheduled to play, he must be in the middle.(3) If L is scheduled to play, he must be on team 1.(4) Neither P nor K can be in the same team as N.(5) P cannot be in the same team as Q.(6) If H is in team 2, Q is in the middle of team 1.",
    "question": "Which of the following is an acceptable arrangement for the first team's performance?",
    "answer": "A",
    "options": [
      "A.Before? Q In? L After? N",
      "B.Before? L Middle? K After? Q",
      "C.Before? Q In? K After? P",
      "D.Before? G In? K After? P"
    ],
    "raw_logic_programs": [
      "# Declarations\nmagicians = EnumSort([G, H, K, L, N, P, Q])\nteams = EnumSort([team1, team2])\npositions = EnumSort([front, middle, back])\nplays = Function([magicians] -> [teams])\nposition = Function([magicians] -> [positions])\n\n# Constraints\nForAll([m:magicians], Exists([t:teams, p:positions], And(plays(m) == t, position(m) == p))) ::: Each magician occupies one position in one team\nForAll([t:teams], Count([m:magicians], plays(m) == t) == 3) ::: Each team consists of three magicians\nForAll([t:teams], Distinct([m:magicians], position(m))) ::: Each team has distinct positions: front, middle, and back\nForAll([m:magicians], Implies(Or(m == G, m == H), position(m) == front)) ::: If G or H is arranged to play, they must be in the front\nImplies(plays(K) == team1, position(K) == middle) ::: If K is scheduled to play, he must be in the middle\nImplies(plays(L) == team1, True) ::: If L is scheduled to play, he must be on team 1\nForAll([m:magicians], Implies(Or(m == P, m == K), plays(m) != plays(N))) ::: Neither P nor K can be in the same team as N\nImplies(plays(P) == plays(Q), False) ::: P cannot be in the same team as Q\nImplies(And(plays(H) == team2, position(H) == front), position(Q) == middle) ::: If H is in team 2, Q is in the middle of team 1\n\n# Options\nQuestion ::: Which of the following is an acceptable arrangement for the first team's performance?\nis_acceptable(And(position(Q) == front, position(L) == middle, position(N) == back, plays(Q) == team1, plays(L) == team1, plays(N) == team1)) ::: (A)\nis_acceptable(And(position(L) == front, position(K) == middle, position(Q) == back, plays(L) == team1, plays(K) == team1, plays(Q) == team1)) ::: (B)\nis_acceptable(And(position(Q) == front, position(K) == middle, position(P) == back, plays(Q) == team1, plays(K) == team1, plays(P) == team1)) ::: (C)\nis_acceptable(And(position(G) == front, position(K) == middle, position(P) == back, plays(G) == team1, plays(K) == team1, plays(P) == team1)) ::: (D)"
    ]
  },
  {
    "id": 249,
    "context": "In a magic show, from the seven magicians-G.H.K.L.N.P and Q, choose 6 people to play, and the performance is divided into two teams? 1 team and 2 teams.Each team consists of three positions? front, middle, and back.The magicians on the field happen to occupy one position each.The choice and location of the magician must meet the following conditions? (1) If G or H is arranged to play, they must be in the front.Bit.(2) If K is scheduled to play, he must be in the middle.(3) If L is scheduled to play, he must be on team 1.(4) Neither P nor K can be in the same team as N.(5) P cannot be in the same team as Q.(6) If H is in team 2, Q is in the middle of team 1.",
    "question": "If G is in team 1, which pair of magicians can be in team 1?",
    "answer": "D",
    "options": [
      "A.K and L",
      "B.K and P",
      "C.L and N",
      "D.L and Q"
    ],
    "raw_logic_programs": [
      "# Declarations\nmagicians = EnumSort([G, H, K, L, N, P, Q])\nteams = EnumSort([team1, team2])\npositions = EnumSort([front, middle, back])\nassigned_team = Function([magicians] -> [teams])\nassigned_position = Function([magicians] -> [positions])\n\n# Constraints\nForAll([m:magicians], Exists([t:teams, p:positions], And(assigned_team(m) == t, assigned_position(m) == p))) ::: Each magician is assigned to a team and a position\nForAll([t:teams], Count([m:magicians], assigned_team(m) == t) == 3) ::: Each team consists of three magicians\nForAll([t:teams], Count([m:magicians], assigned_position(m) == front) == 1) ::: Each team has one magician in the front position\nForAll([t:teams], Count([m:magicians], assigned_position(m) == middle) == 1) ::: Each team has one magician in the middle position\nForAll([t:teams], Count([m:magicians], assigned_position(m) == back) == 1) ::: Each team has one magician in the back position\nForAll([m:magicians], Or(assigned_position(m) == front, assigned_position(m) == middle, assigned_position(m) == back)) ::: Each magician occupies one position\n\n# Specific Constraints\nImplies(Or(assigned_team(G) == team1, assigned_team(H) == team1), assigned_position(G) == front) ::: If G or H is arranged to play, they must be in the front position\nImplies(assigned_team(K) == team1, assigned_position(K) == middle) ::: If K is scheduled to play, he must be in the middle\nImplies(assigned_team(L) == team1, assigned_team(L) == team1) ::: If L is scheduled to play, he must be on team 1\nForAll([t:teams], Implies(assigned_team(P) == t, assigned_team(N) != t)) ::: Neither P nor K can be in the same team as N\nForAll([t:teams], Implies(assigned_team(K) == t, assigned_team(N) != t)) ::: Neither P nor K can be in the same team as N\nForAll([t:teams], Implies(assigned_team(P) == t, assigned_team(Q) != t)) ::: P cannot be in the same team as Q\nImplies(assigned_team(H) == team2, assigned_position(Q) == middle) ::: If H is in team 2, Q is in the middle of team 1\n\n# Options\nQuestion ::: If G is in team 1, which pair of magicians can be in team 1?\nis_valid(And(assigned_team(K) == team1, assigned_team(L) == team1)) ::: (A)\nis_valid(And(assigned_team(K) == team1, assigned_team(P) == team1)) ::: (B)\nis_valid(And(assigned_team(L) == team1, assigned_team(N) == team1)) ::: (C)\nis_valid(And(assigned_team(L) == team1, assigned_team(Q) == team1)) ::: (D)"
    ]
  },
  {
    "id": 250,
    "context": "In a magic show, from the seven magicians-G.H.K.L.N.P and Q, choose 6 people to play, and the performance is divided into two teams? 1 team and 2 teams.Each team consists of three positions? front, middle, and back.The magicians on the field happen to occupy one position each.The choice and location of the magician must meet the following conditions? (1) If G or H is arranged to play, they must be in the front.Bit.(2) If K is scheduled to play, he must be in the middle.(3) If L is scheduled to play, he must be on team 1.(4) Neither P nor K can be in the same team as N.(5) P cannot be in the same team as Q.(6) If H is in team 2, Q is in the middle of team 1.",
    "question": "If G is in team 1 and K is in team 2, which of the following magicians must be behind team 2?",
    "answer": "C",
    "options": [
      "A.L",
      "B.N",
      "C.P",
      "D.Q"
    ],
    "raw_logic_programs": [
      "# Declarations\nmagicians = EnumSort([G, H, K, L, N, P, Q])\nteams = EnumSort([team1, team2])\npositions = EnumSort([front, middle, back])\nassigned_team = Function([magicians] -> [teams])\nassigned_position = Function([magicians] -> [positions])\n\n# Constraints\nForAll([m:magicians], Exists([t:teams, p:positions], And(assigned_team(m) == t, assigned_position(m) == p))) ::: Each magician is assigned to a team and a position\nForAll([t:teams], Count([m:magicians], assigned_team(m) == t) == 3) ::: Each team consists of three magicians\nForAll([t:teams], Distinct([m:magicians], assigned_position(m))) ::: Each position in a team is occupied by a different magician\nForAll([m:magicians], Implies(Or(m == G, m == H), assigned_position(m) == front)) ::: If G or H is arranged to play, they must be in the front\nImplies(assigned_team(K) == team2, assigned_position(K) == middle) ::: If K is scheduled to play, he must be in the middle\nImplies(assigned_team(L) == team1, True) ::: If L is scheduled to play, he must be on team 1\nForAll([m:magicians], Implies(Or(m == P, m == K), assigned_team(m) != assigned_team(N))) ::: Neither P nor K can be in the same team as N\nImplies(assigned_team(P) == assigned_team(Q), False) ::: P cannot be in the same team as Q\nImplies(And(assigned_team(H) == team2, assigned_position(H) == front), assigned_position(Q) == middle) ::: If H is in team 2, Q is in the middle of team 1\n\n# Options\nQuestion ::: If G is in team 1 and K is in team 2, which of the following magicians must be behind team 2?\nassigned_team(G) == team1 ::: G is in team 1\nassigned_team(K) == team2 ::: K is in team 2\nis_must_be(assigned_position(L) == back) ::: (A)\nis_must_be(assigned_position(N) == back) ::: (B)\nis_must_be(assigned_position(P) == back) ::: (C)\nis_must_be(assigned_position(Q) == back) ::: (D)"
    ]
  },
  {
    "id": 251,
    "context": "Since 1993, sand and dust storms have frequently occurred in the Inner Mongolia region of our country, causing major economic losses.Some people think that sand and dust storms are caused by grassland degradation and desertification caused by climate drought.They are natural disasters, so they are inevitable.",
    "question": "If the following items are true, can the above opinions be questioned, except?",
    "answer": "A",
    "options": [
      "A.In the 1950s, grass in Xilin Gol grassland in Inner Mongolia was as tall as a horse's belly, and now grass can't even cover mice.",
      "B.Opposite the degraded grasslands of Hulunbeier and Xilinguole in Inner Mongolia, the grasslands of Mongolian grassland are about 1 meter high.",
      "C.On the almost uninhabited border line of 10 kilometers wide between China and Mongolia, grass still maintains the height of the 1950s.",
      "D.The increase in dust storms is mainly due to human factors such as overloaded grazing and predatory management of grasslands."
    ],
    "raw_logic_programs": [
      "# Declarations\nopinions = EnumSort([natural_disaster, inevitable])\nevidence = EnumSort([A, B, C, D])\nquestions_opinion = Function([evidence] -> [bool])\n\n# Constraints\nquestions_opinion(A) ::: Evidence A questions the opinion that sand and dust storms are natural disasters and inevitable.\nquestions_opinion(B) ::: Evidence B questions the opinion that sand and dust storms are natural disasters and inevitable.\nquestions_opinion(C) ::: Evidence C questions the opinion that sand and dust storms are natural disasters and inevitable.\nquestions_opinion(D) ::: Evidence D questions the opinion that sand and dust storms are natural disasters and inevitable.\n\n# Options\nQuestion ::: If the following items are true, can the above opinions be questioned, except?\nis_exception(Not(questions_opinion(A))) ::: (A)\nis_exception(Not(questions_opinion(B))) ::: (B)\nis_exception(Not(questions_opinion(C))) ::: (C)\nis_exception(Not(questions_opinion(D))) ::: (D)"
    ]
  },
  {
    "id": 252,
    "context": "In an electoral society, every politician must cater to voters in order to be elected.Cheng Bian is a super politician and especially wants to be elected; therefore, he will do his best to cater to voters.In many cases, it is impossible to cater to voters without writing many empty checks.In fact, Cheng Bian was elected.",
    "question": "Which conclusion is most appropriate to derive from the question stem?",
    "answer": "C",
    "options": [
      "A.Cheng Bian certainly wrote many empty checks to voters.",
      "B.Cheng Bian certainly did not write many empty checks to voters.",
      "C.Cheng Bian probably wrote many empty checks to voters.",
      "D.Cheng Bian probably did not write many empty checks to voters."
    ],
    "raw_logic_programs": [
      "# Declarations\npolitician = EnumSort([Cheng_Bian])\nactions = EnumSort([cater_to_voters, write_empty_checks, elected])\ndoes = Function([politician, actions] -> [bool])\n\n# Constraints\nForAll([p:politician], Implies(does(p, cater_to_voters), does(p, elected))) ::: Every politician must cater to voters in order to be elected\ndoes(Cheng_Bian, elected) ::: Cheng Bian was elected\nForAll([p:politician], Implies(does(p, cater_to_voters), does(p, write_empty_checks))) ::: It is impossible to cater to voters without writing many empty checks\n\n# Options\nQuestion ::: Which conclusion is most appropriate to derive from the question stem?\nis_valid(does(Cheng_Bian, write_empty_checks)) ::: (A) Cheng Bian certainly wrote many empty checks to voters.\nis_valid(Not(does(Cheng_Bian, write_empty_checks))) ::: (B) Cheng Bian certainly did not write many empty checks to voters.\nis_probable(does(Cheng_Bian, write_empty_checks)) ::: (C) Cheng Bian probably wrote many empty checks to voters.\nis_probable(Not(does(Cheng_Bian, write_empty_checks))) ::: (D) Cheng Bian probably did not write many empty checks to voters."
    ]
  },
  {
    "id": 253,
    "context": "If the senior management personnel do not participate in the formulation of the compensation policy, the company's finalized compensation policy will not succeed.In addition, if more management personnel participate in the formulation of the compensation policy, tell the company that they think the important compensation policy, the company's final compensation policy will be more effective.",
    "question": "If the above statement is true, which of the following statements cannot be false?",
    "answer": "B",
    "options": [
      "A.Unless more managers participate in the formulation of the compensation policy, the company's final compensation policy will not succeed.",
      "B.Either the senior management personnel themselves participate in the formulation of the compensation policy, or the company's finalized compensation policy will not succeed.",
      "C.If the senior management himself participates in the formulation of the compensation policy, the company's finalized compensation policy will succeed.",
      "D.If more managers participate in the formulation of the compensation policy, the company's finalized compensation policy will be more effective."
    ],
    "raw_logic_programs": [
      "# Declarations\nparticipates = Function([str] -> [bool])  # Function to determine if a group participates in the formulation\nsucceeds = Function([] -> [bool])  # Function to determine if the policy succeeds\neffective = Function([] -> [bool])  # Function to determine if the policy is more effective\n\n# Constraints\nImplies(Not(participates(\"senior_management\")), Not(succeeds())) ::: If the senior management personnel do not participate, the policy will not succeed\nImplies(participates(\"more_management\"), effective()) ::: If more management personnel participate, the policy will be more effective\n\n# Options\nQuestion ::: Which of the following statements cannot be false?\nis_true(Implies(Not(participates(\"more_management\")), Not(succeeds()))) ::: (A) Unless more managers participate, the policy will not succeed\nis_true(Or(participates(\"senior_management\"), Not(succeeds()))) ::: (B) Either senior management participates, or the policy will not succeed\nis_true(Implies(participates(\"senior_management\"), succeeds())) ::: (C) If senior management participates, the policy will succeed\nis_true(Implies(participates(\"more_management\"), effective())) ::: (D) If more managers participate, the policy will be more effective"
    ]
  },
  {
    "id": 254,
    "context": "Turkey has applied for membership in the EU since 1987, and the two sides are still in difficult negotiations until now.From a strategic perspective, the EU needs Turkey.If you say 'no' to Turkey, the EU will lose Turkey's cooperation in security, justice, and energy.However, if Turkey joins the EU, it will bring a series of problems such as inconsistent cultural and religious views, heavy burden of economic subsidies, and a large influx of immigrants into the job market.",
    "question": "Which of the following conclusions can be derived from the above statement?",
    "answer": "A",
    "options": [
      "A.In the long run, the EU cannot not only obtain Turkey's comprehensive cooperation, but also completely avoid the difficult problems caused by Turkey's accession to the EU.",
      "B.If Turkey meets the EU's political and economic accession standards, it can join the EU.",
      "C.The EU will either get full cooperation from Turkey or completely avoid the troubles caused by Turkey's accession to the EU.",
      "D.Only 3% of Turkey 's land is in Europe, and most Europeans do not recognize Turkey as a European country."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([EU_needs_Turkey, lose_cooperation, join_problems, Turkey_meets_standards, Turkey_joins, EU_gets_cooperation, EU_avoids_problems])\nimplies = Function([propositions, propositions] -> [bool])\n\n# Constraints\nimplies(EU_needs_Turkey, lose_cooperation) ::: If the EU says 'no' to Turkey, it will lose Turkey's cooperation\nimplies(Turkey_joins, join_problems) ::: If Turkey joins the EU, it will bring a series of problems\nimplies(Turkey_meets_standards, Turkey_joins) ::: If Turkey meets the EU's political and economic accession standards, it can join the EU\n\n# Options\nQuestion ::: Which of the following conclusions can be derived from the above statement?\nis_derived(Not(And(EU_gets_cooperation, Not(join_problems)))) ::: (A)\nis_derived(implies(Turkey_meets_standards, Turkey_joins)) ::: (B)\nis_derived(Or(EU_gets_cooperation, Not(join_problems))) ::: (C)\nis_derived(False) ::: (D)"
    ]
  },
  {
    "id": 255,
    "context": "From the end of the 1980s to the beginning of the 1990s, a total of 134 in-service staff died in 7 research institutes of the Chinese Academy of Sciences and Peking University in a five-year period.Some people collected this data and concluded that the average age of death of intellectuals in Zhongguancun is 53.34 years, which is lower than Beijing 's average life expectancy of 73 years in 1990 and 5.18 years lower than the 58.52 years surveyed 10 years ago.",
    "question": "Which of the following most accurately points out the fallacy of this statistical reasoning?",
    "answer": "C",
    "options": [
      "A.The actual situation is that 143 in-service personnel died, and the sample data is unreliable.",
      "B.If the sample size is too small, data on the deaths of in-service personnel from other research institutions and universities in Zhongguancun should be added.",
      "C.This is equivalent to the surprising conclusion after surveying the average age of death of college students is 22 years? people with college education have an average life expectancy of more than 50 years less than others.",
      "D.This statistical reasoning does not distinguish between types of intellectuals in Zhongguancun."
    ],
    "raw_logic_programs": [
      "# Declarations\ninstitutes = EnumSort([CAS, Peking_University])\ntime_periods = EnumSort([end_1980s, beginning_1990s])\ndata_points = Function([institutes, time_periods] -> [int])\naverage_age = Function([institutes, time_periods] -> [float])\n\n# Constraints\ndata_points(CAS, end_1980s) + data_points(Peking_University, end_1980s) == 134 ::: A total of 134 in-service staff died in 7 research institutes of the Chinese Academy of Sciences and Peking University in a five-year period\naverage_age(CAS, end_1980s) == 53.34 ::: The average age of death of intellectuals in Zhongguancun is 53.34 years\naverage_age(Peking_University, end_1980s) == 53.34 ::: The average age of death of intellectuals in Zhongguancun is 53.34 years\naverage_age(CAS, beginning_1990s) == 58.52 ::: 5.18 years lower than the 58.52 years surveyed 10 years ago\naverage_age(Peking_University, beginning_1990s) == 58.52 ::: 5.18 years lower than the 58.52 years surveyed 10 years ago\n\n# Options\nQuestion ::: Which of the following most accurately points out the fallacy of this statistical reasoning?\nis_fallacy(\"The actual situation is that 143 in-service personnel died, and the sample data is unreliable.\") ::: (A)\nis_fallacy(\"If the sample size is too small, data on the deaths of in-service personnel from other research institutions and universities in Zhongguancun should be added.\") ::: (B)\nis_fallacy(\"This is equivalent to the surprising conclusion after surveying the average age of death of college students is 22 years? people with college education have an average life expectancy of more than 50 years less than others.\") ::: (C)\nis_fallacy(\"This statistical reasoning does not distinguish between types of intellectuals in Zhongguancun.\") ::: (D)"
    ]
  },
  {
    "id": 256,
    "context": "The gap in compensation for senior managers reflects the way companies work across departments.If this gap is large, it stimulates competition between departments and individual performance; if this gap is small, it stimulates cooperation and collective performance between departments.3M companies work in cooperation with each other, so ______________",
    "question": "Which of the following statements is the most appropriate conclusion for the above argument?",
    "answer": "C",
    "options": [
      "A.Senior managers of 3M companies have a large gap in compensation.",
      "B.Working in a cooperative manner can share some resources and information.",
      "C.3M company's senior managers have smaller gaps in compensation",
      "D.Working in a competitive manner can improve the efficiency of various departments."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([3M])\ncompensation_gap = EnumSort([large, small])\nwork_style = EnumSort([competitive, cooperative])\ngap_in_compensation = Function([companies] -> [compensation_gap])\nwork_method = Function([companies] -> [work_style])\n\n# Constraints\nForAll([c:companies], Implies(gap_in_compensation(c) == large, work_method(c) == competitive)) ::: If the gap is large, it stimulates competition between departments and individual performance\nForAll([c:companies], Implies(gap_in_compensation(c) == small, work_method(c) == cooperative)) ::: If the gap is small, it stimulates cooperation and collective performance between departments\nwork_method(3M) == cooperative ::: 3M companies work in cooperation with each other\n\n# Options\nQuestion ::: Which of the following statements is the most appropriate conclusion for the above argument?\nis_valid(gap_in_compensation(3M) == large) ::: (A)\nis_valid(work_method(3M) == cooperative) ::: (B)\nis_valid(gap_in_compensation(3M) == small) ::: (C)\nis_valid(work_method(3M) == competitive) ::: (D)"
    ]
  },
  {
    "id": 257,
    "context": "A research report shows that with the development of the economy and reform and opening up, almost all the units related to planting and breeding in China have projects to import species from abroad.However, the Alternanthera philoxeroides introduced as feed in East China and other places, and the rice grass introduced in the coastal provinces for protection of beaches, etc., quickly spread and invaded pastures, forest areas and wastelands, forming a single dominant community, resulting in the original plant community Recession.The Italian black bees introduced from Xinjiang quickly spread into the wild, making the original excellent bee species Ili black bees almost extinct.therefore____________",
    "question": "Which of the following can most logically complete the above discussion?",
    "answer": "A",
    "options": [
      "A.The introduction of foreign species may cause great harm to China's biodiversity.",
      "B.Should try to control the spread of Alternanthera philoxeroides, rice grass and other plants.",
      "C.The introduction of species from abroad is to improve economic efficiency.",
      "D.There are alien species in 34 provinces, cities and autonomous regions in China."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([Alternanthera_philoxeroides, rice_grass, Italian_black_bees, Ili_black_bees])\nregions = EnumSort([East_China, coastal_provinces, Xinjiang])\neffects = EnumSort([spread, invade, extinct, recession])\nactions = EnumSort([control_spread, improve_efficiency, harm_biodiversity])\n\n# Constraints\nForAll([s:species, r:regions], Exists([e:effects], causes(s, r, e))) ::: Each species introduced causes certain effects in specific regions\ncauses(Alternanthera_philoxeroides, East_China, invade) ::: Alternanthera philoxeroides invades pastures, forest areas, and wastelands in East China\ncauses(rice_grass, coastal_provinces, invade) ::: Rice grass invades coastal provinces\ncauses(Italian_black_bees, Xinjiang, spread) ::: Italian black bees spread into the wild in Xinjiang\ncauses(Italian_black_bees, Xinjiang, extinct) ::: Italian black bees cause Ili black bees to become almost extinct\n\n# Options\nQuestion ::: Which of the following can most logically complete the above discussion?\nis_logical(causes(Alternanthera_philoxeroides, East_China, harm_biodiversity)) ::: (A)\nis_logical(causes(rice_grass, coastal_provinces, control_spread)) ::: (B)\nis_logical(causes(species, regions, improve_efficiency)) ::: (C)\nis_logical(Exists([r:regions], causes(species, r, spread))) ::: (D)"
    ]
  },
  {
    "id": 258,
    "context": "When a team travels to Tibet, in addition to Lhasa, there are 6 cities or scenic spots to choose from? City E, City F, Lake G, Mountain H, Mountain I, Lake J Taking into account factors such as time, funding, plateau environment, and physical condition of the personnel, (1) at least one of Lake G and Lake J should be visited.(2) If you don't go to E city or F city, you can't go to G lake.(3) If you don't go to E city, you can't go to H mountain.(4) Only when I cross the I peak can I reach Lake J.",
    "question": "If this team does not go to I Peak due to climate reasons, which of the following must be true?",
    "answer": "D",
    "options": [
      "A.The group went to E city and J lake",
      "B.The group went to city E instead of city F",
      "C.The group went to visit G Lake and H Mountain",
      "D.The group went to F city and G lake tour"
    ],
    "raw_logic_programs": [
      "# Declarations\nlocations = EnumSort([CityE, CityF, LakeG, MountainH, MountainI, LakeJ])\nvisit = Function([locations] -> [bool])\n\n# Constraints\nOr(visit(LakeG), visit(LakeJ)) ::: At least one of Lake G and Lake J should be visited\nImplies(Not(visit(CityE)), Not(visit(MountainH))) ::: If you don't go to E city, you can't go to H mountain\nImplies(Not(visit(CityE)), Not(visit(LakeG))) ::: If you don't go to E city or F city, you can't go to G lake\nImplies(Not(visit(CityF)), Not(visit(LakeG))) ::: If you don't go to E city or F city, you can't go to G lake\nImplies(Not(visit(MountainI)), Not(visit(LakeJ))) ::: Only when I cross the I peak can I reach Lake J\n\n# Options\nQuestion ::: If this team does not go to I Peak due to climate reasons, which of the following must be true?\nis_must_true(And(visit(CityE), visit(LakeJ))) ::: (A) The group went to E city and J lake\nis_must_true(And(visit(CityE), Not(visit(CityF)))) ::: (B) The group went to city E instead of city F\nis_must_true(And(visit(LakeG), visit(MountainH))) ::: (C) The group went to visit G Lake and H Mountain\nis_must_true(And(visit(CityF), visit(LakeG))) ::: (D) The group went to F city and G lake tour"
    ]
  },
  {
    "id": 259,
    "context": "Last year, the national consumer price index (CPI) rose only 1.8%, which is a moderate increase.However, people's personal feelings are quite different.They feel that water, electricity, gas, vegetables, oil, going to school to see a doctor, and buying a house by car are all rising prices, and the increase is not 'moderate.'",
    "question": "Which of the following options does not help explain the gap between the statistics in the question and the people 's feelings?",
    "answer": "D",
    "options": [
      "A.China's current CPI statistical range and standards were formulated more than 20 years ago, and it is difficult to truly reflect the current trend of consumer prices.",
      "B.The CPI published by the National Bureau of Statistics is a data description of the overall situation of the prices of various goods and services across the country, and it cannot fully reflect individual feelings and the differences between regions and consumption levels.",
      "C.Products with a high degree of relevance to people's lives tend to increase prices; those with a low degree of relevance tend to fall prices.",
      "D.High-income groups have little sense of a small price increase."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([A, B, C, D])\nexplains_gap = Function([factors] -> [bool])\n\n# Constraints\nexplains_gap(A) ::: China's current CPI statistical range and standards were formulated more than 20 years ago, and it is difficult to truly reflect the current trend of consumer prices.\nexplains_gap(B) ::: The CPI published by the National Bureau of Statistics is a data description of the overall situation of the prices of various goods and services across the country, and it cannot fully reflect individual feelings and the differences between regions and consumption levels.\nexplains_gap(C) ::: Products with a high degree of relevance to people's lives tend to increase prices; those with a low degree of relevance tend to fall prices.\nexplains_gap(D) ::: High-income groups have little sense of a small price increase.\n\n# Options\nQuestion ::: Which of the following options does not help explain the gap between the statistics in the question and the people's feelings?\nis_not_explaining_gap(Not(explains_gap(A))) ::: (A)\nis_not_explaining_gap(Not(explains_gap(B))) ::: (B)\nis_not_explaining_gap(Not(explains_gap(C))) ::: (C)\nis_not_explaining_gap(Not(explains_gap(D))) ::: (D)"
    ]
  },
  {
    "id": 260,
    "context": "According to the conclusions of the four main surveys conducted in the past 10 years, the number of obese children in the urban area of â€‹â€‹Beijing has been continuously increasing with the weight of children over 85% of the same age as the standard of obesity.",
    "question": "If the findings in the above survey are correct, which of the following conclusions can be drawn based on this?",
    "answer": "B",
    "options": [
      "A.In the past 10 years, children's physical activity in Beijing has become less and less.",
      "B.In the past 10 years, the number of non-obese children in Beijing has also continued to rise.",
      "C.In the past 10 years, the number of obese children in Beijing's urban areas has also continued to decrease.",
      "D.Children in Beijing 's urban area become more likely to gain weight as they age."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([year1, year2, year3, year4, year5, year6, year7, year8, year9, year10])\nchildren = EnumSort([obese, non_obese])\npopulation = Function([years, children] -> [int])\n\n# Constraints\nForAll([y:years], population(y, obese) > population(y-1, obese)) ::: the number of obese children in the urban area of Beijing has been continuously increasing\n\n# Options\nQuestion ::: If the findings in the above survey are correct, which of the following conclusions can be drawn based on this?\nis_valid(ForAll([y:years], population(y, non_obese) > population(y-1, non_obese))) ::: (B) In the past 10 years, the number of non-obese children in Beijing has also continued to rise.\nis_valid(ForAll([y:years], population(y, obese) < population(y-1, obese))) ::: (C) In the past 10 years, the number of obese children in Beijing's urban areas has also continued to decrease.\nis_valid(ForAll([y:years], population(y, obese) > population(y-1, obese))) ::: (D) Children in Beijing's urban area become more likely to gain weight as they age."
    ]
  },
  {
    "id": 261,
    "context": "The Nanjing Yangtze River Bridge, built in 1968, has a clear height of 24 meters in the Fengshui area.Theoretically, it can pass a maximum of 3,000 tons of ships.Today, with the rapid economic development, it has become a building that 'cuts the waist' of the Yangtze River waterway and hinders the passage of giant ships.A bridge expert asserted that the Nanjing Yangtze River Bridge must be demolished and rebuilt in order to dredge the golden waterways of the Yangtze River completely.",
    "question": "If any of the following is true, can you raise the most doubts about this expert's point of view?",
    "answer": "D",
    "options": [
      "A.Due to the inability of large ships to pass through the Nanjing Bridge, a large number of exported goods in the middle and upper reaches of the Yangtze River can only be taken by road or railway.",
      "B.99% of international ships entering the Yangtze River are moored at ports below the Nanjing Bridge, and dozens of foreign trade terminals above Nanjing rarely have large external ships berthed.",
      "C.It is not enough to dismantle only the Nanjing Bridge.The Yangtze River Bridge, which was built in Wuhu, Tongling, Anqing and other places, has a clear height of 24 meters.",
      "D.Shipbuilding technology is highly developed, and 8000-ton ships designed for adapting to the passage of the Yangtze River abroad have passed through Nanjing to Wuhan."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ndoubt = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the question is about raising doubts based on the given statements.\n\n# Options\nQuestion ::: If any of the following is true, can you raise the most doubts about this expert's point of view?\nis_most_doubtful(doubt(A)) ::: (A) Due to the inability of large ships to pass through the Nanjing Bridge, a large number of exported goods in the middle and upper reaches of the Yangtze River can only be taken by road or railway.\nis_most_doubtful(doubt(B)) ::: (B) 99% of international ships entering the Yangtze River are moored at ports below the Nanjing Bridge, and dozens of foreign trade terminals above Nanjing rarely have large external ships berthed.\nis_most_doubtful(doubt(C)) ::: (C) It is not enough to dismantle only the Nanjing Bridge. The Yangtze River Bridge, which was built in Wuhu, Tongling, Anqing and other places, has a clear height of 24 meters.\nis_most_doubtful(doubt(D)) ::: (D) Shipbuilding technology is highly developed, and 8000-ton ships designed for adapting to the passage of the Yangtze River abroad have passed through Nanjing to Wuhan."
    ]
  },
  {
    "id": 262,
    "context": "In a large barber shop, all hairdressers are northerners, all female employees are southerners, and all married people are female employees, so all married people are not barbers.",
    "question": "Which of the following is true will prove that at least one of the premises of the above reasoning is false?",
    "answer": "C",
    "options": [
      "A.There is an unmarried male hairdresser born in the north.",
      "B.There is an unmarried female employee who is not a hairdresser in the shop.",
      "C.There is a female hairdresser born in the south.",
      "D.There is a married female employee born in the south."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([hairdressers, female_employees, married_people, northerners, southerners])\nproperties = Function([people] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(properties(p) == hairdressers, properties(p) == northerners)) ::: All hairdressers are northerners\nForAll([p:people], Implies(properties(p) == female_employees, properties(p) == southerners)) ::: All female employees are southerners\nForAll([p:people], Implies(properties(p) == married_people, properties(p) == female_employees)) ::: All married people are female employees\nForAll([p:people], Implies(properties(p) == married_people, Not(properties(p) == hairdressers))) ::: All married people are not barbers\n\n# Options\nQuestion ::: Which of the following is true will prove that at least one of the premises of the above reasoning is false?\nis_false(And(properties(unmarried_male_hairdresser) == hairdressers, properties(unmarried_male_hairdresser) == northerners)) ::: (A)\nis_false(And(properties(unmarried_female_employee) == female_employees, Not(properties(unmarried_female_employee) == hairdressers))) ::: (B)\nis_false(And(properties(female_hairdresser) == hairdressers, properties(female_hairdresser) == southerners)) ::: (C)\nis_false(And(properties(married_female_employee) == married_people, properties(married_female_employee) == southerners)) ::: (D)"
    ]
  },
  {
    "id": 263,
    "context": "There is a European-centric bias in the perception of world culture.During the period of the cultural axis, every cultural area has its backbone thoughts, and each backbone thought has its contribution to world culture.The backbone of China's ideology is both Confucianism, Taoism, and Mohism, and the ideas of the sons represented by Confucianism, Taoism, and Moth have contributed to world culture.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "C",
    "options": [
      "A.India is one of the cultural districts during the cultural axis period.",
      "B.Greece is one of the cultural districts during the cultural axis period.",
      "C.China is one of the cultural districts during the cultural axis period.",
      "D.Egypt is one of the cultural districts during the cultural axis period."
    ],
    "raw_logic_programs": [
      "# Declarations\ncultural_areas = EnumSort([China, India, Greece, Egypt])\nbackbone_thoughts = EnumSort([Confucianism, Taoism, Mohism])\ncontributes = Function([cultural_areas, backbone_thoughts] -> [bool])\n\n# Constraints\nForAll([b:backbone_thoughts], contributes(China, b)) ::: The backbone of China's ideology is both Confucianism, Taoism, and Mohism\nExists([b:backbone_thoughts], contributes(China, b)) ::: The ideas of the sons represented by Confucianism, Taoism, and Mohism have contributed to world culture\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(China in cultural_areas) ::: (C)\nis_assumption(India in cultural_areas) ::: (A)\nis_assumption(Greece in cultural_areas) ::: (B)\nis_assumption(Egypt in cultural_areas) ::: (D)"
    ]
  },
  {
    "id": 264,
    "context": "The minimum living security rights of urban residents in China have been confirmed in the form of legislation, but the minimum living security of farmers (that is, rural minimum living security), which accounts for more than 80% of the total population of the country, is still blank.The key to achieving rural minimum living security is to raise funds.An economist asserted that the realization of rural minimum living security is completely achievable by the national financial resources.",
    "question": "Which of the following, if true, can give the economist 's assertion the greatest support?",
    "answer": "B",
    "options": [
      "A.At present, there are 23.65 million absolute poor people in rural areas in China, and the existing methods cannot solve the problem of poverty alleviation.",
      "B.Rural Dibao needs approximately 25 billion yuan a year, which is 0.83% of China 's total fiscal revenue of 3 trillion yuan in 2005.",
      "C.Rural Dibao needs approximately 25 billion yuan a year, which is 1/8 of the 200 billion yuan used to build the Three Gorges Project.",
      "D.After 2000, the government increased its investment in poverty alleviation and development funds, but the rate of absolute poverty reduction has slowed significantly."
    ],
    "raw_logic_programs": [
      "# Declarations\nassertion = Function([bool])\nsupport = Function([choices] -> [bool])\nchoices = EnumSort([A, B, C, D])\n\n# Constraints\nassertion == True ::: The economist's assertion is that the realization of rural minimum living security is completely achievable by the national financial resources.\n\n# Options\nQuestion ::: Which of the following, if true, can give the economist's assertion the greatest support?\nsupport(B) ::: (B) Rural Dibao needs approximately 25 billion yuan a year, which is 0.83% of China’s total fiscal revenue of 3 trillion yuan in 2005.\nsupport(A) ::: (A) At present, there are 23.65 million absolute poor people in rural areas in China, and the existing methods cannot solve the problem of poverty alleviation.\nsupport(C) ::: (C) Rural Dibao needs approximately 25 billion yuan a year, which is 1/8 of the 200 billion yuan used to build the Three Gorges Project.\nsupport(D) ::: (D) After 2000, the government increased its investment in poverty alleviation and development funds, but the rate of absolute poverty reduction has slowed significantly."
    ]
  },
  {
    "id": 265,
    "context": "In recent years, although the government has taken many measures to curb housing prices, housing prices are still rising rapidly, and this situation cannot be fundamentally changed in the short term.",
    "question": "The following options all support the point of view in the question, except?",
    "answer": "C",
    "options": [
      "A.Welfare distribution is cancelled, and the surplus of money in the hands of residents increases, resulting in a strong demand for house purchases.",
      "B.It is impossible for the government to restrain house prices excessively, because that will severely hit the housing industry, leading to many risks such as finance and employment.",
      "C.The price of affordable housing is still too high for some socially disadvantaged groups.",
      "D.China has limited land resources, and the government must strictly control the supply of land used for building houses."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_view = Function([statements] -> [bool])\n\n# Constraints\nsupports_view(A) ::: Welfare distribution is cancelled, and the surplus of money in the hands of residents increases, resulting in a strong demand for house purchases.\nsupports_view(B) ::: It is impossible for the government to restrain house prices excessively, because that will severely hit the housing industry, leading to many risks such as finance and employment.\nsupports_view(C) ::: The price of affordable housing is still too high for some socially disadvantaged groups.\nsupports_view(D) ::: China has limited land resources, and the government must strictly control the supply of land used for building houses.\n\n# Options\nQuestion ::: The following options all support the point of view in the question, except?\nis_exception(Not(supports_view(A))) ::: (A)\nis_exception(Not(supports_view(B))) ::: (B)\nis_exception(Not(supports_view(C))) ::: (C)\nis_exception(Not(supports_view(D))) ::: (D)"
    ]
  },
  {
    "id": 266,
    "context": "After winning the Nobel Prize in Literature, Marquez could actually write a compact and fascinating story such as 'A Man's Homicide Case'.A truly tragic work is really surprising.",
    "question": "The assumptions relied upon by the above comments are?",
    "answer": "D",
    "options": [
      "A.Before winning the Nobel Prize in Literature, Marquez wrote many outstanding works.",
      "B.After the writer has won the Nobel Prize in Literature, all his works will be surprising.",
      "C.After Marquez won the Bell Prize in Literature, his works are still quite fascinating.",
      "D.After winning the Nobel Prize in Literature, writers can hardly write fascinating works."
    ],
    "raw_logic_programs": [
      "# Declarations\nwriter = EnumSort([Marquez])\nprizes = EnumSort([Nobel_Prize])\nworks = EnumSort([outstanding, surprising, fascinating, tragic])\nwon_prize = Function([writer, prizes] -> [bool])\nwrites = Function([writer, works] -> [bool])\n\n# Constraints\nwon_prize(Marquez, Nobel_Prize) ::: Marquez won the Nobel Prize in Literature\nwrites(Marquez, fascinating) ::: Marquez could write a compact and fascinating story\nwrites(Marquez, tragic) ::: A truly tragic work is really surprising\n\n# Options\nQuestion ::: The assumptions relied upon by the above comments are?\nis_assumption(And(writes(Marquez, outstanding), Not(won_prize(Marquez, Nobel_Prize)))) ::: (A)\nis_assumption(ForAll([w:works], Implies(won_prize(Marquez, Nobel_Prize), writes(Marquez, surprising)))) ::: (B)\nis_assumption(And(won_prize(Marquez, Nobel_Prize), writes(Marquez, fascinating))) ::: (C)\nis_assumption(ForAll([w:works], Implies(won_prize(Marquez, Nobel_Prize), Not(writes(Marquez, fascinating))))) ::: (D)"
    ]
  },
  {
    "id": 267,
    "context": "Zhang Qiang? 'The' changing face 'stunt in Sichuan opera was privately imparted to foreign countries by individual actors, and has now been spread to Japan, Singapore, Germany and other places.The main artistic value of Sichuan opera is to change the face.Leaking the secret to change the face is equivalent to ruining the artistic life of Sichuan opera.Li Ming? 'Even if a foreigner learns to change his face, it will not affect the survival and value of the traditional art of Sichuan opera.The intangible cultural heritage can only be inherited and developed by opening the mountain gate to the public and integrating into modern life.'",
    "question": "Which of the following, if true, best supports Li Ming 's point of view?",
    "answer": "A",
    "options": [
      "A.Foreigners learn Sichuan Opera because of their admiration for face-changing art, which will promote the spread of Sichuan Opera and promote Sichuan Opera to create new skills.",
      "B.Many foreigners study Peking Opera performance, but this does not detract from Peking Opera's image as a national essence.",
      "C.The result of the face-changing technology rumors is that it leads to the change of Sichuan Opera art.",
      "D.In 1987, the Ministry of Culture listed Sichuan Opera's face-changing art as a second-level national secret, which is the only state secret in the Chinese theater industry."
    ],
    "raw_logic_programs": [
      "# Declarations\nopinions = EnumSort([Zhang_Qiang, Li_Ming])\nstatements = EnumSort([A, B, C, D])\nsupports = Function([statements, opinions] -> [bool])\n\n# Constraints\nsupports(A, Li_Ming) ::: Foreigners learn Sichuan Opera because of their admiration for face-changing art, which will promote the spread of Sichuan Opera and promote Sichuan Opera to create new skills.\nsupports(B, Li_Ming) ::: Many foreigners study Peking Opera performance, but this does not detract from Peking Opera's image as a national essence.\nsupports(C, Zhang_Qiang) ::: The result of the face-changing technology rumors is that it leads to the change of Sichuan Opera art.\nsupports(D, Zhang_Qiang) ::: In 1987, the Ministry of Culture listed Sichuan Opera's face-changing art as a second-level national secret, which is the only state secret in the Chinese theater industry.\n\n# Options\nQuestion ::: Which of the following, if true, best supports Li Ming's point of view?\nis_best_support(supports(A, Li_Ming)) ::: (A)\nis_best_support(supports(B, Li_Ming)) ::: (B)\nis_best_support(supports(C, Li_Ming)) ::: (C)\nis_best_support(supports(D, Li_Ming)) ::: (D)"
    ]
  },
  {
    "id": 268,
    "context": "According to probability theory, the probability of tossing a uniform coin with its front side up and its reverse side up is almost equal.I bet with people that if I flip a coin face up, I win; if it flips up, I lose.I tossed the coin 6 times, and the result was all turned upside down.I have lost 6 times in a row.Therefore, the next few tosses must be heads up and will definitely win back.",
    "question": "Which of the following options is a proper evaluation of the 'me' reasoning?",
    "answer": "B",
    "options": [
      "A.It makes sense, because God is fair and almost equal, he does not return bad luck.",
      "B.It doesn't make sense, because each throw is an independent event and has nothing to do with the previous results.",
      "C.The next few tossings turned out to be mostly up, which shows that the probability theory is correct.",
      "D.This is just his personal conviction, which cannot be evaluated rationally or logically."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([toss1, toss2, toss3, toss4, toss5, toss6, toss7, toss8, toss9, toss10])\noutcomes = EnumSort([heads, tails])\nresult = Function([events] -> [outcomes])\n\n# Constraints\nForAll([e:events], Or(result(e) == heads, result(e) == tails)) ::: Each toss results in either heads or tails\nAnd(result(toss1) == tails, result(toss2) == tails, result(toss3) == tails, result(toss4) == tails, result(toss5) == tails, result(toss6) == tails) ::: The first six tosses result in tails\n\n# Options\nQuestion ::: Which of the following options is a proper evaluation of the 'me' reasoning?\nis_proper_evaluation(\"It makes sense, because God is fair and almost equal, he does not return bad luck.\") ::: (A)\nis_proper_evaluation(\"It doesn't make sense, because each throw is an independent event and has nothing to do with the previous results.\") ::: (B)\nis_proper_evaluation(\"The next few tossings turned out to be mostly up, which shows that the probability theory is correct.\") ::: (C)\nis_proper_evaluation(\"This is just his personal conviction, which cannot be evaluated rationally or logically.\") ::: (D)"
    ]
  },
  {
    "id": 269,
    "context": "There are some irrationality in our legal system.In criminal law, although the motives for committing crimes are the same, the punishment for those who commit crimes is much heavier than those who attempt to commit crimes without success.However, in civil law, a person who deliberately defrauds without success is not required to pay a fine.",
    "question": "Which of the following statements is true and seriously weakens the views in the above discussion?",
    "answer": "D",
    "options": [
      "A.People who study civil law are more likely to find work than those who study punishment, which shows that civil law is very different from criminal law.",
      "B.Many jailed criminals will commit other crimes once released.",
      "C.For this country, criminal trials pay a higher price than civil trials.",
      "D.The goal of criminal law is to punish criminals, while the goal of civil law is to compensate victims."
    ],
    "raw_logic_programs": [
      "# Declarations\nlegal_systems = EnumSort([criminal_law, civil_law])\nactions = EnumSort([commit_crime, attempt_crime, defraud])\noutcomes = EnumSort([success, failure])\npunishments = EnumSort([heavy, light, none])\ngoals = EnumSort([punish_criminals, compensate_victims])\n\n# Constraints\nForAll([a:actions], Implies(a == commit_crime, punishment(criminal_law, a, success) == heavy)) ::: punishment for committing crimes is heavy\nForAll([a:actions], Implies(a == attempt_crime, punishment(criminal_law, a, failure) == light)) ::: punishment for attempting crimes is lighter\npunishment(civil_law, defraud, failure) == none ::: no fine for unsuccessful fraud in civil law\n\n# Options\nQuestion ::: Which of the following statements is true and seriously weakens the views in the above discussion?\nis_true(And(ForAll([a:actions], punishment(civil_law, a, success) != punishment(criminal_law, a, success)), ForAll([a:actions], punishment(civil_law, a, failure) != punishment(criminal_law, a, failure)))) ::: (A)\nis_true(Exists([a:actions], And(punishment(criminal_law, a, success) == heavy, punishment(criminal_law, a, failure) == light))) ::: (B)\nis_true(Exists([a:actions], punishment(criminal_law, a, success) == heavy)) ::: (C)\nis_true(And(goal(criminal_law) == punish_criminals, goal(civil_law) == compensate_victims)) ::: (D)"
    ]
  },
  {
    "id": 270,
    "context": "Safety accidents in China's coal industry occur frequently, often resulting in serious casualties.The deep and fundamental reasons for this phenomenon are? the safety measures are not in place, the production of safety equipment is backward, the production in violation of laws and regulations is seriously violated, and some local leading cadres and staff have seriously neglected their duties.",
    "question": "Which of the following options poses the weakest question to the point of view in the question?",
    "answer": "D",
    "options": [
      "A.Government officials participated in the shares and formed a community of interests with the mine owners, resulting in problems such as inadequate security measures.",
      "B.Enterprises or miners have less investment in safe production, which can increase profits, leading to problems such as illegal production.",
      "C.In pursuit of local GDP growth, local governments and their law enforcement agencies have caused problems such as weak inspections on production safety.",
      "D.Although the miner's family depends on the miner to feed him, he hopes he will return home safely."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([safety_measures, equipment_production, illegal_production, negligence])\narguments = EnumSort([A, B, C, D])\nweakest_argument = Function([arguments] -> [bool])\n\n# Constraints\nForAll([f:factors], Exists([a:arguments], weakest_argument(a))) ::: Each argument addresses at least one factor\n\n# Options\nQuestion ::: Which of the following options poses the weakest question to the point of view in the question?\nis_weakest(weakest_argument(A)) ::: (A)\nis_weakest(weakest_argument(B)) ::: (B)\nis_weakest(weakest_argument(C)) ::: (C)\nis_weakest(weakest_argument(D)) ::: (D)"
    ]
  },
  {
    "id": 271,
    "context": "twenty one.A said? 'B lied'; B said? 'C lied'; C said? 'A and B lied'.",
    "question": "Please determine which of the following options is true?",
    "answer": "C",
    "options": [
      "A.Lie",
      "B.Both A and B lie",
      "C.Both A and C lie",
      "D.Both B and C lie"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([A, B, C])\nstatements = Function([people] -> [bool])\n\n# Constraints\nstatements(A) == Not(statements(B)) ::: A said 'B lied'\nstatements(B) == Not(statements(C)) ::: B said 'C lied'\nstatements(C) == And(Not(statements(A)), Not(statements(B))) ::: C said 'A and B lied'\n\n# Options\nQuestion ::: Please determine which of the following options is true?\nis_true(statements(A) == False) ::: (A) A lies\nis_true(And(statements(A) == False, statements(B) == False)) ::: (B) Both A and B lie\nis_true(And(statements(A) == False, statements(C) == False)) ::: (C) Both A and C lie\nis_true(And(statements(B) == False, statements(C) == False)) ::: (D) Both B and C lie"
    ]
  },
  {
    "id": 272,
    "context": "twenty two.Although personnel incentives are important to the company, a research result shows that the personnel department is not so important, because the personnel department does not participate in strategic decision-making meetings, and the hiring of senior managers is decided by the CEO.The personnel department often only supports and assists.effect.",
    "question": "Which of the following statements, if true, weakens the above argument the most?",
    "answer": "B",
    "options": [
      "A.Although the personnel department does not have the decision-making power to hire senior managers, it has the decision-making power to hire middle-level managers.",
      "B.Although the compensation system designed by the personnel department cannot create wealth, it can retain talented people for the company.",
      "C.Personnel incentives also include managers of the personnel department, although the performance of the personnel department is difficult to measure.",
      "D.The Coca-Cola company's personnel headquarters is one of the company's decision-making teams, which controls the decision-making power of personnel."
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([personnel, CEO])\ndecisions = EnumSort([strategic_meetings, hiring_senior_managers, hiring_middle_managers, compensation_system, decision_making_power])\nparticipates = Function([departments, decisions] -> [bool])\n\n# Constraints\nNot(participates(personnel, strategic_meetings)) ::: the personnel department does not participate in strategic decision-making meetings\nNot(participates(personnel, hiring_senior_managers)) ::: the hiring of senior managers is decided by the CEO\nparticipates(personnel, hiring_middle_managers) == False ::: the personnel department does not have the decision-making power to hire middle-level managers\nparticipates(personnel, compensation_system) == False ::: the compensation system designed by the personnel department cannot create wealth\n\n# Options\nQuestion ::: Which of the following statements, if true, weakens the above argument the most?\nis_weakens(participates(personnel, hiring_middle_managers) == True) ::: (A)\nis_weakens(participates(personnel, compensation_system) == True) ::: (B)\nis_weakens(participates(personnel, decision_making_power) == True) ::: (C)\nis_weakens(participates(personnel, strategic_meetings) == True) ::: (D)"
    ]
  },
  {
    "id": 273,
    "context": "twenty three.The computer anti-virus company calls the viruses that have been captured and processed as known viruses, otherwise it is an unknown virus.So far, antivirus software's prevention of new viruses lags behind the emergence of viruses, because antivirus software cannot know the situation of new viruses in advance.Some people want to develop anti-virus tools that proactively defend against new viruses.This is impossible.It is as whimsical as trying to make special drugs for an unknown disease.",
    "question": "Which of the following, if true, can weaken the above argument to the greatest extent?",
    "answer": "B",
    "options": [
      "A.Viruses that are truly innovative and technologically breakthrough are usually conceptual viruses, which are generally not very destructive.",
      "B.99% of new viruses are written after imitating known viruses.The characteristics of their transmission, infection, addition, and destruction can be learned from known viruses.",
      "C.Computer viruses are written by humans.They are much simpler than viruses in the biological world.",
      "D.Every time an anti-virus company claims to discover a new virus, it is determined by a certain method."
    ],
    "raw_logic_programs": [
      "# Declarations\nviruses = EnumSort([known, unknown])\ncharacteristics = EnumSort([transmission, infection, addition, destruction])\nanti_virus_tools = EnumSort([proactive, reactive])\narguments = Function([anti_virus_tools, viruses] -> [bool])\n\n# Constraints\nForAll([v:viruses], Implies(v == unknown, Not(arguments(proactive, v)))) ::: Antivirus software cannot know the situation of new viruses in advance\nForAll([v:viruses], Implies(v == known, arguments(reactive, v))) ::: Known viruses can be addressed by reactive tools\n\n# Options\nQuestion ::: Which of the following, if true, can weaken the above argument to the greatest extent?\nis_weakened(Exists([v:viruses], And(v == unknown, arguments(proactive, v)))) ::: (A)\nis_weakened(Exists([v:viruses], And(v == unknown, ForAll([c:characteristics], arguments(proactive, c))))) ::: (B)\nis_weakened(Exists([v:viruses], And(v == unknown, arguments(proactive, v)))) ::: (C)\nis_weakened(Exists([v:viruses], And(v == unknown, arguments(proactive, v)))) ::: (D)"
    ]
  },
  {
    "id": 274,
    "context": "twenty four.A Beijing newspaper published the statistical data of a forensic forensic center in Beijing under the title of '15% of fathers raising children for others'? 15% of the nearly 600 people who conducted paternity tests in Beijing within a year Excluded the parent-child relationship.",
    "question": "Which of the following does not question the reliability of statistical inference?",
    "answer": "D",
    "options": [
      "A.The title of the article should be limited? 15% of the fathers who carry out paternity tests will raise children for others.",
      "B.When the paternity test was conducted, there was already doubt about its parent-child relationship.",
      "C.Can modern science and technology really accurately identify the parent-child relationship?",
      "D.The cost of paternity testing is too high."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nquestions_reliability = Function([statements] -> [bool])\n\n# Constraints\nquestions_reliability(A) ::: The title of the article should be limited? 15% of the fathers who carry out paternity tests will raise children for others.\nquestions_reliability(B) ::: When the paternity test was conducted, there was already doubt about its parent-child relationship.\nquestions_reliability(C) ::: Can modern science and technology really accurately identify the parent-child relationship?\nquestions_reliability(D) ::: The cost of paternity testing is too high.\n\n# Options\nQuestion ::: Which of the following does not question the reliability of statistical inference?\nis_not_questioning_reliability(Not(questions_reliability(D))) ::: (D)"
    ]
  },
  {
    "id": 275,
    "context": "A good system can prevent the bad guys from arbitrarily arbitrarily, a bad system can prevent the good guys from doing good enough, or even go the other way.In this sense, the system is fundamental.Therefore, we must not only continue to promote the reform of the economic system, but also accelerate the reform of the political system.",
    "question": "Which of the following options most strongly supports the argument in the question?",
    "answer": "A",
    "options": [
      "A.At present, China's economic system and political system still have many serious drawbacks.",
      "B.Human nature contains at least evil factors, and everyone should be restricted and prevented by the system.",
      "C.The lag of political reform will seriously affect the successful operation of the economic system.",
      "D.A sound system can make the entire society operate in an orderly manner and avoid the possibility of launching a social revolution."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_argument = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, so we focus on the options.\n\n# Options\nQuestion ::: Which of the following options most strongly supports the argument in the question?\nsupports_argument(A) ::: (A) At present, China's economic system and political system still have many serious drawbacks.\nsupports_argument(B) ::: (B) Human nature contains at least evil factors, and everyone should be restricted and prevented by the system.\nsupports_argument(C) ::: (C) The lag of political reform will seriously affect the successful operation of the economic system.\nsupports_argument(D) ::: (D) A sound system can make the entire society operate in an orderly manner and avoid the possibility of launching a social revolution."
    ]
  },
  {
    "id": 276,
    "context": "As the price of oil rose, the country raised the sales price of gasoline and other refined oil, which led to an increase in taxi operating costs and a decrease in driver income.The survey shows that more than 95% of taxi drivers in Beijing object to the increase in taxi prices because the price increase will lead to a decrease in passengers.",
    "question": "Which of the following, if true, can explain this seemingly contradictory attitude of Beijing taxi drivers?",
    "answer": "A",
    "options": [
      "A.Taxi drivers hope to reduce the monthly rent paid to taxi companies, thereby eliminating the impact of rising oil prices.",
      "B.The survey shows that all consumers are opposed to taxi price increases.",
      "C.The monthly ticket price of Beijing's buses has been raised, but the price of ordinary tickets has remained unchanged.",
      "D.The increase in taxi prices makes the cost of rising oil prices entirely borne by consumers."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrivers = EnumSort([Beijing_taxi_drivers])\nfactors = EnumSort([oil_price, gasoline_price, operating_costs, driver_income, taxi_prices, passenger_count])\nattitudes = Function([drivers, factors] -> [bool])\n\n# Constraints\nattitudes(Beijing_taxi_drivers, oil_price) == True ::: As the price of oil rose\nattitudes(Beijing_taxi_drivers, gasoline_price) == True ::: the country raised the sales price of gasoline and other refined oil\nattitudes(Beijing_taxi_drivers, operating_costs) == True ::: led to an increase in taxi operating costs\nattitudes(Beijing_taxi_drivers, driver_income) == False ::: led to a decrease in driver income\nattitudes(Beijing_taxi_drivers, taxi_prices) == False ::: more than 95% of taxi drivers in Beijing object to the increase in taxi prices\nattitudes(Beijing_taxi_drivers, passenger_count) == False ::: the price increase will lead to a decrease in passengers\n\n# Options\nQuestion ::: Which of the following, if true, can explain this seemingly contradictory attitude of Beijing taxi drivers?\nis_explanation(attitudes(Beijing_taxi_drivers, taxi_prices) == False, attitudes(Beijing_taxi_drivers, passenger_count) == False) ::: (A) Taxi drivers hope to reduce the monthly rent paid to taxi companies, thereby eliminating the impact of rising oil prices.\nis_explanation(attitudes(Beijing_taxi_drivers, taxi_prices) == False, attitudes(Beijing_taxi_drivers, passenger_count) == False) ::: (B) The survey shows that all consumers are opposed to taxi price increases.\nis_explanation(attitudes(Beijing_taxi_drivers, taxi_prices) == False, attitudes(Beijing_taxi_drivers, passenger_count) == False) ::: (C) The monthly ticket price of Beijing's buses has been raised, but the price of ordinary tickets has remained unchanged.\nis_explanation(attitudes(Beijing_taxi_drivers, taxi_prices) == False, attitudes(Beijing_taxi_drivers, passenger_count) == False) ::: (D) The increase in taxi prices makes the cost of rising oil prices entirely borne by consumers."
    ]
  },
  {
    "id": 277,
    "context": "Clothing, food, housing and transportation are the top priorities of the people.However, the 'clothing' has been replaced by the hospital's 'medicine' in recent years.Expensive medical treatment and difficult medical treatment have become one of the hot issues of social concern.Therefore, we must quickly advance the reform of the medical system.",
    "question": "Which of the following questions is most relevant for evaluating the above argument?",
    "answer": "B",
    "options": [
      "A.How important are the bribery of drug dealers and the receipt of red envelopes by doctors in seeing doctors?",
      "B.What is the most fundamental cause of expensive and difficult medical treatment?",
      "C.How much does insufficient government funding play in increasing medical prices?",
      "D.How much do affordable hospitals play in curbing medical prices?"
    ],
    "raw_logic_programs": [
      "# Declarations\npriorities = EnumSort([clothing, food, housing, transportation, medicine])\nissues = EnumSort([expensive_treatment, difficult_treatment])\nreform = Function([issues] -> [bool])\n\n# Constraints\nreform(expensive_treatment) == True ::: Expensive medical treatment is a hot issue of social concern\nreform(difficult_treatment) == True ::: Difficult medical treatment is a hot issue of social concern\n\n# Options\nQuestion ::: Which of the following questions is most relevant for evaluating the above argument?\nis_relevant(importance_of_bribery_and_red_envelopes) ::: (A)\nis_relevant(fundamental_cause_of_expensive_and_difficult_treatment) ::: (B)\nis_relevant(insufficient_government_funding) ::: (C)\nis_relevant(role_of_affordable_hospitals) ::: (D)"
    ]
  },
  {
    "id": 278,
    "context": "After suppressing the Taiping Heavenly Kingdom, Zeng Guofan asked the imperial court to dismiss the Hunan army, but he did not mention the question of his personal stay.Because he knows that if he asks to stay in the court during the break, he will be suspicious of greed; if he asks for his dismissal to return to his hometown during the break, he will leave the impression that he is unwilling to continue to serve the court.",
    "question": "The reasoning in which of the following is most similar to the one above?",
    "answer": "C",
    "options": [
      "A.Among those who join life insurance, if you have good luck, you will bring bad luck to lose money; if you have bad luck, you will bring good luck to win money.Positive and negative growth, profit and loss.",
      "B.A poor farmer likes to call his children like this? 'In this world, you are either rich or poor, honest or dishonest.Because all poor people are honest, every rich person is dishonest of.'",
      "C.In dealing with a case of fraud in the imperial court of the Yongzheng dynasty, if Zhang Tingyu went to the court to advocate the killing of Zhang Tinglu, his family would think he was unjust; if Zhang Tingyu went to the court to defend Zhang Tinglu, Yong Zheng would think he was unfaithful.Therefore, Zhang Tingyu's home improvement is ill, and he hasn't made it.",
      "D.Between Emperor Liang Wu and Xiao Hong, if Emperor Xiao Hong gave up power and craved money, Emperor Liang Wu wouldn't worry that he would seize power; if Emperor Xiao Hong was both greedy and competing for power, Emperor Liang Wu would prevent it.Despite Xiao Hong's excessive accumulation of money, Emperor Liang Wu trusted him very much."
    ],
    "raw_logic_programs": [
      "# Declarations\nscenarios = EnumSort([Zeng_Guofan, Life_Insurance, Farmer, Zhang_Tingyu, Emperor_Liang_Wu])\nactions = EnumSort([ask_to_stay, ask_for_dismissal, join_insurance, not_join_insurance, advocate_killing, defend, give_up_power, crave_money])\noutcomes = EnumSort([suspicion_of_greed, unwilling_to_serve, lose_money, win_money, unjust, unfaithful, trusted, prevented])\n\n# Constraints\nForAll([s:scenarios], Exists([a:actions], And(a == ask_to_stay, outcomes(s) == suspicion_of_greed))) ::: if he asks to stay, he will be suspected of greed\nForAll([s:scenarios], Exists([a:actions], And(a == ask_for_dismissal, outcomes(s) == unwilling_to_serve))) ::: if he asks for dismissal, he will be seen as unwilling to serve\n\n# Options\nQuestion ::: The reasoning in which of the following is most similar to the one above?\nis_similar(ForAll([a:actions], Implies(a == join_insurance, outcomes(Life_Insurance) == lose_money))) ::: (A)\nis_similar(ForAll([a:actions], Implies(a == not_join_insurance, outcomes(Life_Insurance) == win_money))) ::: (A)\nis_similar(ForAll([a:actions], Implies(a == advocate_killing, outcomes(Zhang_Tingyu) == unjust))) ::: (C)\nis_similar(ForAll([a:actions], Implies(a == defend, outcomes(Zhang_Tingyu) == unfaithful))) ::: (C)\nis_similar(ForAll([a:actions], Implies(a == give_up_power, outcomes(Emperor_Liang_Wu) == trusted))) ::: (D)\nis_similar(ForAll([a:actions], Implies(a == crave_money, outcomes(Emperor_Liang_Wu) == prevented))) ::: (D)"
    ]
  },
  {
    "id": 279,
    "context": "A survey shows that all parts of the country provide very favorable conditions for the introduction of foreign capital.However, foreign-funded enterprises require absolute control when acquiring Chinese companies, refuse to accept non-performing assets, and demand to own and restrict original Chinese brands.For example, China 's largest construction machinery manufacturing company was acquired 85% of the equity by an American investment group; a German company acquired the leading enterprise of China 's oil nozzle and oil pump; China 's first listed bearing company was in a joint venture with a German company Years later, it became the exclusive company of Germany.therefore____________",
    "question": "Which of the following can most logically complete the above discussion?",
    "answer": "A",
    "options": [
      "A.The introduction of foreign capital on preferential terms may harm China's industry.",
      "B.The introduction of foreign capital on preferential terms is to introduce advanced technology and management.",
      "C.Under market economic conditions, capital and equity flow.",
      "D.The introduction of foreign capital on preferential terms is due to China 's current lack of funds."
    ],
    "raw_logic_programs": [
      "# Declarations\nconditions = EnumSort([favorable_conditions, absolute_control, refuse_non_performing_assets, demand_ownership, restrict_brands])\ncompanies = EnumSort([construction_machinery, oil_nozzle_pump, bearing_company])\nactions = EnumSort([acquired, joint_venture])\ncountries = EnumSort([American, German, Chinese])\n\n# Constraints\nForAll([c:conditions], c == favorable_conditions) ::: all parts of the country provide very favorable conditions for the introduction of foreign capital\nForAll([c:conditions], Or(c == absolute_control, c == refuse_non_performing_assets, c == demand_ownership, c == restrict_brands)) ::: foreign-funded enterprises require absolute control, refuse non-performing assets, demand ownership, and restrict brands\nExists([c:companies], And(c == construction_machinery, actions(American, c) == acquired)) ::: American investment group acquired 85% of the equity of China's largest construction machinery company\nExists([c:companies], And(c == oil_nozzle_pump, actions(German, c) == acquired)) ::: German company acquired the leading enterprise of China's oil nozzle and oil pump\nExists([c:companies], And(c == bearing_company, actions(German, c) == joint_venture)) ::: China's first listed bearing company was in a joint venture with a German company and became exclusive to Germany\n\n# Options\nQuestion ::: Which of the following can most logically complete the above discussion?\nis_logical_conclusion(\"The introduction of foreign capital on preferential terms may harm China's industry.\") ::: (A)\nis_logical_conclusion(\"The introduction of foreign capital on preferential terms is to introduce advanced technology and management.\") ::: (B)\nis_logical_conclusion(\"Under market economic conditions, capital and equity flow.\") ::: (C)\nis_logical_conclusion(\"The introduction of foreign capital on preferential terms is due to China's current lack of funds.\") ::: (D)"
    ]
  },
  {
    "id": 280,
    "context": "A university holds a Go game.After the first round of knockout, the six players who entered the second round are of equal strength, but they can still score points.In the two rounds that have been played, Chessman A defeats Chessman B, and Chesser B applauses Chessman C.Tomorrow, Chess Armor and C will play.",
    "question": "Please logically predict the result of the match based on the question?",
    "answer": "D",
    "options": [
      "A.Chess armor will definitely win",
      "B.Chess player C will definitely win",
      "C.The two will be tied",
      "D.Chess armor is likely to win, but it is also possible to lose"
    ],
    "raw_logic_programs": [
      "# Declarations\nplayers = EnumSort([A, B, C])\nresults = EnumSort([win, lose, tie])\nmatch_result = Function([players, players] -> [results])\n\n# Constraints\nmatch_result(A, B) == win ::: Chessman A defeats Chessman B\nmatch_result(B, C) == win ::: Chessman B defeats Chessman C\n\n# Options\nQuestion ::: Please logically predict the result of the match based on the question?\nis_definite(match_result(A, C) == win) ::: (A) Chess armor will definitely win\nis_definite(match_result(C, A) == win) ::: (B) Chess player C will definitely win\nis_definite(match_result(A, C) == tie) ::: (C) The two will be tied\nis_possible(match_result(A, C) == win) and is_possible(match_result(C, A) == win) ::: (D) Chess armor is likely to win, but it is also possible to lose"
    ]
  },
  {
    "id": 281,
    "context": "There are five volcanic islands E, F, G, H, and I in the east coast of a country.They are arranged in a straight line from north to south, and they are found? (1) F is adjacent to H and is on the north side of H.(2) I and E are adjacent.(3) G is somewhere in the north of F.",
    "question": "The order of the five islands from north to south can be?",
    "answer": "C",
    "options": [
      "A.E, G, I, F, H",
      "B.F, H, I, E, G",
      "C.G, E, I, F, H",
      "D.G, H, F, E, I"
    ],
    "raw_logic_programs": [
      "# Declarations\nislands = EnumSort([E, F, G, H, I])\nposition = Function([islands] -> [int])\nForAll([i:islands], And(1 <= position(i), position(i) <= 5))\n\n# Constraints\nposition(F) == position(H) - 1 ::: F is adjacent to H and is on the north side of H\nOr(position(I) == position(E) - 1, position(I) == position(E) + 1) ::: I and E are adjacent\nposition(G) < position(F) ::: G is somewhere in the north of F\n\n# Options\nQuestion ::: The order of the five islands from north to south can be?\nis_valid(And(position(E) == 1, position(G) == 2, position(I) == 3, position(F) == 4, position(H) == 5)) ::: (A)\nis_valid(And(position(F) == 1, position(H) == 2, position(I) == 3, position(E) == 4, position(G) == 5)) ::: (B)\nis_valid(And(position(G) == 1, position(E) == 2, position(I) == 3, position(F) == 4, position(H) == 5)) ::: (C)\nis_valid(And(position(G) == 1, position(H) == 2, position(F) == 3, position(E) == 4, position(I) == 5)) ::: (D)"
    ]
  },
  {
    "id": 282,
    "context": "There are five volcanic islands E, F, G, H, and I in the east coast of a country.They are arranged in a straight line from north to south, and they are found? (1) F is adjacent to H and is on the north side of H.(2) I and E are adjacent.(3) G is somewhere in the north of F.",
    "question": "If G is adjacent to I and to the north of I, which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.H is on the southernmost side of the island",
      "B.F is on the northernmost side of the island",
      "C.E is on the southernmost side of the island",
      "D.I is on the northernmost side of the island"
    ],
    "raw_logic_programs": [
      "# Declarations\nislands = EnumSort([E, F, G, H, I])\nposition = Function([islands] -> [int])\nForAll([i:islands], And(1 <= position(i), position(i) <= 5))\n\n# Constraints\nDistinct([i:islands], position(i)) ::: The islands are arranged in a straight line from north to south\nposition(F) == position(H) - 1 ::: F is adjacent to H and is on the north side of H\nOr(position(I) == position(E) - 1, position(E) == position(I) - 1) ::: I and E are adjacent\nposition(G) < position(F) ::: G is somewhere in the north of F\n\n# Additional Constraint from the Question\nposition(G) == position(I) - 1 ::: G is adjacent to I and to the north of I\n\n# Options\nQuestion ::: If G is adjacent to I and to the north of I, which of the following statements must be true?\nis_must_true(position(H) == 5) ::: (A) H is on the southernmost side of the island\nis_must_true(position(F) == 1) ::: (B) F is on the northernmost side of the island\nis_must_true(position(E) == 5) ::: (C) E is on the southernmost side of the island\nis_must_true(position(I) == 1) ::: (D) I is on the northernmost side of the island"
    ]
  },
  {
    "id": 283,
    "context": "There are five volcanic islands E, F, G, H, and I in the east coast of a country.They are arranged in a straight line from north to south, and they are found? (1) F is adjacent to H and is on the north side of H.(2) I and E are adjacent.(3) G is somewhere in the north of F.",
    "question": "If I is at a position north of G, which of the following states that positioning is true?",
    "answer": "B",
    "options": [
      "A.E is adjacent to G and to the north of G",
      "B.G is adjacent to F and to the north of F",
      "C.I is adjacent to G and to the north of G",
      "D.E is adjacent to F and to the north of F"
    ],
    "raw_logic_programs": [
      "# Declarations\nislands = EnumSort([E, F, G, H, I])\nposition = Function([islands] -> [int])\n\n# Constraints\nForAll([i:islands], And(1 <= position(i), position(i) <= 5)) ::: Each island has a unique position from 1 to 5\nDistinct([i:islands], position(i)) ::: No two islands can occupy the same position\nAnd(position(F) == position(H) - 1, position(F) < position(H)) ::: F is adjacent to H and is on the north side of H\nOr(position(I) == position(E) - 1, position(I) == position(E) + 1) ::: I and E are adjacent\nposition(G) < position(F) ::: G is somewhere in the north of F\n\n# Options\nQuestion ::: If I is at a position north of G, which of the following states that positioning is true?\nis_true(And(position(E) == position(G) - 1, position(E) < position(G))) ::: (A) E is adjacent to G and to the north of G\nis_true(And(position(G) == position(F) - 1, position(G) < position(F))) ::: (B) G is adjacent to F and to the north of F\nis_true(And(position(I) == position(G) - 1, position(I) < position(G))) ::: (C) I is adjacent to G and to the north of G\nis_true(And(position(E) == position(F) - 1, position(E) < position(F))) ::: (D) E is adjacent to F and to the north of F"
    ]
  },
  {
    "id": 284,
    "context": "There are five volcanic islands E, F, G, H, and I in the east coast of a country.They are arranged in a straight line from north to south, and they are found? (1) F is adjacent to H and is on the north side of H.(2) I and E are adjacent.(3) G is somewhere in the north of F.",
    "question": "If it is found that G is the northernmost island, how many possible arrangements are there for this group of islands?",
    "answer": "C",
    "options": [
      "A.2",
      "B.3",
      "C.4",
      "D.5"
    ],
    "raw_logic_programs": [
      "# Declarations\nislands = EnumSort([E, F, G, H, I])\nposition = Function([islands] -> [int])\nForAll([i:islands], And(1 <= position(i), position(i) <= 5))\n\n# Constraints\nAnd(Abs(position(F) - position(H)) == 1, position(F) < position(H)) ::: F is adjacent to H and is on the north side of H\nAbs(position(I) - position(E)) == 1 ::: I and E are adjacent\nposition(G) < position(F) ::: G is somewhere in the north of F\n\n# Options\nQuestion ::: If it is found that G is the northernmost island, how many possible arrangements are there for this group of islands?\nCount([p:Permutations(islands)], And(position(G) == 1, is_valid_permutation(p))) == 2 ::: (A)\nCount([p:Permutations(islands)], And(position(G) == 1, is_valid_permutation(p))) == 3 ::: (B)\nCount([p:Permutations(islands)], And(position(G) == 1, is_valid_permutation(p))) == 4 ::: (C)\nCount([p:Permutations(islands)], And(position(G) == 1, is_valid_permutation(p))) == 5 ::: (D)"
    ]
  },
  {
    "id": 285,
    "context": "There are five volcanic islands E, F, G, H, and I in the east coast of a country.They are arranged in a straight line from north to south, and they are found? (1) F is adjacent to H and is on the north side of H.(2) I and E are adjacent.(3) G is somewhere in the north of F.",
    "question": "If G and E are adjacent, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.E is somewhere north of G",
      "B.F is somewhere north of I",
      "C.G is somewhere north of E",
      "D.I is somewhere north of F"
    ],
    "raw_logic_programs": [
      "# Declarations\nislands = EnumSort([E, F, G, H, I])\nposition = Function([islands] -> [int])\n\n# Constraints\nForAll([i:islands], And(1 <= position(i), position(i) <= 5)) ::: Each island has a unique position from 1 to 5\nDistinct([i:islands], position(i)) ::: No two islands can occupy the same position\nposition(F) == position(H) - 1 ::: F is adjacent to H and is on the north side of H\nOr(position(I) == position(E) - 1, position(I) == position(E) + 1) ::: I and E are adjacent\nposition(G) < position(F) ::: G is somewhere in the north of F\n\n# Options\nQuestion ::: If G and E are adjacent, which of the following statements must be true?\nis_must_true(position(E) < position(G)) ::: (A) E is somewhere north of G\nis_must_true(position(F) < position(I)) ::: (B) F is somewhere north of I\nis_must_true(position(G) < position(E)) ::: (C) G is somewhere north of E\nis_must_true(position(I) < position(F)) ::: (D) I is somewhere north of F"
    ]
  },
  {
    "id": 286,
    "context": "Among the middle school students in a school, medical examinations were conducted for those who drank 2 to 3 bottles of beer every day for 60 days and found that 75% of the students had significantly deteriorated liver function.Experiments with a high degree of confidence have ruled out the possibility that 'these results happen to happen'.",
    "question": "If the information in the stem is true, which of the following conclusions will be confirmed?",
    "answer": "B",
    "options": [
      "A.Drinking alcohol causes liver function to deteriorate.",
      "B.Drinking alcohol has a clear correlation with liver function deterioration in adolescents.",
      "C.The researchers wanted to prove that young people should not drink alcohol.",
      "D.Sex has nothing to do with drinking and liver function degradation."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([student1, student2, ..., studentN])  # Assume a finite set of students\ndrinks_alcohol = Function([students] -> [bool])\ndeteriorated_liver_function = Function([students] -> [bool])\n\n# Constraints\nForAll([s:students], Implies(drinks_alcohol(s), deteriorated_liver_function(s))) ::: 75% of the students who drank alcohol had deteriorated liver function\n\n# Options\nQuestion ::: If the information in the stem is true, which of the following conclusions will be confirmed?\nis_confirmed(ForAll([s:students], Implies(drinks_alcohol(s), deteriorated_liver_function(s)))) ::: (A) Drinking alcohol causes liver function to deteriorate.\nis_confirmed(Exists([s:students], And(drinks_alcohol(s), deteriorated_liver_function(s)))) ::: (B) Drinking alcohol has a clear correlation with liver function deterioration in adolescents.\nis_confirmed(False) ::: (C) The researchers wanted to prove that young people should not drink alcohol.\nis_confirmed(False) ::: (D) Sex has nothing to do with drinking and liver function degradation."
    ]
  },
  {
    "id": 287,
    "context": "A survey shows that the national book reading rate of our country has been declining for 6 consecutive years.In 2005, the national book reading rate was lower than 50% for the first time.",
    "question": "Which of the following, if true, can explain the above contradiction?",
    "answer": "B",
    "options": [
      "A.'No time to read' is the main reason for the decline in book reading.",
      "B.The online reading rate of our nationals has increased from 3.7% in 1999 to 27.8% in 2005.",
      "C.In recent years, China's book publishing has problems such as high book prices, tedious content, and excessive hype.",
      "D.You can also learn a lot by listening to lectures."
    ],
    "raw_logic_programs": [
      "# Declarations\nyears = EnumSort([1999, 2000, 2001, 2002, 2003, 2004, 2005])\nreading_rate = Function([years] -> [float])\nonline_reading_rate = Function([years] -> [float])\n\n# Constraints\nForAll([y:years], reading_rate(y) < reading_rate(y - 1)) ::: The national book reading rate has been declining for 6 consecutive years\nreading_rate(2005) < 0.5 ::: In 2005, the national book reading rate was lower than 50% for the first time\n\n# Options\nQuestion ::: Which of the following, if true, can explain the above contradiction?\nis_explanation(online_reading_rate(2005) == 27.8) ::: (B) The online reading rate of our nationals has increased from 3.7% in 1999 to 27.8% in 2005\nis_explanation(Exists([y:years], And(y >= 1999, y <= 2005, online_reading_rate(y) > 0))) ::: (A) 'No time to read' is the main reason for the decline in book reading\nis_explanation(Exists([y:years], And(y >= 1999, y <= 2005, reading_rate(y) < 0.5))) ::: (C) In recent years, China's book publishing has problems such as high book prices, tedious content, and excessive hype\nis_explanation(Exists([y:years], And(y >= 1999, y <= 2005, reading_rate(y) < 0.5))) ::: (D) You can also learn a lot by listening to lectures"
    ]
  },
  {
    "id": 288,
    "context": "Right and wrong and whether they violate the rules are two things.There may be regulations that prohibit things that are not wrong in themselves, such as laws in certain countries that prohibit criticism of the government; there may also be regulations that require things that are inherently wrong, such as laws that require apartheid in public places.And, like evaluating behavior, we can also evaluate some of the prescribed right and wrong.",
    "question": "Which of the following does not weaken, but supports the argument in the question stem?",
    "answer": "D",
    "options": [
      "A.If we do not follow some pre-existing regulations or standards, how can we judge right and wrong?",
      "B.'People are doing, heaven is watching.' Failure to act in accordance with ethical regulations will incur punishment from heaven.",
      "C.Behind the judgment of right and wrong, you can always find the rules or standards on which people judge.",
      "D.The basis for judgment of right and wrong lies in pushing oneself and one's moral conscience.It is common and universal; however, the moral regulations on how to act for people vary from person to person and from place to place."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([right_wrong, regulations])\nsupports = Function([arguments] -> [bool])\n\n# Constraints\nForAll([a:arguments], supports(a) == False) ::: Right and wrong and whether they violate the rules are two things\n\n# Options\nQuestion ::: Which of the following does not weaken, but supports the argument in the question stem?\nis_support(supports(right_wrong)) ::: (A)\nis_support(supports(regulations)) ::: (B)\nis_support(supports(right_wrong)) ::: (C)\nis_support(supports(right_wrong)) ::: (D)"
    ]
  },
  {
    "id": 289,
    "context": "An economist suggested that when transferring polluting industries from developed countries to developing countries, developed countries benefited from the improvement of the natural environment; although the developing countries were polluted by the environment, they were compensated for solving employment and increasing taxes.As a result, the situation on both sides has improved, resulting in an increase in total global welfare.",
    "question": "Which of the following is the hypothesis discussed by the economist?",
    "answer": "A",
    "options": [
      "A.A good natural environment is more important for people in developed countries than people in developing countries.",
      "B.Both developed and developing countries have polluting enterprises.",
      "C.The degree of environmental pollution in developed countries is more serious than in developing countries.",
      "D.Polluting industries can generate more profits in developing countries than in developed countries."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([developed, developing])\nbenefits = EnumSort([environment, employment, taxes, welfare])\nindustries = EnumSort([polluting])\neffects = Function([countries, benefits] -> [bool])\n\n# Constraints\neffects(developed, environment) == True ::: Developed countries benefit from the improvement of the natural environment\neffects(developing, employment) == True ::: Developing countries are compensated for solving employment\neffects(developing, taxes) == True ::: Developing countries are compensated for increasing taxes\neffects(developed, welfare) == True ::: Developed countries experience an increase in welfare\neffects(developing, welfare) == True ::: Developing countries experience an increase in welfare\n\n# Options\nQuestion ::: Which of the following is the hypothesis discussed by the economist?\nis_hypothesis(effects(developed, environment) > effects(developing, environment)) ::: (A) A good natural environment is more important for people in developed countries than people in developing countries.\nis_hypothesis(Exists([c:countries], effects(c, industries) == True)) ::: (B) Both developed and developing countries have polluting enterprises.\nis_hypothesis(effects(developed, environment) < effects(developing, environment)) ::: (C) The degree of environmental pollution in developed countries is more serious than in developing countries.\nis_hypothesis(effects(developing, welfare) > effects(developed, welfare)) ::: (D) Polluting industries can generate more profits in developing countries than in developed countries."
    ]
  },
  {
    "id": 290,
    "context": "It is the people of this country who are most concerned about the fate and future of a country, and it is the people of this country who understand the situation of a country the most.Therefore, it is up to the people of this country to decide what path a country takes.",
    "question": "Which of the following options does not support the argument in the question stem?",
    "answer": "C",
    "options": [
      "A.The US invasion and interference in Iraq caused a major disaster to the Iraqi people and the Americans themselves.",
      "B.The historical traditions, national customs, religious beliefs, and economic conditions of countries around the world vary greatly, so their development paths are also unique.",
      "C.I don't know the true face of Lushan, I am only in this mountain.",
      "D.The more you act, the more often you will mess things up."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nsupports_argument = Function([arguments] -> [bool])\n\n# Constraints\nsupports_argument(A) ::: The US invasion and interference in Iraq caused a major disaster to the Iraqi people and the Americans themselves.\nsupports_argument(B) ::: The historical traditions, national customs, religious beliefs, and economic conditions of countries around the world vary greatly, so their development paths are also unique.\nsupports_argument(C) ::: I don't know the true face of Lushan, I am only in this mountain.\nsupports_argument(D) ::: The more you act, the more often you will mess things up.\n\n# Options\nQuestion ::: Which of the following options does not support the argument in the question stem?\nis_unsat(supports_argument(A)) ::: (A)\nis_unsat(supports_argument(B)) ::: (B)\nis_unsat(supports_argument(C)) ::: (C)\nis_unsat(supports_argument(D)) ::: (D)"
    ]
  },
  {
    "id": 291,
    "context": "This summer, the extremely high temperature and drought hit Chongqing and Sichuan, including the middle and upper reaches of the Yangtze River, nearly one million square kilometers.Some people said on the Internet that the construction of the Three Gorges Reservoir caused the high temperature and drought in this area, and it is difficult to reverse.",
    "question": "If the following items are true, you can question the above points, except?",
    "answer": "A",
    "options": [
      "A.The hot and dry weather encountered in Chongqing and Sichuan this year is the worst in 50 years in terms of the scope and duration of the impact.",
      "B.Simulation studies have shown that the water range of the Three Gorges Reservoir area has an impact on climate of about 20 kilometers.",
      "C.This year, the relatively high water temperature in the western Pacific has caused the subtropical high pressure to be more northerly and more westward than in previous years.At the same time, the cold air in the north is weaker, resulting in reduced precipitation in Chongqing and Sichuan.",
      "D.From winter to spring, the snowfall on the Qinghai-Tibet Plateau is 20% less than normal, resulting in a significant plateau thermal effect and reduced water vapor output."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nquestionable = Function([statements] -> [bool])\n\n# Constraints\nquestionable(A) ::: The hot and dry weather encountered in Chongqing and Sichuan this year is the worst in 50 years in terms of the scope and duration of the impact\nquestionable(B) ::: Simulation studies have shown that the water range of the Three Gorges Reservoir area has an impact on climate of about 20 kilometers\nquestionable(C) ::: This year, the relatively high water temperature in the western Pacific has caused the subtropical high pressure to be more northerly and more westward than in previous years. At the same time, the cold air in the north is weaker, resulting in reduced precipitation in Chongqing and Sichuan\nquestionable(D) ::: From winter to spring, the snowfall on the Qinghai-Tibet Plateau is 20% less than normal, resulting in a significant plateau thermal effect and reduced water vapor output\n\n# Options\nQuestion ::: If the following items are true, you can question the above points, except?\nis_exception(Not(questionable(A))) ::: (A)\nis_exception(Not(questionable(B))) ::: (B)\nis_exception(Not(questionable(C))) ::: (C)\nis_exception(Not(questionable(D))) ::: (D)"
    ]
  },
  {
    "id": 292,
    "context": "A microorganism in Weiming Lake usually breeds above freezing.It is winter now and the lake water has frozen.Therefore, if there is indeed the kind of microorganism we studied in Weiming Lake, they will not reproduce now.",
    "question": "If the premises in the question stem are true, you can infer?",
    "answer": "B",
    "options": [
      "A.The conclusion cannot be untrue.",
      "B.It is highly likely that its conclusion is true, but it may also be false.",
      "C.The probability of its conclusion being false is high, but it may also be true.",
      "D.The conclusion cannot be true."
    ],
    "raw_logic_programs": [
      "# Declarations\nmicroorganism_exists = Bool('microorganism_exists')\nbreeds = Bool('breeds')\nfrozen = Bool('frozen')\n\n# Constraints\nfrozen == True ::: The lake water has frozen\nImplies(microorganism_exists, Not(breeds)) ::: If there is indeed the kind of microorganism we studied in Weiming Lake, they will not reproduce now\n\n# Options\nQuestion ::: If the premises in the question stem are true, you can infer?\nis_valid(Implies(microorganism_exists, Not(breeds))) ::: (A) The conclusion cannot be untrue.\nis_possible(Implies(microorganism_exists, Not(breeds))) ::: (B) It is highly likely that its conclusion is true, but it may also be false.\nis_possible(Not(Implies(microorganism_exists, Not(breeds)))) ::: (C) The probability of its conclusion being false is high, but it may also be true.\nis_valid(Not(Implies(microorganism_exists, Not(breeds)))) ::: (D) The conclusion cannot be true."
    ]
  },
  {
    "id": 293,
    "context": "The early universe contained only the lightest elements? hydrogen and helium.Heavier elements like carbon can only be formed in the star's nuclear reaction and diffuse when the star explodes.A nebula recently discovered contained carbon formed billions of years ago, when the universe was no more than 1.5 billion years old.",
    "question": "If the above statement is true, which of the following must be true?",
    "answer": "B",
    "options": [
      "A.The earliest stars contained only hydrogen.",
      "B.When the universe was less than 1.5 billion years old, some stars had already formed.",
      "C.This nebula also contains hydrogen and helium.",
      "D.The carbon in this nebula later formed part of some stars."
    ],
    "raw_logic_programs": [
      "# Declarations\nelements = EnumSort([hydrogen, helium, carbon])\nuniverse_age = Function([int] -> [bool])\nstar_formation = Function([int] -> [bool])\nnebula_contains = Function([elements] -> [bool])\n\n# Constraints\nForAll([e:elements], Or(e == hydrogen, e == helium)) ::: The early universe contained only the lightest elements: hydrogen and helium\nForAll([e:elements], Implies(e == carbon, Exists([t:int], And(t > 0, star_formation(t))))) ::: Heavier elements like carbon can only be formed in the star's nuclear reaction\nForAll([t:int], Implies(star_formation(t), Exists([t2:int], And(t2 > t, universe_age(t2))))) ::: Stars diffuse heavier elements when they explode\nExists([t:int], And(t <= 1.5, universe_age(t), nebula_contains(carbon))) ::: A nebula recently discovered contained carbon formed billions of years ago, when the universe was no more than 1.5 billion years old\n\n# Options\nQuestion ::: If the above statement is true, which of the following must be true?\nis_must_true(ForAll([t:int], Implies(universe_age(t), ForAll([e:elements], Implies(e == hydrogen, star_formation(t)))))) ::: (A)\nis_must_true(Exists([t:int], And(t < 1.5, star_formation(t)))) ::: (B)\nis_must_true(And(nebula_contains(hydrogen), nebula_contains(helium))) ::: (C)\nis_must_true(Exists([t:int], And(t > 1.5, star_formation(t), nebula_contains(carbon)))) ::: (D)"
    ]
  },
  {
    "id": 294,
    "context": "Those who are in favor of the death penalty usually give two reasons? one is that the fear of death will prevent others from committing the same terrible crime; the other is that the death penalty saves more money than its alternative form of life imprisonment.However, reliable research shows that from an economic perspective, life imprisonment is more desirable.People think that saving money from capital punishment is not true.Therefore, the death penalty should be abolished.",
    "question": "Logically, which of the following is an appropriate evaluation of the argument in the question?",
    "answer": "C",
    "options": [
      "A.The structure of this argument is acceptable because human life is more valuable than anything.",
      "B.This argument has logical power, because its reasons are true and human lives are crucial.",
      "C.The argument did not consider another important reason for the death penalty, so it is not a good argument.",
      "D.There is no need to discuss the abolition of the death penalty."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([economic_perspective, deterrence, cost_saving])\npositions = EnumSort([for_death_penalty, against_death_penalty])\nevaluation = Function([arguments, positions] -> [bool])\n\n# Constraints\nevaluation(economic_perspective, against_death_penalty) ::: Reliable research shows that from an economic perspective, life imprisonment is more desirable.\nNot(evaluation(cost_saving, for_death_penalty)) ::: People think that saving money from capital punishment is not true.\nForAll([a:arguments], Implies(evaluation(a, against_death_penalty), evaluation(a, for_death_penalty) == False)) ::: If an argument supports against the death penalty, it does not support for the death penalty.\n\n# Options\nQuestion ::: Logically, which of the following is an appropriate evaluation of the argument in the question?\nis_valid(And(evaluation(economic_perspective, against_death_penalty), evaluation(deterrence, for_death_penalty) == False)) ::: (A) The structure of this argument is acceptable because human life is more valuable than anything.\nis_valid(And(evaluation(economic_perspective, against_death_penalty), evaluation(cost_saving, for_death_penalty) == False)) ::: (B) This argument has logical power, because its reasons are true and human lives are crucial.\nis_valid(Not(evaluation(deterrence, against_death_penalty))) ::: (C) The argument did not consider another important reason for the death penalty, so it is not a good argument.\nis_valid(False) ::: (D) There is no need to discuss the abolition of the death penalty."
    ]
  },
  {
    "id": 295,
    "context": "Challenges are an important source of self-knowledge, because those who pay attention to how they respond emotionally and physically when accepting challenges can more effectively gain insight into their weaknesses.",
    "question": "Which of the following is most consistent with the principles discussed above?",
    "answer": "D",
    "options": [
      "A.A pianist at the concert should not take a completely negative view of the mistakes that occurred in the difficult performance, and understand why the mistakes occurred, so that the pianist can make better preparations for future performances.",
      "B.A salesperson should understand that the commission earned is not only a reward for the sales transaction, but also should be satisfied by the personality charm they show in the sales transaction.",
      "C.Compassion is very valuable, not only because it can bring people a good feeling, but also it can bring some opportunities to enrich the lives of others.",
      "D.Even if you are afraid to speak in public, you should accept the invitation to speak in front of the masses.People will admire your courage, and you can also get a sense of satisfaction in accomplishing things that you cannot accomplish."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([emotional_response, physical_response, self_knowledge, insight, weaknesses])\nactions = EnumSort([pay_attention, accept_challenges, gain_insight, understand_mistakes, prepare_better])\nsituations = EnumSort([performance, sales, compassion, public_speaking])\nconsistent = Function([situations, actions] -> [bool])\n\n# Constraints\nconsistent(performance, understand_mistakes) ::: A pianist should understand why mistakes occurred to prepare better for future performances\nconsistent(sales, gain_insight) ::: A salesperson should gain insight from the sales transaction\nconsistent(compassion, enrich_lives) ::: Compassion enriches the lives of others\nconsistent(public_speaking, accept_challenges) ::: Accepting the challenge of public speaking can lead to self-knowledge\n\n# Options\nQuestion ::: Which of the following is most consistent with the principles discussed above?\nis_consistent(consistent(performance, understand_mistakes)) ::: (A)\nis_consistent(consistent(sales, gain_insight)) ::: (B)\nis_consistent(consistent(compassion, enrich_lives)) ::: (C)\nis_consistent(consistent(public_speaking, accept_challenges)) ::: (D)"
    ]
  },
  {
    "id": 296,
    "context": "There are 7 candidates hired by Haier? F, G, H, I, W, X and Y.One of them needs to be assigned to the public relations department, three to the production department, and the other three to the sales department.The personnel allocation of these 7 employees must meet the following conditions? (1) H and Y must be allocated in the same department.(2) F and G cannot be allocated in the same department (3) If X is allocated in the sales department, W is allocated in the production department.(4) F must be allocated in the production department.",
    "question": "Which of the following may list the final distribution of these 7 employees?",
    "answer": "D",
    "options": [
      "A.Public Relations Department? W; Production Department? F, H, Y; Sales Department? G, I, X",
      "B.Public Relations Department? W; Production Department? G, I, X; Sales Department? F, H, Y",
      "C.Public Relations Department? X; Production Department? F, G, H; Sales Department? I, Y, W",
      "D.Public Relations Department? X; Production Department? F, I, W; Sales Department? G, H, Y"
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([F, G, H, I, W, X, Y])\ndepartments = EnumSort([public_relations, production, sales])\nassigned = Function([candidates] -> [departments])\n\n# Constraints\nCount([c:candidates], assigned(c) == public_relations) == 1 ::: One candidate is assigned to the public relations department\nCount([c:candidates], assigned(c) == production) == 3 ::: Three candidates are assigned to the production department\nCount([c:candidates], assigned(c) == sales) == 3 ::: Three candidates are assigned to the sales department\nassigned(H) == assigned(Y) ::: H and Y must be allocated in the same department\nassigned(F) != assigned(G) ::: F and G cannot be allocated in the same department\nImplies(assigned(X) == sales, assigned(W) == production) ::: If X is allocated in the sales department, W is allocated in the production department\nassigned(F) == production ::: F must be allocated in the production department\n\n# Options\nQuestion ::: Which of the following may list the final distribution of these 7 employees?\nis_valid(And(assigned(W) == public_relations, assigned(F) == production, assigned(H) == production, assigned(Y) == production, assigned(G) == sales, assigned(I) == sales, assigned(X) == sales)) ::: (A)\nis_valid(And(assigned(W) == public_relations, assigned(G) == production, assigned(I) == production, assigned(X) == production, assigned(F) == sales, assigned(H) == sales, assigned(Y) == sales)) ::: (B)\nis_valid(And(assigned(X) == public_relations, assigned(F) == production, assigned(G) == production, assigned(H) == production, assigned(I) == sales, assigned(Y) == sales, assigned(W) == sales)) ::: (C)\nis_valid(And(assigned(X) == public_relations, assigned(F) == production, assigned(I) == production, assigned(W) == production, assigned(G) == sales, assigned(H) == sales, assigned(Y) == sales)) ::: (D)"
    ]
  },
  {
    "id": 297,
    "context": "There are 7 candidates hired by Haier? F, G, H, I, W, X and Y.One of them needs to be assigned to the public relations department, three to the production department, and the other three to the sales department.The personnel allocation of these 7 employees must meet the following conditions? (1) H and Y must be allocated in the same department.(2) F and G cannot be allocated in the same department (3) If X is allocated in the sales department, W is allocated in the production department.(4) F must be allocated in the production department.",
    "question": "Which of the following lists is a complete and accurate list that cannot be assigned to the production department?",
    "answer": "C",
    "options": [
      "A.F, I, X",
      "B.G, H, Y",
      "C.I, W",
      "D.G"
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([F, G, H, I, W, X, Y])\ndepartments = EnumSort([public_relations, production, sales])\nassigned = Function([candidates] -> [departments])\n\n# Constraints\nassigned(F) == production ::: F must be allocated in the production department\nForAll([c:candidates], Or(assigned(c) == public_relations, assigned(c) == production, assigned(c) == sales)) ::: Each candidate is assigned to one of the three departments\nCount([c:candidates], assigned(c) == public_relations) == 1 ::: One candidate is assigned to the public relations department\nCount([c:candidates], assigned(c) == production) == 3 ::: Three candidates are assigned to the production department\nCount([c:candidates], assigned(c) == sales) == 3 ::: Three candidates are assigned to the sales department\nForAll([c1:candidates, c2:candidates], Implies(And(c1 != c2, assigned(c1) == assigned(c2)), Or(c1 == H, c1 == Y, c2 == H, c2 == Y))) ::: H and Y must be allocated in the same department\nNot(And(assigned(F) == assigned(G))) ::: F and G cannot be allocated in the same department\nImplies(assigned(X) == sales, assigned(W) == production) ::: If X is allocated in the sales department, W is allocated in the production department\n\n# Options\nQuestion ::: Which of the following lists is a complete and accurate list that cannot be assigned to the production department?\nis_accurate_list([assigned(I) != production, assigned(X) != production]) ::: (A)\nis_accurate_list([assigned(G) != production, assigned(H) != production, assigned(Y) != production]) ::: (B)\nis_accurate_list([assigned(I) != production, assigned(W) != production]) ::: (C)\nis_accurate_list([assigned(G) != production]) ::: (D)"
    ]
  },
  {
    "id": 298,
    "context": "There are 7 candidates hired by Haier? F, G, H, I, W, X and Y.One of them needs to be assigned to the public relations department, three to the production department, and three to the sales department.The personnel allocation of these 7 employees must meet the following conditions? (1) H and Y must be allocated in the same department.(2) F and G cannot be allocated in the same department (3) If X is allocated in the sales department, W is allocated in the production department.(4) F must be allocated in the production department.",
    "question": "If which of the following statements is true, can the distribution of 7 employees be completely determined?",
    "answer": "C",
    "options": [
      "A.F and W are assigned to the production department.",
      "B.G and Y are assigned to the sales department.",
      "C.I and W are assigned to the sales department.",
      "D.I and W are assigned to the production department."
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([F, G, H, I, W, X, Y])\ndepartments = EnumSort([public_relations, production, sales])\nassigned = Function([candidates] -> [departments])\n\n# Constraints\nassigned(H) == assigned(Y) ::: H and Y must be allocated in the same department\nassigned(F) != assigned(G) ::: F and G cannot be allocated in the same department\nImplies(assigned(X) == sales, assigned(W) == production) ::: If X is allocated in the sales department, W is allocated in the production department\nassigned(F) == production ::: F must be allocated in the production department\n\n# Options\nQuestion ::: If which of the following statements is true, can the distribution of 7 employees be completely determined?\nis_determined(And(assigned(F) == production, assigned(W) == production)) ::: (A)\nis_determined(And(assigned(G) == sales, assigned(Y) == sales)) ::: (B)\nis_determined(And(assigned(I) == sales, assigned(W) == sales)) ::: (C)\nis_determined(And(assigned(I) == production, assigned(W) == production)) ::: (D)"
    ]
  },
  {
    "id": 299,
    "context": "There are 7 candidates hired by Haier? F, G, H, I, W, X and Y.One of them needs to be assigned to the public relations department, three to the production department, and three to the sales department.The personnel allocation of these 7 employees must meet the following conditions? (1) H and Y must be allocated in the same department.(2) F and G cannot be allocated in the same department (3) If X is allocated in the sales department, W is allocated in the production department.(4) F must be allocated in the production department.",
    "question": "Which of the following pairs of employees is unlikely to be assigned to the sales department?",
    "answer": "B",
    "options": [
      "A.G and I",
      "B.G and X",
      "C.G and Y",
      "D.H and W"
    ],
    "raw_logic_programs": [
      "# Declarations\ncandidates = EnumSort([F, G, H, I, W, X, Y])\ndepartments = EnumSort([public_relations, production, sales])\nassigned = Function([candidates] -> [departments])\n\n# Constraints\nCount([c:candidates], assigned(c) == public_relations) == 1 ::: One candidate is assigned to the public relations department\nCount([c:candidates], assigned(c) == production) == 3 ::: Three candidates are assigned to the production department\nCount([c:candidates], assigned(c) == sales) == 3 ::: Three candidates are assigned to the sales department\nassigned(H) == assigned(Y) ::: H and Y must be allocated in the same department\nassigned(F) != assigned(G) ::: F and G cannot be allocated in the same department\nImplies(assigned(X) == sales, assigned(W) == production) ::: If X is allocated in the sales department, W is allocated in the production department\nassigned(F) == production ::: F must be allocated in the production department\n\n# Options\nQuestion ::: Which of the following pairs of employees is unlikely to be assigned to the sales department?\nis_unsat(And(assigned(G) == sales, assigned(I) == sales)) ::: (A)\nis_unsat(And(assigned(G) == sales, assigned(X) == sales)) ::: (B)\nis_unsat(And(assigned(G) == sales, assigned(Y) == sales)) ::: (C)\nis_unsat(And(assigned(H) == sales, assigned(W) == sales)) ::: (D)"
    ]
  },
  {
    "id": 300,
    "context": "There are 7 candidates hired by Haier? F, G, H, I, W, X and Y.One of them needs to be assigned to the public relations department, three to the production department, and three to the sales department.The personnel allocation of these 7 employees must meet the following conditions? (1) H and Y must be allocated in the same department.(2) F and G cannot be allocated in the same department (3) If X is allocated in the sales department, W is allocated in the production department.(4) F must be allocated in the production department.",
    "question": "If X and F are assigned to the same department, which of the following statements cannot be true?",
    "answer": "B",
    "options": [
      "A.G is assigned to the sales department",
      "B.H is assigned to the production department.",
      "C.I was assigned to the sales department.",
      "D.W is assigned to the public relations department."
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\ncandidates = EnumSort([F, G, H, I, W, X, Y])\ndepartments = EnumSort([public_relations, production, sales])\nassigned = Function([candidates] -> [departments])\n\n# Constraints\nCount([c:candidates], assigned(c) == public_relations) == 1 ::: One candidate is assigned to the public relations department\nCount([c:candidates], assigned(c) == production) == 3 ::: Three candidates are assigned to the production department\nCount([c:candidates], assigned(c) == sales) == 3 ::: Three candidates are assigned to the sales department\nassigned(H) == assigned(Y) ::: H and Y must be allocated in the same department\nassigned(F) != assigned(G) ::: F and G cannot be allocated in the same department\nImplies(assigned(X) == sales, assigned(W) == production) ::: If X is allocated in the sales department, W is allocated in the production department\nassigned(F) == production ::: F must be allocated in the production department\n\n# Options\nQuestion ::: If X and F are assigned to the same department, which of the following statements cannot be true?\nis_unsat(assigned(G) == sales) ::: (A) G is assigned to the sales department\nis_unsat(assigned(H) == production) ::: (B) H is assigned to the production department\nis_unsat(assigned(I) == sales) ::: (C) I was assigned to the sales department\nis_unsat(assigned(W) == public_relations) ::: (D) W is assigned to the public relations department\n```"
    ]
  },
  {
    "id": 301,
    "context": "Philosopher? 'I think, so I exist.If I don't exist, then I don't think.If I think, then life means nothing.",
    "question": "If we add' life does not mean emptiness 'to the above argument, what other conclusion can this philosopher draw?",
    "answer": "D",
    "options": [
      "A.I exist",
      "B.I don't exist",
      "C.I think",
      "D.I don't think"
    ],
    "raw_logic_programs": [
      "# Declarations\nexistence = EnumSort([exist, not_exist])\nthought = EnumSort([think, not_think])\nlife_meaning = EnumSort([means_nothing, not_means_nothing, not_means_emptiness])\nconclusion = Function([existence, thought, life_meaning] -> [bool])\n\n# Constraints\nImplies(thought == think, existence == exist) ::: 'I think, so I exist.'\nImplies(existence == not_exist, thought == not_think) ::: 'If I don't exist, then I don't think.'\nImplies(thought == think, life_meaning == means_nothing) ::: 'If I think, then life means nothing.'\n\n# Additional Premise\nlife_meaning == not_means_emptiness ::: 'life does not mean emptiness'\n\n# Options\nQuestion ::: If we add 'life does not mean emptiness' to the above argument, what other conclusion can this philosopher draw?\nis_valid(conclusion(exist, think, not_means_emptiness)) ::: (A) I exist\nis_valid(conclusion(not_exist, not_think, not_means_emptiness)) ::: (B) I don't exist\nis_valid(conclusion(exist, think, not_means_emptiness)) ::: (C) I think\nis_valid(conclusion(not_exist, not_think, not_means_emptiness)) ::: (D) I don't think"
    ]
  },
  {
    "id": 302,
    "context": "Reporter? 'You are one of the most popular speakers in CCTV's' 100 Forums '.People call you a master of Chinese studies and an academic superboy.Which of these two names do you prefer? The master is not an academic superboy, just a cultural communicator.'",
    "question": "In answering the reporter's question, the professor used the strategy expressed in which of the following statements?",
    "answer": "B",
    "options": [
      "A.Split a multiple question into a single question and answer them separately.",
      "B.Get rid of the dilemma and choose another appropriate answer.",
      "C.Avoid answering questions by restating the assumptions of the question.",
      "D.Answer unanswered questions by answering another interesting question."
    ],
    "raw_logic_programs": [
      "# Declarations\nquestions = EnumSort([multiple_question, single_question, dilemma, assumptions, unanswered])\nstrategies = EnumSort([split_and_answer, choose_another, restate_assumptions, answer_another])\n\n# Constraints\nForAll([q:questions], Exists([s:strategies], True)) ::: Each question can be addressed by a strategy\n\n# Options\nQuestion ::: In answering the reporter's question, the professor used the strategy expressed in which of the following statements?\nis_strategy_used(choose_another) ::: (B) Get rid of the dilemma and choose another appropriate answer."
    ]
  },
  {
    "id": 303,
    "context": "The City Women's Federation conducted a questionnaire survey on 8,100 children aged 9 to 12 in the city.Statistics show that 75% of children are 'willing to write homework', and only 12% think that 'writing homework occupies a lot of playing time'.Regarding these 'good kids' answers, one parent's opinion is? either the children did not tell the truth, or their playful nature has been distorted.",
    "question": "Which of the following statements is the hypothesis on which this parent 's inference relies?",
    "answer": "D",
    "options": [
      "A.If the children can tell the truth, not so many children will express 'willing to write homework', and very few children think that 'writing homework squeezes out the time of playing.'",
      "B.Under the education of school and family, the children have recognized the psychological orientation of 'good students, good children', and they are not used to revealing their true ideas.",
      "C.Excessive learning pressure makes the children immersed in study all day, gradually getting used to the lack of entertainment life, thus losing the nature of playing.",
      "D.Compared with writing homework, children who love to play by nature prefer to play, and writing homework will definitely reduce their playing time."
    ],
    "raw_logic_programs": [
      "# Declarations\nchildren = EnumSort([truthful, distorted])\nopinions = EnumSort([willing_to_write, occupies_play_time])\nparent_opinion = Function([children] -> [bool])\n\n# Constraints\nForAll([c:children], Or(parent_opinion(c) == truthful, parent_opinion(c) == distorted)) ::: either the children did not tell the truth, or their playful nature has been distorted\n\n# Options\nQuestion ::: Which of the following statements is the hypothesis on which this parent's inference relies?\nis_hypothesis(Implies(parent_opinion(truthful), Not(And(willing_to_write, Not(occupies_play_time))))) ::: (A)\nis_hypothesis(Implies(parent_opinion(truthful), Not(And(willing_to_write, Not(occupies_play_time))))) ::: (B)\nis_hypothesis(Implies(parent_opinion(distorted), Not(And(willing_to_write, Not(occupies_play_time))))) ::: (C)\nis_hypothesis(Implies(parent_opinion(distorted), Not(And(willing_to_write, Not(occupies_play_time))))) ::: (D)"
    ]
  },
  {
    "id": 304,
    "context": "It is no longer new for college students to take vacation as a nanny.A survey showed that 63% of the respondents favored college students as nanny, but when asked if they would ask college students to be nanny, nearly 60% said 'no'.",
    "question": "Which of the following statements, if true, can reasonably explain the seemingly contradictory phenomenon?",
    "answer": "C",
    "options": [
      "A.Among those who choose to 'will invite college students to be nanny', 75% intend to let college students work as tutors or secretaries, and only 25% want college students to do housework.",
      "B.62% of the people in the survey indicated that they were only willing to pay a monthly salary of 800 yuan to 1,000 yuan for the college nanny.",
      "C.Among those who favor college students as nanny, 69% think that doing housekeeping work is good for college students themselves, and only 31% think that college students nanny can provide better housekeeping services.",
      "D.Among those who do not approve of college students being nanny, 40% believe that students should choose a field related to their major in practice."
    ],
    "raw_logic_programs": [
      "# Declarations\nrespondents = EnumSort([favor, not_favor])\nactions = EnumSort([invite, not_invite])\nreasons = EnumSort([tutor_secretary, housework, low_salary, self_benefit, service_quality, major_related])\nsurvey = Function([respondents, actions] -> [int])\nexplanation = Function([actions, reasons] -> [int])\n\n# Constraints\nsurvey(favor, invite) == 0.63 * 0.4 ::: 63% favor college students as nanny, but only 40% of those favoring would invite them\nsurvey(favor, not_invite) == 0.63 * 0.6 ::: 63% favor college students as nanny, but 60% of those favoring would not invite them\nsurvey(not_favor, not_invite) == 0.37 * 1 ::: 37% do not favor college students as nanny, and all of them would not invite\n\n# Options\nQuestion ::: Which of the following statements, if true, can reasonably explain the seemingly contradictory phenomenon?\nexplanation(invite, tutor_secretary) == 0.75 ::: (A) Among those who choose to 'will invite college students to be nanny', 75% intend to let college students work as tutors or secretaries, and only 25% want college students to do housework.\nexplanation(not_invite, low_salary) == 0.62 ::: (B) 62% of the people in the survey indicated that they were only willing to pay a monthly salary of 800 yuan to 1,000 yuan for the college nanny.\nexplanation(favor, self_benefit) == 0.69 ::: (C) Among those who favor college students as nanny, 69% think that doing housekeeping work is good for college students themselves, and only 31% think that college students nanny can provide better housekeeping services.\nexplanation(not_favor, major_related) == 0.4 ::: (D) Among those who do not approve of college students being nanny, 40% believe that students should choose a field related to their major in practice."
    ]
  },
  {
    "id": 305,
    "context": "In order to alleviate the shortage of oil, China began industrializing the technology of converting corn into fuel ethanol five years ago, commonly known as 'grain to oil', and has now become a relatively mature industry.From 2004 to 2006, China's grain harvest has been three consecutive years.This year, international oil prices have reached a new high, but the National Development and Reform Commission has notified the project to stop the production of fuel ethanol from grain.",
    "question": "Which of the following statements, if true, can best explain the seemingly contradictory phenomenon?",
    "answer": "C",
    "options": [
      "A.The 'grain to oil' project five years ago was an initiative to digest aged grain.",
      "B.The 'grain to oil' project will affect China's food security, which is more important than alleviating oil shortages.",
      "C.China has developed key technologies for producing fuel ethanol from straw.",
      "D.In China's corn planting areas, new ethanol plants have started to compete with feed manufacturers for raw materials in recent years."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ncontradiction = Function([statements] -> [bool])\n\n# Constraints\n# The problem describes a situation where China has developed a mature industry for converting grain to oil, yet the project is stopped despite high oil prices. The constraints should capture the reasons that could explain this contradiction.\n\n# Options\nQuestion ::: Which of the following statements, if true, can best explain the seemingly contradictory phenomenon?\nis_explanation(contradiction(A)) ::: (A) The 'grain to oil' project five years ago was an initiative to digest aged grain.\nis_explanation(contradiction(B)) ::: (B) The 'grain to oil' project will affect China's food security, which is more important than alleviating oil shortages.\nis_explanation(contradiction(C)) ::: (C) China has developed key technologies for producing fuel ethanol from straw.\nis_explanation(contradiction(D)) ::: (D) In China's corn planting areas, new ethanol plants have started to compete with feed manufacturers for raw materials in recent years."
    ]
  },
  {
    "id": 306,
    "context": "Critics? Officials prohibit fireworks in the city on the grounds of firecrackers hurting people and causing fires, instead of trying to guide them to seek benefits and avoid harm, which implies conscious or unconscious cultural discrimination.Every year, smoking causes more diseases or fires than there are injuries caused by fireworks.Why can't you help? The ban on fireworks not only implies cultural discrimination, but also wipes out the last festive atmosphere of the Spring Festival.",
    "question": "Which of the following statements is the hypothesis on which this critic 's conclusion relies?",
    "answer": "A",
    "options": [
      "A.Customs such as sticking couplets, offering ancestors, and welcoming the gods of wealth, etc., which have added a festive atmosphere, have disappeared during the Spring Festival in the city.",
      "B.Traditional festivals such as eating dumplings and giving out New Year's money are still flourishing during the Spring Festival in the city.",
      "C.Purely rational crowds such as 'Ideal Country' and 'The Matrix' do not need to have a romantic holiday.",
      "D.Traditional Chinese festivals such as the Dragon Boat Festival, Mid-Autumn Festival, Chongyang, etc.are not officially official festivals."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrelies_on = Function([statements] -> [bool])\n\n# Constraints\n# The critic's conclusion is that the ban on fireworks implies cultural discrimination and removes the festive atmosphere of the Spring Festival.\n# The hypothesis should support this conclusion.\n\n# Options\nQuestion ::: Which of the following statements is the hypothesis on which this critic's conclusion relies?\nrelies_on(A) ::: (A) Customs such as sticking couplets, offering ancestors, and welcoming the gods of wealth, etc., which have added a festive atmosphere, have disappeared during the Spring Festival in the city.\nrelies_on(B) ::: (B) Traditional festivals such as eating dumplings and giving out New Year's money are still flourishing during the Spring Festival in the city.\nrelies_on(C) ::: (C) Purely rational crowds such as 'Ideal Country' and 'The Matrix' do not need to have a romantic holiday.\nrelies_on(D) ::: (D) Traditional Chinese festivals such as the Dragon Boat Festival, Mid-Autumn Festival, Chongyang, etc. are not officially official festivals."
    ]
  },
  {
    "id": 307,
    "context": "Economist? Recently, Comrade W's report suggested that the pre-sale system of housing should be changed to the sale of existing homes, which caused a heated debate.Some people think that China's housing pre-sale system should be abolished long ago, while others say that abolishing this system will push up housing prices.I basically agree with the former.As for the latter, it is a ridiculous point of view.If the abolition of the pre-sale system of housing will push up housing prices, then this system will not need to be cancelled by the government, and real estate developers will do everything possible to circumvent the system.",
    "question": "Which of the following demonstration techniques is used in the above argument?",
    "answer": "D",
    "options": [
      "A.By demonstrating the lack of factual support for a point of view, it is demonstrated that this point of view cannot be established.",
      "B.Demonstrate that a viewpoint violates a general principle by demonstrating that it is wrong.",
      "C.Demonstrate that this point of view is false by indicating that it contradicts another statement that has been determined to be true.",
      "D.Demonstrate that this view is false by indicating that accepting it as true will lead to incredible results."
    ],
    "raw_logic_programs": [
      "# Declarations\nviewpoints = EnumSort([abolish_pre_sale, push_up_prices])\ndemonstration_techniques = EnumSort([lack_of_factual_support, violates_general_principle, contradicts_true_statement, leads_to_incredible_results])\nsupports = Function([viewpoints] -> [bool])\ncontradicts = Function([viewpoints, viewpoints] -> [bool])\nleads_to = Function([viewpoints, viewpoints] -> [bool])\n\n# Constraints\nsupports(abolish_pre_sale) ::: I basically agree with the former\nNot(supports(push_up_prices)) ::: As for the latter, it is a ridiculous point of view\nleads_to(push_up_prices, abolish_pre_sale) ::: If the abolition of the pre-sale system of housing will push up housing prices, then this system will not need to be cancelled by the government\n\n# Options\nQuestion ::: Which of the following demonstration techniques is used in the above argument?\nis_used(demonstration_techniques.leads_to_incredible_results) ::: (A)\nis_used(demonstration_techniques.violates_general_principle) ::: (B)\nis_used(demonstration_techniques.contradicts_true_statement) ::: (C)\nis_used(demonstration_techniques.leads_to_incredible_results) ::: (D)"
    ]
  },
  {
    "id": 308,
    "context": "Silent Spring' written by American science writer Rachel Carson is hailed as the pioneering work of the Western modern environmental protection movement.This book takes DDT as the main case and draws the conclusion that chemicals have serious harm to human health and the global environment.The publication of this book triggered a national debate in Western countries.",
    "question": "If the following statements are true, they can weaken Rachel.Carson's conclusion, except",
    "answer": "C",
    "options": [
      "A.Not only can DDT kill mosquitoes that spread malaria, but it is not as harmful to the environment.",
      "B.After DDT was stopped in some parts of Africa, malaria came back.",
      "C.The use of alternatives to DDT in developed countries is also harmful to the environment...",
      "D.The Tianjin chemical plant produced 1,000 tons of DDT last year, and most of it is exported to Africa to help local residents fight malaria."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\neffects = EnumSort([weaken, not_weaken])\nevaluates = Function([statements] -> [effects])\n\n# Constraints\nForAll([s:statements], Or(evaluates(s) == weaken, evaluates(s) == not_weaken)) ::: Each statement either weakens or does not weaken Rachel Carson's conclusion\n\n# Options\nQuestion ::: If the following statements are true, they can weaken Rachel Carson's conclusion, except\nis_exception(evaluates(A) == not_weaken) ::: (A)\nis_exception(evaluates(B) == not_weaken) ::: (B)\nis_exception(evaluates(C) == not_weaken) ::: (C)\nis_exception(evaluates(D) == not_weaken) ::: (D)"
    ]
  },
  {
    "id": 309,
    "context": "Both 'Le Ji' and 'Xi Ci' have sentences such as 'Tian Zun Di Bian', 'Fang Yi clusters, things separated by groups'.'Ji' appears to be barely blunt and protracted, so it must be that 'Le Ji' followed or quoted the text of 'Xie Ci'.",
    "question": "Which of the following statements, if true, can weaken the conclusion of the above argument most effectively? '",
    "answer": "D",
    "options": [
      "A.'Tianzundibei' was used as an idiom in 'Shangshu', which is older than 'Xianci'.",
      "B.'Family of Speech' focuses on the difference between heaven and earth in terms of etiquette, while 'Le Ji' focuses on the sum of heaven and earth in terms of music.,",
      "C.The formation of classic works usually goes through a long process from immaturity to maturity.",
      "D.Both 'Le Ji' and 'Xie Ci' are classic works of Confucianism, and the date of completion has not yet been determined."
    ],
    "raw_logic_programs": [
      "# Declarations\ntexts = EnumSort(['Le Ji', 'Xi Ci'])\nphrases = EnumSort(['Tian Zun Di Bian', 'Fang Yi clusters, things separated by groups'])\nappears_in = Function([texts, phrases] -> [bool])\nfollows_or_quotes = Function([texts, texts] -> [bool])\n\n# Constraints\nAnd(appears_in('Le Ji', 'Tian Zun Di Bian'), appears_in('Xi Ci', 'Tian Zun Di Bian')) ::: Both 'Le Ji' and 'Xi Ci' have sentences such as 'Tian Zun Di Bian'\nAnd(appears_in('Le Ji', 'Fang Yi clusters, things separated by groups'), appears_in('Xi Ci', 'Fang Yi clusters, things separated by groups')) ::: Both 'Le Ji' and 'Xi Ci' have sentences such as 'Fang Yi clusters, things separated by groups'\nfollows_or_quotes('Le Ji', 'Xi Ci') ::: 'Ji' appears to be barely blunt and protracted, so it must be that 'Le Ji' followed or quoted the text of 'Xie Ci'\n\n# Options\nQuestion ::: Which of the following statements, if true, can weaken the conclusion of the above argument most effectively?\nis_weakened(appears_in('Shangshu', 'Tian Zun Di Bian') && 'Shangshu' < 'Xi Ci') ::: (A) 'Tianzundibei' was used as an idiom in 'Shangshu', which is older than 'Xianci'.\nis_weakened(different_focus('Family of Speech', 'Le Ji')) ::: (B) 'Family of Speech' focuses on the difference between heaven and earth in terms of etiquette, while 'Le Ji' focuses on the sum of heaven and earth in terms of music.\nis_weakened(long_process('classic works')) ::: (C) The formation of classic works usually goes through a long process from immaturity to maturity.\nis_weakened(undetermined_dates('Le Ji', 'Xie Ci')) ::: (D) Both 'Le Ji' and 'Xie Ci' are classic works of Confucianism, and the date of completion has not yet been determined."
    ]
  },
  {
    "id": 310,
    "context": "In today's economic globalization, Western cultural classics and traditions are still alive and continuing.In the United States, the President takes the oath of office under the Bible, and elementary school students recite the oath of 'a country under the protection of God' by pressing the chest every week.In China, elementary school students have long ceased reading the Bible, and no one has sworn in according to the Analects.China has become a country that has almost lost its cultural classics and traditions.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "C",
    "options": [
      "A.With the rapid advancement of science and technology, Western cultural classics and traditions are declining.",
      "B.Officials in Chinese history have never handed down the tradition of swearing on a classic.",
      "C.Primary school reading is a symbol of a country and nation maintaining cultural classics and traditions.",
      "D.The cultural classics and traditions of a country and nation have an irreplaceable role in science."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nassumption = Function([statements] -> [bool])\n\n# Constraints\n# The argument suggests that the presence or absence of certain cultural practices (like swearing on a classic or reading certain texts) is indicative of the maintenance or loss of cultural classics and traditions.\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(assumption(A)) ::: (A)\nis_assumption(assumption(B)) ::: (B)\nis_assumption(assumption(C)) ::: (C)\nis_assumption(assumption(D)) ::: (D)"
    ]
  },
  {
    "id": 311,
    "context": "Five former Chinese workers who were caught in Japan during the Japanese invasion of China sued a Japanese company for damages.In its final judgment in 2007, the Supreme Court of Japan claimed that, according to the 'Sino-Japanese Joint Statement,' the Chinese people's right to individual claims had been waived, and therefore the Chinese laborers' claims were rejected.The 'Sino-Japanese Joint Statement' signed in 1972 was written like this? 'The government of the People's Republic of China announced that it would abandon its war compensation claims against the Japanese for the friendship of the Chinese and Japanese people.'",
    "question": "Which of the following is the same as the method of argument of the Japanese Supreme Court?",
    "answer": "B",
    "options": [
      "A.Wang Ying can speak English, and Wang Ying is Chinese, so Chinese can speak English.",
      "B.The Ministry of Education stipulates that colleges and universities are not allowed to engage in stock investment, so Professor Zhang of Peking University cannot buy stocks.",
      "C.The Chinese Olympic Committee is a member of the International Olympic Committee, and Mr.Y is a member of the Chinese Olympic Committee.Therefore, Mr.Y is a member of the International Olympic Committee.",
      "D.Our school games are the sports games of the whole school, and the Olympic Games are the sports games all over the world; students of our school must participate in the opening ceremony of the Universiade.Therefore, people all over the world must participate in the opening ceremony of the Olympic Games."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([Chinese_people, Japanese_company, Supreme_Court, Sino_Japanese_Statement])\nactions = EnumSort([sued, claimed, announced, waived, rejected])\nsubjects = EnumSort([individual_claims, war_compensation_claims, friendship])\nstatements = Function([entities, actions, subjects] -> [bool])\n\n# Constraints\nstatements(Chinese_people, sued, Japanese_company) ::: Five former Chinese workers sued a Japanese company for damages\nstatements(Supreme_Court, claimed, individual_claims) ::: Supreme Court claimed that individual claims had been waived\nstatements(Sino_Japanese_Statement, announced, war_compensation_claims) ::: Sino-Japanese Joint Statement announced abandonment of war compensation claims\nstatements(Supreme_Court, rejected, individual_claims) ::: Supreme Court rejected the Chinese laborers' claims\n\n# Options\nQuestion ::: Which of the following is the same as the method of argument of the Japanese Supreme Court?\nis_same_method(Implies(And(statements(Wang_Ying, can_speak, English), statements(Wang_Ying, is, Chinese)), statements(Chinese, can_speak, English))) ::: (A)\nis_same_method(Implies(statements(Ministry_of_Education, stipulates, not_allowed_investment), statements(Professor_Zhang, cannot_buy, stocks))) ::: (B)\nis_same_method(Implies(And(statements(Chinese_Olympic_Committee, is_member, International_Olympic_Committee), statements(Mr_Y, is_member, Chinese_Olympic_Committee)), statements(Mr_Y, is_member, International_Olympic_Committee))) ::: (C)\nis_same_method(Implies(And(statements(School_games, are, sports_games_of_school), statements(Olympic_Games, are, sports_games_of_world), statements(students, must_participate, Universiade_opening)), statements(people, must_participate, Olympic_opening))) ::: (D)"
    ]
  },
  {
    "id": 312,
    "context": "The problem faced by a developing country is that to maintain its economic development, it must constantly strengthen the competitiveness of domestic enterprises; to maintain social stability, it must constantly establish and improve social security systems such as pensions, medical care, and unemployment.To establish and improve the social security system, enterprises need to pay a certain percentage of social insurance premiums for employees every year.If an enterprise pays such a proportion of social insurance premiums for employees every year, it will reduce the competitiveness of the enterprise.",
    "question": "Which of the following conclusions can be derived from the above statement?",
    "answer": "C",
    "options": [
      "A.This country can either maintain its economic development or maintain its social stability.",
      "B.If we reduce the proportion of companies paying social insurance premiums for employees each year, we can maintain the competitiveness of the company.",
      "C.This country cannot maintain its economic development or maintain its social stability.",
      "D.The economic development of this country will be affected to a certain extent."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountry = EnumSort([developing_country])\nfactors = EnumSort([economic_development, social_stability, competitiveness, social_security])\nactions = EnumSort([strengthen_competitiveness, establish_social_security])\neffects = Function([actions, factors] -> [bool])\n\n# Constraints\neffects(strengthen_competitiveness, economic_development) == True ::: To maintain its economic development, it must constantly strengthen the competitiveness of domestic enterprises\neffects(establish_social_security, social_stability) == True ::: To maintain social stability, it must constantly establish and improve social security systems\neffects(establish_social_security, competitiveness) == False ::: If an enterprise pays such a proportion of social insurance premiums for employees every year, it will reduce the competitiveness of the enterprise\n\n# Options\nQuestion ::: Which of the following conclusions can be derived from the above statement?\nis_derived(Or(Not(effects(strengthen_competitiveness, economic_development)), Not(effects(establish_social_security, social_stability)))) ::: (A)\nis_derived(Implies(Not(effects(establish_social_security, competitiveness)), effects(strengthen_competitiveness, competitiveness))) ::: (B)\nis_derived(And(Not(effects(strengthen_competitiveness, economic_development)), Not(effects(establish_social_security, social_stability)))) ::: (C)\nis_derived(Not(effects(strengthen_competitiveness, economic_development))) ::: (D)"
    ]
  },
  {
    "id": 313,
    "context": "A statistical survey of plastic surgery centers in a hospital in Nanjing shows that for children who choose to perform double eyelid, nose pad and other plastic surgery, the absolute support of up to 85% of parents, after the children do ideological work and agree to the child At 10%, parents 'total support for children 's plastic surgery reached 95%, nearly double the support rate of 50% two years ago.",
    "question": "Which of the following statements is most suitable as a conclusion derived from the above discussion?",
    "answer": "B",
    "options": [
      "A.95% of the children who had plastic surgery had their parents' consent.",
      "B.No more than 5% of parents strongly disagree with their children for plastic surgery.",
      "C.10% of the children who had plastic surgery did ideological work for their parents.",
      "D.95% of parents support their children to have plastic surgery."
    ],
    "raw_logic_programs": [
      "# Declarations\npercentages = EnumSort([0, 10, 50, 85, 95, 100])\nsupport = Function([percentages] -> [bool])\n\n# Constraints\nsupport(85) ::: 85% of parents provide absolute support\nsupport(10) ::: 10% of children do ideological work and gain agreement\nsupport(95) ::: Total support reaches 95%\n\n# Options\nQuestion ::: Which of the following statements is most suitable as a conclusion derived from the above discussion?\nis_conclusion(support(95)) ::: (A) 95% of the children who had plastic surgery had their parents' consent.\nis_conclusion(Not(support(5))) ::: (B) No more than 5% of parents strongly disagree with their children for plastic surgery.\nis_conclusion(support(10)) ::: (C) 10% of the children who had plastic surgery did ideological work for their parents.\nis_conclusion(support(95)) ::: (D) 95% of parents support their children to have plastic surgery."
    ]
  },
  {
    "id": 314,
    "context": "All of Zhang Wei 's extracurricular assignments are excellent.If her semester papers are also excellent, she can pass the exam even if she does not make a class report.Unfortunately, her semester dissertation did not get an excellent grade, so she had to give a lecture in order to pass the exam.",
    "question": "The reasoning in the above argument is flawed because the argument",
    "answer": "D",
    "options": [
      "A.Ignore this possibility? if Zhang Wei had to give a class report, then her semester papers would not get an excellent result.",
      "B.This possibility was not taken into account? some students had excellent semester thesis but failed the exam.",
      "C.Ignore this possibility? Zhang Wei's semester papers must be excellent, otherwise a class report will be required.",
      "D.Relying on unconfirmed assumptions? If Zhang Wei's semester papers are not excellent, she will fail the exam without giving a lecture."
    ],
    "raw_logic_programs": [
      "# Declarations\nassignments = EnumSort([extracurricular, semester_papers, class_report])\ngrades = EnumSort([excellent, not_excellent])\noutcome = EnumSort([pass, fail])\nZhang_Wei = Function([assignments] -> [grades])\nexam_result = Function([] -> [outcome])\n\n# Constraints\nZhang_Wei(extracurricular) == excellent ::: All of Zhang Wei's extracurricular assignments are excellent\nImplies(And(Zhang_Wei(semester_papers) == excellent, Zhang_Wei(class_report) != excellent), exam_result() == pass) ::: If her semester papers are also excellent, she can pass the exam even if she does not make a class report\nZhang_Wei(semester_papers) != excellent ::: Her semester dissertation did not get an excellent grade\nZhang_Wei(class_report) == excellent ::: She had to give a lecture in order to pass the exam\n\n# Options\nQuestion ::: The reasoning in the above argument is flawed because the argument\nis_flawed(Implies(Zhang_Wei(class_report) == excellent, Zhang_Wei(semester_papers) != excellent)) ::: (A)\nis_flawed(Exists([s:students], And(s != Zhang_Wei, Zhang_Wei(semester_papers) == excellent, exam_result() == fail))) ::: (B)\nis_flawed(Implies(Zhang_Wei(semester_papers) != excellent, Zhang_Wei(class_report) == excellent)) ::: (C)\nis_flawed(Implies(Zhang_Wei(semester_papers) != excellent, exam_result() == fail)) ::: (D)"
    ]
  },
  {
    "id": 315,
    "context": "In June of this year, the water level of Dongting Lake rose rapidly, submerging large areas of lakes and beaches.About 2 billion voles inhabited the farmland near people, causing Yueyang and Yiyang along the shore of Dongting Lake to experience more than 20 years.The most devastating rat disaster.Expert analysis said that the ecological environment of Dongting Lake has been damaged, and the rat disaster sounded the alarm.",
    "question": "If the following options are true, they can support the expert's point of view, except-",
    "answer": "B",
    "options": [
      "A.After a large number of snakes and owls were killed, the ecological balance mechanism that inhibited the over-breeding of mice has failed.",
      "B.Human activities such as 'enclosing lakes to make fields', 'building embankments and destroying snails' have cut the waters of Dongting Lake.",
      "C.Every year when the water level of Dongting Lake rises during the flood season, many mice can always be drowned.However, there was a drought last year and the water level did not rise much during the flood season.",
      "D.Large-scale drainage and planting of poplar trees on Tan Chau turned the wetland of Dongting into a woodland where mice could survive."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([snakes_owls_killed, human_activities, flood_season, drainage_planting])\nsupports_expert = Function([events] -> [bool])\n\n# Constraints\nsupports_expert(snakes_owls_killed) ::: After a large number of snakes and owls were killed, the ecological balance mechanism that inhibited the over-breeding of mice has failed.\nsupports_expert(human_activities) ::: Human activities such as 'enclosing lakes to make fields', 'building embankments and destroying snails' have cut the waters of Dongting Lake.\nsupports_expert(flood_season) ::: Every year when the water level of Dongting Lake rises during the flood season, many mice can always be drowned. However, there was a drought last year and the water level did not rise much during the flood season.\nsupports_expert(drainage_planting) ::: Large-scale drainage and planting of poplar trees on Tan Chau turned the wetland of Dongting into a woodland where mice could survive.\n\n# Options\nQuestion ::: If the following options are true, they can support the expert's point of view, except-\nis_exception(supports_expert(snakes_owls_killed)) ::: (A)\nis_exception(supports_expert(human_activities)) ::: (B)\nis_exception(supports_expert(flood_season)) ::: (C)\nis_exception(supports_expert(drainage_planting)) ::: (D)"
    ]
  },
  {
    "id": 316,
    "context": "A new medical technology can only be used clinically if its efficacy and safety are truly reliable.In 1998, American scientists successfully made human embryonic stem cells grow and proliferate in vitro.If this stem cell technology is combined with cloning technology, it will be able to cultivate the desired tissue cells from the patient's body cells to replace the patient's damaged cells.Treating various difficult diseases, this is called 'therapeutic cloning'.But now 'therapeutic cloning' is still a long way from clinical use.",
    "question": "Which of the following will be the strongest support for the above conclusion if it is true?",
    "answer": "D",
    "options": [
      "A.Because 'therapeutic cloning' involves the problem of destroying human early embryos, it has caused strong opposition from the Roman Church and the governments of the United States, France, and Germany.",
      "B.So far, the acquisition of human embryonic stem cells has been quite difficult.",
      "C.South Korean scholar Huang Yuxi promised to repair stem cells for a child paralyzed by a car accident, but all his research on stem cells is counterfeit.",
      "D.Scientists are still far from clearing the mechanism of directional differentiation of human embryonic stem cells into various cells and how to prevent it from turning into cancer cells."
    ],
    "raw_logic_programs": [
      "# Declarations\ntechnologies = EnumSort([efficacy, safety, stem_cell, cloning, therapeutic_cloning])\nconditions = EnumSort([reliable, clinical_use, opposition, difficulty, counterfeit, mechanism])\nsupports = Function([technologies, conditions] -> [bool])\n\n# Constraints\nsupports(therapeutic_cloning, clinical_use) == False ::: 'therapeutic cloning' is still a long way from clinical use\n\n# Options\nQuestion ::: Which of the following will be the strongest support for the above conclusion if it is true?\nis_strongest_support(supports(therapeutic_cloning, opposition)) ::: (A)\nis_strongest_support(supports(stem_cell, difficulty)) ::: (B)\nis_strongest_support(supports(stem_cell, counterfeit)) ::: (C)\nis_strongest_support(supports(stem_cell, mechanism)) ::: (D)"
    ]
  },
  {
    "id": 317,
    "context": "Mr.Gu Jiegang believed that the characters and deeds from the Shang Dynasty to the beginning of the Western Zhou Dynasty were recorded in the hexagrams of the Zhouyi, such as Gaozong's cutting of ghosts and the return of the Emperor Yigui, etc., and it was presumed that the chronology of the hexagrams of the Zhouyi was based on At the beginning of the Western Zhou Dynasty.The characters and deeds recorded in the hexagrams of Zhouyi have been confirmed by documents unearthed in recent years, so Mr.Gu 's presumption is reliable.",
    "question": "Which of the following statements best describes the flaws of the above argument?",
    "answer": "B",
    "options": [
      "A.Most of the characters and deeds recorded in Gua Yao are ancient legends.",
      "B.The argument in the argument does not determine the lower limit of the age of the work.",
      "C.Legendary characters and deeds cannot be evidence of the age of the writing.",
      "D.The argument only relies on the words of the authority to support its conclusion."
    ],
    "raw_logic_programs": [
      "# Declarations\ncharacters_deeds = EnumSort([Gaozong_cutting_ghosts, Emperor_Yigui_return])\nhexagrams = EnumSort([Zhouyi])\ndocuments = EnumSort([unearthed_documents])\npresumption = Function([hexagrams] -> [bool])\nreliability = Function([presumption] -> [bool])\n\n# Constraints\nForAll([cd:characters_deeds], Exists([d:documents], confirmed_by(cd, d))) ::: The characters and deeds recorded in the hexagrams of Zhouyi have been confirmed by documents unearthed in recent years\npresumption(Zhouyi) == True ::: Mr. Gu's presumption is that the chronology of the hexagrams of the Zhouyi is based on the beginning of the Western Zhou Dynasty\nreliability(presumption(Zhouyi)) == True ::: Mr. Gu's presumption is reliable\n\n# Options\nQuestion ::: Which of the following statements best describes the flaws of the above argument?\nis_flaw(ForAll([cd:characters_deeds], ancient_legend(cd))) ::: (A) Most of the characters and deeds recorded in Gua Yao are ancient legends.\nis_flaw(Not(Exists([age:int], age >= lower_limit))) ::: (B) The argument in the argument does not determine the lower limit of the age of the work.\nis_flaw(ForAll([cd:characters_deeds], Not(evidence_of_age(cd)))) ::: (C) Legendary characters and deeds cannot be evidence of the age of the writing.\nis_flaw(DependsOn(authority_words, conclusion)) ::: (D) The argument only relies on the words of the authority to support its conclusion."
    ]
  },
  {
    "id": 318,
    "context": "Economist? If an enterprise can obtain an acceptable profit without the help of the government, then it has the ability to generate itself.If an enterprise cannot obtain normal profits in an open competitive market, then it has no self-reliance.Unless an enterprise has a policy burden, it will not receive government protection and subsidies.Since the state-owned enterprise has government protection and subsidies, it can make a profit even if it does not have the ability to generate itself.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "B",
    "options": [
      "A.If an enterprise does not have self-reliance, it will be eliminated in the competition.",
      "B.If an enterprise has government protection and subsidies, it will have a policy burden.",
      "C.If an enterprise has a policy burden, it can receive government protection and subsidies.",
      "D.In an open and competitive market, every enterprise has its own ability."
    ],
    "raw_logic_programs": [
      "# Declarations\nenterprises = EnumSort([enterprise])\nattributes = EnumSort([acceptable_profit, self_generate, normal_profit, self_reliance, policy_burden, government_protection, subsidies])\nhas_attribute = Function([enterprises, attributes] -> [bool])\n\n# Constraints\nForAll([e:enterprises], Implies(has_attribute(e, acceptable_profit), has_attribute(e, self_generate))) ::: If an enterprise can obtain an acceptable profit without the help of the government, then it has the ability to generate itself\nForAll([e:enterprises], Implies(Not(has_attribute(e, normal_profit)), Not(has_attribute(e, self_reliance)))) ::: If an enterprise cannot obtain normal profits in an open competitive market, then it has no self-reliance\nForAll([e:enterprises], Implies(Not(has_attribute(e, policy_burden)), Not(And(has_attribute(e, government_protection), has_attribute(e, subsidies))))) ::: Unless an enterprise has a policy burden, it will not receive government protection and subsidies\nForAll([e:enterprises], Implies(And(has_attribute(e, government_protection), has_attribute(e, subsidies)), Not(has_attribute(e, self_generate)))) ::: Since the state-owned enterprise has government protection and subsidies, it can make a profit even if it does not have the ability to generate itself\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(ForAll([e:enterprises], Implies(Not(has_attribute(e, self_reliance)), Not(has_attribute(e, normal_profit))))) ::: (A) If an enterprise does not have self-reliance, it will be eliminated in the competition.\nis_must_true(ForAll([e:enterprises], Implies(And(has_attribute(e, government_protection), has_attribute(e, subsidies)), has_attribute(e, policy_burden)))) ::: (B) If an enterprise has government protection and subsidies, it will have a policy burden.\nis_must_true(ForAll([e:enterprises], Implies(has_attribute(e, policy_burden), And(has_attribute(e, government_protection), has_attribute(e, subsidies))))) ::: (C) If an enterprise has a policy burden, it can receive government protection and subsidies.\nis_must_true(ForAll([e:enterprises], Implies(has_attribute(e, normal_profit), has_attribute(e, self_reliance)))) ::: (D) In an open and competitive market, every enterprise has its own ability."
    ]
  },
  {
    "id": 319,
    "context": "An expert from the Ministry of Public Security said that the psychological pressure to lie can cause certain physiological changes.With the help of a polygraph, the physiological characteristics of the liar can be measured, so that the results of the polygraph are reliable.",
    "question": "Which of the following statements, if true, can weaken the above argument most effectively?",
    "answer": "A",
    "options": [
      "A.Various psychological pressures can lead to similar physical representations.?",
      "B.Measuring instruments like polygraphs can also be misused and abused.",
      "C.A polygraph is an instrument that requires frequent maintenance and is prone to failure.",
      "D.For some people, lying can only cause less psychological pressure."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], weakens(s) == False) ::: Initially assume no statement weakens the argument\n\n# Options\nQuestion ::: Which of the following statements, if true, can weaken the above argument most effectively?\nweakens(A) == True ::: (A) Various psychological pressures can lead to similar physical representations.\nweakens(B) == False ::: (B) Measuring instruments like polygraphs can also be misused and abused.\nweakens(C) == False ::: (C) A polygraph is an instrument that requires frequent maintenance and is prone to failure.\nweakens(D) == False ::: (D) For some people, lying can only cause less psychological pressure."
    ]
  },
  {
    "id": 320,
    "context": "The anti-government armed forces in country A kidnapped 23 citizens of country H who were doing aid work in country A as hostages and demanded that the government release the members of the armed organization that was detained.If the government of country A does not agree to the request of the anti-government armed forces, the organization will kill the hostages; if the hostages are killed tragically, it will deter most countries assisting country A.If the government of country A agrees to the request of the anti-government armed forces, the organization will use this as a successful case to continuously replicate the kidnapping incident.",
    "question": "Which of the following conclusions can be derived from the above statement?",
    "answer": "C",
    "options": [
      "A.Most governments will remind their citizens? do not go to dangerous country A.",
      "B.Anti-government armed forces will also create kidnappings.",
      "C.If most countries assisting country A continue to send personnel to country A.the kidnapping will also occur.",
      "D.The government of country H is opposed to using force to rescue the hostages."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([country_A, country_H])\nactions = EnumSort([agree, not_agree])\noutcomes = EnumSort([hostages_killed, hostages_not_killed, deter_countries, replicate_kidnapping])\ndecisions = Function([countries] -> [actions])\nresults = Function([actions] -> [outcomes])\n\n# Constraints\nresults(not_agree) == hostages_killed ::: If the government of country A does not agree, the hostages will be killed\nresults(hostages_killed) == deter_countries ::: If the hostages are killed, it will deter most countries assisting country A\nresults(agree) == replicate_kidnapping ::: If the government agrees, the organization will replicate the kidnapping\n\n# Options\nQuestion ::: Which of the following conclusions can be derived from the above statement?\nis_derived(ForAll([c:countries], deter_countries)) ::: (A) Most governments will remind their citizens not to go to dangerous country A.\nis_derived(Exists([a:actions], results(a) == replicate_kidnapping)) ::: (B) Anti-government armed forces will also create kidnappings.\nis_derived(ForAll([c:countries], Exists([a:actions], results(a) == hostages_killed))) ::: (C) If most countries assisting country A continue to send personnel to country A, the kidnapping will also occur.\nis_derived(Not(Exists([a:actions], results(a) == hostages_not_killed))) ::: (D) The government of country H is opposed to using force to rescue the hostages."
    ]
  },
  {
    "id": 321,
    "context": "twenty one.There is no doubt that teaching with multimedia courseware can improve the teaching effect.Even if the courseware is made too simple, it is just the traditional 'moving' of blackboard writing, which fails to realize the multimedia effect and can also save time.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "D",
    "options": [
      "A.Teaching with multimedia courseware has obvious advantages over traditional blackboard writing.",
      "B.Moving the content of blackboard writing into courseware will not reduce the effectiveness of traditional blackboard writing in teaching.",
      "C.The courseware used by some teachers is too simple to really play the role of multimedia.",
      "D.Replacing traditional blackboard writing with multimedia courseware can save time when writing blackboard writing."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrelies_on = Function([statements] -> [bool])\n\n# Constraints\n# The argument states that even if the courseware is too simple, it can still save time, implying that the effectiveness of traditional blackboard writing is not reduced when moved to courseware.\nrelies_on(B) ::: Moving the content of blackboard writing into courseware will not reduce the effectiveness of traditional blackboard writing in teaching.\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(relies_on(A)) ::: (A)\nis_assumption(relies_on(B)) ::: (B)\nis_assumption(relies_on(C)) ::: (C)\nis_assumption(relies_on(D)) ::: (D)"
    ]
  },
  {
    "id": 322,
    "context": "twenty two.Reasonable people will not resist the law violently, unless the consequences of resisting the law are no worse than obeying the law, thus desperate.",
    "question": "Which of the following expressions does not agree with the expression above?",
    "answer": "D",
    "options": [
      "A.Only if the consequences of violent resistance to the law are no worse than obedience to the law, rational people will desperately and violently resist the law.",
      "B.If the consequences of violent resistance to the law are worse than obedience to the law, rational people will not desperately violently resist the law.",
      "C.If the consequences of obeying the law are better than violent resistance, the rational person will not desperately violently resist the law.",
      "D.Only the consequences of violent resistance to the law are worse than obedience to the law.Reasonable people will not desperately violently resist the law."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([reasonable, desperate])\nactions = EnumSort([obey, resist])\nconsequences = Function([actions] -> [int])\n\n# Constraints\nForAll([p:people], Implies(p == reasonable, Not(resist))) ::: Reasonable people will not resist the law violently\nForAll([p:people], Implies(p == desperate, resist)) ::: Desperate people will resist the law violently\nForAll([p:people], Implies(p == reasonable, consequences(resist) > consequences(obey))) ::: Reasonable people will not resist unless the consequences of resisting are worse than obeying\n\n# Options\nQuestion ::: Which of the following expressions does not agree with the expression above?\nis_not_agree(Implies(consequences(resist) <= consequences(obey), Not(resist))) ::: (A)\nis_not_agree(Implies(consequences(resist) > consequences(obey), Not(resist))) ::: (B)\nis_not_agree(Implies(consequences(obey) < consequences(resist), Not(resist))) ::: (C)\nis_not_agree(Implies(consequences(resist) > consequences(obey), Not(resist))) ::: (D)"
    ]
  },
  {
    "id": 323,
    "context": "twenty three.The growth of energy consumption in a region is positively correlated with economic growth, and the difference in growth between the two is usually no more than 15%.In 2003, a statistical report from Zhejiang Province showed that the province 's energy consumption increased by 30%, while the economic growth rate was 12.7%.",
    "question": "If the following items are true, all inconsistencies in the above may be reasonably explained, except",
    "answer": "D",
    "options": [
      "A.The private economy accounts for a large proportion of Zhejiang's economy, and the growth of some private economy is difficult to be counted.",
      "B.In order to leave room for economic development in the region, some local officials underreported the economic growth figures.",
      "C.Due to the sharp increase in energy prices, the economic growth of large state-owned enterprises with high energy consumption generally declined.?",
      "D.Due to the sharp increase in energy prices, 90% of the newly invested enterprises in Zhejiang are low-energy enterprises."
    ],
    "raw_logic_programs": [
      "# Declarations\ngrowth_types = EnumSort([energy_consumption, economic_growth])\ngrowth_rates = Function([growth_types] -> [float])\n\n# Constraints\ngrowth_rates(energy_consumption) == 30.0 ::: The province's energy consumption increased by 30%\ngrowth_rates(economic_growth) == 12.7 ::: The economic growth rate was 12.7%\ngrowth_rates(energy_consumption) <= growth_rates(economic_growth) + 15.0 ::: The difference in growth between the two is usually no more than 15%\n\n# Options\nQuestion ::: If the following items are true, all inconsistencies in the above may be reasonably explained, except\nis_exception(is_sat(growth_rates(economic_growth) < 12.7)) ::: (A) The private economy accounts for a large proportion of Zhejiang's economy, and the growth of some private economy is difficult to be counted.\nis_exception(is_sat(growth_rates(economic_growth) < 12.7)) ::: (B) In order to leave room for economic development in the region, some local officials underreported the economic growth figures.\nis_exception(is_sat(growth_rates(economic_growth) < 12.7)) ::: (C) Due to the sharp increase in energy prices, the economic growth of large state-owned enterprises with high energy consumption generally declined.\nis_exception(is_sat(growth_rates(energy_consumption) < 30.0)) ::: (D) Due to the sharp increase in energy prices, 90% of the newly invested enterprises in Zhejiang are low-energy enterprises."
    ]
  },
  {
    "id": 324,
    "context": "twenty four.In recent years, China's housing prices have skyrocketed.In August 2007, the State Council decided to expand the low-rent housing system to solve the housing problem of 10 million low-income families in the city.To achieve this goal, the government needs to provide rental subsidies or provide low-rent housing; and to build housing, it requires land and funds.A reporter reported on the topic of 'Low-income families stepping into the era of low-rent housing', which shows that he is confident in achieving this goal.",
    "question": "If the following items are true, they will enhance the confidence of this reporter, except",
    "answer": "B",
    "options": [
      "A.The State Council requires that local governments must use at least 10% of the net proceeds of land transfers for low-rent housing security funds.",
      "B.Even in developed countries, most low-income families rely on renting rather than buying a house to solve their housing problems.",
      "C.The State Council requires local governments to include low-rent housing security funds in their local fiscal annual budgets, and the central government will support the central and western regions with financial difficulties.",
      "D.The Ministry of Land and Resources requires local land and resources management departments to prioritize the settlement of land for low-rent housing."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nenhances_confidence = Function([statements] -> [bool])\n\n# Constraints\nenhances_confidence(A) ::: The State Council requires that local governments must use at least 10% of the net proceeds of land transfers for low-rent housing security funds.\nenhances_confidence(B) ::: Even in developed countries, most low-income families rely on renting rather than buying a house to solve their housing problems.\nenhances_confidence(C) ::: The State Council requires local governments to include low-rent housing security funds in their local fiscal annual budgets, and the central government will support the central and western regions with financial difficulties.\nenhances_confidence(D) ::: The Ministry of Land and Resources requires local land and resources management departments to prioritize the settlement of land for low-rent housing.\n\n# Options\nQuestion ::: If the following items are true, they will enhance the confidence of this reporter, except\nis_exception(enhances_confidence(A)) ::: (A)\nis_exception(enhances_confidence(B)) ::: (B)\nis_exception(enhances_confidence(C)) ::: (C)\nis_exception(enhances_confidence(D)) ::: (D)"
    ]
  },
  {
    "id": 325,
    "context": "Naturalists have observed that a group of birds usually have strict hierarchies, and birds with high status bully birds with low status.The darker the feathers on the head and the thicker the breast feather stripes, the higher the rank status and vice versa.Naturalists have also observed that the older the bird, the darker the color of the feathers on the head and the thicker the stripes of the breast feathers.This shows that the status of birds in a group is gradually established through long-term common life.",
    "question": "Which of the following, if true, can weaken the above argument most effectively?",
    "answer": "A",
    "options": [
      "A.People painted the head and breast feathers of a young inferior bird with the color and streak of an inferior bird, and placed it in another group of similar birds.This bird was given higher treatment in the new group.",
      "B.People cannot recognize the status of white swans in the group by the color of the feathers on the head or the stripes of the breast feathers, because the color of the feathers on their heads cannot be distinguished, and the breast feathers have no stripes.",
      "C.If there is a strict hierarchy in the bird world, then in a group of birds, they will also fight to improve their status.",
      "D.If there is a strict hierarchy in the bird world, then in a group of birds, their respective status will not be unchanged for life."
    ],
    "raw_logic_programs": [
      "# Declarations\nbirds = EnumSort([young_inferior, other])\nattributes = EnumSort([head_color, breast_stripes, status])\ngroups = EnumSort([original, new])\npainted = Function([birds, attributes] -> [bool])\ntreatment = Function([birds, groups] -> [bool])\n\n# Constraints\nForAll([b:birds], And(painted(b, head_color) == False, painted(b, breast_stripes) == False)) ::: Initially, no bird is painted\nForAll([b:birds], treatment(b, original) == (painted(b, head_color) == False and painted(b, breast_stripes) == False)) ::: Treatment in the original group depends on natural attributes\n\n# Options\nQuestion ::: Which of the following, if true, can weaken the above argument most effectively?\nis_weakened(Exists([b:birds], And(painted(b, head_color) == True, painted(b, breast_stripes) == True, treatment(b, new) == True))) ::: (A)\nis_weakened(ForAll([b:birds], Not(painted(b, head_color) == True and painted(b, breast_stripes) == True))) ::: (B)\nis_weakened(Exists([b:birds], treatment(b, original) == True)) ::: (C)\nis_weakened(Exists([b:birds], treatment(b, original) == False)) ::: (D)"
    ]
  },
  {
    "id": 326,
    "context": "Energy-saving lamps require less power and are more energy-efficient.Therefore, if people only use energy-saving lamps and do not use ordinary incandescent lamps that consume more electricity, they will save a lot of electricity.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "A",
    "options": [
      "A.The brightness of energy-saving lamps is at least the same as that of ordinary incandescent lamps",
      "B.People can reduce environmental pollution by using less electricity.",
      "C.People always want to reduce electricity, water and so on.",
      "D.Energy-saving lamps are not cheaper than ordinary incandescent lamps."
    ],
    "raw_logic_programs": [
      "# Declarations\nlamps = EnumSort([energy_saving, incandescent])\nbrightness = Function([lamps] -> [int])\npower_consumption = Function([lamps] -> [int])\n\n# Constraints\nForAll([l:lamps], power_consumption(l) > 0) ::: Energy-saving lamps require less power and are more energy-efficient\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(ForAll([l:lamps], brightness(energy_saving) >= brightness(incandescent))) ::: (A)\nis_assumption(Exists([l:lamps], power_consumption(l) < power_consumption(incandescent))) ::: (B)\nis_assumption(ForAll([l:lamps], power_consumption(l) < power_consumption(incandescent))) ::: (C)\nis_assumption(Not(Exists([l:lamps], power_consumption(l) < power_consumption(incandescent)))) ::: (D)"
    ]
  },
  {
    "id": 327,
    "context": "When the number of cod in the North Atlantic Ocean decreased significantly, the number of seals increased from 1.5 million to about 2.5 million.Some people think that seals have caused a decrease in cod, but seals rarely eat cod, so it is unlikely that a large increase in the number of seals caused a significant decline in the number of cod.",
    "question": "Which of the following statements, if true, can weaken the argument most strongly?",
    "answer": "D",
    "options": [
      "A.In the traditional cod fishing belt, a large number of seals caused great inconvenience to the fishing boat.",
      "B.The damage caused by seawater pollution to cod is more serious than that caused to seals.",
      "C.Before the number of seals increased, the number of cod in the North Atlantic Ocean was greatly reduced.",
      "D.Cod almost only eat capelin, and this fish is also the main food for seals."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweaken_argument = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as it is more about evaluating the impact of each statement on the argument.\n\n# Options\nQuestion ::: Which of the following statements, if true, can weaken the argument most strongly?\nis_weaken(weaken_argument(A)) ::: (A) In the traditional cod fishing belt, a large number of seals caused great inconvenience to the fishing boat.\nis_weaken(weaken_argument(B)) ::: (B) The damage caused by seawater pollution to cod is more serious than that caused to seals.\nis_weaken(weaken_argument(C)) ::: (C) Before the number of seals increased, the number of cod in the North Atlantic Ocean was greatly reduced.\nis_weaken(weaken_argument(D)) ::: (D) Cod almost only eat capelin, and this fish is also the main food for seals."
    ]
  },
  {
    "id": 328,
    "context": "Belgium is a country famous for making chocolates.People who travel to Belgium will be attracted by the local chocolate.However, for Chinese tourists who are sensible and understand the market, they only buy chocolates sold in Belgium that are cheaper than the same chocolate sold in the country.In fact, anyone who knows the market knows that Belgian chocolate sold in China is no more expensive than the same chocolate sold in Belgium.",
    "question": "Which of the following conclusions can be derived from the above discussion?",
    "answer": "B",
    "options": [
      "A.Chinese tourists who are irrational or do not understand the market will buy chocolates from the country in Belgium.",
      "B.The sensible Chinese tourists who bought the country 's chocolate in Belgium did not understand the market.",
      "C.Chinese tourists who buy chocolates from the country in Belgium are neither sensible nor understand the market.",
      "D.Chinese tourists who are sensible and understand the market will buy Belgian chocolate domestically."
    ],
    "raw_logic_programs": [
      "# Declarations\ntourists = EnumSort([sensible, irrational])\nchocolates = EnumSort([Belgian, domestic])\nmarket_understanding = Function([tourists] -> [bool])\nbuy_chocolate = Function([tourists, chocolates] -> [bool])\nprice_comparison = Function([chocolates] -> [int])\n\n# Constraints\nForAll([t:tourists], market_understanding(t) == (t == sensible)) ::: Sensible tourists understand the market\nForAll([c:chocolates], price_comparison(c) >= 0) ::: Price comparison is non-negative\nprice_comparison(Belgian) < price_comparison(domestic) ::: Belgian chocolate is cheaper in Belgium than domestic chocolate\nprice_comparison(domestic) <= price_comparison(Belgian) ::: Domestic chocolate is not more expensive than Belgian chocolate\n\n# Options\nQuestion ::: Which of the following conclusions can be derived from the above discussion?\nis_derived(Exists([t:tourists], And(t == irrational, buy_chocolate(t, domestic)))) ::: (A)\nis_derived(Exists([t:tourists], And(t == sensible, Not(market_understanding(t)), buy_chocolate(t, domestic)))) ::: (B)\nis_derived(Exists([t:tourists], And(Not(t == sensible), Not(market_understanding(t)), buy_chocolate(t, domestic)))) ::: (C)\nis_derived(Exists([t:tourists], And(t == sensible, market_understanding(t), buy_chocolate(t, Belgian)))) ::: (D)"
    ]
  },
  {
    "id": 329,
    "context": "In order to reduce the heavy academic burden on students, China has constantly reformed the content of the college entrance examination.The subjects of the college entrance examination were reduced from the original 7 subjects to 4 subjects.However, the difficulty of the exam increased, and the school had to strengthen the students' test-taking training.Some provinces and cities have tried to reduce the difficulty of the test a little bit, and as a result, students 'scores have generally improved, and the scores for college admissions have also risen.For college, students must score higher scores.",
    "question": "This shows which of the following can most logically complete the above discussion?",
    "answer": "D",
    "options": [
      "A.The proportion of the ability test should be increased in the college entrance examination to change the tendency of exam-oriented education in the whole basic education.",
      "B.Expanding the enrollment scale of colleges and universities can reduce students' academic burden.",
      "C.Regarding the high school exam results as part of the college entrance examination results can reduce the student's academic burden.",
      "D.Only reforming the content of the college entrance examination may not reduce the student's academic burden."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nlogical_completion = Function([statements] -> [bool])\n\n# Constraints\n# The problem description implies that reducing the number of subjects did not reduce the academic burden, and the difficulty increased.\n# Some provinces reduced difficulty, leading to improved scores and higher college admission scores.\n# The logical completion should address the relationship between exam reform and academic burden.\n\n# Options\nQuestion ::: This shows which of the following can most logically complete the above discussion?\nlogical_completion(A) ::: (A) The proportion of the ability test should be increased in the college entrance examination to change the tendency of exam-oriented education in the whole basic education.\nlogical_completion(B) ::: (B) Expanding the enrollment scale of colleges and universities can reduce students' academic burden.\nlogical_completion(C) ::: (C) Regarding the high school exam results as part of the college entrance examination results can reduce the student's academic burden.\nlogical_completion(D) ::: (D) Only reforming the content of the college entrance examination may not reduce the student's academic burden."
    ]
  },
  {
    "id": 330,
    "context": "Xiao Zhao? 'The stock and fund markets have been very active in recent months.Have you become a shareholder or a base investor?' Xiao Wang? 'I can only tell you that I bought at least one of the stocks and funds; if I do n't buy Fund, then I do n't buy stocks.'",
    "question": "If Xiao Wang told Xiao Zhao all the truth, which of the following must be true?",
    "answer": "C",
    "options": [
      "A.Xiao Wang bought stocks.",
      "B.Xiao Wang didn't buy stocks.",
      "C.Xiao Wang bought the fund.",
      "D.Xiao Wang didn't buy a fund."
    ],
    "raw_logic_programs": [
      "# Declarations\nbought_stocks = Bool('bought_stocks')\nbought_fund = Bool('bought_fund')\n\n# Constraints\nOr(bought_stocks, bought_fund) ::: Xiao Wang bought at least one of the stocks and funds\nImplies(Not(bought_fund), Not(bought_stocks)) ::: If Xiao Wang doesn't buy a fund, then he doesn't buy stocks\n\n# Options\nQuestion ::: If Xiao Wang told Xiao Zhao all the truth, which of the following must be true?\nis_true(bought_stocks) ::: (A) Xiao Wang bought stocks.\nis_true(Not(bought_stocks)) ::: (B) Xiao Wang didn't buy stocks.\nis_true(bought_fund) ::: (C) Xiao Wang bought the fund.\nis_true(Not(bought_fund)) ::: (D) Xiao Wang didn't buy a fund."
    ]
  },
  {
    "id": 331,
    "context": "Some of the students enrolled in the fall of 2007 in colleges and universities are free teachers.All the free normal students are poor.All students from poor families participated in the work-study program.",
    "question": "If the above statement is true, then the following must be true, except",
    "answer": "D",
    "options": [
      "A.Some of the students enrolled in the fall of 2007 were poor..",
      "B.Students who do not participate in the work-study program are not free teachers.",
      "C.Some students who participated in the work-study program were enrolled in the fall of 2007.",
      "D.Some students who participate in work-study activities are not free teachers."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([enrolled_2007, free_teachers, normal_students, poor_students, work_study_participants])\nproperties = EnumSort([is_enrolled, is_free_teacher, is_normal_student, is_poor, is_work_study_participant])\nhas_property = Function([students, properties] -> [bool])\n\n# Constraints\nForAll([s:students], Implies(has_property(s, is_free_teacher), has_property(s, is_enrolled))) ::: Some of the students enrolled in the fall of 2007 are free teachers\nForAll([s:students], Implies(has_property(s, is_normal_student), has_property(s, is_poor))) ::: All the free normal students are poor\nForAll([s:students], Implies(has_property(s, is_poor), has_property(s, is_work_study_participant))) ::: All students from poor families participated in the work-study program\n\n# Options\nQuestion ::: If the above statement is true, then the following must be true, except\nis_exception(Exists([s:students], has_property(s, is_poor) & has_property(s, is_enrolled))) ::: (A) Some of the students enrolled in the fall of 2007 were poor.\nis_exception(ForAll([s:students], Implies(Not(has_property(s, is_work_study_participant)), Not(has_property(s, is_free_teacher))))) ::: (B) Students who do not participate in the work-study program are not free teachers.\nis_exception(Exists([s:students], has_property(s, is_work_study_participant) & has_property(s, is_enrolled))) ::: (C) Some students who participated in the work-study program were enrolled in the fall of 2007.\nis_exception(Exists([s:students], has_property(s, is_work_study_participant) & Not(has_property(s, is_free_teacher)))) ::: (D) Some students who participate in work-study activities are not free teachers."
    ]
  },
  {
    "id": 332,
    "context": "The police said to the suspect? 'You always lie, we cannot believe you.When you start telling the truth, we start to believe you.'",
    "question": "Which of the following statements is an implicit assumption in police remarks?",
    "answer": "C",
    "options": [
      "A.The police never believed that the suspect would tell the truth.",
      "B.The police determined that the suspect knew what was lying.",
      "C.The police knew when the suspect was telling the truth.",
      "D.The police believe that the suspect will eventually tell the truth."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ntruth_status = Function([statements] -> [bool])\n\n# Constraints\ntruth_status(A) == False ::: The police never believed that the suspect would tell the truth\ntruth_status(B) == True ::: The police determined that the suspect knew what was lying\ntruth_status(C) == True ::: The police knew when the suspect was telling the truth\ntruth_status(D) == True ::: The police believe that the suspect will eventually tell the truth\n\n# Options\nQuestion ::: Which of the following statements is an implicit assumption in police remarks?\nis_implicit_assumption(truth_status(A)) ::: (A)\nis_implicit_assumption(truth_status(B)) ::: (B)\nis_implicit_assumption(truth_status(C)) ::: (C)\nis_implicit_assumption(truth_status(D)) ::: (D)"
    ]
  },
  {
    "id": 333,
    "context": "In recent years, the number of private cars has skyrocketed.In order to solve the increasingly serious traffic congestion, City B decided to significantly reduce the ticket price of urban ground bus lines.It is expected that 96% of passengers will reduce their expenses after the price reduction plan is implemented, which can attract passengers to take the bus first, thereby alleviating the traffic congestion in City B.",
    "question": "Which of the following statements, if true, can weaken the above conclusion most effectively?",
    "answer": "B",
    "options": [
      "A.Some elderly, sick, disabled and pregnant passengers still travel by taxi.",
      "B.The buses of all units in City B account for one-fifth of the total number of motor vehicles in this city, which is one of the important factors causing traffic jams in this city.",
      "C.After the bus line fare is greatly reduced, the bus will be more crowded, thereby reducing the comfort of riding.",
      "D.Cheap fares are not attractive to private car owners who focus on the environment and 'enjoy life'."
    ],
    "raw_logic_programs": [
      "# Declarations\npassengers = EnumSort([elderly, sick, disabled, pregnant, private_car_owners])\nfactors = EnumSort([bus_crowding, bus_ownership, fare_attractiveness])\neffects = EnumSort([traffic_congestion, passenger_expense_reduction])\ncauses = Function([factors] -> [effects])\n\n# Constraints\ncauses(bus_crowding) == traffic_congestion ::: After the bus line fare is greatly reduced, the bus will be more crowded, thereby reducing the comfort of riding\ncauses(bus_ownership) == traffic_congestion ::: The buses of all units in City B account for one-fifth of the total number of motor vehicles in this city, which is one of the important factors causing traffic jams in this city\ncauses(fare_attractiveness) == passenger_expense_reduction ::: It is expected that 96% of passengers will reduce their expenses after the price reduction plan is implemented\n\n# Options\nQuestion ::: Which of the following statements, if true, can weaken the above conclusion most effectively?\nis_weakened(Exists([p:passengers], And(p == private_car_owners, Not(causes(fare_attractiveness) == traffic_congestion)))) ::: (D)\nis_weakened(Exists([p:passengers], And(p == elderly, Not(causes(fare_attractiveness) == traffic_congestion)))) ::: (A)\nis_weakened(Exists([p:passengers], And(p == sick, Not(causes(fare_attractiveness) == traffic_congestion)))) ::: (A)\nis_weakened(Exists([p:passengers], And(p == disabled, Not(causes(fare_attractiveness) == traffic_congestion)))) ::: (A)\nis_weakened(Exists([p:passengers], And(p == pregnant, Not(causes(fare_attractiveness) == traffic_congestion)))) ::: (A)\nis_weakened(causes(bus_crowding) == traffic_congestion) ::: (C)\nis_weakened(causes(bus_ownership) == traffic_congestion) ::: (B)"
    ]
  },
  {
    "id": 334,
    "context": "In a car accident, airbags can greatly reduce the risk of serious injuries.However, statistics show that cars without airbags are less likely to be involved in accidents than those with airbags.Therefore, â€˜cars with airbags are no safer than cars without airbags.",
    "question": "Which of the following statements best describes the flaws of the above argument?",
    "answer": "C",
    "options": [
      "A.Denies this possibility? cars without airbags will have other safety measures to reduce the risk of serious injury.",
      "B.The argument is only hypothesis without confirmation? cars with airbags may be involved in accidents in the future.",
      "C.The argument is only a hypothesis and no confirmation? the occurrence of the accident is at least as important as the serious injury caused by the accident in assessing safety issues.",
      "D.Ignore this possibility? in some accidents, it includes both cars with airbags and cars without airbags."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([airbags_reduce_injury, cars_without_airbags_less_accidents, cars_with_airbags_no_safer])\nflaws = EnumSort([denies_other_measures, hypothesis_without_confirmation, occurrence_vs_injury, ignores_joint_accidents])\ndescribes_flaw = Function([arguments] -> [flaws])\n\n# Constraints\ndescribes_flaw(airbags_reduce_injury) == denies_other_measures ::: Denies this possibility: cars without airbags will have other safety measures to reduce the risk of serious injury\ndescribes_flaw(cars_without_airbags_less_accidents) == hypothesis_without_confirmation ::: The argument is only hypothesis without confirmation: cars with airbags may be involved in accidents in the future\ndescribes_flaw(cars_with_airbags_no_safer) == occurrence_vs_injury ::: The argument is only a hypothesis and no confirmation: the occurrence of the accident is at least as important as the serious injury caused by the accident in assessing safety issues\ndescribes_flaw(cars_with_airbags_no_safer) == ignores_joint_accidents ::: Ignore this possibility: in some accidents, it includes both cars with airbags and cars without airbags\n\n# Options\nQuestion ::: Which of the following statements best describes the flaws of the above argument?\nis_best_flaw(describes_flaw(cars_with_airbags_no_safer) == denies_other_measures) ::: (A)\nis_best_flaw(describes_flaw(cars_with_airbags_no_safer) == hypothesis_without_confirmation) ::: (B)\nis_best_flaw(describes_flaw(cars_with_airbags_no_safer) == occurrence_vs_injury) ::: (C)\nis_best_flaw(describes_flaw(cars_with_airbags_no_safer) == ignores_joint_accidents) ::: (D)"
    ]
  },
  {
    "id": 335,
    "context": "Recently, the eight major ministries and commissions such as the State Administration of Press and Publication jointly announced that the 'Online Game Anti-Addiction System' and the accompanying 'Online Game Anti-Addiction System Real-Name Authentication Scheme' will be officially implemented this year.Hours, experience value and income will be counted as 0.The implementation of this program will effectively prevent minors from indulging in online games.",
    "question": "Which of the following statements, if correct, can weaken the above conclusion most effectively?",
    "answer": "B",
    "options": [
      "A.Many minors only play online games occasionally.â€˜â€˜ Internet game anti-addiction system 'has no effect on them.",
      "B.'Online game anti-addiction system' does not work for adults, and minors may use adult identity or use some online tools to generate fake ID numbers to log in to online games.",
      "C.The introduction of the 'Online Game Anti-Addiction System' means that minors are allowed to play online games with the permission of the competent department, so that they can go from secret to public.",
      "D.In addition to online games, there are stand-alone games and PS games played on TV sets.â€˜â€˜ Online game anti-addiction system 'may cause many underage players to switch to these games."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens_conclusion = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description for the statements.\n\n# Options\nQuestion ::: Which of the following statements, if correct, can weaken the above conclusion most effectively?\nweakens_conclusion(A) ::: (A) Many minors only play online games occasionally. 'Online game anti-addiction system' has no effect on them.\nweakens_conclusion(B) ::: (B) 'Online game anti-addiction system' does not work for adults, and minors may use adult identity or use some online tools to generate fake ID numbers to log in to online games.\nweakens_conclusion(C) ::: (C) The introduction of the 'Online Game Anti-Addiction System' means that minors are allowed to play online games with the permission of the competent department, so that they can go from secret to public.\nweakens_conclusion(D) ::: (D) In addition to online games, there are stand-alone games and PS games played on TV sets. 'Online game anti-addiction system' may cause many underage players to switch to these games."
    ]
  },
  {
    "id": 336,
    "context": "Li Ming? 'At present, our country already has the conditions for levying inheritance tax.A large number of people have entered the high-income class in our country, and the levy of inheritance tax has a solid real economic foundation.Our Gini coefficient exceeds 4.0 China 's international warning line, the gap between the rich and the poor in society is gradually increasing, which puts forward urgent requirements for the levy of inheritance tax.Zhang Tao? 'Our country does not yet have the conditions to levy inheritance tax.If the inheritance tax is implemented now, it is likely that the tax will not be levied.'",
    "question": "Which of the following, if true, can best strengthen Zhang Tao 's objections?",
    "answer": "C",
    "options": [
      "A.At present, the average life expectancy of our country is 72 years, and the current age of the wealthy people in our country is 35-50 years.",
      "B.At present in our country, both civilians and millionaires want to leave their wealth to their children and grandchildren.",
      "C.The inheritance tax can only be implemented if the personal information is clear.",
      "D.Some wealthy film and television stars in our country died unfortunately before the age of 60."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nstrengthens = Function([statements] -> [bool])\n\n# Constraints\nstrengthens(A) == False ::: The average life expectancy and current age of wealthy people do not directly address the feasibility of levying the tax.\nstrengthens(B) == False ::: The desire to leave wealth to descendants does not directly impact the feasibility of implementing the tax.\nstrengthens(C) == True ::: The need for clear personal information directly impacts the feasibility of implementing the tax.\nstrengthens(D) == False ::: The unfortunate death of some wealthy individuals does not directly address the feasibility of levying the tax.\n\n# Options\nQuestion ::: Which of the following, if true, can best strengthen Zhang Tao's objections?\nis_true(strengthens(A)) ::: (A)\nis_true(strengthens(B)) ::: (B)\nis_true(strengthens(C)) ::: (C)\nis_true(strengthens(D)) ::: (D)"
    ]
  },
  {
    "id": 337,
    "context": "The president of the company believes that the prosecution process should allow the prosecutor and the defendant to choose a mediator who can help them solve the problem.The cost of prosecution is large, and the mediator may solve most of these problems.The suggestion made was that mediation was started later in the prosecution process, which had little effect.",
    "question": "Which of the following statements, if true, paid the strongest criticism of the company 's general manager on the human resources department 's proposal?",
    "answer": "D",
    "options": [
      "A.Many disputes have been resolved without a mediator.",
      "B.Those who filed prosecutions are unreasonable and will refuse to listen to the mediator 's opinion.",
      "C.The mediation process itself will take as much time as the current prosecution process.",
      "D.As the court debate progresses, the attitude between the opponents will tend to be tougher, making mutual compromises less likely."
    ],
    "raw_logic_programs": [
      "# Declarations\nprosecution_process = EnumSort([prosecutor, defendant, mediator])\nactions = EnumSort([choose_mediator, solve_problem, start_mediation])\neffects = EnumSort([large_cost, little_effect, resolve_disputes, refuse_mediator, time_consuming, tougher_attitudes])\nproposals = EnumSort([company_president, human_resources])\n\n# Constraints\nForAll([p:proposals], Exists([a:actions], a == choose_mediator)) ::: The president believes that the prosecution process should allow the prosecutor and the defendant to choose a mediator\nExists([e:effects], e == large_cost) ::: The cost of prosecution is large\nExists([a:actions], a == solve_problem) ::: The mediator may solve most of these problems\nExists([e:effects], e == little_effect) ::: Mediation started later in the prosecution process had little effect\n\n# Options\nQuestion ::: Which of the following statements, if true, paid the strongest criticism of the company 's general manager on the human resources department 's proposal?\nis_strong_criticism(Exists([e:effects], e == resolve_disputes)) ::: (A) Many disputes have been resolved without a mediator.\nis_strong_criticism(Exists([e:effects], e == refuse_mediator)) ::: (B) Those who filed prosecutions are unreasonable and will refuse to listen to the mediator's opinion.\nis_strong_criticism(Exists([e:effects], e == time_consuming)) ::: (C) The mediation process itself will take as much time as the current prosecution process.\nis_strong_criticism(Exists([e:effects], e == tougher_attitudes)) ::: (D) As the court debate progresses, the attitude between the opponents will tend to be tougher, making mutual compromises less likely."
    ]
  },
  {
    "id": 338,
    "context": "Cicero in ancient Rome once said? 'Elegance and beauty cannot be separated from health.' The Italian Renaissance humanitarian Lorenzo Barra emphasized that health is a precious quality and a 'natural gift' Is a gift from nature.He wrote? 'Many healthy people are not beautiful, but no beautiful person is unhealthy.'",
    "question": "The following items can be derived from Loren Barra 's exposition, except?",
    "answer": "C",
    "options": [
      "A.No unhealthy person is beautiful.",
      "B.Some healthy people are beautiful",
      "C.Some beautiful people are not healthy.",
      "D.Some people who are not beautiful are healthy."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([healthy, beautiful])\nattributes = EnumSort([true, false])\nhas_attribute = Function([people] -> [attributes])\n\n# Constraints\nForAll([p:people], Implies(has_attribute(p) == beautiful, has_attribute(p) == healthy)) ::: No beautiful person is unhealthy\n\n# Options\nQuestion ::: The following items can be derived from Loren Barra's exposition, except?\nis_exception(is_valid(ForAll([p:people], Implies(Not(has_attribute(p) == healthy), Not(has_attribute(p) == beautiful))))) ::: (A)\nis_exception(is_valid(Exists([p:people], And(has_attribute(p) == healthy, has_attribute(p) == beautiful)))) ::: (B)\nis_exception(is_valid(Exists([p:people], And(has_attribute(p) == beautiful, Not(has_attribute(p) == healthy))))) ::: (C)\nis_exception(is_valid(Exists([p:people], And(Not(has_attribute(p) == beautiful), has_attribute(p) == healthy)))) ::: (D)"
    ]
  },
  {
    "id": 339,
    "context": "patients with T-type disease receive the same treatment.In one study, they were divided equally into two groups, with all members of one group participating in a collective encouragement activity once a week, while the other group did not.Ten years later, 41 patients in each group died.Obviously, collective encouragement does not make patients with type T disease live longer.",
    "question": "Which of the following statements, if true, can weaken the above argument most effectively?",
    "answer": "B",
    "options": [
      "A.For patients who are still alive 10 years later, the two who participated in the collective encouragement activity lived longer than those who did not.",
      "B.The members of the group who participate in the collective encouragement activity once a week spend an average of two years longer than the other group.",
      "C.Some doctors believe that participating in a group encouragement activity once a week will reduce the confidence of patients receiving treatment.",
      "D.Patients who participate in a group encouragement activity once a week report that such activities can help them fight disease."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([encouragement, no_encouragement])\npatients = Function([groups] -> [int])\nalive_after_10_years = Function([groups] -> [int])\naverage_lifespan = Function([groups] -> [int])\n\n# Constraints\npatients(encouragement) == patients(no_encouragement) ::: patients were divided equally into two groups\nalive_after_10_years(encouragement) == alive_after_10_years(no_encouragement) ::: 41 patients in each group died\n\n# Options\nQuestion ::: Which of the following statements, if true, can weaken the above argument most effectively?\nis_weakened(average_lifespan(encouragement) > average_lifespan(no_encouragement)) ::: (A) For patients who are still alive 10 years later, the two who participated in the collective encouragement activity lived longer than those who did not.\nis_weakened(average_lifespan(encouragement) > average_lifespan(no_encouragement)) ::: (B) The members of the group who participate in the collective encouragement activity once a week spend an average of two years longer than the other group.\nis_weakened(False) ::: (C) Some doctors believe that participating in a group encouragement activity once a week will reduce the confidence of patients receiving treatment.\nis_weakened(False) ::: (D) Patients who participate in a group encouragement activity once a week report that such activities can help them fight disease."
    ]
  },
  {
    "id": 340,
    "context": "Computer scientists have discovered two computer viruses called 'Alibaba' and 'Forty Thieves.' These viruses often invade computer system files, preventing the correct storage of computer files.Fortunately, there is currently no evidence that these two viruses can completely delete computer files, so computer users who find these two viruses do not have to worry about their files being erased.",
    "question": "The above argument is wrong because it?",
    "answer": "B",
    "options": [
      "A.Support it with evidence that merely restates the conclusion.",
      "B.This fact is not considered? causality that has not been proven, one can also assume the existence of such a relationship.",
      "C.This possibility is not considered? even if the causal relationship has not been proven, the relationship still exists.",
      "D.It does not describe the technical mechanism by which computer viruses delete files."
    ],
    "raw_logic_programs": [
      "# Declarations\nviruses = EnumSort([Alibaba, Forty_Thieves])\nactions = EnumSort([invade, delete])\nevidence = Function([viruses, actions] -> [bool])\n\n# Constraints\nForAll([v:viruses], evidence(v, invade)) ::: These viruses often invade computer system files\nForAll([v:viruses], Not(evidence(v, delete))) ::: There is currently no evidence that these two viruses can completely delete computer files\n\n# Options\nQuestion ::: The above argument is wrong because it?\nis_wrong(ForAll([v:viruses], evidence(v, delete) == evidence(v, invade))) ::: (A) Support it with evidence that merely restates the conclusion.\nis_wrong(Exists([v:viruses], evidence(v, delete) == Not(evidence(v, invade)))) ::: (B) This fact is not considered? causality that has not been proven, one can also assume the existence of such a relationship.\nis_wrong(Exists([v:viruses], Not(evidence(v, delete)) == evidence(v, invade))) ::: (C) This possibility is not considered? even if the causal relationship has not been proven, the relationship still exists.\nis_wrong(Exists([v:viruses], Not(evidence(v, delete)) == Not(evidence(v, invade)))) ::: (D) It does not describe the technical mechanism by which computer viruses delete files."
    ]
  },
  {
    "id": 341,
    "context": "There are 6 rectangular vegetable ponds of the same size in a plastic shed, arranged in order from left to right? 1, 2, 3, 4, 5 and 6.And No.1 and No.6 are not adjacent.There are exactly 6 kinds of vegetables that need to be planted in the greenhouse? Q, L, H, x, S and Y.Each vegetable pond can only grow one of them.The planting arrangement must meet the following conditions? Q is planted in a vegetable pond on the left side of H.X species are in No.1 or No.6 vegetable ponds.No.3 vegetable pond is planted with Y or s.L is planted right next to S.",
    "question": "Which of the following may list eligible cultivation arrangements?",
    "answer": "A",
    "options": [
      "A.1 Plant Y; 2 Plant Q; 3 Plant S; 4 Plant L; 5 Plant H; 6 Plant X.",
      "B.1 planting X; 2 planting Y? 3 planting Q; 4 planting s; 5 planting L; 6 planting H.",
      "C.1 Plant H; 2 Plant Q; 3 Plant Y; 4 Plant S; 5 Plant L; 6 Plant x.",
      "D.1 Plant L; 2 Plant S; 3 Plant Y; 4 Plant Q; 5 Plant H; 6 Plant X."
    ],
    "raw_logic_programs": [
      "# Declarations\nponds = EnumSort([1, 2, 3, 4, 5, 6])\nvegetables = EnumSort([Q, L, H, X, S, Y])\nplanted = Function([ponds] -> [vegetables])\n\n# Constraints\nplanted(1) != planted(6) ::: No.1 and No.6 are not adjacent\nExists([p:ponds], And(planted(p) == Q, Exists([p2:ponds], And(planted(p2) == H, p < p2)))) ::: Q is planted in a vegetable pond on the left side of H\nOr(planted(1) == X, planted(6) == X) ::: X species are in No.1 or No.6 vegetable ponds\nOr(planted(3) == Y, planted(3) == S) ::: No.3 vegetable pond is planted with Y or S\nExists([p:ponds], And(planted(p) == L, Or(planted(p + 1) == S, planted(p - 1) == S))) ::: L is planted right next to S\n\n# Options\nQuestion ::: Which of the following may list eligible cultivation arrangements?\nis_valid(And(planted(1) == Y, planted(2) == Q, planted(3) == S, planted(4) == L, planted(5) == H, planted(6) == X)) ::: (A)\nis_valid(And(planted(1) == X, planted(2) == Y, planted(3) == Q, planted(4) == S, planted(5) == L, planted(6) == H)) ::: (B)\nis_valid(And(planted(1) == H, planted(2) == Q, planted(3) == Y, planted(4) == S, planted(5) == L, planted(6) == X)) ::: (C)\nis_valid(And(planted(1) == L, planted(2) == S, planted(3) == Y, planted(4) == Q, planted(5) == H, planted(6) == X)) ::: (D)"
    ]
  },
  {
    "id": 342,
    "context": "There are 6 rectangular vegetable ponds of the same size in a plastic greenhouse, arranged in order from left to right? 1, 2, 3, 4, 5 and 6.And No.1 and No.6 are not adjacent.There are exactly 6 kinds of vegetables that need to be planted in the greenhouse? Q, L, H, x, S and Y.Each vegetable pond can only grow one of them.The planting arrangement must meet the following conditions? Q is planted in a vegetable pond on the left side of H.X species are in No.1 or No.6 vegetable ponds.No.3 vegetable pond is planted with Y or s.L is planted right next to S.",
    "question": "If s is planted in an even-numbered vegetable pool, which of the following statements must be true?",
    "answer": "C",
    "options": [
      "A.L is planted next to the left of S.",
      "B.H is planted right next to S.",
      "C.Y is planted next to the left of S.",
      "D.x planted right next to S."
    ],
    "raw_logic_programs": [
      "# Declarations\nponds = EnumSort([1, 2, 3, 4, 5, 6])\nvegetables = EnumSort([Q, L, H, X, S, Y])\nplanted = Function([ponds] -> [vegetables])\n\n# Constraints\nForAll([p:ponds], Exists([v:vegetables], planted(p) == v)) ::: Each vegetable pond can only grow one of the vegetables\nExists([p1:ponds, p2:ponds], And(p1 < p2, planted(p1) == Q, planted(p2) == H)) ::: Q is planted in a vegetable pond on the left side of H\nOr(planted(1) == X, planted(6) == X) ::: X species are in No.1 or No.6 vegetable ponds\nOr(planted(3) == Y, planted(3) == S) ::: No.3 vegetable pond is planted with Y or S\nExists([p:ponds], And(planted(p) == L, Or(planted(p+1) == S, planted(p-1) == S))) ::: L is planted right next to S\n\n# Options\nQuestion ::: If S is planted in an even-numbered vegetable pool, which of the following statements must be true?\nis_must_true(Exists([p:ponds], And(planted(p) == L, planted(p+1) == S))) ::: (A) L is planted next to the left of S\nis_must_true(Exists([p:ponds], And(planted(p) == H, planted(p-1) == S))) ::: (B) H is planted right next to S\nis_must_true(Exists([p:ponds], And(planted(p) == Y, planted(p+1) == S))) ::: (C) Y is planted next to the left of S\nis_must_true(Exists([p:ponds], And(planted(p) == X, planted(p-1) == S))) ::: (D) X is planted right next to S"
    ]
  },
  {
    "id": 343,
    "context": "There are 6 rectangular vegetable ponds of the same size in a plastic shed, arranged in order from left to right? 1, 2, 3, 4, 5 and 6.And No.1 and No.6 are not adjacent.There are exactly 6 kinds of vegetables that need to be planted in the greenhouse? Q, L, H, x, S and Y.Each vegetable pond can only grow one of them.The planting arrangement must meet the following conditions? Q is planted in a vegetable pond on the left side of H.X species are in No.1 or No.6 vegetable ponds.No.3 vegetable pond is planted with Y or s.L is planted right next to S.",
    "question": "If S and Q are planted in odd-numbered vegetable ponds, which of the following statements may be true?",
    "answer": "B",
    "options": [
      "A.H species are in No.1 vegetable pond.",
      "B.Type Y is in No.2 Caichizi.",
      "C.Type H is in No.4 vegetable pond.",
      "D.L is planted in No.5 vegetable pond."
    ],
    "raw_logic_programs": [
      "# Declarations\nponds = EnumSort([1, 2, 3, 4, 5, 6])\nvegetables = EnumSort([Q, L, H, X, S, Y])\nplanted = Function([ponds] -> [vegetables])\n\n# Constraints\nDistinct([p:ponds], planted(p)) ::: Each vegetable pond can only grow one kind of vegetable\nExists([p1:ponds, p2:ponds], And(p1 < p2, planted(p1) == Q, planted(p2) == H)) ::: Q is planted in a vegetable pond on the left side of H\nOr(planted(1) == X, planted(6) == X) ::: X species are in No.1 or No.6 vegetable ponds\nOr(planted(3) == Y, planted(3) == S) ::: No.3 vegetable pond is planted with Y or S\nExists([p:ponds], Or(And(planted(p) == L, planted(p+1) == S), And(planted(p) == S, planted(p+1) == L))) ::: L is planted right next to S\nAnd(Or(planted(1) == S, planted(3) == S, planted(5) == S), Or(planted(1) == Q, planted(3) == Q, planted(5) == Q)) ::: S and Q are planted in odd-numbered vegetable ponds\n\n# Options\nQuestion ::: If S and Q are planted in odd-numbered vegetable ponds, which of the following statements may be true?\nis_sat(planted(1) == H) ::: (A) H species are in No.1 vegetable pond\nis_sat(planted(2) == Y) ::: (B) Type Y is in No.2 vegetable pond\nis_sat(planted(4) == H) ::: (C) Type H is in No.4 vegetable pond\nis_sat(planted(5) == L) ::: (D) L is planted in No.5 vegetable pond"
    ]
  },
  {
    "id": 344,
    "context": "There are 6 rectangular vegetable ponds of the same size in a plastic greenhouse, arranged in order from left to right? 1, 2, 3, 4, 5 and 6.And No.1 and No.6 are not adjacent.There are exactly 6 kinds of vegetables that need to be planted in the greenhouse? Q, L, H, x, S and Y.Each vegetable pond can only grow one of them.The planting arrangement must meet the following conditions? Q is planted in a vegetable pond on the left side of H.X species are in No.1 or No.6 vegetable ponds.No.3 vegetable pond is planted with Y or s.L is planted right next to S.",
    "question": "Which of the following statements cannot be true?",
    "answer": "D",
    "options": [
      "A.Y species are in a vegetable pool on the right side of x.",
      "B.x is planted next to Y's left.",
      "C.S species is in a vegetable pool on the left side of Q.",
      "D.H is planted next to the right side of x."
    ],
    "raw_logic_programs": [
      "# Declarations\nponds = EnumSort([1, 2, 3, 4, 5, 6])\nvegetables = EnumSort([Q, L, H, X, S, Y])\nplanted = Function([ponds] -> [vegetables])\n\n# Constraints\nDistinct([p:ponds], planted(p)) ::: Each vegetable pond can only grow one kind of vegetable\nExists([p1:ponds, p2:ponds], And(p1 < p2, planted(p1) == Q, planted(p2) == H)) ::: Q is planted in a vegetable pond on the left side of H\nOr(planted(1) == X, planted(6) == X) ::: X species are in No.1 or No.6 vegetable ponds\nOr(planted(3) == Y, planted(3) == S) ::: No.3 vegetable pond is planted with Y or S\nExists([p:ponds], And(planted(p) == L, Or(planted(p-1) == S, planted(p+1) == S))) ::: L is planted right next to S\n\n# Options\nQuestion ::: Which of the following statements cannot be true?\nis_unsat(Exists([p1:ponds, p2:ponds], And(p1 < p2, planted(p1) == Y, planted(p2) == X))) ::: (A) Y species are in a vegetable pool on the right side of X\nis_unsat(Exists([p:ponds], And(planted(p) == X, Or(planted(p-1) == Y, planted(p+1) == Y)))) ::: (B) X is planted next to Y's left\nis_unsat(Exists([p1:ponds, p2:ponds], And(p1 < p2, planted(p1) == S, planted(p2) == Q))) ::: (C) S species is in a vegetable pool on the left side of Q\nis_unsat(Exists([p:ponds], And(planted(p) == X, Or(planted(p+1) == H)))) ::: (D) H is planted next to the right side of X"
    ]
  },
  {
    "id": 345,
    "context": "There are 6 rectangular vegetable ponds of the same size in a plastic shed, arranged in order from left to right? 1, 2, 3, 4, 5 and 6.And No.1 and No.6 are not adjacent.There are exactly 6 kinds of vegetables that need to be planted in the greenhouse? Q, L, H, x, S and Y.Each vegetable pond can only grow one of them.The planting arrangement must meet the following conditions? Q is planted in a vegetable pond on the left side of H.X species are in No.1 or No.6 vegetable ponds.No.3 vegetable pond is planted with Y or s.L is planted right next to S.",
    "question": "If the H species is in No.2 Caichizi, which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.X species are in No.6 vegetable pond.",
      "B.Type L is in No.4 vegetable pond.",
      "C.L is planted in No.5 vegetable pond.",
      "D.Type Y is in No.3 vegetable pond."
    ],
    "raw_logic_programs": [
      "# Declarations\nponds = EnumSort([1, 2, 3, 4, 5, 6])\nvegetables = EnumSort([Q, L, H, X, S, Y])\nplanted = Function([ponds] -> [vegetables])\n\n# Constraints\nDistinct([p:ponds], planted(p)) ::: Each vegetable pond can only grow one kind of vegetable\nExists([p1:ponds, p2:ponds], And(p1 < p2, planted(p1) == Q, planted(p2) == H)) ::: Q is planted in a vegetable pond on the left side of H\nOr(planted(1) == X, planted(6) == X) ::: X species are in No.1 or No.6 vegetable ponds\nOr(planted(3) == Y, planted(3) == S) ::: No.3 vegetable pond is planted with Y or S\nExists([p:ponds], Or(And(planted(p) == L, planted(p+1) == S), And(planted(p) == S, planted(p+1) == L))) ::: L is planted right next to S\nplanted(2) == H ::: H species is in No.2 vegetable pond\n\n# Options\nQuestion ::: If the H species is in No.2 Caichizi, which of the following statements must be true?\nis_must_true(planted(6) == X) ::: (A) X species are in No.6 vegetable pond\nis_must_true(planted(4) == L) ::: (B) Type L is in No.4 vegetable pond\nis_must_true(planted(5) == L) ::: (C) L is planted in No.5 vegetable pond\nis_must_true(planted(3) == Y) ::: (D) Type Y is in No.3 vegetable pond"
    ]
  },
  {
    "id": 346,
    "context": "A street comprehensive governance committee has 6 members? F, G, H, I, M and P.Each of these members must be a member of at least one of the three sub-committees under the Comprehensive Governance Committee.Each sub-committee is composed of 3 different members.The known information is as follows? one of the six members serves as a member of three subcommittees.F is not a member of the same subcommittee as G.H is not a member of the same subcommittee as I.",
    "question": "Which of the following statements may be true?",
    "answer": "D",
    "options": [
      "A.F is a member of the three sub-committees.",
      "B.H is a member of the three subcommittees.",
      "C.G serves on the three sub-committees.",
      "D.There are P in the subcommittees where I serve."
    ],
    "raw_logic_programs": [
      "# Declarations\nmembers = EnumSort([F, G, H, I, M, P])\nsubcommittees = EnumSort([subcommittee1, subcommittee2, subcommittee3])\nmembership = Function([members, subcommittees] -> [bool])\n\n# Constraints\nForAll([m:members], Exists([s:subcommittees], membership(m, s))) ::: Each member must be a member of at least one subcommittee\nForAll([s:subcommittees], Count([m:members], membership(m, s)) == 3) ::: Each subcommittee is composed of 3 different members\nNot(Exists([s:subcommittees], And(membership(F, s), membership(G, s)))) ::: F is not a member of the same subcommittee as G\nNot(Exists([s:subcommittees], And(membership(H, s), membership(I, s)))) ::: H is not a member of the same subcommittee as I\n\n# Options\nQuestion ::: Which of the following statements may be true?\nis_sat(Count([s:subcommittees], membership(F, s)) == 3) ::: (A) F is a member of the three sub-committees.\nis_sat(Count([s:subcommittees], membership(H, s)) == 3) ::: (B) H is a member of the three subcommittees.\nis_sat(Count([s:subcommittees], membership(G, s)) == 3) ::: (C) G serves on the three sub-committees.\nis_sat(Exists([s:subcommittees], And(membership(I, s), membership(P, s)))) ::: (D) There are P in the subcommittees where I serve."
    ]
  },
  {
    "id": 347,
    "context": "A street comprehensive governance committee has 6 members? F, G, H, I, M and P.Each of these members must be a member of at least one of the three sub-committees under the Comprehensive Governance Committee.Each sub-committee is composed of 3 different members.The known information is as follows? one of the six members serves as a member of three subcommittees.F is not a member of the same subcommittee as G.H is not a member of the same subcommittee as I.",
    "question": "If there is an I in the subcommittee where M serves, which of the following statements may be true?",
    "answer": "C",
    "options": [
      "A.M is a member of each sub-committee.",
      "B.1 Member of the two sub-committees.",
      "C.I have I in the sub-committee where P serves.",
      "D.F and M serve on the same subcommittee."
    ],
    "raw_logic_programs": [
      "# Declarations\nmembers = EnumSort([F, G, H, I, M, P])\nsubcommittees = EnumSort([subcommittee1, subcommittee2, subcommittee3])\nmembership = Function([members, subcommittees] -> [bool])\n\n# Constraints\nForAll([m:members], Exists([s:subcommittees], membership(m, s))) ::: Each member must be a member of at least one subcommittee\nForAll([s:subcommittees], Count([m:members], membership(m, s)) == 3) ::: Each subcommittee is composed of 3 different members\nExists([m:members], Count([s:subcommittees], membership(m, s)) == 3) ::: One member serves as a member of all three subcommittees\nForAll([s:subcommittees], Not(And(membership(F, s), membership(G, s)))) ::: F is not a member of the same subcommittee as G\nForAll([s:subcommittees], Not(And(membership(H, s), membership(I, s)))) ::: H is not a member of the same subcommittee as I\n\n# Options\nQuestion ::: If there is an I in the subcommittee where M serves, which of the following statements may be true?\nis_possible(Exists([s:subcommittees], And(membership(M, s), membership(I, s), ForAll([s2:subcommittees], membership(M, s2))))) ::: (A) M is a member of each sub-committee.\nis_possible(Exists([m:members], Count([s:subcommittees], membership(m, s)) == 2)) ::: (B) 1 Member of the two sub-committees.\nis_possible(Exists([s:subcommittees], And(membership(I, s), membership(P, s)))) ::: (C) I have I in the sub-committee where P serves.\nis_possible(Exists([s:subcommittees], And(membership(F, s), membership(M, s)))) ::: (D) F and M serve on the same subcommittee."
    ]
  },
  {
    "id": 348,
    "context": "A street comprehensive governance committee has 6 members? F, G, H, I, M and P.Each of these members must be a member of at least one of the three sub-committees under the Comprehensive Governance Committee.Each sub-committee is composed of 3 different members.The known information is as follows? one of the six members serves as a member of three subcommittees.F is not a member of the same subcommittee as G.H is not a member of the same subcommittee as I.",
    "question": "If F and M are not members of the same subcommittee, which of the following statements must be true?",
    "answer": "C",
    "options": [
      "A.F and H serve on the same subcommittee.",
      "B.F and I serve on the same subcommittee.",
      "C.I and P are members of the same subcommittee.",
      "D.M and G serve on the same subcommittee."
    ],
    "raw_logic_programs": [
      "# Declarations\nmembers = EnumSort([F, G, H, I, M, P])\nsubcommittees = EnumSort([subcommittee1, subcommittee2, subcommittee3])\nmembership = Function([members, subcommittees] -> [bool])\n\n# Constraints\nForAll([m:members], Exists([s:subcommittees], membership(m, s))) ::: Each member must be a member of at least one subcommittee\nForAll([s:subcommittees], Count([m:members], membership(m, s)) == 3) ::: Each subcommittee is composed of 3 different members\nExists([m:members], Count([s:subcommittees], membership(m, s)) == 3) ::: One member serves as a member of three subcommittees\nForAll([s:subcommittees], Not(And(membership(F, s), membership(G, s)))) ::: F is not a member of the same subcommittee as G\nForAll([s:subcommittees], Not(And(membership(H, s), membership(I, s)))) ::: H is not a member of the same subcommittee as I\n\n# Additional Constraint\nForAll([s:subcommittees], Not(And(membership(F, s), membership(M, s)))) ::: F and M are not members of the same subcommittee\n\n# Options\nQuestion ::: If F and M are not members of the same subcommittee, which of the following statements must be true?\nis_valid(Exists([s:subcommittees], And(membership(F, s), membership(H, s)))) ::: (A) F and H serve on the same subcommittee\nis_valid(Exists([s:subcommittees], And(membership(F, s), membership(I, s)))) ::: (B) F and I serve on the same subcommittee\nis_valid(Exists([s:subcommittees], And(membership(I, s), membership(P, s)))) ::: (C) I and P are members of the same subcommittee\nis_valid(Exists([s:subcommittees], And(membership(M, s), membership(G, s)))) ::: (D) M and G serve on the same subcommittee"
    ]
  },
  {
    "id": 349,
    "context": "A street comprehensive governance committee has 6 members? F, G, H, I, M and P.Each of these members must be a member of at least one of the three sub-committees under the Comprehensive Governance Committee.Each sub-committee is composed of 3 different members.The known information is as follows? one of the six members serves as a member of three subcommittees.F is not a member of the same subcommittee as G.H is not a member of the same subcommittee as I.",
    "question": "Which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.M and P are members of a subcommittee.",
      "B.F and H are members of a subcommittee.",
      "C.G and I are members of a subcommittee.",
      "D.1 member of any sub-committee."
    ],
    "raw_logic_programs": [
      "# Declarations\nmembers = EnumSort([F, G, H, I, M, P])\nsubcommittees = EnumSort([subcommittee1, subcommittee2, subcommittee3])\nis_member = Function([members, subcommittees] -> [bool])\n\n# Constraints\nForAll([m:members], Exists([s:subcommittees], is_member(m, s))) ::: Each member must be a member of at least one subcommittee\nForAll([s:subcommittees], Count([m:members], is_member(m, s)) == 3) ::: Each subcommittee is composed of 3 different members\nExists([m:members], Count([s:subcommittees], is_member(m, s)) == 3) ::: One member serves as a member of all three subcommittees\nForAll([s:subcommittees], Not(And(is_member(F, s), is_member(G, s)))) ::: F is not a member of the same subcommittee as G\nForAll([s:subcommittees], Not(And(is_member(H, s), is_member(I, s)))) ::: H is not a member of the same subcommittee as I\n\n# Options\nQuestion ::: Which of the following statements must be true?\nis_must_true(Exists([s:subcommittees], And(is_member(M, s), is_member(P, s)))) ::: (A) M and P are members of a subcommittee.\nis_must_true(Exists([s:subcommittees], And(is_member(F, s), is_member(H, s)))) ::: (B) F and H are members of a subcommittee.\nis_must_true(Exists([s:subcommittees], And(is_member(G, s), is_member(I, s)))) ::: (C) G and I are members of a subcommittee.\nis_must_true(Exists([s:subcommittees], Count([m:members], is_member(m, s)) == 1)) ::: (D) 1 member of any sub-committee."
    ]
  },
  {
    "id": 350,
    "context": "A street comprehensive governance committee has 6 members? F, G, H, I, M and P.Each of these members must be a member of at least one of the three sub-committees under the Comprehensive Governance Committee.Each sub-committee is composed of 3 different members.The known information is as follows? one of the six members serves as a member of three subcommittees.F is not a member of the same subcommittee as G.H is not a member of the same subcommittee as I.",
    "question": "Which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.One of F or G is a member of three subcommittees.",
      "B.One of H or I is a member of three subcommittees.",
      "C.P or M only serve on one subcommittee.",
      "D.One member happens to be a member of the two subcommittees."
    ],
    "raw_logic_programs": [
      "# Declarations\nmembers = EnumSort([F, G, H, I, M, P])\nsubcommittees = EnumSort([subcommittee1, subcommittee2, subcommittee3])\nmembership = Function([members, subcommittees] -> [bool])\n\n# Constraints\nForAll([m:members], Exists([s:subcommittees], membership(m, s))) ::: Each member must be a member of at least one subcommittee\nForAll([s:subcommittees], Count([m:members], membership(m, s)) == 3) ::: Each subcommittee is composed of 3 different members\nExists([m:members], Count([s:subcommittees], membership(m, s)) == 3) ::: One of the six members serves as a member of three subcommittees\nForAll([s:subcommittees], Not(And(membership(F, s), membership(G, s)))) ::: F is not a member of the same subcommittee as G\nForAll([s:subcommittees], Not(And(membership(H, s), membership(I, s)))) ::: H is not a member of the same subcommittee as I\n\n# Options\nQuestion ::: Which of the following statements must be true?\nis_must_be_true(Exists([s:subcommittees], Or(Count([s:subcommittees], membership(F, s)) == 3, Count([s:subcommittees], membership(G, s)) == 3))) ::: (A)\nis_must_be_true(Exists([s:subcommittees], Or(Count([s:subcommittees], membership(H, s)) == 3, Count([s:subcommittees], membership(I, s)) == 3))) ::: (B)\nis_must_be_true(Or(Count([s:subcommittees], membership(P, s)) == 1, Count([s:subcommittees], membership(M, s)) == 1)) ::: (C)\nis_must_be_true(Exists([m:members], Count([s:subcommittees], membership(m, s)) == 2)) ::: (D)"
    ]
  },
  {
    "id": 351,
    "context": "Which athlete does not want to appear on the stage of the Olympics and enjoy performing on it?",
    "question": "If the above statement is true, which of the following statements must be false?",
    "answer": "C",
    "options": [
      "A All American athletes, such as swimmer Phelps, want to perform on the Olympic stage.",
      "B.Some Jamaican athletes, such as sprinter Bolt, want to appear on the stage of the Olympics.",
      "C.China's 110-meter hurdler Liu Xiang does not want to appear on the stage of the Olympics and enjoy performing on it.",
      "D.Anyone, as long as he is an athlete, he wants to appear on the stage of the Olympic Games."
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([Phelps, Bolt, Liu_Xiang])\nwants_to_appear = Function([athletes] -> [bool])\nenjoys_performing = Function([athletes] -> [bool])\n\n# Constraints\nForAll([a:athletes], wants_to_appear(a) == enjoys_performing(a)) ::: Each athlete either wants to appear and enjoy performing or neither\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be false?\nis_false(ForAll([a:athletes], Implies(a == Phelps, wants_to_appear(a)))) ::: (A) All American athletes, such as swimmer Phelps, want to perform on the Olympic stage.\nis_false(Exists([a:athletes], And(a == Bolt, wants_to_appear(a)))) ::: (B) Some Jamaican athletes, such as sprinter Bolt, want to appear on the stage of the Olympics.\nis_false(Not(wants_to_appear(Liu_Xiang))) ::: (C) China's 110-meter hurdler Liu Xiang does not want to appear on the stage of the Olympics and enjoy performing on it.\nis_false(ForAll([a:athletes], wants_to_appear(a))) ::: (D) Anyone, as long as he is an athlete, wants to appear on the stage of the Olympic Games."
    ]
  },
  {
    "id": 352,
    "context": "In recent years, the number of Sichuan restaurants in major cities in China is increasing.This shows that more people choose to go to the restaurant for dinner instead of feasting at home?",
    "question": "In order for the above conclusion to be true, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.The increase in the number of Sichuan restaurants has not been accompanied by a decrease in the number of other restaurants.",
      "B.The number of restaurants in big cities has not increased or decreased.",
      "C.Szechuan restaurants are more popular than other restaurants in major cities across the country.",
      "D.The new restaurant will only open if the existing restaurant cannot fit in."
    ],
    "raw_logic_programs": [
      "# Declarations\nrestaurants = EnumSort([Sichuan, Other])\ncities = EnumSort([major_cities])\ndining_choices = EnumSort([restaurant, home])\ntrend = Function([cities, restaurants] -> [int])\ndining_preference = Function([cities] -> [dining_choices])\n\n# Constraints\ntrend(major_cities, Sichuan) == increasing ::: The number of Sichuan restaurants in major cities in China is increasing.\n\n# Options\nQuestion ::: In order for the above conclusion to be true, which of the following statements must be true?\nis_must_be_true(trend(major_cities, Other) != decreasing) ::: (A) The increase in the number of Sichuan restaurants has not been accompanied by a decrease in the number of other restaurants.\nis_must_be_true(trend(major_cities, restaurants) == constant) ::: (B) The number of restaurants in big cities has not increased or decreased.\nis_must_be_true(dining_preference(major_cities) == restaurant) ::: (C) Szechuan restaurants are more popular than other restaurants in major cities across the country.\nis_must_be_true(Exists([r:restaurants], trend(major_cities, r) == increasing) -> Not(Exists([r:restaurants], trend(major_cities, r) == decreasing))) ::: (D) The new restaurant will only open if the existing restaurant cannot fit in."
    ]
  },
  {
    "id": 353,
    "context": "Sun Tzu's Art of War' said? 'Bing Gui wins, it is not long.' It means that the tactics of using soldiers can win, and you must fight quickly.However, Mao Zedong's 'On Protracted Warfare' advocated protracted warfare, and the Chinese army won the anti-Japanese war by protracted warfare.It can be seen that 'On the Protracted War' and 'Sun Tzu Art of War' are inconsistent in the view that 'the soldiers are not expensive'.",
    "question": "If any of the following statements are true, can the above argument be weakened most effectively?",
    "answer": "B",
    "options": [
      "A.During World War II, the German army achieved a series of victories by blitzkrieg, and was dragged into a protracted battle after entering the Soviet Union.As a result, Hitler repeated Napoleon's mistakes.",
      "B.The invaders of the Japanese invaders must have a quick decision.Mao Zedong's protracted war is a countermeasure against the enemy's quick decisive battle.He is talking about long-lasting strategy, not long-lasting tactics.",
      "C.The current war on terrorism in the world is a partial or short-term battle, and an overall or long-term battle.",
      "D.Mao Zedong's military writings and 'Sun Zi's Art of War' have a high degree of consistency in the viewpoints of 'knowing each other and knowing oneself, fighting a hundred battles' and 'preparing one's opponents and being surprised.'"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Sun_Tzu, Mao_Zedong])\nviews = EnumSort([quick_victory, protracted_warfare])\nsupports = Function([arguments] -> [views])\n\n# Constraints\nsupports(Sun_Tzu) == quick_victory ::: 'Sun Tzu's Art of War' supports quick victory\nsupports(Mao_Zedong) == protracted_warfare ::: Mao Zedong's 'On Protracted Warfare' supports protracted warfare\n\n# Options\nQuestion ::: If any of the following statements are true, can the above argument be weakened most effectively?\nweakens_most_effectively(And(supports(Sun_Tzu) == quick_victory, supports(Mao_Zedong) == protracted_warfare)) ::: (A)\nweakens_most_effectively(And(supports(Sun_Tzu) == quick_victory, supports(Mao_Zedong) == protracted_warfare)) ::: (B)\nweakens_most_effectively(And(supports(Sun_Tzu) == quick_victory, supports(Mao_Zedong) == protracted_warfare)) ::: (C)\nweakens_most_effectively(And(supports(Sun_Tzu) == quick_victory, supports(Mao_Zedong) == protracted_warfare)) ::: (D)"
    ]
  },
  {
    "id": 354,
    "context": "American shooter Emmons is a 'bad luck' on the field.In the 2004 Athens Olympics men's rifle final, he led his opponent by 3 rounds and hit the last bullet on the target of another person, losing the medal he was about to get.However, he was comforted by the beautiful Czech girl Katerina and finally won love.This is really a saying? if the field is frustrated, then the love field is proud.",
    "question": "If this saying is true, which of the following statements must be false?",
    "answer": "B",
    "options": [
      "A.Both the court and the love field are proud.",
      "B.Both the field and the love are frustrated.",
      "C.Only when you are disappointed in the game will you be complacent.",
      "D.Only when the love field is frustrated will the field be proud."
    ],
    "raw_logic_programs": [
      "# Declarations\nfields = EnumSort([field, love])\noutcomes = EnumSort([proud, frustrated])\nresult = Function([fields] -> [outcomes])\n\n# Constraints\nImplies(result(field) == frustrated, result(love) == proud) ::: if the field is frustrated, then the love field is proud\n\n# Options\nQuestion ::: If this saying is true, which of the following statements must be false?\nis_false(And(result(field) == proud, result(love) == proud)) ::: (A) Both the court and the love field are proud.\nis_false(And(result(field) == frustrated, result(love) == frustrated)) ::: (B) Both the field and the love are frustrated.\nis_false(Implies(result(field) == frustrated, result(love) == proud)) ::: (C) Only when you are disappointed in the game will you be complacent.\nis_false(Implies(result(love) == frustrated, result(field) == proud)) ::: (D) Only when the love field is frustrated will the field be proud."
    ]
  },
  {
    "id": 355,
    "context": "The municipal government 's bidding policy for post-earthquake restoration and reconstruction is that the lowest bidder can win the bid.Some people believe that if this policy is implemented, some successful bidders will cut corners and cut corners, resulting in poor project quality.This will not only cause the consequences of additional construction funds, but also endanger the lives of the people.If we want to put an end to the 'bean curd dregs project', we must have the wrong policy of a coup.",
    "question": "If any of the following statements are true, can the above argument be weakened most effectively?",
    "answer": "C",
    "options": [
      "A.The need to rebuild damaged buildings can provide many employment opportunities for the city 's residents.",
      "B.The city 's construction contracts rarely specify the quality of construction materials and the requirements for employees.",
      "C.The policy also includes? Only those construction companies whose bids meet strict quality standards and meet certain qualifications can bid.",
      "D.If the building design is flawed, even buildings built with the best building materials and first-class engineering quality are also dangerous."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nargument = Function([statements] -> [bool])\n\n# Constraints\nargument(A) ::: The need to rebuild damaged buildings can provide many employment opportunities for the city's residents.\nargument(B) ::: The city's construction contracts rarely specify the quality of construction materials and the requirements for employees.\nargument(C) ::: The policy also includes that only those construction companies whose bids meet strict quality standards and meet certain qualifications can bid.\nargument(D) ::: If the building design is flawed, even buildings built with the best building materials and first-class engineering quality are also dangerous.\n\n# Options\nQuestion ::: If any of the following statements are true, can the above argument be weakened most effectively?\nis_weakened(argument(C)) ::: (C)"
    ]
  },
  {
    "id": 356,
    "context": "Words such as 'kindness' and 'awesome' can cause people to respond positively; while words such as 'evil' and 'nausea' can cause people to react negatively.Recent psychology experiments have shown that many meaningless words can also cause people to respond positively or negatively.This shows that people's reactions to words are not only affected by the meaning of words, but also by the pronunciation of words.",
    "question": "A lot of meaningless words can cause people to respond positively or negatively.' Which of the following roles does this assertion play in the above argument?",
    "answer": "D",
    "options": [
      "A.It is a premise to support the conclusion that 'all words can cause people to respond positively or negatively.'",
      "B.It is a conclusion, and the only evidence that supports it is the claim that people 's reactions to words are only affected by the meaning and pronunciation of words.",
      "C.It is a conclusion that is partially supported by meaningful words that can elicit positive or negative reactions.",
      "D.It is a premise to support the conclusion that 'people's reactions to words are affected not only by the meaning of the words, but also by the pronunciation of the words'."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([meaningful_words_positive_negative, meaningless_words_positive_negative, reactions_affected_by_meaning_and_pronunciation])\nroles = EnumSort([premise, conclusion])\nplays_role = Function([statements] -> [roles])\n\n# Constraints\nplays_role(meaningful_words_positive_negative) == premise ::: Words such as 'kindness' and 'awesome' can cause people to respond positively; while words such as 'evil' and 'nausea' can cause people to react negatively.\nplays_role(meaningless_words_positive_negative) == conclusion ::: Recent psychology experiments have shown that many meaningless words can also cause people to respond positively or negatively.\nplays_role(reactions_affected_by_meaning_and_pronunciation) == conclusion ::: This shows that people's reactions to words are not only affected by the meaning of words, but also by the pronunciation of words.\n\n# Options\nQuestion ::: Which of the following roles does this assertion play in the above argument?\nis_role(meaningless_words_positive_negative, premise) ::: (A) It is a premise to support the conclusion that 'all words can cause people to respond positively or negatively.'\nis_role(meaningless_words_positive_negative, conclusion) ::: (B) It is a conclusion, and the only evidence that supports it is the claim that people's reactions to words are only affected by the meaning and pronunciation of words.\nis_role(meaningless_words_positive_negative, conclusion) ::: (C) It is a conclusion that is partially supported by meaningful words that can elicit positive or negative reactions.\nis_role(meaningless_words_positive_negative, premise) ::: (D) It is a premise to support the conclusion that 'people's reactions to words are affected not only by the meaning of the words, but also by the pronunciation of the words'."
    ]
  },
  {
    "id": 357,
    "context": "The combat effectiveness of the army depends on weaponry and personnel quality.Georgia, which suffered heavy losses in the conflict with the Russian army in 2008, is preparing to spend $ 9 billion to re-arm its army with modern equipment.Although the United States strongly supports Georgia 's military strengthening, it is not prepared to sell advanced weapons to it.",
    "question": "The following statements, except which one, can explain this American approach?",
    "answer": "A",
    "options": [
      "A.Russia is ready to demand that the Security Council impose an arms embargo on Georgia.",
      "B.The Georgian army has prepared for this war for 3 years, and despite being fully equipped with American equipment, it is vulnerable.",
      "C.The planes of the Georgian army gave up taking off hours after the war, and the patrol boat was directly captured by the Russian army and transported away by truck.",
      "D.A senior general of the Georgian army escaped and abandoned the troops."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nexplain_approach = Function([statements] -> [bool])\n\n# Constraints\n# The problem does not provide explicit constraints, but we can infer that the statements should relate to the U.S. decision not to sell advanced weapons to Georgia.\n\n# Options\nQuestion ::: The following statements, except which one, can explain this American approach?\nis_exception(explain_approach(A)) ::: (A)\nis_exception(explain_approach(B)) ::: (B)\nis_exception(explain_approach(C)) ::: (C)\nis_exception(explain_approach(D)) ::: (D)\n\n# Explanation:\n# The task is to determine which statement does not explain the U.S. approach. The logic program is set up to identify the statement that is an exception to explaining the approach."
    ]
  },
  {
    "id": 358,
    "context": "In recent years, there has been a popular opinion in Western public opinion that the huge demand from China has caused the prices of oil, grain, steel and other raw materials to skyrocket.",
    "question": "If any of the following statements is true, can the biggest question be raised?",
    "answer": "B",
    "options": [
      "A.Due to the promotion of agricultural technology, especially hybrid rice, China has greatly increased crop yields.",
      "B.From July to September this year, demand from China is still growing, but oil prices in the international market have fallen by nearly a third.",
      "C.Large investors in the United States are hoarding and buying large quantities of petroleum products and petroleum futures.",
      "D.With the development of India's economy, its people's demand for food products is increasing."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([China_demand, agricultural_technology, oil_price_fall, US_investors, India_demand])\ncauses_price_skyrocket = Function([factors] -> [bool])\n\n# Constraints\ncauses_price_skyrocket(China_demand) ::: The popular opinion is that the huge demand from China has caused the prices to skyrocket.\n\n# Options\nQuestion ::: If any of the following statements is true, can the biggest question be raised?\nis_question_raised(Not(causes_price_skyrocket(China_demand)) | causes_price_skyrocket(agricultural_technology)) ::: (A)\nis_question_raised(Not(causes_price_skyrocket(China_demand)) | causes_price_skyrocket(oil_price_fall)) ::: (B)\nis_question_raised(Not(causes_price_skyrocket(China_demand)) | causes_price_skyrocket(US_investors)) ::: (C)\nis_question_raised(Not(causes_price_skyrocket(China_demand)) | causes_price_skyrocket(India_demand)) ::: (D)"
    ]
  },
  {
    "id": 359,
    "context": "Dai Wei had almost no stomach problems after eating dairy products.Just because he occasionally had stomach pains after eating dairy products, it was concluded that he had no allergy to dairy products.",
    "question": "Which argument is most similar to the reasoning above?",
    "answer": "A",
    "options": [
      "A.Dogs and cats are sometimes anxious before the earthquake, so there is no reason to conclude that dogs and cats have the ability to sense earthquakes in advance, because in most cases, there is no earthquake after dogs and cats are anxious.",
      "B.Although many people lose weight through short-term diets, it is unreasonable to believe that such diets are effective for weight loss.",
      "C.Most hypotheses have a large number of supporting examples before they become scientific theories.It is unreasonable to think that a hypothesis is a scientific theory just because it is successfully applied to a few cases.",
      "D.Although many chain stores are more profitable, it is unreasonable to attribute the success of this business model to this business model, because only well-funded businesses can do so."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\nreasoning(A) == (And(Exists([e:events], And(dogs_and_cats_anxious(e), earthquake(e))), ForAll([e:events], Implies(dogs_and_cats_anxious(e), Not(earthquake(e)))))) ::: Dogs and cats are sometimes anxious before the earthquake, so there is no reason to conclude that dogs and cats have the ability to sense earthquakes in advance, because in most cases, there is no earthquake after dogs and cats are anxious.\nreasoning(B) == (And(Exists([p:people], And(short_term_diet(p), weight_loss(p))), ForAll([p:people], Implies(short_term_diet(p), Not(effective_weight_loss(p)))))) ::: Although many people lose weight through short-term diets, it is unreasonable to believe that such diets are effective for weight loss.\nreasoning(C) == (And(Exists([h:hypotheses], And(supporting_examples(h), scientific_theory(h))), ForAll([h:hypotheses], Implies(supporting_examples(h), Not(scientific_theory(h)))))) ::: Most hypotheses have a large number of supporting examples before they become scientific theories. It is unreasonable to think that a hypothesis is a scientific theory just because it is successfully applied to a few cases.\nreasoning(D) == (And(Exists([b:businesses], And(chain_store(b), profitable(b))), ForAll([b:businesses], Implies(chain_store(b), Not(successful_business_model(b)))))) ::: Although many chain stores are more profitable, it is unreasonable to attribute the success of this business model to this business model, because only well-funded businesses can do so.\n\n# Options\nQuestion ::: Which argument is most similar to the reasoning above?\nis_similar(reasoning(A)) ::: (A)\nis_similar(reasoning(B)) ::: (B)\nis_similar(reasoning(C)) ::: (C)\nis_similar(reasoning(D)) ::: (D)"
    ]
  },
  {
    "id": 360,
    "context": "The formation of the platoon pays attention to the shape and the situation, which is described as 'cooperation of troops'.The form is a ready-made medicine, which is placed in a pharmacy and can be purchased directly.It is a prescription made by an experienced doctor for the patient.According to the severity of the condition, the dosage is used to increase or decrease the odor.The charge is also focused on shape and potential, using boxing as an example.The shape is the height, weight and routine of the boxer; the potential is Sanda, which adapts randomly according to the opponent's moves.",
    "question": "Which of the following statements is the most accurate summary of the features of form and potential mentioned above?",
    "answer": "D",
    "options": [
      "A.Fighting with soldiers is like playing chess.It is a form of playing chess and a game.The potential is to take the opponent's move and break the opponent's move.The faster the response, the better.",
      "B.Practicing medicine is to save people, and using troops to kill people is very different.However, there are similarities between platoon formations and the deployment of pharmacies.",
      "C.The shape is like standing on a thousand-year-old mountain, the deeper the storage, the more fierce it is; the potential is like rolling a round stone on the top of the ten thousand yuan, the more dangerous the mountain, the faster the stone.",
      "D.Shape is something that is visible, static, and set in advance; potential is something that is invisible, dynamic, and set for the enemy."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([form, potential])\nfeatures = EnumSort([visible, invisible, static, dynamic, set_in_advance, set_for_enemy])\ndescribes = Function([concepts] -> [features])\n\n# Constraints\ndescribes(form) == [visible, static, set_in_advance] ::: Form is something that is visible, static, and set in advance\ndescribes(potential) == [invisible, dynamic, set_for_enemy] ::: Potential is something that is invisible, dynamic, and set for the enemy\n\n# Options\nQuestion ::: Which of the following statements is the most accurate summary of the features of form and potential mentioned above?\nis_most_accurate(describes(form) == [visible, static, set_in_advance] and describes(potential) == [invisible, dynamic, set_for_enemy]) ::: (D)"
    ]
  },
  {
    "id": 361,
    "context": "The United States plans to establish a radar base in the Czech Republic, and it will form a missile shield with the missile base in Poland to deal with Iranian missile attacks.To this end, the United States and the Czech Republic signed two military agreements in 2008.Czech officials believe that the signing of the agreement will enable the Czech alliance with NATO allies to ensure the safety of the country with the best technical equipment.",
    "question": "If which of the following statements is true, can the Czech official's assertion be questioned the most?",
    "answer": "D",
    "options": [
      "A.According to the agreement between the Czech Republic and the United States, the United States has the right to direct and manage its bases in the Czech Republic.",
      "B.Most people in the Czech Republic opposed the establishment of an anti-missile radar base by the United States in the Czech Republic.",
      "C.Most people in the Czech Republic believe that the establishment of an anti-missile radar base by the United States in the Czech Republic will seriously damage the safety and interests of local people.",
      "D.The day the Czech Republic and the United States signed an agreement on radar bases, Russia claimed that Russian missiles were aimed at the base."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([United_States, Czech_Republic, Poland, Iran, Russia])\nagreements = EnumSort([military_agreement_2008])\nbases = EnumSort([radar_base_Czech, missile_base_Poland])\nassertions = EnumSort([Czech_official_assertion])\nstatements = EnumSort([A, B, C, D])\nquestioned = Function([assertions, statements] -> [bool])\n\n# Constraints\nExists([a:agreements], And(signed(a, United_States, Czech_Republic), year(a) == 2008)) ::: The United States and the Czech Republic signed two military agreements in 2008\nExists([b:bases], And(established(b, Czech_Republic), part_of_missile_shield(b, missile_base_Poland))) ::: The United States plans to establish a radar base in the Czech Republic, forming a missile shield with the missile base in Poland\nbelieves(Czech_officials, ensures_safety(Czech_Republic, NATO_alliance)) ::: Czech officials believe that the signing of the agreement will enable the Czech alliance with NATO allies to ensure the safety of the country\n\n# Options\nQuestion ::: If which of the following statements is true, can the Czech official's assertion be questioned the most?\nquestioned(Czech_official_assertion, A) ::: (A) According to the agreement between the Czech Republic and the United States, the United States has the right to direct and manage its bases in the Czech Republic\nquestioned(Czech_official_assertion, B) ::: (B) Most people in the Czech Republic opposed the establishment of an anti-missile radar base by the United States in the Czech Republic\nquestioned(Czech_official_assertion, C) ::: (C) Most people in the Czech Republic believe that the establishment of an anti-missile radar base by the United States in the Czech Republic will seriously damage the safety and interests of local people\nquestioned(Czech_official_assertion, D) ::: (D) The day the Czech Republic and the United States signed an agreement on radar bases, Russia claimed that Russian missiles were aimed at the base"
    ]
  },
  {
    "id": 362,
    "context": "After the Wenchuan Earthquake in Sichuan, Chinese private entrepreneur Chen Guangzou took the lead in rushing to the disaster-stricken area with people and equipment to carry out private rescue.He once said? 'If you have a glass of water, you can enjoy it alone; if you have a bucket of water, you can store it at home; if you have a river, you have to learn to share it with others.'",
    "question": "Which of the following statements has the most serious inconsistency with Chen Guangfang 's assertion?",
    "answer": "B",
    "options": [
      "A.If you do n't have a river, you do n't have to learn to share with others.",
      "B.I do own a river, but it is mine, why should I learn to share it with others.",
      "C.Or you do n't have a river, or you have to learn to share with others.",
      "D.If you do n't have a bucket of water, you wo n't own a river."
    ],
    "raw_logic_programs": [
      "# Declarations\nresources = EnumSort([glass_of_water, bucket_of_water, river])\nactions = EnumSort([enjoy_alone, store_at_home, share_with_others])\nhas_resource = Function([resources] -> [bool])\naction_taken = Function([resources] -> [actions])\n\n# Constraints\nImplies(has_resource(glass_of_water), action_taken(glass_of_water) == enjoy_alone) ::: If you have a glass of water, you can enjoy it alone\nImplies(has_resource(bucket_of_water), action_taken(bucket_of_water) == store_at_home) ::: If you have a bucket of water, you can store it at home\nImplies(has_resource(river), action_taken(river) == share_with_others) ::: If you have a river, you have to learn to share it with others\n\n# Options\nQuestion ::: Which of the following statements has the most serious inconsistency with Chen Guangfang's assertion?\nis_inconsistent(Implies(Not(has_resource(river)), Not(action_taken(river) == share_with_others))) ::: (A)\nis_inconsistent(And(has_resource(river), Not(action_taken(river) == share_with_others))) ::: (B)\nis_inconsistent(Or(Not(has_resource(river)), action_taken(river) == share_with_others)) ::: (C)\nis_inconsistent(Implies(Not(has_resource(bucket_of_water)), Not(has_resource(river)))) ::: (D)"
    ]
  },
  {
    "id": 363,
    "context": "For those who want to exercise, multiple physical exercises alternately perform better than a single exercise.The exercise of a single project makes a small number of people develop muscles, and multiple physical exercises can alternately develop the muscle groups of the human body.The latter consumes more calories than the former.",
    "question": "If any of the following statements is true, is it most advantageous to strengthen the above argument?",
    "answer": "A",
    "options": [
      "A.Among healthy people, health improvement is proportional to calorie consumption.",
      "B.Exercise is the most effective way to exercise.",
      "C.Those who recover from serious illnesses are not suitable for intense single physical exercise.",
      "D.It is much more difficult to fully develop the muscle groups of the human body than to promote the development of a few muscles."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([healthy, recovering])\nexercise_types = EnumSort([single, multiple])\nbenefits = EnumSort([muscle_development, calorie_consumption])\nexercise_effect = Function([exercise_types, benefits] -> [bool])\nhealth_improvement = Function([people, benefits] -> [bool])\n\n# Constraints\nexercise_effect(single, muscle_development) == False ::: The exercise of a single project makes a small number of people develop muscles\nexercise_effect(multiple, muscle_development) == True ::: Multiple physical exercises can alternately develop the muscle groups of the human body\nexercise_effect(multiple, calorie_consumption) == True ::: Multiple physical exercises consume more calories than single exercises\n\n# Options\nQuestion ::: If any of the following statements is true, is it most advantageous to strengthen the above argument?\nImplies(health_improvement(healthy, calorie_consumption), health_improvement(healthy, muscle_development)) ::: (A) Among healthy people, health improvement is proportional to calorie consumption\nImplies(exercise_effect(multiple, muscle_development), exercise_effect(multiple, calorie_consumption)) ::: (B) Exercise is the most effective way to exercise\nImplies(Not(health_improvement(recovering, muscle_development)), Not(exercise_effect(single, muscle_development))) ::: (C) Those who recover from serious illnesses are not suitable for intense single physical exercise\nImplies(exercise_effect(multiple, muscle_development), Not(exercise_effect(single, muscle_development))) ::: (D) It is much more difficult to fully develop the muscle groups of the human body than to promote the development of a few muscles"
    ]
  },
  {
    "id": 364,
    "context": "Those who protect freedom of thought argue that freedom of thought is a prerequisite for intellectual progress.Because freedom of thought allows thinkers to follow their own ideas regardless of who they offend and lead them in.However, a person must dig out sufficient connections related to certain ideas in order to promote intellectual progress.To this end, thinkers need to think about the law.Therefore, the argument about freedom of thought is untenable.",
    "question": "If any of the following statements, can the above conclusion be reached logically?",
    "answer": "A",
    "options": [
      "A.In societies that protect freedom of thought, thinkers always lack the rules of thinking.",
      "B.The thinker limits his line of thought to a certain orthodox thought, which will hinder their intellectual progress.",
      "C.Freedom of thought can trigger creativity, and creativity can help discover truth.",
      "D.Without the law of thought, thinkers cannot have freedom of thought."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nconclusion = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], conclusion(s) == False) ::: The argument about freedom of thought is untenable\n\n# Options\nQuestion ::: If any of the following statements, can the above conclusion be reached logically?\nis_valid(conclusion(A)) ::: (A) In societies that protect freedom of thought, thinkers always lack the rules of thinking.\nis_valid(conclusion(B)) ::: (B) The thinker limits his line of thought to a certain orthodox thought, which will hinder their intellectual progress.\nis_valid(conclusion(C)) ::: (C) Freedom of thought can trigger creativity, and creativity can help discover truth.\nis_valid(conclusion(D)) ::: (D) Without the law of thought, thinkers cannot have freedom of thought."
    ]
  },
  {
    "id": 365,
    "context": "In the years before the hosting of the Olympic Games, the host country of the Olympic Games had to carry out a large amount of infrastructure construction and investment to bring about economic growth.In the year of the Olympic Games, residents' consumption and tourism increased significantly, which also boosted economic growth.But these factors disappeared after the Olympics, making the host country's economy in recession.South Korea, Spain, Greece and other countries all experienced economic decline after the Olympics.Therefore, China will also experience an economic recession after the 2008 Olympic Games.",
    "question": "If the following statement is true, in addition to which statement, can you question the conclusion of the above argument?",
    "answer": "D",
    "options": [
      "A.The role of the Olympic Games in promoting China's economic growth is about 0.2% -0.4%.",
      "B.Neither the 1984 Los Angeles Olympics nor the 1996 Atlanta Olympics caused the US economy to decline.",
      "C.China's urbanization process is at an accelerated stage, and urban construction will effectively promote China's economic development in the next few decades.",
      "D.The stadium built for the Olympic Games will become a place for ordinary citizens to exercise and entertain after the Olympic Games."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([South_Korea, Spain, Greece, China, USA])\nevents = EnumSort([Olympics])\neconomic_states = EnumSort([growth, recession])\nhosted = Function([countries, events] -> [bool])\neconomic_effect = Function([countries, events] -> [economic_states])\n\n# Constraints\nForAll([c:countries], Implies(hosted(c, Olympics), economic_effect(c, Olympics) == recession)) ::: South Korea, Spain, Greece and other countries all experienced economic decline after the Olympics\nhosted(China, Olympics) ::: China hosted the 2008 Olympic Games\neconomic_effect(China, Olympics) == recession ::: Therefore, China will also experience an economic recession after the 2008 Olympic Games\n\n# Options\nQuestion ::: If the following statement is true, in addition to which statement, can you question the conclusion of the above argument?\nis_questionable(Implies(hosted(USA, Olympics), economic_effect(USA, Olympics) == recession)) ::: (A)\nis_questionable(Not(Implies(hosted(USA, Olympics), economic_effect(USA, Olympics) == recession))) ::: (B)\nis_questionable(Exists([c:countries], economic_effect(c, Olympics) == growth)) ::: (C)\nis_questionable(Exists([c:countries], economic_effect(c, Olympics) == growth)) ::: (D)"
    ]
  },
  {
    "id": 366,
    "context": "The crime of unclear sources of large amounts of property is objectively conducive to the protection of embezzlement and bribery.Once a huge amount of property is placed in a basket of 'unknown origin', its source does not have to be identified one by one.How forgiving is it for those who embezzle and accept bribes! Moreover, the crime gave judicial personnel too much 'discretion' and 'compromise space'.Therefore, the source of huge amounts of property should be treated as corruption and bribery.",
    "question": "Which of the following statements does not support the above argument?",
    "answer": "C",
    "options": [
      "A.Corrupt officials know that once their embezzled and bribery property is identified as 'unidentified sources', the punishment can be reduced; China's existing investigative methods are backward, and confessors may incur more severe punishment than those who do not recognize the account.",
      "B.I would like to ask who doesn't know where the property in their family comes from? The crime of huge property of unknown origin is conducive to cracking down on corrupt officials 'from light to light', but is not conducive to social justice.",
      "C.'Presumption of innocence' and 'right to silence' are all basic concepts of modern rule of law.If the accused is not proven guilty, he should be deemed innocent.",
      "D.The laws of Singapore, Brunei and India all stipulate that if the source of civil servants 'property is unknown, corruption and bribery should be used."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_argument = Function([statements] -> [bool])\n\n# Constraints\nsupports_argument(A) ::: Corrupt officials know that once their embezzled and bribery property is identified as 'unidentified sources', the punishment can be reduced; China's existing investigative methods are backward, and confessors may incur more severe punishment than those who do not recognize the account.\nsupports_argument(B) ::: I would like to ask who doesn't know where the property in their family comes from? The crime of huge property of unknown origin is conducive to cracking down on corrupt officials 'from light to light', but is not conducive to social justice.\nsupports_argument(D) ::: The laws of Singapore, Brunei and India all stipulate that if the source of civil servants 'property is unknown, corruption and bribery should be used.\n\n# Options\nQuestion ::: Which of the following statements does not support the above argument?\nis_not_supporting(supports_argument(C)) ::: (C) 'Presumption of innocence' and 'right to silence' are all basic concepts of modern rule of law. If the accused is not proven guilty, he should be deemed innocent."
    ]
  },
  {
    "id": 367,
    "context": "Cross-species studies of animal populations indicate that cubs isolated from their mothers within a month of birth often show strong aggressiveness.For example, when fighting for food and fighting for food, other cubs give up and they are still fighting.The hypothesis explaining this phenomenon is that the formation of aggressive aggression is due to the lack of social training led by the parents at the newborn stage.",
    "question": "If any of the following statements are true, can the above argument be strengthened most effectively?",
    "answer": "B",
    "options": [
      "A.The early antelopes isolated from their mothers showed great aggression during the conflict to establish their dominant position in the population.",
      "B.Chimpanzees who grew up in the social training environment of their parents were much less aggressive in mating conflicts than chimpanzees who did not grow up in this environment.",
      "C.Babies who are adopted in the first three months of life often appear aggressive during childhood.",
      "D.Many polar bears are more aggressive in food conflicts than in mating conflicts."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([cubs, antelopes, chimpanzees, babies, polar_bears])\nconditions = EnumSort([isolated, social_training, adopted])\nbehaviors = EnumSort([aggressive, less_aggressive])\nstudies = Function([species, conditions] -> [behaviors])\n\n# Constraints\nstudies(cubs, isolated) == aggressive ::: Cubs isolated from their mothers within a month of birth often show strong aggressiveness\nstudies(antelopes, isolated) == aggressive ::: The early antelopes isolated from their mothers showed great aggression during the conflict to establish their dominant position in the population\nstudies(chimpanzees, social_training) == less_aggressive ::: Chimpanzees who grew up in the social training environment of their parents were much less aggressive in mating conflicts\nstudies(babies, adopted) == aggressive ::: Babies who are adopted in the first three months of life often appear aggressive during childhood\n\n# Options\nQuestion ::: If any of the following statements are true, can the above argument be strengthened most effectively?\nis_strengthened(studies(antelopes, isolated) == aggressive) ::: (A)\nis_strengthened(studies(chimpanzees, social_training) == less_aggressive) ::: (B)\nis_strengthened(studies(babies, adopted) == aggressive) ::: (C)\nis_strengthened(studies(polar_bears, aggressive) == aggressive) ::: (D)"
    ]
  },
  {
    "id": 368,
    "context": "The only way economists distinguish normal products from low-end products is to see how consumers respond to changes in income.If people's income increases, the demand for something becomes smaller, and such a thing is a low-end product.Similarly, if people's incomes decrease, their demand for low-end products will increase.",
    "question": "Which of the following statements best matches the economist 's description of the difference between normal and low-grade products?",
    "answer": "A",
    "options": [
      "A.Poor students in the school often eat instant noodles, and they often go to restaurants after they find a job after graduation.For these students, instant noodles are inferior.",
      "B.In family life, as people's incomes decrease, the demand for table salt has not increased.There is no doubt that table salt is a low-grade product.",
      "C.In an increasingly aging community, the demand for gasoline is getting smaller and smaller, and the demand for home care services is growing.Compared with gasoline, home care services are inferior.",
      "D.When people's income increases, parents will buy a few more brand-name clothes for their children.When income decreases, they will buy less.Brand-name clothing is not a low-end product, nor a normal product, but a high-end product."
    ],
    "raw_logic_programs": [
      "# Declarations\nproducts = EnumSort([normal, low_end])\nincome_change = EnumSort([increase, decrease])\ndemand_change = EnumSort([increase, decrease, no_change])\nresponse = Function([products, income_change] -> [demand_change])\n\n# Constraints\nresponse(low_end, increase) == decrease ::: If people's income increases, the demand for a low-end product becomes smaller\nresponse(low_end, decrease) == increase ::: If people's incomes decrease, their demand for low-end products will increase\n\n# Options\nQuestion ::: Which of the following statements best matches the economist's description of the difference between normal and low-grade products?\nmatches_description(response(low_end, increase) == decrease) ::: (A) Poor students in the school often eat instant noodles, and they often go to restaurants after they find a job after graduation. For these students, instant noodles are inferior.\nmatches_description(response(low_end, decrease) == no_change) ::: (B) In family life, as people's incomes decrease, the demand for table salt has not increased. There is no doubt that table salt is a low-grade product.\nmatches_description(response(low_end, increase) == increase) ::: (C) In an increasingly aging community, the demand for gasoline is getting smaller and smaller, and the demand for home care services is growing. Compared with gasoline, home care services are inferior.\nmatches_description(response(normal, increase) == increase) ::: (D) When people's income increases, parents will buy a few more brand-name clothes for their children. When income decreases, they will buy less. Brand-name clothing is not a low-end product, nor a normal product, but a high-end product."
    ]
  },
  {
    "id": 369,
    "context": "Economist? Now the central government is considering the performance of local governments according to GDP indicators.To increase local GDP, large amounts of capital are required.Under the current system, local governments can only raise a lot of money by transferring land.If you want to auction land at a high price, house prices must be high, so local governments have a strong incentive to push up house prices.However, the central government has introduced a series of measures to stabilize housing prices.If the local government still vigorously pushes up housing prices, it may be punished by the central government.",
    "question": "Which of the following statements is the logical conclusion of the economist 's argument?",
    "answer": "D",
    "options": [
      "A.Under the current system, if the local government lowers housing prices, it will not be punished by the central government.",
      "B.Under the current system, if local governments do not pursue GDP performance, they will not vigorously push up housing prices.",
      "C.Under the current system, local governments will certainly not reduce housing prices.",
      "D.Under the current system, local governments may be punished by the central government or unable to improve their GDP performance."
    ],
    "raw_logic_programs": [
      "# Declarations\nlocal_government = EnumSort([pursue_GDP, not_pursue_GDP])\nhousing_prices = EnumSort([high, low])\ncentral_government = EnumSort([punish, not_punish])\nactions = Function([local_government, housing_prices] -> [central_government])\n\n# Constraints\nForAll([lg:local_government], actions(lg, high) == punish) ::: If the local government pushes up housing prices, it may be punished by the central government\nForAll([lg:local_government], actions(lg, low) == not_punish) ::: If the local government lowers housing prices, it will not be punished by the central government\nForAll([lg:local_government], Implies(lg == pursue_GDP, housing_prices == high)) ::: To increase GDP, local governments have an incentive to push up housing prices\n\n# Options\nQuestion ::: Which of the following statements is the logical conclusion of the economist's argument?\nis_valid(Implies(housing_prices == low, actions(pursue_GDP, low) == not_punish)) ::: (A)\nis_valid(Implies(local_government == not_pursue_GDP, housing_prices == low)) ::: (B)\nis_valid(Implies(local_government == pursue_GDP, housing_prices == high)) ::: (C)\nis_valid(Or(actions(pursue_GDP, high) == punish, actions(not_pursue_GDP, low) == not_punish)) ::: (D)"
    ]
  },
  {
    "id": 370,
    "context": "In recent years, experts have called for a ban on the addition of biphenyl compounds as oxytocin to animal feed, because this substance is harmful to humans.In the past ten years, it has been found that the residues of biphenyls in the feeds of many Dutch dairy cows raised by herders.",
    "question": "If which of the following statements is true, which strongly supports the expert's point of view?",
    "answer": "A",
    "options": [
      "A.In the past two years, the incidence of bladder cancer among Dutch dairy cow and dairy consumers has been particularly high.",
      "B.Biphenyl residues have been found in the blood and urine of many Dutch cows.",
      "C.The incidence of cancer in the dairy production areas of the Netherlands ranks first in the country.",
      "D.The infertility rate of Dutch cows is higher than the average of other cows."
    ],
    "raw_logic_programs": [
      "# Declarations\nsubstances = EnumSort([biphenyl_compounds])\neffects = EnumSort([harmful_to_humans, found_in_cows, high_cancer_incidence, high_infertility_rate])\nsupports = Function([effects] -> [bool])\n\n# Constraints\nsupports(harmful_to_humans) ::: experts have called for a ban on the addition of biphenyl compounds as oxytocin to animal feed, because this substance is harmful to humans\nsupports(found_in_cows) ::: residues of biphenyls have been found in the feeds of many Dutch dairy cows\n\n# Options\nQuestion ::: If which of the following statements is true, which strongly supports the expert's point of view?\nis_strong_support(supports(high_cancer_incidence)) ::: (A) In the past two years, the incidence of bladder cancer among Dutch dairy cow and dairy consumers has been particularly high.\nis_strong_support(supports(found_in_cows)) ::: (B) Biphenyl residues have been found in the blood and urine of many Dutch cows.\nis_strong_support(supports(high_cancer_incidence)) ::: (C) The incidence of cancer in the dairy production areas of the Netherlands ranks first in the country.\nis_strong_support(supports(high_infertility_rate)) ::: (D) The infertility rate of Dutch cows is higher than the average of other cows."
    ]
  },
  {
    "id": 371,
    "context": "twenty one.This year, China's increasing investment in Africa has caused uneasiness in Western countries, and criticisms such as 'China's plundering of African resources' are endless.In response, a Chinese official retorted? 'One of the most important grounds for criticism is that China takes oil from Africa, but last year, China exported only 8.7% of all oil exported from Africa, and Europe accounted for 36% of the US 33%.If imports were 8.7 % Are suspected of plundering resources, so how should 36% and 33% look at it? '",
    "question": "Adding the following statement, this official can come to the conclusion that 'China has not plundered African resources'?",
    "answer": "B",
    "options": [
      "A.Europe and the United States are suspected of plundering African resources.",
      "B.Europe and the United States did not plunder African resources.",
      "C.The demand for raw materials in countries such as China and India has increased the prices of raw materials and brought more income to African countries.",
      "D.African countries have the right to decide how to handle their own resources."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([China, Europe, US])\nexports = Function([countries] -> [float])\nplundering = Function([countries] -> [bool])\n\n# Constraints\nexports(China) == 8.7 ::: China exported only 8.7% of all oil exported from Africa\nexports(Europe) == 36 ::: Europe accounted for 36% of the oil exported from Africa\nexports(US) == 33 ::: US accounted for 33% of the oil exported from Africa\n\n# Options\nQuestion ::: Adding the following statement, this official can come to the conclusion that 'China has not plundered African resources'?\nImplies(plundering(China), plundering(Europe) & plundering(US)) ::: (A) Europe and the United States are suspected of plundering African resources.\nNot(plundering(Europe) | plundering(US)) ::: (B) Europe and the United States did not plunder African resources.\nTrue ::: (C) The demand for raw materials in countries such as China and India has increased the prices of raw materials and brought more income to African countries.\nTrue ::: (D) African countries have the right to decide how to handle their own resources."
    ]
  },
  {
    "id": 372,
    "context": "A chemical plant that produces an insecticide that can make small mammals such as otters infertile.After the factory started to operate, the incidence of infertility of an otter living in a nearby river increased rapidly.Therefore, this factory must have polluted the river water when producing pesticides.",
    "question": "Which of the following statements contains the reasoning errors most similar to the ones above?",
    "answer": "A",
    "options": [
      "A.A low-calcium diet can lead to decreased egg production in poultry.After the chickens on a farm were released for food in spring, their egg production decreased significantly.Therefore, the calcium content of the food they find and ingest must be very low.",
      "B.The bacteria that cause tetanus survive in the digestive tract of horses.Tetanus is a highly contagious disease.Therefore, horses must be more susceptible to tetanus than most other animals.",
      "C.Malnourished animals are easily infected with diseases, and animals in big city zoos are not malnourished.Therefore, they are definitely not easily infected.",
      "D.The ape is characterized by a reversed thumb and no tail.Recently, a fossil remnant of an unknown animal has been discovered.Because this animal has a reversible thumb, it must be an ape."
    ],
    "raw_logic_programs": [
      "# Declarations\nscenarios = EnumSort([chemical_plant, low_calcium_diet, tetanus_bacteria, malnourished_animals, ape_characteristic])\nreasoning_errors = Function([scenarios] -> [bool])\n\n# Constraints\nreasoning_errors(chemical_plant) ::: The chemical plant scenario contains a reasoning error based on correlation implying causation.\n\n# Options\nQuestion ::: Which of the following statements contains the reasoning errors most similar to the ones above?\nis_similar(reasoning_errors(low_calcium_diet)) ::: (A)\nis_similar(reasoning_errors(tetanus_bacteria)) ::: (B)\nis_similar(reasoning_errors(malnourished_animals)) ::: (C)\nis_similar(reasoning_errors(ape_characteristic)) ::: (D)"
    ]
  },
  {
    "id": 373,
    "context": "Because the photo is light, the object is printed on the film.Therefore, in a sense, every photo is true.However, the use of photos to express things is always different from the things themselves.Photos cannot show complete authenticity.In this sense, it is fake.Therefore, just one photo cannot confirm anything.",
    "question": "Which of the following statements is the assumption that led to the above conclusion?",
    "answer": "B",
    "options": [
      "A.Complete authenticity is unknowable.",
      "B.Anything that cannot show complete authenticity cannot constitute final evidence.",
      "C.If there is other evidence indicating the authenticity of the shooting site, you can use the photo as auxiliary evidence.",
      "D.The photos of the South China Tiger taken by Zhou cannot be used as evidence of the existence of the South China Tiger in Shaanxi."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nassumption = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], Or(s == A, s == B, s == C, s == D)) ::: Each statement is one of the given choices\n\n# Options\nQuestion ::: Which of the following statements is the assumption that led to the above conclusion?\nis_assumption(assumption(A)) ::: (A)\nis_assumption(assumption(B)) ::: (B)\nis_assumption(assumption(C)) ::: (C)\nis_assumption(assumption(D)) ::: (D)"
    ]
  },
  {
    "id": 374,
    "context": "A family has four cats, one of them steals the fish from his family.The host interrogated them, and only one cat told the truth.The four cats answered as follows? A? 'B is a fish thief.' B? 'C is a fish thief.' C? 'A or B is a fish thief.' D? 'B or C is a fish thief.' .'",
    "question": "Based on the above statement, please determine which of the following statements is false?",
    "answer": "A",
    "options": [
      "A.A is not a fish thief.",
      "B.B is not a fish thief.",
      "C.C speak the truth.",
      "D.Ding tells lies."
    ],
    "raw_logic_programs": [
      "# Declarations\ncats = EnumSort([A, B, C, D])\nthief = Function([cats] -> [bool])\ntruth_teller = Function([cats] -> [bool])\n\n# Constraints\nExists([c:cats], And(truth_teller(c), ForAll([other:cats], Implies(other != c, Not(truth_teller(other)))))) ::: Only one cat told the truth\nForAll([c:cats], Implies(truth_teller(c), thief(c) == (c == A))) ::: A: 'B is a fish thief.'\nForAll([c:cats], Implies(truth_teller(c), thief(c) == (c == B))) ::: B: 'C is a fish thief.'\nForAll([c:cats], Implies(truth_teller(c), Or(thief(A), thief(B)))) ::: C: 'A or B is a fish thief.'\nForAll([c:cats], Implies(truth_teller(c), Or(thief(B), thief(C)))) ::: D: 'B or C is a fish thief.'\n\n# Options\nQuestion ::: Based on the above statement, please determine which of the following statements is false?\nis_false(Not(thief(A))) ::: (A)\nis_false(Not(thief(B))) ::: (B)\nis_false(truth_teller(C)) ::: (C)\nis_false(Not(truth_teller(D))) ::: (D)"
    ]
  },
  {
    "id": 375,
    "context": "Research shows that in university classrooms, 90% of people with severe insomnia often work until 2 am.Zhang Hong is a university teacher and often works until 2 am, so Zhang Hong is likely to be a severe insomniac.",
    "question": "Which of the following statements most accurately indicates the error in the above reasoning?",
    "answer": "A",
    "options": [
      "A.It relies on an unconfirmed assumption? 90% of university teachers who often work until 2am are severe insomniacs.",
      "B.It does not take this situation into consideration? Zhang Hong may belong to those 10% of people who work regularly until 2am without suffering from severe insomnia.",
      "C.It does not take into account this situation? In addition to working regularly until 2 am, there are other causes of severe insomnia for university teachers.",
      "D.It relies on an unconfirmed hypothesis? Working regularly until 2 am is the only reason people suffer from severe insomnia."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Zhang_Hong])\nconditions = EnumSort([severe_insomniac, works_until_2am])\nprobability = Function([conditions] -> [float])\n\n# Constraints\nprobability(severe_insomniac) == 0.9 ::: 90% of people with severe insomnia often work until 2 am\nprobability(works_until_2am) == 1.0 ::: Zhang Hong often works until 2 am\n\n# Options\nQuestion ::: Which of the following statements most accurately indicates the error in the above reasoning?\nis_error(A) ::: It relies on an unconfirmed assumption: 90% of university teachers who often work until 2am are severe insomniacs.\nis_error(B) ::: It does not take this situation into consideration: Zhang Hong may belong to those 10% of people who work regularly until 2am without suffering from severe insomnia.\nis_error(C) ::: It does not take into account this situation: In addition to working regularly until 2 am, there are other causes of severe insomnia for university teachers.\nis_error(D) ::: It relies on an unconfirmed hypothesis: Working regularly until 2 am is the only reason people suffer from severe insomnia."
    ]
  },
  {
    "id": 376,
    "context": "Pollution problems caused by garbage exudates are most severe in countries with a per capita output value of between US $ 4,000 and US $ 5,000 per year, and relatively poor or wealthy countries are not as severe.At the initial stage of industrial development, the pollution problem is relatively serious.When industrial development can create enough means to deal with such problems, the pollution problem will be reduced.At present, the per capita output value of Country X is $ 5,000 per year.In the next few years, pollution caused by garbage exudates in Country X will gradually decrease.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "C",
    "options": [
      "A.In the next few years, country X will develop a fine system for illegal waste disposal.",
      "B.Over the next few years, the countries surrounding Country X will reduce the emissions of air and water pollutants.",
      "C.In the next few years, the industrial development of country X will grow.",
      "D.In the next few years, the industrialization process in country X will be affected by pollution control issues."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([CountryX])\noutput_value = Function([countries] -> [int])\npollution_severity = Function([countries] -> [bool])\nindustrial_development = Function([countries] -> [bool])\n\n# Constraints\noutput_value(CountryX) == 5000 ::: At present, the per capita output value of Country X is $ 5,000 per year\npollution_severity(CountryX) == True ::: Pollution problems are most severe in countries with a per capita output value of between US $ 4,000 and US $ 5,000 per year\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(industrial_development(CountryX) == True) ::: (C) In the next few years, the industrial development of country X will grow"
    ]
  },
  {
    "id": 377,
    "context": "In the past 12 months, the Shenzhen property market has experienced a thrilling decline.The average price of the property market has plummeted by 36%.If you count the crazy rise in the previous 18 months, the Shenzhen property market has been carrying Various people experienced a roller coaster-like dizziness.No one knows where the express train ends, and certainly no one knows how to get off.",
    "question": "If the above statement is true, which of the following statements must be false?",
    "answer": "B",
    "options": [
      "A.No one knows where the express train ends, and no one knows how to get off.",
      "B.Some people know where the express train ends, but all people do n't know how to get off.",
      "C.Some people do n't know where the express train ends, and some people do n't know how to get off.",
      "D.No one knows where the express train ends, and some people do n't know how to get off."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, person3, ...])  # Assume a finite set of people\nknows_end = Function([people] -> [bool])  # Whether a person knows where the express train ends\nknows_exit = Function([people] -> [bool])  # Whether a person knows how to get off\n\n# Constraints\nForAll([p:people], Not(knows_end(p))) ::: No one knows where the express train ends\nForAll([p:people], Not(knows_exit(p))) ::: No one knows how to get off\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be false?\nis_false(And(ForAll([p:people], Not(knows_end(p))), ForAll([p:people], Not(knows_exit(p))))) ::: (A)\nis_false(And(Exists([p:people], knows_end(p)), ForAll([p:people], Not(knows_exit(p))))) ::: (B)\nis_false(And(Exists([p:people], Not(knows_end(p))), Exists([p:people], Not(knows_exit(p))))) ::: (C)\nis_false(And(ForAll([p:people], Not(knows_end(p))), Exists([p:people], Not(knows_exit(p))))) ::: (D)"
    ]
  },
  {
    "id": 378,
    "context": "Unlike traditional coal, gas, and atomic energy, solar energy does not produce pollution, requires no transportation, and does not have the risk of radiation.It is not subject to power companies.Therefore, people should be encouraged to use solar energy.",
    "question": "If any of the following statements is true, can the above argument be weakened most effectively?",
    "answer": "C",
    "options": [
      "A.Few people have studied how solar energy is used in homes.",
      "B.The cost of solar equipment to meet the needs of a family of four is equal to the cost of traditional energy required by the family for one year.",
      "C.An effective method of collecting and storing solar energy for a long time has not yet been found.",
      "D.Those who oppose the use of solar energy believe that doing so will result in an energy monopoly."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nargument = Function([statements] -> [bool])\n\n# Constraints\nargument(A) ::: Few people have studied how solar energy is used in homes\nargument(B) ::: The cost of solar equipment to meet the needs of a family of four is equal to the cost of traditional energy required by the family for one year\nargument(C) ::: An effective method of collecting and storing solar energy for a long time has not yet been found\nargument(D) ::: Those who oppose the use of solar energy believe that doing so will result in an energy monopoly\n\n# Options\nQuestion ::: If any of the following statements is true, can the above argument be weakened most effectively?\nis_weakened_most_effectively(argument(C)) ::: (C)"
    ]
  },
  {
    "id": 379,
    "context": "The researchers divided the subjects into two groups? Group A did their own things for ten minutes but did not engage in things that would lead to lying; Group B was asked to steal test papers and lied during the test.After that, the researchers asked the subjects to put on special electrodes to record the blink frequency of the interrogation.It was found that the blinking frequency of group A increased slightly, but the blinking frequency of group B decreased first, and then increased significantly to 8 times the normal frequency.It can be seen from this? by observing a person's blink frequency, it can be judged whether he is lying.",
    "question": "The answer to which of the following questions would hardly question the conclusion of this study?",
    "answer": "D",
    "options": [
      "A.Are there significant differences in the psychological qualities of the subjects in groups A and B?",
      "B.The subjects in group B were told to tell lies, rather than telling lies themselves.Is the correlation between telling lies and blinking reliable?",
      "C.Are there any abnormalities in the equipment used in groups A and B?",
      "D.Will telling lies cause a rapid heartbeat and increased blood pressure?"
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([A, B])\nactivities = EnumSort([own_things, steal_and_lie])\nblink_frequency = Function([groups] -> [int])\nnormal_frequency = Const('normal_frequency', int)\n\n# Constraints\nblink_frequency(A) > normal_frequency ::: The blinking frequency of group A increased slightly\nblink_frequency(B) < normal_frequency ::: The blinking frequency of group B decreased first\nblink_frequency(B) == 8 * normal_frequency ::: The blinking frequency of group B increased significantly to 8 times the normal frequency\n\n# Options\nQuestion ::: The answer to which of the following questions would hardly question the conclusion of this study?\nis_hardly_questioned(And(Exists([p:groups], psychological_quality(p) == different), Not(questions_conclusion))) ::: (A)\nis_hardly_questioned(And(Exists([p:groups], told_to_lie(p)), Not(questions_conclusion))) ::: (B)\nis_hardly_questioned(And(Exists([p:groups], equipment_abnormal(p)), Not(questions_conclusion))) ::: (C)\nis_hardly_questioned(And(Exists([p:groups], rapid_heartbeat_and_blood_pressure(p)), Not(questions_conclusion))) ::: (D)"
    ]
  },
  {
    "id": 380,
    "context": "At this Games, all the track and field athletes who participated in the 4 Ã— 100m competition participated in the 100m competition.",
    "question": "Coupled with which of the following statements, it can be logically introduced that 'some track and field athletes participating in the 200-meter competition did not participate in the 4 Ã— 100-meter competition'?",
    "answer": "C",
    "options": [
      "A.Some track and field athletes participating in the 200-meter competition also participated in the 100-meter competition.",
      "B.Some track and field athletes who participated in the 4 Ã— 100m race did not participate in the 200 no race.",
      "C.Some track and field athletes who did not participate in the 100-meter competition participated in the 200-meter competition.",
      "D.Some track and field athletes who did not participate in the 200-meter competition did not participate in the 100-meter competition."
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([athlete1, athlete2, athlete3, athlete4, athlete5])\ncompetitions = EnumSort([relay_4x100m, race_100m, race_200m])\nparticipates = Function([athletes, competitions] -> [bool])\n\n# Constraints\nForAll([a:athletes], Implies(participates(a, relay_4x100m), participates(a, race_100m))) ::: All athletes who participated in the 4 × 100m competition participated in the 100m competition\n\n# Options\nQuestion ::: Coupled with which of the following statements, it can be logically introduced that 'some track and field athletes participating in the 200-meter competition did not participate in the 4 × 100-meter competition'?\nis_valid(Exists([a:athletes], And(participates(a, race_200m), Not(participates(a, relay_4x100m))))) ::: (A)\nis_valid(Exists([a:athletes], And(participates(a, relay_4x100m), Not(participates(a, race_200m))))) ::: (B)\nis_valid(Exists([a:athletes], And(Not(participates(a, race_100m)), participates(a, race_200m)))) ::: (C)\nis_valid(Exists([a:athletes], And(Not(participates(a, race_200m)), Not(participates(a, race_100m))))) ::: (D)"
    ]
  },
  {
    "id": 381,
    "context": "Sociologists? Statistics show that at present, about 1 million people commit suicide every year in the world, that is to say, an average person commits suicide in tens of seconds.If people's views on suicidal behavior can be changed, this phenomenon can be avoided.",
    "question": "Which of the following statements is assumed by this sociologist 's assertion?",
    "answer": "C",
    "options": [
      "A.The occurrence of suicide has very complicated political, economic, social, cultural and psychological reasons.",
      "B.People think that suicidal behavior is an irresponsible cowardly behavior.",
      "C.People's views on suicidal behavior have a decisive influence on whether suicidal behavior occurs.",
      "D.People sometimes think that suicidal behavior is an unacceptable behavior that is understandable and must be respected."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nassumed = Function([statements] -> [bool])\n\n# Constraints\n# No explicit constraints are given in the problem description, so we focus on the options.\n\n# Options\nQuestion ::: Which of the following statements is assumed by this sociologist's assertion?\nis_assumed(assumed(C)) ::: (C) People's views on suicidal behavior have a decisive influence on whether suicidal behavior occurs."
    ]
  },
  {
    "id": 382,
    "context": "With the increase of age, the daily demand for calories is decreasing, while the demand for vitamin B6 is gradually increasing.Unless the elderly take vitamin B6 as a supplement or eat foods that contain more vitamin B6 than they did when they were younger, they are unlikely to get the vitamin B6 they need.",
    "question": "The answer to which of the following questions is most helpful in evaluating the appeal argument?",
    "answer": "A",
    "options": [
      "A.Did most people's diet contain vitamin B6 far beyond the amount they needed every day?",
      "B.Is vitamin B6 in fortified food more easily absorbed by the body than vitamin B6 in the daily diet?",
      "C.Does the amount of calories needed to decrease each day be greater than the amount of vitamin B6 that needs to be increased each day?",
      "D.Are the consequences of not getting enough vitamin B6 daily for the elderly more serious than for the young?"
    ],
    "raw_logic_programs": [
      "# Declarations\nage_groups = EnumSort([young, elderly])\nnutrients = EnumSort([calories, vitamin_B6])\ndemand = Function([age_groups, nutrients] -> [int])\nsupplement = Function([age_groups] -> [bool])\ndietary_intake = Function([age_groups, nutrients] -> [int])\n\n# Constraints\nForAll([n:nutrients], demand(elderly, n) != demand(young, n)) ::: The daily demand for calories is decreasing, while the demand for vitamin B6 is increasing with age\nImplies(Not(supplement(elderly)), dietary_intake(elderly, vitamin_B6) <= demand(elderly, vitamin_B6)) ::: Unless the elderly take vitamin B6 as a supplement, they are unlikely to get the vitamin B6 they need\nImplies(dietary_intake(elderly, vitamin_B6) <= dietary_intake(young, vitamin_B6), dietary_intake(elderly, vitamin_B6) <= demand(elderly, vitamin_B6)) ::: Unless the elderly eat foods that contain more vitamin B6 than when they were younger, they are unlikely to get the vitamin B6 they need\n\n# Options\nQuestion ::: The answer to which of the following questions is most helpful in evaluating the appeal argument?\nis_helpful(Exists([p:age_groups], dietary_intake(p, vitamin_B6) > demand(p, vitamin_B6))) ::: (A)\nis_helpful(Exists([p:age_groups], supplement(p) == True)) ::: (B)\nis_helpful(Exists([p:age_groups], demand(p, calories) - demand(p, vitamin_B6) > 0)) ::: (C)\nis_helpful(Exists([p:age_groups], demand(elderly, vitamin_B6) > demand(young, vitamin_B6))) ::: (D)"
    ]
  },
  {
    "id": 383,
    "context": "The traditional view is that most of the methane that causes the greenhouse effect comes from wetlands and the digestive tract of ruminants.It is not known that green plants that can absorb carbon dioxide also release methane.Scientists have discovered a surprising result? the annual methane emissions from green plants worldwide are between 60 million and 240 million tons, accounting for 10% to 40% of the global annual methane emissions, and about 2/3 of them come from tropical regions rich in vegetation.",
    "question": "The following statements, except which one, can support the scientist's point of view?",
    "answer": "D",
    "options": [
      "A.If you do not consider green plants, after excluding all other factors, there are still a lot of sources of methane in the world that cannot be explained.",
      "B.German scientists observed methane clouds appearing over tropical rain forests through satellites.This phenomenon cannot be explained by known global sources of methane.",
      "C.American chemists analyzed air samples taken from the savanna of Venezuela and concluded that the amount of methane released by vegetation in the area is between 30 million and 60 million tons.",
      "D.Some scientists emphasized that the recent increase in methane content and global warming have nothing to do with forests, and plants are innocent."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_scientists = Function([statements] -> [bool])\n\n# Constraints\nsupports_scientists(A) ::: If you do not consider green plants, after excluding all other factors, there are still a lot of sources of methane in the world that cannot be explained.\nsupports_scientists(B) ::: German scientists observed methane clouds appearing over tropical rain forests through satellites. This phenomenon cannot be explained by known global sources of methane.\nsupports_scientists(C) ::: American chemists analyzed air samples taken from the savanna of Venezuela and concluded that the amount of methane released by vegetation in the area is between 30 million and 60 million tons.\nNot(supports_scientists(D)) ::: Some scientists emphasized that the recent increase in methane content and global warming have nothing to do with forests, and plants are innocent.\n\n# Options\nQuestion ::: The following statements, except which one, can support the scientist's point of view?\nis_exception(supports_scientists(A)) ::: (A)\nis_exception(supports_scientists(B)) ::: (B)\nis_exception(supports_scientists(C)) ::: (C)\nis_exception(supports_scientists(D)) ::: (D)"
    ]
  },
  {
    "id": 384,
    "context": "Demand always changes in the opposite direction to price.If the price change causes the total income and price to reverse, then demand is elastic.In 2007, although the tuition fees of W University decreased by 20%, the total tuition fees received by W University increased from 2006.In this case, the demand for W University is flexible.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.If changes in prices result in changes in total income and prices in the same direction, then demand is elastic.",
      "B.Compared with 2006, a 20% reduction in tuition fees will bring better economic benefits to W University.",
      "C.If demand is elastic, then price changes will cause total income to change in the same direction as prices.",
      "D.Compared with 2006, W University 's enrollment growth in 2007 exceeded 20%."
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([demand, price, total_income])\nyears = EnumSort([2006, 2007])\nchange = Function([variables, years] -> [int])  # Represents percentage change\n\n# Constraints\nForAll([y:years], change(demand, y) == -change(price, y)) ::: Demand always changes in the opposite direction to price\nForAll([y:years], Implies(change(total_income, y) == -change(price, y), demand == elastic)) ::: If the price change causes the total income and price to reverse, then demand is elastic\nAnd(change(price, 2007) == -20, change(total_income, 2007) > 0) ::: In 2007, although the tuition fees of W University decreased by 20%, the total tuition fees received by W University increased from 2006\ndemand == elastic ::: In this case, the demand for W University is flexible\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(Implies(And(change(price, y) == change(total_income, y)), demand == elastic)) ::: (A)\nis_must_true(change(total_income, 2007) > change(total_income, 2006)) ::: (B)\nis_must_true(Implies(demand == elastic, change(total_income, y) == change(price, y))) ::: (C)\nis_must_true(change(demand, 2007) > 20) ::: (D)"
    ]
  },
  {
    "id": 385,
    "context": "When inflation or economic overheating occurs in a country, the government often adopts tight monetary policies such as tightening monetary policy, raising interest rates, and increasing discount rates.However, in 1990, the Japanese government continued to increase the discount rate in order to suppress the excessive stock market and real estate bubbles, and finally caused deflation, which caused the Japanese economy to stagnate for more than a decade.From 1995 to 1996, the Central Bank of Thailand continued to tighten the monetary policy to suppress asset price bubbles, continue to raise interest rates, and suppressed investment and consumption, which led to a major economic recession.",
    "question": "Which of the following statements is most suitable as the conclusion of the above discussion?",
    "answer": "B",
    "options": [
      "A.Increasing bank deposit interest rates can suppress inflation.",
      "B.Tight monetary policy may lead to economic decline.",
      "C.Economic development is cyclical.",
      "D.Using monetary policy can control economic development"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([Japan, Thailand])\npolicies = EnumSort([tight_monetary_policy, raise_interest_rates, increase_discount_rates])\neffects = EnumSort([suppress_bubbles, cause_deflation, economic_stagnation, economic_recession])\nadopts_policy = Function([countries, policies] -> [bool])\nexperiences_effect = Function([countries, effects] -> [bool])\n\n# Constraints\nForAll([c:countries], Or(adopts_policy(c, tight_monetary_policy), adopts_policy(c, raise_interest_rates), adopts_policy(c, increase_discount_rates))) ::: When inflation or economic overheating occurs, the government often adopts tight monetary policies\nAnd(adopts_policy(Japan, increase_discount_rates), experiences_effect(Japan, cause_deflation), experiences_effect(Japan, economic_stagnation)) ::: In 1990, Japan increased the discount rate, causing deflation and economic stagnation\nAnd(adopts_policy(Thailand, tight_monetary_policy), adopts_policy(Thailand, raise_interest_rates), experiences_effect(Thailand, economic_recession)) ::: From 1995 to 1996, Thailand tightened monetary policy and raised interest rates, leading to economic recession\n\n# Options\nQuestion ::: Which of the following statements is most suitable as the conclusion of the above discussion?\nis_conclusion(ForAll([c:countries], Implies(adopts_policy(c, tight_monetary_policy), experiences_effect(c, economic_decline)))) ::: (B)\nis_conclusion(Exists([c:countries], experiences_effect(c, suppress_inflation))) ::: (A)\nis_conclusion(Exists([c:countries], experiences_effect(c, cyclical_development))) ::: (C)\nis_conclusion(Exists([c:countries], Implies(adopts_policy(c, tight_monetary_policy), experiences_effect(c, control_development)))) ::: (D)"
    ]
  },
  {
    "id": 386,
    "context": "Zhang Qiang? The procedure for processing orders quickly and accurately helps our transactions.In order to increase profits, we should use electronic procedures instead of manual operations.Using electronic procedures, customer orders will directly enter all relevant queues.Li Ming? If we enable the electronic order process, our revenue will decrease.Many people prefer to call someone when placing an order.If we switch to an electronic ordering program, our transactions will look indifferent and impersonal, and we will attract fewer passengers.",
    "question": "The differences between Zhang Qiang and Li Ming are?",
    "answer": "C",
    "options": [
      "A.Is the electronic order procedure faster and more accurate than the manual order procedure?",
      "B.Whether a faster and more accurate order procedure will benefit their financial returns.",
      "C.Whether switching to electronic ordering procedures will benefit their financial returns.",
      "D.For most customers, does the electronic ordering process really seem indifferent and impersonal?"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Zhang_Qiang, Li_Ming])\nstatements = EnumSort([electronic_faster, electronic_benefit, electronic_impersonal])\nbelieves = Function([people, statements] -> [bool])\n\n# Constraints\nbelieves(Zhang_Qiang, electronic_faster) ::: Zhang Qiang believes the electronic procedure is faster and more accurate\nbelieves(Zhang_Qiang, electronic_benefit) ::: Zhang Qiang believes the electronic procedure will increase profits\nNot(believes(Zhang_Qiang, electronic_impersonal)) ::: Zhang Qiang does not believe the electronic procedure is impersonal\nNot(believes(Li_Ming, electronic_benefit)) ::: Li Ming believes the electronic procedure will decrease revenue\nbelieves(Li_Ming, electronic_impersonal) ::: Li Ming believes the electronic procedure is impersonal\n\n# Options\nQuestion ::: The differences between Zhang Qiang and Li Ming are?\nis_difference(believes(Zhang_Qiang, electronic_faster) != believes(Li_Ming, electronic_faster)) ::: (A)\nis_difference(believes(Zhang_Qiang, electronic_faster) && believes(Zhang_Qiang, electronic_benefit) != (believes(Li_Ming, electronic_faster) && believes(Li_Ming, electronic_benefit))) ::: (B)\nis_difference(believes(Zhang_Qiang, electronic_benefit) != believes(Li_Ming, electronic_benefit)) ::: (C)\nis_difference(believes(Zhang_Qiang, electronic_impersonal) != believes(Li_Ming, electronic_impersonal)) ::: (D)"
    ]
  },
  {
    "id": 387,
    "context": "Oxford University in the United Kingdom is full of a free discussion and free debate atmosphere, and questioning and challenging become the norm in academic research.There is even such an exaggeration that if you have been to Oxford University, you will never be able to believe any words that anyone said.",
    "question": "If the above statement is true, which of the following statements must be false?",
    "answer": "B",
    "options": [
      "A.If you have been to Oxford University, you can never believe any words that Einstein said.",
      "B.You have been to Oxford University, but sometimes you may still believe what some people say.",
      "C.If you have been to Oxford University, you will no longer believe any words that anyone said.",
      "D.If you have been to Oxford University, you will no longer believe what some people say."
    ],
    "raw_logic_programs": [
      "# Declarations\nvisited_oxford = Function([bool])\nbelieves = Function([person] -> [bool])\n\n# Constraints\nForAll([p:person], Implies(visited_oxford(), Not(believes(p)))) ::: If you have been to Oxford University, you will never be able to believe any words that anyone said\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be false?\nis_false(Implies(visited_oxford(), Not(believes(Einstein)))) ::: (A)\nis_false(And(visited_oxford(), Exists([p:person], believes(p)))) ::: (B)\nis_false(Implies(visited_oxford(), ForAll([p:person], Not(believes(p))))) ::: (C)\nis_false(Implies(visited_oxford(), Exists([p:person], Not(believes(p))))) ::: (D)"
    ]
  },
  {
    "id": 388,
    "context": "Some people think that watching the violent scenes in TV shows will lead to the actual behavior of the audience.Is it true that watching only others can fill their stomachs?",
    "question": "Which of the following inferences is most similar to the one used above?",
    "answer": "C",
    "options": [
      "A.Some people think that this team is the best.Is it true that every player in this team is also the best?",
      "B.Some people think that nationalism is justified.Isn't nationalism ever used as an excuse for crime?",
      "C.Some people think that economists can control inflation, can it be said that meteorologists can control the weather?",
      "D.Some people think that China's energy trade with Africa is plundering Africa's energy.Is it true that China's energy trade with Russia is plundering Russia's energy?"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([violent_scenes, team_best, nationalism_justified, economists_inflation, energy_trade])\ninferences = Function([statements] -> [bool])\n\n# Constraints\ninferences(violent_scenes) == False ::: Watching violent scenes leads to actual behavior is questioned by asking if watching others can fill the stomach\n\n# Options\nQuestion ::: Which of the following inferences is most similar to the one used above?\nis_similar(inferences(team_best) == False) ::: (A)\nis_similar(inferences(nationalism_justified) == False) ::: (B)\nis_similar(inferences(economists_inflation) == False) ::: (C)\nis_similar(inferences(energy_trade) == False) ::: (D)"
    ]
  },
  {
    "id": 389,
    "context": "Vermilion? Red squirrels make holes in the bark of sugar pine to absorb the sap.Since the sap of sugar pine is mainly composed of water and a small amount of sugar, it can be roughly determined that the red squirrel is looking for water or sugar.Water is easily obtained by other means where pine trees grow.Therefore, the red pine trees will not make holes for finding water, they may be looking for sugar.Lin Na? It must not be looking for sugar but something else, because the concentration of sugar in the sugar pine sap is too low, red squirrels must drink a lot of sap to get a little sugar.",
    "question": "Which of the following ways did Zhu Hong's argument take place?",
    "answer": "D",
    "options": [
      "A.A general law is stated, and the argument is an example of using this law.",
      "B.Describes a larger portion of observable behavior.",
      "C.Analogy based on the similarities between clearly understood and unexplained phenomena.",
      "D.Exclude one explanation of an observed phenomenon and arrive at another possible explanation."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nphenomena = EnumSort([water, sugar, other])\nexplanation = Function([phenomena] -> [bool])\n\n# Constraints\nexplanation(water) == False ::: Water is easily obtained by other means where pine trees grow, so red squirrels are not looking for water.\nexplanation(sugar) == False ::: The concentration of sugar in the sap is too low, so red squirrels are not looking for sugar.\nexplanation(other) == True ::: Red squirrels must be looking for something else.\n\n# Options\nQuestion ::: Which of the following ways did Zhu Hong's argument take place?\nis_valid(explanation(other) == True) ::: (A) A general law is stated, and the argument is an example of using this law.\nis_valid(explanation(other) == True) ::: (B) Describes a larger portion of observable behavior.\nis_valid(explanation(other) == True) ::: (C) Analogy based on the similarities between clearly understood and unexplained phenomena.\nis_valid(explanation(other) == True) ::: (D) Exclude one explanation of an observed phenomenon and arrive at another possible explanation."
    ]
  },
  {
    "id": 390,
    "context": "Vermilion? Red squirrels make holes in the bark of sugar pine to absorb the sap.Since the sap of sugar pine is mainly composed of water and a small amount of sugar, it can be roughly determined that the red squirrel is looking for water or sugar.Water is easily obtained by other means where pine trees grow.Therefore, the red pine trees will not make holes for finding water, they may be looking for sugar.Lin Na? It must not be looking for sugar but something else, because the concentration of sugar in the sugar pine sap is too low, red squirrels must drink a lot of sap to get a little sugar.",
    "question": "If which of the following statements is true, the most serious shaken Lin Na's rebuttal to Zhu Hong?",
    "answer": "C",
    "options": [
      "A.Once a red squirrel makes a hole in the trunk of a sugar pine to absorb the sap, another red squirrel will do the same.",
      "B.Red squirrels rarely make holes in other trees whose sap contains less sugar than sugar pine.",
      "C.Red squirrels wait for most of the water in the sap that oozes out of the tree's hole to evaporate before consuming the sap.",
      "D.In the season when sap can be obtained from sugar pine, the weather is already cold to prevent the sap from seeping out of the tree."
    ],
    "raw_logic_programs": [
      "# Declarations\nsquirrels = EnumSort([red_squirrel])\ntrees = EnumSort([sugar_pine, other_trees])\nactions = EnumSort([make_hole, absorb_sap])\nreasons = EnumSort([looking_for_water, looking_for_sugar, looking_for_other])\n\n# Constraints\nForAll([s:squirrels, t:trees], Implies(actions(s, t) == make_hole, Or(reasons(s) == looking_for_sugar, reasons(s) == looking_for_other))) ::: Red squirrels make holes in sugar pine for sugar or other reasons\nForAll([s:squirrels], Implies(reasons(s) == looking_for_sugar, actions(s, sugar_pine) == make_hole)) ::: If looking for sugar, they make holes in sugar pine\nForAll([s:squirrels], Implies(reasons(s) == looking_for_water, Not(actions(s, sugar_pine) == make_hole))) ::: They do not make holes for water\n\n# Options\nQuestion ::: If which of the following statements is true, the most serious shaken Lin Na's rebuttal to Zhu Hong?\nis_serious_shaken(Exists([s:squirrels], actions(s, sugar_pine) == make_hole)) ::: (A)\nis_serious_shaken(Exists([s:squirrels], And(actions(s, other_trees) == make_hole, reasons(s) == looking_for_sugar))) ::: (B)\nis_serious_shaken(Exists([s:squirrels], And(actions(s, sugar_pine) == absorb_sap, reasons(s) == looking_for_sugar))) ::: (C)\nis_serious_shaken(Exists([s:squirrels], Not(actions(s, sugar_pine) == make_hole))) ::: (D)"
    ]
  },
  {
    "id": 391,
    "context": "There are 7 athletes participating in the men's 5km finals? S, T, U, W, X, Y and Z.The costumes worn by athletes are either red or green.No athletes reach the finish line at the same time.The known information is as follows? Athletes who reach the finish line in succession are not all red.Y reached the end point at a time before T and W.Two athletes who reached the finish line before Y happened to be wearing red costumes.S is the sixth athlete to reach the finish line.Z reached the end at a certain moment before U.",
    "question": "Which of the following items (from left to right) may be the athlete's ranking from the first to the seventh to the finish line?",
    "answer": "A",
    "options": [
      "A.X, Z, U, Y, W, S, T",
      "B.X, Y, Z, U, W, S, T",
      "C.Z, W, U, T, Y, S, X",
      "D.Z, U, T, Y, W, S, X"
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([S, T, U, W, X, Y, Z])\ncolors = EnumSort([red, green])\nfinish_order = Function([athletes] -> [int])\ncostume_color = Function([athletes] -> [colors])\n\n# Constraints\nForAll([a:athletes], And(1 <= finish_order(a), finish_order(a) <= 7)) ::: No athletes reach the finish line at the same time\nForAll([a1:athletes, a2:athletes], Implies(a1 != a2, finish_order(a1) != finish_order(a2))) ::: No athletes reach the finish line at the same time\nForAll([a1:athletes, a2:athletes, a3:athletes], Implies(And(finish_order(a1) + 1 == finish_order(a2), finish_order(a2) + 1 == finish_order(a3)), Not(And(costume_color(a1) == red, costume_color(a2) == red, costume_color(a3) == red)))) ::: Athletes who reach the finish line in succession are not all red\nfinish_order(Y) < finish_order(T) ::: Y reached the end point at a time before T\nfinish_order(Y) < finish_order(W) ::: Y reached the end point at a time before W\nCount([a:athletes], And(finish_order(a) < finish_order(Y), costume_color(a) == red)) == 2 ::: Two athletes who reached the finish line before Y happened to be wearing red costumes\nfinish_order(S) == 6 ::: S is the sixth athlete to reach the finish line\nfinish_order(Z) < finish_order(U) ::: Z reached the end at a certain moment before U\n\n# Options\nQuestion ::: Which of the following items (from left to right) may be the athlete's ranking from the first to the seventh to the finish line?\nis_valid_order([finish_order(X) == 1, finish_order(Z) == 2, finish_order(U) == 3, finish_order(Y) == 4, finish_order(W) == 5, finish_order(S) == 6, finish_order(T) == 7]) ::: (A)\nis_valid_order([finish_order(X) == 1, finish_order(Y) == 2, finish_order(Z) == 3, finish_order(U) == 4, finish_order(W) == 5, finish_order(S) == 6, finish_order(T) == 7]) ::: (B)\nis_valid_order([finish_order(Z) == 1, finish_order(W) == 2, finish_order(U) == 3, finish_order(T) == 4, finish_order(Y) == 5, finish_order(S) == 6, finish_order(X) == 7]) ::: (C)\nis_valid_order([finish_order(Z) == 1, finish_order(U) == 2, finish_order(T) == 3, finish_order(Y) == 4, finish_order(W) == 5, finish_order(S) == 6, finish_order(X) == 7]) ::: (D)"
    ]
  },
  {
    "id": 392,
    "context": "There are 7 athletes participating in the men's 5km finals? S, T, U, W, X, Y and Z.The costumes worn by athletes are either red or green.No athletes reach the finish line at the same time.The known information is as follows? Athletes who reach the finish line in succession are not all red.Y reached the end point at a time before T and W.Two athletes who reached the finish line before Y happened to be wearing red costumes.S is the sixth athlete to reach the finish line.Z reached the end at a certain moment before U.",
    "question": "Which of the following athletes listed in the list of clothing can not be red?",
    "answer": "B",
    "options": [
      "A.S and X",
      "B.T and S",
      "C.U and W",
      "D.W and T"
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([S, T, U, W, X, Y, Z])\ncolors = EnumSort([red, green])\nfinish_order = Function([athletes] -> [int])\ncostume_color = Function([athletes] -> [colors])\n\n# Constraints\nForAll([a:athletes], And(1 <= finish_order(a), finish_order(a) <= 7)) ::: No athletes reach the finish line at the same time\nDistinct([a:athletes], finish_order(a)) ::: No athletes reach the finish line at the same time\nForAll([i:int], Implies(And(1 <= i, i <= 6), Not(And(costume_color(finish_order_inv(i)) == red, costume_color(finish_order_inv(i+1)) == red)))) ::: Athletes who reach the finish line in succession are not all red\nfinish_order(Y) < finish_order(T) ::: Y reached the end point at a time before T\nfinish_order(Y) < finish_order(W) ::: Y reached the end point at a time before W\nCount([a:athletes], And(finish_order(a) < finish_order(Y), costume_color(a) == red)) == 2 ::: Two athletes who reached the finish line before Y happened to be wearing red costumes\nfinish_order(S) == 6 ::: S is the sixth athlete to reach the finish line\nfinish_order(Z) < finish_order(U) ::: Z reached the end at a certain moment before U\n\n# Options\nQuestion ::: Which of the following athletes listed in the list of clothing can not be red?\nis_unsat(costume_color(S) == red, costume_color(X) == red) ::: (A)\nis_unsat(costume_color(T) == red, costume_color(S) == red) ::: (B)\nis_unsat(costume_color(U) == red, costume_color(W) == red) ::: (C)\nis_unsat(costume_color(W) == red, costume_color(T) == red) ::: (D)"
    ]
  },
  {
    "id": 393,
    "context": "There are 7 athletes participating in the men's 5km finals? S, T, U, W, X, Y and Z.The costumes worn by athletes are either red or green.No athletes reach the finish line at the same time.The known information is as follows? Athletes who reach the finish line in succession are not all red.Y reached the end point at a time before T and W.Two athletes who reached the finish line before Y happened to be wearing red costumes.S is the sixth athlete to reach the finish line.Z reached the end at a certain moment before U.",
    "question": "If X reaches the finish point third, the following athlete's costume must be green?",
    "answer": "C",
    "options": [
      "A.S",
      "B.T",
      "C.U",
      "D.W"
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([S, T, U, W, X, Y, Z])\npositions = EnumSort([1, 2, 3, 4, 5, 6, 7])\ncolors = EnumSort([red, green])\nfinish_position = Function([athletes] -> [positions])\ncostume_color = Function([athletes] -> [colors])\n\n# Constraints\nDistinct([a:athletes], finish_position(a)) ::: No athletes reach the finish line at the same time\nForAll([p:positions], Exists([a:athletes], finish_position(a) == p)) ::: Each position is occupied by exactly one athlete\nForAll([p:positions], Implies(And(finish_position(a1) == p, finish_position(a2) == p + 1), Or(costume_color(a1) != red, costume_color(a2) != red))) ::: Athletes who reach the finish line in succession are not all red\nfinish_position(Y) < finish_position(T) ::: Y reached the end point at a time before T\nfinish_position(Y) < finish_position(W) ::: Y reached the end point at a time before W\nCount([a:athletes], And(finish_position(a) < finish_position(Y), costume_color(a) == red)) == 2 ::: Two athletes who reached the finish line before Y happened to be wearing red costumes\nfinish_position(S) == 6 ::: S is the sixth athlete to reach the finish line\nfinish_position(Z) < finish_position(U) ::: Z reached the end at a certain moment before U\n\n# Options\nQuestion ::: If X reaches the finish point third, the following athlete's costume must be green?\nfinish_position(X) == 3 ::: X reaches the finish point third\nis_must_be_green(costume_color(S) == green) ::: (A)\nis_must_be_green(costume_color(T) == green) ::: (B)\nis_must_be_green(costume_color(U) == green) ::: (C)\nis_must_be_green(costume_color(W) == green) ::: (D)"
    ]
  },
  {
    "id": 394,
    "context": "There are 7 athletes participating in the men's 5km finals? S, T, U, W, X, Y and Z.The costumes worn by athletes are either red or green.No athletes reach the finish line at the same time.The known information is as follows? Athletes who reach the finish line in succession are not all red.Y reached the end point at a time before T and W.Two athletes who reached the finish line before Y happened to be wearing red costumes.S is the sixth athlete to reach the finish line.Z reached the end at a certain moment before U.",
    "question": "If the clothing of three athletes happens to be green, which of the following athletes must be green?",
    "answer": "A",
    "options": [
      "A.S",
      "B.T",
      "C.W",
      "D.Z"
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([S, T, U, W, X, Y, Z])\ncolors = EnumSort([red, green])\nfinish_order = Function([athletes] -> [int])\ncostume_color = Function([athletes] -> [colors])\n\n# Constraints\nForAll([a:athletes], And(1 <= finish_order(a), finish_order(a) <= 7)) ::: No athletes reach the finish line at the same time\nDistinct([a:athletes], finish_order(a)) ::: No athletes reach the finish line at the same time\nForAll([a1:athletes, a2:athletes, a3:athletes], Implies(And(finish_order(a1) + 1 == finish_order(a2), finish_order(a2) + 1 == finish_order(a3)), Not(And(costume_color(a1) == red, costume_color(a2) == red, costume_color(a3) == red)))) ::: Athletes who reach the finish line in succession are not all red\nfinish_order(Y) < finish_order(T) ::: Y reached the end point at a time before T\nfinish_order(Y) < finish_order(W) ::: Y reached the end point at a time before W\nCount([a:athletes], And(finish_order(a) < finish_order(Y), costume_color(a) == red)) == 2 ::: Two athletes who reached the finish line before Y happened to be wearing red costumes\nfinish_order(S) == 6 ::: S is the sixth athlete to reach the finish line\nfinish_order(Z) < finish_order(U) ::: Z reached the end at a certain moment before U\nCount([a:athletes], costume_color(a) == green) == 3 ::: The clothing of three athletes happens to be green\n\n# Options\nQuestion ::: If the clothing of three athletes happens to be green, which of the following athletes must be green?\nis_must_be_green(costume_color(S) == green) ::: (A)\nis_must_be_green(costume_color(T) == green) ::: (B)\nis_must_be_green(costume_color(W) == green) ::: (C)\nis_must_be_green(costume_color(Z) == green) ::: (D)"
    ]
  },
  {
    "id": 395,
    "context": "There are 7 athletes participating in the men's 5km finals? S, T, U, W, X, Y and Z.The costumes worn by athletes are either red or green.No athletes reach the finish line at the same time.The known information is as follows? Athletes who reach the finish line in succession are not all red.Y reached the end point at a time before T and W.Two athletes who reached the finish line before Y happened to be wearing red costumes.S is the sixth athlete to reach the finish line.Z reached the end at a certain moment before U.",
    "question": "It is impossible for the athletes listed in which of the following to reach the finish line one after another?",
    "answer": "D",
    "options": [
      "A.U and Y",
      "B.X and Y",
      "C.Y and W",
      "D.Y and Z"
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([S, T, U, W, X, Y, Z])\npositions = EnumSort([1, 2, 3, 4, 5, 6, 7])\ncolors = EnumSort([red, green])\nfinish_position = Function([athletes] -> [positions])\ncostume_color = Function([athletes] -> [colors])\n\n# Constraints\nDistinct([a:athletes], finish_position(a)) ::: No athletes reach the finish line at the same time\nForAll([p:positions], Exists([a1:athletes, a2:athletes], And(a1 != a2, finish_position(a1) == p, finish_position(a2) == p + 1, Or(costume_color(a1) != red, costume_color(a2) != red)))) ::: Athletes who reach the finish line in succession are not all red\nfinish_position(Y) < finish_position(T) ::: Y reached the end point at a time before T\nfinish_position(Y) < finish_position(W) ::: Y reached the end point at a time before W\nCount([a:athletes], And(finish_position(a) < finish_position(Y), costume_color(a) == red)) == 2 ::: Two athletes who reached the finish line before Y happened to be wearing red costumes\nfinish_position(S) == 6 ::: S is the sixth athlete to reach the finish line\nfinish_position(Z) < finish_position(U) ::: Z reached the end at a certain moment before U\n\n# Options\nQuestion ::: It is impossible for the athletes listed in which of the following to reach the finish line one after another?\nis_unsat(And(finish_position(U) == finish_position(Y) + 1, finish_position(Y) == finish_position(U) - 1)) ::: (A)\nis_unsat(And(finish_position(X) == finish_position(Y) + 1, finish_position(Y) == finish_position(X) - 1)) ::: (B)\nis_unsat(And(finish_position(Y) == finish_position(W) + 1, finish_position(W) == finish_position(Y) - 1)) ::: (C)\nis_unsat(And(finish_position(Y) == finish_position(Z) + 1, finish_position(Z) == finish_position(Y) - 1)) ::: (D)"
    ]
  },
  {
    "id": 396,
    "context": "There are seven recruits recruited at a university? F, G, H, I, W, X and Y, one of which is a communications soldier, three are engineering soldiers, and the other three are transport soldiers.The conditions for the assignment of recruits to the army are as follows? H and Y must be assigned to the same arm.F and G cannot be assigned to the same arm.If X is assigned as a transport soldier, then W is assigned as an engineering soldier.Assign F as an engineering soldier.",
    "question": "Which of the following may list the complete and accurate arms allocation plan for recruits?",
    "answer": "D",
    "options": [
      "A.Signal soldier? W; Engineer soldier? F, H and Y; Transport soldier? G, I and X.",
      "B.Signal soldier? W; Engineer soldier? G, I and X; Transport soldier? F, H and Y.",
      "C.Signal soldier? X; Engineer soldier? F, G and H; Transport soldier? I, Y and W.",
      "D.Signal soldier? X; Engineer soldier? F, I and W; Transport soldier? G, H and Y"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\nrecruits = EnumSort([F, G, H, I, W, X, Y])\narms = EnumSort([signal, engineering, transport])\nassigned = Function([recruits] -> [arms])\n\n# Constraints\nCount([r:recruits], assigned(r) == signal) == 1 ::: One recruit is a communications soldier\nCount([r:recruits], assigned(r) == engineering) == 3 ::: Three recruits are engineering soldiers\nCount([r:recruits], assigned(r) == transport) == 3 ::: Three recruits are transport soldiers\nassigned(H) == assigned(Y) ::: H and Y must be assigned to the same arm\nassigned(F) != assigned(G) ::: F and G cannot be assigned to the same arm\nImplies(assigned(X) == transport, assigned(W) == engineering) ::: If X is assigned as a transport soldier, then W is assigned as an engineering soldier\nassigned(F) == engineering ::: Assign F as an engineering soldier\n\n# Options\nQuestion ::: Which of the following may list the complete and accurate arms allocation plan for recruits?\nis_accurate_plan([assigned(W) == signal, assigned(F) == engineering, assigned(H) == engineering, assigned(Y) == engineering, assigned(G) == transport, assigned(I) == transport, assigned(X) == transport]) ::: (A)\nis_accurate_plan([assigned(W) == signal, assigned(G) == engineering, assigned(I) == engineering, assigned(X) == engineering, assigned(F) == transport, assigned(H) == transport, assigned(Y) == transport]) ::: (B)\nis_accurate_plan([assigned(X) == signal, assigned(F) == engineering, assigned(G) == engineering, assigned(H) == engineering, assigned(I) == transport, assigned(Y) == transport, assigned(W) == transport]) ::: (C)\nis_accurate_plan([assigned(X) == signal, assigned(F) == engineering, assigned(I) == engineering, assigned(W) == engineering, assigned(G) == transport, assigned(H) == transport, assigned(Y) == transport]) ::: (D)\n```"
    ]
  },
  {
    "id": 397,
    "context": "There are seven recruits recruited at a university? F, G, H, I, W, X and Y, one of which is a communications soldier, three are engineering soldiers, and the other three are transport soldiers.The conditions for the assignment of recruits to the army are as follows? H and Y must be assigned to the same arm.F and G cannot be assigned to the same arm.If X is assigned as a transport soldier, then W is assigned as an engineering soldier.Assign F as an engineering soldier.",
    "question": "Which of the following lists is a list of all recruits who are unlikely to be engineering soldiers?",
    "answer": "D",
    "options": [
      "A.F, I and X",
      "B.G, H and Y",
      "C.H and Y",
      "D.G"
    ],
    "raw_logic_programs": [
      "# Declarations\nrecruits = EnumSort([F, G, H, I, W, X, Y])\narms = EnumSort([communications, engineering, transport])\nassigned = Function([recruits] -> [arms])\n\n# Constraints\nCount([r:recruits], assigned(r) == communications) == 1 ::: One recruit is a communications soldier\nCount([r:recruits], assigned(r) == engineering) == 3 ::: Three recruits are engineering soldiers\nCount([r:recruits], assigned(r) == transport) == 3 ::: Three recruits are transport soldiers\nassigned(H) == assigned(Y) ::: H and Y must be assigned to the same arm\nassigned(F) != assigned(G) ::: F and G cannot be assigned to the same arm\nImplies(assigned(X) == transport, assigned(W) == engineering) ::: If X is assigned as a transport soldier, then W is assigned as an engineering soldier\nassigned(F) == engineering ::: Assign F as an engineering soldier\n\n# Options\nQuestion ::: Which of the following lists is a list of all recruits who are unlikely to be engineering soldiers?\nis_unlikely_list([assigned(F) != engineering, assigned(I) != engineering, assigned(X) != engineering]) ::: (A)\nis_unlikely_list([assigned(G) != engineering, assigned(H) != engineering, assigned(Y) != engineering]) ::: (B)\nis_unlikely_list([assigned(H) != engineering, assigned(Y) != engineering]) ::: (C)\nis_unlikely_list([assigned(G) != engineering]) ::: (D)"
    ]
  },
  {
    "id": 398,
    "context": "There are seven recruits recruited at a university? F, G, H, I, W, X and Y, one of which is a communications soldier, three are engineering soldiers, and the other three are transport soldiers.The conditions for the assignment of recruits to the army are as follows? H and Y must be assigned to the same arm.F and G cannot be assigned to the same arm.If X is assigned as a transport soldier, then W is assigned as an engineering soldier.Assign F as an engineering soldier.",
    "question": "If which of the following statements is true, can you fully determine the arms of the seven recruits?",
    "answer": "C",
    "options": [
      "A.F and W are assigned as engineering soldiers.",
      "B.G and Y are assigned as transport soldiers",
      "C.I and W are assigned as transport soldiers",
      "D.I and W are assigned as engineering soldiers."
    ],
    "raw_logic_programs": [
      "# Declarations\nrecruits = EnumSort([F, G, H, I, W, X, Y])\narms = EnumSort([communications, engineering, transport])\nassigned = Function([recruits] -> [arms])\n\n# Constraints\nCount([r:recruits], assigned(r) == communications) == 1 ::: One recruit is a communications soldier\nCount([r:recruits], assigned(r) == engineering) == 3 ::: Three recruits are engineering soldiers\nCount([r:recruits], assigned(r) == transport) == 3 ::: Three recruits are transport soldiers\nassigned(H) == assigned(Y) ::: H and Y must be assigned to the same arm\nassigned(F) != assigned(G) ::: F and G cannot be assigned to the same arm\nImplies(assigned(X) == transport, assigned(W) == engineering) ::: If X is assigned as a transport soldier, then W is assigned as an engineering soldier\nassigned(F) == engineering ::: Assign F as an engineering soldier\n\n# Options\nQuestion ::: If which of the following statements is true, can you fully determine the arms of the seven recruits?\nis_determined(And(assigned(F) == engineering, assigned(W) == engineering)) ::: (A)\nis_determined(And(assigned(G) == transport, assigned(Y) == transport)) ::: (B)\nis_determined(And(assigned(I) == transport, assigned(W) == transport)) ::: (C)\nis_determined(And(assigned(I) == engineering, assigned(W) == engineering)) ::: (D)"
    ]
  },
  {
    "id": 399,
    "context": "There are seven recruits recruited at a university? F, G, H, I, W, X, and Y.One of them is a communications soldier, three are engineering soldiers, and the other three are transport soldiers.The conditions for the assignment of recruits to the army are as follows? H and Y must be assigned to the same arm.F and G cannot be assigned to the same arm.If X is assigned as a transport soldier, then W is assigned as an engineering soldier.Assign F as an engineering soldier.",
    "question": "Which of the following recruits cannot be assigned as transport soldiers together?",
    "answer": "B",
    "options": [
      "A.G and I",
      "B.G and X",
      "C.G and Y",
      "D.H and W"
    ],
    "raw_logic_programs": [
      "# Declarations\nrecruits = EnumSort([F, G, H, I, W, X, Y])\narms = EnumSort([communications, engineering, transport])\nassigned = Function([recruits] -> [arms])\n\n# Constraints\nassigned(H) == assigned(Y) ::: H and Y must be assigned to the same arm\nassigned(F) != assigned(G) ::: F and G cannot be assigned to the same arm\nImplies(assigned(X) == transport, assigned(W) == engineering) ::: If X is assigned as a transport soldier, then W is assigned as an engineering soldier\nassigned(F) == engineering ::: Assign F as an engineering soldier\n\n# Options\nQuestion ::: Which of the following recruits cannot be assigned as transport soldiers together?\nis_unsat(And(assigned(G) == transport, assigned(I) == transport)) ::: (A)\nis_unsat(And(assigned(G) == transport, assigned(X) == transport)) ::: (B)\nis_unsat(And(assigned(G) == transport, assigned(Y) == transport)) ::: (C)\nis_unsat(And(assigned(H) == transport, assigned(W) == transport)) ::: (D)"
    ]
  },
  {
    "id": 400,
    "context": "There are seven recruits recruited at a university? F, G, H, I, W, X, and Y.One of them is a communications soldier, three are engineering soldiers, and the other three are transport soldiers.The conditions for the assignment of recruits to the army are as follows? H and Y must be assigned to the same arm.F and G cannot be assigned to the same arm.If X is assigned as a transport soldier, then W is assigned as an engineering soldier.Assign F as an engineering soldier.",
    "question": "If X is not assigned as an engineer, which of the following statements may be true?",
    "answer": "C",
    "options": [
      "A.W and G are assigned as engineering soldiers",
      "B.H and W are assigned as transport soldiers.",
      "C.F and Y are assigned as engineering soldiers",
      "D.H and W are assigned as engineering soldiers"
    ],
    "raw_logic_programs": [
      "# Declarations\nrecruits = EnumSort([F, G, H, I, W, X, Y])\narms = EnumSort([communications, engineering, transport])\nassigned = Function([recruits] -> [arms])\n\n# Constraints\nCount([r:recruits], assigned(r) == communications) == 1 ::: One of them is a communications soldier\nCount([r:recruits], assigned(r) == engineering) == 3 ::: Three are engineering soldiers\nCount([r:recruits], assigned(r) == transport) == 3 ::: Three are transport soldiers\nassigned(H) == assigned(Y) ::: H and Y must be assigned to the same arm\nassigned(F) != assigned(G) ::: F and G cannot be assigned to the same arm\nImplies(assigned(X) == transport, assigned(W) == engineering) ::: If X is assigned as a transport soldier, then W is assigned as an engineering soldier\nassigned(F) == engineering ::: Assign F as an engineering soldier\n\n# Options\nQuestion ::: If X is not assigned as an engineer, which of the following statements may be true?\nis_sat(And(assigned(W) == engineering, assigned(G) == engineering, assigned(X) != engineering)) ::: (A)\nis_sat(And(assigned(H) == transport, assigned(W) == transport, assigned(X) != engineering)) ::: (B)\nis_sat(And(assigned(F) == engineering, assigned(Y) == engineering, assigned(X) != engineering)) ::: (C)\nis_sat(And(assigned(H) == engineering, assigned(W) == engineering, assigned(X) != engineering)) ::: (D)"
    ]
  },
  {
    "id": 401,
    "context": "Commentator? Many historians assert that they are objective, like any natural scientist, when discussing historical issues, and are rarely affected by ethical or aesthetic preconceptions.We obviously cannot accept the claims of these historians, because it is easy to find some wrong historical treatises, which show the author's preconceptions in ideological or other aspects.",
    "question": "This commenter 's reasoning is flawed because he",
    "answer": "D",
    "options": [
      "A.It is wrong to believe that many historians who emphasize methodologies intend to completely eliminate preconceptions.",
      "B.It stands to reason that the objective requirements put forward by natural scientists should be applicable to other fields.",
      "C.It is inappropriate to think that all ideological historical works are wrong.",
      "D.Naturally, certain historical works with preconceptions were written by historians who claimed to be objective."
    ],
    "raw_logic_programs": [
      "# Declarations\nhistorians = EnumSort([objective, not_objective])\ntreatises = EnumSort([wrong, not_wrong])\npreconceptions = EnumSort([ethical, aesthetic, ideological, other])\nclaims = Function([historians] -> [bool])\nshows_preconceptions = Function([treatises] -> [preconceptions])\n\n# Constraints\nForAll([h:historians], claims(h) == (h == objective)) ::: Many historians assert that they are objective\nExists([t:treatises], shows_preconceptions(t) != None) ::: It is easy to find some wrong historical treatises, which show the author's preconceptions\n\n# Options\nQuestion ::: This commenter's reasoning is flawed because he\nis_flawed(ForAll([h:historians], Implies(claims(h), Not(Exists([t:treatises], shows_preconceptions(t) != None))))) ::: (A) It is wrong to believe that many historians who emphasize methodologies intend to completely eliminate preconceptions.\nis_flawed(ForAll([h:historians], Implies(claims(h), Exists([t:treatises], shows_preconceptions(t) == None)))) ::: (B) It stands to reason that the objective requirements put forward by natural scientists should be applicable to other fields.\nis_flawed(Exists([t:treatises], And(shows_preconceptions(t) == ideological, t == wrong))) ::: (C) It is inappropriate to think that all ideological historical works are wrong.\nis_flawed(Exists([h:historians], And(claims(h), Exists([t:treatises], shows_preconceptions(t) != None)))) ::: (D) Naturally, certain historical works with preconceptions were written by historians who claimed to be objective."
    ]
  },
  {
    "id": 402,
    "context": "A recent survey asked the types of reports that journalism students like to read.The results show that most people are concerned about the type of politics and people's livelihood, and it is difficult to tolerate today's popular reports about fashion and star gossip.Therefore, the current trend of reporting fashion and gossip is based on the wrong assumption of public interest.",
    "question": "Which of the following statements best describes the flaws in the above argument?",
    "answer": "B",
    "options": [
      "A.It regards the favorable conditions for a thing as the sufficient conditions for it.",
      "B.The opinions of the sample groups on which it relies are hardly supportive of the conclusion of this argument.",
      "C.It makes inferences based on a hypothesis contrary to the facts, and the conclusion has no credibility.",
      "D.It regards the possible result of a phenomenon as the cause of this phenomenon."
    ],
    "raw_logic_programs": [
      "# Declarations\nsurvey_results = EnumSort([politics, livelihood, fashion, gossip])\npublic_interest = Function([survey_results] -> [bool])\ntrend_based_on_assumption = Function([survey_results] -> [bool])\n\n# Constraints\nForAll([r:survey_results], Implies(Or(r == politics, r == livelihood), public_interest(r))) ::: Most people are concerned about the type of politics and people's livelihood\nForAll([r:survey_results], Implies(Or(r == fashion, r == gossip), Not(public_interest(r)))) ::: It is difficult to tolerate today's popular reports about fashion and star gossip\nForAll([r:survey_results], trend_based_on_assumption(r) == (r == fashion or r == gossip)) ::: The current trend of reporting fashion and gossip is based on the wrong assumption of public interest\n\n# Options\nQuestion ::: Which of the following statements best describes the flaws in the above argument?\nis_flaw(A) ::: (A) It regards the favorable conditions for a thing as the sufficient conditions for it.\nis_flaw(B) ::: (B) The opinions of the sample groups on which it relies are hardly supportive of the conclusion of this argument.\nis_flaw(C) ::: (C) It makes inferences based on a hypothesis contrary to the facts, and the conclusion has no credibility.\nis_flaw(D) ::: (D) It regards the possible result of a phenomenon as the cause of this phenomenon."
    ]
  },
  {
    "id": 403,
    "context": "On July 14, 2015, after difficult negotiations in the euro area, the Greek debt crisis was temporarily quelled.If the Greek debt crisis is not resolved, it will have a negative impact on the economy of the euro zone.But only through extensive reforms can Greece return to the path of economic development.Greece will either reduce welfare or achieve substantial economic development, otherwise, the debt crisis will be a difficult problem.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "C",
    "options": [
      "A.If Greece reduces welfare or achieves substantial economic development, it can solve the debt crisis.",
      "B.If the Greek debt crisis is properly resolved, it will not have a negative impact on the economy of the euro area.",
      "C.If Greece wants to solve the debt crisis, but can not achieve substantial economic development, it must reduce welfare.",
      "D.If Greece does not reduce welfare or cannot achieve substantial economic development, it will have a negative impact on the economy of the euro area."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([greek_debt_crisis_resolved, negative_impact_on_eurozone, extensive_reforms, reduce_welfare, substantial_economic_development])\noutcomes = Function([events] -> [bool])\n\n# Constraints\nImplies(Not(outcomes(greek_debt_crisis_resolved)), outcomes(negative_impact_on_eurozone)) ::: If the Greek debt crisis is not resolved, it will have a negative impact on the economy of the euro zone\nImplies(outcomes(extensive_reforms), outcomes(substantial_economic_development)) ::: Only through extensive reforms can Greece return to the path of economic development\nImplies(Not(Or(outcomes(reduce_welfare), outcomes(substantial_economic_development))), Not(outcomes(greek_debt_crisis_resolved))) ::: Greece will either reduce welfare or achieve substantial economic development, otherwise, the debt crisis will be a difficult problem\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_valid(Implies(Or(outcomes(reduce_welfare), outcomes(substantial_economic_development)), outcomes(greek_debt_crisis_resolved))) ::: (A)\nis_valid(Implies(outcomes(greek_debt_crisis_resolved), Not(outcomes(negative_impact_on_eurozone)))) ::: (B)\nis_valid(Implies(And(Not(outcomes(substantial_economic_development)), outcomes(greek_debt_crisis_resolved)), outcomes(reduce_welfare))) ::: (C)\nis_valid(Implies(Not(Or(outcomes(reduce_welfare), outcomes(substantial_economic_development))), outcomes(negative_impact_on_eurozone))) ::: (D)"
    ]
  },
  {
    "id": 404,
    "context": "During the Industrial Revolution, two plant diseases disappeared in the polluted British industrial city.One was black spot, which infects roses, and the other was tar spot, which infects sycamore.Biologists believe that it is possible that air pollution has eliminated these two diseases.",
    "question": "If which of the following statements is true, can the strongest support for the above argument?",
    "answer": "A",
    "options": [
      "A.Melasma and tar spots will recur when urban air pollution is reduced.",
      "B.Whether the impact of air pollution on many plant species is beneficial or harmful is unclear to scientists.",
      "C.There are ways to prevent the infection of melasma and tar spots, but once infected, it is difficult to eradicate.",
      "D.Some plants can develop strong resistance to air pollution."
    ],
    "raw_logic_programs": [
      "# Declarations\ndiseases = EnumSort([black_spot, tar_spot])\ncities = EnumSort([polluted_city, non_polluted_city])\nconditions = EnumSort([present, absent])\npollution_effect = Function([diseases, cities] -> [conditions])\n\n# Constraints\nForAll([d:diseases], pollution_effect(d, polluted_city) == absent) ::: During the Industrial Revolution, two plant diseases disappeared in the polluted British industrial city\n\n# Options\nQuestion ::: If which of the following statements is true, can the strongest support for the above argument?\nis_strong_support(ForAll([d:diseases], pollution_effect(d, non_polluted_city) == present)) ::: (A) Melasma and tar spots will recur when urban air pollution is reduced\nis_strong_support(Exists([d:diseases], pollution_effect(d, non_polluted_city) == present)) ::: (B) Whether the impact of air pollution on many plant species is beneficial or harmful is unclear to scientists\nis_strong_support(Exists([d:diseases], pollution_effect(d, non_polluted_city) == absent)) ::: (C) There are ways to prevent the infection of melasma and tar spots, but once infected, it is difficult to eradicate\nis_strong_support(Exists([d:diseases], pollution_effect(d, polluted_city) == present)) ::: (D) Some plants can develop strong resistance to air pollution"
    ]
  },
  {
    "id": 405,
    "context": "Weed' originally meant 'useless or unsatisfactory herbaceous plant', and the so-called 'useful' and 'beautiful' actually depend on the perspective of people.The term 'weed' is a convenient label with strong subjective colors, so it is not a scientific classification term.",
    "question": "Which of the following statements is the assumption that holds the above conclusion?",
    "answer": "A",
    "options": [
      "A.All words with strong subjective colors are not scientific classification terms.",
      "B.Scientific classification terms are convenient labels.",
      "C.Some convenient labels with strong subjective colors are not scientific classification terms.",
      "D.Words with strong subjective colors are convenient labels."
    ],
    "raw_logic_programs": [
      "# Declarations\nwords = EnumSort([weed, scientific_classification_term, convenient_label, strong_subjective_color])\nproperties = Function([words] -> [bool])\n\n# Constraints\nproperties(weed) == And(properties(convenient_label), properties(strong_subjective_color)) ::: 'weed' is a convenient label with strong subjective colors\nNot(properties(weed) == properties(scientific_classification_term)) ::: 'weed' is not a scientific classification term\n\n# Options\nQuestion ::: Which of the following statements is the assumption that holds the above conclusion?\nis_assumption(ForAll([w:words], Implies(properties(strong_subjective_color), Not(properties(scientific_classification_term))))) ::: (A)\nis_assumption(ForAll([w:words], Implies(properties(scientific_classification_term), properties(convenient_label)))) ::: (B)\nis_assumption(Exists([w:words], And(properties(convenient_label), properties(strong_subjective_color), Not(properties(scientific_classification_term))))) ::: (C)\nis_assumption(ForAll([w:words], Implies(properties(strong_subjective_color), properties(convenient_label)))) ::: (D)"
    ]
  },
  {
    "id": 406,
    "context": "The vervet monkey will notify the companion with a scream when it finds a carnivore nearby.Vervet monkeys will scream differently depending on whether the danger comes from land or air.",
    "question": "If which of the following statements is true, is it most helpful to explain the above behavior of the vervet monkey?",
    "answer": "B",
    "options": [
      "A.Some terrestrial carnivores only eat vervet monkeys, and raptors attacking vervet monkeys from the air feed on various animals.",
      "B.Vervet monkeys climb onto trees to avoid terrestrial carnivores, and underneath potential leaves to avoid raptors.",
      "C.No predator that poses a danger to vervet monkeys can attack vervet monkeys from both land and air.",
      "D.Different types of carnivores can deal with different numbers of vervet monkeys."
    ],
    "raw_logic_programs": [
      "# Declarations\ncarnivores = EnumSort([land, air])\nmonkeys = EnumSort([vervet])\nscream_type = Function([monkeys, carnivores] -> [bool])\n\n# Constraints\nForAll([c:carnivores], Exists([m:monkeys], scream_type(m, c))) ::: Vervet monkeys will scream differently depending on whether the danger comes from land or air\n\n# Options\nQuestion ::: If which of the following statements is true, is it most helpful to explain the above behavior of the vervet monkey?\nis_helpful(And(Exists([c:carnivores], c == land), Exists([c:carnivores], c == air))) ::: (A)\nis_helpful(And(Exists([c:carnivores], c == land), Exists([c:carnivores], c == air))) ::: (B)\nis_helpful(Not(Exists([c:carnivores], And(c == land, c == air)))) ::: (C)\nis_helpful(Exists([c:carnivores], c == land)) ::: (D)"
    ]
  },
  {
    "id": 407,
    "context": "Even the most experienced jewelry collectors will not buy diamonds based on their naked eye identification.They are worried that their eyes will be deceived by fakes.Since the most experienced jewelry collectors cannot distinguish a fake from a real diamond with the naked eye, the fake has the same aesthetic enjoyment as the real one, and the two pieces of jewelry have the same value.",
    "question": "If which of the following statements is true, which strongly supports the above argument?",
    "answer": "D",
    "options": [
      "A.The most experienced jewelry collectors cannot distinguish fakes from real diamonds.",
      "B.The most experienced jewelry collectors only collect jewelry that is more aesthetically pleasing.",
      "C.The value of a piece of jewelry depends largely on the needs of the market.",
      "D.The value of a piece of jewelry should be entirely determined by the aesthetic enjoyment it provides."
    ],
    "raw_logic_programs": [
      "# Declarations\ncollectors = EnumSort([experienced, inexperienced])\njewelry = EnumSort([real_diamond, fake_diamond])\nvalue = Function([jewelry] -> [int])\naesthetic_enjoyment = Function([jewelry] -> [int])\ncan_distinguish = Function([collectors, jewelry] -> [bool])\n\n# Constraints\nForAll([j:jewelry], Not(can_distinguish(experienced, j))) ::: Even the most experienced jewelry collectors will not buy diamonds based on their naked eye identification\nForAll([j:jewelry], aesthetic_enjoyment(real_diamond) == aesthetic_enjoyment(fake_diamond)) ::: The fake has the same aesthetic enjoyment as the real one\nForAll([j:jewelry], value(real_diamond) == value(fake_diamond)) ::: The two pieces of jewelry have the same value\n\n# Options\nQuestion ::: If which of the following statements is true, which strongly supports the above argument?\nis_strong_support(ForAll([j:jewelry], Not(can_distinguish(experienced, j)))) ::: (A)\nis_strong_support(ForAll([j:jewelry], aesthetic_enjoyment(j) > 0)) ::: (B)\nis_strong_support(Exists([j:jewelry], value(j) > 0)) ::: (C)\nis_strong_support(ForAll([j:jewelry], value(j) == aesthetic_enjoyment(j))) ::: (D)"
    ]
  },
  {
    "id": 408,
    "context": "All game rules are fair, official rules are game rules.Therefore, the officialdom rules are fair.",
    "question": "Which of the following inferences is most similar to the above inferences?",
    "answer": "B",
    "options": [
      "A.Some moral hazards cannot be passed on, and personal reputation risk is moral hazard.Therefore, personal reputation risk cannot be passed on.",
      "B.College students are useful talents of the country, and Zhang Hua is a college student.Therefore, Zhang Hua is a useful talent of the country.",
      "C.College students are people with higher education, and Wang Lei is a college student, so Wang Lei is a higher education person.",
      "D.All talented teenagers are very conceited, and some talented teenagers are Go players, so some Go players are conceited."
    ],
    "raw_logic_programs": [
      "# Declarations\ncategories = EnumSort([game_rules, official_rules, fair_rules, officialdom_rules])\nrelations = Function([categories, categories] -> [bool])\n\n# Constraints\nForAll([x:categories], Implies(relations(x, game_rules), relations(x, fair_rules))) ::: All game rules are fair\nForAll([x:categories], Implies(relations(x, official_rules), relations(x, game_rules))) ::: Official rules are game rules\nForAll([x:categories], Implies(relations(x, officialdom_rules), relations(x, official_rules))) ::: Therefore, the officialdom rules are fair\n\n# Options\nQuestion ::: Which of the following inferences is most similar to the above inferences?\nis_similar(ForAll([x:categories], Implies(relations(x, moral_hazards), Not(relations(x, passed_on))))) ::: (A)\nis_similar(ForAll([x:categories], Implies(relations(x, college_students), relations(x, useful_talents)))) ::: (B)\nis_similar(ForAll([x:categories], Implies(relations(x, college_students), relations(x, higher_education)))) ::: (C)\nis_similar(ForAll([x:categories], Implies(relations(x, talented_teenagers), relations(x, conceited)))) ::: (D)"
    ]
  },
  {
    "id": 409,
    "context": "In 2013, a city's science and technology museum sold a total of 30,000 tickets.In 2014, the city 's new planetarium and natural museum opened, and the total number of admission tickets sold at these three venues reached 95,000.This shows that the investment in building planetariums and natural museums is worthwhile, because the number of citizens who have received science education at these venues has more than doubled.",
    "question": "If which of the following statements is true, will the above conclusion be weakened most?",
    "answer": "C",
    "options": [
      "A.The first year of the planetarium and nature museum opening usually attracts a large number of visitors.",
      "B.The planetarium and natural museum actually sold fewer tickets than expected.",
      "C.Most people who visit the Science and Technology Museum will also visit the Planetarium and Nature Museum.",
      "D.The income from admission tickets alone is far from recovering the construction costs of the Planetarium and Natural Museum."
    ],
    "raw_logic_programs": [
      "# Declarations\nvenues = EnumSort([science_museum, planetarium, natural_museum])\ntickets_sold = Function([venues, int] -> [int])\n\n# Constraints\ntickets_sold(science_museum, 2013) == 30000 ::: In 2013, a city's science and technology museum sold a total of 30,000 tickets\ntickets_sold(science_museum, 2014) + tickets_sold(planetarium, 2014) + tickets_sold(natural_museum, 2014) == 95000 ::: In 2014, the total number of admission tickets sold at these three venues reached 95,000\n\n# Options\nQuestion ::: If which of the following statements is true, will the above conclusion be weakened most?\nis_weakened_most(Exists([x:int], tickets_sold(planetarium, x) + tickets_sold(natural_museum, x) > tickets_sold(science_museum, 2013))) ::: (A)\nis_weakened_most(tickets_sold(planetarium, 2014) + tickets_sold(natural_museum, 2014) < Expected) ::: (B)\nis_weakened_most(ForAll([x:int], tickets_sold(science_museum, x) <= tickets_sold(planetarium, x) + tickets_sold(natural_museum, x))) ::: (C)\nis_weakened_most(Income < Construction_Costs) ::: (D)"
    ]
  },
  {
    "id": 410,
    "context": "Compared with Western medicine, Chinese medicine is safe because the ingredients of Chinese medicine are all natural.",
    "question": "In all of the following statements, except for which one, refute the assumptions demonstrated above?",
    "answer": "A",
    "options": [
      "A.Most natural things are safe.",
      "B.Diarrhea is natural, but it can cause death.",
      "C.Some natural things are not safe.",
      "D.Things that are not natural are safe."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrefutes = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], refutes(s) == True) ::: In all of the following statements, except for which one, refute the assumptions demonstrated above?\n\n# Options\nQuestion ::: In all of the following statements, except for which one, refute the assumptions demonstrated above?\nis_exception(refutes(A)) ::: (A) Most natural things are safe.\nis_exception(refutes(B)) ::: (B) Diarrhea is natural, but it can cause death.\nis_exception(refutes(C)) ::: (C) Some natural things are not safe.\nis_exception(refutes(D)) ::: (D) Things that are not natural are safe."
    ]
  },
  {
    "id": 411,
    "context": "Ethicist? Under normal circumstances, it is wrong to take some experimental medical measures without the consent of the patient, because the patient has the right to accept or refuse a certain treatment based on all the detailed medical options available.However, in the case of emergency treatment, sometimes only by surpassing the patient's right to consent to the experimental treatment can we know how to best deal with the emergency patient.Therefore, certain limited experimental treatments without patient consent should be allowed.",
    "question": "Which of the following is the hypothesis required by this ethicist 's argument?",
    "answer": "C",
    "options": [
      "A.If the patient knows that an experimental treatment was used during the emergency treatment, it will have an adverse effect on the outcome of this treatment.",
      "B.Only when an experimental treatment is very likely to produce beneficial results for the patient should this treatment be approved without the patient's consent.",
      "C.At least in some cases of emergency treatment, the benefits of experimental treatment without the patient 's consent may be more important than the patient 's right to consent.",
      "D.When the best medical plan is still unknown, patients no longer have the right to know the medical plan and medical plan."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([ethicist])\nhypotheses = EnumSort([A, B, C, D])\nsupports = Function([arguments, hypotheses] -> [bool])\n\n# Constraints\nsupports(ethicist, C) ::: The argument suggests that in some emergency cases, the benefits of experimental treatment without consent may outweigh the patient's right to consent.\n\n# Options\nQuestion ::: Which of the following is the hypothesis required by this ethicist's argument?\nis_required(supports(ethicist, A)) ::: (A)\nis_required(supports(ethicist, B)) ::: (B)\nis_required(supports(ethicist, C)) ::: (C)\nis_required(supports(ethicist, D)) ::: (D)"
    ]
  },
  {
    "id": 412,
    "context": "The current Chinese men's football team coach Perrin once led the French Lyon team to win the Ligue 1 championship and the French Cup in the 2007/2008 season, but then left the team unexpectedly.At that time his credo was? either absolutely trust or not, there is no middle line.",
    "question": "Which of the following statements most accurately expresses the meaning of Perrin 's creed?",
    "answer": "B",
    "options": [
      "A.If you want to do it, you must have absolute trust, otherwise you will not do it.",
      "B.Absolute trust is the only way to do it.If you do n't, you wo n't get absolute trust.",
      "C.Only by having absolute trust.",
      "D.Do it if you have absolute trust."
    ],
    "raw_logic_programs": [
      "# Declarations\ncredo = EnumSort([trust, not_trust])\nactions = EnumSort([do_it, not_do_it])\nbelief = Function([credo] -> [actions])\n\n# Constraints\nbelief(trust) == do_it ::: If you have absolute trust, you do it\nbelief(not_trust) == not_do_it ::: If you do not have absolute trust, you do not do it\n\n# Options\nQuestion ::: Which of the following statements most accurately expresses the meaning of Perrin's creed?\nis_equivalent(belief(trust) == do_it, belief(not_trust) == not_do_it) ::: (A) If you want to do it, you must have absolute trust, otherwise you will not do it.\nis_equivalent(belief(trust) == do_it, Not(belief(not_trust) == do_it)) ::: (B) Absolute trust is the only way to do it. If you don't, you won't get absolute trust.\nis_equivalent(belief(trust) == do_it) ::: (C) Only by having absolute trust.\nis_equivalent(belief(trust) == do_it) ::: (D) Do it if you have absolute trust."
    ]
  },
  {
    "id": 413,
    "context": "People with depression have a strong tendency to commit suicide.Many people think that depression is a psychological disease.In the mid-20th century, medical research found that there are 3 neurotransmitters (serotonin, nor-nor The concentration of epinephrine and dopamine is lower than that of normal people.Medical scientists speculate that the imbalance of these three neurotransmitters caused depression.",
    "question": "If any of the following statements is true, can the above medical scientist's conclusion be given the strongest support?",
    "answer": "D",
    "options": [
      "A.Depression is not only a mental illness, but also an organic disease.",
      "B.It may be that depression leads to an imbalance in the concentration of these three neurotransmitters in the brain.",
      "C.Women and the elderly are high-risk groups of depression.",
      "D.Drugs developed for the above three neurotransmitters to maintain their concentration balance are effective in treating depression."
    ],
    "raw_logic_programs": [
      "# Declarations\nneurotransmitters = EnumSort([serotonin, norepinephrine, dopamine])\nconditions = EnumSort([depression, neurotransmitter_imbalance])\ncauses = Function([conditions, conditions] -> [bool])\ntreats = Function([conditions, conditions] -> [bool])\n\n# Constraints\ncauses(neurotransmitter_imbalance, depression) ::: Medical scientists speculate that the imbalance of these three neurotransmitters caused depression\n\n# Options\nQuestion ::: If any of the following statements is true, can the above medical scientist's conclusion be given the strongest support?\nis_strong_support(causes(depression, neurotransmitter_imbalance)) ::: (A)\nis_strong_support(causes(depression, neurotransmitter_imbalance)) ::: (B)\nis_strong_support(causes(depression, neurotransmitter_imbalance)) ::: (C)\nis_strong_support(treats(neurotransmitter_imbalance, depression)) ::: (D)"
    ]
  },
  {
    "id": 414,
    "context": "The smog in City B is mainly caused by pollutants such as fine particulate matter (PM2.5), nitrogen-hydrogen compounds and inhalable particulate matter (PM10).Statistical research shows that the number of smog and haze weather in City B dropped significantly last year compared with the previous year, and it was the year with the largest decline since relevant statistics.However, the statistical survey shows that the public's anxiety and anxiety about the smog weather in City B has increased greatly in the past year.",
    "question": "If any of the following statements are true, is it most helpful to eliminate the obvious inconsistencies in the above description?",
    "answer": "C",
    "options": [
      "A.Last year, the news media reports and comments on the smog weather in City B almost doubled from the previous year.",
      "B.Some people in City B who are anxious about the haze weather live in areas where PM2.5 is more polluted.",
      "C.Last year, City B held a large-scale international conference.Temporary measures such as vehicle restrictions and construction site shutdowns were the main reasons for the reduction in haze.",
      "D.The vast majority of residents in City B are aware of the hazards of smog to humans."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([media_reports, pollution_areas, temporary_measures, awareness])\nimpact = Function([factors] -> [bool])\n\n# Constraints\nimpact(media_reports) ::: Last year, the news media reports and comments on the smog weather in City B almost doubled from the previous year\nimpact(pollution_areas) ::: Some people in City B who are anxious about the haze weather live in areas where PM2.5 is more polluted\nimpact(temporary_measures) ::: Last year, City B held a large-scale international conference. Temporary measures such as vehicle restrictions and construction site shutdowns were the main reasons for the reduction in haze\nimpact(awareness) ::: The vast majority of residents in City B are aware of the hazards of smog to humans\n\n# Options\nQuestion ::: If any of the following statements are true, is it most helpful to eliminate the obvious inconsistencies in the above description?\nis_most_helpful(impact(media_reports)) ::: (A)\nis_most_helpful(impact(pollution_areas)) ::: (B)\nis_most_helpful(impact(temporary_measures)) ::: (C)\nis_most_helpful(impact(awareness)) ::: (D)"
    ]
  },
  {
    "id": 415,
    "context": "Some people think that only by establishing a good institutional mechanism can corruption be fundamentally eliminated.However, once a trend is formed in Chinese society, even a powerful system will be torn apart by it.'Correcting the people's hearts and then the world', in order to solve the problem fundamentally, 'rectifying the people's hearts' must be taken as the foundation.Only when the hearts of the people are right can the winds of corruption and utilitarianism be eliminated, and the anti-corruption system can be truly established and effectively implemented.",
    "question": "Which of the following statements is the assumption upon which the above argument relies?",
    "answer": "B",
    "options": [
      "A.There is corruption in any society, and no matter what method is used, it can only weaken corruption and not eradicate it.",
      "B.The formation of corruption and utilitarian winds is not caused by imperfect systems or imprecise implementation.",
      "C.The effective way to change the customs is to select the virtuous and competent, narrow the gap between the rich and the poor, and ideological education for profit.",
      "D.The system is fundamental to correct people's hearts.With the anti-corruption system and strict implementation, the atmosphere will change."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrelies_on = Function([statements] -> [bool])\n\n# Constraints\n# The argument suggests that correcting people's hearts is fundamental to solving corruption, implying that systemic solutions alone are insufficient.\nrelies_on(B) ::: The formation of corruption and utilitarian winds is not caused by imperfect systems or imprecise implementation\n\n# Options\nQuestion ::: Which of the following statements is the assumption upon which the above argument relies?\nis_assumption(relies_on(A)) ::: (A)\nis_assumption(relies_on(B)) ::: (B)\nis_assumption(relies_on(C)) ::: (C)\nis_assumption(relies_on(D)) ::: (D)"
    ]
  },
  {
    "id": 416,
    "context": "Most plants have produced chemicals that resist parasites during long-term evolution.Plants commonly used by humans contain about 40 kinds of natural medicines, that is, compound chemical toxins against bacteria, fungi and other parasites.People ingest these toxins every day without being poisoned.Therefore, the added harm caused by synthetic pesticides sprayed on crops is very small.",
    "question": "If the following statement is true, in addition to which one can weaken the above argument?",
    "answer": "C",
    "options": [
      "A.The concentration of natural medicines contained in plants is much lower than the concentration of synthetic pesticides sprayed on crops.",
      "B.Humans have been taking the natural medicines contained in these plants for thousands of years, and have time to adapt to them.",
      "C.The chemical structure of synthetic pesticides is usually simpler than that of natural drugs contained in plants.",
      "D.Natural medicines contained in plants are usually only suitable for defending against specific organisms, while synthetic pesticides are usually harmful to many organisms."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweaken_argument = Function([statements] -> [bool])\n\n# Constraints\n# The argument is that the added harm caused by synthetic pesticides is very small because people ingest natural plant toxins daily without being poisoned.\n\n# Options\nQuestion ::: Which one can weaken the above argument?\nweaken_argument(A) ::: (A) The concentration of natural medicines contained in plants is much lower than the concentration of synthetic pesticides sprayed on crops.\nweaken_argument(B) ::: (B) Humans have been taking the natural medicines contained in these plants for thousands of years, and have time to adapt to them.\nweaken_argument(C) ::: (C) The chemical structure of synthetic pesticides is usually simpler than that of natural drugs contained in plants.\nweaken_argument(D) ::: (D) Natural medicines contained in plants are usually only suitable for defending against specific organisms, while synthetic pesticides are usually harmful to many organisms."
    ]
  },
  {
    "id": 417,
    "context": "All green or sprouted potatoes contain more toxic alkaloid-solanine.None of the inspected potatoes are green or sprouted.Therefore, the inspected potatoes are safe to eat.",
    "question": "If the following statement is used as a hypothesis, the conclusion of the above reasoning can be logically derived?",
    "answer": "C",
    "options": [
      "A.All potatoes without solanine are safe to eat.",
      "B.Green or sprouted potatoes are not safe to eat.",
      "C.Potatoes that are neither green nor sprouted can be eaten safely.",
      "D.It is not safe to eat potatoes that contain more solanine."
    ],
    "raw_logic_programs": [
      "# Declarations\npotatoes = EnumSort([inspected, green_sprouted])\nproperties = EnumSort([contains_solanine, safe_to_eat])\nhas_property = Function([potatoes] -> [properties])\n\n# Constraints\nForAll([p:potatoes], Implies(p == green_sprouted, has_property(p) == contains_solanine)) ::: All green or sprouted potatoes contain more toxic alkaloid-solanine\nForAll([p:potatoes], Not(p == green_sprouted)) ::: None of the inspected potatoes are green or sprouted\n\n# Options\nQuestion ::: If the following statement is used as a hypothesis, the conclusion of the above reasoning can be logically derived?\nis_derived(Implies(Not(has_property(inspected) == contains_solanine), has_property(inspected) == safe_to_eat)) ::: (A)\nis_derived(Implies(p == green_sprouted, Not(has_property(p) == safe_to_eat))) ::: (B)\nis_derived(Implies(Not(p == green_sprouted), has_property(p) == safe_to_eat)) ::: (C)\nis_derived(Implies(has_property(p) == contains_solanine, Not(has_property(p) == safe_to_eat))) ::: (D)"
    ]
  },
  {
    "id": 418,
    "context": "In recent years, the cost of manufacturing in China has been rising continuously.According to the survey data of the Boston Consulting Group, the cost of manufacturing in China is close to that of the United States.Taking the United States as the benchmark (100), the Chinese manufacturing index is 96, which means that for the same product, the manufacturing cost in the United States is $ 1, and in China it is $ 0.96.Despite rising labor costs in China, the income of Chinese workers is significantly lower than that of workers in the same industry in the United States.",
    "question": "If any of the following statements are true, can we best explain the seemingly contradictory phenomenon?",
    "answer": "D",
    "options": [
      "A.The price level in most parts of China is lower than that in the United States.",
      "B.Due to rising labor costs in China, some manufacturing industries have begun to transfer some factories to India or Southeast Asian countries.",
      "C.The profit margin of China's manufacturing industry is generally relatively low.",
      "D.In recent years, the cost of fixed assets and energy costs of investment in China have continued to rise."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([China, United_States])\nindices = Function([countries] -> [int])\ncosts = Function([countries] -> [float])\nprofit_margin = Function([countries] -> [float])\nprice_level = Function([countries] -> [float])\nlabor_costs = Function([countries] -> [float])\nfixed_assets_costs = Function([countries] -> [float])\nenergy_costs = Function([countries] -> [float])\n\n# Constraints\nindices(United_States) == 100 ::: Taking the United States as the benchmark (100)\nindices(China) == 96 ::: The Chinese manufacturing index is 96\ncosts(United_States) == 1.0 ::: Manufacturing cost in the United States is $1\ncosts(China) == 0.96 ::: Manufacturing cost in China is $0.96\nlabor_costs(China) < labor_costs(United_States) ::: The income of Chinese workers is significantly lower than that of workers in the same industry in the United States\n\n# Options\nQuestion ::: If any of the following statements are true, can we best explain the seemingly contradictory phenomenon?\nis_best_explanation(price_level(China) < price_level(United_States)) ::: (A)\nis_best_explanation(Exists([c:countries], And(labor_costs(China) > labor_costs(c), Not(c == China)))) ::: (B)\nis_best_explanation(profit_margin(China) < profit_margin(United_States)) ::: (C)\nis_best_explanation(And(fixed_assets_costs(China) > fixed_assets_costs(United_States), energy_costs(China) > energy_costs(United_States))) ::: (D)"
    ]
  },
  {
    "id": 419,
    "context": "One of the strictest laws in history to ban smoking, although it has not yet banned people from smoking in their homes, it prohibits people from smoking in all public places and workplaces.If this law is strictly enforced, it will completely protect workers from second-hand smoke.",
    "question": "If which of the following statements is true, the above argument is weakened most effectively?",
    "answer": "B",
    "options": [
      "A.The exhaust of cars from people commuting to work is much more harmful than smoking second-hand smoke.",
      "B.Persons such as tutors, nurses, hourly workers, etc.all work at the employer 's home.",
      "C.No piece of legislation and its implementation can fully realize the intent of the legislator.",
      "D.This smoking control law overestimates the dangers of smoking secondhand smoke."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens_argument = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], weakens_argument(s) == False) ::: Initially assume no statement weakens the argument\n\n# Options\nQuestion ::: If which of the following statements is true, the above argument is weakened most effectively?\nweakens_argument(A) == True ::: (A) The exhaust of cars from people commuting to work is much more harmful than smoking second-hand smoke.\nweakens_argument(B) == True ::: (B) Persons such as tutors, nurses, hourly workers, etc. all work at the employer's home.\nweakens_argument(C) == True ::: (C) No piece of legislation and its implementation can fully realize the intent of the legislator.\nweakens_argument(D) == True ::: (D) This smoking control law overestimates the dangers of smoking secondhand smoke."
    ]
  },
  {
    "id": 420,
    "context": "Expert? Only when the property rights of an item are clearly defined and can be traded can the real value of the item be reflected.We said that we must protect the interests of farmers.If we can't figure out what the farmers' best interests are, how to protect them? What valuable things do farmers have? That is the homestead.Only when the value of the homestead is fully reflected can we really protect the interests of farmers.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.To truly protect the interests of farmers, it is necessary to allow transactions on homesteads.",
      "B.As long as you understand what is the peasants 'best interests, you can protect the peasants' interests.",
      "C.As long as the property rights of the homestead are clearly defined and can be traded on, the true value of it can be reflected.",
      "D.If the homestead is traded, its value can be fully reflected."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ntrue_statement = Function([statements] -> [bool])\n\n# Constraints\ntrue_statement(A) == Implies(And(true_statement(C), true_statement(D)), true_statement(A)) ::: If the property rights of the homestead are clearly defined and can be traded, and if the homestead is traded, then to truly protect the interests of farmers, it is necessary to allow transactions on homesteads.\ntrue_statement(B) == False ::: The statement contradicts the problem description, which implies that understanding the best interests alone is not sufficient for protection.\ntrue_statement(C) == Implies(And(true_statement(C), true_statement(D)), true_statement(C)) ::: If the property rights of the homestead are clearly defined and can be traded, then the true value of it can be reflected.\ntrue_statement(D) == Implies(true_statement(D), true_statement(C)) ::: If the homestead is traded, its value can be fully reflected.\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(true_statement(A)) ::: (A)\nis_must_true(true_statement(B)) ::: (B)\nis_must_true(true_statement(C)) ::: (C)\nis_must_true(true_statement(D)) ::: (D)"
    ]
  },
  {
    "id": 421,
    "context": "twenty one.Standard antibiotics usually contain only one active ingredient, while herbal antibacterial drugs contain many.Therefore, herbal medicines are more likely to maintain their effectiveness than standard antibiotics when fighting new resistant bacteria.For the strain, it is difficult to develop resistance to herbal medicines, just as it is difficult for a chef to make a dish that can satisfy the taste of dozens of guests at the same time, and it is much easier to make a dish that meets the taste of one guest.",
    "question": "Which of the following ways of reasoning is most similar to the above argument?",
    "answer": "D",
    "options": [
      "A.If you have a large deposit in the bank, your purchasing power will be strong.If your purchasing power is strong, you will be happy.Therefore, if your bank has a large amount of deposits, you will be happy.",
      "B.A full-term baby has a certain instinct reaction after birth that will disappear by 2 months.The baby has been 3 months old, and there is this instinctive reaction.Therefore, this baby was not born at full term.",
      "C.Depending on the size, the supermarket may require 1 to 3 security guards to prevent theft.If any supermarket decides to use 3 security guards, then it must be a big supermarket.",
      "D.Electric current passes through wires as water flows through pipes.Since a large-diameter pipeline has a larger flow rate than a small-diameter pipeline, a thicker wire has a larger amount of electricity than a thin wire."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nreasoning = Function([arguments] -> [bool])\n\n# Constraints\n# The original argument is about the difficulty of developing resistance to herbal medicines due to multiple active ingredients, similar to satisfying multiple tastes.\n# We need to find a reasoning pattern that matches this analogy.\n\n# Options\nQuestion ::: Which of the following ways of reasoning is most similar to the above argument?\nis_similar(reasoning(A)) ::: (A) If you have a large deposit in the bank, your purchasing power will be strong. If your purchasing power is strong, you will be happy. Therefore, if your bank has a large amount of deposits, you will be happy.\nis_similar(reasoning(B)) ::: (B) A full-term baby has a certain instinct reaction after birth that will disappear by 2 months. The baby has been 3 months old, and there is this instinctive reaction. Therefore, this baby was not born at full term.\nis_similar(reasoning(C)) ::: (C) Depending on the size, the supermarket may require 1 to 3 security guards to prevent theft. If any supermarket decides to use 3 security guards, then it must be a big supermarket.\nis_similar(reasoning(D)) ::: (D) Electric current passes through wires as water flows through pipes. Since a large-diameter pipeline has a larger flow rate than a small-diameter pipeline, a thicker wire has a larger amount of electricity than a thin wire."
    ]
  },
  {
    "id": 422,
    "context": "twenty two.WiFi transmitters generate electromagnetic radiation.Five Danish middle school students put cress seeds in a room with a WiFi transmitter and without a WiFi transmitter for cultivation.After 12 days, they found that the germination rate of the seeds in the room without a WiFi transmitter was 95.4%, with WiFi transmission The germination rate of seeds in the machine room was 85.3%.Many people worry that WiFi radiation will affect human health.However, many experts believe that the above experiment is not rigorous, and it cannot be concluded that WiFi radiation is harmful to humans.",
    "question": "Which of the following assertions can support the opinions of these experts?",
    "answer": "A",
    "options": [
      "A.The impact of WiFi radiation on the human body is related not only to its frequency, but also to the distance between the WiFi transmitter and the human body.",
      "B.Keep other conditions unchanged in the same room, and repeat the experiment with and without a WiFi transmitter.",
      "C.There are many factors that affect the germination of seeds, and experiments by Danish middle school students cannot exclude the interference of other factors.",
      "D.Animal experiments should be done to determine the effects of WiFi radiation on the human body, not just plant experiments."
    ],
    "raw_logic_programs": [
      "# Declarations\nassertions = EnumSort([A, B, C, D])\nsupports_experts = Function([assertions] -> [bool])\n\n# Constraints\nsupports_experts(A) ::: The impact of WiFi radiation on the human body is related not only to its frequency, but also to the distance between the WiFi transmitter and the human body\nsupports_experts(B) ::: Keep other conditions unchanged in the same room, and repeat the experiment with and without a WiFi transmitter\nsupports_experts(C) ::: There are many factors that affect the germination of seeds, and experiments by Danish middle school students cannot exclude the interference of other factors\nsupports_experts(D) ::: Animal experiments should be done to determine the effects of WiFi radiation on the human body, not just plant experiments\n\n# Options\nQuestion ::: Which of the following assertions can support the opinions of these experts?\nis_valid(supports_experts(A)) ::: (A)\nis_valid(supports_experts(B)) ::: (B)\nis_valid(supports_experts(C)) ::: (C)\nis_valid(supports_experts(D)) ::: (D)"
    ]
  },
  {
    "id": 423,
    "context": "twenty three.Zhang Hua said to Wang Lei? You told me that as the legal owner of the company, as long as I want, I have the right to sell it.However, you told me that if I sold it, the loyal employees would suffer misfortune, so I have no right to do so.Obviously, your two claims are inconsistent.",
    "question": "Which of the following statements best describes the flaws in Zhang Hua 's inference?",
    "answer": "D",
    "options": [
      "A.Zhang Hua ignored that his employees also had the rights related to the sale of the company.",
      "B.Zhang Hua did not provide sufficient and reliable reasons for selling his company.",
      "C.Zhang Hua's right not to sell his company now does not mean that he never has the right to sell it.",
      "D.Zhang Hua confuses company ownership with responsibility for loyal employees."
    ],
    "raw_logic_programs": [
      "# Declarations\nclaims = EnumSort([legal_owner_right, employee_consequence])\nrights = EnumSort([right_to_sell, no_right_to_sell])\ninference = Function([claims] -> [rights])\n\n# Constraints\ninference(legal_owner_right) == right_to_sell ::: As the legal owner, Zhang Hua has the right to sell the company\ninference(employee_consequence) == no_right_to_sell ::: If selling causes misfortune to loyal employees, Zhang Hua has no right to sell\n\n# Options\nQuestion ::: Which of the following statements best describes the flaws in Zhang Hua's inference?\nis_flaw(inference(legal_owner_right) != inference(employee_consequence)) ::: (A) Zhang Hua ignored that his employees also had the rights related to the sale of the company\nis_flaw(Not(Exists([r:rights], inference(legal_owner_right) == r))) ::: (B) Zhang Hua did not provide sufficient and reliable reasons for selling his company\nis_flaw(Exists([r:rights], inference(legal_owner_right) == r) && inference(employee_consequence) == no_right_to_sell) ::: (C) Zhang Hua's right not to sell his company now does not mean that he never has the right to sell it\nis_flaw(inference(legal_owner_right) == inference(employee_consequence)) ::: (D) Zhang Hua confuses company ownership with responsibility for loyal employees"
    ]
  },
  {
    "id": 424,
    "context": "twenty four.Psychologists' long-term observation of the parking lot of a shopping mall found that when a car is quietly waiting to enter the parking space, the driver takes an average of 39 seconds to drive out of the parking space; when the owner waiting to enter whistle impatiently, the driver It takes an average of 51 seconds to get out of the parking space; when there is no car waiting to enter the parking space, the driver takes an average of 32 seconds to get out of the parking space.This shows that the driver still has an appetite for the parking space that is about to leave, and the appetite increases as other drivers expect the parking space to increase.",
    "question": "If which of the following statements is true, it weakens the speculation above?",
    "answer": "C",
    "options": [
      "A.Most of the drivers driving in or out of the parking lot of the shopping mall are amateur drivers, and many of them are novice drivers with a mileage of less than 5,000 kilometers.",
      "B.When someone whistles impatiently on the side, almost all drivers who are leaving the parking space will feel unhappy, and this unhappiness affects the time they leave the parking space.",
      "C.When someone expects the driver to skillfully drive the car out, most drivers will generate psychological pressure.The greater the pressure, the slower the driver will get out of the parking space.",
      "D.As far as vehicles are waiting to enter the parking spaces, compared with other parking lots in the neighborhood, the cases of exiting and entering parking spaces in shopping mall parking lots are not necessarily representative."
    ],
    "raw_logic_programs": [
      "# Declarations\ndrivers = EnumSort([quiet, impatient, no_waiting])\ntimes = Function([drivers] -> [int])\n\n# Constraints\ntimes(quiet) == 39 ::: when a car is quietly waiting to enter the parking space, the driver takes an average of 39 seconds to drive out\ntimes(impatient) == 51 ::: when the owner waiting to enter whistles impatiently, the driver takes an average of 51 seconds to get out\ntimes(no_waiting) == 32 ::: when there is no car waiting to enter the parking space, the driver takes an average of 32 seconds to get out\n\n# Options\nQuestion ::: If which of the following statements is true, it weakens the speculation above?\nis_weakening(Exists([d:drivers], And(d == quiet, times(d) != 39))) ::: (A)\nis_weakening(Exists([d:drivers], And(d == impatient, times(d) != 51))) ::: (B)\nis_weakening(Exists([d:drivers], And(d == quiet, times(d) > 39))) ::: (C)\nis_weakening(Exists([d:drivers], And(d == no_waiting, times(d) != 32))) ::: (D)"
    ]
  },
  {
    "id": 425,
    "context": "Many successful film and television directors start their professional careers after several years of formal professional learning.Although a considerable number of film and television directors have not undergone formal professional learning, they have mastered technology by learning from their peers in practice.But no film and television director who ignores the psychological needs of the public can succeed.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.The more a film and television director values â€‹â€‹the psychological needs of the public, the more likely it is to succeed.",
      "B.No film and television director who has mastered technology by learning from peers in practice will ignore the psychological needs of the public.",
      "C.All unsuccessful film and television directors have ignored the psychological needs of the public.",
      "D.Not all film and television directors who have gone through formal professional studies ignore the psychological needs of the public."
    ],
    "raw_logic_programs": [
      "# Declarations\ndirectors = EnumSort([successful, unsuccessful])\nlearning_methods = EnumSort([formal_learning, peer_learning])\npsychological_needs = EnumSort([values_needs, ignores_needs])\ncareer_start = Function([directors] -> [learning_methods])\npsychology = Function([directors] -> [psychological_needs])\n\n# Constraints\nForAll([d:directors], Implies(career_start(d) == formal_learning, Exists([years:int], years >= 0))) ::: Many successful film and television directors start their professional careers after several years of formal professional learning\nForAll([d:directors], Implies(career_start(d) == peer_learning, Exists([years:int], years >= 0))) ::: A considerable number of film and television directors have not undergone formal professional learning, they have mastered technology by learning from their peers in practice\nForAll([d:directors], Implies(psychology(d) == ignores_needs, d == unsuccessful)) ::: No film and television director who ignores the psychological needs of the public can succeed\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(ForAll([d:directors], Implies(psychology(d) == values_needs, d == successful))) ::: (A)\nis_must_true(ForAll([d:directors], Implies(career_start(d) == peer_learning, psychology(d) != ignores_needs))) ::: (B)\nis_must_true(ForAll([d:directors], Implies(d == unsuccessful, psychology(d) == ignores_needs))) ::: (C)\nis_must_true(Exists([d:directors], And(career_start(d) == formal_learning, psychology(d) != ignores_needs))) ::: (D)"
    ]
  },
  {
    "id": 426,
    "context": "Since 1991, Somalia has actually been in anarchy under the separation of armed forces.In 1991, Somalia 's GDP per capita was US $ 210, and it increased to US $ 600 in 2011.In the same year, Tanzania 's per capita GDP was US $ 548, Central Africa was US $ 436, and Ethiopia was US $ 350.From this point of view, compared with many countries in Africa that are ruled by a strong central government, Somalia is in an anarchy and its people's living standards are not bad at all.",
    "question": "Which of the following statements accurately summarizes the most serious flaw of the above argument?",
    "answer": "D",
    "options": [
      "A.Somalia 's wealth is concentrated in the hands of a few people, and many people fall into poverty due to factors such as security or unemployment.",
      "B.The increase in GDP per capita has benefited from Somali pirates hijacking merchant ships from various countries and plundering the property of other countries.",
      "C.The reason for the increase in GDP per capita in Somalia is the fact of economic freedom contained in anarchy.",
      "D.It is unreliable to judge the overall living standard of a country 's people based on a single indicator."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([Somalia, Tanzania, Central_Africa, Ethiopia])\nyears = EnumSort([1991, 2011])\ngdp_per_capita = Function([countries, years] -> [int])\nliving_standards = Function([countries] -> [bool])\n\n# Constraints\ngdp_per_capita(Somalia, 1991) == 210 ::: Somalia's GDP per capita was US $ 210 in 1991\ngdp_per_capita(Somalia, 2011) == 600 ::: Somalia's GDP per capita increased to US $ 600 in 2011\ngdp_per_capita(Tanzania, 2011) == 548 ::: Tanzania's GDP per capita was US $ 548 in 2011\ngdp_per_capita(Central_Africa, 2011) == 436 ::: Central Africa's GDP per capita was US $ 436 in 2011\ngdp_per_capita(Ethiopia, 2011) == 350 ::: Ethiopia's GDP per capita was US $ 350 in 2011\nliving_standards(Somalia) == True ::: The argument claims Somalia's living standards are not bad\n\n# Options\nQuestion ::: Which of the following statements accurately summarizes the most serious flaw of the above argument?\nis_flaw(And(gdp_per_capita(Somalia, 2011) > gdp_per_capita(Tanzania, 2011), gdp_per_capita(Somalia, 2011) > gdp_per_capita(Central_Africa, 2011), gdp_per_capita(Somalia, 2011) > gdp_per_capita(Ethiopia, 2011), living_standards(Somalia) == False)) ::: (A)\nis_flaw(Exists([p:pirates], And(pirates(p), benefits_from_piracy(Somalia, p)))) ::: (B)\nis_flaw(And(economic_freedom(Somalia), increase_in_gdp_due_to_anarchy(Somalia))) ::: (C)\nis_flaw(And(single_indicator(gdp_per_capita), unreliable_for_living_standards(gdp_per_capita))) ::: (D)"
    ]
  },
  {
    "id": 427,
    "context": "The core subject of the University of Sydney Business School is 'Critical Thinking in Business'.At the end of the final exam, 1200 students took part, but more than 400 failed.Among them, 80% were Chinese students.The University of Sydney explained? 'Chinese students lack critical thinking and their English is not good.' Student representative L complained about this? 'Students admitted to the school are all accredited by the school, and the business school entrance examination requires IELTS 7 points., We have all reached this level.'",
    "question": "Which of the following statements is the hypothesis on which student representative L' s complaint relies?",
    "answer": "C",
    "options": [
      "A.The school may discriminate unfairly when evaluating the scores of Chinese students.",
      "B.The school has an unshirkable responsibility for failing students, and the cost of renewal should be halved.",
      "C.The school's requirements for students' English language entry are the same as those required for completion of all subjects after enrollment.",
      "D.The renewal fee for each course is 5,000 Australian dollars.This high failure rate is due to the school's desire to earn renewal fees."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([Chinese, Non_Chinese])\nexam_outcome = EnumSort([pass, fail])\nlanguage_requirement = EnumSort([entry, completion])\ncomplaint = Function([students, exam_outcome] -> [int])\nrequirements = Function([language_requirement] -> [int])\n\n# Constraints\ncomplaint(Chinese, fail) > 400 ::: More than 400 students failed, and 80% of them were Chinese\nrequirements(entry) == 7 ::: The business school entrance examination requires IELTS 7 points\n\n# Options\nQuestion ::: Which of the following statements is the hypothesis on which student representative L's complaint relies?\nis_hypothesis(requirements(entry) == requirements(completion)) ::: (C) The school's requirements for students' English language entry are the same as those required for completion of all subjects after enrollment.\nis_hypothesis(Exists([s:students], unfair_evaluation(s))) ::: (A) The school may discriminate unfairly when evaluating the scores of Chinese students.\nis_hypothesis(school_responsibility_for_failure) ::: (B) The school has an unshirkable responsibility for failing students, and the cost of renewal should be halved.\nis_hypothesis(renewal_fee == 5000) ::: (D) The renewal fee for each course is 5,000 Australian dollars. This high failure rate is due to the school's desire to earn renewal fees."
    ]
  },
  {
    "id": 428,
    "context": "Unethical behavior is against human nature, and everything that violates human nature is just as bad.Because killing people is immoral, killing a person is as bad as killing a hundred people.",
    "question": "Which of the following statements best fits the principles expressed above?",
    "answer": "A",
    "options": [
      "A.To sacrifice one person to save one person is as noble as to sacrifice one person to save one hundred people.",
      "B.Robbery is both immoral and contrary to human nature, it is as bad as killing a person.",
      "C.In the case where only one person can be killed to save the other, killing is as bad as not killing.",
      "D.Since rape is immoral, society should prevent rape in the same way as murder."
    ],
    "raw_logic_programs": [
      "# Declarations\nactions = EnumSort([sacrifice_one_to_save_one, sacrifice_one_to_save_hundred, robbery, killing_one, killing_hundred, rape, not_killing])\nmorality = Function([actions] -> [bool])\n\n# Constraints\nForAll([a:actions], Implies(morality(a) == False, a == killing_one)) ::: Killing a person is immoral\nForAll([a:actions], Implies(morality(a) == False, a == killing_hundred)) ::: Killing a hundred people is immoral\nForAll([a:actions], Implies(morality(a) == False, a == robbery)) ::: Robbery is immoral\nForAll([a:actions], Implies(morality(a) == False, a == rape)) ::: Rape is immoral\nmorality(killing_one) == morality(killing_hundred) ::: Killing a person is as bad as killing a hundred people\n\n# Options\nQuestion ::: Which of the following statements best fits the principles expressed above?\nis_best_fit(And(morality(sacrifice_one_to_save_one) == morality(sacrifice_one_to_save_hundred))) ::: (A)\nis_best_fit(And(morality(robbery) == morality(killing_one))) ::: (B)\nis_best_fit(And(morality(killing_one) == morality(not_killing))) ::: (C)\nis_best_fit(And(morality(rape) == morality(killing_one))) ::: (D)"
    ]
  },
  {
    "id": 429,
    "context": "Since the beginning of the Zhou Dynasty, China has practised the etiquette of not marrying with the same surname.'Qu Li' said? 'The same surname is the ancestor, and it has the meaning of the family, so it is the surname ...Although the hundred ancestry, the marriage is not connected, Zhou Zhouran also.' 'Mandarin' said? 'Marry a wife to avoid his surname.' ? 'The same surname does not marry, neither evil nor colonization.' From this, the ancients in China have long understood the principles of eugenics and eugenics in modern genetics, otherwise they would not realize the harm of close marriage.",
    "question": "If any of the following statements is true, will it weaken the author's interpretation of 'unmarried with the same surname'?",
    "answer": "D",
    "options": [
      "A.The etiquette system of inter-marriage lays the foundation of etiquette for the political marriage between countries.",
      "B.The ancients in our country formulated the etiquette for unmarried people of the same surname based on the experience that marriage of the same surname leads to incest and poor fertility.",
      "C.Qin and Jin's intermarriage is called Qin Jin's good, Qin Jin's good is a model of the same surname not to marry.",
      "D.The etiquette of unmarriage of the same surname encourages inter-marriage intermarriage, which promotes the integration of all ethnic groups."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens_interpretation = Function([statements] -> [bool])\n\n# Constraints\n# The author's interpretation is that the etiquette of not marrying with the same surname is based on principles of eugenics and genetics.\n\n# Options\nQuestion ::: If any of the following statements is true, will it weaken the author's interpretation of 'unmarried with the same surname'?\nweakens_interpretation(A) ::: (A) The etiquette system of inter-marriage lays the foundation of etiquette for the political marriage between countries.\nweakens_interpretation(B) ::: (B) The ancients in our country formulated the etiquette for unmarried people of the same surname based on the experience that marriage of the same surname leads to incest and poor fertility.\nweakens_interpretation(C) ::: (C) Qin and Jin's intermarriage is called Qin Jin's good, Qin Jin's good is a model of the same surname not to marry.\nweakens_interpretation(D) ::: (D) The etiquette of unmarriage of the same surname encourages inter-marriage intermarriage, which promotes the integration of all ethnic groups."
    ]
  },
  {
    "id": 430,
    "context": "In the years following the implementation of the US Three Guarantees Act, auto companies suffered huge losses due to refunds to returnees.Therefore, before the implementation of China's 'Responsibility Regulations on the Repair, Replacement, and Return of Household Automobile Products' in 2014 (referred to as the 'Three Guarantees Law'), industry insiders predicted that the Three Guarantees Law on Automobiles would have a great impact on automobile manufacturers.However, in the past year since the implementation of the Three Guarantees Law, investigations by reporters in many 4S stores in Beijing, Sichuan and other places have shown that there are zero cases of returning or replacing cars under the Three Guarantees Law.",
    "question": "If the following statement is true, which one best explains the above anomalies?",
    "answer": "C",
    "options": [
      "A.One year after the implementation of the Three Guarantees Law, only 7% of consumers understand the rights of the Three Guarantees before buying a car.",
      "B.Most auto dealers did not introduce consumers to the rights and interests of the Three Guarantees as required by regulations.",
      "C.The key provisions of the Three Guarantees Law protecting the interests of car owners lack operability, making it difficult to succeed in returning or replacing cars.",
      "D.To avoid punishment by law, automakers and dealers have improved the quality of service in maintenance."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nexplanation = Function([statements] -> [bool])\n\n# Constraints\n# The problem description suggests that despite the implementation of the Three Guarantees Law, there were zero cases of returning or replacing cars. We need to find an explanation that aligns with this observation.\n\n# Options\nQuestion ::: If the following statement is true, which one best explains the above anomalies?\nis_best_explanation(explanation(A)) ::: (A) One year after the implementation of the Three Guarantees Law, only 7% of consumers understand the rights of the Three Guarantees before buying a car.\nis_best_explanation(explanation(B)) ::: (B) Most auto dealers did not introduce consumers to the rights and interests of the Three Guarantees as required by regulations.\nis_best_explanation(explanation(C)) ::: (C) The key provisions of the Three Guarantees Law protecting the interests of car owners lack operability, making it difficult to succeed in returning or replacing cars.\nis_best_explanation(explanation(D)) ::: (D) To avoid punishment by law, automakers and dealers have improved the quality of service in maintenance."
    ]
  },
  {
    "id": 431,
    "context": "Among the pilots who joined the state-owned airlines more than ten years ago, those who later transferred to private airlines now usually have an annual salary of more than one million, while those who remain in the state-owned airlines generally do not exceed 600,000 yuan.These data indicate that the salaries of pilots of state-owned airlines are too low.",
    "question": "Which of the following statements is the assumption required for the above conclusion?",
    "answer": "C",
    "options": [
      "A.The vast majority of pilots transferred to private airlines believe that the salaries of state-owned airlines are too low.",
      "B.Those pilots transferred to private airlines generally have higher ranks and stronger working abilities.",
      "C.If those pilots who still stay in state-run airlines also choose to go to private airlines, their annual salary will also exceed one million.",
      "D.Private airline pilots and national airline pilots have roughly the same mileage each year."
    ],
    "raw_logic_programs": [
      "# Declarations\npilots = EnumSort([state_owned, private])\nsalaries = Function([pilots] -> [int])\ntransferred = Function([pilots] -> [bool])\n\n# Constraints\nsalaries(private) > 1000000 ::: those who transferred to private airlines now usually have an annual salary of more than one million\nsalaries(state_owned) <= 600000 ::: those who remain in the state-owned airlines generally do not exceed 600,000 yuan\n\n# Options\nQuestion ::: Which of the following statements is the assumption required for the above conclusion?\nis_assumption(ForAll([p:pilots], Implies(transferred(p), salaries(p) > 600000))) ::: (A)\nis_assumption(ForAll([p:pilots], Implies(transferred(p), higher_rank_and_ability(p)))) ::: (B)\nis_assumption(ForAll([p:pilots], Implies(Not(transferred(p)), salaries(private) > 1000000))) ::: (C)\nis_assumption(ForAll([p:pilots], mileage(private) == mileage(state_owned))) ::: (D)"
    ]
  },
  {
    "id": 432,
    "context": "Countries with a small population with higher education are destined to be economically and politically weak.However, in countries with a large population of highly educated people, their governments have serious financial commitments to public education.Therefore, any country with a government that can make such a commitment will be free from economic and political weakness.",
    "question": "Which of the following arguments is most similar to the above argument?",
    "answer": "C",
    "options": [
      "A.Poets who have created high-quality poetry have learned traditional poetry, and poets who have not learned traditional poetry are most likely to create innovative poetry.Therefore, to create innovative poetry is best not to learn traditional poetry.",
      "B.A person who does not understand teaching cannot understand the personality of the students he teaches.Therefore, a person who understands teaching can understand the personality of the students he teaches.",
      "C.A person who lacks emotional resonance is not a good candidate for public office, while a person with emotional resonance is good at manipulating the emotions of others.Therefore, people who are good at manipulating the feelings of others are excellent candidates for public office.",
      "D.If the climate changes suddenly, animals with a single type of food will be more difficult to survive.However, animals with a wide range of foods will not, because abrupt climate change will only eliminate certain types of food."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\npremises = Function([arguments] -> [bool])\nconclusions = Function([arguments] -> [bool])\n\n# Constraints\npremises(A) == And(\n    ForAll([p:poets], Implies(high_quality_poetry(p), learned_traditional_poetry(p))),\n    ForAll([p:poets], Implies(Not(learned_traditional_poetry(p)), innovative_poetry(p)))\n) ::: Poets who have created high-quality poetry have learned traditional poetry, and poets who have not learned traditional poetry are most likely to create innovative poetry.\n\nconclusions(A) == ForAll([p:poets], Implies(innovative_poetry(p), Not(learned_traditional_poetry(p)))) ::: Therefore, to create innovative poetry is best not to learn traditional poetry.\n\npremises(B) == ForAll([p:people], Implies(Not(understands_teaching(p)), Not(understands_student_personality(p)))) ::: A person who does not understand teaching cannot understand the personality of the students he teaches.\n\nconclusions(B) == ForAll([p:people], Implies(understands_teaching(p), understands_student_personality(p))) ::: Therefore, a person who understands teaching can understand the personality of the students he teaches.\n\npremises(C) == And(\n    ForAll([p:people], Implies(Not(emotional_resonance(p)), Not(good_candidate_public_office(p)))),\n    ForAll([p:people], Implies(emotional_resonance(p), good_at_manipulating_emotions(p)))\n) ::: A person who lacks emotional resonance is not a good candidate for public office, while a person with emotional resonance is good at manipulating the emotions of others.\n\nconclusions(C) == ForAll([p:people], Implies(good_at_manipulating_emotions(p), good_candidate_public_office(p))) ::: Therefore, people who are good at manipulating the feelings of others are excellent candidates for public office.\n\npremises(D) == And(\n    ForAll([a:animals], Implies(single_food_type(a), Not(survive_climate_change(a)))),\n    ForAll([a:animals], Implies(wide_food_range(a), survive_climate_change(a)))\n) ::: If the climate changes suddenly, animals with a single type of food will be more difficult to survive. However, animals with a wide range of foods will not, because abrupt climate change will only eliminate certain types of food.\n\nconclusions(D) == ForAll([a:animals], Implies(survive_climate_change(a), wide_food_range(a))) ::: Therefore, animals that survive climate change have a wide range of foods.\n\n# Options\nQuestion ::: Which of the following arguments is most similar to the above argument?\nis_similar(B) ::: (B)"
    ]
  },
  {
    "id": 433,
    "context": "North American male brown bears usually attack and kill cubs born to female bears who are not bred by it.However, during the salmon migration season from July to August each year, among brown bears fishing in Haro Bay, male brown bears attack and kill female brown bear cubs less than one-tenth the usual time.The probability of encountering a female brown bear and a male brown bear unexpectedly is dozens of times higher than usual.In this period when female brown bears and male brown bears meet most, the probability of cubs being killed is the lowest.",
    "question": "If which of the following statements is true, provides the best explanation for the abnormal behavior of male brown bears?",
    "answer": "A",
    "options": [
      "A.Brown bears usually fight to protect their territory.During the salmon migration season, they focus on their fishing skills and rarely fight for the territory.",
      "B.Cubs rely on female brown bears for 3 years to survive independently.Since female brown bears will not conceive during lactation, cubs between 3 and 12 months old have the highest kill rate.",
      "C.Salmon is the main food source for North American brown bears to replenish body fat in large amounts.Brown bears struggle to gain weight by fishing in order to survive the coming severe winter.",
      "D.In order to protect future cubs, female brown bears usually mate with multiple male brown bears, so that more male brown bears think they are the father of their cubs."
    ],
    "raw_logic_programs": [
      "# Declarations\nbears = EnumSort([male, female, cub])\nseasons = EnumSort([salmon_migration, non_migration])\nbehaviors = EnumSort([attack, not_attack])\nencounters = Function([bears, bears, seasons] -> [bool])\nbehavior = Function([bears, bears, seasons] -> [behaviors])\n\n# Constraints\nForAll([s:seasons], behavior(male, cub, s) == attack) ::: North American male brown bears usually attack and kill cubs\nbehavior(male, cub, salmon_migration) == not_attack ::: During the salmon migration season, male brown bears attack and kill cubs less than one-tenth the usual time\nencounters(female, male, salmon_migration) == True ::: The probability of encountering a female brown bear and a male brown bear is higher during salmon migration\n\n# Options\nQuestion ::: If which of the following statements is true, provides the best explanation for the abnormal behavior of male brown bears?\nis_best_explanation(behavior(male, cub, salmon_migration) == not_attack, \"Brown bears usually fight to protect their territory. During the salmon migration season, they focus on their fishing skills and rarely fight for the territory.\") ::: (A)\nis_best_explanation(behavior(male, cub, salmon_migration) == not_attack, \"Cubs rely on female brown bears for 3 years to survive independently. Since female brown bears will not conceive during lactation, cubs between 3 and 12 months old have the highest kill rate.\") ::: (B)\nis_best_explanation(behavior(male, cub, salmon_migration) == not_attack, \"Salmon is the main food source for North American brown bears to replenish body fat in large amounts. Brown bears struggle to gain weight by fishing in order to survive the coming severe winter.\") ::: (C)\nis_best_explanation(behavior(male, cub, salmon_migration) == not_attack, \"In order to protect future cubs, female brown bears usually mate with multiple male brown bears, so that more male brown bears think they are the father of their cubs.\") ::: (D)"
    ]
  },
  {
    "id": 434,
    "context": "All etching tools are either needle-nosed or flat-edged.However, some flat-edged etching tools are used for engraving, and some are not.On the other hand, all the etching tools of the needle mouth are used for engraving.Therefore, there are more etching tools used for engraving than those not used for engraving.",
    "question": "If any of the following statements are true, can the conclusion of the above argument be drawn logically?",
    "answer": "C",
    "options": [
      "A.Most flat-edged etching tools are not used for carving.",
      "B.All etching tools that are not used for carving are flat-edged.",
      "C.There are as many etching tools in the needle mouth as there are flat edge etching tools.",
      "D.No etching tool is both a needle mouth and a flat blade."
    ],
    "raw_logic_programs": [
      "# Declarations\ntools = EnumSort([needle_nosed, flat_edged])\nused_for_engraving = Function([tools] -> [bool])\n\n# Constraints\nForAll([t:tools], Or(t == needle_nosed, t == flat_edged)) ::: All etching tools are either needle-nosed or flat-edged\nForAll([t:tools], Implies(t == needle_nosed, used_for_engraving(t))) ::: All the etching tools of the needle mouth are used for engraving\n\n# Options\nQuestion ::: If any of the following statements are true, can the conclusion of the above argument be drawn logically?\nis_valid(Implies(ForAll([t:tools], Implies(t == flat_edged, Not(used_for_engraving(t)))), Count([t:tools], used_for_engraving(t)) > Count([t:tools], Not(used_for_engraving(t))))) ::: (A)\nis_valid(Implies(ForAll([t:tools], Implies(Not(used_for_engraving(t)), t == flat_edged)), Count([t:tools], used_for_engraving(t)) > Count([t:tools], Not(used_for_engraving(t))))) ::: (B)\nis_valid(Implies(Count([t:tools], t == needle_nosed) == Count([t:tools], t == flat_edged), Count([t:tools], used_for_engraving(t)) > Count([t:tools], Not(used_for_engraving(t))))) ::: (C)\nis_valid(Implies(ForAll([t:tools], Not(And(t == needle_nosed, t == flat_edged))), Count([t:tools], used_for_engraving(t)) > Count([t:tools], Not(used_for_engraving(t))))) ::: (D)"
    ]
  },
  {
    "id": 435,
    "context": "In the 1940s, more than 7,000 books were published in the United States, of which only over 10 became bestsellers.A New York publisher found that the best-selling book of the year was related to three themes, one related to President Lincoln, one related to doctors, and one related to dogs.He thinks that if these three kinds of content are combined, it will definitely sell well.So he planned to publish the 'President of the American President's Physician', and the result of this book was extremely poor.",
    "question": "Which of the following statements best illustrates the shortcomings of the above reasoning?",
    "answer": "B",
    "options": [
      "A.It is believed that the attributes possessed by the whole are also possessed by the parts.",
      "B.It is believed that the attributes possessed by parts are also possessed by the whole.",
      "C.Ignore other possible causes.",
      "D.Treat the result of a phenomenon as the cause of this phenomenon."
    ],
    "raw_logic_programs": [
      "# Declarations\nthemes = EnumSort([Lincoln, doctors, dogs])\nbooks = EnumSort([bestseller, not_bestseller])\nattributes = Function([themes] -> [books])\n\n# Constraints\nattributes(Lincoln) == bestseller ::: The best-selling book of the year was related to President Lincoln\nattributes(doctors) == bestseller ::: The best-selling book of the year was related to doctors\nattributes(dogs) == bestseller ::: The best-selling book of the year was related to dogs\n\n# Options\nQuestion ::: Which of the following statements best illustrates the shortcomings of the above reasoning?\nis_best_illustration(And(attributes(Lincoln) == bestseller, attributes(doctors) == bestseller, attributes(dogs) == bestseller) != bestseller) ::: (A) It is believed that the attributes possessed by the whole are also possessed by the parts.\nis_best_illustration(And(attributes(Lincoln) == bestseller, attributes(doctors) == bestseller, attributes(dogs) == bestseller) == bestseller) ::: (B) It is believed that the attributes possessed by parts are also possessed by the whole.\nis_best_illustration(Exists([t:themes], attributes(t) == not_bestseller)) ::: (C) Ignore other possible causes.\nis_best_illustration(Implies(bestseller, And(attributes(Lincoln) == bestseller, attributes(doctors) == bestseller, attributes(dogs) == bestseller))) ::: (D) Treat the result of a phenomenon as the cause of this phenomenon."
    ]
  },
  {
    "id": 436,
    "context": "Studies have shown that for most people with normal blood pressure, any amount of sodium in excess of the body's needs can be successfully eliminated from the body without significantly increasing blood pressure.Therefore, only those with high blood pressure and those whose body cannot safely handle excess sodium need to limit sodium intake.",
    "question": "If any of the following statements is true, can the above argument be weakened most effectively?",
    "answer": "A",
    "options": [
      "A.Ingesting excess sodium sometimes damages the body's ability to handle excess sodium.",
      "B.Hypertension is sometimes worsened by ingesting more sodium than the body needs.",
      "C.Anyone needs a certain amount of sodium to maintain the normal physiological functions of the body.",
      "D.Ingesting any more sodium than the body needs will increase blood pressure unless it is eliminated from the body."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([normal_bp, high_bp, sodium_sensitive])\nsodium_intake = Function([people] -> [bool])\neliminates_sodium = Function([people] -> [bool])\nincreases_bp = Function([people] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(sodium_intake(p), Or(eliminates_sodium(p), increases_bp(p)))) ::: For most people with normal blood pressure, any amount of sodium in excess of the body's needs can be successfully eliminated without increasing blood pressure\nForAll([p:people], Implies(Not(eliminates_sodium(p)), increases_bp(p))) ::: Only those with high blood pressure and those whose body cannot handle excess sodium need to limit sodium intake\n\n# Options\nQuestion ::: If any of the following statements is true, can the above argument be weakened most effectively?\nis_weakened(Exists([p:people], And(sodium_intake(p), Not(eliminates_sodium(p)), increases_bp(p)))) ::: (A) Ingesting excess sodium sometimes damages the body's ability to handle excess sodium\nis_weakened(Exists([p:people], And(sodium_intake(p), increases_bp(p)))) ::: (B) Hypertension is sometimes worsened by ingesting more sodium than the body needs\nis_weakened(Exists([p:people], sodium_intake(p))) ::: (C) Anyone needs a certain amount of sodium to maintain the normal physiological functions of the body\nis_weakened(Exists([p:people], And(sodium_intake(p), Not(eliminates_sodium(p)), increases_bp(p)))) ::: (D) Ingesting any more sodium than the body needs will increase blood pressure unless it is eliminated from the body"
    ]
  },
  {
    "id": 437,
    "context": "Among vertebrate fossils, shark teeth are one of the most common fossils.However, the fossils of shark skeletons are very rare.Compared with the discovery of skeleton fossils of other vertebrates, the discovery of shark skeleton fossils is better than nothing.",
    "question": "If any of the following statements are true, will it be most helpful to resolve the doubts above?",
    "answer": "B",
    "options": [
      "A.The shark's teeth need to be replaced many times in its lifetime, but the shark's skeleton is not changed for life, only one skeleton.",
      "B.Compared to the skeletons of teeth or other vertebrates, shark cartilage skeletons are less likely to form fossils.",
      "C.The process of petrification of the shark skeleton is the same as the physical changes experienced by the petrification of the shark teeth.",
      "D.It is indeed confusing to find the skeleton fossil where the shark tooth fossil was found."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nhelpful = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, so we assume all statements are initially considered.\n\n# Options\nQuestion ::: If any of the following statements are true, will it be most helpful to resolve the doubts above?\nis_most_helpful(helpful(A)) ::: (A)\nis_most_helpful(helpful(B)) ::: (B)\nis_most_helpful(helpful(C)) ::: (C)\nis_most_helpful(helpful(D)) ::: (D)"
    ]
  },
  {
    "id": 438,
    "context": "The nutritional value is evaluated based on the content of 27 kinds of human essential nutrients.Vegetables with particularly high water content have low nutritional value.The water content of yam is low, so the nutritional value of yam will be high.",
    "question": "Which of the following reasoning has the same form as the above reasoning?",
    "answer": "A",
    "options": [
      "A.Stars are all self-luminous, Venus is not a star, so Venus is not self-luminous.",
      "B.Commodities have use value, and of course air has use value, so air is a commodity.",
      "C.Everyone who desires success works hard, he does not work hard, so he is not a person who desires success.",
      "D.All contracts concluded by fraud are invalid, and invalid contracts are not binding.Therefore, all non-binding contracts are concluded by fraud."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([vegetables, stars, commodities, people, contracts])\nproperties = EnumSort([high_water_content, low_water_content, high_nutritional_value, self_luminous, use_value, works_hard, desires_success, invalid, non_binding])\nhas_property = Function([entities, properties] -> [bool])\n\n# Constraints\nForAll([v:vegetables], Implies(has_property(v, high_water_content), Not(has_property(v, high_nutritional_value)))) ::: Vegetables with particularly high water content have low nutritional value\nhas_property(yam, low_water_content) ::: The water content of yam is low\nhas_property(yam, high_nutritional_value) ::: The nutritional value of yam will be high\n\n# Options\nQuestion ::: Which of the following reasoning has the same form as the above reasoning?\nis_same_form(\n    ForAll([s:stars], Implies(has_property(s, self_luminous), Not(has_property(s, Not(self_luminous))))),\n    Not(has_property(venus, star)),\n    Not(has_property(venus, self_luminous))\n) ::: (A)\nis_same_form(\n    ForAll([c:commodities], Implies(has_property(c, use_value), has_property(c, commodity))),\n    has_property(air, use_value),\n    has_property(air, commodity)\n) ::: (B)\nis_same_form(\n    ForAll([p:people], Implies(has_property(p, desires_success), has_property(p, works_hard))),\n    Not(has_property(he, works_hard)),\n    Not(has_property(he, desires_success))\n) ::: (C)\nis_same_form(\n    ForAll([c:contracts], Implies(has_property(c, invalid), Not(has_property(c, binding)))),\n    Not(has_property(c, binding)),\n    has_property(c, fraud)\n) ::: (D)"
    ]
  },
  {
    "id": 439,
    "context": "The legislature is discussing a proposal to ban fishing in Huanglong Bay.Although the ban on fishing will have a significant impact on the local economic industry, which is mainly supported by the fishing industry, this proposal must also be implemented.Huanglong Bay is one of the areas with the highest water pollution levels.Recent studies have shown that 80% of the fish in Huanglong Bay contains toxins that exceed national safety standards.Continued fishing will cause serious harm to public health.",
    "question": "Which of the following statements most accurately expresses the underlying principles underlying the above argument?",
    "answer": "B",
    "options": [
      "A.The principle of taking necessary precautions based on foreseeable consequences.",
      "B.Based on the foreseeable consequences, the principle of taking advantage of the two evils is preferred.",
      "C.The principle of prohibiting harm to others is adopted based on foreseeable consequences.",
      "D.The principle of presumption of innocence is adopted based on the fact that there is no evidence of guilt."
    ],
    "raw_logic_programs": [
      "# Declarations\nprinciples = EnumSort([precaution, lesser_evil, no_harm, presumption_of_innocence])\nconsequences = EnumSort([foreseeable_consequences])\nactions = EnumSort([ban_fishing, continue_fishing])\neffects = EnumSort([economic_impact, public_health_harm])\n\n# Constraints\nForAll([a:actions], Exists([e:effects], And(economic_impact, public_health_harm))) ::: The ban on fishing will have a significant impact on the local economic industry, which is mainly supported by the fishing industry\nExists([e:effects], public_health_harm) ::: Continued fishing will cause serious harm to public health\nExists([c:consequences], c == foreseeable_consequences) ::: Recent studies have shown that 80% of the fish in Huanglong Bay contains toxins that exceed national safety standards\n\n# Options\nQuestion ::: Which of the following statements most accurately expresses the underlying principles underlying the above argument?\nis_valid(And(principle == precaution, consequence == foreseeable_consequences)) ::: (A) The principle of taking necessary precautions based on foreseeable consequences.\nis_valid(And(principle == lesser_evil, consequence == foreseeable_consequences)) ::: (B) Based on the foreseeable consequences, the principle of taking advantage of the two evils is preferred.\nis_valid(And(principle == no_harm, consequence == foreseeable_consequences)) ::: (C) The principle of prohibiting harm to others is adopted based on foreseeable consequences.\nis_valid(And(principle == presumption_of_innocence, Not(Exists([e:effects], e == public_health_harm)))) ::: (D) The principle of presumption of innocence is adopted based on the fact that there is no evidence of guilt."
    ]
  },
  {
    "id": 440,
    "context": "In the past 100 years, in the Dali Lake area, a long-term drought has shrunk a lot of grassy wetlands into saline land.The grassy wetland is where ducks, geese and other species of waterbirds nest and hatch.However, with the continuous shrinkage of the wetlands, the average rate of decline in the number of red ducks in this area is far lower than the average rate of decline in the number of swans.",
    "question": "If which of the following statements is true, gives the best explanation for the inconsistency above?",
    "answer": "D",
    "options": [
      "A.Red ducks hatch 8 to 10 eggs per nest, and swans hatch 2 to 3 eggs per nest.The survival rate is about the same.",
      "B.The strengthening of environmental protection measures has slowed down the average decline in the number of red ducks, swans and other species of waterbirds.",
      "C.Both red ducks and swans are migratory birds, and red ducks are more likely to be killed during the migration process.",
      "D.In addition to the wetlands, red ducks gradually learned to nest in tree caves and cliff caves, but swan failed to do so."
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([red_ducks, swans])\nfactors = EnumSort([eggs_per_nest, survival_rate, environmental_protection, migratory_behavior, nesting_habits])\naffects_decline = Function([factors, species] -> [bool])\n\n# Constraints\nForAll([s:species], affects_decline(eggs_per_nest, s)) ::: Red ducks hatch more eggs per nest than swans, affecting decline rates\nForAll([s:species], affects_decline(survival_rate, s)) ::: The survival rate is about the same for both species\nForAll([s:species], affects_decline(environmental_protection, s)) ::: Environmental protection measures affect both species\nForAll([s:species], affects_decline(migratory_behavior, s)) ::: Both species are migratory, but red ducks are more likely to be killed during migration\naffects_decline(nesting_habits, red_ducks) ::: Red ducks have adapted to nest in tree and cliff caves\n\n# Options\nQuestion ::: If which of the following statements is true, gives the best explanation for the inconsistency above?\nis_best_explanation(affects_decline(eggs_per_nest, red_ducks) && !affects_decline(eggs_per_nest, swans)) ::: (A)\nis_best_explanation(affects_decline(environmental_protection, red_ducks) && affects_decline(environmental_protection, swans)) ::: (B)\nis_best_explanation(affects_decline(migratory_behavior, red_ducks) && affects_decline(migratory_behavior, swans)) ::: (C)\nis_best_explanation(affects_decline(nesting_habits, red_ducks) && !affects_decline(nesting_habits, swans)) ::: (D)"
    ]
  },
  {
    "id": 441,
    "context": "There are 6 clear flower porcelains? S, Y, M, Q, K, X.The production time of each piece is different.From left to right, the exhibitions are sorted in order from the earliest to the latest.The known sorting conditions are as follows? (1) M is older than X.(2) If Y is earlier than M, then Q is earlier than K and X.(3) If the age of M is earlier than Y, the age of K is earlier than Q and X.(4) The age of S is either earlier than Y or earlier than M, and both have neither.",
    "question": "Which of the following lists the possible exhibition order?",
    "answer": "D",
    "options": [
      "A.Q.M.S, K.Y.X",
      "B.Q, K.Y, M.X, S",
      "C.Y.S, M.X.Q, K",
      "D.M, K, S, Q, Y, X"
    ],
    "raw_logic_programs": [
      "# Declarations\nporcelains = EnumSort([S, Y, M, Q, K, X])\norder = Function([porcelains] -> [int])\nForAll([p:porcelains], And(1 <= order(p), order(p) <= 6))\n\n# Constraints\norder(M) < order(X) ::: M is older than X\nImplies(order(Y) < order(M), And(order(Q) < order(K), order(Q) < order(X))) ::: If Y is earlier than M, then Q is earlier than K and X\nImplies(order(M) < order(Y), And(order(K) < order(Q), order(K) < order(X))) ::: If the age of M is earlier than Y, the age of K is earlier than Q and X\nOr(order(S) < order(Y), order(S) < order(M)) ::: The age of S is either earlier than Y or earlier than M\nNot(And(order(S) < order(Y), order(S) < order(M))) ::: S is not earlier than both Y and M\n\n# Options\nQuestion ::: Which of the following lists the possible exhibition order?\nis_possible_order([order(Q) < order(M), order(M) < order(S), order(S) < order(K), order(K) < order(Y), order(Y) < order(X)]) ::: (A)\nis_possible_order([order(Q) < order(K), order(K) < order(Y), order(Y) < order(M), order(M) < order(X), order(X) < order(S)]) ::: (B)\nis_possible_order([order(Y) < order(S), order(S) < order(M), order(M) < order(X), order(X) < order(Q), order(Q) < order(K)]) ::: (C)\nis_possible_order([order(M) < order(K), order(K) < order(S), order(S) < order(Q), order(Q) < order(Y), order(Y) < order(X)]) ::: (D)"
    ]
  },
  {
    "id": 442,
    "context": "There are 6 clear flower porcelains? S, Y, M, Q, K, X.The production time of each piece is different.From left to right, the exhibitions are sorted in order from the earliest to the latest.The known sorting conditions are as follows? (1) M is older than X.(2) If Y is earlier than M, then Q is earlier than K and X.(3) If the age of M is earlier than Y, the age of K is earlier than Q and X.(4) The age of S is either earlier than Y or earlier than M, and both have neither.",
    "question": "If the age of Y is the second earliest, which of the following statements might be true?",
    "answer": "A",
    "options": [
      "A.The age of K is earlier than that of S.",
      "B.The age of K is earlier than Q.",
      "C.M is older than S.",
      "D.M is older than Y."
    ],
    "raw_logic_programs": [
      "# Declarations\nporcelains = EnumSort([S, Y, M, Q, K, X])\norder = Function([porcelains] -> [int])\nForAll([p:porcelains], And(1 <= order(p), order(p) <= 6))\n\n# Constraints\norder(M) < order(X) ::: M is older than X\nImplies(order(Y) < order(M), And(order(Q) < order(K), order(Q) < order(X))) ::: If Y is earlier than M, then Q is earlier than K and X\nImplies(order(M) < order(Y), And(order(K) < order(Q), order(K) < order(X))) ::: If the age of M is earlier than Y, the age of K is earlier than Q and X\nOr(order(S) < order(Y), order(S) < order(M)) ::: The age of S is either earlier than Y or earlier than M\nNot(And(order(S) < order(Y), order(S) < order(M))) ::: S is not earlier than both Y and M\n\n# Options\nQuestion ::: If the age of Y is the second earliest, which of the following statements might be true?\nis_possible(Exists([o:int], And(order(Y) == 2, order(K) < order(S)))) ::: (A)\nis_possible(Exists([o:int], And(order(Y) == 2, order(K) < order(Q)))) ::: (B)\nis_possible(Exists([o:int], And(order(Y) == 2, order(M) < order(S)))) ::: (C)\nis_possible(Exists([o:int], And(order(Y) == 2, order(M) < order(Y)))) ::: (D)"
    ]
  },
  {
    "id": 443,
    "context": "There are 6 clear flower porcelains? S, Y, M, Q, K, X.The production time of each piece is different.From left to right, the exhibitions are sorted in order from the earliest to the latest.The known sorting conditions are as follows? (1) M is older than X.(2) If Y is earlier than M, then Q is earlier than K and X.(3) If the age of M is earlier than Y, the age of K is earlier than Q and X.(4) The age of S is either earlier than Y or earlier than M, and both have neither.",
    "question": "Which of the following cannot be the earliest porcelain?",
    "answer": "C",
    "options": [
      "A.M",
      "B.Q",
      "C.S",
      "D.Y"
    ],
    "raw_logic_programs": [
      "# Declarations\nporcelains = EnumSort([S, Y, M, Q, K, X])\norder = Function([porcelains] -> [int])\nForAll([p:porcelains], And(1 <= order(p), order(p) <= 6))\n\n# Constraints\norder(M) < order(X) ::: M is older than X\nImplies(order(Y) < order(M), And(order(Q) < order(K), order(Q) < order(X))) ::: If Y is earlier than M, then Q is earlier than K and X\nImplies(order(M) < order(Y), And(order(K) < order(Q), order(K) < order(X))) ::: If the age of M is earlier than Y, the age of K is earlier than Q and X\nOr(order(S) < order(Y), order(S) < order(M)) ::: The age of S is either earlier than Y or earlier than M\nNot(And(order(S) < order(Y), order(S) < order(M))) ::: S is not earlier than both Y and M\n\n# Options\nQuestion ::: Which of the following cannot be the earliest porcelain?\nis_unsat(order(M) == 1) ::: (A)\nis_unsat(order(Q) == 1) ::: (B)\nis_unsat(order(S) == 1) ::: (C)\nis_unsat(order(Y) == 1) ::: (D)"
    ]
  },
  {
    "id": 444,
    "context": "There are 6 clear flower porcelains? S, Y, M, Q, K, X.The production time of each piece is different.From left to right, the exhibitions are sorted in order from the earliest to the latest.The known sorting conditions are as follows? (1) M is older than X.(2) If Y is earlier than M, then Q is earlier than K and X.(3) If the age of M is earlier than Y, the age of K is earlier than Q and X.(4) The age of S is either earlier than Y or earlier than M, and both have neither.",
    "question": "If the age of X is earlier than S, which of the following statements might be true?",
    "answer": "D",
    "options": [
      "A.Y is older than M.",
      "B.Y is older than Q.",
      "C.S is older than M.",
      "D.S is older than K."
    ],
    "raw_logic_programs": [
      "# Declarations\nporcelains = EnumSort([S, Y, M, Q, K, X])\nage = Function([porcelains] -> [int])\nForAll([p:porcelains], And(1 <= age(p), age(p) <= 6))\n\n# Constraints\nage(M) < age(X) ::: M is older than X\nImplies(age(Y) < age(M), And(age(Q) < age(K), age(Q) < age(X))) ::: If Y is earlier than M, then Q is earlier than K and X\nImplies(age(M) < age(Y), And(age(K) < age(Q), age(K) < age(X))) ::: If the age of M is earlier than Y, the age of K is earlier than Q and X\nOr(age(S) < age(Y), age(S) < age(M)) ::: The age of S is either earlier than Y or earlier than M, and both have neither\n\n# Options\nage(X) < age(S) ::: If the age of X is earlier than S\nis_possible(Implies(age(Y) > age(M), True)) ::: (A) Y is older than M\nis_possible(Implies(age(Y) > age(Q), True)) ::: (B) Y is older than Q\nis_possible(Implies(age(S) > age(M), True)) ::: (C) S is older than M\nis_possible(Implies(age(S) > age(K), True)) ::: (D) S is older than K"
    ]
  },
  {
    "id": 445,
    "context": "There are 6 clear flower porcelains? S, Y, M, Q, K, X.The production time of each piece is different.From left to right, the exhibitions are sorted in order from the earliest to the latest.The known sorting conditions are as follows? (1) M is older than X.(2) If Y is earlier than M, then Q is earlier than K and X.(3) If the age of M is earlier than Y, the age of K is earlier than Q and X.(4) The age of S is either earlier than Y or earlier than M, and both have neither.",
    "question": "If the age of M is earlier than Q but later than K, which of the following statements might be true?",
    "answer": "C",
    "options": [
      "A.Y is older than S.",
      "B.S is older than M.",
      "C.Q is older than X.",
      "D.Y is older than M."
    ],
    "raw_logic_programs": [
      "# Declarations\nporcelains = EnumSort([S, Y, M, Q, K, X])\nage = Function([porcelains] -> [int])\nForAll([p:porcelains], And(1 <= age(p), age(p) <= 6))\n\n# Constraints\nage(M) < age(X) ::: M is older than X\nImplies(age(Y) < age(M), And(age(Q) < age(K), age(Q) < age(X))) ::: If Y is earlier than M, then Q is earlier than K and X\nImplies(age(M) < age(Y), And(age(K) < age(Q), age(K) < age(X))) ::: If the age of M is earlier than Y, the age of K is earlier than Q and X\nOr(age(S) < age(Y), age(S) < age(M)) ::: The age of S is either earlier than Y or earlier than M, and both have neither\n\n# Options\nQuestion ::: If the age of M is earlier than Q but later than K, which of the following statements might be true?\nis_possible(And(age(M) < age(Q), age(M) > age(K), age(Y) > age(S))) ::: (A)\nis_possible(And(age(M) < age(Q), age(M) > age(K), age(S) > age(M))) ::: (B)\nis_possible(And(age(M) < age(Q), age(M) > age(K), age(Q) > age(X))) ::: (C)\nis_possible(And(age(M) < age(Q), age(M) > age(K), age(Y) > age(M))) ::: (D)"
    ]
  },
  {
    "id": 446,
    "context": "There are 6 singers? F, G, L, K, H, M.3 piano accompaniment? X, Y, W.Each piano accompanimentist happened to accompany two of the singers.Known condition information is as follows? (1) If X is F accompaniment, then W is L accompaniment.(2) If X is not a G accompaniment, then Y is an M accompaniment.(3) X or Y is H accompaniment.(4) F and G do not share accompaniment; L and K do not share accompaniment; H and M do not share accompaniment.",
    "question": "Which of the following lists the possible combinations of accompaniment and singer?",
    "answer": "A",
    "options": [
      "A.X is the accompaniment of G and H; Y is the accompaniment of F and K? W is the accompaniment of L and M.",
      "B.X is F and H accompaniment; Y is L and M accompaniment; W is G and K accompaniment.",
      "C.X is the accompaniment of G and M; Y is the accompaniment of F and H; w is the accompaniment of L and K.",
      "D.X is L, H accompaniment; Y is F, K accompaniment; W is G, M accompaniment."
    ],
    "raw_logic_programs": [
      "# Declarations\nsingers = EnumSort([F, G, L, K, H, M])\naccompanists = EnumSort([X, Y, W])\naccompanies = Function([accompanists] -> [singers, singers])\n\n# Constraints\nForAll([a:accompanists], Count([s:singers], accompanies(a) == s) == 2) ::: Each piano accompanist accompanies two singers\nImplies(accompanies(X) == F, accompanies(W) == L) ::: If X is F's accompanist, then W is L's accompanist\nImplies(Not(accompanies(X) == G), accompanies(Y) == M) ::: If X is not G's accompanist, then Y is M's accompanist\nOr(accompanies(X) == H, accompanies(Y) == H) ::: X or Y is H's accompanist\nForAll([a:accompanists], Not(And(accompanies(a) == F, accompanies(a) == G))) ::: F and G do not share an accompanist\nForAll([a:accompanists], Not(And(accompanies(a) == L, accompanies(a) == K))) ::: L and K do not share an accompanist\nForAll([a:accompanists], Not(And(accompanies(a) == H, accompanies(a) == M))) ::: H and M do not share an accompanist\n\n# Options\nQuestion ::: Which of the following lists the possible combinations of accompaniment and singer?\nis_possible_combination(And(accompanies(X) == [G, H], accompanies(Y) == [F, K], accompanies(W) == [L, M])) ::: (A)\nis_possible_combination(And(accompanies(X) == [F, H], accompanies(Y) == [L, M], accompanies(W) == [G, K])) ::: (B)\nis_possible_combination(And(accompanies(X) == [G, M], accompanies(Y) == [F, H], accompanies(W) == [L, K])) ::: (C)\nis_possible_combination(And(accompanies(X) == [L, H], accompanies(Y) == [F, K], accompanies(W) == [G, M])) ::: (D)"
    ]
  },
  {
    "id": 447,
    "context": "There are 6 singers? F, G, L, K, H, M.3 piano accompaniment? X, Y, W.Each piano accompanimentist happened to accompany two of the singers.Known condition information is as follows? (1) If X is F accompaniment, then W is L accompaniment.(2) If X is not a G accompaniment, then Y is an M accompaniment.(3) X or Y is H accompaniment.(4) F and G do not share accompaniment; L and K do not share accompaniment; H and M do not share accompaniment.",
    "question": "If X is an accompaniment to L and H, which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.W is K accompaniment.",
      "B.Y is F accompaniment.",
      "C.G and K are accompanied by the same accompaniment.",
      "D.F and M are accompanied by the same accompaniment."
    ],
    "raw_logic_programs": [
      "# Declarations\nsingers = EnumSort([F, G, L, K, H, M])\naccompanists = EnumSort([X, Y, W])\naccompanies = Function([singers] -> [accompanists])\n\n# Constraints\nForAll([a:accompanists], Count([s:singers], accompanies(s) == a) == 2) ::: Each piano accompanist accompanies exactly two singers\nImplies(accompanies(F) == X, accompanies(L) == W) ::: If X is F's accompanist, then W is L's accompanist\nImplies(accompanies(G) != X, accompanies(M) == Y) ::: If X is not G's accompanist, then Y is M's accompanist\nOr(accompanies(H) == X, accompanies(H) == Y) ::: X or Y is H's accompanist\naccompanies(F) != accompanies(G) ::: F and G do not share an accompanist\naccompanies(L) != accompanies(K) ::: L and K do not share an accompanist\naccompanies(H) != accompanies(M) ::: H and M do not share an accompanist\nAnd(accompanies(L) == X, accompanies(H) == X) ::: X is an accompanist to L and H\n\n# Options\nQuestion ::: If X is an accompaniment to L and H, which of the following statements must be true?\nis_valid(accompanies(K) == W) ::: (A) W is K's accompanist\nis_valid(accompanies(F) == Y) ::: (B) Y is F's accompanist\nis_valid(accompanies(G) == accompanies(K)) ::: (C) G and K are accompanied by the same accompanist\nis_valid(accompanies(F) == accompanies(M)) ::: (D) F and M are accompanied by the same accompanist"
    ]
  },
  {
    "id": 448,
    "context": "There are 6 singers? F, G, L, K, H, M.3 piano accompaniment? X, Y, W.Each piano accompanimentist happened to accompany two of the singers.Known condition information is as follows? (1) If X is F accompaniment, then W is L accompaniment.(2) If X is not a G accompaniment, then Y is an M accompaniment.(3) X or Y is H accompaniment.(4) F and G do not share accompaniment; L and K do not share accompaniment; H and M do not share accompaniment.",
    "question": "If W is the accompaniment of F and M, which pair of singers can X accompany?",
    "answer": "B",
    "options": [
      "A.G and H",
      "B.G and K",
      "C.L and H",
      "D.L and K"
    ],
    "raw_logic_programs": [
      "# Declarations\nsingers = EnumSort([F, G, L, K, H, M])\naccompanists = EnumSort([X, Y, W])\naccompanies = Function([singers] -> [accompanists])\n\n# Constraints\nForAll([a:accompanists], Count([s:singers], accompanies(s) == a) == 2) ::: Each piano accompanist accompanies two singers\nImplies(accompanies(F) == X, accompanies(L) == W) ::: If X is F's accompanist, then W is L's accompanist\nImplies(accompanies(G) != X, accompanies(M) == Y) ::: If X is not G's accompanist, then Y is M's accompanist\nOr(accompanies(H) == X, accompanies(H) == Y) ::: X or Y is H's accompanist\naccompanies(F) != accompanies(G) ::: F and G do not share an accompanist\naccompanies(L) != accompanies(K) ::: L and K do not share an accompanist\naccompanies(H) != accompanies(M) ::: H and M do not share an accompanist\nAnd(accompanies(F) == W, accompanies(M) == W) ::: W is the accompanist of F and M\n\n# Options\nQuestion ::: Which pair of singers can X accompany?\nis_sat(And(accompanies(G) == X, accompanies(H) == X)) ::: (A)\nis_sat(And(accompanies(G) == X, accompanies(K) == X)) ::: (B)\nis_sat(And(accompanies(L) == X, accompanies(H) == X)) ::: (C)\nis_sat(And(accompanies(L) == X, accompanies(K) == X)) ::: (D)"
    ]
  },
  {
    "id": 449,
    "context": "There are 6 singers? F, G, L, K, H, M.3 piano accompaniment? X, Y, W.Each piano accompanimentist happened to accompany two of the singers.Known condition information is as follows? (1) If X is F accompaniment, then W is L accompaniment.(2) If X is not a G accompaniment, then Y is an M accompaniment.(3) X or Y is H accompaniment.(4) F and G do not share accompaniment; L and K do not share accompaniment; H and M do not share accompaniment.",
    "question": "W cannot accompany any of the following singers?",
    "answer": "C",
    "options": [
      "A.F and K",
      "B.F and L",
      "C.K and H",
      "D.G and K"
    ],
    "raw_logic_programs": [
      "# Declarations\nsingers = EnumSort([F, G, L, K, H, M])\naccompanists = EnumSort([X, Y, W])\naccompanies = Function([singers] -> [accompanists])\n\n# Constraints\nForAll([a:accompanists], Count([s:singers], accompanies(s) == a) == 2) ::: Each piano accompanist accompanies two singers\nImplies(accompanies(F) == X, accompanies(L) == W) ::: If X is F's accompanist, then W is L's accompanist\nImplies(accompanies(G) != X, accompanies(M) == Y) ::: If X is not G's accompanist, then Y is M's accompanist\nOr(accompanies(H) == X, accompanies(H) == Y) ::: X or Y is H's accompanist\naccompanies(F) != accompanies(G) ::: F and G do not share an accompanist\naccompanies(L) != accompanies(K) ::: L and K do not share an accompanist\naccompanies(H) != accompanies(M) ::: H and M do not share an accompanist\n\n# Options\nQuestion ::: W cannot accompany any of the following singers?\nis_unsat(And(accompanies(F) == W, accompanies(K) == W)) ::: (A)\nis_unsat(And(accompanies(F) == W, accompanies(L) == W)) ::: (B)\nis_unsat(And(accompanies(K) == W, accompanies(H) == W)) ::: (C)\nis_unsat(And(accompanies(G) == W, accompanies(K) == W)) ::: (D)"
    ]
  },
  {
    "id": 450,
    "context": "There are 6 singers? F, G, L, K, H, M.3 piano accompaniment? X, Y, W.Each piano accompanimentist happened to accompany two of the singers.Known condition information is as follows? (1) If X is F accompaniment, then W is L accompaniment.(2) If X is not a G accompaniment, then Y is an M accompaniment.(3) X or Y is H accompaniment.(4) F and G do not share accompaniment; L and K do not share accompaniment; H and M do not share accompaniment.",
    "question": "It is impossible for Y to accompany the following pair of singers?",
    "answer": "A",
    "options": [
      "A.G and H",
      "B.L and H",
      "C.F and L",
      "D.F and M"
    ],
    "raw_logic_programs": [
      "# Declarations\nsingers = EnumSort([F, G, L, K, H, M])\naccompanists = EnumSort([X, Y, W])\naccompanies = Function([singers] -> [accompanists])\n\n# Constraints\nForAll([a:accompanists], Count([s:singers], accompanies(s) == a) == 2) ::: Each piano accompanist accompanies two singers\nImplies(accompanies(F) == X, accompanies(L) == W) ::: If X is F's accompanist, then W is L's accompanist\nImplies(accompanies(G) != X, accompanies(M) == Y) ::: If X is not G's accompanist, then Y is M's accompanist\nOr(accompanies(H) == X, accompanies(H) == Y) ::: X or Y is H's accompanist\naccompanies(F) != accompanies(G) ::: F and G do not share an accompanist\naccompanies(L) != accompanies(K) ::: L and K do not share an accompanist\naccompanies(H) != accompanies(M) ::: H and M do not share an accompanist\n\n# Options\nQuestion ::: It is impossible for Y to accompany the following pair of singers?\nis_unsat(And(accompanies(G) == Y, accompanies(H) == Y)) ::: (A)\nis_unsat(And(accompanies(L) == Y, accompanies(H) == Y)) ::: (B)\nis_unsat(And(accompanies(F) == Y, accompanies(L) == Y)) ::: (C)\nis_unsat(And(accompanies(F) == Y, accompanies(M) == Y)) ::: (D)"
    ]
  },
  {
    "id": 451,
    "context": "Professors? The United States, Canada and other countries have long enrolled masters and doctoral students in writing, and we are still calling for the right to award degrees in writing.This is a very different attitude towards applied and technical disciplines.Are we wrong, or are we wrong?",
    "question": "Which of the following questions is most important to assess the rationality of the above argument?",
    "answer": "D",
    "options": [
      "A.If we are allowed to recruit masters and doctors in writing, how many people will apply for this major?",
      "B.Do we have the qualifications for the faculty and subject research in writing to recruit masters and doctors?",
      "C.Have we applied for masters and Ph.Ds in other applied and technical disciplines other than writing?",
      "D.Should we pay attention to the cultivation of master's degree and doctoral degree in applied and technical disciplines?"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([United_States, Canada, Other_Countries])\ndegrees = EnumSort([masters, doctoral])\ndisciplines = EnumSort([writing, applied_technical])\nenrolls = Function([countries, degrees, disciplines] -> [bool])\ncalls_for_right = Function([countries, degrees, disciplines] -> [bool])\n\n# Constraints\nForAll([c:countries, d:degrees], enrolls(c, d, writing)) ::: The United States, Canada, and other countries have long enrolled masters and doctoral students in writing\nForAll([c:countries, d:degrees], calls_for_right(c, d, writing)) ::: We are still calling for the right to award degrees in writing\n\n# Options\nQuestion ::: Which of the following questions is most important to assess the rationality of the above argument?\nis_important(Exists([c:countries, d:degrees], And(enrolls(c, d, writing), calls_for_right(c, d, writing)))) ::: (A)\nis_important(Exists([c:countries, d:degrees], And(enrolls(c, d, writing), Not(calls_for_right(c, d, writing))))) ::: (B)\nis_important(Exists([c:countries, d:degrees, dis:disciplines], And(dis != writing, enrolls(c, d, dis)))) ::: (C)\nis_important(Exists([c:countries, d:degrees, dis:disciplines], And(dis != writing, calls_for_right(c, d, dis)))) ::: (D)"
    ]
  },
  {
    "id": 452,
    "context": "When a musicologist bought a mobile phone number in a communication store, he found that a number was more than half cheaper than the others, and asked the clerk, 'Why is this?' The clerk said, 'This number is not good.' It turns out that the mantissa of this number is 1414, and many people taboo its homonym 'to die'.But the musician started to sing, and it was indeed trembling, the homonym was 'all hair and hair' and I was very happy to buy this number.",
    "question": "If the above statement is true, which of the following statements cannot be supported?",
    "answer": "C",
    "options": [
      "A.It is foolish to taboo or accept the meaning implied by digital homophony.",
      "B.The meaning implied by digital homophony will affect the behavior of buying numbers.",
      "C.People can attach different ideas to the same number.",
      "D.The meaning implied by the number and its homophony is not unique."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupport = Function([statements] -> [bool])\n\n# Constraints\nsupport(A) == False ::: It is foolish to taboo or accept the meaning implied by digital homophony.\nsupport(B) == True ::: The meaning implied by digital homophony will affect the behavior of buying numbers.\nsupport(C) == True ::: People can attach different ideas to the same number.\nsupport(D) == True ::: The meaning implied by the number and its homophony is not unique.\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements cannot be supported?\nis_unsat(support(A)) ::: (A)\nis_unsat(support(B)) ::: (B)\nis_unsat(support(C)) ::: (C)\nis_unsat(support(D)) ::: (D)"
    ]
  },
  {
    "id": 453,
    "context": "In Zululand, South Africa, a rhinoceros is poached every 17 hours.Operation 'Flying Rhinoceros' carefully selected 114 white rhinos and 10 black rhinos from the Umfor Lodge Conservation Area, and airlifted them to a secret area in South Africa to protect the rhinos, hoping that the rhinos could reproduce and grow naturally here.Grow to avoid the doom of extinction caused by poaching.",
    "question": "Which of the following statements is not a hypothesis for the 'flying rhino' action?",
    "answer": "D",
    "options": [
      "A.The secrecy measures for the new rhino home are strict, because poachers do not know where there are rhinos",
      "B.Give rhinos that the new home of choice is suitable for the breeding and growth of white and black rhinos",
      "C.Residents living near the new rhino 's home will not be poached for expensive rhinoceros feet",
      "D.60 years ago, a protection transfer operation to avoid the extinction of the black rhino was successful"
    ],
    "raw_logic_programs": [
      "# Declarations\nrhinos = EnumSort([white_rhinos, black_rhinos])\nlocations = EnumSort([Umfor_Lodge, secret_area])\nactions = EnumSort([poaching, protection_transfer])\ntime = Function([actions] -> [int])\nselected = Function([rhinos] -> [int])\ntransferred = Function([rhinos] -> [bool])\n\n# Constraints\nselected(white_rhinos) == 114 ::: 114 white rhinos were selected\nselected(black_rhinos) == 10 ::: 10 black rhinos were selected\ntransferred(white_rhinos) == True ::: white rhinos were transferred\ntransferred(black_rhinos) == True ::: black rhinos were transferred\ntime(poaching) == 17 ::: a rhinoceros is poached every 17 hours\n\n# Options\nQuestion ::: Which of the following statements is not a hypothesis for the 'flying rhino' action?\nis_not_hypothesis(And(secret_area == True, Not(poaching))) ::: (A)\nis_not_hypothesis(And(suitable_for_breeding(secret_area, white_rhinos), suitable_for_breeding(secret_area, black_rhinos))) ::: (B)\nis_not_hypothesis(Not(poaching_nearby(secret_area))) ::: (C)\nis_not_hypothesis(successful_transfer(60_years_ago, black_rhinos)) ::: (D)"
    ]
  },
  {
    "id": 454,
    "context": "Scientists, just like the earth, there is also a hot lava core inside Venus.With the autobiography and revolution of Venus, huge heat will be released.The earth releases internal heat through volcanic eruptions generated by plate tectonic movement.There is no volcanic eruption like the plate tectonic movement, which is confusing.",
    "question": "If the following statement is true, which one gives the best explanation for the scientist's confusion?",
    "answer": "A",
    "options": [
      "A.The autobiography of Venus is slow and its outer shell is much thinner than the earth, which is convenient for the internal heat release",
      "B.The greenhouse effect caused by carbon dioxide in Venus 'atmosphere makes its surface temperature as high as 485 â„ƒ",
      "C.Due to the effects of high temperature and high pressure, the rock on the surface of Venus is harder than the rock on the surface of the earth",
      "D.The lava movement in the inner core of Venus used to have more severe temperature fluctuations than the rock movement of the earth"
    ],
    "raw_logic_programs": [
      "# Declarations\nplanets = EnumSort([Earth, Venus])\nphenomena = EnumSort([volcanic_eruption, heat_release, plate_tectonics])\nfactors = EnumSort([autobiography, revolution, greenhouse_effect, rock_hardness, lava_movement])\nexplanation = Function([factors] -> [bool])\n\n# Constraints\nForAll([p:planets], Exists([ph:phenomena], ph == heat_release)) ::: Both Earth and Venus release internal heat\nNot(Exists([ph:phenomena], And(ph == volcanic_eruption, ph == plate_tectonics))) ::: Venus does not have volcanic eruptions like plate tectonic movement\n\n# Options\nQuestion ::: If the following statement is true, which one gives the best explanation for the scientist's confusion?\nis_best_explanation(explanation(autobiography)) ::: (A)\nis_best_explanation(explanation(greenhouse_effect)) ::: (B)\nis_best_explanation(explanation(rock_hardness)) ::: (C)\nis_best_explanation(explanation(lava_movement)) ::: (D)"
    ]
  },
  {
    "id": 455,
    "context": "Dali Lake is a plateau dammed lake formed by eruption of volcanoes.The whale croaker, S.sylvaticus, living in the brackish water lake, like salmon living in the sea, must migrate to the upper reaches of the freshwater river to spawn Although the four rivers currently injecting into Dali Lake are all inland rivers, and none of the rivers lead to the ocean, scientists are still convinced that the Chinese fish in Dali Lake originally migrated from the ocean.",
    "question": "Which of the following statements is true and provides the best explanation for scientists 'beliefs?",
    "answer": "C",
    "options": [
      "A.The yellow croaker that lives in the waters of Heilongjiang and other areas is twice as large as the Japanese croaker which is in Dali Lake",
      "B.The fish caught in seawater or freshwater can only survive for a day or two, and quickly decay after death.",
      "C.The glacier melted to form Dali Lake.The overflowing lake water was once connected to the Liaohe River flowing into the ocean",
      "D.The scientific researcher put the fry of the fish of Dali Lake in the Dali Lake, thousands of miles away, the breeding is successful"
    ],
    "raw_logic_programs": [
      "# Declarations\nrivers = EnumSort([river1, river2, river3, river4])\nlake = EnumSort([Dali_Lake])\nfish = EnumSort([whale_croaker, yellow_croaker, Japanese_croaker])\nwater_types = EnumSort([brackish, freshwater, seawater])\nmigration = Function([fish, water_types] -> [bool])\nconnection = Function([lake, rivers] -> [bool])\n\n# Constraints\nmigration(whale_croaker, brackish) ::: The whale croaker lives in the brackish water lake\nmigration(whale_croaker, freshwater) ::: The whale croaker must migrate to the upper reaches of the freshwater river to spawn\nForAll([r:rivers], Not(connection(Dali_Lake, r))) ::: The four rivers currently injecting into Dali Lake are all inland rivers, and none of the rivers lead to the ocean\n\n# Options\nQuestion ::: Which of the following statements is true and provides the best explanation for scientists' beliefs?\nis_true(connection(Dali_Lake, Liaohe_River)) ::: (C) The glacier melted to form Dali Lake. The overflowing lake water was once connected to the Liaohe River flowing into the ocean\nis_true(yellow_croaker.size > Japanese_croaker.size) ::: (A) The yellow croaker that lives in the waters of Heilongjiang and other areas is twice as large as the Japanese croaker which is in Dali Lake\nis_true(ForAll([f:fish], Exists([w:water_types], migration(f, w)))) ::: (B) The fish caught in seawater or freshwater can only survive for a day or two, and quickly decay after death\nis_true(Exists([f:fish], migration(f, brackish) && migration(f, freshwater))) ::: (D) The scientific researcher put the fry of the fish of Dali Lake in the Dali Lake, thousands of miles away, the breeding is successful"
    ]
  },
  {
    "id": 456,
    "context": "Laws protecting wild animal populations should not be compulsorily applied to hunting activities that depend on the capture of wild animals but do not threaten the continuation of wild animal populations",
    "question": "If the following statement is true, which one is the strongest proof of the justification of the above principle?",
    "answer": "C",
    "options": [
      "A.For any profit-taking purpose of capturing wild animals, the Wildlife Protection Law should be enforced",
      "B.Although the eyeglass cord is protected by law, the act of killing the eyeglass cord due to the threat to human life will not be punished by law",
      "C.The Inuit in the northernmost part of the polar region feed on bowhead whales, and the number of bowhead whales captured is much lower than the number of newly survived bowhead whales each year.",
      "D.Humans have hunted elephants for thousands of years and have not extinct the elephant populations, so it is not necessary to enforce laws protecting wild elephants"
    ],
    "raw_logic_programs": [
      "# Declarations\nactivities = EnumSort([hunting, capturing])\nlaws = EnumSort([wildlife_protection])\npopulations = EnumSort([wild_animal])\nthreatens = Function([activities, populations] -> [bool])\napplies = Function([laws, activities] -> [bool])\n\n# Constraints\nForAll([a:activities, p:populations], Implies(Not(threatens(a, p)), Not(applies(wildlife_protection, a)))) ::: Laws protecting wild animal populations should not be compulsorily applied to hunting activities that do not threaten the continuation of wild animal populations\n\n# Options\nQuestion ::: If the following statement is true, which one is the strongest proof of the justification of the above principle?\nis_strongest_proof(ForAll([a:activities], Implies(a == capturing, applies(wildlife_protection, a)))) ::: (A)\nis_strongest_proof(Exists([p:populations], Not(applies(wildlife_protection, hunting)))) ::: (B)\nis_strongest_proof(Exists([p:populations], And(Not(threatens(capturing, p)), Not(applies(wildlife_protection, capturing))))) ::: (C)\nis_strongest_proof(Exists([p:populations], And(Not(threatens(hunting, p)), Not(applies(wildlife_protection, hunting))))) ::: (D)"
    ]
  },
  {
    "id": 457,
    "context": "In 2014, many stars were arrested by the police for drug involvement.On August 13, the Beijing Performance Industry Association and major performance companies signed the 'Beijing Performance Industry Commitment to Combat Drugs', promising not to hire or organize drug-related entertainers to participate in performing arts activities.A lawyer responded? 'There is no employment discrimination, because there are many other occupations to choose from.'",
    "question": "Which of the following points out the logical question in the lawyer 's answer?",
    "answer": "C",
    "options": [
      "A.According to the lawyer, anyone who engages in employment discrimination can defend himself like him",
      "B.The lawyer did not consider that it is difficult for a person who has received many years of vocational training and is only good at acting to change careers.",
      "C.The lawyer replied that it was inconsistent with the regulations of the State Council 's Drug Rehabilitation Regulations on 'non-discrimination in reemployment of drug addicts'",
      "D.The lawyer wrongly assumed that the performing arts industry has a higher professional ethics level than other industries"
    ],
    "raw_logic_programs": [
      "# Declarations\nlawyer_statement = EnumSort([employment_discrimination, career_change_difficulty, inconsistency_with_regulations, assumption_of_ethics])\nresponse = Function([lawyer_statement] -> [bool])\n\n# Constraints\nresponse(employment_discrimination) ::: The lawyer argues there is no employment discrimination because there are other occupations available\nresponse(career_change_difficulty) ::: The lawyer did not consider the difficulty for someone trained in acting to change careers\nresponse(inconsistency_with_regulations) ::: The lawyer's response may conflict with regulations on non-discrimination in reemployment\nresponse(assumption_of_ethics) ::: The lawyer assumes the performing arts industry has higher ethics\n\n# Options\nQuestion ::: Which of the following points out the logical question in the lawyer's answer?\nis_valid(response(employment_discrimination)) ::: (A)\nis_valid(response(career_change_difficulty)) ::: (B)\nis_valid(response(inconsistency_with_regulations)) ::: (C)\nis_valid(response(assumption_of_ethics)) ::: (D)"
    ]
  },
  {
    "id": 458,
    "context": "When an acting star was accused of evading personal income tax, she defended herself and said? 'For many years, I have paid millions of personal income tax, which is more than that paid by the state-owned machinery factory where my cousin is.There is still a lot of taxes, is this also a sin? '",
    "question": "Which of the following statements most accurately points out the flaws in the above defense",
    "answer": "D",
    "options": [
      "A.The more personal income tax paid proves that she is richer, such people should be heavily punished for tax evasion",
      "B.The amount of tax paid by a person does not prove that she pays the tax payable on every income.",
      "C.The attributes possessed by a part are not usually possessed by the whole",
      "D.The individual pays more taxes than the state-owned machinery factory, which does not mean that her contribution to society is greater than that of the state-owned machinery factory"
    ],
    "raw_logic_programs": [
      "# Declarations\nactors = EnumSort([acting_star, state_owned_machinery_factory])\ntaxes = Function([actors] -> [int])\n\n# Constraints\ntaxes(acting_star) > taxes(state_owned_machinery_factory) ::: The acting star has paid more personal income tax than the state-owned machinery factory\n\n# Options\nQuestion ::: Which of the following statements most accurately points out the flaws in the above defense?\nis_flaw(And(taxes(acting_star) > 0, taxes(state_owned_machinery_factory) > 0, taxes(acting_star) > taxes(state_owned_machinery_factory))) ::: (A) The more personal income tax paid proves that she is richer, such people should be heavily punished for tax evasion\nis_flaw(Exists([income:int], taxes(acting_star) < income)) ::: (B) The amount of tax paid by a person does not prove that she pays the tax payable on every income\nis_flaw(ForAll([part:actors], taxes(part) > 0) -> taxes(acting_star) > taxes(state_owned_machinery_factory)) ::: (C) The attributes possessed by a part are not usually possessed by the whole\nis_flaw(taxes(acting_star) > taxes(state_owned_machinery_factory) -> contribution(acting_star) > contribution(state_owned_machinery_factory)) ::: (D) The individual pays more taxes than the state-owned machinery factory, which does not mean that her contribution to society is greater than that of the state-owned machinery factory"
    ]
  },
  {
    "id": 459,
    "context": "Students in a certain class are all football fans.During the 2014 World Cup, all students who supported the Argentine team did not support the German team, nor did any students who supported the Argentine team supported the Brazilian team.Some students who support the US team support the German team, and some students who support the US team support the Brazilian team.",
    "question": "If the above statement is true, which of the following statements about the students in the class must be true?",
    "answer": "D",
    "options": [
      "A.Some students who support the German team neither support the Brazilian team nor the American team",
      "B.Some students who support the US team neither support the German team nor the Brazilian team",
      "C.So the students who support the US team either support the Argentina team, or support the German team, or support the Brazil team",
      "D.Some students who support the Brazilian team support the German team"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([student1, student2, student3, ...])  # Assuming a finite set of students\nteams = EnumSort([Argentina, Germany, Brazil, US])\nsupports = Function([students, teams] -> [bool])\n\n# Constraints\nForAll([s:students], Implies(supports(s, Argentina), Not(supports(s, Germany)))) ::: All students who supported the Argentine team did not support the German team\nForAll([s:students], Implies(supports(s, Argentina), Not(supports(s, Brazil)))) ::: No students who supported the Argentine team supported the Brazilian team\nExists([s:students], And(supports(s, US), supports(s, Germany))) ::: Some students who support the US team support the German team\nExists([s:students], And(supports(s, US), supports(s, Brazil))) ::: Some students who support the US team support the Brazilian team\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements about the students in the class must be true?\nis_must_true(Exists([s:students], And(supports(s, Germany), Not(supports(s, Brazil)), Not(supports(s, US))))) ::: (A) Some students who support the German team neither support the Brazilian team nor the American team\nis_must_true(Exists([s:students], And(supports(s, US), Not(supports(s, Germany)), Not(supports(s, Brazil))))) ::: (B) Some students who support the US team neither support the German team nor the Brazilian team\nis_must_true(ForAll([s:students], Implies(supports(s, US), Or(supports(s, Argentina), supports(s, Germany), supports(s, Brazil))))) ::: (C) So the students who support the US team either support the Argentina team, or support the German team, or support the Brazil team\nis_must_true(Exists([s:students], And(supports(s, Brazil), supports(s, Germany)))) ::: (D) Some students who support the Brazilian team support the German team"
    ]
  },
  {
    "id": 460,
    "context": "According to statistics, the number of people dying of hunger in the world is as high as 10 million a year, and the Chinese waste about 8 million tons of food on the table every year, which is supposed to be the ration of 1.1 billion people a year.This means that if we can effectively eliminate food waste on the table, we can save millions of hungry people.",
    "question": "If the following statement is true, which one is most appropriate to challenge the above conclusion?",
    "answer": "B",
    "options": [
      "A.Bad weather causes food prices to fluctuate, exacerbating the problem of hunger",
      "B.Today's agricultural development level has been able to protect the world's people from hunger from a total amount",
      "C.Consumption can promote economic development, and one way for the rich to help the poor is to increase waste",
      "D.Eliminating food waste is only a favorable condition to solve the problem of hunger"
    ],
    "raw_logic_programs": [
      "# Declarations\nvariables = EnumSort([hunger_deaths, food_waste, people_saved, agricultural_development, economic_development, food_prices, weather_conditions])\nstatements = EnumSort([A, B, C, D])\nvalidity = Function([statements] -> [bool])\n\n# Constraints\nhunger_deaths == 10_000_000 ::: The number of people dying of hunger in the world is as high as 10 million a year\nfood_waste == 8_000_000 ::: The Chinese waste about 8 million tons of food on the table every year\npeople_saved == 1_100_000_000 ::: The ration of 1.1 billion people a year\nfood_waste_elimination -> people_saved ::: If we can effectively eliminate food waste on the table, we can save millions of hungry people\n\n# Options\nQuestion ::: If the following statement is true, which one is most appropriate to challenge the above conclusion?\nvalidity(A) == (weather_conditions -> food_prices -> hunger_deaths) ::: (A) Bad weather causes food prices to fluctuate, exacerbating the problem of hunger\nvalidity(B) == (agricultural_development -> Not(hunger_deaths)) ::: (B) Today's agricultural development level has been able to protect the world's people from hunger from a total amount\nvalidity(C) == (economic_development -> waste -> help_poor) ::: (C) Consumption can promote economic development, and one way for the rich to help the poor is to increase waste\nvalidity(D) == (food_waste_elimination -> favorable_condition -> Not(hunger_deaths)) ::: (D) Eliminating food waste is only a favorable condition to solve the problem of hunger"
    ]
  },
  {
    "id": 461,
    "context": "A netizen? Almost no one will support proposals that damage their interests.However, according to the 'Beijing Times' report, in the 17-day 'I offer advice on public transport price reform' activity, most of the tens of thousands of people who participated in the event agreed to raise subway and bus fares.Let everyone pay more and like it.This result must be fake.",
    "question": "If the following statement is true, all but one of them question the netizen's judgment?",
    "answer": "D",
    "options": [
      "A.Only those who are interested in the reform of public transport pricing participate in the activity, and the statistical results only reflect the opinions of this group of people",
      "B.People who participate in the activity rarely take the subway and bus, and raising the fare will not harm their interests",
      "C.Some people who commute by subway and bus think that raising the fare can ease congestion during peak hours",
      "D.Many citizens hope to increase the fare to improve the ride environment"
    ],
    "raw_logic_programs": [
      "# Declarations\nparticipants = EnumSort([interested, rarely_use, commuters, citizens])\nopinions = EnumSort([support, oppose])\nactivity_participation = Function([participants] -> [bool])\nopinion_on_fare_increase = Function([participants] -> [opinions])\n\n# Constraints\nForAll([p:participants], activity_participation(p) == True) ::: All participants are involved in the activity\nopinion_on_fare_increase(interested) == support ::: Interested participants support the fare increase\nopinion_on_fare_increase(rarely_use) == support ::: Participants who rarely use public transport support the fare increase\nopinion_on_fare_increase(commuters) == support ::: Some commuters support the fare increase\nopinion_on_fare_increase(citizens) == support ::: Many citizens support the fare increase\n\n# Options\nQuestion ::: If the following statement is true, all but one of them question the netizen's judgment?\nis_exception(opinion_on_fare_increase(interested) == support) ::: (A)\nis_exception(opinion_on_fare_increase(rarely_use) == support) ::: (B)\nis_exception(opinion_on_fare_increase(commuters) == support) ::: (C)\nis_exception(opinion_on_fare_increase(citizens) == support) ::: (D)"
    ]
  },
  {
    "id": 462,
    "context": "Overcapacity, local government debt and real estate bubbles are the three major diseases facing the Chinese economy.If not handled properly, it may lead to a hard landing of the Chinese economy.The root cause of the three major diseases is that China 's long-term capital interest rate is low The return of capital costs to a reasonable position, the demand for overcapacity can be controlled, excessive pressure on real estate investment can be gradually released, the impulse of local governments to borrow money for development has not been suppressed It's hard to come.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "C",
    "options": [
      "A.If the Chinese stock market has not yet ushered in a bull market, it must be that the three major diseases have not been effectively controlled",
      "B.If the impulse of local governments to borrow money for development is not suppressed, the domestic capital cost has not returned to a reasonable position",
      "C.If the stock market ushered in a bull market, it must be that domestic capital costs have not returned to a reasonable position",
      "D.As long as domestic capital costs return to a reasonable position, the Chinese economy will not land hard"
    ],
    "raw_logic_programs": [
      "# Declarations\ndiseases = EnumSort([overcapacity, local_government_debt, real_estate_bubbles])\neconomy_status = EnumSort([hard_landing, stable])\ninterest_rate_status = EnumSort([low, reasonable])\nmarket_status = EnumSort([bull_market, no_bull_market])\ngovernment_impulse = EnumSort([suppressed, not_suppressed])\n\n# Constraints\nroot_cause = Function([diseases] -> [interest_rate_status])\nForAll([d:diseases], root_cause(d) == low) ::: The root cause of the three major diseases is that China's long-term capital interest rate is low\nImplies(interest_rate_status == reasonable, And(Not(overcapacity), Not(real_estate_bubbles), Not(local_government_debt))) ::: The return of capital costs to a reasonable position controls overcapacity, releases real estate pressure, and suppresses government borrowing impulse\nImplies(And(overcapacity, local_government_debt, real_estate_bubbles), economy_status == hard_landing) ::: If not handled properly, it may lead to a hard landing of the Chinese economy\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nImplies(market_status == no_bull_market, And(overcapacity, local_government_debt, real_estate_bubbles)) ::: (A) If the Chinese stock market has not yet ushered in a bull market, it must be that the three major diseases have not been effectively controlled\nImplies(government_impulse == not_suppressed, interest_rate_status == low) ::: (B) If the impulse of local governments to borrow money for development is not suppressed, the domestic capital cost has not returned to a reasonable position\nImplies(market_status == bull_market, interest_rate_status == low) ::: (C) If the stock market ushered in a bull market, it must be that domestic capital costs have not returned to a reasonable position\nImplies(interest_rate_status == reasonable, economy_status == stable) ::: (D) As long as domestic capital costs return to a reasonable position, the Chinese economy will not land hard"
    ]
  },
  {
    "id": 463,
    "context": "Tang Sanzhang and his entourage learned from the Western Heavens and encountered Flame Mountain.Eight precepts said, just go where there is no fire, Tang Sanzang said, I only want to go to the Jingli, sand monk said, there is a fire in the Jingji.Sand monk means that there is fire everywhere.",
    "question": "If the sand monk's words are true, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.Some places without fire",
      "B.There is no fire in some places",
      "C.Wherever there is a fire, there is a sutra",
      "D.No fire anywhere"
    ],
    "raw_logic_programs": [
      "# Declarations\nlocations = EnumSort([Jingli, Other])\nfire = Function([locations] -> [bool])\nsutra = Function([locations] -> [bool])\n\n# Constraints\nForAll([l:locations], fire(l)) ::: Sand monk means that there is fire everywhere\n\n# Options\nQuestion ::: If the sand monk's words are true, which of the following statements must be true?\nis_true(Exists([l:locations], Not(fire(l)))) ::: (A) Some places without fire\nis_true(Exists([l:locations], Not(fire(l)))) ::: (B) There is no fire in some places\nis_true(ForAll([l:locations], Implies(fire(l), sutra(l)))) ::: (C) Wherever there is a fire, there is a sutra\nis_true(ForAll([l:locations], Not(fire(l)))) ::: (D) No fire anywhere"
    ]
  },
  {
    "id": 464,
    "context": "The world's first bicycle was invented in 1847.After the emergence of bicycles, they only disappeared for a short period of time and disappeared.They did not reappear until 1860.Why did this happen? Only when a new technology is consistent with the values â€‹â€‹of society will the technology be accepted.Therefore, there must have been some changes in social values â€‹â€‹between 1817 and 1860.",
    "question": "The reasoning in the above reasoning is flawed because of the argument?",
    "answer": "B",
    "options": [
      "A.Ignore the possibility of the bicycle being accepted again",
      "B.raised a question that has little to do with the conclusion of the argument",
      "C.Misconception that the bicycle reappeared in 1860 indicates that it was reaccepted",
      "D.Without giving a reasonable explanation, it is deemed to be truly accepted"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([invention, disappearance, reappearance])\nyears = EnumSort([1847, 1860])\nvalues = EnumSort([consistent, inconsistent])\nacceptance = Function([events] -> [bool])\nsocial_values = Function([years] -> [values])\n\n# Constraints\nacceptance(invention) == True ::: The world's first bicycle was invented in 1847\nacceptance(disappearance) == False ::: After the emergence of bicycles, they only disappeared for a short period of time\nacceptance(reappearance) == True ::: They did not reappear until 1860\nForAll([y:years], Implies(social_values(y) == consistent, acceptance(reappearance) == True)) ::: Only when a new technology is consistent with the values of society will the technology be accepted\nExists([y:years], social_values(y) == consistent) ::: There must have been some changes in social values between 1817 and 1860\n\n# Options\nQuestion ::: The reasoning in the above reasoning is flawed because of the argument?\nis_flawed(acceptance(reappearance) == True) ::: (A) Ignore the possibility of the bicycle being accepted again\nis_flawed(Exists([y:years], social_values(y) == consistent)) ::: (B) Raised a question that has little to do with the conclusion of the argument\nis_flawed(Implies(acceptance(reappearance) == True, acceptance(reappearance) == True)) ::: (C) Misconception that the bicycle reappeared in 1860 indicates that it was reaccepted\nis_flawed(ForAll([y:years], Implies(social_values(y) == consistent, acceptance(reappearance) == True))) ::: (D) Without giving a reasonable explanation, it is deemed to be truly accepted"
    ]
  },
  {
    "id": 465,
    "context": "Umbilical cord blood refers to the blood left in the placenta and the umbilical cord after the baby is delivered and the umbilical cord is ligated and cut off.The hematopoietic stem cells contained in it can cause leukemia and severe anemia.Some malignant tumors and other diseases have significant curative effects, and they are precious self-help resources that are no longer missing in life.Parents preserve cord blood for newborns, which can provide a guarantee for the child's health throughout life.",
    "question": "If the following statement is true, all but one of the items can weaken the conclusion discussed above",
    "answer": "B",
    "options": [
      "A.At present, the probability of stem cell transplantation due to blood diseases in China is extremely small, and the cost of storing cord blood is expensive",
      "B.Umbilical cord blood, peripheral blood, and bone marrow have become the three major sources of hematopoietic stem cells",
      "C.At present, umbilical cord blood is not the most effective way to treat many malignant diseases in clinic, but is an adjuvant treatment",
      "D.Umbilical cord blood is usually stored at 50 ml, so such a small amount has little effect on the treatment of most adults"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens = Function([statements] -> [bool])\n\n# Constraints\nweakens(A) ::: The probability of stem cell transplantation due to blood diseases in China is extremely small, and the cost of storing cord blood is expensive\nweakens(B) ::: Umbilical cord blood, peripheral blood, and bone marrow have become the three major sources of hematopoietic stem cells\nweakens(C) ::: Umbilical cord blood is not the most effective way to treat many malignant diseases in clinic, but is an adjuvant treatment\nweakens(D) ::: Umbilical cord blood is usually stored at 50 ml, so such a small amount has little effect on the treatment of most adults\n\n# Options\nQuestion ::: If the following statement is true, all but one of the items can weaken the conclusion discussed above\nis_not_weaken(weakens(A)) ::: (A)\nis_not_weaken(weakens(B)) ::: (B)\nis_not_weaken(weakens(C)) ::: (C)\nis_not_weaken(weakens(D)) ::: (D)"
    ]
  },
  {
    "id": 466,
    "context": "Sophist? Because 6 is greater than 4, and 6 is less than 8, 6 is both large and small.",
    "question": "Which of the following ways of reasoning is most similar to the reasoning of the above-mentioned sophisters",
    "answer": "C",
    "options": [
      "A.Because Laozi is more intelligent than Mencius, Laozi has a better view of goodness than Mencius.",
      "B.Because Zhang Qing drinks Tonghua glucose when he is healthy, it is sweet, and when he is sick, drinking Tonghua glucose is sour, so Tonghua glucose is both sweet and sour.",
      "C.Because Zhao Feng is taller than Li Tong, and Zhao Feng is shorter than Wang Lei, Zhao Feng is both tall and short",
      "D.Because a wooden stick is usually straight, but it looks curved in the water, this wooden stick is both straight and curved."
    ],
    "raw_logic_programs": [
      "# Declarations\nentities = EnumSort([six, four, eight])\nattributes = EnumSort([large, small])\ncomparison = Function([entities, entities] -> [bool])\nclassification = Function([entities] -> [attributes])\n\n# Constraints\ncomparison(six, four) == True ::: 6 is greater than 4\ncomparison(six, eight) == False ::: 6 is less than 8\nclassification(six) == large ::: 6 is large\nclassification(six) == small ::: 6 is small\n\n# Options\nQuestion ::: Which of the following ways of reasoning is most similar to the reasoning of the above-mentioned sophisters?\nis_similar(And(comparison(Laozi, Mencius), classification(Laozi) == better_view)) ::: (A)\nis_similar(And(classification(Tonghua_glucose_healthy) == sweet, classification(Tonghua_glucose_sick) == sour)) ::: (B)\nis_similar(And(comparison(Zhao_Feng, Li_Tong), comparison(Wang_Lei, Zhao_Feng), classification(Zhao_Feng) == tall, classification(Zhao_Feng) == short)) ::: (C)\nis_similar(And(classification(wooden_stick_normal) == straight, classification(wooden_stick_water) == curved)) ::: (D)"
    ]
  },
  {
    "id": 467,
    "context": "In August 2014, more than 200 Russian trucks carrying relief supplies entered eastern Ukraine.If the Ukrainian government 's military operations in the east directly or indirectly attacked the Russian convoy, it may trigger the Russian side to take strong measures; if the Ukrainian government army temporarily Stopping military operations in the east to ensure the safety of the Russian convoy will give the civilian armed forces in a disadvantage a breathing opportunity",
    "question": "If the above statement is true, which of the following must be true?",
    "answer": "B",
    "options": [
      "A.If the Ukrainian government forces attack the Russian convoy, there will be no chance for the civilian armed forces to take a breather",
      "B.If the Ukrainian government army does not give the civilian armed forces a breathing opportunity, it may trigger the Russian side to take strong measures",
      "C.If civilian armed forces in eastern Ukraine take a breather, Russia will not take strong measures",
      "D.The Russian convoy entered Ukraine to help civilian armed forces in eastern Ukraine"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([attack_convoy, stop_operations, breather_opportunity, strong_measures])\noutcomes = EnumSort([true, false])\ncauses = Function([events] -> [outcomes])\n\n# Constraints\nImplies(causes(attack_convoy) == true, causes(strong_measures) == true) ::: If the Ukrainian government attacks the convoy, it may trigger strong measures\nImplies(causes(stop_operations) == true, causes(breather_opportunity) == true) ::: If operations stop, it gives a breather opportunity\n\n# Options\nQuestion ::: If the above statement is true, which of the following must be true?\nImplies(causes(attack_convoy) == true, causes(breather_opportunity) == false) ::: (A) If the Ukrainian government forces attack the Russian convoy, there will be no chance for the civilian armed forces to take a breather\nImplies(Not(causes(breather_opportunity) == true), causes(strong_measures) == true) ::: (B) If the Ukrainian government army does not give the civilian armed forces a breathing opportunity, it may trigger the Russian side to take strong measures\nImplies(causes(breather_opportunity) == true, causes(strong_measures) == false) ::: (C) If civilian armed forces in eastern Ukraine take a breather, Russia will not take strong measures\ncauses(breather_opportunity) == true ::: (D) The Russian convoy entered Ukraine to help civilian armed forces in eastern Ukraine"
    ]
  },
  {
    "id": 468,
    "context": "Many colleges and universities in China held four job fairs in Toronto, New York, Boston, and San Francisco.The questionnaire survey for Chinese students attending the fair showed that 67% of people want to return to work, 33% of people will be serious Consider the option of returning home.It can be seen that the international students in the US task force have lost their attraction, and the popular feelings have become common practice.",
    "question": "If the following statement is true, which one would most strongly weaken the above argument?",
    "answer": "D",
    "options": [
      "A.Chinese students participating in the questionnaire survey may not express their best wishes",
      "B.If Chinese students in North America cannot find a job when they return home, it will disappoint them",
      "C.67 ï¹ª and 33 ï¹ª add up to 100 ï¹ª, which means zero people want to stay and work in North America",
      "D.Among the Chinese students in North America, those who do not intend to return to work did not attend the job fair"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([return_to_work, consider_returning_home, stay_in_North_America])\nsurveyed = Function([students] -> [int])\nForAll([s:students], And(0 <= surveyed(s), surveyed(s) <= 100))\n\n# Constraints\nsurveyed(return_to_work) == 67 ::: 67% of people want to return to work\nsurveyed(consider_returning_home) == 33 ::: 33% of people will seriously consider the option of returning home\nsurveyed(return_to_work) + surveyed(consider_returning_home) == 100 ::: The percentages add up to 100%\n\n# Options\nQuestion ::: If the following statement is true, which one would most strongly weaken the above argument?\nis_weakening(surveyed(stay_in_North_America) > 0) ::: (A) Chinese students participating in the questionnaire survey may not express their best wishes\nis_weakening(Exists([s:students], surveyed(s) == 0)) ::: (B) If Chinese students in North America cannot find a job when they return home, it will disappoint them\nis_weakening(surveyed(stay_in_North_America) == 0) ::: (C) 67% and 33% add up to 100%, which means zero people want to stay and work in North America\nis_weakening(Exists([s:students], surveyed(s) < 67)) ::: (D) Among the Chinese students in North America, those who do not intend to return to work did not attend the job fair"
    ]
  },
  {
    "id": 469,
    "context": "The traditional view believes that the origin of the names of the Eight Diagrams and Sixty-four Diagrams in Zhouyi is fiction, or there is no meaning.There is no other explanation.The fiction says that the Eight Diagrams are named after the name of an object, For example, Qiangua is the heaven, and Qian is the ancient Chinese character, so it is named Qian; in the sense of meaning, the image of hexagrams represents the principle of things, and its rationality is taken as the name of a hexagram.The Lord is supple, so the hexagram is Kun, and Kun is the meaning of suppleness",
    "question": "Which of the following statements is true, which most seriously shakes the traditional view of the origin of the Gua name?",
    "answer": "D",
    "options": [
      "A.The reason why the two hexagrams of Qiankun ranks first among the sixty-four hexagrams is because the Qian gua represents heaven and the Kun gua represents earth.",
      "B.The hexagram name cannot be explained by the orientation theory alone, nor can it be explained by the sense of meaning alone.Only by combining the two can we give an explanation of all hexagram names",
      "C.Although there are many different explanations for the origin of the Gua name, it is inseparable from its sect, either attributed to the theory of fetching images, or attributed to the theory of fetching meanings",
      "D.The name of the hexagram comes from the account of the narration of the hexagram.Kun Guazhan asked about the loss of the horse.At the beginning, he had three elephants.He believed that the horse could be found and was named Kun."
    ],
    "raw_logic_programs": [
      "# Declarations\nviews = EnumSort([traditional, alternative])\nstatements = EnumSort([A, B, C, D])\nshakes = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], shakes(s) == False) ::: Initially, no statement is considered to shake the traditional view\n\n# Options\nQuestion ::: Which of the following statements is true, which most seriously shakes the traditional view of the origin of the Gua name?\nshakes(A) == True ::: (A) The reason why the two hexagrams of Qiankun ranks first among the sixty-four hexagrams is because the Qian gua represents heaven and the Kun gua represents earth.\nshakes(B) == True ::: (B) The hexagram name cannot be explained by the orientation theory alone, nor can it be explained by the sense of meaning alone. Only by combining the two can we give an explanation of all hexagram names.\nshakes(C) == True ::: (C) Although there are many different explanations for the origin of the Gua name, it is inseparable from its sect, either attributed to the theory of fetching images, or attributed to the theory of fetching meanings.\nshakes(D) == True ::: (D) The name of the hexagram comes from the account of the narration of the hexagram. Kun Guazhan asked about the loss of the horse. At the beginning, he had three elephants. He believed that the horse could be found and was named Kun."
    ]
  },
  {
    "id": 470,
    "context": "In ball games, it is wrong to use replay to determine the penalty, because no matter how many cameras track the game on the field, it is inevitable that some foul actions will be missed.It is impossible to be aware of what happened before you.",
    "question": "The defect of which of the following arguments is most similar to the above argument",
    "answer": "B",
    "options": [
      "A.Knowledge is a virtue, because no one does it on purpose",
      "B.We should not ask the police because they cannot stop all criminal activities",
      "C.Trial marriage is not immoral, because anyone who buys clothes can try on",
      "D.Faith cannot create reality, because taking something as true does not make it true"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\ndefect_type = Function([arguments] -> [str])\n\n# Constraints\ndefect_type(A) == \"irrelevant_reasoning\" ::: Knowledge is a virtue, because no one does it on purpose\ndefect_type(B) == \"imperfect_solution\" ::: We should not ask the police because they cannot stop all criminal activities\ndefect_type(C) == \"false_analogy\" ::: Trial marriage is not immoral, because anyone who buys clothes can try on\ndefect_type(D) == \"begging_the_question\" ::: Faith cannot create reality, because taking something as true does not make it true\n\n# Options\nQuestion ::: The defect of which of the following arguments is most similar to the above argument\nis_similar(defect_type(B) == \"imperfect_solution\") ::: (B)"
    ]
  },
  {
    "id": 471,
    "context": "Scientists assume that a special type of fat, 'P.fat', is necessary for the development of vision.Scientists have observed that infants fed formula milk with low P.fat have better vision than breastfed infants.It 's poor, and the content of P.fat in breast milk is high, so they put forward the above hypothesis.In addition, they also found that babies born prematurely 5-6 weeks have worse vision than babies born at full term",
    "question": "If any of the following statements is true, will it most support the hypothesis of the above scientists?",
    "answer": "C",
    "options": [
      "A.The fetus only increased the amount of P.fat obtained from the mother during the last 4 weeks of pregnancy",
      "B.Old people who lack P.fat in their daily diet have poorer vision than adults with high levels of P.fat in their daily diet",
      "C.Fetal vision developed during the last 3 months of pregnancy.",
      "D.Poor eyesight of the mother does not cause poor eyesight of the baby"
    ],
    "raw_logic_programs": [
      "# Declarations\nhypothesis = Function([bool])\nstatements = EnumSort([A, B, C, D])\nsupports = Function([statements] -> [bool])\n\n# Constraints\nhypothesis() == True ::: Scientists assume that a special type of fat, 'P.fat', is necessary for the development of vision\n\n# Options\nQuestion ::: If any of the following statements is true, will it most support the hypothesis of the above scientists?\nsupports(A) ::: (A) The fetus only increased the amount of P.fat obtained from the mother during the last 4 weeks of pregnancy\nsupports(B) ::: (B) Old people who lack P.fat in their daily diet have poorer vision than adults with high levels of P.fat in their daily diet\nsupports(C) ::: (C) Fetal vision developed during the last 3 months of pregnancy\nsupports(D) ::: (D) Poor eyesight of the mother does not cause poor eyesight of the baby"
    ]
  },
  {
    "id": 472,
    "context": "The important difference between a civilized man and a barbarian or other animals is to suppress the instinctive impulse through foresight.Only when a person does something is not driven by instinctive impulse, but because his reason tells him, At some point in the future he will benefit from it, and then there is real foresight.Cultivating the land is a far-sighted action, people work in the spring to eat food in winter",
    "question": "Which of the following statements is the hypothesis that the above argument relies on?",
    "answer": "C",
    "options": [
      "A.Is it possible to suppress the instinctive impulse by thinking deeply, this is the only difference between civilized people and barbarians or other animals",
      "B.Actions such as squirrel burying chestnuts and arctic fox burying bird eggs are purely instinct-driven actions",
      "C.The stronger the restraint of one's own instinct impulses, the greater the tolerance of the current pain, and therefore the higher the degree of civilization",
      "D.People not only suppress their instinctive impulses through their foresight, but also suppress their instinct impulses through external laws, customs and religions."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrelies_on = Function([statements] -> [bool])\n\n# Constraints\n# The argument states that the key difference between civilized humans and barbarians or animals is the ability to suppress instinctive impulses through foresight.\n# It implies that actions driven by foresight, rather than instinct, are what define civilization.\n\n# Options\nQuestion ::: Which of the following statements is the hypothesis that the above argument relies on?\nrelies_on(A) ::: (A) Is it possible to suppress the instinctive impulse by thinking deeply, this is the only difference between civilized people and barbarians or other animals\nrelies_on(B) ::: (B) Actions such as squirrel burying chestnuts and arctic fox burying bird eggs are purely instinct-driven actions\nrelies_on(C) ::: (C) The stronger the restraint of one's own instinct impulses, the greater the tolerance of the current pain, and therefore the higher the degree of civilization\nrelies_on(D) ::: (D) People not only suppress their instinctive impulses through their foresight, but also suppress their instinct impulses through external laws, customs and religions."
    ]
  },
  {
    "id": 473,
    "context": "Nutritionist? All medical studies to date have shown that drinking 3 cups or less of coffee a day will not cause damage to the heart.Therefore, if you are a modest coffee drinker, then you can enjoy coffee with confidence, without worrying about coffee harming people's health",
    "question": "Which of the following statements most preparedly points out the shortcomings of the above argument?",
    "answer": "C",
    "options": [
      "A.Coffee drinkers may consume other foods that are harmful to the heart while drinking coffee",
      "B.The nutritionist 's conclusions are based only on relevant research results, lacking the support of clinical data",
      "C.Drinking coffee is harmless to the heart does not mean harmless to the body",
      "D.People who drink coffee often have greater psychological pressure, and the larger psychological pressure itself is harmful to the heart."
    ],
    "raw_logic_programs": [
      "# Declarations\ncoffee_cups = IntSort()\nhealth_effects = EnumSort([harmless, harmful])\ndrinker_type = EnumSort([modest, excessive])\nconsumption = Function([drinker_type] -> [coffee_cups])\nhealth_impact = Function([drinker_type] -> [health_effects])\n\n# Constraints\nForAll([d:drinker_type], Implies(consumption(d) <= 3, health_impact(d) == harmless)) ::: All medical studies to date have shown that drinking 3 cups or less of coffee a day will not cause damage to the heart\n\n# Options\nQuestion ::: Which of the following statements most preparedly points out the shortcomings of the above argument?\nis_weakness(Exists([d:drinker_type], And(consumption(d) <= 3, health_impact(d) == harmful))) ::: (A) Coffee drinkers may consume other foods that are harmful to the heart while drinking coffee\nis_weakness(Not(Exists([d:drinker_type], And(consumption(d) <= 3, health_impact(d) == harmless)))) ::: (B) The nutritionist's conclusions are based only on relevant research results, lacking the support of clinical data\nis_weakness(Exists([d:drinker_type], And(consumption(d) <= 3, health_impact(d) != harmless))) ::: (C) Drinking coffee is harmless to the heart does not mean harmless to the body\nis_weakness(Exists([d:drinker_type], And(consumption(d) <= 3, health_impact(d) == harmful))) ::: (D) People who drink coffee often have greater psychological pressure, and the larger psychological pressure itself is harmful to the heart."
    ]
  },
  {
    "id": 474,
    "context": "Thomas Paine discusses the question of whether the monarchy and hereditary system are reasonable in the book 'Common Knowledge'.For those who believe that the hereditary system is reasonable, Paine asked and answered, how did the original king come about? There are only three possibilities, either by lottery, election or by usurping power.If the first king is selected by lottery or election, this will set a precedent for future kings and thus negate hereditary practices.If the first king was obtained by usurping power, no one would be so bold and dare to defend the hereditary throne",
    "question": "Which of the following best describes the techniques used in Paine 's argument",
    "answer": "A",
    "options": [
      "A.Demonstrate that a proposition contradicts a certain proposition that has been established as true",
      "B.A proposition can lead to a false conclusion to prove that the proposition is not true",
      "C.Demonstrate that this proposition is true by showing that all possible explanations lead to the same proposition",
      "D.By excluding all other possible explanations, to prove that the remaining explanation is true"
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([lottery, election, usurping_power, hereditary_system])\ntechniques = EnumSort([contradiction, false_conclusion, same_proposition, exclusion])\n\n# Constraints\nForAll([p:propositions], Or(p == lottery, p == election, p == usurping_power)) ::: There are only three possibilities for the original king: lottery, election, or usurping power\nImplies(Or(p == lottery, p == election), Not(hereditary_system)) ::: If the first king is selected by lottery or election, it negates hereditary practices\nImplies(p == usurping_power, Not(hereditary_system)) ::: If the first king was obtained by usurping power, it negates hereditary practices\n\n# Options\nQuestion ::: Which of the following best describes the techniques used in Paine's argument?\nis_best_technique(techniques == contradiction) ::: (A)\nis_best_technique(techniques == false_conclusion) ::: (B)\nis_best_technique(techniques == same_proposition) ::: (C)\nis_best_technique(techniques == exclusion) ::: (D)"
    ]
  },
  {
    "id": 475,
    "context": "Sometimes, a person can not accurately explain the meaning of an abstract word, but can use this word very appropriately for language expression.It can be seen that understanding a word does not necessarily depend on precise interpretation of the meaning of the word.",
    "question": "Which of the following statements can provide the best support for the above conclusion?",
    "answer": "A",
    "options": [
      "A.The meaning of abstract words is not easy to be accurately interpreted",
      "B.If a person can accurately explain the meaning of a word, then he understands the word",
      "C.A person cannot accurately explain the meaning of a word, does not mean that other people can not accurately explain the meaning of the word",
      "D.If a person can properly use a word for language expression, then he understands the word"
    ],
    "raw_logic_programs": [
      "# Declarations\nabstract_words = EnumSort([word])\npeople = EnumSort([person])\nunderstands = Function([people, abstract_words] -> [bool])\nexplains = Function([people, abstract_words] -> [bool])\nuses_properly = Function([people, abstract_words] -> [bool])\n\n# Constraints\nForAll([p:people, w:abstract_words], Implies(uses_properly(p, w), understands(p, w))) ::: If a person can properly use a word for language expression, then he understands the word\nExists([p:people, w:abstract_words], And(Not(explains(p, w)), uses_properly(p, w))) ::: Sometimes, a person can not accurately explain the meaning of an abstract word, but can use this word very appropriately for language expression\n\n# Options\nQuestion ::: Which of the following statements can provide the best support for the above conclusion?\nis_best_support(ForAll([w:abstract_words], Not(Exists([p:people], explains(p, w))))) ::: (A)\nis_best_support(ForAll([p:people, w:abstract_words], Implies(explains(p, w), understands(p, w)))) ::: (B)\nis_best_support(ForAll([p1:people, p2:people, w:abstract_words], Implies(Not(explains(p1, w)), Not(explains(p2, w))))) ::: (C)\nis_best_support(ForAll([p:people, w:abstract_words], Implies(uses_properly(p, w), understands(p, w)))) ::: (D)"
    ]
  },
  {
    "id": 476,
    "context": "Some online media reported that let the rice listen to the song of thanksgiving can increase 15%.The results of three consecutive seasons of rice cultivation in Liangshan Village, Fujian confirmed that listening to the Dabei Mantra not only increased by 15%, but also the rice grains were fuller.Some agricultural experts said that music not only helps plants absorb, transfer and transform nutrients, but also achieves insect repellent effects",
    "question": "The answer to which of the following questions is least relevant to assess the authenticity of the above report?",
    "answer": "B",
    "options": [
      "A.Are the other growing conditions of the rice that listens to the Da Bei mantra exactly the same as those that do not listen to the Da Bei mantra?",
      "B.Is this method feasible for large-scale promotion?",
      "C.Can experts explain why Da Bei Man is beneficial to the growth of rice but not to the growth of pests?",
      "D.Does the expert's explanation have reliable theoretical support?"
    ],
    "raw_logic_programs": [
      "# Declarations\nquestions = EnumSort([A, B, C, D])\nrelevance = Function([questions] -> [bool])\n\n# Constraints\n# The problem does not provide specific constraints for the relevance of each question, so we assume each question has a potential relevance.\n\n# Options\nQuestion ::: The answer to which of the following questions is least relevant to assess the authenticity of the above report?\nis_least_relevant(relevance(A)) ::: (A)\nis_least_relevant(relevance(B)) ::: (B)\nis_least_relevant(relevance(C)) ::: (C)\nis_least_relevant(relevance(D)) ::: (D)"
    ]
  },
  {
    "id": 477,
    "context": "Regarding how to define 'naked officials', the 'Interim Provisions' clarified the following three categories of national staff as 'naked officials'? spouses and children have moved outside the country (border); no children The spouse has moved outside the country (boundary); without the spouse, the children have moved outside the country (boundary).In 2014, the Central Organization Department issued the relevant 'Administrative Measures' stipulating that? If the spouse has moved outside the country (boundary) or has no spouse, the national staff who have moved outside the country (boundary) are all 'naked officials'.",
    "question": "Which of the following statements is consistent with the above two documents?",
    "answer": "D",
    "options": [
      "A.According to the 'Administrative Measures', only national staff whose children have migrated outside the country (border) are 'bare officials'",
      "B.For national staff with both spouses and children, the provisions of the two documents are the same",
      "C.According to the 'Interim Regulations', as long as the spouse of a staff member of a certain country has moved outside the country (border), he or she is a 'naked official'",
      "D.For national staff with only spouse and no children, the provisions of the two documents are the same"
    ],
    "raw_logic_programs": [
      "# Declarations\ncategories = EnumSort([spouse_and_children_abroad, spouse_abroad, children_abroad])\ndocuments = EnumSort([interim_provisions, administrative_measures])\nstatus = Function([documents, categories] -> [bool])\n\n# Constraints\nstatus(interim_provisions, spouse_and_children_abroad) == True ::: spouses and children have moved outside the country (border)\nstatus(interim_provisions, spouse_abroad) == True ::: the spouse has moved outside the country (boundary)\nstatus(interim_provisions, children_abroad) == True ::: the children have moved outside the country (boundary)\nstatus(administrative_measures, spouse_abroad) == True ::: if the spouse has moved outside the country (boundary)\nstatus(administrative_measures, children_abroad) == True ::: if the children have moved outside the country (boundary)\n\n# Options\nQuestion ::: Which of the following statements is consistent with the above two documents?\nis_consistent(status(administrative_measures, children_abroad) == True) ::: (A) According to the 'Administrative Measures', only national staff whose children have migrated outside the country (border) are 'bare officials'\nis_consistent(And(status(interim_provisions, spouse_and_children_abroad) == True, status(administrative_measures, spouse_and_children_abroad) == True)) ::: (B) For national staff with both spouses and children, the provisions of the two documents are the same\nis_consistent(status(interim_provisions, spouse_abroad) == True) ::: (C) According to the 'Interim Regulations', as long as the spouse of a staff member of a certain country has moved outside the country (border), he or she is a 'naked official'\nis_consistent(And(status(interim_provisions, spouse_abroad) == True, status(administrative_measures, spouse_abroad) == True)) ::: (D) For national staff with only spouse and no children, the provisions of the two documents are the same"
    ]
  },
  {
    "id": 478,
    "context": "The mode in which the government and private enterprises cooperate to complete a project (referred to as PPP) can enable the government to obtain funds, and can also allow social capital to enter the public utility fields such as power and railway.The problem with this model is that the government defaults or investors default, causing economic losses to the other party.In past PPP projects, government default was not a small probability event.Although local government defaults are not uncommon, investors continue to actively invest in PPP projects as always.",
    "question": "If any of the following statements are true, can we best explain the seemingly contradictory phenomenon?",
    "answer": "D",
    "options": [
      "A.With the reform of the economic system and the promotion of new urbanization, the PPP model has high hopes from all walks of life",
      "B.The PPP model is more complicated, and the local government 's bargaining power and PPP expertise are not as good as those of investors.",
      "C.This year, the National Development and Reform Commission released 80 important projects to encourage social capital to participate in construction and operation through PPP and other means",
      "D.In order to prevent economic losses caused by local government defaults, investors try to transfer other interests to their own enterprises"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nexplain_contradiction = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the task is to evaluate which statement best explains the phenomenon.\n\n# Options\nQuestion ::: If any of the following statements are true, can we best explain the seemingly contradictory phenomenon?\nis_best_explanation(explain_contradiction(A)) ::: (A)\nis_best_explanation(explain_contradiction(B)) ::: (B)\nis_best_explanation(explain_contradiction(C)) ::: (C)\nis_best_explanation(explain_contradiction(D)) ::: (D)"
    ]
  },
  {
    "id": 479,
    "context": "Li Ming is likely to be a senior logic teacher.Like most senior logic teachers, Li Ming is familiar with GÃ¶del's completeness theorem and incompleteness theorem, and most people who are not senior logic teachers are not familiar with these theorems.In fact, many people who are not senior logic teachers have not even heard of GÃ¶del.",
    "question": "Which of the following statements accurately points out the shortcomings of the above reasoning?",
    "answer": "A",
    "options": [
      "A.Ignore this possibility? most people who are familiar with these theorems of GÃ¶del are not senior logic teachers",
      "B.Ignore this possibility? some senior logic teachers are not familiar with these theorems of GÃ¶del",
      "C.The concept of 'senior' in reasoning is a vague concept",
      "D.Without proof, it is concluded that people who are not familiar with GÃ¶del's completeness theorem and incompleteness theorem have not heard of GÃ¶del"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Li_Ming, Senior_Logic_Teacher, Familiar_With_Godel, Not_Senior_Logic_Teacher, Not_Familiar_With_Godel])\ntheorems = EnumSort([Godel_Completeness, Godel_Incompleteness])\nfamiliar = Function([people, theorems] -> [bool])\nsenior_logic_teacher = Function([people] -> [bool])\n\n# Constraints\nsenior_logic_teacher(Li_Ming) == True ::: Li Ming is likely to be a senior logic teacher\nForAll([p:people], Implies(senior_logic_teacher(p), And(familiar(p, Godel_Completeness), familiar(p, Godel_Incompleteness)))) ::: Like most senior logic teachers, Li Ming is familiar with Gödel's completeness theorem and incompleteness theorem\nForAll([p:people], Implies(Not(senior_logic_teacher(p)), Not(familiar(p, Godel_Completeness)))) ::: Most people who are not senior logic teachers are not familiar with these theorems\nForAll([p:people], Implies(Not(senior_logic_teacher(p)), Not(familiar(p, Godel_Incompleteness)))) ::: Most people who are not senior logic teachers are not familiar with these theorems\nForAll([p:people], Implies(Not(senior_logic_teacher(p)), Not_Familiar_With_Godel)) ::: Many people who are not senior logic teachers have not even heard of Gödel\n\n# Options\nQuestion ::: Which of the following statements accurately points out the shortcomings of the above reasoning?\nis_valid(Exists([p:people], And(familiar(p, Godel_Completeness), Not(senior_logic_teacher(p))))) ::: (A) Ignore this possibility? most people who are familiar with these theorems of Gödel are not senior logic teachers\nis_valid(Exists([p:people], And(senior_logic_teacher(p), Not(familiar(p, Godel_Completeness))))) ::: (B) Ignore this possibility? some senior logic teachers are not familiar with these theorems of Gödel\nis_vague(senior_logic_teacher) ::: (C) The concept of 'senior' in reasoning is a vague concept\nis_unproven(ForAll([p:people], Implies(Not(familiar(p, Godel_Completeness)), Not_Familiar_With_Godel))) ::: (D) Without proof, it is concluded that people who are not familiar with Gödel's completeness theorem and incompleteness theorem have not heard of Gödel"
    ]
  },
  {
    "id": 480,
    "context": "Due to the aging population, the German government is facing a dilemma? if the pension system is not reformed, pensions will be unsustainable.Policies to solve this dilemma include increasing the proportion of pension contributions, reducing the level of pension payments, and increasing the retirement age.Among them, the resistance to raising the retirement age is the biggest.The government implementing this policy may lose a lot of votes in the next election.However, the German government completed the legal process in 2007, raising the retirement age from 65 to 67.",
    "question": "If any of the following statements is true, can it best explain why the German government risked adopting this policy?",
    "answer": "A",
    "options": [
      "A.In 2001, Germany established the upper limit of pension payment in legal form, and in 2004 established the lower limit of pension payment, the two policies have been used to the extreme",
      "B.In order to reduce the pressure, the German government requires a transition period of 20 years from 2012 to achieve the retirement age from 65 to 67 years",
      "C.After one year of retirement, the pension reduction can reach nearly 1% of GDP.",
      "D.Now the average life expectancy of Germans has greatly increased, and pensioners have been receiving longer pensions"
    ],
    "raw_logic_programs": [
      "# Declarations\npolicies = EnumSort([increase_contributions, reduce_payments, increase_retirement_age])\nfactors = EnumSort([legal_limits, transition_period, economic_impact, life_expectancy])\ngovernment_action = Function([policies] -> [bool])\nexplanation = Function([factors] -> [bool])\n\n# Constraints\ngovernment_action(increase_retirement_age) ::: The German government raised the retirement age from 65 to 67\n\n# Options\nQuestion ::: If any of the following statements is true, can it best explain why the German government risked adopting this policy?\nis_best_explanation(explanation(legal_limits)) ::: (A) In 2001, Germany established the upper limit of pension payment in legal form, and in 2004 established the lower limit of pension payment, the two policies have been used to the extreme\nis_best_explanation(explanation(transition_period)) ::: (B) In order to reduce the pressure, the German government requires a transition period of 20 years from 2012 to achieve the retirement age from 65 to 67 years\nis_best_explanation(explanation(economic_impact)) ::: (C) After one year of retirement, the pension reduction can reach nearly 1% of GDP.\nis_best_explanation(explanation(life_expectancy)) ::: (D) Now the average life expectancy of Germans has greatly increased, and pensioners have been receiving longer pensions"
    ]
  },
  {
    "id": 481,
    "context": "Why did ancient Greece have a city-state system, but there was a long-standing monarchy in Eastern countries? Aristotle believes that the monarchy is often seen among barbarians and is very close to the tyrant or tyrant system.Because the nature of the barbarian people is inherently more national and more enslaved than Greece, and the slavishness of the Asian barbarians is more than that of the Europa barbarians, so they are subject to dictatorship and do not rebel.",
    "question": "If the following statements are true, all but one can weaken Aristotle 's interpretation",
    "answer": "D",
    "options": [
      "A.City-state manufacturing has brought about the autonomy of citizens, and the monarchy has created the slavery of Shunmin.",
      "B.The difference in geographical environment has created the difference between the city-state system and the monarchy",
      "C.Aristotle's explanation is emotionally difficult for most Orientals to accept",
      "D.The difference between civilized people and barbarians is caused by different cultural and social organizations"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], weakens(s)) ::: Each statement can weaken Aristotle's interpretation\n\n# Options\nQuestion ::: If the following statements are true, all but one can weaken Aristotle's interpretation\nis_exception(weakens(A)) ::: (A)\nis_exception(weakens(B)) ::: (B)\nis_exception(weakens(C)) ::: (C)\nis_exception(weakens(D)) ::: (D)"
    ]
  },
  {
    "id": 482,
    "context": "The battery used by the American electric vehicle TESLA consists of nearly 7000 Panasonic 18650 batteries connected in series.Large battery packs connected in parallel.The safety of the TESLA battery power system has been questioned by the automotive industry.A battery expert said that the probability of fire for 18650 batteries in the United States is 0.2 parts per million, then the probability of fire for a battery pack consisting of 7,000 small batteries is 0.14%.Based on the current sales of TESLA.this It caused a battery fire accident almost every month.",
    "question": "If the following statement is true, which one most powerfully weakened the expert's judgment?",
    "answer": "C",
    "options": [
      "A.18650 battery has the characteristics of large energy density, stability and good consistency",
      "B.Billions of 18650 batteries are produced every year in the world, and their safety level is constantly improving",
      "C.TESLA has a very advanced battery management system, which will automatically disconnect the output of abnormal battery cells",
      "D.18650 battery can be recharged many times, so the service life of the battery is greatly extended"
    ],
    "raw_logic_programs": [
      "# Declarations\nbatteries = EnumSort([battery_18650, battery_pack])\nprobability_of_fire = Function([batteries] -> [float])\nsales = Function([TESLA] -> [int])\nfire_accident_frequency = Function([TESLA] -> [float])\n\n# Constraints\nprobability_of_fire(battery_18650) == 0.2 / 1_000_000 ::: probability of fire for 18650 batteries in the United States is 0.2 parts per million\nprobability_of_fire(battery_pack) == 0.0014 ::: probability of fire for a battery pack consisting of 7,000 small batteries is 0.14%\nfire_accident_frequency(TESLA) == 1 / 30 ::: caused a battery fire accident almost every month\n\n# Options\nQuestion ::: If the following statement is true, which one most powerfully weakened the expert's judgment?\nweakens_expert_judgment(And(large_energy_density(battery_18650), stability(battery_18650), good_consistency(battery_18650))) ::: (A)\nweakens_expert_judgment(And(production(battery_18650) == billions_per_year, improving_safety_level(battery_18650))) ::: (B)\nweakens_expert_judgment(advanced_battery_management_system(TESLA)) ::: (C)\nweakens_expert_judgment(rechargeable(battery_18650)) ::: (D)"
    ]
  },
  {
    "id": 483,
    "context": "The Arctic region is rich in oil.natural gas.Mineral and fishery resources, their oil and gas reserves account for a quarter of the world's undeveloped oil and gas resources.Global warming has caused the ice surface in the Arctic to melt at a rate of 9% every 10 years.The route that crosses the Arctic Ocean along the northern coastline of Russia and connects the Atlantic and Pacific Oceans can reach tens of thousands of kilometers from Asia to Europe than the Panama Canal.Therefore, the development and utilization of the Arctic will bring huge benefits to mankind",
    "question": "If the following statement is true, in addition to which one can weaken the above argument?",
    "answer": "B",
    "options": [
      "A.Ships crossing the Arctic will bring invading creatures and destroy the Arctic ecosystem",
      "B.The international community has experienced many serious conflicts due to Arctic development issues, but the countries concerned have calmly shelved or dealt with low-key",
      "C.Exploitation of the Arctic will melt permafrost and release methane, a greenhouse gas, resulting in increased extreme weather",
      "D.Exploiting the Arctic will accelerate the melting of ice and snow, causing sea levels to rise and flooding coastal lowlands"
    ],
    "raw_logic_programs": [
      "# Declarations\nresources = EnumSort([oil, natural_gas, minerals, fishery])\neffects = EnumSort([ecosystem_damage, international_conflict, greenhouse_gas_release, sea_level_rise])\nactions = EnumSort([development, exploitation, shipping])\narguments = Function([actions] -> [bool])\nweakens = Function([effects] -> [bool])\n\n# Constraints\narguments(development) == True ::: The development and utilization of the Arctic will bring huge benefits to mankind\narguments(exploitation) == True ::: The development and utilization of the Arctic will bring huge benefits to mankind\narguments(shipping) == True ::: The development and utilization of the Arctic will bring huge benefits to mankind\n\n# Options\nQuestion ::: If the following statement is true, in addition to which one can weaken the above argument?\nweakens(ecosystem_damage) == True ::: (A) Ships crossing the Arctic will bring invading creatures and destroy the Arctic ecosystem\nweakens(international_conflict) == False ::: (B) The international community has experienced many serious conflicts due to Arctic development issues, but the countries concerned have calmly shelved or dealt with low-key\nweakens(greenhouse_gas_release) == True ::: (C) Exploitation of the Arctic will melt permafrost and release methane, a greenhouse gas, resulting in increased extreme weather\nweakens(sea_level_rise) == True ::: (D) Exploiting the Arctic will accelerate the melting of ice and snow, causing sea levels to rise and flooding coastal lowlands"
    ]
  },
  {
    "id": 484,
    "context": "Dumping' is defined as the act of selling such commodities in another country at a price lower than the production cost of the commodities.The prawn producers in country H are selling prawns in country M at a price lower than the production cost of the river prawns in country M.Therefore, shrimp producers in country H are dumping shrimp in country M.",
    "question": "Which of the following is necessary to evaluate the dumping behavior mentioned above?",
    "answer": "A",
    "options": [
      "A.'Production cost' in the definition of dumping refers to the production cost of the origin of the commodity or the production cost of similar commodities in the place of sale",
      "B.If country H has been selling shrimp in country M at a price lower than the production cost of shrimp in country M, the shrimp industry in country M will go bankrupt",
      "C.The experts reached a consensus on whether the dumping behavior is harmful or beneficial to the economies of the two countries, or whether it is harmful or beneficial to only one of them",
      "D.Due to the different methods of calculating the production cost of commodities, it is difficult to obtain accurate comparison values â€‹â€‹of the production costs of the same commodity in different countries"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([H, M])\ncommodities = EnumSort([prawns])\ncosts = Function([countries, commodities] -> [float])\nselling_price = Function([countries, commodities] -> [float])\n\n# Constraints\nselling_price(H, prawns) < costs(M, prawns) ::: The prawn producers in country H are selling prawns in country M at a price lower than the production cost of the river prawns in country M\n\n# Options\nQuestion ::: Which of the following is necessary to evaluate the dumping behavior mentioned above?\nis_necessary(ForAll([c:commodities], Or(costs(H, c) == costs(M, c), costs(H, c) != costs(M, c)))) ::: (A)\nis_necessary(Implies(selling_price(H, prawns) < costs(M, prawns), bankrupt(M, prawns))) ::: (B)\nis_necessary(Exists([e:experts], consensus(e, harmful(H, M)) Or consensus(e, beneficial(H, M)))) ::: (C)\nis_necessary(Exists([m:methods], difficulty_in_comparison(m, costs(H, prawns), costs(M, prawns)))) ::: (D)"
    ]
  },
  {
    "id": 485,
    "context": "Because the conclusion of quantum theory violates intuition, some scientists have different views on this theory.Although they try to strictly indicate that the assertion of quantum theory is inaccurate (that is, try to strictly falsify it), they find that the error lies in Usually within the acceptable statistical range.These results of quantum theory are different from those of competing theories, which makes it reasonable to accept quantum theory.",
    "question": "Which of the following principles is most helpful to show the rationality of the above reasoning?",
    "answer": "D",
    "options": [
      "A.A theory should not be considered reasonable before it is tried to strictly falsify",
      "B.Only if the assertion of a theory has not been falsified by experiments can this theory be accepted.",
      "C.If a scientific theory violates intuitive conclusions less than competing theories, then it should be accepted",
      "D.If you try to strictly falsify a theory, but the theory has withstood all the tests, then you should accept it"
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([quantum_theory, competing_theory])\ntests = EnumSort([falsification_attempts])\nresults = Function([theories, tests] -> [bool])\n\n# Constraints\nForAll([t:tests], results(quantum_theory, t) == True) ::: Quantum theory withstands all falsification attempts\nExists([t:tests], results(competing_theory, t) == False) ::: Competing theories do not withstand all falsification attempts\n\n# Options\nQuestion ::: Which of the following principles is most helpful to show the rationality of the above reasoning?\nis_helpful(ForAll([t:tests], Implies(results(quantum_theory, t) == True, Accept(quantum_theory)))) ::: (A)\nis_helpful(ForAll([t:tests], Implies(Not(results(quantum_theory, t)), Not(Accept(quantum_theory))))) ::: (B)\nis_helpful(ForAll([t:tests], Implies(results(quantum_theory, t) == True, Accept(quantum_theory)))) ::: (C)\nis_helpful(ForAll([t:tests], Implies(results(quantum_theory, t) == True, Accept(quantum_theory)))) ::: (D)"
    ]
  },
  {
    "id": 486,
    "context": "Homo erectus originated in Africa about 2 million years ago and spread to Eurasia; modern people appeared about 200,000 years ago.Both human fossils are distributed in China.For example, the 'Beijing people' unearthed in the ancient stratum of Zhoukoudian, Beijing belonged to Homo erectus; the 'shandingdong people' in the stratum of the previous year belonged to modern people.A study of the contemporary Chinese population found that the Y chromosome inherited from the paternal lineage originated in Africa and originated in 8.9 10,000 years to 35,000 years ago; the mitochondrial DNA inherited from the maternal line originated in Africa, with a time of origin within 100,000 years; no genetic component of H.erectus was detected",
    "question": "If the above statement is true, which hypothesis is best supported?",
    "answer": "A",
    "options": [
      "A.The descendants of 'Beijing people' may be extinct.The ancestors of Chinese contemporary people came to Asia from Africa about 100,000 years ago",
      "B.Chinese Homo erectus and modern people are from the African continent, and their hybrid descendants are the ancestors of contemporary Chinese",
      "C.The 'Stop Cave Man' in Zhoukoudian, Beijing evolved from 'Beijing People'",
      "D.Contemporary Chinese are descendants of Homo erectus that spread from Africa to Eurasia 2 million years ago"
    ],
    "raw_logic_programs": [
      "# Declarations\nspecies = EnumSort([homo_erectus, modern_humans])\nregions = EnumSort([africa, eurasia, china])\nfossils = EnumSort([beijing_people, shandingdong_people])\ngenetic_components = EnumSort([y_chromosome, mitochondrial_dna])\norigin_time = Function([genetic_components] -> [int])\norigin_region = Function([genetic_components] -> [regions])\ndescendants = Function([fossils] -> [species])\n\n# Constraints\ndescendants(beijing_people) == homo_erectus ::: 'Beijing people' belonged to Homo erectus\ndescendants(shandingdong_people) == modern_humans ::: 'Shandingdong people' belonged to modern humans\norigin_region(y_chromosome) == africa ::: Y chromosome originated in Africa\norigin_time(y_chromosome) >= 89000 ::: Y chromosome originated 8.9 10,000 years ago\norigin_time(y_chromosome) <= 35000 ::: Y chromosome originated 35,000 years ago\norigin_region(mitochondrial_dna) == africa ::: Mitochondrial DNA originated in Africa\norigin_time(mitochondrial_dna) <= 100000 ::: Mitochondrial DNA originated within 100,000 years\nNot(Exists([c:genetic_components], origin_region(c) == china)) ::: No genetic component of H. erectus was detected\n\n# Options\nQuestion ::: If the above statement is true, which hypothesis is best supported?\nis_supported(And(Not(Exists([d:descendants], d == beijing_people)), origin_time(mitochondrial_dna) <= 100000)) ::: (A)\nis_supported(And(Exists([d:descendants], d == beijing_people), Exists([d:descendants], d == shandingdong_people))) ::: (B)\nis_supported(Exists([d:descendants], d == beijing_people)) ::: (C)\nis_supported(Exists([d:descendants], d == homo_erectus)) ::: (D)"
    ]
  },
  {
    "id": 487,
    "context": "Huan Gong? 'Why do few people read the dross of the ancients?' Lu Pian? 'According to my experience, when the wheels are made, the wheel holes are slightly larger and loose and not firm, and when they are small, they are difficult to enter.If you want to do something that is not too big, not too loose, you have to give it to your heart and give it to your hand.There is superb technology in it, but it ca n't be conveyed in words, I ca n't teach my son, so, I When you are seventy years old, you have to take a turn.The ancients are dead, and the essence they ca n't tell is also followed by hours.Then what you are reading is the dross of the ancients.'",
    "question": "Which of the following statements is the hypothesis on which Lu Bian 's argument relies?",
    "answer": "D",
    "options": [
      "A.In addition to the essence and dross, there are other contents worth reading",
      "B.If the essence cannot be spoken, reading is not only useless but harmful",
      "C.Superb technology cannot be taught to others through language",
      "D.In addition to superb technology, other essences are also unspeakable"
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nhypothesis = Function([statements] -> [bool])\n\n# Constraints\n# The argument relies on the idea that certain knowledge or skills cannot be effectively communicated through words alone.\nhypothesis(C) ::: Superb technology cannot be taught to others through language\n\n# Options\nQuestion ::: Which of the following statements is the hypothesis on which Lu Bian's argument relies?\nis_true(hypothesis(A)) ::: (A)\nis_true(hypothesis(B)) ::: (B)\nis_true(hypothesis(C)) ::: (C)\nis_true(hypothesis(D)) ::: (D)"
    ]
  },
  {
    "id": 488,
    "context": "In a cooking competition, the chef is required to make one hot dish and one cold dish, and the results are evaluated as 'top grade', 'middle grade', and 'bottom grade'.If each result of the chef is not lower than that of Chef B, and at least one item is higher than Chef B, it is said that 'Chef A is more skilled than Chef B'.There are a number of existing chefs, none of them is more skilled than the other, and no two people have the same hot dishes and cold dishes.",
    "question": "How many chefs can meet the above conditions?",
    "answer": "D",
    "options": [
      "A.unconfirmed",
      "B.9 people",
      "C.6 people",
      "D.3 people"
    ],
    "raw_logic_programs": [
      "# Declarations\nchefs = EnumSort([ChefA, ChefB, ChefC, ChefD, ChefE, ChefF, ChefG, ChefH, ChefI])\ndishes = EnumSort([hot, cold])\ngrades = EnumSort([top_grade, middle_grade, bottom_grade])\nresults = Function([chefs, dishes] -> [grades])\n\n# Constraints\nForAll([c1:chefs, c2:chefs], Implies(c1 != c2, Or(results(c1, hot) != results(c2, hot), results(c1, cold) != results(c2, cold)))) ::: no two people have the same hot dishes and cold dishes\nForAll([c1:chefs, c2:chefs], Not(And(ForAll([d:dishes], results(c1, d) >= results(c2, d)), Exists([d:dishes], results(c1, d) > results(c2, d))))) ::: none of them is more skilled than the other\n\n# Options\nQuestion ::: How many chefs can meet the above conditions?\nis_valid(Count([c:chefs], True) == 0) ::: (A)\nis_valid(Count([c:chefs], True) == 9) ::: (B)\nis_valid(Count([c:chefs], True) == 6) ::: (C)\nis_valid(Count([c:chefs], True) == 3) ::: (D)"
    ]
  },
  {
    "id": 489,
    "context": "A fuel-efficient car of a certain brand sells for 270,000 yuan, while another ordinary one costs 170,000 yuan.According to the current gasoline prices and the test data of the fuel consumption of the two cars for 100 kilometers, people who buy this fuel-efficient car need to be at least 300,000 kilometers to make up for the higher price difference than buying ordinary cars.If the price of oil rises in the future, the mileage required to make up for the purchase price will increase accordingly.",
    "question": "Which of the following statements most pointed out the shortcomings of the above argument?",
    "answer": "A",
    "options": [
      "A.Arguments and conclusions are contradictory",
      "B.The argument cannot fully support its conclusion",
      "C.The argument does not consider the possibility of future oil price reduction",
      "D.The argument uses unproven assumptions as an argument"
    ],
    "raw_logic_programs": [
      "# Declarations\ncars = EnumSort([fuel_efficient, ordinary])\nprice = Function([cars] -> [int])\nmileage = Function([cars] -> [int])\noil_price = Function([] -> [int])\n\n# Constraints\nprice(fuel_efficient) == 270000 ::: A fuel-efficient car of a certain brand sells for 270,000 yuan\nprice(ordinary) == 170000 ::: An ordinary one costs 170,000 yuan\nmileage(fuel_efficient) >= 300000 ::: People who buy this fuel-efficient car need to be at least 300,000 kilometers to make up for the higher price difference\nForAll([o:oil_price], Implies(o > 0, mileage(fuel_efficient) > 300000)) ::: If the price of oil rises, the mileage required to make up for the purchase price will increase\n\n# Options\nQuestion ::: Which of the following statements most pointed out the shortcomings of the above argument?\nis_valid(And(price(fuel_efficient) > price(ordinary), mileage(fuel_efficient) < mileage(ordinary))) ::: (A) Arguments and conclusions are contradictory\nis_valid(Implies(price(fuel_efficient) > price(ordinary), mileage(fuel_efficient) >= 300000)) ::: (B) The argument cannot fully support its conclusion\nis_valid(Implies(oil_price() < 0, mileage(fuel_efficient) < 300000)) ::: (C) The argument does not consider the possibility of future oil price reduction\nis_valid(Exists([o:oil_price], o == 0)) ::: (D) The argument uses unproven assumptions as an argument"
    ]
  },
  {
    "id": 490,
    "context": "In the era of the Internet with complicated information, everyone is always at risk of being deceived, entrapped, and manipulated by others' opinions.If you don't want to be always at the mercy of others, if you don't want to spend a lifetime in chaos, if you want to learn to think independently and make rational decisions, then you must arm your mind with critical thinking.",
    "question": "If the above statement is true, which of the following statements is not necessarily true?",
    "answer": "C",
    "options": [
      "A.People who cannot arm their minds with critical thinking cannot learn to think independently and make rational decisions.",
      "B.You either choose to arm your mind with critical thinking, or choose to spend a lifetime in chaos.",
      "C.People who do not want to learn to think independently and make rational decisions need not arm their minds with critical thinking.",
      "D.Only those who are armed with critical thinking can get rid of the fate dictated by others."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person])\nactions = EnumSort([arm_mind, think_independently, make_rational_decisions, spend_lifetime_in_chaos, at_mercy_of_others])\ndoes = Function([people, actions] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(Not(does(p, arm_mind)), And(Not(does(p, think_independently)), Not(does(p, make_rational_decisions))))) ::: If you don't arm your mind with critical thinking, you cannot learn to think independently and make rational decisions\nForAll([p:people], Implies(Not(does(p, arm_mind)), does(p, spend_lifetime_in_chaos))) ::: If you don't arm your mind with critical thinking, you spend a lifetime in chaos\nForAll([p:people], Implies(Not(does(p, arm_mind)), does(p, at_mercy_of_others))) ::: If you don't arm your mind with critical thinking, you are at the mercy of others\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements is not necessarily true?\nis_not_necessarily_true(ForAll([p:people], Implies(Not(does(p, arm_mind)), And(Not(does(p, think_independently)), Not(does(p, make_rational_decisions)))))) ::: (A)\nis_not_necessarily_true(ForAll([p:people], Or(does(p, arm_mind), does(p, spend_lifetime_in_chaos)))) ::: (B)\nis_not_necessarily_true(ForAll([p:people], Implies(Not(does(p, think_independently)), Not(does(p, arm_mind))))) ::: (C)\nis_not_necessarily_true(ForAll([p:people], Implies(Not(does(p, at_mercy_of_others)), does(p, arm_mind)))) ::: (D)"
    ]
  },
  {
    "id": 491,
    "context": "A unit arranges for 6 people on duty on the first day, second day, third day of the new year.They are G., H, K, L, P, and S.Two people are required per day.The personnel arrangement must meet the following conditions? (1) L and P must be on duty on the same day.(2) G and H cannot be on duty on the same day.(3) If K is on the first day of duty, then G is on the second day of duty.(4 ) If S is on the third day of duty, then H is on the second day of duty.",
    "question": "Which of the following can be a complete and accurate arrangement of the duty dates of these people?",
    "answer": "B",
    "options": [
      "A.Junior One? L and P? Junior Two? G and K? Junior Three H and S",
      "B.First day? L and P? second day? H and K? third day G and S",
      "C.Junior One? G and K? Junior Two? L and P? Junior Three H and S",
      "D.Junior One? K and S? Junior Two? G and H? Junior Three L and P"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([G, H, K, L, P, S])\ndays = EnumSort([first_day, second_day, third_day])\non_duty = Function([days] -> [Set(people)])\n\n# Constraints\nExists([d:days], And(L in on_duty(d), P in on_duty(d))) ::: L and P must be on duty on the same day\nForAll([d:days], Not(And(G in on_duty(d), H in on_duty(d)))) ::: G and H cannot be on duty on the same day\nImplies(K in on_duty(first_day), G in on_duty(second_day)) ::: If K is on the first day of duty, then G is on the second day of duty\nImplies(S in on_duty(third_day), H in on_duty(second_day)) ::: If S is on the third day of duty, then H is on the second day of duty\n\n# Options\nQuestion ::: Which of the following can be a complete and accurate arrangement of the duty dates of these people?\nis_valid(And(on_duty(first_day) == {L, P}, on_duty(second_day) == {G, K}, on_duty(third_day) == {H, S})) ::: (A)\nis_valid(And(on_duty(first_day) == {L, P}, on_duty(second_day) == {H, K}, on_duty(third_day) == {G, S})) ::: (B)\nis_valid(And(on_duty(first_day) == {G, K}, on_duty(second_day) == {L, P}, on_duty(third_day) == {H, S})) ::: (C)\nis_valid(And(on_duty(first_day) == {K, S}, on_duty(second_day) == {G, H}, on_duty(third_day) == {L, P})) ::: (D)"
    ]
  },
  {
    "id": 492,
    "context": "A unit arranges for 6 people on duty on the first day, second day, third day of the new year.They are G., H, K, L, P, and S.Two people are required per day.The personnel arrangement must meet the following conditions? (1) L and P must be on duty on the same day.(2) G and H cannot be on duty on the same day.(3) If K is on the first day of duty, then G is on the second day of duty.) If S is on the third day of duty, then H is on the second day of duty.",
    "question": "Which of the following must be true?",
    "answer": "C",
    "options": [
      "A.G and S are on duty on the same day",
      "B.S and H are not on the same day",
      "C.K and S are not on duty on the same day",
      "D.K and G are not on the same day"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\npeople = EnumSort([G, H, K, L, P, S])\ndays = EnumSort([first_day, second_day, third_day])\non_duty = Function([people] -> [days])\n\n# Constraints\nExists([d:days], And(on_duty(L) == d, on_duty(P) == d)) ::: L and P must be on duty on the same day\nForAll([d:days], Not(And(on_duty(G) == d, on_duty(H) == d))) ::: G and H cannot be on duty on the same day\nImplies(on_duty(K) == first_day, on_duty(G) == second_day) ::: If K is on the first day of duty, then G is on the second day of duty\nImplies(on_duty(S) == third_day, on_duty(H) == second_day) ::: If S is on the third day of duty, then H is on the second day of duty\n\n# Options\nQuestion ::: Which of the following must be true?\nis_must_true(Exists([d:days], And(on_duty(G) == d, on_duty(S) == d))) ::: (A) G and S are on duty on the same day\nis_must_true(Not(Exists([d:days], And(on_duty(S) == d, on_duty(H) == d)))) ::: (B) S and H are not on the same day\nis_must_true(Not(Exists([d:days], And(on_duty(K) == d, on_duty(S) == d)))) ::: (C) K and S are not on duty on the same day\nis_must_true(Not(Exists([d:days], And(on_duty(K) == d, on_duty(G) == d)))) ::: (D) K and G are not on the same day\n```"
    ]
  },
  {
    "id": 493,
    "context": "A unit arranges for 6 people on duty on the first day, second day, third day of the new year.They are G., H, K, L, P, and S.Two people are required per day.The personnel arrangement must meet the following conditions? (1) L and P must be on duty on the same day.(2) G and H cannot be on duty on the same day.(3) If K is on the first day of duty, then G is on the second day of duty.) If S is on the third day of duty, then H is on the second day of duty.",
    "question": "If P is on duty in the second day, which of the following can be true?",
    "answer": "D",
    "options": [
      "A.S on duty in the third day",
      "B.H is on duty in the second day",
      "C.K on duty in the first day",
      "D.G on duty at the first day"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([G, H, K, L, P, S])\ndays = EnumSort([first_day, second_day, third_day])\non_duty = Function([people] -> [days])\n\n# Constraints\nExists([d:days], And(on_duty(L) == d, on_duty(P) == d)) ::: L and P must be on duty on the same day\nForAll([d:days], Not(And(on_duty(G) == d, on_duty(H) == d))) ::: G and H cannot be on duty on the same day\nImplies(on_duty(K) == first_day, on_duty(G) == second_day) ::: If K is on the first day of duty, then G is on the second day of duty\nImplies(on_duty(S) == third_day, on_duty(H) == second_day) ::: If S is on the third day of duty, then H is on the second day of duty\non_duty(P) == second_day ::: P is on duty on the second day\n\n# Options\nQuestion ::: If P is on duty on the second day, which of the following can be true?\nis_sat(on_duty(S) == third_day) ::: (A) S on duty in the third day\nis_sat(on_duty(H) == second_day) ::: (B) H is on duty in the second day\nis_sat(on_duty(K) == first_day) ::: (C) K on duty in the first day\nis_sat(on_duty(G) == first_day) ::: (D) G on duty at the first day"
    ]
  },
  {
    "id": 494,
    "context": "A unit arranges for 6 people on duty on the first day, second day, third day of the new year.They are G., H, K, L, P, and S.Two people are required per day.The personnel arrangement must meet the following conditions? (1) L and P must be on duty on the same day.(2) G and H cannot be on duty on the same day.(3) If K is on the first day of duty, then G is on the second day of duty.(4 ) If S is on the third day of duty, then H is on the second day of duty.",
    "question": "If H is on duty the same day before S, which of the following must be true?",
    "answer": "A",
    "options": [
      "A.G on the second day of duty",
      "B.P on duty in the second day",
      "C.K on duty in the first day",
      "D.H on duty at the first day"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([G, H, K, L, P, S])\ndays = EnumSort([first_day, second_day, third_day])\non_duty = Function([people] -> [days])\n\n# Constraints\nExists([d:days], And(on_duty(L) == d, on_duty(P) == d)) ::: L and P must be on duty on the same day\nForAll([d:days], Not(And(on_duty(G) == d, on_duty(H) == d))) ::: G and H cannot be on duty on the same day\nImplies(on_duty(K) == first_day, on_duty(G) == second_day) ::: If K is on the first day of duty, then G is on the second day of duty\nImplies(on_duty(S) == third_day, on_duty(H) == second_day) ::: If S is on the third day of duty, then H is on the second day of duty\nExists([d1:days, d2:days], And(on_duty(H) == d1, on_duty(S) == d2, d1 < d2)) ::: H is on duty the same day before S\n\n# Options\nQuestion ::: If H is on duty the same day before S, which of the following must be true?\nis_must_true(on_duty(G) == second_day) ::: (A) G on the second day of duty\nis_must_true(on_duty(P) == second_day) ::: (B) P on duty in the second day\nis_must_true(on_duty(K) == first_day) ::: (C) K on duty in the first day\nis_must_true(on_duty(H) == first_day) ::: (D) H on duty at the first day"
    ]
  },
  {
    "id": 495,
    "context": "After all the cold dishes at the banquet at one table were served, there were 7 hot dishes.Among them, three Sichuan dishes? K, L, M? three Cantonese dishes? Q, N, P? one Shandong dish? X.Only one hot dish can be served at a time, and the order of serving must meet the following conditions? (1) Cannot serve Sichuan cuisine or Cantonese cuisine continuously.(2) Unless the second is on Q, P cannot be on before Q.(3) P must be on before X.(4) M must be on before K, and K must be on before N.",
    "question": "The following lists the order of serving from the first to the seventh, which one meets the conditions?",
    "answer": "A",
    "options": [
      "A.Q, M, P, L, X, K, N",
      "B.Q, M, X, P, K, N, L",
      "C.L, P, M, Q, X, K, N",
      "D.M, Q, K, L, P, X, N"
    ],
    "raw_logic_programs": [
      "# Declarations\ndishes = EnumSort([K, L, M, Q, N, P, X])\ncuisines = EnumSort([Sichuan, Cantonese, Shandong])\nserved = Function([dishes] -> [int])\ncuisine_type = Function([dishes] -> [cuisines])\n\n# Constraints\nForAll([d:dishes], And(1 <= served(d), served(d) <= 7)) ::: Each dish is served exactly once\nDistinct([d:dishes], served(d)) ::: Only one hot dish can be served at a time\n\n# Assign cuisine types\nAnd(cuisine_type(K) == Sichuan, cuisine_type(L) == Sichuan, cuisine_type(M) == Sichuan) ::: Sichuan dishes\nAnd(cuisine_type(Q) == Cantonese, cuisine_type(N) == Cantonese, cuisine_type(P) == Cantonese) ::: Cantonese dishes\ncuisine_type(X) == Shandong ::: Shandong dish\n\n# Constraints on serving order\nForAll([i:1..6], Implies(And(cuisine_type(dishes[i]) == Sichuan, cuisine_type(dishes[i+1]) == Sichuan), False)) ::: Cannot serve Sichuan cuisine continuously\nForAll([i:1..6], Implies(And(cuisine_type(dishes[i]) == Cantonese, cuisine_type(dishes[i+1]) == Cantonese), False)) ::: Cannot serve Cantonese cuisine continuously\nImplies(served(P) < served(Q), served(Q) == 2) ::: Unless the second is on Q, P cannot be on before Q\nserved(P) < served(X) ::: P must be on before X\nserved(M) < served(K) ::: M must be on before K\nserved(K) < served(N) ::: K must be on before N\n\n# Options\nQuestion ::: The following lists the order of serving from the first to the seventh, which one meets the conditions?\nis_valid_order([served(Q) == 1, served(M) == 2, served(P) == 3, served(L) == 4, served(X) == 5, served(K) == 6, served(N) == 7]) ::: (A)\nis_valid_order([served(Q) == 1, served(M) == 2, served(X) == 3, served(P) == 4, served(K) == 5, served(N) == 6, served(L) == 7]) ::: (B)\nis_valid_order([served(L) == 1, served(P) == 2, served(M) == 3, served(Q) == 4, served(X) == 5, served(K) == 6, served(N) == 7]) ::: (C)\nis_valid_order([served(M) == 1, served(Q) == 2, served(K) == 3, served(L) == 4, served(P) == 5, served(X) == 6, served(N) == 7]) ::: (D)"
    ]
  },
  {
    "id": 496,
    "context": "After all the cold dishes at the banquet at one table were served, there were 7 hot dishes.Among them, three Sichuan dishes? K, L, M? three Cantonese dishes? Q, N, P? one Shandong dish? X.Only one hot dish can be served at a time, and the order of serving must meet the following conditions? (1) Cannot serve Sichuan cuisine or Cantonese cuisine continuously.(2) Unless the second is on Q, P cannot be on before Q.(3) P must be on before X.(4) M must be on before K, and K must be on before N.",
    "question": "If the fourth goes to X, which of the following statements must be true?",
    "answer": "C",
    "options": [
      "A.First on Q",
      "B.The third on Q",
      "C.The second on M",
      "D.The third on M"
    ],
    "raw_logic_programs": [
      "# Declarations\ndishes = EnumSort([K, L, M, Q, N, P, X])\ncuisines = EnumSort([Sichuan, Cantonese, Shandong])\nserved = Function([dishes] -> [int])\nForAll([d:dishes], And(1 <= served(d), served(d) <= 7))\n\n# Constraints\nDistinct([d:dishes], served(d)) ::: Only one hot dish can be served at a time\nForAll([d1:dishes, d2:dishes], Implies(And(served(d1) + 1 == served(d2), Or(d1 in [K, L, M], d2 in [K, L, M])), Not(d2 in [Q, N, P]))) ::: Cannot serve Sichuan cuisine or Cantonese cuisine continuously\nImplies(served(P) < served(Q), served(Q) == 2) ::: Unless the second is on Q, P cannot be on before Q\nserved(P) < served(X) ::: P must be on before X\nserved(M) < served(K) ::: M must be on before K\nserved(K) < served(N) ::: K must be on before N\nserved(X) == 4 ::: If the fourth goes to X\n\n# Options\nQuestion ::: If the fourth goes to X, which of the following statements must be true?\nis_true(served(Q) == 1) ::: (A) First on Q\nis_true(served(Q) == 3) ::: (B) The third on Q\nis_true(served(M) == 2) ::: (C) The second on M\nis_true(served(M) == 3) ::: (D) The third on M"
    ]
  },
  {
    "id": 497,
    "context": "After all the cold dishes at the banquet at one table were served, there were 7 hot dishes.Among them, three Sichuan dishes? K, L, M? three Cantonese dishes? Q, N, P? one Shandong dish? X.Only one hot dish can be served at a time, and the order of serving must meet the following conditions? (1) Cannot serve Sichuan cuisine or Cantonese cuisine continuously.(2) Unless the second is on Q, P cannot be on before Q.(3) P must be on before X.(4) M must be on before K, and K must be on before N.",
    "question": "If the fourth is K, which of the following statements may be true?",
    "answer": "B",
    "options": [
      "A.Fifth on P",
      "B.Sixth on X",
      "C.Fifth on L",
      "D.First on M"
    ],
    "raw_logic_programs": [
      "# Declarations\ndishes = EnumSort([K, L, M, Q, N, P, X])\norder = Function([dishes] -> [int])\nForAll([d:dishes], And(1 <= order(d), order(d) <= 7))\n\n# Constraints\nDistinct([d:dishes], order(d)) ::: Only one hot dish can be served at a time\nForAll([d1:dishes, d2:dishes], Implies(And(d1 in [K, L, M], d2 in [K, L, M]), Abs(order(d1) - order(d2)) > 1)) ::: Cannot serve Sichuan cuisine continuously\nForAll([d1:dishes, d2:dishes], Implies(And(d1 in [Q, N, P], d2 in [Q, N, P]), Abs(order(d1) - order(d2)) > 1)) ::: Cannot serve Cantonese cuisine continuously\nImplies(order(P) < order(Q), order(Q) == 2) ::: Unless the second is on Q, P cannot be on before Q\norder(P) < order(X) ::: P must be on before X\norder(M) < order(K) ::: M must be on before K\norder(K) < order(N) ::: K must be on before N\norder(K) == 4 ::: If the fourth is K\n\n# Options\nQuestion ::: If the fourth is K, which of the following statements may be true?\nis_sat(order(P) == 5) ::: (A) Fifth on P\nis_sat(order(X) == 6) ::: (B) Sixth on X\nis_sat(order(L) == 5) ::: (C) Fifth on L\nis_sat(order(M) == 1) ::: (D) First on M"
    ]
  },
  {
    "id": 498,
    "context": "After all the cold dishes at the banquet at one table were served, there were 7 hot dishes.Among them, three Sichuan dishes? K, L, M? three Cantonese dishes? Q, N, P? one Shandong dish? X.Only one hot dish can be served at a time, and the order of serving must meet the following conditions? (1) Cannot serve Sichuan cuisine or Cantonese cuisine continuously.(2) Unless the second is on Q, P cannot be on before Q.(3) P must be on before X.(4) M must be on before K, and K must be on before N.",
    "question": "Which of the following may be true?",
    "answer": "D",
    "options": [
      "A.The second on P",
      "B.The third on N",
      "C.The second on K",
      "D.Second on L"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\ndishes = EnumSort([K, L, M, Q, N, P, X])\norder = Function([dishes] -> [int])\nForAll([d:dishes], And(1 <= order(d), order(d) <= 7))\n\n# Constraints\nForAll([d1:dishes, d2:dishes], Implies(And(order(d1) == order(d2)), d1 == d2)) ::: Only one hot dish can be served at a time\nForAll([d1:dishes, d2:dishes], Implies(And(order(d1) + 1 == order(d2)), Not(And(d1 in [K, L, M], d2 in [Q, N, P])))) ::: Cannot serve Sichuan cuisine or Cantonese cuisine continuously\nImplies(order(P) < order(Q), order(Q) == 2) ::: Unless the second is on Q, P cannot be on before Q\norder(P) < order(X) ::: P must be on before X\norder(M) < order(K) ::: M must be on before K\norder(K) < order(N) ::: K must be on before N\n\n# Options\nQuestion ::: Which of the following may be true?\nis_sat(order(P) == 2) ::: (A)\nis_sat(order(N) == 3) ::: (B)\nis_sat(order(K) == 2) ::: (C)\nis_sat(order(L) == 2) ::: (D)\n```"
    ]
  },
  {
    "id": 499,
    "context": "After all the cold dishes at the banquet at one table were served, there were 7 hot dishes.Among them, three Sichuan dishes? K, L, M? three Cantonese dishes? Q, N, P? one Shandong dish? X.Only one hot dish can be served at a time, and the order of serving must meet the following conditions? (1) Cannot serve Sichuan cuisine or Cantonese cuisine continuously.(2) Unless the second is on Q, P cannot be on before Q.(3) P must be on before X.(4) M must be on before K, and K must be on before N.",
    "question": "If the third is M, which of the following statements may be true?",
    "answer": "A",
    "options": [
      "A.Fifth on X",
      "B.First on Q",
      "C.Sixth on L",
      "D.Fourth on K"
    ],
    "raw_logic_programs": [
      "# Declarations\ndishes = EnumSort([K, L, M, Q, N, P, X])\ncuisines = EnumSort([Sichuan, Cantonese, Shandong])\nserved = Function([dishes] -> [int])\ndish_cuisine = Function([dishes] -> [cuisines])\n\n# Constraints\nForAll([d:dishes], And(1 <= served(d), served(d) <= 7)) ::: Only one hot dish can be served at a time\nDistinct([d:dishes], served(d)) ::: No two dishes can be served at the same time\nForAll([d1:dishes, d2:dishes], Implies(And(dish_cuisine(d1) == Sichuan, dish_cuisine(d2) == Sichuan), Abs(served(d1) - served(d2)) > 1)) ::: Cannot serve Sichuan cuisine continuously\nForAll([d1:dishes, d2:dishes], Implies(And(dish_cuisine(d1) == Cantonese, dish_cuisine(d2) == Cantonese), Abs(served(d1) - served(d2)) > 1)) ::: Cannot serve Cantonese cuisine continuously\nImplies(served(P) < served(Q), served(Q) == 2) ::: Unless the second is on Q, P cannot be on before Q\nserved(P) < served(X) ::: P must be on before X\nserved(M) < served(K) ::: M must be on before K\nserved(K) < served(N) ::: K must be on before N\nserved(M) == 3 ::: If the third is M\n\n# Options\nQuestion ::: If the third is M, which of the following statements may be true?\nis_sat(served(X) == 5) ::: (A) Fifth on X\nis_sat(served(Q) == 1) ::: (B) First on Q\nis_sat(served(L) == 6) ::: (C) Sixth on L\nis_sat(served(K) == 4) ::: (D) Fourth on K"
    ]
  },
  {
    "id": 500,
    "context": "People may be divided into two categories? those with a little ambition and those without.For ordinary people, that little ambition is a firm motivation to pull themselves out of the ordinary life; without that little ambition, they can only be overwhelmed by the ordinary life slowly, without power or even ignorance.In an era of change, that little ambition may lead to magnificent results.",
    "question": "Which of the following statements constitutes a refutation of the above view?",
    "answer": "C",
    "options": [
      "A.Liu Bei, who made straw shoes, never forgot that he was an uncle.Based on this, he was empty from two hands to one-third of the world.",
      "B.Although Zhang Xiong is aspiring, he is talented and uncommon.He has worked hard all his life, but nothing has happened, and he has been bruised.",
      "C.Liu Qin has no ambitions or special talents.With her natural beauty, she has done a lot of things with the help of nobles throughout her life.",
      "D.Sister Chrysanthemum is neither high-spirited nor beautiful, but she is very self-respecting and constantly tossing her life."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([ordinary, ambitious])\noutcomes = EnumSort([successful, unsuccessful])\ntraits = EnumSort([ambition, no_ambition, talent, no_talent, beauty, no_beauty, self_respect])\nhas_trait = Function([people] -> [traits])\nresult = Function([people] -> [outcomes])\n\n# Constraints\nForAll([p:people], Implies(has_trait(p) == ambition, result(p) == successful)) ::: For ordinary people, that little ambition is a firm motivation to pull themselves out of the ordinary life\nForAll([p:people], Implies(has_trait(p) == no_ambition, result(p) == unsuccessful)) ::: Without that little ambition, they can only be overwhelmed by the ordinary life slowly\n\n# Options\nQuestion ::: Which of the following statements constitutes a refutation of the above view?\nis_refutation(And(has_trait(ordinary) == ambition, result(ordinary) == unsuccessful)) ::: (A)\nis_refutation(And(has_trait(ambitious) == talent, result(ambitious) == unsuccessful)) ::: (B)\nis_refutation(And(has_trait(ordinary) == no_ambition, has_trait(ordinary) == beauty, result(ordinary) == successful)) ::: (C)\nis_refutation(And(has_trait(ordinary) == no_ambition, has_trait(ordinary) == self_respect, result(ordinary) == successful)) ::: (D)"
    ]
  },
  {
    "id": 501,
    "context": "On July 16, 2013, Snowden, the whistleblower of the US 'Prism Gate' incident, formally submitted an application for asylum to Russia.The United States has been hunting for Snowden.If Russia accepts Snowden's application, it will surely lead to the deterioration of Russia-US relations.However, there are high voices in Russia and other countries in the world that Snowden is a defender of the rights of the people of the world.If he refuses his application, Russia will suffer moral and national dignity.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.Russia does not want the Snowden incident to harm Russia-US relations.",
      "B.Russia will not give Snowden to the United States, but may send him to a third country.",
      "C.If Snowden's asylum application is accepted, Russia will not be compromised morally or nationally.",
      "D.If Russia does not want to worsen relations between Russia and the United States, it will suffer morally and national dignity."
    ],
    "raw_logic_programs": [
      "# Declarations\nrelations = EnumSort([deteriorate, maintain])\nmoral_dignity = EnumSort([compromised, not_compromised])\nasylum_decision = EnumSort([accept, refuse])\nsnowden_location = EnumSort([Russia, US, third_country])\n\n# Constraints\nImplies(asylum_decision == accept, relations == deteriorate) ::: If Russia accepts Snowden's application, it will surely lead to the deterioration of Russia-US relations\nImplies(asylum_decision == refuse, moral_dignity == compromised) ::: If he refuses his application, Russia will suffer moral and national dignity\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(Implies(relations == maintain, asylum_decision == refuse)) ::: (A) Russia does not want the Snowden incident to harm Russia-US relations.\nis_must_true(And(snowden_location != US, Or(snowden_location == Russia, snowden_location == third_country))) ::: (B) Russia will not give Snowden to the United States, but may send him to a third country.\nis_must_true(Implies(asylum_decision == accept, moral_dignity == not_compromised)) ::: (C) If Snowden's asylum application is accepted, Russia will not be compromised morally or nationally.\nis_must_true(Implies(relations == maintain, moral_dignity == compromised)) ::: (D) If Russia does not want to worsen relations between Russia and the United States, it will suffer morally and national dignity."
    ]
  },
  {
    "id": 502,
    "context": "The certification conditions for organic vegetables in Japan are very harsh, requiring that the land where organic vegetables are grown have not used any pesticides or fertilizers within 3 years.The selling price of Japanese organic vegetables is only 20% -30% higher than ordinary vegetables.In China, the price of organic vegetables is several times or even 10 times that of ordinary vegetables.This shows that China's organic vegetable cultivation industry is a huge profit industry.",
    "question": "Which of the following statements is the above conclusion needs to be assumed?",
    "answer": "C",
    "options": [
      "A.The price of ordinary vegetables in Japan is not too high.",
      "B.Chinese people's general concerns about food safety have led to a shortage of organic vegetables.",
      "C.Chinese organic vegetables are no more expensive than Japanese organic vegetables.",
      "D.The price of ordinary vegetables in China is completely marketized, and the profit margin is normal"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([Japan, China])\nvegetable_types = EnumSort([organic, ordinary])\nprices = Function([countries, vegetable_types] -> [float])\n\n# Constraints\nprices(Japan, organic) > prices(Japan, ordinary) * 1.2 ::: The selling price of Japanese organic vegetables is only 20% -30% higher than ordinary vegetables\nprices(Japan, organic) <= prices(Japan, ordinary) * 1.3 ::: The selling price of Japanese organic vegetables is only 20% -30% higher than ordinary vegetables\nprices(China, organic) >= prices(China, ordinary) * 2 ::: The price of organic vegetables in China is several times or even 10 times that of ordinary vegetables\nprices(China, organic) <= prices(China, ordinary) * 10 ::: The price of organic vegetables in China is several times or even 10 times that of ordinary vegetables\n\n# Options\nQuestion ::: Which of the following statements is the above conclusion needs to be assumed?\nis_assumed(prices(Japan, ordinary) <= high_threshold) ::: (A)\nis_assumed(Exists([demand:float], demand > supply)) ::: (B)\nis_assumed(prices(China, organic) <= prices(Japan, organic)) ::: (C)\nis_assumed(marketized(prices(China, ordinary)) && normal_profit_margin(prices(China, ordinary))) ::: (D)"
    ]
  },
  {
    "id": 503,
    "context": "The article 'Essence of Great Medicine' comes from the first volume of 'Preparing for Thousands of Gold' written by Sun Simiao of the Tang Dynasty in China.This article discusses the qualities that a good doctor should have? First, it means that the doctor must have excellent medical skills;",
    "question": "The following statements can be logically derived from the above, except",
    "answer": "A",
    "options": [
      "A.People with superb medical skills are good doctors.",
      "B.A good doctor should have a noble character.",
      "C.No superb medical skills, noble character alone, and not a good doctor.",
      "D.Without noble character, you cannot be a good doctor."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nqualities = EnumSort([medical_skills, noble_character])\ngood_doctor = Function([qualities] -> [bool])\n\n# Constraints\ngood_doctor(medical_skills) ::: A good doctor must have excellent medical skills\n\n# Options\nQuestion ::: The following statements can be logically derived from the above, except\nis_exception(is_derived(Implies(good_doctor(medical_skills), good_doctor(noble_character)))) ::: (A)\nis_exception(is_derived(Implies(good_doctor(noble_character), good_doctor(medical_skills)))) ::: (B)\nis_exception(is_derived(Implies(Not(good_doctor(medical_skills)), Not(good_doctor(noble_character))))) ::: (C)\nis_exception(is_derived(Implies(Not(good_doctor(noble_character)), Not(good_doctor(medical_skills))))) ::: (D)"
    ]
  },
  {
    "id": 504,
    "context": "For a period of time, the so-called 'God Reply' of government officials has appeared one after another on the Internet, which has aroused public concern about the phenomenon of 'thunder words' by officials.According to media reports, a local official asked an expert 'finless finless porpoise'.When he received a 'not good' response, the official said, 'Why do you want to protect it?'",
    "question": "The following items are all implicit in the local official 's words, except",
    "answer": "D",
    "options": [
      "A.We only protect finless porpoises.",
      "B.If the finless porpoise is not tasty, we will not protect it.",
      "C.For animal protection, the first thing to consider is whether the protected animal is delicious.",
      "D.Whether or not the animal needs protection is irrelevant whether it is delicious."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nimplicit = Function([statements] -> [bool])\n\n# Constraints\n# The problem does not provide explicit constraints, but we can infer the following:\n# The official's response implies a focus on the taste of the animal as a criterion for protection.\n\n# Options\nQuestion ::: The following items are all implicit in the local official's words, except\nis_not_implicit(implicit(A)) ::: (A) We only protect finless porpoises.\nis_not_implicit(implicit(B)) ::: (B) If the finless porpoise is not tasty, we will not protect it.\nis_not_implicit(implicit(C)) ::: (C) For animal protection, the first thing to consider is whether the protected animal is delicious.\nis_not_implicit(implicit(D)) ::: (D) Whether or not the animal needs protection is irrelevant whether it is delicious."
    ]
  },
  {
    "id": 505,
    "context": "The Huang fish in Qinghai Lake is a delicious fish.In recent years, due to the deterioration of the natural environment and the overfishing of people, the number has greatly reduced and it has become a rare animal.All rare animals are animals that need protection.",
    "question": "If the above statement is true, the following statements must be true, except",
    "answer": "B",
    "options": [
      "A.Some rare animals are delicious fish.",
      "B.Some animals that need to be protected are not Huangyu of Qinghai Lake.",
      "C.Some delicious fish are animals that need protection.",
      "D.All the animals that do not need to be protected are not the yellowtail fish in Qinghai Lake."
    ],
    "raw_logic_programs": [
      "# Declarations\nanimals = EnumSort([Huang_fish, rare_animals, protected_animals, delicious_fish])\nis_rare = Function([animals] -> [bool])\nneeds_protection = Function([animals] -> [bool])\nis_delicious = Function([animals] -> [bool])\n\n# Constraints\nis_rare(Huang_fish) ::: The Huang fish is a rare animal\nForAll([a:animals], Implies(is_rare(a), needs_protection(a))) ::: All rare animals are animals that need protection\nis_delicious(Huang_fish) ::: The Huang fish is a delicious fish\n\n# Options\nQuestion ::: If the above statement is true, the following statements must be true, except\nis_exception(Exists([a:animals], And(is_rare(a), is_delicious(a)))) ::: (A) Some rare animals are delicious fish.\nis_exception(Exists([a:animals], And(needs_protection(a), Not(a == Huang_fish)))) ::: (B) Some animals that need to be protected are not Huangyu of Qinghai Lake.\nis_exception(Exists([a:animals], And(is_delicious(a), needs_protection(a)))) ::: (C) Some delicious fish are animals that need protection.\nis_exception(ForAll([a:animals], Implies(Not(needs_protection(a)), Not(a == Huang_fish)))) ::: (D) All the animals that do not need to be protected are not the yellowtail fish in Qinghai Lake."
    ]
  },
  {
    "id": 506,
    "context": "A famous painter recently said? I am old, but I am busy all day, and I have no time to think about death or thinking.Besides, if you die, you die, and it 's not just me who will die alone, nobody else will die.Li Bai is dead, Su Dongpo is dead, and Cao Xueqin is dead, too.It's just that future generations are reading their works.",
    "question": "From the painter's words, which of the following statements can only be logically derived?",
    "answer": "D",
    "options": [
      "A.Everyone except the painter will die.",
      "B.The painter will die.",
      "C.Not all people will not die.",
      "D.If the painter will die, at least some other people will die."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([painter, Li_Bai, Su_Dongpo, Cao_Xueqin, others])\nalive = Function([people] -> [bool])\n\n# Constraints\nNot(alive(Li_Bai)) ::: Li Bai is dead\nNot(alive(Su_Dongpo)) ::: Su Dongpo is dead\nNot(alive(Cao_Xueqin)) ::: Cao Xueqin is dead\n\n# Options\nQuestion ::: From the painter's words, which of the following statements can only be logically derived?\nis_derived(ForAll([p:people], Not(alive(p)) & (p != painter))) ::: (A) Everyone except the painter will die.\nis_derived(Not(alive(painter))) ::: (B) The painter will die.\nis_derived(Exists([p:people], Not(alive(p)))) ::: (C) Not all people will not die.\nis_derived(Implies(Not(alive(painter)), Exists([p:people], Not(alive(p))))) ::: (D) If the painter will die, at least some other people will die."
    ]
  },
  {
    "id": 507,
    "context": "Most of my open-minded friends have read a lot of books, but most of my non-open-minded friends are not.The more you read, the more likely you are to be challenged by new ideas, and your perseverance in your thoughts will be weakened, which makes sense.Reading also frees you from daily life and shows you the diversity and richness of life.Therefore, reading makes people open.",
    "question": "If the following statement is true, which one most strongly weakens the conclusion above?",
    "answer": "C",
    "options": [
      "A.Someone loves reading literary works, especially poems, and later writes poems by himself.Now he is a very famous poet.",
      "B.Some people have read a lot of books, and every time they read a book, it makes sense.Different reasons keep fighting in their heads, and they are almost crazy.",
      "C.If you only selectively read books of a certain type or opinion, it is likely that the more you read, the more paranoid.",
      "D.Some people like to put themselves in when they read.When they read 'Dream of Red Mansions', they feel that they are Lin Daiyu or Jia Baoyu."
    ],
    "raw_logic_programs": [
      "# Declarations\nfriends = EnumSort([open_minded, non_open_minded])\nreading_habits = EnumSort([read_a_lot, read_little])\neffects = EnumSort([challenged_by_ideas, not_challenged_by_ideas, open_mindedness_increased, open_mindedness_not_increased])\nreads = Function([friends] -> [reading_habits])\neffects_of_reading = Function([reading_habits] -> [effects])\n\n# Constraints\nForAll([f:friends], Implies(f == open_minded, reads(f) == read_a_lot)) ::: Most open-minded friends have read a lot of books\nForAll([f:friends], Implies(f == non_open_minded, reads(f) == read_little)) ::: Most non-open-minded friends have not read a lot of books\nForAll([r:reading_habits], Implies(r == read_a_lot, effects_of_reading(r) == challenged_by_ideas)) ::: The more you read, the more likely you are to be challenged by new ideas\nForAll([r:reading_habits], Implies(r == read_a_lot, effects_of_reading(r) == open_mindedness_increased)) ::: Reading makes people open\n\n# Options\nQuestion ::: If the following statement is true, which one most strongly weakens the conclusion above?\nweakens_conclusion(Implies(reads(someone) == read_a_lot, effects_of_reading(read_a_lot) == open_mindedness_increased)) ::: Conclusion: Reading makes people open\nis_strongest_weakening(Implies(reads(someone) == read_a_lot, effects_of_reading(read_a_lot) == not_challenged_by_ideas)) ::: (A)\nis_strongest_weakening(Implies(reads(someone) == read_a_lot, effects_of_reading(read_a_lot) == challenged_by_ideas)) ::: (B)\nis_strongest_weakening(Implies(reads(someone) == read_a_lot, effects_of_reading(read_a_lot) == open_mindedness_not_increased)) ::: (C)\nis_strongest_weakening(Implies(reads(someone) == read_a_lot, effects_of_reading(read_a_lot) == challenged_by_ideas)) ::: (D)"
    ]
  },
  {
    "id": 508,
    "context": "Dr.Melissa Moore of Stanford University in the United States? 'Oh My God? A Brief History of Swearing' talked about an interesting phenomenon? some patients with Alzheimer's disease or stroke have completely lost their language ability , Can still say a certain swear word repeatedly.This is confusing? aren't swear words talking?",
    "question": "If the following statement is true, which one best explains the above phenomenon?",
    "answer": "D",
    "options": [
      "A.Of the approximately 1 million English words, although only a dozen are swear words, they are used very frequently.",
      "B.Research by brain scientists confirmed that the human spirit can change the state of the body in a physiological sense.",
      "C.Swearing is the most expressive word for extreme emotions.Swearing can reduce stress and help to endure pain.",
      "D.General words are stored in the upper brain area that controls autonomous behavior and rational thinking, while swear words are stored in the lower brain area responsible for emotions and instincts."
    ],
    "raw_logic_programs": [
      "# Declarations\nwords = EnumSort([general_words, swear_words])\nbrain_areas = EnumSort([upper_brain, lower_brain])\nstored_in = Function([words] -> [brain_areas])\n\n# Constraints\nstored_in(general_words) == upper_brain ::: General words are stored in the upper brain area that controls autonomous behavior and rational thinking\nstored_in(swear_words) == lower_brain ::: Swear words are stored in the lower brain area responsible for emotions and instincts\n\n# Options\nQuestion ::: If the following statement is true, which one best explains the above phenomenon?\nis_best_explanation(stored_in(swear_words) == lower_brain) ::: (D)"
    ]
  },
  {
    "id": 509,
    "context": "Asiana Airlines 'Boeing 777 crash at San Francisco Airport resulted in the death of three Chinese girls.This incident triggered public attention to aviation safety.Statistics show that from the 1950s to the present, the accident rate of civil flights has been declining.The number of deaths per 100 million passenger kilometers was 2.78 in 1945, 0.90 in the 1950s, and 0.013 in the past 30 years.However, the absolute number of civil aviation accidents has increased in recent decades.",
    "question": "If the following statement is true, which one can best explain the seemingly contradictory phenomenon?",
    "answer": "C",
    "options": [
      "A.Information technology is changing with each passing day, and now if a civil aviation accident occurs in a certain place, the news will soon spread throughout the world.",
      "B.In terms of civil aviation safety, the EU has the lowest accident rate, and Africa has the highest accident rate.",
      "C.The volume of civil aviation transportation has grown rapidly in recent decades.",
      "D.In recent decades, the earth 's climate has changed abnormally, and severe weather such as fog has increased."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nphenomenon = Function([statements] -> [bool])\n\n# Constraints\nphenomenon(A) ::: Information technology is changing with each passing day, and now if a civil aviation accident occurs in a certain place, the news will soon spread throughout the world.\nphenomenon(B) ::: In terms of civil aviation safety, the EU has the lowest accident rate, and Africa has the highest accident rate.\nphenomenon(C) ::: The volume of civil aviation transportation has grown rapidly in recent decades.\nphenomenon(D) ::: In recent decades, the earth's climate has changed abnormally, and severe weather such as fog has increased.\n\n# Options\nQuestion ::: If the following statement is true, which one can best explain the seemingly contradictory phenomenon?\nis_best_explanation(phenomenon(C)) ::: (C)"
    ]
  },
  {
    "id": 510,
    "context": "A small academic seminar on 'Dream of Red Mansions' was held somewhere.Of the participants, 4 were Northerners, 3 were Heilongjiang, 1 was Guizhou; 3 were writers, 2 were literary critics, and 1 was a professor; the above mentioned were all participants.",
    "question": "According to the above statement, how many people are the least likely to attend the seminar? How many people are the most likely?",
    "answer": "B",
    "options": [
      "A.There may be a minimum of 4 people and a maximum of 6 people.",
      "B.There may be at least 5 people and at most 11 people.",
      "C.There may be a minimum of 6 people and a maximum of 14 people.",
      "D.There may be at least 8 people and at most 10 people."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([Northerners, Heilongjiang, Guizhou])\nprofessions = EnumSort([writers, literary_critics, professor])\nparticipants = Function([regions, professions] -> [int])\n\n# Constraints\nparticipants(Northerners, _) == 4 ::: 4 were Northerners\nparticipants(Heilongjiang, _) == 3 ::: 3 were Heilongjiang\nparticipants(Guizhou, _) == 1 ::: 1 was Guizhou\nparticipants(_, writers) == 3 ::: 3 were writers\nparticipants(_, literary_critics) == 2 ::: 2 were literary critics\nparticipants(_, professor) == 1 ::: 1 was a professor\n\n# Options\nQuestion ::: According to the above statement, how many people are the least likely to attend the seminar? How many people are the most likely?\nis_valid(participants(Northerners, _) + participants(Heilongjiang, _) + participants(Guizhou, _) == 4) ::: (A)\nis_valid(participants(Northerners, _) + participants(Heilongjiang, _) + participants(Guizhou, _) == 5) ::: (B)\nis_valid(participants(Northerners, _) + participants(Heilongjiang, _) + participants(Guizhou, _) == 6) ::: (C)\nis_valid(participants(Northerners, _) + participants(Heilongjiang, _) + participants(Guizhou, _) == 8) ::: (D)"
    ]
  },
  {
    "id": 511,
    "context": "Wang Gang? It is confirmed that more than 80% of heroin users have a history of smoking marijuana.Such data seem to indicate that smoking cannabis will definitely lead to heroin consumption.Li Yan? Perhaps smoking marijuana will indeed lead to heroin, but it is ridiculous to quote the statistics you mentioned to confirm this, because 100% of heroin users have a history of drinking water.",
    "question": "In response to Wang Gang's discussion, which of the following demonstration techniques did Li Yan use?",
    "answer": "B",
    "options": [
      "A.Provide an example to show that anything that does not induce the use of heroin is unsafe.",
      "B.Question the practice of establishing causality based solely on statistical data.",
      "C.Provide evidence that the statistics used by Wang Gang to support his conclusions are inaccurate.",
      "D.Show that his argument is flawed by showing that Wang Gang's argument will lead to an obviously wrong conclusion."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([Wang_Gang, Li_Yan])\ntechniques = EnumSort([example, question_causality, evidence_inaccuracy, show_flaw])\nuses_technique = Function([arguments] -> [techniques])\n\n# Constraints\nuses_technique(Wang_Gang) == question_causality ::: Wang Gang's argument is based on statistical data suggesting causality\nuses_technique(Li_Yan) == show_flaw ::: Li Yan points out the flaw in Wang Gang's argument by comparing it to an obviously wrong conclusion\n\n# Options\nQuestion ::: In response to Wang Gang's discussion, which of the following demonstration techniques did Li Yan use?\nis_correct(uses_technique(Li_Yan) == example) ::: (A)\nis_correct(uses_technique(Li_Yan) == question_causality) ::: (B)\nis_correct(uses_technique(Li_Yan) == evidence_inaccuracy) ::: (C)\nis_correct(uses_technique(Li_Yan) == show_flaw) ::: (D)"
    ]
  },
  {
    "id": 512,
    "context": "A study shows that eating celery helps to suppress aggressive emotions.151 women were surveyed.Of the women who said they often eat celery, 95% said they rarely have aggressive feelings or are irritated.Among women who do not eat celery often, 53% report that they often have anxiety, anger and combative emotions.",
    "question": "The following statements all weaken the conclusions above, except",
    "answer": "D",
    "options": [
      "A.Those women who often eat celery pay more attention to fitness, and fitness consumes a lot of physical energy, is very tired, and suppresses the aggressive mood.",
      "B.Female interviewees are susceptible to hints and are more willing to cooperate.They will cooperate with researchers intentionally or unintentionally to answer questions in the direction they want.",
      "C.Like the effect of placebo, eating celery will suppress the aggressive mood, which stimulated a series of psychological and mental activities of female respondents and made them feel less aggressive.",
      "D.Celery has the effects of calming the liver, clearing away heat, removing annoyance and reducing swelling, detoxifying the lungs, strengthening the stomach and blood, lowering blood pressure, and brain sedation."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\neffects = EnumSort([weaken, not_weaken])\nconclusion = Function([statements] -> [effects])\n\n# Constraints\nconclusion(A) == weaken ::: Those women who often eat celery pay more attention to fitness, and fitness consumes a lot of physical energy, is very tired, and suppresses the aggressive mood.\nconclusion(B) == weaken ::: Female interviewees are susceptible to hints and are more willing to cooperate. They will cooperate with researchers intentionally or unintentionally to answer questions in the direction they want.\nconclusion(C) == weaken ::: Like the effect of placebo, eating celery will suppress the aggressive mood, which stimulated a series of psychological and mental activities of female respondents and made them feel less aggressive.\nconclusion(D) == not_weaken ::: Celery has the effects of calming the liver, clearing away heat, removing annoyance and reducing swelling, detoxifying the lungs, strengthening the stomach and blood, lowering blood pressure, and brain sedation.\n\n# Options\nQuestion ::: The following statements all weaken the conclusions above, except\nis_not_weaken(conclusion(A) == not_weaken) ::: (A)\nis_not_weaken(conclusion(B) == not_weaken) ::: (B)\nis_not_weaken(conclusion(C) == not_weaken) ::: (C)\nis_not_weaken(conclusion(D) == not_weaken) ::: (D)"
    ]
  },
  {
    "id": 513,
    "context": "It is generally believed that human aesthetic judgment is subjective, and it is indeed the case in a short period of time.People often have big differences in the evaluation of contemporary art works.However, as time goes by, the subjective factors in aesthetics gradually disappear.When a work of art can continue to bring joy and beauty to people for centuries, just like Da Vinci's paintings and Bach's music, we can fairly objectively call it a great work.",
    "question": "Which of the following statements best supports the above statement?",
    "answer": "C",
    "options": [
      "A.When Leonardo and Bach were alive, people's evaluation of their works was different.",
      "B.It is difficult to make an objective determination of the value of contemporary art works.",
      "C.For the same work of art, people's evaluations in different times are very different.",
      "D.If critics agree on a contemporary art work, this work is a great work."
    ],
    "raw_logic_programs": [
      "# Declarations\ntime_periods = EnumSort([contemporary, historical])\nartworks = EnumSort([DaVinci, Bach, contemporary_art])\njudgment = Function([artworks, time_periods] -> [subjective, objective])\n\n# Constraints\nForAll([a:artworks], judgment(a, contemporary) == subjective) ::: People often have big differences in the evaluation of contemporary art works\nForAll([a:artworks], judgment(a, historical) == objective) ::: As time goes by, the subjective factors in aesthetics gradually disappear\nAnd(judgment(DaVinci, historical) == objective, judgment(Bach, historical) == objective) ::: Da Vinci's paintings and Bach's music are considered great works\n\n# Options\nQuestion ::: Which of the following statements best supports the above statement?\nis_supportive(judgment(DaVinci, contemporary) == subjective) ::: (A) When Leonardo and Bach were alive, people's evaluation of their works was different.\nis_supportive(Exists([a:artworks], judgment(a, contemporary) == subjective)) ::: (B) It is difficult to make an objective determination of the value of contemporary art works.\nis_supportive(Exists([a:artworks], And(judgment(a, contemporary) == subjective, judgment(a, historical) == objective))) ::: (C) For the same work of art, people's evaluations in different times are very different.\nis_supportive(ForAll([a:artworks], Implies(judgment(a, contemporary) == objective, judgment(a, historical) == objective))) ::: (D) If critics agree on a contemporary art work, this work is a great work."
    ]
  },
  {
    "id": 514,
    "context": "Even the most diligent people in the world cannot finish all the books in the world.",
    "question": "Which of the following is the logical corollary of the statement above?",
    "answer": "A",
    "options": [
      "A.The most diligent people in the world must not be able to read all the books in the world.",
      "B.The most diligent people in the world may not be able to read all the books in the world.",
      "C.The most diligent person in the world may finish all the books in the world.",
      "D.The person who reads all the books in the world must be the most diligent person in the world."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([diligent_people])\nbooks = EnumSort([all_books])\ncan_finish = Function([people, books] -> [bool])\n\n# Constraints\nForAll([p:people], Not(ForAll([b:books], can_finish(p, b)))) ::: Even the most diligent people in the world cannot finish all the books in the world\n\n# Options\nQuestion ::: Which of the following is the logical corollary of the statement above?\nis_corollary(ForAll([p:people], Not(Exists([b:books], can_finish(p, b))))) ::: (A) The most diligent people in the world must not be able to read all the books in the world.\nis_corollary(Exists([p:people], Not(ForAll([b:books], can_finish(p, b))))) ::: (B) The most diligent people in the world may not be able to read all the books in the world.\nis_corollary(Exists([p:people], ForAll([b:books], can_finish(p, b)))) ::: (C) The most diligent person in the world may finish all the books in the world.\nis_corollary(Exists([p:people], ForAll([b:books], can_finish(p, b)))) ::: (D) The person who reads all the books in the world must be the most diligent person in the world."
    ]
  },
  {
    "id": 515,
    "context": "Advertisement? 'Zhi Lixiao' is a new type of diet pills, which can effectively help fat people lose weight.In clinical trials, only 6 out of 100 people taking Zhilixiao reported side effects.Therefore, 94% of people have a positive effect after taking Zhilixiao, which is the most effective weight loss drug on the market.",
    "question": "Which of the following statements most appropriately points out the problem with the advertisement?",
    "answer": "B",
    "options": [
      "A.The advertisement depreciates other weight loss pills, but does not provide enough evidence that there is unfair competition.",
      "B.The advertisement makes a suspicious assumption? if the drug has no side effects, it will have a positive effect on weight loss.",
      "C.When the advertisement proves the weight loss effect of Zhilixiao, the sample data provided is too small to be representative.",
      "D.Moving flowers, exaggerating, false propaganda, this is a common problem of all advertisements, and this advertisement is no exception."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, ..., person100])\neffects = EnumSort([positive, negative, side_effects])\ntakes = Function([people] -> [effects])\n\n# Constraints\nCount([p:people], takes(p) == side_effects) == 6 ::: 6 out of 100 people taking Zhilixiao reported side effects\nCount([p:people], takes(p) == positive) == 94 ::: 94% of people have a positive effect after taking Zhilixiao\n\n# Options\nQuestion ::: Which of the following statements most appropriately points out the problem with the advertisement?\nis_valid(And(Count([p:people], takes(p) == positive) == 94, Count([p:people], takes(p) == side_effects) == 6)) ::: (A)\nis_valid(Implies(Count([p:people], takes(p) == side_effects) == 0, Count([p:people], takes(p) == positive) == 100)) ::: (B)\nis_valid(Count([p:people], takes(p) == positive) == 94) ::: (C)\nis_valid(True) ::: (D)"
    ]
  },
  {
    "id": 516,
    "context": "Most excellent athletes have good psychological qualities.Most excellent athletes have achieved good results in the competition, and all athletes who have achieved good results in the competition are trained hard.",
    "question": "Which of the following statements can be appropriately derived from the above statement?",
    "answer": "B",
    "options": [
      "A.Most hard-working athletes have good psychological qualities.",
      "B.Some athletes with good psychological qualities are trained hard.",
      "C.All excellent athletes are trained hard.",
      "D.Some athletes who do not have good psychological quality have achieved good results in the competition."
    ],
    "raw_logic_programs": [
      "# Declarations\nathletes = EnumSort([excellent, good_results, hard_working, good_psychological_qualities])\nproperties = Function([athletes] -> [bool])\n\n# Constraints\nForAll([a:athletes], Implies(properties(excellent, a), properties(good_psychological_qualities, a))) ::: Most excellent athletes have good psychological qualities\nForAll([a:athletes], Implies(properties(excellent, a), properties(good_results, a))) ::: Most excellent athletes have achieved good results in the competition\nForAll([a:athletes], Implies(properties(good_results, a), properties(hard_working, a))) ::: All athletes who have achieved good results in the competition are trained hard\n\n# Options\nQuestion ::: Which of the following statements can be appropriately derived from the above statement?\nis_derived(ForAll([a:athletes], Implies(properties(hard_working, a), properties(good_psychological_qualities, a)))) ::: (A) Most hard-working athletes have good psychological qualities\nis_derived(Exists([a:athletes], And(properties(good_psychological_qualities, a), properties(hard_working, a)))) ::: (B) Some athletes with good psychological qualities are trained hard\nis_derived(ForAll([a:athletes], Implies(properties(excellent, a), properties(hard_working, a)))) ::: (C) All excellent athletes are trained hard\nis_derived(Exists([a:athletes], And(Not(properties(good_psychological_qualities, a)), properties(good_results, a)))) ::: (D) Some athletes who do not have good psychological quality have achieved good results in the competition"
    ]
  },
  {
    "id": 517,
    "context": "The People's Bank of China announced that from July 20, 2013, the interest rate control of financial institutions' loans will be fully liberalized.However, only by liberalizing the upper limit of deposit interest rates can we truly realize the marketization of interest rates.If the government does not voluntarily give up its own power, market forces will be difficult to play a role.Once the upper limit of deposit interest rates is lifted, interest rate wars will begin between banks, leading to increased financial risks.If financial risks rise, a deposit insurance system needs to be established.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "B",
    "options": [
      "A.With the deepening of reform, sooner or later China will truly realize the marketization of interest rates.",
      "B.Only by establishing a deposit insurance system can China truly realize the marketization of interest rates.",
      "C.As long as the government voluntarily gives up its own power, market forces can play a role.",
      "D.As long as the deposit insurance system is established, financial risks can be effectively avoided."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([liberalize_loan_rates, liberalize_deposit_rates, marketization_of_interest_rates, government_gives_up_power, market_forces_play_role, interest_rate_wars, financial_risks_increase, establish_deposit_insurance])\nhappens = Function([events] -> [bool])\n\n# Constraints\nhappens(liberalize_loan_rates) ::: The People's Bank of China announced that from July 20, 2013, the interest rate control of financial institutions' loans will be fully liberalized\nImplies(Not(happens(liberalize_deposit_rates)), Not(happens(marketization_of_interest_rates))) ::: Only by liberalizing the upper limit of deposit interest rates can we truly realize the marketization of interest rates\nImplies(Not(happens(government_gives_up_power)), Not(happens(market_forces_play_role))) ::: If the government does not voluntarily give up its own power, market forces will be difficult to play a role\nImplies(happens(liberalize_deposit_rates), happens(interest_rate_wars)) ::: Once the upper limit of deposit interest rates is lifted, interest rate wars will begin between banks\nImplies(happens(interest_rate_wars), happens(financial_risks_increase)) ::: Interest rate wars lead to increased financial risks\nImplies(happens(financial_risks_increase), happens(establish_deposit_insurance)) ::: If financial risks rise, a deposit insurance system needs to be established\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(happens(marketization_of_interest_rates)) ::: (A) With the deepening of reform, sooner or later China will truly realize the marketization of interest rates\nis_must_true(Implies(happens(establish_deposit_insurance), happens(marketization_of_interest_rates))) ::: (B) Only by establishing a deposit insurance system can China truly realize the marketization of interest rates\nis_must_true(Implies(happens(government_gives_up_power), happens(market_forces_play_role))) ::: (C) As long as the government voluntarily gives up its own power, market forces can play a role\nis_must_true(Implies(happens(establish_deposit_insurance), Not(happens(financial_risks_increase)))) ::: (D) As long as the deposit insurance system is established, financial risks can be effectively avoided"
    ]
  },
  {
    "id": 518,
    "context": "When scientists cloned a certain housefly, they changed a single gene of the housefly.The housefly thus cloned did not have ultraviolet vision because they lacked the eye cells that make the housefly have ultraviolet vision.At the same time, Musca domestica cloned in a conventional manner (without gene modification) has normal vision.Scientists have thus shown that this housefly without UV vision must have some kind of defect or damage in this gene.",
    "question": "Which of the following statements is the hypothesis required for this argument?",
    "answer": "B",
    "options": [
      "A.Scientists have a good understanding of the relationship between the housefly's genes and their vision.",
      "B.This housefly does not need other genes when generating UV vision cells.",
      "C.All types of house flies have ultraviolet vision.",
      "D.Except for the lack of UV vision cells, changing this gene has no other effect on house flies."
    ],
    "raw_logic_programs": [
      "# Declarations\nhouseflies = EnumSort([cloned_modified, cloned_conventional])\nvision_types = EnumSort([normal, ultraviolet])\ngenes = EnumSort([modified, unmodified])\nhas_vision = Function([houseflies] -> [vision_types])\ngene_status = Function([houseflies] -> [genes])\n\n# Constraints\ngene_status(cloned_modified) == modified ::: The cloned housefly had a gene changed\ngene_status(cloned_conventional) == unmodified ::: The conventional clone had no gene modification\nhas_vision(cloned_conventional) == normal ::: Conventional clone has normal vision\nhas_vision(cloned_modified) != ultraviolet ::: Modified clone lacks ultraviolet vision\n\n# Options\nQuestion ::: Which of the following statements is the hypothesis required for this argument?\nis_hypothesis(Scientists_understand_gene_vision_relationship) ::: (A)\nis_hypothesis(No_other_genes_needed_for_UV_vision) ::: (B)\nis_hypothesis(All_houseflies_have_UV_vision) ::: (C)\nis_hypothesis(No_other_effects_from_gene_change) ::: (D)"
    ]
  },
  {
    "id": 519,
    "context": "Every evil has a reason, but all evil has no excuse.I ca n't be obliged to be evil because the evil comes from above; I ca n't be qualified to be evil because everyone else is so evil? I ca n't even be evil because someone is evil to myself.Therefore, every specific evil must be condemned.If respect for life must be specific to single digits, then the condemnation of sin must also be specific to single digits.",
    "question": "The following statements conflict with the ideas expressed above, except",
    "answer": "D",
    "options": [
      "A.Chen Shui made the Xiamen bus arson case.Although it is unreasonable, it is justifiable? He is a weak person in the society and has been treated unfairly by many people ...",
      "B.A Nazi officer poisoned hundreds of Jews in a concentration camp.He was carrying out the orders of his superiors.",
      "C.During the Cultural Revolution, Huang Xiaomeng at the university criticized their university professors and beat one of them into disability.At that time, the whole of China was crazy.He was just wrapped in this kind of madness.Besides, he was too young ...",
      "D.No life can be harmed innocently, even if you hold high the banner of justice."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nconflicts_with_ideas = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], conflicts_with_ideas(s) == True) ::: Every statement conflicts with the ideas expressed above\n\n# Options\nQuestion ::: The following statements conflict with the ideas expressed above, except\nis_exception(conflicts_with_ideas(A)) ::: (A)\nis_exception(conflicts_with_ideas(B)) ::: (B)\nis_exception(conflicts_with_ideas(C)) ::: (C)\nis_exception(conflicts_with_ideas(D)) ::: (D)"
    ]
  },
  {
    "id": 520,
    "context": "The sun about 2 billion years ago was 30% darker than the current sun.If the current sun is as dim as the sun at that time, the ocean on earth will completely freeze into ice.However, there is fossil evidence that as early as 3.8 billion years ago, liquid water and life existed on Earth.",
    "question": "If the following statement is true, which one is most helpful to eliminate the obvious inconsistencies in the above description?",
    "answer": "A",
    "options": [
      "A.3.8 billion years ago, the earth 's atmosphere could retain significantly more heat than the current atmosphere.",
      "B.The liquid water that appeared on the earth 3.8 billion years ago later froze again, and only re-melted about 2 billion years ago.",
      "C.About 2 billion years ago, a powerful heat source that did not come from the sun melted large chunks of ice on the earth.",
      "D.There is evidence that certain areas of the ocean have been frozen until a period later than 2 billion years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\ntime_periods = EnumSort([current, two_billion_years_ago, three_point_eight_billion_years_ago])\nconditions = EnumSort([darker_sun, liquid_water, frozen_ocean, life_exists, heat_retention])\nevidence = Function([time_periods] -> [conditions])\n\n# Constraints\nevidence(two_billion_years_ago) == darker_sun ::: The sun about 2 billion years ago was 30% darker than the current sun\nImplies(evidence(current) == darker_sun, evidence(current) == frozen_ocean) ::: If the current sun is as dim as the sun at that time, the ocean on earth will completely freeze into ice\nAnd(evidence(three_point_eight_billion_years_ago) == liquid_water, evidence(three_point_eight_billion_years_ago) == life_exists) ::: There is fossil evidence that as early as 3.8 billion years ago, liquid water and life existed on Earth\n\n# Options\nQuestion ::: If the following statement is true, which one is most helpful to eliminate the obvious inconsistencies in the above description?\nis_helpful(Implies(evidence(three_point_eight_billion_years_ago) == heat_retention, evidence(three_point_eight_billion_years_ago) == liquid_water)) ::: (A)\nis_helpful(Implies(evidence(three_point_eight_billion_years_ago) == liquid_water, evidence(two_billion_years_ago) == frozen_ocean)) ::: (B)\nis_helpful(Implies(evidence(two_billion_years_ago) == frozen_ocean, evidence(two_billion_years_ago) == liquid_water)) ::: (C)\nis_helpful(Implies(evidence(two_billion_years_ago) == frozen_ocean, evidence(current) == frozen_ocean)) ::: (D)"
    ]
  },
  {
    "id": 521,
    "context": "Experts? The board of directors of a listed company is usually composed of large shareholders.Small shareholders cannot enter the board of directors because of their small equity, so the interests of small shareholders are easily violated by large shareholders.The establishment of an independent director system is to hope that independent directors can represent minority shareholders and form checks and balances against major shareholders.However, independent directors are hired and paid by the company's board of directors, which forms an economic 'alliance' relationship between the independent directors and the company's board of directors, making it difficult for independent directors to exercise their power as independent shareholders.",
    "question": "If the following statement is true, which one most strongly supports the above expert's conclusion?",
    "answer": "A",
    "options": [
      "A.If independent directors challenge the company's board of directors to protect the interests of minority shareholders, the result is often dismissed by the company's board of directors.",
      "B.Some independent directors dare to protect the interests of minority shareholders, despite the great pressure.",
      "C.At present, the independent director system of Chinese listed companies is not yet perfect.",
      "D.Many retired senior officials have served as independent directors of Chinese listed companies."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_conclusion = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], supports_conclusion(s) == False) ::: Initially assume no statement supports the conclusion\n\n# Options\nQuestion ::: If the following statement is true, which one most strongly supports the above expert's conclusion?\nsupports_conclusion(A) == True ::: (A) If independent directors challenge the company's board of directors to protect the interests of minority shareholders, the result is often dismissed by the company's board of directors.\nsupports_conclusion(B) == False ::: (B) Some independent directors dare to protect the interests of minority shareholders, despite the great pressure.\nsupports_conclusion(C) == False ::: (C) At present, the independent director system of Chinese listed companies is not yet perfect.\nsupports_conclusion(D) == False ::: (D) Many retired senior officials have served as independent directors of Chinese listed companies."
    ]
  },
  {
    "id": 522,
    "context": "Many people think that online dating is not reliable.A research team from the University of Chicago conducted an online survey of 19,000 Americans who married between 2005 and 2012 and found that more than a third of them met their spouses through dating sites or social networks such as Facebook; these respondents The overall divorce rate is much lower than the average divorce rate.This survey shows that online dating is very reliable in achieving a stable marriage.",
    "question": "If the following statement is true, which one most strongly challenges the above conclusion?",
    "answer": "C",
    "options": [
      "A.People who still follow the traditional offline dating method are either very old or very young.",
      "B.The funder behind the study is a dating site.",
      "C.The respondents' marriage time is relatively short.",
      "D.Compared with online dating, work contact, friend introduction, and attending the same school are more common ways to find a spouse."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nchallenges = Function([statements] -> [bool])\n\n# Constraints\nsurvey_conclusion = True ::: The survey shows that online dating is very reliable in achieving a stable marriage\n\n# Options\nQuestion ::: If the following statement is true, which one most strongly challenges the above conclusion?\nchallenges(A) == False ::: (A) People who still follow the traditional offline dating method are either very old or very young\nchallenges(B) == True ::: (B) The funder behind the study is a dating site\nchallenges(C) == True ::: (C) The respondents' marriage time is relatively short\nchallenges(D) == False ::: (D) Compared with online dating, work contact, friend introduction, and attending the same school are more common ways to find a spouse"
    ]
  },
  {
    "id": 523,
    "context": "When the local government auctions land, it has a basic price, which is called the 'land base price'; the ratio of the amount of money that exceeds the base price of the land to the base price of the land is called the 'premium rate'.The level of the premium rate marks the popularity of the land and property markets.City B has a piece of land.During the first listing this year, it was temporarily suspended because the premium rate will reach a new high.The second listing ended with a premium rate lower than the first listing, but the total amount of transactions exceeded the amount that the first listing might reach.",
    "question": "If the following statement is true, which item best explains the seemingly inconsistent phenomenon?",
    "answer": "A",
    "options": [
      "When the land in City A.B was listed for the second time, the government raised its base price.",
      "B.This year, City B has implemented the strictest real estate regulation and control policies in the country.",
      "C.At present, the income from land auction is an important financial source for local governments.",
      "When the land in City D.B was listed for the second time, the level of competition among developers was far more intense than the first."
    ],
    "raw_logic_programs": [
      "# Declarations\nlistings = EnumSort([first, second])\nvariables = EnumSort([base_price, premium_rate, total_transaction])\nvalues = Function([listings, variables] -> [float])\n\n# Constraints\nvalues(second, premium_rate) < values(first, premium_rate) ::: The second listing ended with a premium rate lower than the first listing\nvalues(second, total_transaction) > values(first, total_transaction) ::: The total amount of transactions exceeded the amount that the first listing might reach\n\n# Options\nQuestion ::: If the following statement is true, which item best explains the seemingly inconsistent phenomenon?\nis_explanation(values(second, base_price) > values(first, base_price)) ::: (A) When the land in City B was listed for the second time, the government raised its base price.\nis_explanation(strict_real_estate_policies_in_city_B) ::: (B) This year, City B has implemented the strictest real estate regulation and control policies in the country.\nis_explanation(land_auction_income_important_for_government) ::: (C) At present, the income from land auction is an important financial source for local governments.\nis_explanation(more_intense_competition_in_second_listing) ::: (D) When the land in City B was listed for the second time, the level of competition among developers was far more intense than the first."
    ]
  },
  {
    "id": 524,
    "context": "Recently, Fonterra Dairy Group of New Zealand reported to the government that one of its raw material samples contained botulinum.In fact, New Zealand and China do not include botulinum in milk powder testing projects, and there are no reports of pathogenic products.Fonterra's exposure of its ugliness may be due to the moral conscience of the company, or it may be concerned about punishment, because in New Zealand, if the company cannot deal with food safety issues in time, it will be severely punished.This shows that Fonterra's self-exposure is not really out of moral conscience.",
    "question": "Which of the following reasoning has the same logical error as the above reasoning?",
    "answer": "B",
    "options": [
      "A.Fish and bear paws can't have both.",
      "B.The offender is either A or B.It has been found that the perpetrator is A.so the perpetrator is not B.",
      "C.If one is immersed in worldly life, one cannot become a philosopher.Therefore, if you want to be a philosopher, you should give up the lifestyle of ordinary people.",
      "D.Food and clothing are enough to know honor and shame."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nreasoning_error = Function([statements] -> [bool])\n\n# Constraints\nreasoning_error(A) == False ::: Fish and bear paws can't have both.\nreasoning_error(B) == False ::: The offender is either A or B. It has been found that the perpetrator is A, so the perpetrator is not B.\nreasoning_error(C) == False ::: If one is immersed in worldly life, one cannot become a philosopher. Therefore, if you want to be a philosopher, you should give up the lifestyle of ordinary people.\nreasoning_error(D) == False ::: Food and clothing are enough to know honor and shame.\n\n# Options\nQuestion ::: Which of the following reasoning has the same logical error as the above reasoning?\nis_same_error(reasoning_error(A)) ::: (A)\nis_same_error(reasoning_error(B)) ::: (B)\nis_same_error(reasoning_error(C)) ::: (C)\nis_same_error(reasoning_error(D)) ::: (D)"
    ]
  },
  {
    "id": 525,
    "context": "During the Second World War, the US and British Air Forces carried out a large bombing of Germany, and they also suffered heavy losses.Experts found that all returned planes were covered with bullet marks on the belly, but the wings were intact.They inferred from this that the belly of the aircraft was very vulnerable to artillery fire, and that the belly protection should be improved.It was later confirmed that these experts were affected by the 'survivor deviation' when inferred, because the actual situation is that all the aircraft that were hit on the wing fell, and most of the aircraft that were only hit on the belly of the aircraft returned.",
    "question": "The following statements all have similar 'survivor bias' except",
    "answer": "D",
    "options": [
      "A.Beauty and handsome guys have a great advantage in the competition in the workplace.They are easy to get high-paying positions.",
      "B.It is easy to succeed when you drop out and start a business during college, for example, Bill Gates.",
      "C.Smoking may be beneficial to health and longevity.For example, Deng Xiaoping and Huang Yongyu are both old smokers, but they all live long.",
      "D.In a random sampling survey with a sufficiently large sample, it was found that in China, the most popular TV program is 'news broadcasting'."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nhas_survivor_bias = Function([statements] -> [bool])\n\n# Constraints\nhas_survivor_bias(A) ::: Beauty and handsome guys have a great advantage in the competition in the workplace. They are easy to get high-paying positions.\nhas_survivor_bias(B) ::: It is easy to succeed when you drop out and start a business during college, for example, Bill Gates.\nhas_survivor_bias(C) ::: Smoking may be beneficial to health and longevity. For example, Deng Xiaoping and Huang Yongyu are both old smokers, but they all live long.\nNot(has_survivor_bias(D)) ::: In a random sampling survey with a sufficiently large sample, it was found that in China, the most popular TV program is 'news broadcasting'.\n\n# Options\nQuestion ::: The following statements all have similar 'survivor bias' except\nis_exception(has_survivor_bias(A)) ::: (A)\nis_exception(has_survivor_bias(B)) ::: (B)\nis_exception(has_survivor_bias(C)) ::: (C)\nis_exception(has_survivor_bias(D)) ::: (D)"
    ]
  },
  {
    "id": 526,
    "context": "My running ability has never been very strong, but since using X brand running shoes, my running performance has improved significantly.Now I can run faster and farther, and my muscles are less sore after running.'Runner' magazine also said that X brand running shoes are the best-selling on the market.Therefore, anyone who wants to improve their running performance should buy X brand running shoes.",
    "question": "From the above, it is possible to draw a conclusion more reasonable than the conclusion drawn by 'I', except",
    "answer": "C",
    "options": [
      "A.Anyone who does not buy X-brand running shoes is someone who does not want to improve running performance.",
      "B.Runners similar to 'I' should buy X-brand running shoes.",
      "C.If you buy X brand running shoes, it will make you run faster and farther.",
      "D.If the runner is not satisfied with the current running shoes, he is advised to buy X brand running shoes."
    ],
    "raw_logic_programs": [
      "# Declarations\nindividuals = EnumSort([I, others])\nshoes = EnumSort([X_brand, other_brand])\nperformance = Function([individuals, shoes] -> [bool])\nsatisfaction = Function([individuals, shoes] -> [bool])\n\n# Constraints\nperformance(I, X_brand) == True ::: My running performance has improved significantly since using X brand running shoes\nForAll([i:individuals], performance(i, X_brand) == True) ::: 'Runner' magazine said that X brand running shoes are the best-selling on the market\n\n# Options\nQuestion ::: From the above, it is possible to draw a conclusion more reasonable than the conclusion drawn by 'I', except\nis_exception(ForAll([i:individuals], Not(performance(i, X_brand)) -> Not(wants_to_improve(i)))) ::: (A) Anyone who does not buy X-brand running shoes is someone who does not want to improve running performance.\nis_exception(ForAll([i:individuals], similar_to(I, i) -> should_buy(i, X_brand))) ::: (B) Runners similar to 'I' should buy X-brand running shoes.\nis_exception(ForAll([i:individuals], buys(i, X_brand) -> performance(i, X_brand))) ::: (C) If you buy X brand running shoes, it will make you run faster and farther.\nis_exception(ForAll([i:individuals], Not(satisfaction(i, current_shoes)) -> should_buy(i, X_brand))) ::: (D) If the runner is not satisfied with the current running shoes, he is advised to buy X brand running shoes."
    ]
  },
  {
    "id": 527,
    "context": "Scientists? It has been proved that the adoption of new farming methods can enable some well-managed farms to reduce the use of chemical fertilizers, pesticides and antibiotics without significantly reducing production or even increasing production.Critics? Not really.The farm you choose is the one most likely to succeed using these new methods.Why not mention those farms that tried new methods but failed in the end?",
    "question": "Which of the following statements best evaluates the critics' rebuttal?",
    "answer": "D",
    "options": [
      "A.Critics believe that the new farming methods should be able to be generalized.",
      "B.Critics have shown that if the number of farms under study is greatly increased, different results will be obtained.",
      "C.Critics assume for no reason that some farm failures are not caused by their soil quality.",
      "D.The critic's rebuttal is wrong, because the scientist aims to show that a certain situation may occur, which has nothing to do with whether the research object is representative."
    ],
    "raw_logic_programs": [
      "# Declarations\nfarms = EnumSort([well_managed, not_well_managed])\nmethods = EnumSort([new_methods, old_methods])\noutcomes = EnumSort([success, failure])\nadopts = Function([farms] -> [methods])\nresults = Function([farms] -> [outcomes])\n\n# Constraints\nForAll([f:farms], Implies(adopts(f) == new_methods, Or(results(f) == success, results(f) == failure))) ::: Adoption of new methods can lead to success or failure\nExists([f:farms], And(adopts(f) == new_methods, results(f) == success)) ::: Some well-managed farms succeed with new methods\nForAll([f:farms], Implies(adopts(f) == old_methods, results(f) == success)) ::: Old methods lead to success\n\n# Options\nQuestion ::: Which of the following statements best evaluates the critics' rebuttal?\nis_best_evaluation(And(Critics_believe_generalization, Critics_assume_failure_not_due_to_soil)) ::: (A)\nis_best_evaluation(Critics_show_different_results_with_more_farms) ::: (B)\nis_best_evaluation(Critics_assume_failure_not_due_to_soil) ::: (C)\nis_best_evaluation(Scientists_show_possibility_not_representativeness) ::: (D)"
    ]
  },
  {
    "id": 528,
    "context": "Critics? As the practice of electronic monitoring of employees becomes more and more common, and thus personal privacy is becoming more intrusive, I have heard more and more defenses from employers on this practice.They explained that monitoring is to keep employees honest, efficient and courteous to customers.I think that this explanation is obviously for the employers themselves, and it simply cannot show that the unreasonable violation of personal privacy is justified.",
    "question": "Which of the following most appropriately points out a flaw in the critic's argument?",
    "answer": "C",
    "options": [
      "A.Attack an argument that is different from the argument actually put forward by the employer.",
      "B.Assume that employees will never be dishonest, inefficient, or impolite to customers.",
      "C.Attack employers 'motives rather than refute their defenses.",
      "D.Summarized based on a biased sample"
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([employer_argument, critic_argument])\nflaws = EnumSort([different_argument, assume_honesty, attack_motives, biased_sample])\npoints_out_flaw = Function([arguments] -> [flaws])\n\n# Constraints\npoints_out_flaw(critic_argument) == attack_motives ::: The critic's argument attacks employers' motives rather than refuting their defenses.\n\n# Options\nQuestion ::: Which of the following most appropriately points out a flaw in the critic's argument?\nis_valid(points_out_flaw(critic_argument) == different_argument) ::: (A)\nis_valid(points_out_flaw(critic_argument) == assume_honesty) ::: (B)\nis_valid(points_out_flaw(critic_argument) == attack_motives) ::: (C)\nis_valid(points_out_flaw(critic_argument) == biased_sample) ::: (D)"
    ]
  },
  {
    "id": 529,
    "context": "No computer can do everything the human brain can do, because some problems cannot be solved by running any mechanical program.Computers can only solve problems by running mechanical programs.",
    "question": "Which of the following statements is the assumption that the above discussion relies on?",
    "answer": "B",
    "options": [
      "A.There is at least one problem that can be solved by running a mechanical program, but it cannot be solved by anyone's brain.",
      "B.There is at least one problem.It cannot be solved by running any mechanical program, but it can be solved by at least one person's brain.",
      "C.There is at least one problem that can be solved by running any mechanical program, but cannot be solved by anyone's brain.",
      "D.Every problem can be solved by everyone's brain if it can be solved by running at least one mechanical program."
    ],
    "raw_logic_programs": [
      "# Declarations\nproblems = EnumSort([problem1, problem2, problem3, ...])\nmechanical_program = Function([problems] -> [bool])\nhuman_brain = Function([problems] -> [bool])\n\n# Constraints\nForAll([p:problems], Implies(mechanical_program(p), Not(human_brain(p)))) ::: No computer can do everything the human brain can do, because some problems cannot be solved by running any mechanical program\nForAll([p:problems], Implies(Not(mechanical_program(p)), Not(human_brain(p)))) ::: Computers can only solve problems by running mechanical programs\n\n# Options\nQuestion ::: Which of the following statements is the assumption that the above discussion relies on?\nis_assumption(Exists([p:problems], And(Not(mechanical_program(p)), human_brain(p)))) ::: (B) There is at least one problem. It cannot be solved by running any mechanical program, but it can be solved by at least one person's brain."
    ]
  },
  {
    "id": 530,
    "context": "In the novel 'Article 22 Military Regulations' of the American writer Joseph Heller, Article 22 Military Regulations stipulates that only when a soldier's mental status is abnormal and he applies for suspension of flight, can he be allowed to stop flying.According to common sense, if a soldier is aware of the danger of flying and submits an application to stop flying, it shows that his mind is clear and his spirit cannot be abnormal.",
    "question": "Which of the following statements is the logical inference above?",
    "answer": "B",
    "options": [
      "A.If a person is mentally abnormal, he will be allowed to stop flying.",
      "B.No one can be allowed to stop flying.",
      "C.If a person can realize that there is a danger of flying, it shows that he is mentally normal.",
      "D.If a person can file an application to stop flying, it shows that his spirit cannot be abnormal."
    ],
    "raw_logic_programs": [
      "# Declarations\nsoldiers = EnumSort([soldier])\nmental_status = EnumSort([normal, abnormal])\napplication_status = EnumSort([applied, not_applied])\nflying_status = EnumSort([allowed_to_stop, not_allowed_to_stop])\nmental = Function([soldiers] -> [mental_status])\napplication = Function([soldiers] -> [application_status])\nflying = Function([soldiers] -> [flying_status])\n\n# Constraints\nForAll([s:soldiers], Implies(And(mental(s) == abnormal, application(s) == applied), flying(s) == allowed_to_stop)) ::: Article 22: only when a soldier's mental status is abnormal and he applies for suspension of flight, can he be allowed to stop flying\nForAll([s:soldiers], Implies(And(application(s) == applied, mental(s) == normal), flying(s) == not_allowed_to_stop)) ::: If a soldier is aware of the danger of flying and submits an application to stop flying, it shows that his mind is clear and his spirit cannot be abnormal\n\n# Options\nQuestion ::: Which of the following statements is the logical inference above?\nis_inference(ForAll([s:soldiers], Implies(mental(s) == abnormal, flying(s) == allowed_to_stop))) ::: (A)\nis_inference(ForAll([s:soldiers], flying(s) == not_allowed_to_stop)) ::: (B)\nis_inference(ForAll([s:soldiers], Implies(application(s) == applied, mental(s) == normal))) ::: (C)\nis_inference(ForAll([s:soldiers], Implies(application(s) == applied, mental(s) == normal))) ::: (D)"
    ]
  },
  {
    "id": 531,
    "context": "Judges in some states of the United States are elected.Elections usually require financial support from interest groups, which may directly or indirectly affect judicial justice.A study showed that in cases where the party involved was its own campaign sponsor, 65% of the judges of the Supreme Court of Louisiana supported the campaign sponsor.This shows that there is a correlation between the campaign funding granted to the judge and the judgment in favor of the sponsor.",
    "question": "Which of the following statements best points out the problems in the above argument?",
    "answer": "D",
    "options": [
      "A.The argument improperly presupposes that in a case where the party involved is a campaign sponsor, the proportion of judgments supporting the sponsor should not exceed 50%.",
      "B.The argument failed to explain the impact of the amount of campaign funding on the judgment.",
      "C.The argument ignores the fact that under the circumstances that campaign funding and judicial decisions are completely transparent, the media's supervision of justice is everywhere.",
      "D.The argument does not give the proportion of campaign sponsors among all involved parties."
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([judge1, judge2, ..., judgeN])  # Assuming N judges\ncases = EnumSort([case1, case2, ..., caseM])  # Assuming M cases\nsponsors = EnumSort([sponsor1, sponsor2, ..., sponsorK])  # Assuming K sponsors\nsupports = Function([judges, cases] -> [bool])  # Whether a judge supports the sponsor in a case\nsponsored_by = Function([cases] -> [sponsors])  # Which sponsor is involved in a case\nfunding = Function([judges, sponsors] -> [int])  # Amount of funding a judge received from a sponsor\n\n# Constraints\nForAll([j:judges, c:cases], Implies(supports(j, c), sponsored_by(c) == sponsor_of(j))) ::: Judges support their campaign sponsors in cases\n\n# Options\nQuestion ::: Which of the following statements best points out the problems in the above argument?\nis_best_point_out(Implies(Exists([c:cases], sponsored_by(c) == sponsor_of(j)), Count([c:cases], supports(j, c)) / Count([c:cases], sponsored_by(c) == sponsor_of(j)) <= 0.5)) ::: (A)\nis_best_point_out(Exists([j:judges, s:sponsors], funding(j, s) > 0)) ::: (B)\nis_best_point_out(ForAll([j:judges, c:cases], Implies(supports(j, c), transparent(j, c)))) ::: (C)\nis_best_point_out(Exists([c:cases], sponsored_by(c) == sponsor_of(j))) ::: (D)"
    ]
  },
  {
    "id": 532,
    "context": "The concepts of physics are usually very standardized and rigorous.The physical quantities represented by physics terms have clear definitions, measurement methods and conversion relationships.For dark energy, physicists and cosmologists still know nothing about it.'Dark energy' refers to the most profound problem in current cosmology.",
    "question": "Which of the following statements is most appropriate to continue the above as its conclusion?",
    "answer": "A",
    "options": [
      "A.'Dark energy' is obviously not a clear physics concept.",
      "B.Scientists use 'dark energy' to name a cosmic puzzle is helpless.",
      "C.'Dark energy' refers to the confusing phenomenon that the previously discovered universe is accelerating expansion.",
      "D.Scientists still do not know the deep connotation behind the term 'dark energy'."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([standardized, rigorous, clear, unknown])\nterms = EnumSort([physics_terms, dark_energy])\nstatements = EnumSort([A, B, C, D])\nappropriate = Function([statements] -> [bool])\n\n# Constraints\nForAll([t:terms], Or(t == physics_terms, t == dark_energy)) ::: The concepts of physics are usually very standardized and rigorous\nForAll([t:terms], Implies(t == physics_terms, And(concepts(standardized), concepts(rigorous), concepts(clear)))) ::: The physical quantities represented by physics terms have clear definitions, measurement methods and conversion relationships\nForAll([t:terms], Implies(t == dark_energy, Not(concepts(clear)))) ::: For dark energy, physicists and cosmologists still know nothing about it\n\n# Options\nQuestion ::: Which of the following statements is most appropriate to continue the above as its conclusion?\nappropriate(A) ::: (A) 'Dark energy' is obviously not a clear physics concept.\nappropriate(B) ::: (B) Scientists use 'dark energy' to name a cosmic puzzle is helpless.\nappropriate(C) ::: (C) 'Dark energy' refers to the confusing phenomenon that the previously discovered universe is accelerating expansion.\nappropriate(D) ::: (D) Scientists still do not know the deep connotation behind the term 'dark energy'."
    ]
  },
  {
    "id": 533,
    "context": "Traditional memory theory believes that memory is like a videotape, and each recollection is to find a certain video in the corresponding time from the brain and play it back.Scene construction theory gives another explanation for memory? the human brain only records some fragments when encoding memory; when needed, the human brain connects these fragments in a logical and consistent manner with the subject's current belief state And make supplements to form memories.",
    "question": "The phenomena listed below are all explained by the scene construction theory but not by the traditional memory theory, except",
    "answer": "A",
    "options": [
      "A.Some people with Alzheimer's disease will lose their memory.",
      "B.The content of a person 's multiple memories of the same past will change.",
      "C.A statistic shows that witnesses will identify people who the police knows to be incorrect in 20% -25% of cases.",
      "D.Kimberly Weber, a British psychologist, succeeded in implanting him or her with false memories of childhood by showing some synthetic fake photos to the subjects."
    ],
    "raw_logic_programs": [
      "# Declarations\ntheories = EnumSort([traditional_memory_theory, scene_construction_theory])\nphenomena = EnumSort([alzheimer_memory_loss, changing_memory_content, incorrect_witness_identification, false_memory_implantation])\nexplains = Function([theories, phenomena] -> [bool])\n\n# Constraints\nexplains(scene_construction_theory, alzheimer_memory_loss) ::: Scene construction theory explains Alzheimer's memory loss\nexplains(scene_construction_theory, changing_memory_content) ::: Scene construction theory explains changing memory content\nexplains(scene_construction_theory, incorrect_witness_identification) ::: Scene construction theory explains incorrect witness identification\nexplains(scene_construction_theory, false_memory_implantation) ::: Scene construction theory explains false memory implantation\nNot(explains(traditional_memory_theory, changing_memory_content)) ::: Traditional memory theory does not explain changing memory content\nNot(explains(traditional_memory_theory, incorrect_witness_identification)) ::: Traditional memory theory does not explain incorrect witness identification\nNot(explains(traditional_memory_theory, false_memory_implantation)) ::: Traditional memory theory does not explain false memory implantation\n\n# Options\nQuestion ::: The phenomena listed below are all explained by the scene construction theory but not by the traditional memory theory, except\nis_exception(explains(traditional_memory_theory, alzheimer_memory_loss)) ::: (A)\nis_exception(explains(traditional_memory_theory, changing_memory_content)) ::: (B)\nis_exception(explains(traditional_memory_theory, incorrect_witness_identification)) ::: (C)\nis_exception(explains(traditional_memory_theory, false_memory_implantation)) ::: (D)"
    ]
  },
  {
    "id": 534,
    "context": "Since the beginning of 2013, Beijing has suffered from the haze weather that lasted for many days.The 'Beijing Cough' caused by air pollution has become one of the hot topics of discussion.In order to solve the dilemma of the haze, some experts suggested that starting with buses, taxis and municipal public vehicles, electric vehicles should be used instead of fuel vehicles, and then gradually extended to other social vehicles.",
    "question": "If the following statement is true, which one most strongly questioned the above experts' suggestions?",
    "answer": "C",
    "options": [
      "A.From the perspective of vehicle purchase and use costs, electric vehicles currently do not have a competitive advantage over fuel vehicles.",
      "B.Research on the effects of electric vehicle emission reduction in the United Kingdom and the United States shows that electric vehicles that use coal power will generally lead to more pollutant emissions.",
      "C.Electric cars in Beijing use coal power.Electric car power will increase coal consumption and particulate emissions in the surrounding power supply provinces, resulting in haze.",
      "D.Controlling atmospheric pollution is a complex project, and a single control measure is difficult to work."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nquestions = EnumSort([question_experts_suggestion])\nvalidity = Function([statements, questions] -> [bool])\n\n# Constraints\nvalidity(A, question_experts_suggestion) ::: From the perspective of vehicle purchase and use costs, electric vehicles currently do not have a competitive advantage over fuel vehicles.\nvalidity(B, question_experts_suggestion) ::: Research on the effects of electric vehicle emission reduction in the United Kingdom and the United States shows that electric vehicles that use coal power will generally lead to more pollutant emissions.\nvalidity(C, question_experts_suggestion) ::: Electric cars in Beijing use coal power. Electric car power will increase coal consumption and particulate emissions in the surrounding power supply provinces, resulting in haze.\nvalidity(D, question_experts_suggestion) ::: Controlling atmospheric pollution is a complex project, and a single control measure is difficult to work.\n\n# Options\nQuestion ::: If the following statement is true, which one most strongly questioned the above experts' suggestions?\nis_strongest_question(validity(B, question_experts_suggestion)) ::: (A)\nis_strongest_question(validity(B, question_experts_suggestion)) ::: (B)\nis_strongest_question(validity(C, question_experts_suggestion)) ::: (C)\nis_strongest_question(validity(D, question_experts_suggestion)) ::: (D)"
    ]
  },
  {
    "id": 535,
    "context": "Since 1987, the birth rate of the Chinese population has gradually decreased.The labor shortage marked by the 'migrant worker shortage' first appeared in 2004, and the absolute number of labor will gradually decrease after peaking around 2013.In the future, in order to ensure employment, enterprises must increase workers' wages and benefits, thereby increasing the proportion of labor costs in total production costs.",
    "question": "If the following statement is true, which one can pose the strongest challenge to the above conclusion?",
    "answer": "B",
    "options": [
      "A.The process of 'aging' in Chinese society is accelerating, and relevant departments have proposed delaying retirement to solve the problem of pension shortage.",
      "B.Some domestic labor-intensive enterprises began to increase the number of robots on the production line.",
      "C.The relevant departments are studying whether appropriate adjustments should be made to the family planning policy.",
      "D.Enterprises will try their best to reduce production costs in order to maintain profits."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nchallenges = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], challenges(s) == True) ::: Each statement is considered as a potential challenge\n\n# Options\nQuestion ::: If the following statement is true, which one can pose the strongest challenge to the above conclusion?\nis_strongest_challenge(challenges(A)) ::: (A)\nis_strongest_challenge(challenges(B)) ::: (B)\nis_strongest_challenge(challenges(C)) ::: (C)\nis_strongest_challenge(challenges(D)) ::: (D)"
    ]
  },
  {
    "id": 536,
    "context": "The function of the government is to satisfy the real needs of the people.Unless the government knows what the people really need, the government cannot meet those needs.Free speech can ensure that government officials hear such demand information.Therefore, for a healthy country, free speech is essential.",
    "question": "If the following statement is true, which one cannot weaken the conclusion of the above argument?",
    "answer": "A",
    "options": [
      "A.Freedom of expression is not sufficient to meet the needs of the people, and good social order is also indispensable.",
      "B.The legitimate function of the government is not to meet the needs of the people, but to provide the people with equal opportunities.",
      "C.Government officials are diligent and loyal to the people and do their due diligence.They already know what the people need and are dissatisfied.",
      "D.Free speech leads to a lot of noise and is easy to disrupt the social order, and good social order is a prerequisite for the government to meet the needs of the people."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens_conclusion = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], weakens_conclusion(s)) ::: Each statement is assumed to weaken the conclusion unless proven otherwise\n\n# Options\nQuestion ::: If the following statement is true, which one cannot weaken the conclusion of the above argument?\nNot(weakens_conclusion(A)) ::: (A)\nNot(weakens_conclusion(B)) ::: (B)\nNot(weakens_conclusion(C)) ::: (C)\nNot(weakens_conclusion(D)) ::: (D)"
    ]
  },
  {
    "id": 537,
    "context": "Zhang Qiang? When the economy in a region is sluggish, many people are unemployed, so they reduce their living expenses, resulting in more unemployment and worsening the economy.The economy continued to deteriorate, and finally prices fell to the lowest point.Low prices have stimulated people to increase their living consumption, and increased consumption has led to improved economic conditions.Li Ming? If people are unemployed, they will not be able to increase their consumption, nor will they have the money to buy goods other than the necessities of life.Therefore, falling prices to the lowest point will not lead to an improvement in economic conditions.",
    "question": "If the following statement is true, which one can best weaken Li Ming's rebuttal to Zhang Qiang?",
    "answer": "D",
    "options": [
      "A.After the economic situation improves, the company will hire more people, and many people who are reemployed will buy the goods that have been delayed.",
      "B.Even if the economic situation continues to deteriorate, consumers still believe that the economic situation will eventually improve.",
      "C.Even when the economy is extremely deteriorating, the unemployed must continue to buy necessities such as food.",
      "D.During the period of economic deterioration, even unemployed people will compress expenditures; when prices fall to the lowest point, they will have savings for consumption."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Zhang_Qiang, Li_Ming])\neconomic_conditions = EnumSort([sluggish, deteriorating, lowest_point, improving])\nactions = EnumSort([reduce_expenses, increase_consumption, buy_necessities, save_for_consumption])\nemployment_status = EnumSort([employed, unemployed])\n\n# Constraints\nForAll([p:people], Implies(economic_conditions == sluggish, actions(p) == reduce_expenses)) ::: When the economy is sluggish, people reduce their living expenses\nForAll([p:people], Implies(economic_conditions == lowest_point, actions(p) == increase_consumption)) ::: Low prices stimulate increased consumption\nForAll([p:people], Implies(employment_status == unemployed, Not(actions(p) == increase_consumption))) ::: Unemployed people cannot increase consumption\nForAll([p:people], Implies(employment_status == unemployed, actions(p) == buy_necessities)) ::: Unemployed people buy only necessities\n\n# Options\nQuestion ::: If the following statement is true, which one can best weaken Li Ming's rebuttal to Zhang Qiang?\nis_best_weaken(Exists([p:people], And(economic_conditions == improving, employment_status == employed, actions(p) == increase_consumption))) ::: (A)\nis_best_weaken(Exists([p:people], And(economic_conditions == deteriorating, actions(p) == believe_improvement))) ::: (B)\nis_best_weaken(Exists([p:people], And(economic_conditions == extremely_deteriorating, actions(p) == buy_necessities))) ::: (C)\nis_best_weaken(Exists([p:people], And(economic_conditions == lowest_point, actions(p) == save_for_consumption))) ::: (D)"
    ]
  },
  {
    "id": 538,
    "context": "Genetic testing of the fetus is morally wrong.People have no right to kill a potential living organism simply because it does not accept the sex of a potential living organism, or because it has a certain physiological defect.",
    "question": "If the following statement is true, which one provides the strongest support for the above statement?",
    "answer": "B",
    "options": [
      "A.If the baby's sex is allowed to be selected in advance, it will cause the imbalance of the sex ratio of the next generation and cause serious social problems.",
      "B.All human beings are created equal, whether male or female, or whether their body is defective.",
      "C.People with physical disabilities can also make great contributions.For example, Hawking's physical condition is terrible, but he is known as contemporary Einstein.",
      "D.Women can also achieve excellent results and win the respect of society."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports = Function([statements] -> [bool])\n\n# Constraints\nsupports(A) ::: If the baby's sex is allowed to be selected in advance, it will cause the imbalance of the sex ratio of the next generation and cause serious social problems.\nsupports(B) ::: All human beings are created equal, whether male or female, or whether their body is defective.\nsupports(C) ::: People with physical disabilities can also make great contributions. For example, Hawking's physical condition is terrible, but he is known as contemporary Einstein.\nsupports(D) ::: Women can also achieve excellent results and win the respect of society.\n\n# Options\nQuestion ::: If the following statement is true, which one provides the strongest support for the above statement?\nis_strongest_support(supports(A)) ::: (A)\nis_strongest_support(supports(B)) ::: (B)\nis_strongest_support(supports(C)) ::: (C)\nis_strongest_support(supports(D)) ::: (D)"
    ]
  },
  {
    "id": 539,
    "context": "Statistics show that those who perpetually practice Tai Chi have the same average life expectancy as those who never practice Tai Chi.This shows that Tai Chi can't strengthen your body and prolong life.",
    "question": "If the following statement is true, which one can weaken the above argument most powerfully?",
    "answer": "C",
    "options": [
      "A.Some athletes are physically strong, but their life expectancy is lower than that of ordinary people.",
      "B.Tai Chi movement is gentle and soothing, persevering all year round, it can relieve muscles and promote blood circulation, nourish qi and calm the mind.",
      "C.Among those who insist on playing Tai Chi all the year round, there are many frail and sick people.",
      "D.Tai Chi exercise is easy to develop, and there are no requirements for the venue and the physical fitness of athletes."
    ],
    "raw_logic_programs": [
      "# Declarations\npractices_tai_chi = EnumSort([perpetual_practitioner, non_practitioner])\nlife_expectancy = Function([practices_tai_chi] -> [int])\nstrengthens_body = Function([practices_tai_chi] -> [bool])\nprolongs_life = Function([practices_tai_chi] -> [bool])\n\n# Constraints\nlife_expectancy(perpetual_practitioner) == life_expectancy(non_practitioner) ::: those who perpetually practice Tai Chi have the same average life expectancy as those who never practice Tai Chi\nNot(strengthens_body(perpetual_practitioner)) ::: Tai Chi can't strengthen your body\nNot(prolongs_life(perpetual_practitioner)) ::: Tai Chi can't prolong life\n\n# Options\nQuestion ::: If the following statement is true, which one can weaken the above argument most powerfully?\nis_weakened(Exists([p:practices_tai_chi], And(strengthens_body(p), prolongs_life(p)))) ::: (A)\nis_weakened(Exists([p:practices_tai_chi], And(strengthens_body(p), prolongs_life(p)))) ::: (B)\nis_weakened(Exists([p:practices_tai_chi], And(strengthens_body(p), prolongs_life(p)))) ::: (C)\nis_weakened(Exists([p:practices_tai_chi], And(strengthens_body(p), prolongs_life(p)))) ::: (D)"
    ]
  },
  {
    "id": 540,
    "context": "There are 6 warehouses in a warehouse, in order from 1 to 6.There are 6 kinds of goods F, G, L, M, P, T.Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse.The following conditions must also be met when storing goods? (1) The warehouse number for storing G is larger than the warehouse number for storing L.(2) The warehouse number storing L is larger than the warehouse number storing T.(3) The warehouse number storing P is larger than the warehouse number storing F.(4) The warehouse storing T is next to the warehouse storing P.",
    "question": "Which of the following can accurately mark the goods stored in warehouses 1 to 3?",
    "answer": "A",
    "options": [
      "A.F, M, T",
      "B.G, M, F",
      "C.M, L, F",
      "D.M, T, F"
    ],
    "raw_logic_programs": [
      "# Declarations\nwarehouses = EnumSort([1, 2, 3, 4, 5, 6])\ngoods = EnumSort([F, G, L, M, P, T])\nstored_in = Function([goods] -> [warehouses])\n\n# Constraints\nDistinct([g:goods], stored_in(g)) ::: Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse\nstored_in(G) > stored_in(L) ::: The warehouse number for storing G is larger than the warehouse number for storing L\nstored_in(L) > stored_in(T) ::: The warehouse number storing L is larger than the warehouse number storing T\nstored_in(P) > stored_in(F) ::: The warehouse number storing P is larger than the warehouse number storing F\nOr(stored_in(T) == stored_in(P) + 1, stored_in(T) == stored_in(P) - 1) ::: The warehouse storing T is next to the warehouse storing P\n\n# Options\nQuestion ::: Which of the following can accurately mark the goods stored in warehouses 1 to 3?\nis_accurate([stored_in(F) == 1, stored_in(M) == 2, stored_in(T) == 3]) ::: (A)\nis_accurate([stored_in(G) == 1, stored_in(M) == 2, stored_in(F) == 3]) ::: (B)\nis_accurate([stored_in(M) == 1, stored_in(L) == 2, stored_in(F) == 3]) ::: (C)\nis_accurate([stored_in(M) == 1, stored_in(T) == 2, stored_in(F) == 3]) ::: (D)"
    ]
  },
  {
    "id": 541,
    "context": "There are 6 warehouses in a warehouse, in order from 1 to 6.There are 6 kinds of goods F, G, L, M, P, T.Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse.The following conditions must also be met when storing goods? (1) The warehouse number for storing G is larger than the warehouse number for storing L.(2) The warehouse number storing L is larger than the warehouse number storing T.(3) The warehouse number storing P is larger than the warehouse number storing F.(4) The warehouse storing T is next to the warehouse storing P.",
    "question": "Which of the following goods cannot be stored in warehouse No.4?",
    "answer": "B",
    "options": [
      "A.L",
      "B.G",
      "C.M",
      "D.P"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\nwarehouses = EnumSort([1, 2, 3, 4, 5, 6])\ngoods = EnumSort([F, G, L, M, P, T])\nstored_in = Function([goods] -> [warehouses])\n\n# Constraints\nDistinct([g:goods], stored_in(g)) ::: Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse\nstored_in(G) > stored_in(L) ::: The warehouse number for storing G is larger than the warehouse number for storing L\nstored_in(L) > stored_in(T) ::: The warehouse number storing L is larger than the warehouse number storing T\nstored_in(P) > stored_in(F) ::: The warehouse number storing P is larger than the warehouse number storing F\nOr(stored_in(T) == stored_in(P) + 1, stored_in(T) == stored_in(P) - 1) ::: The warehouse storing T is next to the warehouse storing P\n\n# Options\nQuestion ::: Which of the following goods cannot be stored in warehouse No.4?\nis_unsat(stored_in(L) == 4) ::: (A)\nis_unsat(stored_in(G) == 4) ::: (B)\nis_unsat(stored_in(M) == 4) ::: (C)\nis_unsat(stored_in(P) == 4) ::: (D)\n```"
    ]
  },
  {
    "id": 542,
    "context": "There are 6 warehouses in a warehouse, in order from 1 to 6.There are 6 kinds of goods F, G, L, M, P, T.Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse.The following conditions must also be met when storing goods? (1) The warehouse number for storing G is larger than the warehouse number for storing L.(2) The warehouse number storing L is larger than the warehouse number storing T.(3) The warehouse number storing P is larger than the warehouse number storing F.(4) The warehouse storing T is next to the warehouse storing P.",
    "question": "If there is exactly one warehouse between the warehouse where M is stored and the warehouse where G is stored, how many kinds of goods are stored in the warehouse?",
    "answer": "C",
    "options": [
      "A.2 rooms",
      "B.3 rooms",
      "C.4",
      "D.5 rooms"
    ],
    "raw_logic_programs": [
      "# Declarations\nwarehouses = EnumSort([1, 2, 3, 4, 5, 6])\ngoods = EnumSort([F, G, L, M, P, T])\nstored_in = Function([goods] -> [warehouses])\n\n# Constraints\nDistinct([g:goods], stored_in(g)) ::: Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse\nstored_in(G) > stored_in(L) ::: The warehouse number for storing G is larger than the warehouse number for storing L\nstored_in(L) > stored_in(T) ::: The warehouse number storing L is larger than the warehouse number storing T\nstored_in(P) > stored_in(F) ::: The warehouse number storing P is larger than the warehouse number storing F\nOr(stored_in(T) == stored_in(P) + 1, stored_in(T) == stored_in(P) - 1) ::: The warehouse storing T is next to the warehouse storing P\n\n# Options\nQuestion ::: If there is exactly one warehouse between the warehouse where M is stored and the warehouse where G is stored, how many kinds of goods are stored in the warehouse?\nis_valid(Count([w:warehouses], Exists([g:goods], stored_in(g) == w)) == 2) ::: (A)\nis_valid(Count([w:warehouses], Exists([g:goods], stored_in(g) == w)) == 3) ::: (B)\nis_valid(Count([w:warehouses], Exists([g:goods], stored_in(g) == w)) == 4) ::: (C)\nis_valid(Count([w:warehouses], Exists([g:goods], stored_in(g) == w)) == 5) ::: (D)"
    ]
  },
  {
    "id": 543,
    "context": "There are 6 warehouses in a warehouse, in order from 1 to 6.There are 6 kinds of goods F, G, L, M, P, T.Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse.The following conditions must also be met when storing goods? (1) The warehouse number for storing G is larger than the warehouse number for storing L.(2) The warehouse number storing L is larger than the warehouse number storing T.(3) The warehouse number storing P is larger than the warehouse number storing F.(4) The warehouse storing T is next to the warehouse storing P.",
    "question": "Which of the following warehouses may store goods L?",
    "answer": "C",
    "options": [
      "A.Warehouse No.1",
      "Storehouse B.3",
      "C.Warehouse No.5",
      "D.Warehouse No.6"
    ],
    "raw_logic_programs": [
      "# Declarations\nwarehouses = EnumSort([1, 2, 3, 4, 5, 6])\ngoods = EnumSort([F, G, L, M, P, T])\nstored_in = Function([goods] -> [warehouses])\n\n# Constraints\nDistinct([g:goods], stored_in(g)) ::: Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse\nstored_in(G) > stored_in(L) ::: The warehouse number for storing G is larger than the warehouse number for storing L\nstored_in(L) > stored_in(T) ::: The warehouse number storing L is larger than the warehouse number storing T\nstored_in(P) > stored_in(F) ::: The warehouse number storing P is larger than the warehouse number storing F\nOr(stored_in(T) == stored_in(P) + 1, stored_in(T) == stored_in(P) - 1) ::: The warehouse storing T is next to the warehouse storing P\n\n# Options\nQuestion ::: Which of the following warehouses may store goods L?\nis_sat(stored_in(L) == 1) ::: (A)\nis_sat(stored_in(L) == 3) ::: (B)\nis_sat(stored_in(L) == 5) ::: (C)\nis_sat(stored_in(L) == 6) ::: (D)"
    ]
  },
  {
    "id": 544,
    "context": "There are 6 warehouses in a warehouse, in order from 1 to 6.There are 6 kinds of goods F, G, L, M, P, T.Each warehouse stores exactly one of 6 kinds of goods, and different kinds of goods cannot be stored in the same warehouse.The following conditions must also be met when storing goods? (1) The warehouse number for storing G is larger than that for storing L (2) The warehouse number storing L is larger than the warehouse number storing T.(3) The warehouse number storing P is larger than the warehouse number storing F.(4) The warehouse storing T is next to the warehouse storing P.",
    "question": "Which of the following must be false?",
    "answer": "D",
    "options": [
      "A.The warehouse storing F is next to the warehouse storing M",
      "B.The warehouse storing G is next to the warehouse storing M",
      "C.The warehouse storing P is next to the warehouse storing L",
      "D.The warehouse storing L is next to the warehouse storing F"
    ],
    "raw_logic_programs": [
      "# Declarations\nwarehouses = EnumSort([1, 2, 3, 4, 5, 6])\ngoods = EnumSort([F, G, L, M, P, T])\nstored_in = Function([goods] -> [warehouses])\n\n# Constraints\nstored_in(G) > stored_in(L) ::: The warehouse number for storing G is larger than that for storing L\nstored_in(L) > stored_in(T) ::: The warehouse number storing L is larger than the warehouse number storing T\nstored_in(P) > stored_in(F) ::: The warehouse number storing P is larger than the warehouse number storing F\nOr(stored_in(T) == stored_in(P) + 1, stored_in(T) == stored_in(P) - 1) ::: The warehouse storing T is next to the warehouse storing P\n\n# Options\nQuestion ::: Which of the following must be false?\nis_false(Or(stored_in(F) == stored_in(M) + 1, stored_in(F) == stored_in(M) - 1)) ::: (A) The warehouse storing F is next to the warehouse storing M\nis_false(Or(stored_in(G) == stored_in(M) + 1, stored_in(G) == stored_in(M) - 1)) ::: (B) The warehouse storing G is next to the warehouse storing M\nis_false(Or(stored_in(P) == stored_in(L) + 1, stored_in(P) == stored_in(L) - 1)) ::: (C) The warehouse storing P is next to the warehouse storing L\nis_false(Or(stored_in(L) == stored_in(F) + 1, stored_in(L) == stored_in(F) - 1)) ::: (D) The warehouse storing L is next to the warehouse storing F"
    ]
  },
  {
    "id": 545,
    "context": "Seven people from G, H, J, K, L, M and O traveled together.In their 4-day camping life, two people are scheduled to cook for everyone every day.It is required that the four-day staff arrangement cannot be repeated, and there is exactly one person on duty for two days.In addition, the duty arrangement must also meet the following conditions? (1) J should be placed on the next day of duty H.(2) The person on duty for two days must be on the fourth day, not the third day.(3) G must be on the same day as one of J and O.(4) Arrange K at least one day on the first or second day.(5) O must be on the third day.",
    "question": "Which two of the following cannot be ranked together?",
    "answer": "C",
    "options": [
      "A.H and K",
      "B.H and M",
      "C.J and O",
      "D.K and L"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\npeople = EnumSort([G, H, J, K, L, M, O])\ndays = EnumSort([1, 2, 3, 4])\ncooks = Function([days] -> [Set(people)])\n\n# Constraints\nForAll([d:days], Count([p:people], p in cooks(d)) == 2) ::: Two people are scheduled to cook for everyone every day\nDistinct([cooks(1), cooks(2), cooks(3), cooks(4)]) ::: The four-day staff arrangement cannot be repeated\nExists([p:people], Count([d:days], p in cooks(d)) == 2) ::: There is exactly one person on duty for two days\nExists([p:people], And(Count([d:days], p in cooks(d)) == 2, p in cooks(4), Not(p in cooks(3)))) ::: The person on duty for two days must be on the fourth day, not the third day\nForAll([d:days], Implies(d == 2, Exists([p:people], And(p == J, p in cooks(d), H in cooks(d-1))))) ::: J should be placed on the next day of duty H\nExists([d:days], And(G in cooks(d), Or(J in cooks(d), O in cooks(d)))) ::: G must be on the same day as one of J and O\nExists([d:days], Or(K in cooks(1), K in cooks(2))) ::: Arrange K at least one day on the first or second day\nO in cooks(3) ::: O must be on the third day\n\n# Options\nQuestion ::: Which two of the following cannot be ranked together?\nis_unsat(Exists([d:days], And(H in cooks(d), K in cooks(d)))) ::: (A)\nis_unsat(Exists([d:days], And(H in cooks(d), M in cooks(d)))) ::: (B)\nis_unsat(Exists([d:days], And(J in cooks(d), O in cooks(d)))) ::: (C)\nis_unsat(Exists([d:days], And(K in cooks(d), L in cooks(d)))) ::: (D)\n```"
    ]
  },
  {
    "id": 546,
    "context": "Seven people from G, H, J, K, L, M and O traveled together.In their 4-day camping life, two people are scheduled to cook for everyone every day.It is required that the four-day staff arrangement cannot be repeated, and there is exactly one person on duty for two days.In addition, the duty arrangement must also meet the following conditions? (1) J should be placed on the next day of duty H.(2) The person on duty for two days must be on the fourth day, not the third day.(3) G must be on the same day as one of J and O.(4) Arrange K at least one day on the first or second day.(5) O must be on the third day.",
    "question": "Which of the following must be ranked the next day?",
    "answer": "B",
    "options": [
      "A.G",
      "B.J",
      "C.K",
      "D.L"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\npeople = EnumSort([G, H, J, K, L, M, O])\ndays = EnumSort([1, 2, 3, 4])\ncooks = Function([days] -> [Set(people)])\n\n# Constraints\nForAll([d:days], Count([p:people], p in cooks(d)) == 2) ::: Two people are scheduled to cook each day\nDistinct([cooks(1), cooks(2), cooks(3), cooks(4)]) ::: The four-day staff arrangement cannot be repeated\nExists([p:people], Count([d:days], p in cooks(d)) == 2) ::: There is exactly one person on duty for two days\nExists([p:people], And(p in cooks(4), Count([d:days], p in cooks(d)) == 2)) ::: The person on duty for two days must be on the fourth day\nForAll([d:days], Implies(d < 4, Not(Exists([p:people], And(p in cooks(d), p in cooks(d+1)))))) ::: No one is on duty for two consecutive days except the person on duty for two days\nExists([d:days], And(H in cooks(d), J in cooks(d+1))) ::: J should be placed on the next day of duty H\nExists([d:days], And(G in cooks(d), Or(J in cooks(d), O in cooks(d)))) ::: G must be on the same day as one of J and O\nExists([d:days], And(d <= 2, K in cooks(d))) ::: Arrange K at least one day on the first or second day\nO in cooks(3) ::: O must be on the third day\n\n# Options\nQuestion ::: Which of the following must be ranked the next day?\nis_must_be_next_day(Exists([d:days], And(G in cooks(d), G in cooks(d+1)))) ::: (A)\nis_must_be_next_day(Exists([d:days], And(J in cooks(d), J in cooks(d+1)))) ::: (B)\nis_must_be_next_day(Exists([d:days], And(K in cooks(d), K in cooks(d+1)))) ::: (C)\nis_must_be_next_day(Exists([d:days], And(L in cooks(d), L in cooks(d+1)))) ::: (D)\n```"
    ]
  },
  {
    "id": 547,
    "context": "Seven people from G, H, J, K, L, M and O traveled together.In their 4-day camping life, two people are scheduled to cook for everyone every day.It is required that the four-day staff arrangement cannot be repeated, and there is exactly one person on duty for two days.In addition, the duty arrangement must also meet the following conditions? (1) J should be placed on the next day of duty H.(2) The person on duty for two days must be on the fourth day, not the third day.(3) G must be on the same day as one of J and O.(4) Arrange K at least one day on the first or second day.(5) O must be on the third day.",
    "question": "Which of the following people can't be on duty for two days?",
    "answer": "A",
    "options": [
      "A.G",
      "B.H",
      "C.K",
      "D.L"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([G, H, J, K, L, M, O])\ndays = EnumSort([1, 2, 3, 4])\ncooks = Function([days] -> [Set(people)])\n\n# Constraints\nForAll([d:days], Count([p:people], p in cooks(d)) == 2) ::: Two people are scheduled to cook for everyone every day\nDistinct([cooks(1), cooks(2), cooks(3), cooks(4)]) ::: The four-day staff arrangement cannot be repeated\nExists([p:people], Count([d:days], p in cooks(d)) == 2) ::: There is exactly one person on duty for two days\nForAll([p:people], Implies(Count([d:days], p in cooks(d)) == 2, 4 in [d:days] where p in cooks(d))) ::: The person on duty for two days must be on the fourth day, not the third day\nForAll([d:days], Implies(d == 2, H in cooks(d-1))) ::: J should be placed on the next day of duty H\nExists([d:days], And(G in cooks(d), Or(J in cooks(d), O in cooks(d)))) ::: G must be on the same day as one of J and O\nExists([d:days], And(d <= 2, K in cooks(d))) ::: Arrange K at least one day on the first or second day\nO in cooks(3) ::: O must be on the third day\n\n# Options\nQuestion ::: Which of the following people can't be on duty for two days?\nis_unsat(Count([d:days], G in cooks(d)) == 2) ::: (A)\nis_unsat(Count([d:days], H in cooks(d)) == 2) ::: (B)\nis_unsat(Count([d:days], K in cooks(d)) == 2) ::: (C)\nis_unsat(Count([d:days], L in cooks(d)) == 2) ::: (D)"
    ]
  },
  {
    "id": 548,
    "context": "Seven people from G, H, J, K, L, M and O traveled together.In their 4-day camping life, two people are scheduled to cook for everyone every day.It is required that the four-day staff arrangement cannot be repeated, and there is exactly one person on duty for two days.In addition, the duty arrangement must also meet the following conditions? (1) J should be placed on the next day of duty H.(2) The person on duty for two days must be on the fourth day, not the third day.(3) G must be on the same day as one of J and O.(4) Arrange K at least one day on the first or second day.(5) O must be on the third day.",
    "question": "If L is a two-day shift, which of the following must be on the same day as L?",
    "answer": "D",
    "options": [
      "A.G",
      "B.H",
      "C.J",
      "D.M"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\npeople = EnumSort([G, H, J, K, L, M, O])\ndays = EnumSort([day1, day2, day3, day4])\ncooks = Function([days] -> [Set(people)])\n\n# Constraints\nForAll([d:days], Count([p:people], p in cooks(d)) == 2) ::: Two people are scheduled to cook for everyone every day\nDistinct([cooks(day1), cooks(day2), cooks(day3), cooks(day4)]) ::: The four-day staff arrangement cannot be repeated\nExists([p:people], Count([d:days], p in cooks(d)) == 2) ::: There is exactly one person on duty for two days\nExists([p:people], And(Count([d:days], p in cooks(d)) == 2, p in cooks(day4), Not(p in cooks(day3)))) ::: The person on duty for two days must be on the fourth day, not the third day\nForAll([d:days], Implies(d == day2, J in cooks(d) -> H in cooks(day1))) ::: J should be placed on the next day of duty H\nExists([d:days], And(G in cooks(d), Or(J in cooks(d), O in cooks(d)))) ::: G must be on the same day as one of J and O\nOr(K in cooks(day1), K in cooks(day2)) ::: Arrange K at least one day on the first or second day\nO in cooks(day3) ::: O must be on the third day\n\n# Options\nQuestion ::: If L is a two-day shift, which of the following must be on the same day as L?\nis_must_be_on_same_day(L, G) ::: (A)\nis_must_be_on_same_day(L, H) ::: (B)\nis_must_be_on_same_day(L, J) ::: (C)\nis_must_be_on_same_day(L, M) ::: (D)\n```"
    ]
  },
  {
    "id": 549,
    "context": "Seven people from G, H, J, K, L, M and O traveled together.In their 4-day camping life, two people are scheduled to cook for everyone every day.It is required that the four-day staff arrangement cannot be repeated, and there is exactly one person on duty for two days.In addition, the duty arrangement must also meet the following conditions? (1) J should be placed on the next day of duty H.(2) The person on duty for two days must be on the fourth day, not the third day.(3) G must be on the same day as one of J and O.(4) Arrange K at least one day on the first or second day.(5) O must be on the third day.",
    "question": "Which of the following people can be ranked on any day?",
    "answer": "D",
    "options": [
      "A.H",
      "B.J",
      "C.K",
      "D.L"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([G, H, J, K, L, M, O])\ndays = EnumSort([1, 2, 3, 4])\ncooks = Function([days] -> [Set(people)])\n\n# Constraints\nForAll([d:days], Count([p:people], p in cooks(d)) == 2) ::: Two people are scheduled to cook for everyone every day\nDistinct([d1:days, d2:days], cooks(d1) == cooks(d2)) ::: The four-day staff arrangement cannot be repeated\nExists([p:people], Count([d:days], p in cooks(d)) == 2) ::: There is exactly one person on duty for two days\nExists([p:people], And(p in cooks(4), Not(p in cooks(3)))) ::: The person on duty for two days must be on the fourth day, not the third day\nForAll([d:days], Implies(H in cooks(d), J in cooks(d + 1))) ::: J should be placed on the next day of duty H\nExists([d:days], And(G in cooks(d), Or(J in cooks(d), O in cooks(d)))) ::: G must be on the same day as one of J and O\nOr(K in cooks(1), K in cooks(2)) ::: Arrange K at least one day on the first or second day\nO in cooks(3) ::: O must be on the third day\n\n# Options\nQuestion ::: Which of the following people can be ranked on any day?\nis_any_day(ForAll([d:days], H in cooks(d))) ::: (A)\nis_any_day(ForAll([d:days], J in cooks(d))) ::: (B)\nis_any_day(ForAll([d:days], K in cooks(d))) ::: (C)\nis_any_day(ForAll([d:days], L in cooks(d))) ::: (D)"
    ]
  },
  {
    "id": 550,
    "context": "Medieval Arabs have many ancient Greek manuscripts.When needed, they translated them into Arabic.Medieval Arab philosophers were very interested in Aristotle 's Poetics, which was obviously not shared by Arab poets, because a poet who was interested in Poetics must want to read Homer 's poems, Aristotle himself often quotes Homer's poems.However, Homer's poems were not translated into Arabic until now.",
    "question": "If the following statement is true, which one strongly supports the above argument?",
    "answer": "A",
    "options": [
      "A.There are some medieval Arabic translators who own the manuscripts of Homer poems in ancient Greek.",
      "B.Aristotle's 'On Poetry' is often quoted and commented on by modern Arabic poets.",
      "C.Aristotle's 'Poetry Theory' is mostly related to drama.Medieval Arabs also wrote dramas and performed them.",
      "D.Medieval Arabic series of stories, such as 'The Night of the Arabs', are very similar to some parts of Homer's epic"
    ],
    "raw_logic_programs": [
      "# Declarations\nphilosophers = EnumSort([medieval_arab_philosophers])\npoets = EnumSort([medieval_arab_poets])\ntexts = EnumSort([aristotles_poetics, homers_poems])\ntranslated = Function([texts] -> [bool])\ninterested = Function([philosophers, texts] -> [bool])\nwants_to_read = Function([poets, texts] -> [bool])\n\n# Constraints\nForAll([p:philosophers], interested(p, aristotles_poetics)) ::: Medieval Arab philosophers were very interested in Aristotle's Poetics\nForAll([p:poets], Implies(interested(p, aristotles_poetics), wants_to_read(p, homers_poems))) ::: A poet who was interested in Poetics must want to read Homer's poems\nNot(translated(homers_poems)) ::: Homer's poems were not translated into Arabic until now\n\n# Options\nQuestion ::: If the following statement is true, which one strongly supports the above argument?\nis_strong_support(Exists([t:translators], owns(t, homers_poems))) ::: (A)\nis_strong_support(Exists([p:poets], quotes_and_comments(p, aristotles_poetics))) ::: (B)\nis_strong_support(related_to_drama(aristotles_poetics) & wrote_and_performed_dramas(medieval_arabs)) ::: (C)\nis_strong_support(similar_to_homers_epic(arabic_stories)) ::: (D)"
    ]
  },
  {
    "id": 551,
    "context": "The Fed has always wanted to launch the third quantitative easing monetary policy (QE3 for short) to promote the recovery of the US economy.If the Fed launches QE3, the global supply of dollars will increase substantially again, and countries have to buy dollar assets to maintain exchange rate stability.If countries buy dollar assets, they will increase their inflationary pressures.If they do not want to import inflation, each country has to let its currency appreciate.If the local currency appreciates, it will inhibit domestic exports and cause economic decline.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "B",
    "options": [
      "A.If the Fed launches QE3, if other countries want to avoid their own economic decline, they should not buy US dollar assets.",
      "B.Other countries are either facing the pressure of imported inflation or facing the risk of economic decline.",
      "C.If there is no imported inflation in other countries and there is no appreciation of the local currency, the Fed has not launched QE3.",
      "D.If other countries do not encounter the pressure of imported inflation, they will not let their currencies appreciate."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([launch_QE3, increase_dollar_supply, buy_dollar_assets, increase_inflation_pressure, currency_appreciation, inhibit_exports, economic_decline])\ncauses = Function([events] -> [bool])\n\n# Constraints\ncauses(launch_QE3) -> causes(increase_dollar_supply) ::: If the Fed launches QE3, the global supply of dollars will increase substantially again\ncauses(increase_dollar_supply) -> causes(buy_dollar_assets) ::: countries have to buy dollar assets to maintain exchange rate stability\ncauses(buy_dollar_assets) -> causes(increase_inflation_pressure) ::: If countries buy dollar assets, they will increase their inflationary pressures\ncauses(Not(increase_inflation_pressure)) -> causes(currency_appreciation) ::: If they do not want to import inflation, each country has to let its currency appreciate\ncauses(currency_appreciation) -> causes(inhibit_exports) ::: If the local currency appreciates, it will inhibit domestic exports\ncauses(inhibit_exports) -> causes(economic_decline) ::: If the local currency appreciates, it will cause economic decline\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_valid(Implies(causes(launch_QE3), Not(causes(buy_dollar_assets)) -> Not(causes(economic_decline)))) ::: (A)\nis_valid(Or(causes(increase_inflation_pressure), causes(economic_decline))) ::: (B)\nis_valid(Implies(Not(causes(increase_inflation_pressure)) And Not(causes(currency_appreciation)), Not(causes(launch_QE3)))) ::: (C)\nis_valid(Implies(Not(causes(increase_inflation_pressure)), Not(causes(currency_appreciation)))) ::: (D)"
    ]
  },
  {
    "id": 552,
    "context": "On August 10, 2012, South Korean President Li Mingbo visited Dokdo (Japan called 'Takeshima'), which has a sovereignty dispute with Japan.According to public opinion survey results, after Li Mingbo visited Dokdo, his approval rating increased from 25.7% to 34.7%.",
    "question": "If the investigation result is true, which of the following statements must be true?",
    "answer": "B",
    "options": [
      "A.There are more Koreans who support Li Mingbo's visit to Dokdo than those who do not.",
      "B.After Li Mingbo visited Dokdo, some people who did not support him now turned to support him.",
      "C.Koreans who supported Li Mingbo before August 10, 2012 now continue to support him.",
      "D.Li Mingbo's visit to Dokdo is the reason for his increased support rate o"
    ],
    "raw_logic_programs": [
      "# Declarations\nsupport_rate_before = Real('support_rate_before')\nsupport_rate_after = Real('support_rate_after')\nsupporters_before = Int('supporters_before')\nsupporters_after = Int('supporters_after')\npopulation = Int('population')\n\n# Constraints\nsupport_rate_before == 25.7 / 100 ::: Li Mingbo's approval rating before the visit\nsupport_rate_after == 34.7 / 100 ::: Li Mingbo's approval rating after the visit\nsupporters_before == support_rate_before * population ::: Number of supporters before the visit\nsupporters_after == support_rate_after * population ::: Number of supporters after the visit\n\n# Options\nQuestion ::: If the investigation result is true, which of the following statements must be true?\nis_true(supporters_after > supporters_before) ::: (A) There are more Koreans who support Li Mingbo's visit to Dokdo than those who do not.\nis_true(supporters_after > supporters_before) ::: (B) After Li Mingbo visited Dokdo, some people who did not support him now turned to support him.\nis_true(ForAll([p:population], Implies(p < supporters_before, p < supporters_after))) ::: (C) Koreans who supported Li Mingbo before August 10, 2012 now continue to support him.\nis_true(supporters_after > supporters_before) ::: (D) Li Mingbo's visit to Dokdo is the reason for his increased support rate."
    ]
  },
  {
    "id": 553,
    "context": "The modern French thinker Pascal argued this way? either there is a Christian God, or not.Assuming you believe in the existence of God and live in a Christian way, then if God does exist, you will receive endless well-being? if God does not exist, you will lose very little.However, suppose you do not believe in the existence of God and do not live in a Christian way.If God does not exist, you will not lose anything? if God does exist, you will be endlessly punished.So, don't hesitate anymore, choose to believe in the existence of God and live in a Christian way.",
    "question": "Which of the following best illustrates the logical loophole of this argument?",
    "answer": "D",
    "options": [
      "A.The argument incorrectly presupposes that a person can choose whether to believe or not to believe in God at will.",
      "B.Pascal changed the faith and turned it into a question about self-interest calculation.",
      "C.If God does not exist, we choose to believe in God, which will lead us to misunderstand the world and spend our lives in a confusing way.",
      "D.There are many religions in this world, and each religion has a god with unlimited power (God).They will impose unlimited punishment on those who do not believe in themselves."
    ],
    "raw_logic_programs": [
      "# Declarations\nbelief = EnumSort([believe, not_believe])\nexistence = EnumSort([exists, not_exists])\noutcome = EnumSort([endless_wellbeing, lose_little, lose_nothing, endless_punishment, misunderstanding])\n\n# Constraints\nForAll([b:belief, e:existence], Or(\n    And(b == believe, e == exists, outcome == endless_wellbeing),\n    And(b == believe, e == not_exists, outcome == lose_little),\n    And(b == not_believe, e == not_exists, outcome == lose_nothing),\n    And(b == not_believe, e == exists, outcome == endless_punishment)\n)) ::: Pascal's argument structure\n\n# Options\nQuestion ::: Which of the following best illustrates the logical loophole of this argument?\nis_loophole(Exists([b:belief], And(b == believe, outcome == misunderstanding))) ::: (A)\nis_loophole(Exists([b:belief], And(b == believe, outcome == self_interest_calculation))) ::: (B)\nis_loophole(Exists([b:belief], And(b == believe, outcome == misunderstanding))) ::: (C)\nis_loophole(Exists([b:belief], And(b == not_believe, outcome == punishment_from_other_gods))) ::: (D)"
    ]
  },
  {
    "id": 554,
    "context": "Politicians 'economists who claimed that consumer prices rose by less than 3% last year were wrong.Obviously, they haven't bought anything at all recently.Gasoline prices have risen by 10% last year.The cost of my ride went up by 12%.The newspaper went up by 15%.The detergent went up by 15%.The bread went up by 50%.'",
    "question": "The above argument by politicians is most vulnerable to criticism because",
    "answer": "B",
    "options": [
      "A.It accuses the morality of economists, not to refute their arguments.",
      "B.It uses a small sample that is not representative as evidence.",
      "C.It tries to achieve the purpose of persuasion by resorting to feelings.",
      "D.It incorrectly shows that the economists mentioned are not experts in the field of consumer prices."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([politicians, economists])\nclaims = EnumSort([consumer_prices_rise, gasoline_price_rise, ride_cost_rise, newspaper_price_rise, detergent_price_rise, bread_price_rise])\nevidence = Function([arguments, claims] -> [bool])\n\n# Constraints\nevidence(politicians, gasoline_price_rise) == True ::: Gasoline prices have risen by 10% last year\nevidence(politicians, ride_cost_rise) == True ::: The cost of my ride went up by 12%\nevidence(politicians, newspaper_price_rise) == True ::: The newspaper went up by 15%\nevidence(politicians, detergent_price_rise) == True ::: The detergent went up by 15%\nevidence(politicians, bread_price_rise) == True ::: The bread went up by 50%\nevidence(economists, consumer_prices_rise) == False ::: Economists claimed that consumer prices rose by less than 3% last year\n\n# Options\nQuestion ::: The above argument by politicians is most vulnerable to criticism because\nis_vulnerable_to(B) ::: (A) It accuses the morality of economists, not to refute their arguments.\nis_vulnerable_to(A) ::: (B) It uses a small sample that is not representative as evidence.\nis_vulnerable_to(C) ::: (C) It tries to achieve the purpose of persuasion by resorting to feelings.\nis_vulnerable_to(D) ::: (D) It incorrectly shows that the economists mentioned are not experts in the field of consumer prices."
    ]
  },
  {
    "id": 555,
    "context": "The unsophisticated mobile fraud messages like 'X X Group held the anniversary celebration, your mobile phone number won the 100,000 yuan prize', even after being exposed by the media, it still appears repeatedly.Professional scammers prefer to use low-quality scam messages instead of designing more deceptive and more foolish text messages, which only shows that the scammers are too stupid and too undedicated.",
    "question": "If the following statement is true, which one strongly refutes the above conclusion?-",
    "answer": "C",
    "options": [
      "A.The liar must be smart, otherwise it is impossible to deceive others.",
      "B.When a scammer swindles, he will find ways to avoid the police 's attention.",
      "C.If a scam has no effect, the scammer has eliminated it.",
      "D.Scammers use such text messages to 'catch' people who might be fooled.They want to filter out smart people from the beginning."
    ],
    "raw_logic_programs": [
      "# Declarations\nscammers = EnumSort([professional, unsophisticated])\nmessages = EnumSort([low_quality, high_quality])\nactions = EnumSort([design, avoid_police, eliminate, filter])\neffects = EnumSort([effective, ineffective])\ntraits = EnumSort([smart, stupid, dedicated, undedicated])\n\n# Constraints\nForAll([s:scammers], Exists([m:messages], And(m == low_quality, s == professional))) ::: Professional scammers prefer to use low-quality scam messages\nForAll([s:scammers], Exists([t:traits], And(t == stupid, t == undedicated, s == professional))) ::: Scammers are too stupid and too undedicated\n\n# Options\nQuestion ::: If the following statement is true, which one strongly refutes the above conclusion?\nis_refutation(Exists([s:scammers], And(s == professional, Exists([t:traits], t == smart)))) ::: (A) The liar must be smart, otherwise it is impossible to deceive others.\nis_refutation(Exists([s:scammers], Exists([a:actions], a == avoid_police))) ::: (B) When a scammer swindles, he will find ways to avoid the police's attention.\nis_refutation(Exists([s:scammers], Exists([a:actions], And(a == eliminate, Exists([e:effects], e == ineffective))))) ::: (C) If a scam has no effect, the scammer has eliminated it.\nis_refutation(Exists([s:scammers], Exists([a:actions], a == filter))) ::: (D) Scammers use such text messages to 'catch' people who might be fooled. They want to filter out smart people from the beginning."
    ]
  },
  {
    "id": 556,
    "context": "Consider three numbers? 0.9, 1, 1.1.The difference between the latter number and the previous one is only 0.1.If you let each number multiply 10 times with itself, 0.9 becomes 0.31, 1 is still 1, 1.1 becomes 2.85, which is nearly 10 times 0.31 and nearly 3 times 1.This is how the gap is created!",
    "question": "Which of the following conclusions cannot be reasonably drawn from the above statement?",
    "answer": "B",
    "options": [
      "A.A few centimeters are lost, thousands of miles away.",
      "B.Details determine success or failure, character determines fate.",
      "C.The continuous accumulation and amplification of small differences can produce huge differences.",
      "D.Everyone must be aware of every step in the life process? small wins may accumulate big wins, and small wins may make big mistakes."
    ],
    "raw_logic_programs": [
      "# Declarations\nnumbers = EnumSort([0.9, 1, 1.1])\npowers = Function([numbers] -> [float])\n\n# Constraints\npowers(0.9) == 0.31 ::: 0.9 becomes 0.31 when multiplied 10 times with itself\npowers(1) == 1 ::: 1 is still 1 when multiplied 10 times with itself\npowers(1.1) == 2.85 ::: 1.1 becomes 2.85 when multiplied 10 times with itself\n\n# Options\nQuestion ::: Which of the following conclusions cannot be reasonably drawn from the above statement?\nis_unreasonable(\"A few centimeters are lost, thousands of miles away.\") ::: (A)\nis_unreasonable(\"Details determine success or failure, character determines fate.\") ::: (B)\nis_unreasonable(\"The continuous accumulation and amplification of small differences can produce huge differences.\") ::: (C)\nis_unreasonable(\"Everyone must be aware of every step in the life process; small wins may accumulate big wins, and small wins may make big mistakes.\") ::: (D)"
    ]
  },
  {
    "id": 557,
    "context": "Economist? The personal income tax in the United States is a progressive tax, and the tax law is extremely complicated.People who want to pay taxes honestly often make mistakes in reporting because of misunderstandings; and those who deliberately avoid taxes always find loopholes in tax laws.Generally speaking, the size of tax avoidance space is directly proportional to the complexity of the tax system, and the level of tax avoidance capacity is directly proportional to the taxpayer's income level.Most of the tax avoidance space created by complex taxes will be used by the rich, making progressive taxation less than the degree of progress required by the tax law, and its function of regulating distribution is also greatly weakened.",
    "question": "If the following statement is true, which one provides the strongest support for economists' above argument?",
    "answer": "C",
    "options": [
      "A.When filing taxes, 60% of the people in the United States need to hire professionals to report on their behalf, and 22% need to use tax reporting software to help them calculate.",
      "B.The Americans proposed the idea of â€‹â€‹'abolishing the progressive tax rate and implementing a single tax rate' in 1981.",
      "C.From 1988 to 2006, the income of the richest one in the United States increased from 15% to 22% of the national income, but their average tax rate fell from 24% to 22.8%.",
      "D.On September 17, 2011, the Wall Street movement broke out in the United States.Demonstrators claimed to represent 99 people in the United States to protest the greed and corruption of the financial industry and social injustice."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([A, B, C, D])\nsupports = Function([arguments] -> [bool])\n\n# Constraints\n# The problem description and question do not provide explicit constraints for the logic program, but we can infer the following:\n# The economist's argument is that the complexity of the tax system benefits the rich, reducing the effectiveness of progressive taxation.\n\n# Options\nQuestion ::: Which one provides the strongest support for economists' above argument?\nsupports(A) ::: (A) When filing taxes, 60% of the people in the United States need to hire professionals to report on their behalf, and 22% need to use tax reporting software to help them calculate.\nsupports(B) ::: (B) The Americans proposed the idea of 'abolishing the progressive tax rate and implementing a single tax rate' in 1981.\nsupports(C) ::: (C) From 1988 to 2006, the income of the richest one in the United States increased from 15% to 22% of the national income, but their average tax rate fell from 24% to 22.8%.\nsupports(D) ::: (D) On September 17, 2011, the Wall Street movement broke out in the United States. Demonstrators claimed to represent 99 people in the United States to protest the greed and corruption of the financial industry and social injustice."
    ]
  },
  {
    "id": 558,
    "context": "The weakness in a combat plan is the top secret in top secret, which will not leak out.However, the Japanese Self-Defense Force's 'Dive Island' plan announced by the Japanese media, in addition to predicting three future incidents on the Diaoyu Island, the Self-Defense Force will seize the island in five steps, also detailed the Self-Defense Force's weaknesses? no Ability to quickly transport large-scale troops from the North Sea and Kyushu Island to Okinawa to meet the needs of landing operations.",
    "question": "If the following statement is true, which one best explains this counterintuitive practice in Japan?",
    "answer": "C",
    "options": [
      "A.Japan 's announcement of the 'Obtaining the Island' plan is intended to test China 's response? If China 's response is not large, Japan will station troops on the Diaoyu Islands and surrounding islands.",
      "B.A few days ago, China and the Philippines confronted each other on Huangyan Island.Japan announced the plan to 'take four islands' to win over the Philippines and join forces to contain China.",
      "C.Japan's self-exposed weakness is to build public opinion in the country for the construction of amphibious warships with strong transportation capabilities? amphibious warships are offensive forces, while Japan's 'Peace Constitution' does not allow the SDF to develop offensive forces.",
      "D.Many Japanese hope that the United States will withdraw its troops from Japan.Japan 's self-disclosure of the Self-Defense Force 's weaknesses aims to tell the people that Japan needs the protection of the United States militarily."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ntruth = Function([statements] -> [bool])\n\n# Constraints\ntruth(A) ::: Japan's announcement of the 'Obtaining the Island' plan is intended to test China's response. If China's response is not large, Japan will station troops on the Diaoyu Islands and surrounding islands.\ntruth(B) ::: A few days ago, China and the Philippines confronted each other on Huangyan Island. Japan announced the plan to 'take four islands' to win over the Philippines and join forces to contain China.\ntruth(C) ::: Japan's self-exposed weakness is to build public opinion in the country for the construction of amphibious warships with strong transportation capabilities. Amphibious warships are offensive forces, while Japan's 'Peace Constitution' does not allow the SDF to develop offensive forces.\ntruth(D) ::: Many Japanese hope that the United States will withdraw its troops from Japan. Japan's self-disclosure of the Self-Defense Force's weaknesses aims to tell the people that Japan needs the protection of the United States militarily.\n\n# Options\nQuestion ::: If the following statement is true, which one best explains this counterintuitive practice in Japan?\nis_best_explanation(truth(A)) ::: (A)\nis_best_explanation(truth(B)) ::: (B)\nis_best_explanation(truth(C)) ::: (C)\nis_best_explanation(truth(D)) ::: (D)"
    ]
  },
  {
    "id": 559,
    "context": "Wildlife Conservation Organization? There is no killing without trading; without killing, people and nature can live in harmony.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.As long as there is killing, there must be business.",
      "B.As long as trading is prohibited, people and nature will live in harmony.",
      "C.Only when trading is prohibited, people and nature will live in harmony.",
      "D.The reason why man and nature cannot get along in harmony is because of the existence of killing."
    ],
    "raw_logic_programs": [
      "# Declarations\npropositions = EnumSort([killing, trading, harmony])\nimplies = Function([propositions, propositions] -> [bool])\n\n# Constraints\nimplies(killing, trading) ::: There is no killing without trading\nimplies(Not(killing), harmony) ::: Without killing, people and nature can live in harmony\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_valid(implies(killing, trading)) ::: (A) As long as there is killing, there must be business.\nis_valid(implies(Not(trading), harmony)) ::: (B) As long as trading is prohibited, people and nature will live in harmony.\nis_valid(And(Not(trading), harmony)) ::: (C) Only when trading is prohibited, people and nature will live in harmony.\nis_valid(implies(Not(harmony), killing)) ::: (D) The reason why man and nature cannot get along in harmony is because of the existence of killing."
    ]
  },
  {
    "id": 560,
    "context": "Some people have argued that inquiry is impossible, because a person can neither explore what he knows nor what he does not know.He can't explore what he knows, because he knows it, no need to explore; he can't explore what he doesn't know, because he doesn't know what he wants to explore.",
    "question": "Which of the following most accurately points to the logical loophole of the argument?",
    "answer": "D",
    "options": [
      "A.False preset? either you know what you are exploring, or you do n't know what you are exploring.",
      "B.Circular argument? Put the conclusion to be pre-arranged in the premise in advance.",
      "C.Strong words? rationally, the donkeys are poor, so they have to be irritated.",
      "D.Ambiguity fallacy? 'knowing' has two different meanings? knowing the answer to the question being explored? knowing the question to be explored."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([knows, does_not_know])\nactions = EnumSort([explore, not_explore])\nargument = Function([concepts] -> [actions])\n\n# Constraints\nargument(knows) == not_explore ::: He can't explore what he knows, because he knows it, no need to explore\nargument(does_not_know) == not_explore ::: He can't explore what he doesn't know, because he doesn't know what he wants to explore\n\n# Options\nQuestion ::: Which of the following most accurately points to the logical loophole of the argument?\nis_valid(Exists([c:concepts], argument(c) == explore)) ::: (A) False preset: either you know what you are exploring, or you don't know what you are exploring.\nis_valid(Exists([c:concepts], argument(c) == argument(c))) ::: (B) Circular argument: Put the conclusion to be pre-arranged in the premise in advance.\nis_valid(Exists([c:concepts], argument(c) == not_explore)) ::: (C) Strong words: rationally, the donkeys are poor, so they have to be irritated.\nis_valid(Exists([c:concepts], argument(c) == explore)) ::: (D) Ambiguity fallacy: 'knowing' has two different meanings: knowing the answer to the question being explored, knowing the question to be explored."
    ]
  },
  {
    "id": 561,
    "context": "The bank's credit card regulations stipulate that all transactions conducted with passwords are deemed to be the actions of the cardholder.This means that as long as the password is used when the credit card is stolen, the bank will regard it as the cardholder's own actions and will not be responsible for the losses incurred.Therefore, in order to make your credit card more secure, you should not set a password.",
    "question": "If the following statement is true, it can weaken the above conclusions, except",
    "answer": "A",
    "options": [
      "A.Relevant experts believe that it is safer to set a credit card without a password, but the expert's words may not be all right.",
      "B.When criminals forge credit cards with passwords, they must try to obtain their passwords in order to successfully steal them.",
      "C.When the credit card is lost, the password of the credit card can effectively prevent others from swiping the card.",
      "D.In the case of piracy, if the credit card is not set with a password, the court usually determines that the card owner is at fault and must bear no loss."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nweakens = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], weakens(s) == True) ::: Each statement can weaken the conclusion\n\n# Options\nQuestion ::: If the following statement is true, it can weaken the above conclusions, except\nis_exception(weakens(A)) ::: (A)\nis_exception(weakens(B)) ::: (B)\nis_exception(weakens(C)) ::: (C)\nis_exception(weakens(D)) ::: (D)"
    ]
  },
  {
    "id": 562,
    "context": "Some uneducated people have become outstanding writers, and more outstanding writers have received college education.Excellent writers are all sensitive and imaginative people, and only sensitive and imaginative people can write works that are touching.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.Only excellent writers can write touching works.",
      "B.Some sensitive and imaginative writers are not excellent writers.",
      "C.Writers who can write touching works are excellent writers.",
      "D.Some sensitive and imaginative writers have not received college education."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([uneducated, educated, outstanding_writers, excellent_writers, sensitive, imaginative])\nproperties = EnumSort([college_education, write_touching_works])\nhas_property = Function([people] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(p == outstanding_writers, Or(p == uneducated, has_property(p) == college_education))) ::: Some uneducated people have become outstanding writers, and more outstanding writers have received college education\nForAll([p:people], Implies(p == excellent_writers, And(p == sensitive, p == imaginative))) ::: Excellent writers are all sensitive and imaginative people\nForAll([p:people], Implies(has_property(p) == write_touching_works, And(p == sensitive, p == imaginative))) ::: Only sensitive and imaginative people can write works that are touching\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(ForAll([p:people], Implies(has_property(p) == write_touching_works, p == excellent_writers))) ::: (A) Only excellent writers can write touching works.\nis_must_true(Exists([p:people], And(p == sensitive, p == imaginative, Not(p == excellent_writers)))) ::: (B) Some sensitive and imaginative writers are not excellent writers.\nis_must_true(ForAll([p:people], Implies(has_property(p) == write_touching_works, p == excellent_writers))) ::: (C) Writers who can write touching works are excellent writers.\nis_must_true(Exists([p:people], And(p == sensitive, p == imaginative, Not(has_property(p) == college_education)))) ::: (D) Some sensitive and imaginative writers have not received college education."
    ]
  },
  {
    "id": 563,
    "context": "Generally speaking, an increase in the price of a certain product will result in a decrease in its sales volume, unless the price increases accompanied by an improvement in the quality of the product.In China, foreign brands of wine are an exception.The seven price rises of many foreign brands often result in increased sales, although the quality of those brands' wines has not changed much.",
    "question": "If the following statement is true, which one best explains the above anomalies?",
    "answer": "C",
    "options": [
      "A.Many consumers base their advertisements on mass media when deciding which wine to buy.",
      "B.People who buy wine regularly have a fixed preference for wine brands.",
      "C.Consumers often judge the quality of wine based on the price of wine.",
      "D.Wine retailers and producers can temporarily increase the sales of certain wines through price discounts."
    ],
    "raw_logic_programs": [
      "# Declarations\nproducts = EnumSort([foreign_wine, other_product])\nfactors = EnumSort([price, quality, sales_volume])\nchanges = EnumSort([increase, decrease, no_change])\neffect = Function([products, factors] -> [changes])\n\n# Constraints\nForAll([p:products], Implies(effect(p, price) == increase, effect(p, sales_volume) == decrease)) ::: Generally speaking, an increase in the price of a certain product will result in a decrease in its sales volume\nForAll([p:products], Implies(And(effect(p, price) == increase, effect(p, quality) == increase), effect(p, sales_volume) != decrease)) ::: unless the price increase is accompanied by an improvement in the quality of the product\nAnd(effect(foreign_wine, price) == increase, effect(foreign_wine, quality) == no_change, effect(foreign_wine, sales_volume) == increase) ::: In China, foreign brands of wine are an exception. The price rises often result in increased sales, although the quality has not changed much.\n\n# Options\nQuestion ::: If the following statement is true, which one best explains the above anomalies?\nis_explanation(Consumers often judge the quality of wine based on the price of wine) ::: (C)\nis_explanation(Many consumers base their advertisements on mass media when deciding which wine to buy) ::: (A)\nis_explanation(People who buy wine regularly have a fixed preference for wine brands) ::: (B)\nis_explanation(Wine retailers and producers can temporarily increase the sales of certain wines through price discounts) ::: (D)"
    ]
  },
  {
    "id": 564,
    "context": "For all unethical behaviors, the following two statements hold? First, if they are implemented publicly, they hurt the public's feelings? Second, they will be accompanied by guilt.",
    "question": "If the above statement is true, which of the following statements must be false?",
    "answer": "D",
    "options": [
      "A.Every publicly guilty actor with guilt is immoral.",
      "B.Some unethical behaviors carried out in private will not be accompanied by guilt.",
      "C.Unethical behavior is wrong only because of guilt.",
      "D.If certain behaviors that hurt public feelings are carried out publicly, they will not be accompanied by guilt."
    ],
    "raw_logic_programs": [
      "# Declarations\nbehaviors = EnumSort([unethical, ethical])\npublic = EnumSort([public, private])\nfeelings = EnumSort([hurt, not_hurt])\nguilt = EnumSort([guilty, not_guilty])\nimplemented = Function([behaviors, public] -> [feelings])\naccompanied = Function([behaviors, public] -> [guilt])\n\n# Constraints\nForAll([b:behaviors], Implies(implemented(b, public) == hurt, accompanied(b, public) == guilty)) ::: If unethical behaviors are implemented publicly, they hurt the public's feelings and will be accompanied by guilt\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be false?\nis_false(ForAll([a:public, g:guilt], Implies(And(a == public, g == guilty), behaviors == unethical))) ::: (A) Every publicly guilty actor with guilt is immoral.\nis_false(Exists([b:behaviors], And(implemented(b, private) == not_hurt, accompanied(b, private) == not_guilty))) ::: (B) Some unethical behaviors carried out in private will not be accompanied by guilt.\nis_false(ForAll([b:behaviors], Implies(b == unethical, accompanied(b, public) == guilty))) ::: (C) Unethical behavior is wrong only because of guilt.\nis_false(Exists([b:behaviors], And(implemented(b, public) == hurt, accompanied(b, public) == not_guilty))) ::: (D) If certain behaviors that hurt public feelings are carried out publicly, they will not be accompanied by guilt."
    ]
  },
  {
    "id": 565,
    "context": "The same number of eggplant seedlings were planted in the two test greenhouses.Only the first greenhouse was applied with fertilizer nails, but not the second greenhouse.The first greenhouse produced 1200 kg of eggplant, and the second greenhouse produced 900 kg of eggplant.Apart from water, nothing else was applied to these two greenhouses, so it must be that the fertilizer A led to the first greenhouse with a higher yield of eggplant.",
    "question": "If the following statement is true, which one most severely weakened the argument above?",
    "answer": "C",
    "options": [
      "A.A small amount of fertilizer A penetrates from the first greenhouse to the second greenhouse.",
      "B.The same variety of eggplant seedlings were planted in two greenhouses.",
      "C.The soil quality and sunshine amount of the two greenhouses are different.",
      "D.Fertilizer B was applied in the third greenhouse, and fertilizer A was not applied, yielding 1,000 kg of eggplant."
    ],
    "raw_logic_programs": [
      "# Declarations\ngreenhouses = EnumSort([first, second, third])\nfertilizers = EnumSort([fertilizer_A, fertilizer_B, none])\nyields = Function([greenhouses] -> [int])\napplied_fertilizer = Function([greenhouses] -> [fertilizers])\n\n# Constraints\nyields(first) == 1200 ::: The first greenhouse produced 1200 kg of eggplant\nyields(second) == 900 ::: The second greenhouse produced 900 kg of eggplant\napplied_fertilizer(first) == fertilizer_A ::: Only the first greenhouse was applied with fertilizer A\napplied_fertilizer(second) == none ::: The second greenhouse was not applied with fertilizer A\napplied_fertilizer(third) == fertilizer_B ::: Fertilizer B was applied in the third greenhouse\nyields(third) == 1000 ::: The third greenhouse produced 1000 kg of eggplant\n\n# Options\nQuestion ::: If the following statement is true, which one most severely weakened the argument above?\nis_weakened(applied_fertilizer(second) == fertilizer_A) ::: (A) A small amount of fertilizer A penetrates from the first greenhouse to the second greenhouse.\nis_weakened(Exists([v:variety], And(planted(first, v), planted(second, v)))) ::: (B) The same variety of eggplant seedlings were planted in two greenhouses.\nis_weakened(Exists([s:soil, sun:sunshine], And(different_soil(first, second, s), different_sunshine(first, second, sun)))) ::: (C) The soil quality and sunshine amount of the two greenhouses are different.\nis_weakened(And(applied_fertilizer(third) == fertilizer_B, yields(third) > yields(second))) ::: (D) Fertilizer B was applied in the third greenhouse, and fertilizer A was not applied, yielding 1,000 kg of eggplant."
    ]
  },
  {
    "id": 566,
    "context": "A middle school has tried out a student behavior evaluation system since 2010.Recently, the School Student Office surveyed students 'satisfaction with the evaluation system.The data shows that students with high scores are very satisfied with the evaluation system.The Student Affairs Department concluded that the students who performed well were satisfied with the evaluation system.",
    "question": "The conclusion of the student office of the school is based on which of the following assumptions?",
    "answer": "B",
    "options": [
      "A.Students with low scores are generally dissatisfied with the evaluation system.",
      "B.Students who perform well are all students with high scores.",
      "C.Not all students with low scores are satisfied with the evaluation system.",
      "D.Students with high scores are motivated by the evaluation system and consciously improve their behavior."
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([high_score, low_score])\nsatisfaction = EnumSort([satisfied, dissatisfied])\nperformance = EnumSort([perform_well, perform_poorly])\nevaluation = Function([students] -> [satisfaction])\nconclusion = Function([performance] -> [satisfaction])\n\n# Constraints\nForAll([s:students], Implies(s == high_score, evaluation(s) == satisfied)) ::: Students with high scores are very satisfied with the evaluation system\nconclusion(perform_well) == satisfied ::: The Student Affairs Department concluded that the students who performed well were satisfied with the evaluation system\n\n# Options\nQuestion ::: The conclusion of the student office of the school is based on which of the following assumptions?\nis_assumption(ForAll([s:students], Implies(s == low_score, evaluation(s) == dissatisfied))) ::: (A)\nis_assumption(ForAll([p:performance], Implies(p == perform_well, p == high_score))) ::: (B)\nis_assumption(Exists([s:students], And(s == low_score, evaluation(s) == dissatisfied))) ::: (C)\nis_assumption(ForAll([s:students], Implies(s == high_score, motivated_by_system(s)))) ::: (D)"
    ]
  },
  {
    "id": 567,
    "context": "At present, the utilization rate of cultivated land in Russia in the Far East is less than 50%.The Russian Ministry of Economic Development intends to lease agricultural land to Asia-Pacific countries for a long time.The Ministry believes that if there is no foreign capital and labor injection, Russia cannot rely on its own power to achieve the revitalization of the Far East.However, if foreign capital and labor enter the Far East, the area may be alienated by foreign immigrants.",
    "question": "If the judgment of the Russian Ministry of Economic Development is correct, which of the following statements must be true?",
    "answer": "D",
    "options": [
      "A.If Russia introduces foreign capital and labor into the Far East, the region will be revitalized.",
      "B.If Russia can realize the revitalization of the Far East by its own strength, the region will not be 'alienated' by foreign immigrants.",
      "C.If Russia continues to improve its systems while introducing foreign capital and labor into the Far East, the region will not be 'alienated' by foreign immigrants.",
      "D.If you want to rejuvenate the Far East without relying on your own strength, Russia will face the question that the region may be 'alienated' by foreign immigrants."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([Far_East])\nfactors = EnumSort([foreign_capital, foreign_labor, revitalization, alienation])\nactions = Function([regions, factors] -> [bool])\n\n# Constraints\nactions(Far_East, revitalization) == Implies(And(actions(Far_East, foreign_capital), actions(Far_East, foreign_labor)), Not(actions(Far_East, alienation))) ::: If foreign capital and labor enter the Far East, the area may be alienated by foreign immigrants\nNot(actions(Far_East, revitalization)) == Implies(Not(actions(Far_East, foreign_capital)), Not(actions(Far_East, foreign_labor))) ::: If there is no foreign capital and labor injection, Russia cannot rely on its own power to achieve the revitalization of the Far East\n\n# Options\nQuestion ::: If the judgment of the Russian Ministry of Economic Development is correct, which of the following statements must be true?\nis_valid(Implies(And(actions(Far_East, foreign_capital), actions(Far_East, foreign_labor)), actions(Far_East, revitalization))) ::: (A)\nis_valid(Implies(actions(Far_East, revitalization), Not(actions(Far_East, alienation)))) ::: (B)\nis_valid(Implies(And(actions(Far_East, foreign_capital), actions(Far_East, foreign_labor), actions(Far_East, revitalization)), Not(actions(Far_East, alienation)))) ::: (C)\nis_valid(Implies(Not(actions(Far_East, revitalization)), actions(Far_East, alienation))) ::: (D)"
    ]
  },
  {
    "id": 568,
    "context": "Convergence is a process in which different types of organisms develop one or more similar physical features in order to adapt to the same environment.The similarity between ichthyosaurs and fish is an example of convergence.Ichthyosaurs are marine reptiles and do not belong to the same class as fish.In order to adapt to the marine environment, ichthyosaurs tend to make their physical features consistent with those of fish.The most striking thing is that ichthyosaurs have fins like fish.",
    "question": "If the above statement is true, which of the following is a reasonable inference from the above statement?",
    "answer": "B",
    "options": [
      "A.Members of the same type of creatures living in the same environment must have identical physical characteristics.",
      "B.It is not possible to classify an organism just because it has similar physical characteristics as members of a certain type of organism.",
      "C.An organism develops physical features similar to other types of organisms, which is entirely the result of their adaptation to the living environment.",
      "D.Members of the same type of organism must have one or more physical characteristics that distinguish them from other types of organisms."
    ],
    "raw_logic_programs": [
      "# Declarations\norganisms = EnumSort([ichthyosaurs, fish])\nfeatures = EnumSort([fins, other_features])\nenvironment = EnumSort([marine])\nadaptation = Function([organisms, features, environment] -> [bool])\nclassification = Function([organisms] -> [str])\n\n# Constraints\nadaptation(ichthyosaurs, fins, marine) ::: Ichthyosaurs have fins like fish as an adaptation to the marine environment\nNot(classification(ichthyosaurs) == classification(fish)) ::: Ichthyosaurs are marine reptiles and do not belong to the same class as fish\n\n# Options\nQuestion ::: If the above statement is true, which of the following is a reasonable inference from the above statement?\nis_reasonable(ForAll([o1:organisms, o2:organisms], Implies(o1 != o2, Not(ForAll([f:features], adaptation(o1, f, marine) == adaptation(o2, f, marine))))) ::: (A)\nis_reasonable(Exists([o:organisms], Not(classification(o) == classification(fish)) & ForAll([f:features], adaptation(o, f, marine) == adaptation(fish, f, marine)))) ::: (B)\nis_reasonable(ForAll([o1:organisms, o2:organisms], Implies(adaptation(o1, fins, marine) == adaptation(o2, fins, marine), adaptation(o1, fins, marine)))) ::: (C)\nis_reasonable(ForAll([o:organisms], Exists([f:features], Not(adaptation(o, f, marine))))) ::: (D)"
    ]
  },
  {
    "id": 569,
    "context": "Anti-nuclear activists? The closure of this nuclear power plant was a victory for the anti-nuclear cause, and it showed that the nuclear industry departments were very late to recognize the fact that they could not safely operate nuclear power plants.Nuclear power plant manager? It does not indicate such a fact.The availability of direct electricity from non-nuclear resources, coupled with mandatory safety inspections and safe maintenance, makes it uneconomical to continue operating this nuclear power plant.Therefore, the shutdown of this nuclear power plant is not for safety reasons, but for economic reasons.",
    "question": "The manager 's argument is flawed because",
    "answer": "B",
    "options": [
      "A.It does not recognize that the power company may now believe that the nuclear power plant is unsafe, even if the shutdown of the nuclear power plant is not for safety reasons.",
      "B.It regards the cost increase caused by taking safety precautions as a pure economic factor.",
      "C.It ignores the possibility that the resources from which cheap electricity can be obtained may also have safety issues.",
      "D.It mistakes the question of what the shutdown of this nuclear power plant means to the public as the question of the reason for shutting down the power plant."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([anti_nuclear_activists, nuclear_power_plant_manager])\nreasons = EnumSort([safety, economic])\nfactors = EnumSort([direct_electricity, safety_inspections, maintenance])\nbeliefs = Function([arguments] -> [bool])\nshutdown_reason = Function([arguments] -> [reasons])\nconsiders = Function([arguments, factors] -> [bool])\n\n# Constraints\nshutdown_reason(anti_nuclear_activists) == safety ::: The closure of this nuclear power plant was a victory for the anti-nuclear cause\nshutdown_reason(nuclear_power_plant_manager) == economic ::: The shutdown of this nuclear power plant is not for safety reasons, but for economic reasons\nconsiders(nuclear_power_plant_manager, direct_electricity) ::: The availability of direct electricity from non-nuclear resources\nconsiders(nuclear_power_plant_manager, safety_inspections) ::: Coupled with mandatory safety inspections\nconsiders(nuclear_power_plant_manager, maintenance) ::: And safe maintenance\n\n# Options\nQuestion ::: The manager's argument is flawed because\nis_flawed(beliefs(nuclear_power_plant_manager) == beliefs(anti_nuclear_activists)) ::: (A) It does not recognize that the power company may now believe that the nuclear power plant is unsafe, even if the shutdown of the nuclear power plant is not for safety reasons.\nis_flawed(considers(nuclear_power_plant_manager, safety_inspections) == economic) ::: (B) It regards the cost increase caused by taking safety precautions as a pure economic factor.\nis_flawed(Exists([f:factors], Not(considers(nuclear_power_plant_manager, f)))) ::: (C) It ignores the possibility that the resources from which cheap electricity can be obtained may also have safety issues.\nis_flawed(shutdown_reason(nuclear_power_plant_manager) == shutdown_reason(anti_nuclear_activists)) ::: (D) It mistakes the question of what the shutdown of this nuclear power plant means to the public as the question of the reason for shutting down the power plant."
    ]
  },
  {
    "id": 570,
    "context": "Since the cancellation of mandatory pre-marriage inspections in City B in 2003, the pre-marriage inspection rate in the city has dropped from close to 100% 10 years ago to 7% in 2011, the lowest in the country.At the same time, the incidence of birth defects in the city has doubled.It can be seen that the abolition of the mandatory pre-marital inspection system has led to an increase in the rate of birth defects in newborns.",
    "question": "The answers to the following questions are relevant to the evaluation of the above argument, except",
    "answer": "D",
    "options": [
      "A.Has the city's living environment (air and water quality, etc.) been damaged in the past decade?",
      "B.Have unhealthy lifestyles such as staying up late and online for a long time among the population of child-bearing age in this city increased significantly?",
      "C.Has women in this city delayed childbirth in the past decade, and has the proportion of older pregnant women increased significantly?",
      "D.Has the number of floating population in the city increased or decreased in the past decade?"
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([environment_damage, unhealthy_lifestyles, delayed_childbirth, floating_population])\nrelevance = Function([factors] -> [bool])\n\n# Constraints\nForAll([f:factors], relevance(f) == True) ::: The answers to the following questions are relevant to the evaluation of the above argument\n\n# Options\nQuestion ::: The answers to the following questions are relevant to the evaluation of the above argument, except\nis_exception(relevance(environment_damage)) ::: (A)\nis_exception(relevance(unhealthy_lifestyles)) ::: (B)\nis_exception(relevance(delayed_childbirth)) ::: (C)\nis_exception(relevance(floating_population)) ::: (D)"
    ]
  },
  {
    "id": 571,
    "context": "The corpus callosum is a bundle of nerve fibers that connects the two hemispheres of the brain.On average, the corpus callosum of musicians is larger than that of non-musicians.Compared with adult non-musicians, adult musicians who started training at about 7 years old, the difference in corpus callosum in volume is particularly obvious.Therefore, music training, especially music training from an early age, can cause some changes in brain structure.",
    "question": "Which of the following is the assumption that the above argument relies on?",
    "answer": "A",
    "options": [
      "A.Before the musicians start training, their corpus callosum is not larger than that of non-musicians of the same age.",
      "B.Music training conducted late in life will not cause structural changes in the brain.",
      "C.For any two musicians who started training from about 7 years old, their corpus callosum has almost the same volume.",
      "D.Adult non-musicians did not participate in any activities that can promote the development of the corpus callosum in their childhood."
    ],
    "raw_logic_programs": [
      "# Declarations\nmusicians = EnumSort([musician, non_musician])\nage_groups = EnumSort([child, adult])\ntraining_start = Function([musicians] -> [int])\ncorpus_callosum_size = Function([musicians, age_groups] -> [real])\n\n# Constraints\nForAll([m:musicians], corpus_callosum_size(m, adult) > corpus_callosum_size(non_musician, adult)) ::: On average, the corpus callosum of musicians is larger than that of non-musicians\nForAll([m:musicians], Implies(training_start(m) == 7, corpus_callosum_size(m, adult) > corpus_callosum_size(non_musician, adult))) ::: Adult musicians who started training at about 7 years old have a particularly obvious difference in corpus callosum volume compared to adult non-musicians\n\n# Options\nQuestion ::: Which of the following is the assumption that the above argument relies on?\nis_assumption(ForAll([m:musicians], corpus_callosum_size(m, child) == corpus_callosum_size(non_musician, child))) ::: (A)\nis_assumption(ForAll([m:musicians], Implies(training_start(m) > 7, corpus_callosum_size(m, adult) == corpus_callosum_size(non_musician, adult)))) ::: (B)\nis_assumption(ForAll([m1:musicians, m2:musicians], Implies(And(training_start(m1) == 7, training_start(m2) == 7), corpus_callosum_size(m1, adult) == corpus_callosum_size(m2, adult)))) ::: (C)\nis_assumption(ForAll([m:musicians], corpus_callosum_size(non_musician, child) == corpus_callosum_size(non_musician, adult))) ::: (D)"
    ]
  },
  {
    "id": 572,
    "context": "Since the Chinese delegation did not fully understand the rules of the Olympic Games, at the London Olympics, neither the criticism of the rules of the competition system nor the questioning of the referee 's law enforcement, the appeals before and after failed several times.",
    "question": "In order for the above reasoning to be true, which of the following must be added as a premise?",
    "answer": "C",
    "options": [
      "A.On the Olympic stage, China still has many things that it is not familiar with that need to be learned.",
      "B.Some delegations who thoroughly understand the rules of the Olympic Games have succeeded in appealing the rules and regulations of the competition.",
      "C.The delegations that succeeded in the complaints of the rules and regulations at the Olympic Games have thoroughly understood the rules of the Olympic Games.",
      "D.Delegations at the Olympic Games who thoroughly understand the rules of the Olympic Games can succeed in complaints about rules and regulations."
    ],
    "raw_logic_programs": [
      "# Declarations\ndelegations = EnumSort([Chinese, Other])\nunderstands_rules = Function([delegations] -> [bool])\nsucceeded_in_appeals = Function([delegations] -> [bool])\n\n# Constraints\nNot(understands_rules(Chinese)) ::: The Chinese delegation did not fully understand the rules of the Olympic Games\nNot(succeeded_in_appeals(Chinese)) ::: The appeals before and after failed several times\n\n# Options\nQuestion ::: In order for the above reasoning to be true, which of the following must be added as a premise?\nis_necessary(ForAll([d:delegations], Implies(understands_rules(d), succeeded_in_appeals(d)))) ::: (D) Delegations at the Olympic Games who thoroughly understand the rules of the Olympic Games can succeed in complaints about rules and regulations."
    ]
  },
  {
    "id": 573,
    "context": "In China, strong compulsory insurance is an insurance company's choice of insurance.Since its launch in 2006, only a small profit has been made in 2008, and the rest of the years have suffered losses.Strangely, the current strong traffic losses under huge losses are still the businesses that insurance companies are fighting for.",
    "question": "If the following statement is true, which one best explains the strange phenomenon of insurance companies competing for strong insurance business?",
    "answer": "D",
    "options": [
      "A.In 2011, 3 of the 36 companies undertaking compulsory insurance were profitable in this type of insurance.",
      "B.In the payment of compulsory insurance, some vehicles are paid too much, and some cases that should not be paid are awarded.",
      "C.Tractors enjoy the agricultural benefit policy, and many places register 'transport vehicles' as 'tractors', thereby enjoying low tax rates.",
      "D.Commercial auto insurance is lucrative, and car owners usually do not insure compulsory insurance and commercial auto insurance separately."
    ],
    "raw_logic_programs": [
      "# Declarations\ncompanies = EnumSort([company1, company2, ..., company36])\nyears = EnumSort([2006, 2007, 2008, ..., 2011])\ninsurance_types = EnumSort([compulsory, commercial])\nprofit = Function([companies, years, insurance_types] -> [bool])\n\n# Constraints\nForAll([c:companies, y:years], Not(profit(c, y, compulsory))) ::: Since its launch in 2006, only a small profit has been made in 2008, and the rest of the years have suffered losses\nExists([c:companies], profit(c, 2008, compulsory)) ::: only a small profit has been made in 2008\nForAll([c:companies, y:years], Or(profit(c, y, commercial), Not(profit(c, y, commercial)))) ::: Commercial auto insurance is lucrative\n\n# Options\nQuestion ::: If the following statement is true, which one best explains the strange phenomenon of insurance companies competing for strong insurance business?\nis_best_explanation(Exists([c:companies], And(profit(c, 2011, compulsory), Count([c:companies], profit(c, 2011, compulsory)) == 3))) ::: (A)\nis_best_explanation(Exists([c:companies], And(Not(profit(c, y, compulsory)), Overpayment(c, compulsory)))) ::: (B)\nis_best_explanation(Exists([c:companies], And(Registered_as_tractor(c), Enjoys_low_tax_rate(c)))) ::: (C)\nis_best_explanation(Exists([c:companies], And(profit(c, y, commercial), Not(Separate_insurance(c))))) ::: (D)"
    ]
  },
  {
    "id": 574,
    "context": "Sales experts believe that in a market that is no longer expanding, a company 's best sales strategy is to pursue the largest market share, and the best way to achieve its goal is to do some comparative advertising that highlights the shortcomings of competitors.In the sluggish domestic milk powder market, A-brand milk powder and B-brand milk powder have been in a two-year comparative advertising campaign, accusing each other's products of causing harmful effects on the baby's health.However, these advertising campaigns did not increase their respective market shares, but instead made many people no longer buy any brand of domestically produced milk powder.",
    "question": "Which of the following conclusions strongly supports the above statement?",
    "answer": "B",
    "options": [
      "A.Comparative advertising should not be used in an expanding or potentially expanding market.",
      "B.Comparative advertising runs the risk of shrinking their target market instead of expanding.",
      "C.Comparative advertising will not produce any long-term benefits unless consumers can easily judge the accuracy of those ads.",
      "D.If a company 's products are significantly higher in quality than its competitors 'products, comparative advertising can increase the company 's market share in any case."
    ],
    "raw_logic_programs": [
      "# Declarations\nmarkets = EnumSort([expanding, non_expanding])\nstrategies = EnumSort([comparative_advertising, other_strategies])\neffects = EnumSort([increase_market_share, decrease_market_share, no_change])\nbrands = EnumSort([A_brand, B_brand])\nmarket_share = Function([brands, markets, strategies] -> [effects])\n\n# Constraints\nForAll([b:brands], market_share(b, non_expanding, comparative_advertising) == no_change) ::: In the sluggish domestic milk powder market, A-brand milk powder and B-brand milk powder have been in a two-year comparative advertising campaign, accusing each other's products of causing harmful effects on the baby's health. However, these advertising campaigns did not increase their respective market shares\n\n# Options\nQuestion ::: Which of the following conclusions strongly supports the above statement?\nis_strong_support(ForAll([b:brands], market_share(b, non_expanding, comparative_advertising) == decrease_market_share)) ::: (B)\nis_strong_support(ForAll([b:brands], market_share(b, expanding, comparative_advertising) == no_change)) ::: (A)\nis_strong_support(ForAll([b:brands], market_share(b, non_expanding, comparative_advertising) == increase_market_share)) ::: (C)\nis_strong_support(Exists([b:brands], market_share(b, non_expanding, comparative_advertising) == increase_market_share)) ::: (D)"
    ]
  },
  {
    "id": 575,
    "context": "Many netizens have doubts about the proposal to solve the pension gap problem by delaying the retirement age.They believe that leaving elderly people who should be retired in their positions will squeeze the employment space of young people and increase the difficulty of finding jobs for young people.The problem.Experts explained that the late retirees are both producers and consumers, and their consumption can create new jobs.",
    "question": "If the following statement is true, which one strongly questioned the expert's interpretation?",
    "answer": "D",
    "options": [
      "A.Delaying the retirement age will be opposed by people working in private enterprises.",
      "B.Only by stimulating economic development can the unemployment rate be radically reduced.",
      "C.The pension gap stems from the unreasonable design of China's pension system.",
      "D.The expert's explanation is based on the unproven assumption that the spending power of working seniors is significantly higher than that of retired peers."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nquestioned_expert = Function([statements] -> [bool])\n\n# Constraints\nquestioned_expert(A) == False ::: Delaying the retirement age will be opposed by people working in private enterprises does not directly question the expert's interpretation\nquestioned_expert(B) == False ::: Only by stimulating economic development can the unemployment rate be radically reduced does not directly question the expert's interpretation\nquestioned_expert(C) == False ::: The pension gap stems from the unreasonable design of China's pension system does not directly question the expert's interpretation\nquestioned_expert(D) == True ::: The expert's explanation is based on the unproven assumption that the spending power of working seniors is significantly higher than that of retired peers directly questions the expert's interpretation\n\n# Options\nQuestion ::: If the following statement is true, which one strongly questioned the expert's interpretation?\nis_true(questioned_expert(A)) ::: (A)\nis_true(questioned_expert(B)) ::: (B)\nis_true(questioned_expert(C)) ::: (C)\nis_true(questioned_expert(D)) ::: (D)"
    ]
  },
  {
    "id": 576,
    "context": "In September 2012, the European Union launched an anti-dumping investigation against Chinese photovoltaic cells.Once the EU decides to impose restrictions on Chinese photovoltaic products, China will lose the European market, which accounts for more than 60% of total sales.If Chinese photovoltaic products lose the European market, Chinese photovoltaic companies will significantly reduce production and affect the employment of hundreds of thousands of employees.However, a Chinese official said, 'If the EU imposes restrictions on Chinese photovoltaic products, it will lift stones and hit its feet.'",
    "question": "If the following statement is true, which one will give the strongest support to Chinese officials' assertions?",
    "answer": "A",
    "options": [
      "A.China's photovoltaic industry purchases a lot of raw materials and equipment from Europe, which has driven the development of a large number of photovoltaic upstream and downstream companies in the EU.",
      "B.If the European Union keeps high-quality and low-priced Chinese photovoltaic products out of the door, European solar consumers will pay higher costs.",
      "C.The solar energy industry is related to the energy security of the European Union.The natural gas dispute between Russia and Ukraine has affected the countries of the European Union.",
      "D.At present, the European debt problem continues to deteriorate, and Germany hopes to fight for China to provide more help in solving the European debt crisis."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([EU_restrictions, China_loses_market, China_reduces_production, EU_impact])\nsupports = Function([events] -> [bool])\n\n# Constraints\nsupports(EU_restrictions) ::: EU decides to impose restrictions on Chinese photovoltaic products\nImplies(supports(EU_restrictions), supports(China_loses_market)) ::: If the EU imposes restrictions, China will lose the European market\nImplies(supports(China_loses_market), supports(China_reduces_production)) ::: If China loses the market, it will reduce production\nImplies(supports(China_reduces_production), supports(EU_impact)) ::: If China reduces production, it will impact the EU\n\n# Options\nQuestion ::: Which one will give the strongest support to Chinese officials' assertions?\nis_strongest_support(supports(EU_impact) & supports(EU_restrictions)) ::: (A)\nis_strongest_support(supports(EU_impact) & supports(China_loses_market)) ::: (B)\nis_strongest_support(supports(EU_impact) & supports(China_reduces_production)) ::: (C)\nis_strongest_support(supports(EU_impact)) ::: (D)"
    ]
  },
  {
    "id": 577,
    "context": "Let all the rats run for 1 hour.The first group of rats drank tomato juice 1 hour before running.Drink tomato juice after the second group.The third group ran to drink tomato juice after running for 30 minutes, and then ran for another 30 minutes after 1 hour of rest.The control rats only drink water.After 6 hours of exercise, the concentration of 'TGF-b', a substance that marked animal fatigue in the blood of the experimental rats, was measured.The result was that this index was reduced by 50% in the first and third groups of experimental rats compared to the experimental rats who only drank To 60%.And the second group of experimental rats has almost no difference.",
    "question": "Which of the following is the most suitable conclusion for the above experiment?",
    "answer": "B",
    "options": [
      "A.Drinking a tomato counter can eliminate fatigue caused by exercise.",
      "B.Drinking tomato counter before exercise can reduce exercise fatigue.",
      "C.The first three groups of rats and water-only rats run at the same speed.",
      "D.In the case of the same exercise intensity and exercise volume, a longer period of rest between exercise intervals can reduce fatigue."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([first_group, second_group, third_group, control_group])\nactivities = EnumSort([drink_tomato_juice, drink_water, run, rest])\neffects = EnumSort([reduced_fatigue, no_difference])\nactivity_sequence = Function([groups] -> [activities])\nfatigue_effect = Function([groups] -> [effects])\n\n# Constraints\nactivity_sequence(first_group) == [drink_tomato_juice, run] ::: The first group drank tomato juice 1 hour before running\nactivity_sequence(second_group) == [run, drink_tomato_juice] ::: The second group drank tomato juice after running\nactivity_sequence(third_group) == [run_30_minutes, drink_tomato_juice, rest_1_hour, run_30_minutes] ::: The third group ran, drank tomato juice, rested, then ran again\nactivity_sequence(control_group) == [run, drink_water] ::: The control group only drank water\n\nfatigue_effect(first_group) == reduced_fatigue ::: The first group showed reduced fatigue\nfatigue_effect(second_group) == no_difference ::: The second group showed no difference in fatigue\nfatigue_effect(third_group) == reduced_fatigue ::: The third group showed reduced fatigue\nfatigue_effect(control_group) == no_difference ::: The control group showed no difference in fatigue\n\n# Options\nQuestion ::: Which of the following is the most suitable conclusion for the above experiment?\nis_suitable_conclusion(fatigue_effect(first_group) == reduced_fatigue and fatigue_effect(third_group) == reduced_fatigue) ::: (A) Drinking a tomato counter can eliminate fatigue caused by exercise.\nis_suitable_conclusion(activity_sequence(first_group) == [drink_tomato_juice, run] and fatigue_effect(first_group) == reduced_fatigue) ::: (B) Drinking tomato counter before exercise can reduce exercise fatigue.\nis_suitable_conclusion(activity_sequence(control_group) == [run, drink_water] and activity_sequence(first_group) == [drink_tomato_juice, run] and activity_sequence(second_group) == [run, drink_tomato_juice] and activity_sequence(third_group) == [run_30_minutes, drink_tomato_juice, rest_1_hour, run_30_minutes]) ::: (C) The first three groups of rats and water-only rats run at the same speed.\nis_suitable_conclusion(activity_sequence(third_group) == [run_30_minutes, drink_tomato_juice, rest_1_hour, run_30_minutes] and fatigue_effect(third_group) == reduced_fatigue) ::: (D) In the case of the same exercise intensity and exercise volume, a longer period of rest between exercise intervals can reduce fatigue."
    ]
  },
  {
    "id": 578,
    "context": "For a long time, smoking in bed has been the main cause of domestic fires.Although the number of people who smoke has declined significantly in the past 20 years, the number of people who have died from domestic fires has not decreased significantly.",
    "question": "If the following statement is true, it will help explain the obvious inconsistency above, except",
    "answer": "C",
    "options": [
      "A.People who smoke in bed are usually very addicted to smoking, and they are less likely to quit smoking than those who do not smoke in bed.",
      "B.The population density has been increasing over the past 20 years, and the number of deaths caused by a family fire is now higher than it was 20 years ago.",
      "C.Fires caused by smoking in bed usually occur after the homeowner falls asleep.",
      "D.Compared with other types of domestic fires, the damage caused by domestic fires caused by bed smoking is usually smaller."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nhelps_explain = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], helps_explain(s)) ::: Each statement helps explain the inconsistency\n\n# Options\nQuestion ::: If the following statement is true, it will help explain the obvious inconsistency above, except\nis_exception(helps_explain(A)) ::: (A)\nis_exception(helps_explain(B)) ::: (B)\nis_exception(helps_explain(C)) ::: (C)\nis_exception(helps_explain(D)) ::: (D)"
    ]
  },
  {
    "id": 579,
    "context": "There are two types of horror stories? one type of experiments depicting mad scientists, and one type of fierce monsters.In the horror story about monsters, monsters symbolize the chaos of the hero's psychology.The horror stories about crazy scientists typically express the author's feelings? scientific knowledge alone is not enough to guide human exploration activities.Despite these differences, these two types of horror stories have the following common characteristics? they describe phenomena that violate the laws of nature? they both want to make the reader feel fear.",
    "question": "If the above statement is true, which of the following must be true?",
    "answer": "B",
    "options": [
      "A.All descriptions of monsters describe phenomena that violate the laws of nature.",
      "B.Some stories that use symbolic techniques describe phenomena that violate the laws of nature.",
      "C.Most of the stories about crazy scientists express the author's anti-scientific point of view.",
      "D.Any kind of horror stories are described, psychologically chaotic characters."
    ],
    "raw_logic_programs": [
      "# Declarations\nstories = EnumSort([mad_scientists, fierce_monsters])\ncharacteristics = EnumSort([violate_laws_of_nature, induce_fear, symbolize_chaos, express_anti_scientific_view])\ndescribes = Function([stories] -> [characteristics])\n\n# Constraints\nForAll([s:stories], describes(s) == violate_laws_of_nature) ::: both types of horror stories describe phenomena that violate the laws of nature\nForAll([s:stories], describes(s) == induce_fear) ::: both types of horror stories want to make the reader feel fear\ndescribes(fierce_monsters) == symbolize_chaos ::: in the horror story about monsters, monsters symbolize the chaos of the hero's psychology\ndescribes(mad_scientists) == express_anti_scientific_view ::: horror stories about crazy scientists express the author's feelings that scientific knowledge alone is not enough\n\n# Options\nQuestion ::: If the above statement is true, which of the following must be true?\nis_must_true(ForAll([s:stories], Implies(describes(s) == symbolize_chaos, describes(s) == violate_laws_of_nature))) ::: (A)\nis_must_true(Exists([s:stories], And(describes(s) == symbolize_chaos, describes(s) == violate_laws_of_nature))) ::: (B)\nis_must_true(ForAll([s:stories], Implies(describes(s) == express_anti_scientific_view, describes(s) == violate_laws_of_nature))) ::: (C)\nis_must_true(ForAll([s:stories], describes(s) == symbolize_chaos)) ::: (D)"
    ]
  },
  {
    "id": 580,
    "context": "Since the beginning of summer 2012, the United States has experienced the worst drought in more than 50 years, and two-thirds of the country 's 48 states have suffered moderate or more drought.It is expected that corn and soybeans will be significantly reduced.However, a report released by the US Department of Agriculture on August 28 predicts that the 2012 US agricultural net income is expected to reach a record 122.2 billion US dollars, an increase of 3.7% over last year.",
    "question": "If the following statement is true, which one best explains the two seemingly contradictory predictions?",
    "answer": "B",
    "options": [
      "A.In 2012, many parts of the world suffered from natural disasters such as drought, high temperature, heavy rain, and typhoons.",
      "B.The current international prices of corn and soybeans and domestic prices in the United States have skyrocketed.",
      "C.U.S.farmers can obtain compensation from agricultural insurance to offset part of the impact of production cuts.",
      "D.In response to the drought, the US government has adopted a series of rescue measures such as urgently reducing the interest rate of agricultural loans to farmers."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([drought, reduced_corn_soybeans, record_income])\nfactors = EnumSort([global_disasters, high_prices, insurance_compensation, government_measures])\nexplains = Function([factors, events] -> [bool])\n\n# Constraints\nForAll([e:events], Exists([f:factors], explains(f, e))) ::: Each event is explained by at least one factor\n\n# Options\nQuestion ::: If the following statement is true, which one best explains the two seemingly contradictory predictions?\nis_best_explanation(And(explains(global_disasters, drought), explains(global_disasters, reduced_corn_soybeans))) ::: (A)\nis_best_explanation(And(explains(high_prices, reduced_corn_soybeans), explains(high_prices, record_income))) ::: (B)\nis_best_explanation(And(explains(insurance_compensation, reduced_corn_soybeans), explains(insurance_compensation, record_income))) ::: (C)\nis_best_explanation(And(explains(government_measures, drought), explains(government_measures, record_income))) ::: (D)"
    ]
  },
  {
    "id": 581,
    "context": "Cyclamen is a famous ornamental flower, which is difficult to grow in hot climate.It is difficult to grow rice in arid areas.In most parts of a country, either cyclamen is easy to grow, or it is easy to grow rice.",
    "question": "If the above statement is true, which of the following statements must be false?",
    "answer": "A",
    "options": [
      "A.Half of the country is dry and hot.",
      "B.The climate in most parts of the country is cold.",
      "C.Certain parts of the country are neither hot nor arid.",
      "D.It is impossible to grow cyclamen in this country."
    ],
    "raw_logic_programs": [
      "# Declarations\nregions = EnumSort([region1, region2, region3, ...])  # Represents different regions of the country\nclimates = EnumSort([hot, arid, cold, neither])\ngrows = Function([regions, climates] -> [bool])  # Represents whether a plant can grow in a given climate\n\n# Constraints\nForAll([r:regions], Or(grows(r, hot) == False, grows(r, arid) == False)) ::: Cyclamen is difficult to grow in hot climate and rice is difficult to grow in arid areas\nForAll([r:regions], Or(grows(r, hot) == True, grows(r, arid) == True)) ::: In most parts of a country, either cyclamen is easy to grow, or it is easy to grow rice\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be false?\nis_false(And(Count([r:regions], grows(r, hot) == True) > 0.5 * Count([r:regions], True), Count([r:regions], grows(r, arid) == True) > 0.5 * Count([r:regions], True))) ::: (A) Half of the country is dry and hot\nis_false(Count([r:regions], grows(r, cold) == True) > 0.5 * Count([r:regions], True)) ::: (B) The climate in most parts of the country is cold\nis_false(Exists([r:regions], grows(r, neither) == True)) ::: (C) Certain parts of the country are neither hot nor arid\nis_false(ForAll([r:regions], grows(r, hot) == False)) ::: (D) It is impossible to grow cyclamen in this country"
    ]
  },
  {
    "id": 582,
    "context": "This year, Taifeng, a subsidiary of Huatai Group, set a new annual sales record.This is quite surprising, because Taifeng's potential market is the smallest, and it has always been the lowest sales department of all Huatai Group's subsidiaries.",
    "question": "Which of the following statements points out the problems in the above discussion?",
    "answer": "C",
    "options": [
      "A.Since Taifeng has the smallest potential market, it is not surprising that it is the lowest sales department of Huatai Group.",
      "B.If the total sales of Huatai Group increased this year, it is not surprising that the sales of Taifeng Company increased.",
      "C.Whether the sales of each branch company sets an annual sales record is only the result of the company's self-comparison, and does not need to be compared with other branch companies.",
      "D.If the other subsidiaries of the group have created annual sales records, it is not surprising that Taifeng has set a new annual sales record."
    ],
    "raw_logic_programs": [
      "# Declarations\nsubsidiaries = EnumSort([Taifeng, OtherSubsidiaries])\nattributes = EnumSort([potential_market, sales])\ncomparison = Function([subsidiaries, attributes] -> [int])\nrecord_set = Function([subsidiaries] -> [bool])\n\n# Constraints\ncomparison(Taifeng, potential_market) < comparison(OtherSubsidiaries, potential_market) ::: Taifeng's potential market is the smallest\ncomparison(Taifeng, sales) < comparison(OtherSubsidiaries, sales) ::: Taifeng has always been the lowest sales department\nrecord_set(Taifeng) == True ::: Taifeng set a new annual sales record\n\n# Options\nQuestion ::: Which of the following statements points out the problems in the above discussion?\nis_problematic(Implies(comparison(Taifeng, potential_market) < comparison(OtherSubsidiaries, potential_market), comparison(Taifeng, sales) < comparison(OtherSubsidiaries, sales))) ::: (A)\nis_problematic(Implies(Exists([s:subsidiaries], record_set(s) == True), record_set(Taifeng) == True)) ::: (B)\nis_problematic(ForAll([s:subsidiaries], record_set(s) == True)) ::: (C)\nis_problematic(Implies(Exists([s:subsidiaries], record_set(s) == True), record_set(Taifeng) == True)) ::: (D)"
    ]
  },
  {
    "id": 583,
    "context": "Wastewater treatment consumes a lot of electricity.Researchers at a university in the United States have recently developed a new microbial battery technology that has increased the efficiency of electricity generation from sewage by 10 to 50 times.Using this technology, the sewage treatment plant can not only realize electricity self-sufficiency, but also sell the surplus electricity.It can be expected that once this technology is put into commercial operation, the attitude of enterprises towards sewage treatment will become proactive, thereby reducing the environmental pollution caused by sewage discharge.",
    "question": "The answer to which of the following questions is most relevant to the assessment of the above judgment?",
    "answer": "A",
    "options": [
      "A.Will the technology transfer and equipment cost of sewage treatment in this way be high?",
      "B.Can this technology effectively treat heavy metals in chemical plant wastewater?",
      "C.Will this sewage treatment cause air pollution due to the release of methane?",
      "D.Will the environmental protection department increase the supervision of the company's discharge situation?"
    ],
    "raw_logic_programs": [
      "# Declarations\nquestions = EnumSort([A, B, C, D])\nrelevance = Function([questions] -> [bool])\n\n# Constraints\n# The problem description does not provide specific constraints for the questions, so we will focus on the options.\n\n# Options\nQuestion ::: The answer to which of the following questions is most relevant to the assessment of the above judgment?\nis_most_relevant(relevance(A)) ::: (A) Will the technology transfer and equipment cost of sewage treatment in this way be high?\nis_most_relevant(relevance(B)) ::: (B) Can this technology effectively treat heavy metals in chemical plant wastewater?\nis_most_relevant(relevance(C)) ::: (C) Will this sewage treatment cause air pollution due to the release of methane?\nis_most_relevant(relevance(D)) ::: (D) Will the environmental protection department increase the supervision of the company's discharge situation?"
    ]
  },
  {
    "id": 584,
    "context": "A public service advertisement suggests that people who drink alcohol should wait until they can drive safely.However, a hospital survey found that people who were questioned immediately after drinking had underestimated the time it took them to restore their ability to drive.This result shows that many people who drink before driving have difficulties in following the advertising recommendations.",
    "question": "If the following statement is true, which one strongly supports the above statement 2",
    "answer": "D",
    "options": [
      "A.If some people have to go home after drinking, they will resist not drinking.",
      "B.Many people who plan to drink will arrange for a person who does not drink to drive them home.",
      "C.The respondents in the hospital were also asked about the length of time required to restore those abilities that have little impact on safe driving.",
      "D.Compared with the respondents outside the hospital, the respondents in the hospital have a conservative estimate of their own abilities."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([respondents, non_respondents])\nabilities = EnumSort([driving_ability, other_abilities])\ntime_estimate = Function([people, abilities] -> [int])\n\n# Constraints\nForAll([p:people], time_estimate(p, driving_ability) > 0) ::: People who drink alcohol should wait until they can drive safely\ntime_estimate(respondents, driving_ability) < actual_time ::: Respondents underestimated the time it took to restore driving ability\n\n# Options\nQuestion ::: Which one strongly supports the statement that many people who drink before driving have difficulties in following the advertising recommendations?\nis_strong_support(Implies(time_estimate(respondents, driving_ability) < actual_time, time_estimate(respondents, other_abilities) < actual_time)) ::: (C) The respondents in the hospital were also asked about the length of time required to restore those abilities that have little impact on safe driving."
    ]
  },
  {
    "id": 585,
    "context": "Placebo effect' refers to the phenomenon of letting patients take fake drugs that have no effect at all without knowing it, but they can get the same or better effects than real drugs.The 'placebo effect' has been supported by many clinical studies.One explanation for this phenomenon is that human expectations for the future will change the physiological state of the brain, which in turn will cause physiological changes throughout the body.",
    "question": "The following statements can support the above explanation, except",
    "answer": "C",
    "options": [
      "A.The placebo effect is the result of a combination of factors.",
      "B.Placebo has no effect on Alzheimer's patients who have lost their expected future abilities.",
      "C.Some patients do not believe that the treatment will be effective.Although they have been treated normally, their condition has worsened.",
      "D.Inject the subject with normal saline and make him believe that it is an analgesic.The subject's brain then secretes the analgesic endorphin."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_explanation = Function([statements] -> [bool])\n\n# Constraints\nsupports_explanation(A) ::: The placebo effect is the result of a combination of factors\nsupports_explanation(B) ::: Placebo has no effect on Alzheimer's patients who have lost their expected future abilities\nsupports_explanation(C) ::: Some patients do not believe that the treatment will be effective. Although they have been treated normally, their condition has worsened\nsupports_explanation(D) ::: Inject the subject with normal saline and make him believe that it is an analgesic. The subject's brain then secretes the analgesic endorphin\n\n# Options\nQuestion ::: The following statements can support the above explanation, except\nis_exception(Not(supports_explanation(A))) ::: (A)\nis_exception(Not(supports_explanation(B))) ::: (B)\nis_exception(Not(supports_explanation(C))) ::: (C)\nis_exception(Not(supports_explanation(D))) ::: (D)"
    ]
  },
  {
    "id": 586,
    "context": "The tragedy of gun violence in the United States has once again triggered discussions on gun control.Opponents of gun control claim that gun violence in the United States soared in the 1980s.In 1986, some states implemented strict gun control through legal means, but the average violent crime rate in those states that enforced strict gun control was the average violent crime rate in other states 1.5 times.It can be seen that strict gun control does not help reduce violent crime.",
    "question": "If the following statement is true, which one weakens the above argument the strongest?",
    "answer": "B",
    "options": [
      "A.Since 1986, the proportion of American households with guns has declined significantly.",
      "B.Since 1986, the annual number of violent crimes in these states that have imposed strict gun control has continued to decline.",
      "C.In states that enforce strict gun control laws, few people violate this law.",
      "D.The criminologist compared the results of various investigations and found no obvious correlation between the number of privately owned guns and gun violence."
    ],
    "raw_logic_programs": [
      "# Declarations\nstates = EnumSort([strict_gun_control, no_strict_gun_control])\ncrime_rate = Function([states] -> [float])\nyear = EnumSort([before_1986, after_1986])\ngun_ownership = Function([year] -> [float])\ncrime_trend = Function([states, year] -> [float])\n\n# Constraints\ncrime_rate(strict_gun_control) == 1.5 * crime_rate(no_strict_gun_control) ::: In 1986, the average violent crime rate in states with strict gun control was 1.5 times that of other states\nForAll([s:states], crime_trend(s, before_1986) > crime_trend(s, after_1986)) ::: The argument implies that strict gun control does not help reduce violent crime\n\n# Options\nQuestion ::: If the following statement is true, which one weakens the above argument the strongest?\nis_strongest_weaken(And(gun_ownership(after_1986) < gun_ownership(before_1986), crime_trend(strict_gun_control, after_1986) < crime_trend(strict_gun_control, before_1986))) ::: (A)\nis_strongest_weaken(crime_trend(strict_gun_control, after_1986) < crime_trend(strict_gun_control, before_1986)) ::: (B)\nis_strongest_weaken(ForAll([s:states], Not(violates_gun_control_law(s)))) ::: (C)\nis_strongest_weaken(Not(Exists([s:states], correlation(gun_ownership(before_1986), crime_rate(s))))) ::: (D)"
    ]
  },
  {
    "id": 587,
    "context": "With the advent of the Mid-Autumn Festival, in order to attract consumers, a supermarket launched a promotional campaign of giving away a box of moon cakes with a purchase of over 500 yuan.Supermarket managers said that since the start of the promotional activity, orders with a single payment of more than 500 yuan at the cash register have increased by nearly 30%, which indicates that the promotional activity is very successful and has achieved the purpose of expanding market share.",
    "question": "If the following statement is true, which one weakens the manager's assertion the most?",
    "answer": "C",
    "options": [
      "A.Customers who are used to small shopping are less likely to be affected by promotional activities.",
      "B.Some customers who make a purchase of more than 500 yuan at a time during the event usually make purchases higher than 500 yuan.",
      "C.In the promotional activities, most people who make a purchase of more than 500 yuan at a time are long-term customers of this supermarket.They increase the amount of a single purchase, but reduce the number of purchases.",
      "D.Customers who are attracted to shopping in the supermarket by the promotion may not come again after the event."
    ],
    "raw_logic_programs": [
      "# Declarations\ncustomers = EnumSort([small_shoppers, large_shoppers, long_term_customers, new_customers])\npurchases = EnumSort([less_than_500, more_than_500])\nevents = EnumSort([promotion, no_promotion])\neffects = EnumSort([increase, decrease, no_change])\nshopping_behavior = Function([customers, events] -> [purchases])\npurchase_frequency = Function([customers, events] -> [effects])\n\n# Constraints\nForAll([c:customers], shopping_behavior(c, promotion) == more_than_500) ::: During the promotion, all customers make purchases of more than 500 yuan\nForAll([c:customers], Implies(shopping_behavior(c, no_promotion) == less_than_500, shopping_behavior(c, promotion) == more_than_500)) ::: Customers who usually make small purchases are less likely to be affected by promotional activities\nForAll([c:customers], Implies(shopping_behavior(c, no_promotion) == more_than_500, shopping_behavior(c, promotion) == more_than_500)) ::: Some customers who usually make large purchases continue to do so during the promotion\nForAll([c:customers], Implies(c == long_term_customers, And(purchase_frequency(c, promotion) == increase, purchase_frequency(c, no_promotion) == decrease))) ::: Long-term customers increase their purchase amount but reduce the frequency during the promotion\nForAll([c:customers], Implies(c == new_customers, purchase_frequency(c, no_promotion) == no_change)) ::: New customers may not return after the promotion\n\n# Options\nQuestion ::: If the following statement is true, which one weakens the manager's assertion the most?\nis_weakening(Implies(shopping_behavior(small_shoppers, promotion) == more_than_500, shopping_behavior(small_shoppers, no_promotion) == less_than_500)) ::: (A)\nis_weakening(Implies(shopping_behavior(large_shoppers, promotion) == more_than_500, shopping_behavior(large_shoppers, no_promotion) == more_than_500)) ::: (B)\nis_weakening(Implies(purchase_frequency(long_term_customers, promotion) == increase, purchase_frequency(long_term_customers, no_promotion) == decrease)) ::: (C)\nis_weakening(Implies(purchase_frequency(new_customers, promotion) == increase, purchase_frequency(new_customers, no_promotion) == no_change)) ::: (D)"
    ]
  },
  {
    "id": 588,
    "context": "Nutritionist? It is deceptive to promote any kind of health products to cure diseases.However, for people with irregular diets, it is necessary to take certain health products.",
    "question": "If you accept the nutritionist's opinion, you must accept which of the following statements?",
    "answer": "A",
    "options": [
      "A.Some health products are necessary for some people to take.",
      "B.People who are already ill should not take health supplements because they cannot cure the disease.",
      "C.Not all people need to take health supplements.",
      "D.For people with regular diet, taking any health products is unnecessary."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([irregular_diet, regular_diet, already_ill])\nhealth_products = EnumSort([necessary, unnecessary])\npromote = Function([health_products] -> [bool])\ntake = Function([people, health_products] -> [bool])\n\n# Constraints\nForAll([hp:health_products], Not(promote(hp))) ::: It is deceptive to promote any kind of health products to cure diseases\ntake(irregular_diet, necessary) ::: For people with irregular diets, it is necessary to take certain health products\n\n# Options\nQuestion ::: If you accept the nutritionist's opinion, you must accept which of the following statements?\nis_valid(Exists([p:people], take(p, necessary))) ::: (A) Some health products are necessary for some people to take.\nis_valid(ForAll([p:people], Implies(p == already_ill, Not(take(p, necessary))))) ::: (B) People who are already ill should not take health supplements because they cannot cure the disease.\nis_valid(Exists([p:people], Not(take(p, necessary)))) ::: (C) Not all people need to take health supplements.\nis_valid(ForAll([p:people], Implies(p == regular_diet, Not(take(p, necessary))))) ::: (D) For people with regular diet, taking any health products is unnecessary."
    ]
  },
  {
    "id": 589,
    "context": "In the first half of this year, Beijing Kaihua Taxi received twice as many passenger complaints as Beijing Anda Taxi, indicating that Anda Taxi has more standardized management and higher service quality than Kaihua Taxi.",
    "question": "If the following statement is true, which one best supports the above conclusion?",
    "answer": "C",
    "options": [
      "A.Kaihua Taxi's number of complaints is not as high as that of Anda Taxi.",
      "B.Kaihua Taxi's number of complaints has risen faster than that of Anda Taxi.",
      "C.Anda Taxi has twice as many vehicles as Kaihua Taxi.",
      "D.Complaint calls to Kaihua Taxi are usually longer than complaints to Anda Taxi."
    ],
    "raw_logic_programs": [
      "# Declarations\ntaxi_companies = EnumSort([Kaihua, Anda])\ncomplaints = Function([taxi_companies] -> [int])\nvehicles = Function([taxi_companies] -> [int])\n\n# Constraints\ncomplaints(Kaihua) == 2 * complaints(Anda) ::: Beijing Kaihua Taxi received twice as many passenger complaints as Beijing Anda Taxi\n\n# Options\nQuestion ::: If the following statement is true, which one best supports the above conclusion?\nis_supportive(complaints(Kaihua) < complaints(Anda)) ::: (A) Kaihua Taxi's number of complaints is not as high as that of Anda Taxi.\nis_supportive(complaints(Kaihua) > complaints(Anda)) ::: (B) Kaihua Taxi's number of complaints has risen faster than that of Anda Taxi.\nis_supportive(vehicles(Anda) == 2 * vehicles(Kaihua)) ::: (C) Anda Taxi has twice as many vehicles as Kaihua Taxi.\nis_supportive(complaints(Kaihua) > complaints(Anda)) ::: (D) Complaint calls to Kaihua Taxi are usually longer than complaints to Anda Taxi."
    ]
  },
  {
    "id": 590,
    "context": "A music producer is recording 7 albums one after another? F, G, H, J, K, L and M, but it is not necessary to record in this order.When arranging the sequence of recording these 7 albums, the following conditions must be met? (l) F must be ranked second.(2) J cannot be ranked seventh.(3) G can neither be directly in front of H nor immediately after H.(4) H must be somewhere in front of L.(5) L must be somewhere before M.",
    "question": "Which of the following can be the order of recording these 7 records from 1 to 7?",
    "answer": "B",
    "options": [
      "A.F, K, G, L, H, J, M",
      "B.G, F, H, K, L, J, M",
      "C.G, F, H, K, L, M, J",
      "D.K, F, G, H, J, L, M"
    ],
    "raw_logic_programs": [
      "# Declarations\nalbums = EnumSort([F, G, H, J, K, L, M])\norder = Function([albums] -> [int])\nForAll([a:albums], And(1 <= order(a), order(a) <= 7))\n\n# Constraints\norder(F) == 2 ::: F must be ranked second\norder(J) != 7 ::: J cannot be ranked seventh\nNot(Or(order(G) == order(H) - 1, order(G) == order(H) + 1)) ::: G can neither be directly in front of H nor immediately after H\norder(H) < order(L) ::: H must be somewhere in front of L\norder(L) < order(M) ::: L must be somewhere before M\n\n# Options\nQuestion ::: Which of the following can be the order of recording these 7 records from 1 to 7?\nis_valid(And(order(F) == 2, order(K) == 1, order(G) == 3, order(L) == 4, order(H) == 5, order(J) == 6, order(M) == 7)) ::: (A)\nis_valid(And(order(G) == 1, order(F) == 2, order(H) == 3, order(K) == 4, order(L) == 5, order(J) == 6, order(M) == 7)) ::: (B)\nis_valid(And(order(G) == 1, order(F) == 2, order(H) == 3, order(K) == 4, order(L) == 5, order(M) == 6, order(J) == 7)) ::: (C)\nis_valid(And(order(K) == 1, order(F) == 2, order(G) == 3, order(H) == 4, order(J) == 5, order(L) == 6, order(M) == 7)) ::: (D)"
    ]
  },
  {
    "id": 591,
    "context": "A music producer is recording 7 albums one after another? F, G, H, J, K, L and M, but it is not necessary to record in this order.When arranging the sequence of recording these 7 albums, the following conditions must be met? (l) F must be ranked second.(2) J cannot be ranked seventh.(3) G can neither be directly in front of H nor immediately after H.(4) H must be somewhere in front of L.(5) L must be somewhere before M.",
    "question": "If M is somewhere before J and somewhere before K, which of the following must be true?",
    "answer": "C",
    "options": [
      "A.K seventh",
      "B.L third",
      "C.H is either in front of F or immediately after F",
      "D.L either immediately before G or immediately after G"
    ],
    "raw_logic_programs": [
      "# Declarations\nalbums = EnumSort([F, G, H, J, K, L, M])\nposition = Function([albums] -> [int])\nForAll([a:albums], And(1 <= position(a), position(a) <= 7))\n\n# Constraints\nposition(F) == 2 ::: F must be ranked second\nposition(J) != 7 ::: J cannot be ranked seventh\nNot(Or(position(G) == position(H) + 1, position(G) == position(H) - 1)) ::: G can neither be directly in front of H nor immediately after H\nposition(H) < position(L) ::: H must be somewhere in front of L\nposition(L) < position(M) ::: L must be somewhere before M\nposition(M) < position(J) ::: M is somewhere before J\nposition(M) < position(K) ::: M is somewhere before K\n\n# Options\nQuestion ::: If M is somewhere before J and somewhere before K, which of the following must be true?\nis_must_true(position(K) == 7) ::: (A)\nis_must_true(position(L) == 3) ::: (B)\nis_must_true(Or(position(H) < position(F), position(H) == position(F) + 1)) ::: (C)\nis_must_true(Or(position(L) == position(G) - 1, position(L) == position(G) + 1)) ::: (D)"
    ]
  },
  {
    "id": 592,
    "context": "A music producer is recording 7 albums one after another? F, G, H, J, K, L and M, but it is not necessary to record in this order.When arranging the sequence of recording these 7 records, the following conditions must be met? (1) F must be ranked second.(2) J cannot be ranked seventh.(3) G can neither be directly in front of H nor immediately after H.(4) H must be somewhere in front of L.(5) L must be somewhere before M.",
    "question": "Which of the following lists a complete and accurate list of records that can be recorded first?",
    "answer": "B",
    "options": [
      "A.G, J, K",
      "B.G, H, J, K",
      "C.G, H, J, L",
      "D.G, J, K, L"
    ],
    "raw_logic_programs": [
      "# Declarations\nalbums = EnumSort([F, G, H, J, K, L, M])\nposition = Function([albums] -> [int])\nForAll([a:albums], And(1 <= position(a), position(a) <= 7))\n\n# Constraints\nposition(F) == 2 ::: F must be ranked second\nposition(J) != 7 ::: J cannot be ranked seventh\nNot(Or(position(G) == position(H) - 1, position(G) == position(H) + 1)) ::: G can neither be directly in front of H nor immediately after H\nposition(H) < position(L) ::: H must be somewhere in front of L\nposition(L) < position(M) ::: L must be somewhere before M\n\n# Options\nQuestion ::: Which of the following lists a complete and accurate list of records that can be recorded first?\nis_accurate_list([position(G) == 1, position(J) == 1, position(K) == 1]) ::: (A)\nis_accurate_list([position(G) == 1, position(H) == 1, position(J) == 1, position(K) == 1]) ::: (B)\nis_accurate_list([position(G) == 1, position(H) == 1, position(J) == 1, position(L) == 1]) ::: (C)\nis_accurate_list([position(G) == 1, position(J) == 1, position(K) == 1, position(L) == 1]) ::: (D)"
    ]
  },
  {
    "id": 593,
    "context": "A music producer is recording 7 albums one after another? F, G, H, J, K, L and M, but it is not necessary to record in this order.When arranging the sequence of recording these 7 albums, the following conditions must be met? (l) F must be ranked second.(2) J cannot be ranked seventh.(3) G can neither be directly in front of H nor immediately after H.(4) H must be somewhere in front of L.(5) L must be somewhere before M.",
    "question": "The earliest position for recording M is",
    "answer": "C",
    "options": [
      "A first",
      "B Third",
      "C Fourth",
      "D fifth"
    ],
    "raw_logic_programs": [
      "# Declarations\nalbums = EnumSort([F, G, H, J, K, L, M])\nposition = Function([albums] -> [int])\nForAll([a:albums], And(1 <= position(a), position(a) <= 7))\n\n# Constraints\nposition(F) == 2 ::: F must be ranked second\nposition(J) != 7 ::: J cannot be ranked seventh\nNot(Or(position(G) == position(H) - 1, position(G) == position(H) + 1)) ::: G can neither be directly in front of H nor immediately after H\nposition(H) < position(L) ::: H must be somewhere in front of L\nposition(L) < position(M) ::: L must be somewhere before M\n\n# Options\nQuestion ::: The earliest position for recording M is\nis_earliest(position(M) == 1) ::: (A)\nis_earliest(position(M) == 3) ::: (B)\nis_earliest(position(M) == 4) ::: (C)\nis_earliest(position(M) == 5) ::: (D)"
    ]
  },
  {
    "id": 594,
    "context": "A music producer is recording 7 albums one after another? F, G, H, J, K, L and M, but it is not necessary to record in this order.When arranging the sequence of recording these 7 albums, the following conditions must be met? (l) F must be ranked second.(2) J cannot be ranked seventh.(3) G can neither be directly in front of H nor immediately after H.(4) H must be somewhere in front of L.(5) L must be somewhere before M.",
    "question": "If G is immediately in front of H but all other conditions are still valid, any of the following options can be true except",
    "answer": "D",
    "options": [
      "A.J is right in front of F",
      "B.K is right in front of G",
      "C.J immediately behind L",
      "D.J immediately behind K"
    ],
    "raw_logic_programs": [
      "# Declarations\nalbums = EnumSort([F, G, H, J, K, L, M])\nrecorded = Function([albums] -> [int])\nForAll([a:albums], And(1 <= recorded(a), recorded(a) <= 7))\n\n# Constraints\nrecorded(F) == 2 ::: F must be ranked second\nrecorded(J) != 7 ::: J cannot be ranked seventh\nNot(Or(recorded(G) == recorded(H) - 1, recorded(G) == recorded(H) + 1)) ::: G can neither be directly in front of H nor immediately after H\nrecorded(H) < recorded(L) ::: H must be somewhere in front of L\nrecorded(L) < recorded(M) ::: L must be somewhere before M\n\n# Additional Constraint for the Question\nrecorded(G) == recorded(H) - 1 ::: G is immediately in front of H\n\n# Options\nQuestion ::: If G is immediately in front of H but all other conditions are still valid, any of the following options can be true except\nis_exception(is_sat(recorded(J) == recorded(F) - 1)) ::: (A) J is right in front of F\nis_exception(is_sat(recorded(K) == recorded(G) - 1)) ::: (B) K is right in front of G\nis_exception(is_sat(recorded(J) == recorded(L) + 1)) ::: (C) J immediately behind L\nis_exception(is_sat(recorded(J) == recorded(K) + 1)) ::: (D) J immediately behind K"
    ]
  },
  {
    "id": 595,
    "context": "There are 7 outstanding students G, H, L, M, U, W and Z in a school.During the summer vacation, the school will send them to the United Kingdom and the United States for inspection.The school has only 7 students participating in this activity, and each person happens to go to one of these two countries.Considering the specialty of each student, this activity must meet the following conditions? (1) If G goes to the UK, then H To the United States.(2) If L goes to the UK, both M and U go to the US.(3) The country w went to was different from the country Z went to.(4) The country where U goes is different from the country where G goes.(5) If Z goes to the UK, then H also goes to the UK.",
    "question": "Which of the following can be used as a complete and accurate list of students going to the UK?",
    "answer": "D",
    "options": [
      "A.G, H, M, W",
      "B.G, L, Z",
      "C.H, M, Z",
      "D.M, U, W"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\nstudents = EnumSort([G, H, L, M, U, W, Z])\ncountries = EnumSort([UK, US])\ngoes_to = Function([students] -> [countries])\n\n# Constraints\nImplies(goes_to(G) == UK, goes_to(H) == US) ::: If G goes to the UK, then H goes to the United States\nImplies(goes_to(L) == UK, And(goes_to(M) == US, goes_to(U) == US)) ::: If L goes to the UK, both M and U go to the US\ngoes_to(W) != goes_to(Z) ::: The country W went to was different from the country Z went to\ngoes_to(U) != goes_to(G) ::: The country where U goes is different from the country where G goes\nImplies(goes_to(Z) == UK, goes_to(H) == UK) ::: If Z goes to the UK, then H also goes to the UK\n\n# Options\nQuestion ::: Which of the following can be used as a complete and accurate list of students going to the UK?\nis_accurate_list([goes_to(G) == UK, goes_to(H) == UK, goes_to(M) == UK, goes_to(W) == UK]) ::: (A)\nis_accurate_list([goes_to(G) == UK, goes_to(L) == UK, goes_to(Z) == UK]) ::: (B)\nis_accurate_list([goes_to(H) == UK, goes_to(M) == UK, goes_to(Z) == UK]) ::: (C)\nis_accurate_list([goes_to(M) == UK, goes_to(U) == UK, goes_to(W) == UK]) ::: (D)\n```"
    ]
  },
  {
    "id": 596,
    "context": "There are 7 outstanding students G, H, L, M, U, W and Z in a school.During the summer vacation, the school will send them to the United Kingdom and the United States for inspection.The school has only 7 students participating in this activity, and each person happens to go to one of these two countries.Considering the specialty of each student, this activity must meet the following conditions? (1) If G goes to the UK, then H To the United States.(2) If L goes to the UK, both M and U go to the US.(3) The country w went to was different from the country Z went to.(4) The country where U goes is different from the country where G goes.(5) If Z goes to the UK, then H also goes to the UK.",
    "question": "Which two of the following cannot go to the US together?",
    "answer": "A",
    "options": [
      "A.H and W",
      "B.G and W",
      "C.G and H",
      "D.M and U"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([G, H, L, M, U, W, Z])\ncountries = EnumSort([UK, US])\ngoes_to = Function([students] -> [countries])\n\n# Constraints\nImplies(goes_to(G) == UK, goes_to(H) == US) ::: If G goes to the UK, then H goes to the United States\nImplies(goes_to(L) == UK, And(goes_to(M) == US, goes_to(U) == US)) ::: If L goes to the UK, both M and U go to the US\ngoes_to(W) != goes_to(Z) ::: The country W went to was different from the country Z went to\ngoes_to(U) != goes_to(G) ::: The country where U goes is different from the country where G goes\nImplies(goes_to(Z) == UK, goes_to(H) == UK) ::: If Z goes to the UK, then H also goes to the UK\n\n# Options\nQuestion ::: Which two of the following cannot go to the US together?\nis_unsat(And(goes_to(H) == US, goes_to(W) == US)) ::: (A)\nis_unsat(And(goes_to(G) == US, goes_to(W) == US)) ::: (B)\nis_unsat(And(goes_to(G) == US, goes_to(H) == US)) ::: (C)\nis_unsat(And(goes_to(M) == US, goes_to(U) == US)) ::: (D)"
    ]
  },
  {
    "id": 597,
    "context": "There are 7 outstanding students G, H, L, M, U, W and Z in a school.During the summer vacation, the school will send them to the United Kingdom and the United States for inspection.The school has only 7 students participating in this activity, and each person happens to go to one of these two countries.Considering the specialty of each student, this activity must meet the following conditions? (1) If G goes to the UK, then H To the United States.(2) If L goes to the UK, both M and U go to the US.(3) The country w went to was different from the country Z went to.(4) The country where U goes is different from the country where G goes.(5) If Z goes to the UK, then H also goes to the UK.",
    "question": "How many students can go to the UK together?",
    "answer": "C",
    "options": [
      "A.2",
      "B.3",
      "C.4",
      "D.5"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([G, H, L, M, U, W, Z])\ncountries = EnumSort([UK, US])\ngoes_to = Function([students] -> [countries])\n\n# Constraints\nImplies(goes_to(G) == UK, goes_to(H) == US) ::: If G goes to the UK, then H goes to the United States\nImplies(goes_to(L) == UK, And(goes_to(M) == US, goes_to(U) == US)) ::: If L goes to the UK, both M and U go to the US\ngoes_to(W) != goes_to(Z) ::: The country W went to was different from the country Z went to\ngoes_to(U) != goes_to(G) ::: The country where U goes is different from the country where G goes\nImplies(goes_to(Z) == UK, goes_to(H) == UK) ::: If Z goes to the UK, then H also goes to the UK\n\n# Options\nQuestion ::: How many students can go to the UK together?\nis_valid(Count([s:students], goes_to(s) == UK) == 2) ::: (A)\nis_valid(Count([s:students], goes_to(s) == UK) == 3) ::: (B)\nis_valid(Count([s:students], goes_to(s) == UK) == 4) ::: (C)\nis_valid(Count([s:students], goes_to(s) == UK) == 5) ::: (D)"
    ]
  },
  {
    "id": 598,
    "context": "There are 7 outstanding students G, H, L, M, U, W and Z in a school.During the summer vacation, the school will send them to the United Kingdom and the United States for inspection.The school has only 7 students participating in this activity, and each person happens to go to one of these two countries.Considering the specialty of each student, this activity must meet the following conditions? (1) If G goes to the UK, then H To the United States.(2) If L goes to the UK, both M and U go to the US.(3) The country w went to was different from the country Z went to.(4) The country where U goes is different from the country where G goes.(5) If Z goes to the UK, then H also goes to the UK.",
    "question": "If both M and W go to the UK, which of the following can be true?",
    "answer": "D",
    "options": [
      "A.G and L both go to the UK",
      "B.G and U both go to America",
      "C.H and Z go to the UK",
      "D.L and U both go to America"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([G, H, L, M, U, W, Z])\ncountries = EnumSort([UK, US])\ngoes_to = Function([students] -> [countries])\n\n# Constraints\nImplies(goes_to(G) == UK, goes_to(H) == US) ::: If G goes to the UK, then H goes to the United States\nImplies(goes_to(L) == UK, And(goes_to(M) == US, goes_to(U) == US)) ::: If L goes to the UK, both M and U go to the US\ngoes_to(W) != goes_to(Z) ::: The country W went to was different from the country Z went to\ngoes_to(U) != goes_to(G) ::: The country where U goes is different from the country where G goes\nImplies(goes_to(Z) == UK, goes_to(H) == UK) ::: If Z goes to the UK, then H also goes to the UK\nAnd(goes_to(M) == UK, goes_to(W) == UK) ::: If both M and W go to the UK\n\n# Options\nQuestion ::: If both M and W go to the UK, which of the following can be true?\nis_sat(And(goes_to(G) == UK, goes_to(L) == UK)) ::: (A) G and L both go to the UK\nis_sat(And(goes_to(G) == US, goes_to(U) == US)) ::: (B) G and U both go to America\nis_sat(And(goes_to(H) == UK, goes_to(Z) == UK)) ::: (C) H and Z go to the UK\nis_sat(And(goes_to(L) == US, goes_to(U) == US)) ::: (D) L and U both go to America"
    ]
  },
  {
    "id": 599,
    "context": "There are 7 outstanding students G, H, L, M, U, W and Z in a school.During the summer vacation, the school will send them to the United Kingdom and the United States for inspection.The school has only 7 students participating in this activity, and each person happens to go to one of these two countries.Considering the specialty of each student, this activity must meet the following conditions? (1) If G goes to the UK, then H To the United States.(2) If L goes to the UK, both M and U go to the US.(3) The country w went to was different from the country Z went to.(4) The country where U goes is different from the country where G goes.(5) If Z goes to the UK, then H also goes to the UK.",
    "question": "If G goes to the United States, which of the following must be true?",
    "answer": "B",
    "options": [
      "A.H go to the UK",
      "B.L go to America",
      "C.M go to the UK",
      "D.W go to America"
    ],
    "raw_logic_programs": [
      "# Declarations\nstudents = EnumSort([G, H, L, M, U, W, Z])\ncountries = EnumSort([UK, US])\ngoes_to = Function([students] -> [countries])\n\n# Constraints\nImplies(goes_to(G) == UK, goes_to(H) == US) ::: If G goes to the UK, then H goes to the United States\nImplies(goes_to(L) == UK, And(goes_to(M) == US, goes_to(U) == US)) ::: If L goes to the UK, both M and U go to the US\ngoes_to(W) != goes_to(Z) ::: The country W went to was different from the country Z went to\ngoes_to(U) != goes_to(G) ::: The country where U goes is different from the country where G goes\nImplies(goes_to(Z) == UK, goes_to(H) == UK) ::: If Z goes to the UK, then H also goes to the UK\n\n# Options\nQuestion ::: If G goes to the United States, which of the following must be true?\nis_valid(goes_to(H) == UK) ::: (A)\nis_valid(goes_to(L) == US) ::: (B)\nis_valid(goes_to(M) == UK) ::: (C)\nis_valid(goes_to(W) == US) ::: (D)"
    ]
  },
  {
    "id": 600,
    "context": "Someone said? Reading thousands of books is not as good as traveling thousands of miles, traveling thousands of miles is not as good as reading countless people, reading countless people is not as good as the famous teacher, and the famous teacher is not as good as his own understanding.",
    "question": "The following items constitute a question of the above views, except",
    "answer": "C",
    "options": [
      "A.Countless readers will encounter famous teachers to guide them.",
      "B.The book has its own universe, and reading 10,000 volumes is like walking 10,000 volumes.",
      "C.If there is no famous teacher to guide the way, only by reading thousands of books and walking thousands of miles, he still can not understand.",
      "D.Traveling thousands of miles, traveling through thousands of worlds, there must be countless readers."
    ],
    "raw_logic_programs": [
      "# Declarations\nconcepts = EnumSort([books, travel, people, teacher, understanding])\nbetter_than = Function([concepts, concepts] -> [bool])\n\n# Constraints\nbetter_than(travel, books) ::: Traveling thousands of miles is better than reading thousands of books\nbetter_than(people, travel) ::: Reading countless people is better than traveling thousands of miles\nbetter_than(teacher, people) ::: A famous teacher is better than reading countless people\nbetter_than(understanding, teacher) ::: One's own understanding is better than a famous teacher\n\n# Options\nQuestion ::: The following items constitute a question of the above views, except\nis_exception(is_sat(Exists([c:concepts], better_than(teacher, c)))) ::: (A) Countless readers will encounter famous teachers to guide them.\nis_exception(is_sat(Exists([c:concepts], better_than(books, c)))) ::: (B) The book has its own universe, and reading 10,000 volumes is like walking 10,000 volumes.\nis_exception(is_sat(Exists([c:concepts], better_than(understanding, c)))) ::: (C) If there is no famous teacher to guide the way, only by reading thousands of books and walking thousands of miles, he still cannot understand.\nis_exception(is_sat(Exists([c:concepts], better_than(people, c)))) ::: (D) Traveling thousands of miles, traveling through thousands of worlds, there must be countless readers."
    ]
  },
  {
    "id": 601,
    "context": "When Einstein published the special theory of relativity, someone asked him what kind of reaction would the public expect? He replied? Very simple.If my theory is correct, then the Germans will say that I am German, the French will say that I am European, and the Americans will say that I am a citizen of the world; if my theory is incorrect , Then Americans will say I am European, French will say I am German, Germans will say I am Jewish.",
    "question": "If Einstein is true, which of the following statements must be true?",
    "answer": "A",
    "options": [
      "A.Some people will say that Einstein is German.",
      "B.Some would say that Einstein is a citizen of the world.",
      "C.Some would say that Einstein is Jewish.",
      "D.The French will say that Einstein is European."
    ],
    "raw_logic_programs": [
      "# Declarations\nnations = EnumSort([Germans, French, Americans])\nstatements = EnumSort([German, European, Citizen_of_the_world, Jewish])\ntheory_correct = Bool('theory_correct')\nsays = Function([nations, theory_correct] -> [statements])\n\n# Constraints\nForAll([n:nations], Or(says(n, True) == German, says(n, True) == European, says(n, True) == Citizen_of_the_world)) ::: If the theory is correct\nForAll([n:nations], Or(says(n, False) == European, says(n, False) == German, says(n, False) == Jewish)) ::: If the theory is incorrect\nsays(Germans, True) == German ::: If the theory is correct, Germans will say Einstein is German\nsays(French, True) == European ::: If the theory is correct, French will say Einstein is European\nsays(Americans, True) == Citizen_of_the_world ::: If the theory is correct, Americans will say Einstein is a citizen of the world\nsays(Americans, False) == European ::: If the theory is incorrect, Americans will say Einstein is European\nsays(French, False) == German ::: If the theory is incorrect, French will say Einstein is German\nsays(Germans, False) == Jewish ::: If the theory is incorrect, Germans will say Einstein is Jewish\n\n# Options\nQuestion ::: If Einstein is true, which of the following statements must be true?\nis_valid(Exists([n:nations], says(n, True) == German)) ::: (A) Some people will say that Einstein is German.\nis_valid(Exists([n:nations], says(n, True) == Citizen_of_the_world)) ::: (B) Some would say that Einstein is a citizen of the world.\nis_valid(Exists([n:nations], says(n, False) == Jewish)) ::: (C) Some would say that Einstein is Jewish.\nis_valid(says(French, True) == European) ::: (D) The French will say that Einstein is European."
    ]
  },
  {
    "id": 602,
    "context": "The World Health Organization reports that millions of people worldwide die from various medical accidents each year.In hospitals in any country, the probability of death from a medical accident is not less than 0.3%.Therefore, even cancer patients should not go to the hospital for treatment, because going to the hospital will increase the risk of death.",
    "question": "In order to evaluate the above argument, the answer to which of the following questions is most important?",
    "answer": "A",
    "options": [
      "A.What percentage of cancer patients die of medical accidents will eventually die of cancer even if they do not experience a medical accident?",
      "B.What are the mortality rates of cancer patients who go to hospital and those who do not go to hospital?",
      "C.Is the probability of death from a medical accident declining due to the improvement of hospital management?",
      "D.Can patients use their own efforts to reduce the incidence of medical malpractice?"
    ],
    "raw_logic_programs": [
      "# Declarations\nprobability_of_death = Function([str] -> [float])\nmortality_rate = Function([str, bool] -> [float])  # (condition, goes_to_hospital)\nimprovement_effect = Function([str] -> [bool])  # (aspect)\n\n# Constraints\nprobability_of_death(\"medical_accident\") >= 0.003 ::: The probability of death from a medical accident is not less than 0.3%\n\n# Options\nQuestion ::: In order to evaluate the above argument, the answer to which of the following questions is most important?\nis_important(probability_of_death(\"cancer_without_accident\") > probability_of_death(\"cancer_with_accident\")) ::: (A)\nis_important(mortality_rate(\"cancer\", True) < mortality_rate(\"cancer\", False)) ::: (B)\nis_important(improvement_effect(\"hospital_management\")) ::: (C)\nis_important(improvement_effect(\"patient_effort\")) ::: (D)"
    ]
  },
  {
    "id": 603,
    "context": "Because of ignorance of Weibo, a director and a director leaked personal privacy on Weibo and exposed their unethical behaviors.They were investigated by relevant departments.Some netizens sneered at their behaviors and felt that? knowledge changes destiny.Knowledge also changes fate.",
    "question": "Which of the following statements is closest to the meaning expressed by the netizen?",
    "answer": "C",
    "options": [
      "A.Whether there is knowledge or not, it will change fate.",
      "B.The expression 'knowledge is power' is too exaggerated.In fact, power and money are power.",
      "C.With knowledge, fate changes from bad to good, and without knowledge, fate changes from good to bad.",
      "D.The original meaning of 'fate' is inherently doomed, and it will not induce material changes."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nmeaning_expressed = Function([statements] -> [bool])\n\n# Constraints\nForAll([s:statements], meaning_expressed(s) == False) ::: Initially, assume no statement is closest to the meaning expressed by the netizen\n\n# Options\nQuestion ::: Which of the following statements is closest to the meaning expressed by the netizen?\nmeaning_expressed(A) ::: (A) Whether there is knowledge or not, it will change fate.\nmeaning_expressed(B) ::: (B) The expression 'knowledge is power' is too exaggerated. In fact, power and money are power.\nmeaning_expressed(C) ::: (C) With knowledge, fate changes from bad to good, and without knowledge, fate changes from good to bad.\nmeaning_expressed(D) ::: (D) The original meaning of 'fate' is inherently doomed, and it will not induce material changes."
    ]
  },
  {
    "id": 604,
    "context": "In the university, many moderate and generous teachers are good teachers, but some serious and non-sense teachers are also good teachers, and all good teachers have a common feature? they are all knowledgeable people.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "B",
    "options": [
      "A.Many knowledgeable teachers are gentle and generous.",
      "B.Some knowledgeable teachers are serious and unsympathetic.",
      "C.All knowledgeable teachers are good teachers.",
      "D.Some knowledgeable teachers are not good teachers"
    ],
    "raw_logic_programs": [
      "# Declarations\nteachers = EnumSort([moderate, generous, serious, non_sense, good, knowledgeable])\nis_good_teacher = Function([teachers] -> [bool])\nis_knowledgeable = Function([teachers] -> [bool])\n\n# Constraints\nForAll([t:teachers], Implies(Or(t == moderate, t == generous), is_good_teacher(t))) ::: Many moderate and generous teachers are good teachers\nForAll([t:teachers], Implies(Or(t == serious, t == non_sense), is_good_teacher(t))) ::: Some serious and non-sense teachers are also good teachers\nForAll([t:teachers], Implies(is_good_teacher(t), is_knowledgeable(t))) ::: All good teachers are knowledgeable\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(Exists([t:teachers], And(is_knowledgeable(t), Or(t == moderate, t == generous)))) ::: (A) Many knowledgeable teachers are gentle and generous.\nis_must_true(Exists([t:teachers], And(is_knowledgeable(t), Or(t == serious, t == non_sense)))) ::: (B) Some knowledgeable teachers are serious and unsympathetic.\nis_must_true(ForAll([t:teachers], Implies(is_knowledgeable(t), is_good_teacher(t)))) ::: (C) All knowledgeable teachers are good teachers.\nis_must_true(Exists([t:teachers], And(is_knowledgeable(t), Not(is_good_teacher(t))))) ::: (D) Some knowledgeable teachers are not good teachers."
    ]
  },
  {
    "id": 605,
    "context": "The Agreement on Trade-Related Aspects of Intellectual Property Rights stipulates that patents for inventions shall not be granted simply because the national laws of member countries prohibit the commercial implementation of certain inventions.",
    "question": "Knowing that country A is a member of the Agreement on Trade-Related Aspects of Intellectual Property Rights, which of the following statements is inconsistent with the above provisions?",
    "answer": "C",
    "options": [
      "A.It cannot be concluded from the prohibition of the commercial implementation of an invention in the laws of country A that the invention cannot be granted a patent right.",
      "B.It is not possible from the law of country A to grant a patent right for an invention to allow commercial implementation of the invention.",
      "C.In country A.the commercial implementation of an eavesdropping device is prohibited by law, so it is not allowed to grant its patent rights.",
      "D.In country A.an invention to improve gun sighting was granted a patent, but the commercial implementation of the invention was prohibited"
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([country_A])\ninventions = EnumSort([eavesdropping_device, gun_sighting])\nlaws = Function([countries, inventions] -> [bool])  # true if commercial implementation is prohibited\npatent_granted = Function([countries, inventions] -> [bool])  # true if patent is granted\n\n# Constraints\nForAll([c:countries, i:inventions], Implies(laws(c, i), Not(patent_granted(c, i)))) ::: patents for inventions shall not be granted simply because the national laws of member countries prohibit the commercial implementation of certain inventions\n\n# Options\nQuestion ::: Knowing that country A is a member of the Agreement on Trade-Related Aspects of Intellectual Property Rights, which of the following statements is inconsistent with the above provisions?\nis_inconsistent(Implies(laws(country_A, eavesdropping_device), Not(patent_granted(country_A, eavesdropping_device)))) ::: (A)\nis_inconsistent(Not(Exists([i:inventions], And(laws(country_A, i), patent_granted(country_A, i))))) ::: (B)\nis_inconsistent(And(laws(country_A, eavesdropping_device), Not(patent_granted(country_A, eavesdropping_device)))) ::: (C)\nis_inconsistent(And(patent_granted(country_A, gun_sighting), laws(country_A, gun_sighting))) ::: (D)"
    ]
  },
  {
    "id": 606,
    "context": "Every politician has to please his voters.Although Ma Ying-jeou is an honest person, he is also a politician.No one can please his voters if he does not occasionally say something ambiguous.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "B",
    "options": [
      "A.Ma Ying-jeou will not say anything ambiguous.",
      "B.Ma Ying-jeou will say something ambiguous",
      "C.The politicians who say ambiguously are not honest people.",
      "D.Some honest people are not politicians."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Ma_Ying_jeou])\nroles = EnumSort([politician, honest_person])\nactions = EnumSort([say_ambiguous, not_say_ambiguous])\nis_role = Function([people, roles] -> [bool])\ndoes_action = Function([people, actions] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(is_role(p, politician), Exists([a:actions], does_action(p, a) == say_ambiguous))) ::: Every politician has to please his voters, and no one can please his voters if he does not occasionally say something ambiguous\nis_role(Ma_Ying_jeou, honest_person) ::: Ma Ying-jeou is an honest person\nis_role(Ma_Ying_jeou, politician) ::: Ma Ying-jeou is also a politician\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(does_action(Ma_Ying_jeou, not_say_ambiguous)) ::: (A) Ma Ying-jeou will not say anything ambiguous.\nis_must_true(does_action(Ma_Ying_jeou, say_ambiguous)) ::: (B) Ma Ying-jeou will say something ambiguous.\nis_must_true(ForAll([p:people], Implies(does_action(p, say_ambiguous), Not(is_role(p, honest_person))))) ::: (C) The politicians who say ambiguously are not honest people.\nis_must_true(Exists([p:people], And(is_role(p, honest_person), Not(is_role(p, politician))))) ::: (D) Some honest people are not politicians."
    ]
  },
  {
    "id": 607,
    "context": "Having the authority to allow a band, especially a first-rate band, to rehearse repeatedly is a sign of an excellent conductor.This prestige is not easy to obtain.A conductor must gain this prestige by earning the band's respect for the artistic insight he seeks.",
    "question": "In the course of the above discussion, the author presupposed which of the following statements?",
    "answer": "C",
    "options": [
      "A.When excellent conductors collaborate with different bands, they will have different artistic views on the same work.",
      "B.Excellent conductors are perfectionists, and they are never satisfied even with the performance of first-rate bands.",
      "C.If a good conductor thinks that additional rehearsals are necessary, first-rate bands are always ready to work overtime.",
      "D.Even if an artistic insight has not been fully expressed, first-rate bands can appreciate the advantages of this artistic insight"
    ],
    "raw_logic_programs": [
      "# Declarations\nconductors = EnumSort([excellent_conductor, good_conductor])\nbands = EnumSort([first_rate_band])\nrehearsals = Function([conductors, bands] -> [bool])\nprestige = Function([conductors] -> [bool])\nrespect = Function([bands, conductors] -> [bool])\nartistic_insight = Function([conductors] -> [bool])\n\n# Constraints\nForAll([c:conductors, b:bands], Implies(prestige(c), rehearsals(c, b))) ::: Having the authority to allow a band to rehearse repeatedly is a sign of an excellent conductor\nForAll([c:conductors], prestige(c) == Exists([b:bands], respect(b, c))) ::: A conductor must gain this prestige by earning the band's respect for the artistic insight he seeks\n\n# Options\nQuestion ::: In the course of the above discussion, the author presupposed which of the following statements?\nis_presupposed(ForAll([c:conductors, b1:bands, b2:bands], Implies(And(prestige(c), b1 != b2), artistic_insight(c)))) ::: (A)\nis_presupposed(ForAll([c:conductors], Implies(prestige(c), Not(rehearsals(c, first_rate_band))))) ::: (B)\nis_presupposed(ForAll([c:conductors], Implies(And(good_conductor == c, rehearsals(c, first_rate_band)), respect(first_rate_band, c)))) ::: (C)\nis_presupposed(ForAll([b:bands, c:conductors], Implies(And(prestige(c), Not(artistic_insight(c))), respect(b, c)))) ::: (D)"
    ]
  },
  {
    "id": 608,
    "context": "In 2010, the Ministry of Health launched a new national standard for the dairy industry, which reduced the protein content of raw milk from 2.95% to 2.8%.The new standard did not rise but decreased, raising questions.An industry insider explained that if our milk testing standards set the protein content too high, dairy farmers will add milk to the milk to increase protein testing content, such as melamine, in order to meet the standard.The melamine incident in 2008 showed that the original standard was too high.",
    "question": "Which of the following inferences contains the same logical error as that of the industry insider?",
    "answer": "C",
    "options": [
      "A.No real strong man is afraid of difficulties or challenges.Zhao Tao is afraid of difficulties or challenges, indicating that Zhao Tao is not a real strong man.",
      "B.If a typhoon lands in Haikou, the flight to Haikou will be cancelled.The flight to Haikou has not been cancelled, indicating that the typhoon has not landed in Haikou.",
      "C.If there are loopholes in the management of the railway sector, accidents will occur in railway transportation.7.23 The Wenzhou motor vehicle accident shows that there is a loophole in the management of the railway department.",
      "D.People only donate to a charity when they trust it, so charities that do n't get donated must lose the trust of the public."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nlogical_error = Function([statements] -> [bool])\n\n# Constraints\nlogical_error(A) == False ::: A does not contain the same logical error\nlogical_error(B) == False ::: B does not contain the same logical error\nlogical_error(C) == True ::: C contains the same logical error\nlogical_error(D) == False ::: D does not contain the same logical error\n\n# Options\nQuestion ::: Which of the following inferences contains the same logical error as that of the industry insider?\nis_true(logical_error(A)) ::: (A)\nis_true(logical_error(B)) ::: (B)\nis_true(logical_error(C)) ::: (C)\nis_true(logical_error(D)) ::: (D)"
    ]
  },
  {
    "id": 609,
    "context": "There are many people in modern society who are fat, have a beer belly, and are seriously overweight because they often drink beer.",
    "question": "The answers to the following questions may question the above argument, except",
    "answer": "C",
    "options": [
      "A.If people only drink beer and eat very few other things, especially meat, will they still gain weight?",
      "B.Why do many women and children in the United States drink cola, eat fried chicken and pizza, and their weight is severely overweight?",
      "C.In addition to drinking beer, do fat people regularly exercise?",
      "D.Many obese people also smoke at the same time.Can they say 'smoking causes weight gain'?"
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([person1, person2, ..., personN])\nactivities = EnumSort([drinks_beer, eats_meat, drinks_cola, eats_fried_chicken, eats_pizza, exercises, smokes])\nconditions = EnumSort([fat, beer_belly, overweight])\n\n# Constraints\nForAll([p:people], Implies(drinks_beer(p), Or(fat(p), beer_belly(p), overweight(p)))) ::: Many people in modern society who are fat, have a beer belly, and are seriously overweight because they often drink beer\n\n# Options\nQuestion ::: The answers to the following questions may question the above argument, except\nis_exception(is_sat(ForAll([p:people], Implies(And(drinks_beer(p), Not(eats_meat(p))), overweight(p))))) ::: (A)\nis_exception(is_sat(Exists([p:people], And(drinks_cola(p), eats_fried_chicken(p), eats_pizza(p), overweight(p))))) ::: (B)\nis_exception(is_sat(Exists([p:people], And(drinks_beer(p), exercises(p), Not(overweight(p)))))) ::: (C)\nis_exception(is_sat(Exists([p:people], And(smokes(p), overweight(p), Not(drinks_beer(p)))))) ::: (D)"
    ]
  },
  {
    "id": 610,
    "context": "Economist? The rapid growth of China's foreign exchange reserves in the past 10 years is one of the signs of China's economic success.Without the growth of external reserves, there would be no current international influence of China.However, without investing in foreign exchange reserves, there will be no growth in foreign exchange reserves.It is correct for foreign exchange reserve investment to face risks.As long as the investment seeks income, it must bear the risk.",
    "question": "Which of the following statements can be logically derived from the economist 's argument?",
    "answer": "D",
    "options": [
      "A.If they can take risks, there will be an increase in foreign exchange reserves.",
      "B.If you do not invest in foreign exchange reserves, you do not have to take risks.",
      "C.As long as foreign exchange reserves are invested, China can have international influence.",
      "D.China has current international influence because China has undertaken investment risks."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nconditions = EnumSort([growth_of_reserves, international_influence, investment_in_reserves, taking_risks])\nimplies = Function([conditions, conditions] -> [bool])\n\n# Constraints\nimplies(growth_of_reserves, international_influence) ::: Without the growth of external reserves, there would be no current international influence of China\nimplies(investment_in_reserves, growth_of_reserves) ::: Without investing in foreign exchange reserves, there will be no growth in foreign exchange reserves\nimplies(taking_risks, investment_in_reserves) ::: It is correct for foreign exchange reserve investment to face risks\nimplies(investment_in_reserves, taking_risks) ::: As long as the investment seeks income, it must bear the risk\n\n# Options\nQuestion ::: Which of the following statements can be logically derived from the economist's argument?\nis_derived(implies(taking_risks, growth_of_reserves)) ::: (A)\nis_derived(Not(implies(Not(investment_in_reserves), Not(taking_risks)))) ::: (B)\nis_derived(implies(investment_in_reserves, international_influence)) ::: (C)\nis_derived(implies(taking_risks, international_influence)) ::: (D)"
    ]
  },
  {
    "id": 611,
    "context": "A former deputy chairman of the Shanxi Vinegar Industry Association said that only 5% of Shanxi's old vinegar on the market is genuine Shanxi old vinegar without additives.In an interview with a reporter on this incident, a vice president of the China Condiment Association said? 'As long as additives are added according to national standards, there are no safety issues.Some companies emphasize that they do not add additives, which is true for companies that add additives according to normal standards unfair.'",
    "question": "Which of the following statements can be logically derived from the words of the vice president of the condiment association?",
    "answer": "C",
    "options": [
      "A.In order to ensure fairness, enterprises should either not produce products higher than national standards, or keep secrets about the fact that product quality is higher than national standards.",
      "B.To promote technological innovation in the industry, the national standards of the industry should be raised.",
      "C.The national standard of an industry is too high, which is not conducive to the healthy development of the industry.",
      "D.If additives are not added according to national standards, there will be safety problems."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nderived = Function([statements] -> [bool])\n\n# Constraints\n# The vice president's statement implies that as long as additives are added according to national standards, there are no safety issues.\n# It also implies that companies that do not add additives are unfair to those that do according to standards.\n\n# Options\nQuestion ::: Which of the following statements can be logically derived from the words of the vice president of the condiment association?\nis_derived(derived(D)) ::: (D) If additives are not added according to national standards, there will be safety problems.\nis_derived(Not(derived(A))) ::: (A) In order to ensure fairness, enterprises should either not produce products higher than national standards, or keep secrets about the fact that product quality is higher than national standards.\nis_derived(Not(derived(B))) ::: (B) To promote technological innovation in the industry, the national standards of the industry should be raised.\nis_derived(Not(derived(C))) ::: (C) The national standard of an industry is too high, which is not conducive to the healthy development of the industry."
    ]
  },
  {
    "id": 612,
    "context": "At midnight, little John sat quietly.He very much hoped it was morning so that he could go out and play football.He calmed down and prayed that the sun would rise earlier.As he prayed, the sky slowly changed.He continued to pray.The sun gradually rose above the horizon and rose into the sky.Little John thought about what happened and came to the conclusion that if he prayed, he would be able to turn a cold and lonely night into a warm and bright day.He is proud of himself.",
    "question": "Which of the following statements most appropriately points out a flaw in John 's reasoning?",
    "answer": "C",
    "options": [
      "A.Little John is just a child, he knows very little.",
      "B.The sun moves around the earth, whether he prays or not.",
      "C.One thing happened after he prayed does not mean that it happened because he prayed.",
      "D.What evidence does he have that if he does n't pray, that thing wo n't happen?"
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([prayed, sun_rise, warm_day])\ncauses = Function([events, events] -> [bool])\n\n# Constraints\ncauses(prayed, sun_rise) ::: Little John believes that his prayer caused the sun to rise\ncauses(sun_rise, warm_day) ::: The sun rising causes a warm and bright day\n\n# Options\nQuestion ::: Which of the following statements most appropriately points out a flaw in John's reasoning?\nis_flaw(causes(prayed, sun_rise) == False) ::: (A) Little John is just a child, he knows very little.\nis_flaw(causes(sun_rise, warm_day) == False) ::: (B) The sun moves around the earth, whether he prays or not.\nis_flaw(Implies(prayed, sun_rise) == False) ::: (C) One thing happened after he prayed does not mean that it happened because he prayed.\nis_flaw(Implies(Not(prayed), Not(sun_rise)) == False) ::: (D) What evidence does he have that if he doesn't pray, that thing won't happen?"
    ]
  },
  {
    "id": 613,
    "context": "The lower the credit rating of the borrower, the higher the cost of borrowing and the higher the rate of return for the creditor.On August 5, 2011, S & P downgraded the US sovereign credit rating from AAA to AA +.According to common sense, investors should reduce their holdings of U.S.Treasury bonds when they are in a safe haven, thereby pushing their prices down and yields rising.However, on August 8, the price of US Treasury bonds rose, and the yield fell, and the yield of the latest 10-year US Treasury bond fell to 2.34%, a new low this year.",
    "question": "If any of the following statements are true, can we best explain the above-mentioned violation of common sense?",
    "answer": "B",
    "options": [
      "A.On the evening of August 5, the US Treasury responded that S & P had a $ 2 trillion error in its rating calculations.",
      "B.Compared with the bonds of the European Union, Japan and other countries, US Treasuries are still relatively safe and liquid investment products.",
      "C.After the US sovereign credit rating was lowered, Russia began to reduce its holdings of US Treasury bonds, while China still increased its holdings of US Treasury bonds.",
      "D.In order to break the monopoly of three US rating agencies including S & P, the EU plans to establish a European credit rating agency."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nexplanation = Function([statements] -> [bool])\n\n# Constraints\n# The problem description does not provide specific constraints for the logic program, as it is more of an economic scenario analysis rather than a strict logical problem with defined variables and constraints.\n\n# Options\nQuestion ::: If any of the following statements are true, can we best explain the above-mentioned violation of common sense?\nis_best_explanation(explanation(A)) ::: (A)\nis_best_explanation(explanation(B)) ::: (B)\nis_best_explanation(explanation(C)) ::: (C)\nis_best_explanation(explanation(D)) ::: (D)"
    ]
  },
  {
    "id": 614,
    "context": "In the book 'Reflexive Life', Nozick wrote? 'I will not be like Socrates, saying that unreflexive life is not worth it-it is too harsh.But if we Is led by thoughtful reflection, then it is the life we â€‹â€‹live for ourselves, not others.In this sense, life without reflection is an incomplete life.'",
    "question": "The following items can be derived from Nozick 's statement, except",
    "answer": "B",
    "options": [
      "A.Nozick thinks that the lives worth living are all through reflection.",
      "B.Nozick believes that only life that lives for itself is a complete life.",
      "C.Nozick believes that a complete life is a life through reflection.",
      "D.Nozick believes that life without reflection is not a complete life."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\ntruth_value = Function([statements] -> [bool])\n\n# Constraints\ntruth_value(A) == False ::: Nozick does not think that all lives worth living are through reflection, as he states that unreflexive life is not worthless.\ntruth_value(B) == True ::: Nozick believes that a life lived for oneself, through reflection, is a complete life.\ntruth_value(C) == True ::: Nozick implies that a complete life involves reflection.\ntruth_value(D) == True ::: Nozick states that life without reflection is incomplete.\n\n# Options\nQuestion ::: The following items can be derived from Nozick's statement, except\nis_exception(truth_value(A)) ::: (A)\nis_exception(truth_value(B)) ::: (B)\nis_exception(truth_value(C)) ::: (C)\nis_exception(truth_value(D)) ::: (D)"
    ]
  },
  {
    "id": 615,
    "context": "There are so many people in China who are rich in Qiu, but they just lie to the scammers, just because they lie to the rich.I dare to conclude that those who scold the rich are dreaming of becoming rich every day.If they have a chance to become rich, they may not be cleaner than those they scold.Moreover, not all rich people are rich, but at least the rich people around me are not.I saw them working hard and compassionate.â€”â€” Some netizens commented on the Da Vinci furniture fraud incident online.",
    "question": "According to the netizen, it is not logical to determine which of the following statements is true or false?",
    "answer": "C",
    "options": [
      "A.Some rich haters are Chinese.",
      "B.Some rich people are not rich.",
      "C.Those who dream of becoming rich every day are scolding the rich.",
      "D.Some people who work hard and have compassion are rich."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([rich_haters, rich_people, dreamers, hardworking_compassionate])\nattributes = EnumSort([Chinese, rich, scold_rich, work_hard, compassionate])\nhas_attribute = Function([people, attributes] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(has_attribute(p, scold_rich), has_attribute(p, dreamers))) ::: Those who scold the rich are dreaming of becoming rich every day\nForAll([p:people], Implies(has_attribute(p, rich), Not(has_attribute(p, scold_rich)))) ::: If they have a chance to become rich, they may not be cleaner than those they scold\nExists([p:people], And(has_attribute(p, rich), Not(has_attribute(p, rich)))) ::: Some rich people are not rich\nExists([p:people], And(has_attribute(p, work_hard), has_attribute(p, compassionate), has_attribute(p, rich))) ::: Some people who work hard and have compassion are rich\n\n# Options\nQuestion ::: According to the netizen, it is not logical to determine which of the following statements is true or false?\nis_indeterminate(Exists([p:people], And(has_attribute(p, rich_haters), has_attribute(p, Chinese)))) ::: (A)\nis_indeterminate(Exists([p:people], And(has_attribute(p, rich_people), Not(has_attribute(p, rich))))) ::: (B)\nis_indeterminate(ForAll([p:people], Implies(has_attribute(p, dreamers), has_attribute(p, scold_rich)))) ::: (C)\nis_indeterminate(Exists([p:people], And(has_attribute(p, work_hard), has_attribute(p, compassionate), has_attribute(p, rich)))) ::: (D)"
    ]
  },
  {
    "id": 616,
    "context": "At present, there are 3 kinds of genetically modified rice in China that are waiting for commercial planting approval, each of which involves at least 5-12 foreign patents; 5 kinds of genetically modified rice are in the process of research and development, each involving 10 foreign patents.Some experts believe that rice is China's main food crop.If China allows the commercial cultivation of genetically modified rice, the state's control over the main food crops may be threatened.",
    "question": "If any of the following statements are true, will the expert's view be most strongly supported?",
    "answer": "D",
    "options": [
      "A.The advantage of transgenic rice is to resist specific pests, but rice in China rarely has these pests.",
      "B.At present, there is no transgenic rice that can exceed the yield and quality of China's super rice, hybrid rice and other varieties.",
      "C.After the introduction of genetically modified seeds in the United States, the prices of corn, cotton, soybeans and other seeds rose sharply.",
      "D.If our country grows genetically modified rice commercially, foreign patent holders will ban our farmers from keeping seeds and force them to buy seeds at high prices every sowing season."
    ],
    "raw_logic_programs": [
      "# Declarations\nrice_types = EnumSort([commercial_approval, research_development])\npatents = Function([rice_types] -> [int])\nmain_food_crop = Bool('main_food_crop')\nstate_control_threatened = Bool('state_control_threatened')\n\n# Constraints\nForAll([r:rice_types], And(5 <= patents(r), patents(r) <= 12)) ::: each genetically modified rice involves at least 5-12 foreign patents\npatents(research_development) == 10 ::: 5 kinds of genetically modified rice in research and development each involve 10 foreign patents\nmain_food_crop == True ::: rice is China's main food crop\n\n# Options\nQuestion ::: If any of the following statements are true, will the expert's view be most strongly supported?\nis_supported(And(state_control_threatened, Not(Exists([p:patents], p > 0)))) ::: (A)\nis_supported(And(state_control_threatened, Not(Exists([p:patents], p > 0)))) ::: (B)\nis_supported(And(state_control_threatened, Not(Exists([p:patents], p > 0)))) ::: (C)\nis_supported(And(state_control_threatened, Exists([p:patents], p > 0))) ::: (D)"
    ]
  },
  {
    "id": 617,
    "context": "Confucius knows the truth about eating and keeping in good health.'The Analects of Confucius Township' lists a lot of 'eating' and 'not eating' claims, such as 'not eating from time to time', which means not to eat anti-season vegetables.",
    "question": "Which of the following statements is the assumption that the above explanation must rely on?",
    "answer": "C",
    "options": [
      "A.Confucius has very high requirements on diet.",
      "B.Confucius lived in an era of both seasonal vegetables and anti-seasonal vegetables.",
      "C.We can choose to eat seasonal vegetables or anti-seasonal vegetables.",
      "D.Diet not only nourishes human body, but also shapes human soul."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nassumption = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, so we will focus on the options.\n\n# Options\nQuestion ::: Which of the following statements is the assumption that the above explanation must rely on?\nis_assumption(assumption(A)) ::: (A) Confucius has very high requirements on diet.\nis_assumption(assumption(B)) ::: (B) Confucius lived in an era of both seasonal vegetables and anti-seasonal vegetables.\nis_assumption(assumption(C)) ::: (C) We can choose to eat seasonal vegetables or anti-seasonal vegetables.\nis_assumption(assumption(D)) ::: (D) Diet not only nourishes human body, but also shapes human soul."
    ]
  },
  {
    "id": 618,
    "context": "In the noise, it is the responsibility of social managers to salvage the sunk sounds as much as possible.With the power of the government, maintaining the right of expression of the vulnerable groups so that their interests can be expressed normally through institutionalized and standardized channels is the key to building a harmonious society.Only in this way can 'speaking' and 'voicing' not only be the basic means of expressing demands, but also become an important link in fostering a healthy social mentality and a solid foundation for long-term social stability.",
    "question": "If which of the following statements is true, will the above argument be most strongly supported?",
    "answer": "B",
    "options": [
      "A.Some disadvantaged people lack medical treatment and medicine, and even do not get enough food and clothing.",
      "B.The vulnerable are the 'silent majority' in society.Once they are really angry, their power is enough to subvert the entire state machine.",
      "C.The appeals of some disadvantaged people cannot be expressed and satisfied for a long time, and they are susceptible to various mental diseases.",
      "D.Even in countries like the United States, there are many disadvantaged people who have no food and no place to live."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_argument = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, so we focus on the options.\n\n# Options\nQuestion ::: If which of the following statements is true, will the above argument be most strongly supported?\nsupports_argument(A) ::: (A) Some disadvantaged people lack medical treatment and medicine, and even do not get enough food and clothing.\nsupports_argument(B) ::: (B) The vulnerable are the 'silent majority' in society. Once they are really angry, their power is enough to subvert the entire state machine.\nsupports_argument(C) ::: (C) The appeals of some disadvantaged people cannot be expressed and satisfied for a long time, and they are susceptible to various mental diseases.\nsupports_argument(D) ::: (D) Even in countries like the United States, there are many disadvantaged people who have no food and no place to live."
    ]
  },
  {
    "id": 619,
    "context": "The case of Xu Yunhe in Tianjin? Xu Yunhe encountered the old lady over the fence of the center of the road while driving, and the old lady fell down and was injured.Xu picked her up.The old lady insisted that Xu bruised her.After judicial appraisal, Xu's car did not touch her.The court held in the first instance that Xu was only four or five meters away from Wang when she saw the old lady.She fell due to the scare of Xu's car.Xu was sentenced to 40% of the liability and compensated Mrs.Wang for RMB 108606.",
    "question": "Which of the following statements best pointed out the deficiencies in the first instance of the case?",
    "answer": "A",
    "options": [
      "A.The judge's reasoning is contrary to common sense? Mrs.Wang was crossing the road guardrail in violation of the regulations.She should be expected to have a car on the motorway, and being frightened usually sees something unexpected.",
      "B.The verdict violated traditional morals? like the Nanjing Peng Yu case, it would prevent the public from dare to extend a helping hand to the injured.",
      "C.The verdict did not clarify the facts and the evidence was seriously insufficient.It is possible that Mrs.Wang fell first and Xu Cai drove over.",
      "D.The judgment reversed the cause and the result."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([Xu_driving, Old_lady_falling, Xu_picking_up])\nliabilities = EnumSort([Xu, Old_lady])\nactions = EnumSort([driving, falling, picking_up])\ncourt_decision = Function([events] -> [liabilities])\n\n# Constraints\ncourt_decision(Xu_driving) == Xu ::: Xu was driving\ncourt_decision(Old_lady_falling) == Old_lady ::: The old lady fell\ncourt_decision(Xu_picking_up) == Xu ::: Xu picked her up\ncourt_decision(Old_lady_falling) != Xu ::: Xu's car did not touch her\n\n# Options\nQuestion ::: Which of the following statements best pointed out the deficiencies in the first instance of the case?\nis_best_pointed_out(court_decision(Xu_driving) == Old_lady) ::: (A) The judge's reasoning is contrary to common sense\nis_best_pointed_out(court_decision(Xu_picking_up) == Old_lady) ::: (B) The verdict violated traditional morals\nis_best_pointed_out(court_decision(Old_lady_falling) == Xu) ::: (C) The verdict did not clarify the facts and the evidence was seriously insufficient\nis_best_pointed_out(court_decision(Xu_driving) == Old_lady) ::: (D) The judgment reversed the cause and the result"
    ]
  },
  {
    "id": 620,
    "context": "British doctor John Snow's 'wastewater theory' started the history of epidemiological research.In 1854, a large-scale cholera broke out in London.John Snow found that most deaths had been drinking from the same pump, and people who used other pumps or wells did not initially contract cholera.After investigation, the wastewater from the sewer contaminated the pump, which caused cholera.",
    "question": "Which of the following options is a method or principle not used by John Snow 's reasoning?",
    "answer": "C",
    "options": [
      "A.The factors that are present on all occasions where the phenomenon under study is likely to be the cause of the phenomenon.",
      "B.Factors that do not appear on all occasions where the subject does not appear are probably not the cause of this phenomenon.",
      "C.When the object under study changes, the factor that changes synchronously is likely to be the cause of this phenomenon.",
      "D.Proposal between the occasion where the researched object appears and the occasion where the phenomenon does not appear is likely to be the cause of the phenomenon."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([present_all, absent_all, changes_synchronously, proposal_between])\nreasoning_used = Function([factors] -> [bool])\n\n# Constraints\nreasoning_used(present_all) ::: The factors that are present on all occasions where the phenomenon under study is likely to be the cause of the phenomenon\nreasoning_used(absent_all) ::: Factors that do not appear on all occasions where the subject does not appear are probably not the cause of this phenomenon\nreasoning_used(changes_synchronously) ::: When the object under study changes, the factor that changes synchronously is likely to be the cause of this phenomenon\n\n# Options\nQuestion ::: Which of the following options is a method or principle not used by John Snow's reasoning?\nis_not_used(reasoning_used(proposal_between)) ::: (D)"
    ]
  },
  {
    "id": 621,
    "context": "Nero was the Roman emperor in the first century AD.Every Roman emperor drinks wine, and only uses tin jugs and tin goblets.No matter who it is, as long as it uses tin utensils to drink alcohol, even if it is only used once, it will cause poisoning.And poisoning always leads to insanity.",
    "question": "If the above statements are true, which of the following statements must be true?",
    "answer": "B",
    "options": [
      "A.Those who are insane have used tin ware at least once to drink wine.",
      "B.Regardless of his other aspects, Emperor Nero must be insane.",
      "C.The use of tin ware was a privilege of the Roman emperor.",
      "D.Poisoning is a common phenomenon among the subjects of the Roman dynasty."
    ],
    "raw_logic_programs": [
      "# Declarations\npeople = EnumSort([Nero, Roman_emperors, others])\nutensils = EnumSort([tin_jugs, tin_goblets])\nactions = EnumSort([drinks_wine, uses_tin_utensils, gets_poisoned, becomes_insane])\nuses = Function([people, utensils] -> [bool])\nperforms = Function([people, actions] -> [bool])\n\n# Constraints\nForAll([p:people], Implies(p == Roman_emperors, performs(p, drinks_wine))) ::: Every Roman emperor drinks wine\nForAll([p:people], Implies(performs(p, drinks_wine), Or(uses(p, tin_jugs), uses(p, tin_goblets)))) ::: Only uses tin jugs and tin goblets\nForAll([p:people, u:utensils], Implies(uses(p, u), performs(p, gets_poisoned))) ::: Using tin utensils to drink alcohol causes poisoning\nForAll([p:people], Implies(performs(p, gets_poisoned), performs(p, becomes_insane))) ::: Poisoning always leads to insanity\n\n# Options\nQuestion ::: If the above statements are true, which of the following statements must be true?\nis_valid(ForAll([p:people], Implies(performs(p, becomes_insane), Exists([u:utensils], uses(p, u))))) ::: (A) Those who are insane have used tin ware at least once to drink wine.\nis_valid(performs(Nero, becomes_insane)) ::: (B) Regardless of his other aspects, Emperor Nero must be insane.\nis_valid(ForAll([p:people], Implies(p == Roman_emperors, Exists([u:utensils], uses(p, u))))) ::: (C) The use of tin ware was a privilege of the Roman emperor.\nis_valid(Exists([p:people], performs(p, gets_poisoned))) ::: (D) Poisoning is a common phenomenon among the subjects of the Roman dynasty."
    ]
  },
  {
    "id": 622,
    "context": "Palestine is preparing to apply for membership in the United Nations in September 2011, and has won support from 40 countries.If the United States uses the veto power in the Security Council to prevent Palestine from entering the United Nations, it will ignite anti-American sentiment throughout the Arab world.If the United States does not use the veto power, it will offend Israel and cause Obama to lose some of the voters who support Israel.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "C",
    "options": [
      "A.The United States will use its veto power in the Security Council to prevent Palestine from entering the United Nations.",
      "B.The United States will not offend Israel, but it will ignite anti-American sentiment throughout the Arab world.",
      "C.The United States will ignite anti-American sentiment in the Arab world, or Obama will lose some voters who support Israel.",
      "D.Even if the United States uses its veto power, the United Nations General Assembly still intends to vote to make Palestine an observer with national status."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([veto_used, veto_not_used, anti_american_sentiment, offend_israel, lose_voters])\noutcomes = Function([events] -> [bool])\n\n# Constraints\noutcomes(veto_used) -> outcomes(anti_american_sentiment) ::: If the United States uses the veto power, it will ignite anti-American sentiment\noutcomes(veto_not_used) -> outcomes(offend_israel) ::: If the United States does not use the veto power, it will offend Israel\noutcomes(veto_not_used) -> outcomes(lose_voters) ::: If the United States does not use the veto power, Obama will lose some voters\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(Or(outcomes(anti_american_sentiment), outcomes(lose_voters))) ::: (C) The United States will ignite anti-American sentiment in the Arab world, or Obama will lose some voters who support Israel."
    ]
  },
  {
    "id": 623,
    "context": "Companies created through venture capital financing have a lower failure rate than companies created through other channels.It can be seen that, compared with the personal qualities of entrepreneurs, company strategic planning or company management structure, financing channels are more important factors for the successful development of a new company.",
    "question": "If which of the following statements is true, will the above statement be weakened most effectively?",
    "answer": "D",
    "options": [
      "A.About half of the new companies went bankrupt within 5 years of establishment.",
      "B.The management structure of startups is usually not as reasonable as that of developing companies.",
      "C.Compared with other investors, venture capitalists are more sensitive to changes in the financial needs of startups.",
      "D.When deciding whether to fund startups, venture capitalists must consider the personal qualities of the entrepreneur, the company 's strategic planning and other factors."
    ],
    "raw_logic_programs": [
      "# Declarations\nfactors = EnumSort([financing_channels, personal_qualities, strategic_planning, management_structure])\ncompanies = EnumSort([venture_capital, other_channels])\nfailure_rate = Function([companies] -> [int])\nimportance = Function([factors] -> [int])\n\n# Constraints\nfailure_rate(venture_capital) < failure_rate(other_channels) ::: Companies created through venture capital financing have a lower failure rate than companies created through other channels\nimportance(financing_channels) > importance(personal_qualities) ::: Financing channels are more important than personal qualities\nimportance(financing_channels) > importance(strategic_planning) ::: Financing channels are more important than strategic planning\nimportance(financing_channels) > importance(management_structure) ::: Financing channels are more important than management structure\n\n# Options\nQuestion ::: If which of the following statements is true, will the above statement be weakened most effectively?\nis_weakened(failure_rate(venture_capital) >= failure_rate(other_channels)) ::: (A)\nis_weakened(importance(management_structure) >= importance(financing_channels)) ::: (B)\nis_weakened(importance(financing_channels) > importance(other_channels)) ::: (C)\nis_weakened(importance(personal_qualities) >= importance(financing_channels)) ::: (D)"
    ]
  },
  {
    "id": 624,
    "context": "The future of China will be a more open and inclusive, civilized and harmonious country.A country and a nation can develop and progress only if it is open and inclusive.Only open, advanced and useful things can come in; only tolerance and absorption of excellent culture can enrich and strengthen oneself.",
    "question": "If the above statement is true, which of the following statements must be false?",
    "answer": "A",
    "options": [
      "A.Even if a country or nation is not open and inclusive, it can develop and progress.",
      "B.If a country or nation is not open and inclusive, it cannot develop and progress.",
      "C.If a country or nation wants to develop and progress, it must be open and inclusive.",
      "D.Even if a country or nation is open and inclusive, it may not develop and progress."
    ],
    "raw_logic_programs": [
      "# Declarations\ncountries = EnumSort([China])\nattributes = EnumSort([open_inclusive, develop_progress])\nhas_attribute = Function([countries, attributes] -> [bool])\n\n# Constraints\nForAll([c:countries], Implies(has_attribute(c, open_inclusive), has_attribute(c, develop_progress))) ::: A country and a nation can develop and progress only if it is open and inclusive\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be false?\nis_false(Exists([c:countries], And(Not(has_attribute(c, open_inclusive)), has_attribute(c, develop_progress)))) ::: (A)\nis_false(ForAll([c:countries], Implies(Not(has_attribute(c, open_inclusive)), Not(has_attribute(c, develop_progress))))) ::: (B)\nis_false(ForAll([c:countries], Implies(has_attribute(c, develop_progress), has_attribute(c, open_inclusive)))) ::: (C)\nis_false(Exists([c:countries], And(has_attribute(c, open_inclusive), Not(has_attribute(c, develop_progress))))) ::: (D)"
    ]
  },
  {
    "id": 625,
    "context": "About 12,000 years ago, when the climate warmed, humans began to come to North America.At the same time, large mammals, such as mastodons, mammoths, and saber-toothed tigers, became extinct from their once widespread North American soil.Therefore, contrary to the myth that humans lived in peace with other creatures in nature, as early as 12,000 years ago, human activities led to the extinction of these animals.",
    "question": "Which of the following statements is the most vulnerable to the above argument?",
    "answer": "D",
    "options": [
      "A.This argument excludes humanity from nature without reflection.",
      "B.The arrival of humans in North America may also lead to the extinction of animals other than mastodons, mammoths, and saber-toothed tigers.",
      "C.The extinction of large mammals such as mastodons, mammoths and saber-toothed tigers was of extraordinary significance to the primitive people of early North America.",
      "D.The evidence presented is equally applicable to two alternative hypotheses? climate change has led to the extinction of large mammals, and the same reasons have led humans to travel across North America."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([arrival_of_humans, extinction_of_large_mammals, climate_change])\ncauses = Function([events] -> [bool])\n\n# Constraints\ncauses(arrival_of_humans) == True ::: Humans began to come to North America about 12,000 years ago\ncauses(extinction_of_large_mammals) == True ::: Large mammals became extinct from North America\ncauses(climate_change) == True ::: The climate warmed about 12,000 years ago\n\n# Options\nQuestion ::: Which of the following statements is the most vulnerable to the above argument?\nis_vulnerable(Implies(causes(arrival_of_humans), causes(extinction_of_large_mammals))) ::: (A) This argument excludes humanity from nature without reflection.\nis_vulnerable(Implies(causes(arrival_of_humans), Exists([e:events], And(e != extinction_of_large_mammals, causes(e))))) ::: (B) The arrival of humans in North America may also lead to the extinction of animals other than mastodons, mammoths, and saber-toothed tigers.\nis_vulnerable(Implies(causes(extinction_of_large_mammals), causes(arrival_of_humans))) ::: (C) The extinction of large mammals such as mastodons, mammoths and saber-toothed tigers was of extraordinary significance to the primitive people of early North America.\nis_vulnerable(And(Implies(causes(climate_change), causes(extinction_of_large_mammals)), Implies(causes(climate_change), causes(arrival_of_humans)))) ::: (D) The evidence presented is equally applicable to two alternative hypotheses: climate change has led to the extinction of large mammals, and the same reasons have led humans to travel across North America."
    ]
  },
  {
    "id": 626,
    "context": "On average, educated people today have significantly less reading time than educated people 50 years ago.However, the number of book sales per day is now much higher than it was 50 years ago.",
    "question": "The following statements are helpful in explaining the above phenomenon, except",
    "answer": "B",
    "options": [
      "A.The number of educated people today is much greater than the number of educated people 50 years ago.",
      "B.Compared with now, people 50 years ago prefer to borrow books from the library.",
      "C.Compared with today, people 50 years ago prefer to show their good education and taste through a large collection of books.",
      "D.Today's books are often thinner and easier to read than 50 years ago."
    ],
    "raw_logic_programs": [
      "# Declarations\neducated_people = EnumSort([today, fifty_years_ago])\nbook_sales = Function([educated_people] -> [int])\nreading_time = Function([educated_people] -> [int])\npreferences = Function([educated_people] -> [str])\n\n# Constraints\nreading_time(today) < reading_time(fifty_years_ago) ::: On average, educated people today have significantly less reading time than educated people 50 years ago\nbook_sales(today) > book_sales(fifty_years_ago) ::: The number of book sales per day is now much higher than it was 50 years ago\n\n# Options\nQuestion ::: The following statements are helpful in explaining the above phenomenon, except\nis_not_helpful(And(preferences(today) == \"more educated people\", preferences(fifty_years_ago) == \"fewer educated people\")) ::: (A)\nis_not_helpful(And(preferences(today) == \"buy books\", preferences(fifty_years_ago) == \"borrow books\")) ::: (B)\nis_not_helpful(And(preferences(today) == \"less emphasis on book collection\", preferences(fifty_years_ago) == \"show education through book collection\")) ::: (C)\nis_not_helpful(And(preferences(today) == \"thinner books\", preferences(fifty_years_ago) == \"thicker books\")) ::: (D)"
    ]
  },
  {
    "id": 627,
    "context": "The value of ideology and concepts will be revealed in competition and tested in practice.'I disagree with you, but I vow to defend your right to speak.' This is a kind of mind, it is a kind of self-confidence.The kind of debates that buckle up hats and hold braids, and the 'different is hostile' mode of thinking are essentially narrow and weak performances, which are not conducive to the construction of a harmonious society.The whole society should treat 'heterogeneous thinking' with an inclusive mentality, especially those in power.",
    "question": "The following statements support the above views and arguments, except",
    "answer": "B",
    "options": [
      "A.Let people speak the sky will not fall, science is constantly subverting or improving the 'orthodox' concept.",
      "B.Individual heterogeneous thinkers are paranoid, whose words and deeds are almost crazy, and should be strictly controlled.",
      "C.Everyone, even those in power today, may one day become heterogeneous thinkers and become a minority.",
      "D.If the members' thoughts and emotions are not properly expressed and vented, they may easily lead to various extreme behaviors."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nsupports_view = Function([statements] -> [bool])\n\n# Constraints\nsupports_view(A) ::: Let people speak the sky will not fall, science is constantly subverting or improving the 'orthodox' concept.\nNot(supports_view(B)) ::: Individual heterogeneous thinkers are paranoid, whose words and deeds are almost crazy, and should be strictly controlled.\nsupports_view(C) ::: Everyone, even those in power today, may one day become heterogeneous thinkers and become a minority.\nsupports_view(D) ::: If the members' thoughts and emotions are not properly expressed and vented, they may easily lead to various extreme behaviors.\n\n# Options\nQuestion ::: The following statements support the above views and arguments, except\nis_exception(supports_view(A)) ::: (A)\nis_exception(Not(supports_view(B))) ::: (B)\nis_exception(supports_view(C)) ::: (C)\nis_exception(supports_view(D)) ::: (D)"
    ]
  },
  {
    "id": 628,
    "context": "A shopping mall promotes goods in the following manner? at any time of the year, either seasonally, or festively, or both.Each promotion will last for a month.In any month, if the mall wants to clear a certain category of merchandise, it will announce a seasonal promotion; if there is a festival in a certain month and there are still surplus commodities in the warehouse, it will announce the intervention of promotion.However, there are no holidays in November and there are no surplus goods in the warehouse this month.",
    "question": "Which of the following statements can be logically derived from the above?",
    "answer": "A",
    "options": [
      "A.If there is no seasonal promotion in a month, there must be a holiday promotion this month.",
      "B.If the holiday promotion does not take place, it must be in November.",
      "C.If the seasonal promotion is carried out in a certain month, there must be surplus goods in the warehouse this month.",
      "D.If there is a holiday in a certain month, but there are no surplus goods in the warehouse, the holiday promotion is announced."
    ],
    "raw_logic_programs": [
      "# Declarations\nmonths = EnumSort([January, February, March, April, May, June, July, August, September, October, November, December])\npromotion_types = EnumSort([seasonal, festive])\nhas_holiday = Function([months] -> [bool])\nhas_surplus = Function([months] -> [bool])\npromotion = Function([months, promotion_types] -> [bool])\n\n# Constraints\nForAll([m:months], Or(promotion(m, seasonal), promotion(m, festive))) ::: At any time of the year, either seasonally, or festively, or both\nForAll([m:months], Implies(has_surplus(m), promotion(m, seasonal))) ::: If the mall wants to clear a certain category of merchandise, it will announce a seasonal promotion\nForAll([m:months], Implies(And(has_holiday(m), has_surplus(m)), promotion(m, festive))) ::: If there is a festival and surplus commodities, a festive promotion is announced\nNot(has_holiday(November)) ::: There are no holidays in November\nNot(has_surplus(November)) ::: There are no surplus goods in the warehouse in November\n\n# Options\nQuestion ::: Which of the following statements can be logically derived from the above?\nis_derived(ForAll([m:months], Implies(Not(promotion(m, seasonal)), promotion(m, festive)))) ::: (A) If there is no seasonal promotion in a month, there must be a holiday promotion this month.\nis_derived(ForAll([m:months], Implies(Not(promotion(m, festive)), m == November))) ::: (B) If the holiday promotion does not take place, it must be in November.\nis_derived(ForAll([m:months], Implies(promotion(m, seasonal), has_surplus(m)))) ::: (C) If the seasonal promotion is carried out in a certain month, there must be surplus goods in the warehouse this month.\nis_derived(ForAll([m:months], Implies(And(has_holiday(m), Not(has_surplus(m))), promotion(m, festive)))) ::: (D) If there is a holiday in a certain month, but there are no surplus goods in the warehouse, the holiday promotion is announced."
    ]
  },
  {
    "id": 629,
    "context": "In the pre-primary comprehensive ability test for 6-year-old children, children who have been in the preschool class for 9 months all day have an average score of 58 points, and only go to the preschool for 9 months in the morning.The average score of 9 months of pre-school class A is 51 points; the average score of 9 months of pre-school class B is 54 points; The average score in the comprehensive ability test is 32.Statistically, the gap between the 32 points and the other points mentioned above is significant.",
    "question": "From the data given above, which of the following hypothetical conclusions can be most reasonably drawn?",
    "answer": "C",
    "options": [
      "A.Children with more than 50 points can go to primary school",
      "B.To make a reasonable assumption, more testing is needed.",
      "C.Whether there is a correlation between the pre-school class and the comprehensive ability before elementary school entrance.",
      "D.More financial support should be provided for children under 6 years of age to attend pre-school."
    ],
    "raw_logic_programs": [
      "# Declarations\ngroups = EnumSort([all_day, morning_only, class_A, class_B])\nscores = Function([groups] -> [int])\n\n# Constraints\nscores(all_day) == 58 ::: children who have been in the preschool class for 9 months all day have an average score of 58 points\nscores(morning_only) == 51 ::: children who only go to the preschool for 9 months in the morning have an average score of 51 points\nscores(class_A) == 51 ::: the average score of 9 months of pre-school class A is 51 points\nscores(class_B) == 54 ::: the average score of 9 months of pre-school class B is 54 points\naverage_test_score == 32 ::: the average score in the comprehensive ability test is 32\nsignificant_gap(scores(all_day), average_test_score) ::: the gap between the 32 points and the other points mentioned above is significant\nsignificant_gap(scores(morning_only), average_test_score) ::: the gap between the 32 points and the other points mentioned above is significant\nsignificant_gap(scores(class_A), average_test_score) ::: the gap between the 32 points and the other points mentioned above is significant\nsignificant_gap(scores(class_B), average_test_score) ::: the gap between the 32 points and the other points mentioned above is significant\n\n# Options\nQuestion ::: From the data given above, which of the following hypothetical conclusions can be most reasonably drawn?\nis_reasonable_conclusion(Exists([c:children], scores(c) > 50, can_go_to_primary_school(c))) ::: (A)\nis_reasonable_conclusion(more_testing_needed_for_reasonable_assumption()) ::: (B)\nis_reasonable_conclusion(correlation_exists(pre_school_class, comprehensive_ability)) ::: (C)\nis_reasonable_conclusion(more_financial_support_needed_for_pre_school()) ::: (D)"
    ]
  },
  {
    "id": 630,
    "context": "Rare earth is a general term for a class of metals with less reserves and is widely used in cutting-edge technology and military industry.Most of the world's rare earths are produced in China.Since 1998, China has begun to reduce the amount of rare earth mining, control rare earth export quotas, and strengthen the concentration of the rare earth industry.In this regard, some countries accused China of monopolizing resources and were 'greatly destructive' to other countries in the world, and demanded that China relax its control over the rare earth industry.",
    "question": "If any of the following statements is true, is it most appropriate to refute these countries' accusations against China?",
    "answer": "D",
    "options": [
      "A.Rare earth is an important non-renewable strategic resource.",
      "B.At present, per capita, China is already a country with relatively rare earth resources.",
      "C.Since the 1980s, some places in China have over-exploited rare earths, causing serious waste of resources and great damage to the environment.",
      "D.In 2009, China's rare earth reserves accounted for 36% of the national reserves, the United States accounted for 13%, Russia accounted for 19%, Australia accounted for 5.4%; China's output accounted for 97% of world output, the other three countries are zero."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nrefutes_accusations = Function([statements] -> [bool])\n\n# Constraints\nrefutes_accusations(A) ::: Rare earth is an important non-renewable strategic resource\nrefutes_accusations(B) ::: At present, per capita, China is already a country with relatively rare earth resources\nrefutes_accusations(C) ::: Since the 1980s, some places in China have over-exploited rare earths, causing serious waste of resources and great damage to the environment\nrefutes_accusations(D) ::: In 2009, China's rare earth reserves accounted for 36% of the national reserves, the United States accounted for 13%, Russia accounted for 19%, Australia accounted for 5.4%; China's output accounted for 97% of world output, the other three countries are zero\n\n# Options\nQuestion ::: If any of the following statements is true, is it most appropriate to refute these countries' accusations against China?\nis_most_appropriate(refutes_accusations(A)) ::: (A)\nis_most_appropriate(refutes_accusations(B)) ::: (B)\nis_most_appropriate(refutes_accusations(C)) ::: (C)\nis_most_appropriate(refutes_accusations(D)) ::: (D)"
    ]
  },
  {
    "id": 631,
    "context": "Politician? About four years ago, our party was committed to managing inflation from the beginning of its ruling and successfully reduced the increase in the consumer price index (CPI) from 4% at the time to 1.5% now.The opposition party's CPI rose by more than 4% during the previous four years in power.Therefore, under the leadership of our party, the prices of commodities are getting lower and lower.",
    "question": "This politician's argument is most vulnerable to which of the following criticisms?",
    "answer": "D",
    "options": [
      "A.It did not elaborate on the opposition party 's proposition, but simply ignored it.",
      "B.The evidence used to support this conclusion actually negates this conclusion and provides more support.",
      "C.It was not mentioned that the opposition party was in a period of overheating in the domestic economy, but now there is an economic crisis in Europe and the United States.",
      "D.There is no mention of the possibility that the opposition party has implemented a policy to combat inflation, but the effects of the policy will not be apparent until some time has passed."
    ],
    "raw_logic_programs": [
      "# Declarations\nparties = EnumSort([our_party, opposition_party])\ntime_periods = EnumSort([previous_four_years, current_four_years])\ncpi_change = Function([parties, time_periods] -> [float])\n\n# Constraints\ncpi_change(our_party, current_four_years) == 1.5 ::: Our party reduced the CPI increase to 1.5% now\ncpi_change(our_party, previous_four_years) == 4.0 ::: Our party started with a CPI increase of 4%\ncpi_change(opposition_party, previous_four_years) > 4.0 ::: The opposition party's CPI rose by more than 4% during their previous four years in power\n\n# Options\nQuestion ::: This politician's argument is most vulnerable to which of the following criticisms?\nis_vulnerable_to(A) ::: (A) It did not elaborate on the opposition party's proposition, but simply ignored it.\nis_vulnerable_to(B) ::: (B) The evidence used to support this conclusion actually negates this conclusion and provides more support.\nis_vulnerable_to(C) ::: (C) It was not mentioned that the opposition party was in a period of overheating in the domestic economy, but now there is an economic crisis in Europe and the United States.\nis_vulnerable_to(D) ::: (D) There is no mention of the possibility that the opposition party has implemented a policy to combat inflation, but the effects of the policy will not be apparent until some time has passed."
    ]
  },
  {
    "id": 632,
    "context": "In general, the performance of a listed company is positively related to its stock price? when a company publishes its annual report, if its profit is higher than the market profit, the company's stock price will increase.However, on March 31, 2011, China's Dongfang Electric Corporation, which is engaged in the production of nuclear power and other power units, announced that its 67% net profit growth rate exceeded market expectations, but its stock price fell 1.59% at the close and underperformed the broader market 0.73 Percentage points.",
    "question": "If any of the following statements is true, can the best explain the above anomalies?",
    "answer": "B",
    "options": [
      "A.On March 31, 2011, an earthquake and tsunami occurred in Japan, and a serious nuclear leak occurred at Fukushima Daiichi Electronics.Someone in our country snapped up iodized salt.",
      "B.On March 16, 2011, the State Council of China decided to conduct a comprehensive inspection of nuclear facilities and suspend approval of nuclear power projects.",
      "C.From the end of March to April 26, 2011, events were held around the world to commemorate the 25th anniversary of the explosion of the Chernobyl nuclear power plant.",
      "D.After a long debate, in May 2011 the German ruling coalition decided to shut down all nuclear power plants in Germany by 2022."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([earthquake_tsunami, inspection_suspension, chernobyl_anniversary, germany_shutdown])\nexplain_anomaly = Function([events] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, as the task is to determine which event can best explain the anomaly.\n\n# Options\nQuestion ::: If any of the following statements is true, can the best explain the above anomalies?\nis_best_explanation(explain_anomaly(earthquake_tsunami)) ::: (A)\nis_best_explanation(explain_anomaly(inspection_suspension)) ::: (B)\nis_best_explanation(explain_anomaly(chernobyl_anniversary)) ::: (C)\nis_best_explanation(explain_anomaly(germany_shutdown)) ::: (D)"
    ]
  },
  {
    "id": 633,
    "context": "Within a company, many very specialized departments have recently been established.This shows that the company is very interested in the following questions? How to grasp its consumer groups in a more precise way?",
    "question": "Which of the following options is missing from the above reasoning?",
    "answer": "A",
    "options": [
      "A.Premise? These new departments are grasping their consumer groups in a more precise way",
      "B.Conclusion? The management department requires new measures to seize its consumer groups.",
      "C.Premise? Before setting up these new departments, the company failed to seize its consumer groups.",
      "D.Conclusion? The company will soon make more efforts to seize its consumer groups."
    ],
    "raw_logic_programs": [
      "# Declarations\ndepartments = EnumSort([specialized])\ninterest = Function([departments] -> [bool])\nquestions = EnumSort([grasp_consumer_groups])\nreasoning = Function([questions] -> [bool])\n\n# Constraints\ninterest(specialized) == True ::: Many very specialized departments have recently been established\nreasoning(grasp_consumer_groups) == True ::: The company is very interested in how to grasp its consumer groups in a more precise way\n\n# Options\nQuestion ::: Which of the following options is missing from the above reasoning?\nis_missing(interest(specialized) -> reasoning(grasp_consumer_groups)) ::: (A) Premise: These new departments are grasping their consumer groups in a more precise way\nis_missing(reasoning(grasp_consumer_groups) -> management_requires_measures) ::: (B) Conclusion: The management department requires new measures to seize its consumer groups.\nis_missing(Not(interest(specialized)) -> Not(reasoning(grasp_consumer_groups))) ::: (C) Premise: Before setting up these new departments, the company failed to seize its consumer groups.\nis_missing(reasoning(grasp_consumer_groups) -> more_efforts) ::: (D) Conclusion: The company will soon make more efforts to seize its consumer groups."
    ]
  },
  {
    "id": 634,
    "context": "The homesteads in rural China are collectively owned and can only be used by farmers, and cannot be bought, sold, rented or inherited.The homestead system guarantees the survival rights of farmers.The houses built by farmers on the homestead are the assets of farmers.If farmers are allowed to sell their houses, they are actually allowed to sell the right to use the homestead.If the right to use the homestead is bought by others, it will damage farmers' rights and interests for survival.However, if farmers are not allowed to sell their houses, they will infringe on their assets and rights.",
    "question": "If the above statement is true, which of the following statements must be true?",
    "answer": "C",
    "options": [
      "A.There is no real estate certificate for houses built by farmers on homesteads.",
      "B.If migrant workers buy housing in the city, they should no longer own homesteads in their rural homes.",
      "C.If it does not damage the peasants 'rights and interests for survival, it will infringe on the peasants' rights and interests in assets.",
      "D.For the vast majority of migrant workers, the homestead and responsibility fields of the rural hometown are their last guarantee of survival."
    ],
    "raw_logic_programs": [
      "# Declarations\nfarmers = EnumSort([Farmer])\nrights = EnumSort([survival, asset])\nactions = EnumSort([sell_house, sell_homestead_rights])\neffects = EnumSort([damages_survival_rights, infringes_asset_rights])\n\n# Constraints\nForAll([f:farmers], Not(Exists([a:actions], a == sell_house))) ::: Farmers are not allowed to sell their houses\nForAll([f:farmers], Not(Exists([a:actions], a == sell_homestead_rights))) ::: Farmers are not allowed to sell the right to use the homestead\nForAll([f:farmers], Implies(Exists([a:actions], a == sell_house), Exists([e:effects], e == infringes_asset_rights))) ::: If farmers are allowed to sell their houses, it infringes on their asset rights\nForAll([f:farmers], Implies(Exists([a:actions], a == sell_homestead_rights), Exists([e:effects], e == damages_survival_rights))) ::: If the right to use the homestead is bought by others, it damages farmers' survival rights\n\n# Options\nQuestion ::: If the above statement is true, which of the following statements must be true?\nis_must_true(Not(Exists([c:certificates], c == real_estate_certificate))) ::: (A) There is no real estate certificate for houses built by farmers on homesteads.\nis_must_true(Implies(Exists([m:migrant_workers], m == buys_city_housing), Not(Exists([h:homesteads], h == own_rural_homestead)))) ::: (B) If migrant workers buy housing in the city, they should no longer own homesteads in their rural homes.\nis_must_true(Implies(Not(Exists([e:effects], e == damages_survival_rights)), Exists([e:effects], e == infringes_asset_rights))) ::: (C) If it does not damage the peasants' rights and interests for survival, it will infringe on the peasants' rights and interests in assets.\nis_must_true(ForAll([m:migrant_workers], Exists([g:guarantees], g == last_survival_guarantee))) ::: (D) For the vast majority of migrant workers, the homestead and responsibility fields of the rural hometown are their last guarantee of survival."
    ]
  },
  {
    "id": 635,
    "context": "Since the Axka Exxon tanker disaster in 1989 and the 1991 Middle East war, the price of aviation fuel has risen dramatically.During the same period, the prices of several petroleum derivatives also rose sharply.These two facts indicate that aviation fuel is a petroleum derivative.",
    "question": "Which of the following statements best evaluates the above argument?",
    "answer": "C",
    "options": [
      "A.Good thinking, because aviation fuel is a petroleum derivative.",
      "B.Bad thinking does not accurately state all the facts.",
      "C.Bad thinking, food prices have risen during the same period, but this does not prove that aviation fuel is food.",
      "D.Bad thinking, given the facts about petroleum derivatives, cannot draw any conclusions about aviation fuel."
    ],
    "raw_logic_programs": [
      "# Declarations\nevents = EnumSort([Axka_Exxon_disaster, Middle_East_war])\nproducts = EnumSort([aviation_fuel, petroleum_derivatives, food])\nprice_rise = Function([products] -> [bool])\n\n# Constraints\nAnd(price_rise(aviation_fuel), price_rise(petroleum_derivatives)) ::: Since the Axka Exxon tanker disaster in 1989 and the 1991 Middle East war, the price of aviation fuel has risen dramatically. During the same period, the prices of several petroleum derivatives also rose sharply.\n\n# Options\nQuestion ::: Which of the following statements best evaluates the above argument?\nis_valid(aviation_fuel == petroleum_derivatives) ::: (A) Good thinking, because aviation fuel is a petroleum derivative.\nis_invalid(And(price_rise(aviation_fuel), price_rise(petroleum_derivatives))) ::: (B) Bad thinking does not accurately state all the facts.\nis_invalid(And(price_rise(aviation_fuel), price_rise(food))) ::: (C) Bad thinking, food prices have risen during the same period, but this does not prove that aviation fuel is food.\nis_invalid(aviation_fuel == petroleum_derivatives) ::: (D) Bad thinking, given the facts about petroleum derivatives, cannot draw any conclusions about aviation fuel."
    ]
  },
  {
    "id": 636,
    "context": "In August 2011, China's first aircraft carrier 'Varyag' went to sea for sea trials.China's aircraft carrier poses a potential challenge to the US Navy's sea-making power in the Western Pacific, and the US military is concerned and takes a precautionary attitude.However, a naval expert with rich actual combat experience wants China to build more aircraft carriers.",
    "question": "If any of the following statements are true, can this best explain the expert 's seemingly contradictory attitude?",
    "answer": "B",
    "options": [
      "A.In August 2011, Vietnam and the United States conducted joint military exercises in the South China Sea.",
      "B.The United States, Japan, India and other countries took the opportunity of China 's aircraft carrier trial flight to stir up new 'China threat theory'.",
      "C.The Chinese navy has not fully deployed carrier and refueling vessels that support aircraft carriers.The destroyers and submarines that escort the aircraft carrier are also very fragile.",
      "D.Aircraft carriers need support and escort.The more aircraft carriers are built, the less resources are used to manufacture other ships and aircraft that support the aircraft carriers."
    ],
    "raw_logic_programs": [
      "# Declarations\nstatements = EnumSort([A, B, C, D])\nexplain_contradiction = Function([statements] -> [bool])\n\n# Constraints\n# No specific constraints are given in the problem description, so we will focus on the options.\n\n# Options\nQuestion ::: If any of the following statements are true, can this best explain the expert's seemingly contradictory attitude?\nis_best_explanation(explain_contradiction(A)) ::: (A) In August 2011, Vietnam and the United States conducted joint military exercises in the South China Sea.\nis_best_explanation(explain_contradiction(B)) ::: (B) The United States, Japan, India and other countries took the opportunity of China's aircraft carrier trial flight to stir up new 'China threat theory'.\nis_best_explanation(explain_contradiction(C)) ::: (C) The Chinese navy has not fully deployed carrier and refueling vessels that support aircraft carriers. The destroyers and submarines that escort the aircraft carrier are also very fragile.\nis_best_explanation(explain_contradiction(D)) ::: (D) Aircraft carriers need support and escort. The more aircraft carriers are built, the less resources are used to manufacture other ships and aircraft that support the aircraft carriers."
    ]
  },
  {
    "id": 637,
    "context": "Philosopher? In the 18th century, a paper on motion is absolute asserted that the change of an object's position over time can be measured without reference to the position of any other object.However, a well-respected physicist claimed that this paper is incoherent.Since an incoherent paper cannot be regarded as a description of reality, movement cannot be absolute.",
    "question": "Which of the following methods or techniques of argument does the philosopher use in his argument?",
    "answer": "B",
    "options": [
      "A.Use professional terminology to convince others.",
      "B.Rely on the authority of an expert to support a premise.",
      "C.It is reasonable to use experimental results to illustrate the mentioned changes in location.",
      "D.It is observed that something is a certain condition under experimental conditions, and it is also the case in any case when it is pushed out."
    ],
    "raw_logic_programs": [
      "# Declarations\narguments = EnumSort([philosopher, physicist])\nmethods = EnumSort([professional_terminology, authority_of_expert, experimental_results, generalization_from_experiment])\nuses_method = Function([arguments, methods] -> [bool])\n\n# Constraints\nuses_method(philosopher, authority_of_expert) ::: The philosopher relies on the authority of an expert (the well-respected physicist) to support the premise that the paper is incoherent.\n\n# Options\nQuestion ::: Which of the following methods or techniques of argument does the philosopher use in his argument?\nis_valid(uses_method(philosopher, professional_terminology)) ::: (A)\nis_valid(uses_method(philosopher, authority_of_expert)) ::: (B)\nis_valid(uses_method(philosopher, experimental_results)) ::: (C)\nis_valid(uses_method(philosopher, generalization_from_experiment)) ::: (D)"
    ]
  },
  {
    "id": 638,
    "context": "Compared with international oil prices, domestic oil prices have always been 'rising fast and falling slowly'.One of the reasons is that China's refined oil price adjustment is based on the boundary condition that crude oil prices in the three places change by more than 4%.For example, when the price rises from US $ 100 to US $ 104, we will increase the price accordingly; however, if we return from US $ 104 by 4% and then reduce the price, we will have to wait for the price to fall back to US $ 99.84.",
    "question": "Which of the following statements best points out the shortcomings of the above argument?",
    "answer": "C",
    "options": [
      "A.The above argument fails to explain that the unreasonable domestic oil prices are caused by various reasons.",
      "B.The above argument fails to explain that the root cause of unreasonable domestic oil prices lies in industry monopoly.",
      "C.The above argument fails to explain that with 4% as the boundary condition, the higher the oil price, the slower the domestic response.",
      "D.The above argument does not start from the same price base point for comparison.If the base point of the price increase is US $ 100, the conditional analysis of the price reduction should also be based on US $ 100."
    ],
    "raw_logic_programs": [
      "# Declarations\nprices = EnumSort([international, domestic])\nprice_change = Function([prices] -> [float])\nbase_price = Function([prices] -> [float])\n\n# Constraints\nprice_change(international) > 4.0 ::: China's refined oil price adjustment is based on the boundary condition that crude oil prices in the three places change by more than 4%\nprice_change(domestic) == price_change(international) ::: Domestic oil prices adjust according to international oil price changes\nbase_price(international) == 100.0 ::: Example base price for international oil\nbase_price(domestic) == 100.0 ::: Example base price for domestic oil\n\n# Options\nQuestion ::: Which of the following statements best points out the shortcomings of the above argument?\nis_best_explanation(price_change(domestic) != price_change(international)) ::: (A)\nis_best_explanation(price_change(domestic) != price_change(international) due to monopoly) ::: (B)\nis_best_explanation(price_change(domestic) is slower with higher prices) ::: (C)\nis_best_explanation(base_price(domestic) != base_price(international) for comparison) ::: (D)"
    ]
  },
  {
    "id": 639,
    "context": "In a certain class, L classmate is shorter than X classmate, Y classmate is shorter than L classmate, but M classmate is shorter than Y classmate, so Y classmate is shorter than J classmate.",
    "question": "Which of the following statement premises must be added to launch the above statement logically?",
    "answer": "A",
    "options": [
      "A.Class J is taller than Class L.",
      "B.X is taller than J.",
      "C.Class L is taller than Class J.",
      "D.J is taller than M."
    ],
    "raw_logic_programs": [
      "# Declarations\nclassmates = EnumSort([L, X, Y, M, J])\ntaller = Function([classmates, classmates] -> [bool])\n\n# Constraints\ntaller(X, L) ::: L classmate is shorter than X classmate\ntaller(L, Y) ::: Y classmate is shorter than L classmate\ntaller(Y, M) ::: M classmate is shorter than Y classmate\n\n# Options\nQuestion ::: Which of the following statement premises must be added to launch the above statement logically?\nis_necessary(taller(J, Y)) ::: (A) J is taller than L\nis_necessary(taller(X, J)) ::: (B) X is taller than J\nis_necessary(taller(L, J)) ::: (C) L is taller than J\nis_necessary(taller(J, M)) ::: (D) J is taller than M"
    ]
  },
  {
    "id": 640,
    "context": "A theater plans to perform 7 repertoires in the 7 weeks of the fall, they are F, G., J, K, O, R, S.One repertoire is performed every week, and each repertoire is exactly one week.The repertoire must meet the following conditions? (1) G must be performed in the third week.(2) O and S cannot perform continuously.(3) K must be arranged before J and S.(4) F and J must be arranged to perform in two consecutive weeks.",
    "question": "If F is scheduled for the fifth week, which of the following correctly lists all the plays that can be scheduled for the seventh week?",
    "answer": "C",
    "options": [
      "A.J, S",
      "B.O, R",
      "C.O, R, S",
      "D.K, O, R"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\nrepertoires = EnumSort([F, G, J, K, O, R, S])\nweeks = EnumSort([1, 2, 3, 4, 5, 6, 7])\nscheduled = Function([repertoires] -> [weeks])\n\n# Constraints\nscheduled(G) == 3 ::: G must be performed in the third week\nForAll([w:weeks], Not(And(scheduled(O) == w, scheduled(S) == w + 1))) ::: O and S cannot perform continuously\nForAll([w:weeks], Not(And(scheduled(S) == w, scheduled(O) == w + 1))) ::: S and O cannot perform continuously\nscheduled(K) < scheduled(J) ::: K must be arranged before J\nscheduled(K) < scheduled(S) ::: K must be arranged before S\nOr(scheduled(F) == scheduled(J) + 1, scheduled(J) == scheduled(F) + 1) ::: F and J must be arranged to perform in two consecutive weeks\nscheduled(F) == 5 ::: F is scheduled for the fifth week\n\n# Options\nQuestion ::: Which of the following correctly lists all the plays that can be scheduled for the seventh week?\nis_valid(Or(scheduled(J) == 7, scheduled(S) == 7)) ::: (A)\nis_valid(Or(scheduled(O) == 7, scheduled(R) == 7)) ::: (B)\nis_valid(Or(scheduled(O) == 7, scheduled(R) == 7, scheduled(S) == 7)) ::: (C)\nis_valid(Or(scheduled(K) == 7, scheduled(O) == 7, scheduled(R) == 7)) ::: (D)\n```"
    ]
  },
  {
    "id": 641,
    "context": "A theater plans to perform 7 repertoires in the 7 weeks of the fall, they are F, G., J, K, O, R, S.One repertoire is performed every week, and each repertoire is exactly one week.The repertoire must meet the following conditions? (1) G must be performed in the third week.(2) O and S cannot perform continuously.(3) K must be arranged before J and S.(4) F and J must be arranged to perform in two consecutive weeks.",
    "question": "For any acceptable arrangement, which of the following must be true?",
    "answer": "A",
    "options": [
      "A.F is scheduled a week after K.",
      "B.G was scheduled for the week before O.",
      "C.J is scheduled for the first week.",
      "D.R is scheduled for the second or seventh week."
    ],
    "raw_logic_programs": [
      "# Declarations\nrepertoires = EnumSort([F, G, J, K, O, R, S])\nweeks = EnumSort([1, 2, 3, 4, 5, 6, 7])\nscheduled = Function([repertoires] -> [weeks])\n\n# Constraints\nscheduled(G) == 3 ::: G must be performed in the third week\nForAll([w:weeks], Not(And(scheduled(O) == w, scheduled(S) == w + 1))) ::: O and S cannot perform continuously\nForAll([w:weeks], Not(And(scheduled(S) == w, scheduled(O) == w + 1))) ::: S and O cannot perform continuously\nscheduled(K) < scheduled(J) ::: K must be arranged before J\nscheduled(K) < scheduled(S) ::: K must be arranged before S\nOr(scheduled(F) == scheduled(J) + 1, scheduled(J) == scheduled(F) + 1) ::: F and J must be arranged to perform in two consecutive weeks\n\n# Options\nQuestion ::: For any acceptable arrangement, which of the following must be true?\nis_must_true(ForAll([w:weeks], Implies(scheduled(F) == w, scheduled(K) == w - 1))) ::: (A) F is scheduled a week after K\nis_must_true(ForAll([w:weeks], Implies(scheduled(G) == w, scheduled(O) == w + 1))) ::: (B) G was scheduled for the week before O\nis_must_true(scheduled(J) == 1) ::: (C) J is scheduled for the first week\nis_must_true(Or(scheduled(R) == 2, scheduled(R) == 7)) ::: (D) R is scheduled for the second or seventh week"
    ]
  },
  {
    "id": 642,
    "context": "A theater plans to perform 7 repertoires in the 7 weeks of the fall, they are F, G., J, K, O, R, S.One repertoire is performed every week, and each repertoire is exactly one week.The repertoire must meet the following conditions? (1) G must be performed in the third week.(2) O and S cannot perform continuously.(3) K must be arranged before J and S.(4) F and J must be arranged to perform in two consecutive weeks.",
    "question": "If R is arranged in the fifth week and O is arranged in the second week, the alternative arrangements are?",
    "answer": "C",
    "options": [
      "A.2 kinds",
      "B.3 types",
      "C.5 types",
      "D.6 types"
    ],
    "raw_logic_programs": [
      "# Declarations\nrepertoires = EnumSort([F, G, J, K, O, R, S])\nweeks = EnumSort([1, 2, 3, 4, 5, 6, 7])\nperformed = Function([repertoires] -> [weeks])\n\n# Constraints\nperformed(G) == 3 ::: G must be performed in the third week\nForAll([w:weeks], Not(And(performed(O) == w, performed(S) == w + 1))) ::: O and S cannot perform continuously\nForAll([w:weeks], Not(And(performed(S) == w, performed(O) == w + 1))) ::: S and O cannot perform continuously\nperformed(K) < performed(J) ::: K must be arranged before J\nperformed(K) < performed(S) ::: K must be arranged before S\nOr(performed(F) == performed(J) + 1, performed(J) == performed(F) + 1) ::: F and J must be arranged to perform in two consecutive weeks\nperformed(R) == 5 ::: R is arranged in the fifth week\nperformed(O) == 2 ::: O is arranged in the second week\n\n# Options\nQuestion ::: If R is arranged in the fifth week and O is arranged in the second week, the alternative arrangements are?\nis_count(2) ::: (A)\nis_count(3) ::: (B)\nis_count(5) ::: (C)\nis_count(6) ::: (D)"
    ]
  },
  {
    "id": 643,
    "context": "A theater plans to perform 7 repertoires in the 7 weeks of the fall, they are F, G., J, K, O, R, S.One repertoire is performed every week, and each repertoire is exactly one week.The repertoire must meet the following conditions? (1) G must be performed in the third week.(2) O and S cannot perform continuously.(3) K must be arranged before J and S.(4) F and J must be arranged to perform in two consecutive weeks.",
    "question": "If S is scheduled for the sixth week, then which week must R be scheduled?",
    "answer": "D",
    "options": [
      "A.the second week",
      "B.Fourth week",
      "C.fifth week",
      "D.Seventh week"
    ],
    "raw_logic_programs": [
      "```prolog\n# Declarations\nrepertoires = EnumSort([F, G, J, K, O, R, S])\nweeks = EnumSort([1, 2, 3, 4, 5, 6, 7])\nscheduled = Function([repertoires] -> [weeks])\n\n# Constraints\nscheduled(G) == 3 ::: G must be performed in the third week\nForAll([w:weeks], Not(And(scheduled(O) == w, scheduled(S) == w + 1))) ::: O and S cannot perform continuously\nForAll([w:weeks], Not(And(scheduled(S) == w, scheduled(O) == w + 1))) ::: O and S cannot perform continuously\nscheduled(K) < scheduled(J) ::: K must be arranged before J\nscheduled(K) < scheduled(S) ::: K must be arranged before S\nOr(scheduled(F) == scheduled(J) + 1, scheduled(J) == scheduled(F) + 1) ::: F and J must be arranged to perform in two consecutive weeks\nscheduled(S) == 6 ::: S is scheduled for the sixth week\n\n# Options\nQuestion ::: If S is scheduled for the sixth week, then which week must R be scheduled?\nis_sat(scheduled(R) == 2) ::: (A)\nis_sat(scheduled(R) == 4) ::: (B)\nis_sat(scheduled(R) == 5) ::: (C)\nis_sat(scheduled(R) == 7) ::: (D)\n```"
    ]
  },
  {
    "id": 644,
    "context": "A theater plans to perform 7 repertoires in the 7 weeks of the fall, they are F, G., J, K, O, R, S.One repertoire is performed every week, and each repertoire is exactly one week.The repertoire must meet the following conditions? (1) G must be performed in the third week.(2) O and S cannot perform continuously.(3) K must be arranged before J and S.(4) F and J must be arranged to perform in two consecutive weeks.",
    "question": "If O happens to be the week before J, which of the following must be true?",
    "answer": "B",
    "options": [
      "A.Place F before O",
      "B.K is scheduled a week before G.",
      "C.R is scheduled for the first week or the second week.",
      "D.S happens to be the week after K."
    ],
    "raw_logic_programs": [
      "# Declarations\nrepertoires = EnumSort([F, G, J, K, O, R, S])\nweeks = EnumSort([1, 2, 3, 4, 5, 6, 7])\nscheduled = Function([repertoires] -> [weeks])\n\n# Constraints\nscheduled(G) == 3 ::: G must be performed in the third week\nForAll([w:weeks], Not(And(scheduled(O) == w, scheduled(S) == w + 1))) ::: O and S cannot perform continuously\nscheduled(K) < scheduled(J) ::: K must be arranged before J\nscheduled(K) < scheduled(S) ::: K must be arranged before S\nOr(scheduled(F) == scheduled(J) - 1, scheduled(F) == scheduled(J) + 1) ::: F and J must be arranged to perform in two consecutive weeks\n\n# Additional Constraint from Question\nscheduled(O) == scheduled(J) - 1 ::: O happens to be the week before J\n\n# Options\nQuestion ::: If O happens to be the week before J, which of the following must be true?\nis_must_true(scheduled(F) < scheduled(O)) ::: (A) Place F before O\nis_must_true(scheduled(K) == scheduled(G) - 1) ::: (B) K is scheduled a week before G\nis_must_true(Or(scheduled(R) == 1, scheduled(R) == 2)) ::: (C) R is scheduled for the first week or the second week\nis_must_true(scheduled(S) == scheduled(K) + 1) ::: (D) S happens to be the week after K"
    ]
  },
  {
    "id": 645,
    "context": "A committee works for two years and consists of 4 people each year, of which 2 members are from the following 4 judges? F, G, H and I, and the other 2 members are from the following 3 scientists? V, Y and Z.Every year, the committee has one member as chairman.Members who chaired in the first year must withdraw from the committee in the second year.The person who is chairman in the second year must be a member of the committee in the first year.The members of the committee must meet the following conditions? G and V cannot become members of the committee in the same year.H and Y cannot be members of the committee in the same year.Each year, one and only one of I and V is a member of the committee.",
    "question": "Which of the following lists a list of members who can become members of the committee in the first year?",
    "answer": "B",
    "options": [
      "A.F, G, V, Z",
      "B.F, H, V, Z",
      "C.H, I, Y, Z",
      "D.G, H, I, Z"
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([F, G, H, I])\nscientists = EnumSort([V, Y, Z])\nyears = EnumSort([year1, year2])\ncommittee = Function([years] -> [Set(judges + scientists)])\nchairman = Function([years] -> [judges + scientists])\n\n# Constraints\nForAll([y:years], Count([m:judges + scientists], committee(y, m)) == 4) ::: Each year, the committee consists of 4 people\nForAll([y:years], Count([j:judges], committee(y, j)) == 2) ::: Each year, 2 members are from the judges\nForAll([y:years], Count([s:scientists], committee(y, s)) == 2) ::: Each year, 2 members are from the scientists\nForAll([y:years], Exists([m:judges + scientists], chairman(y) == m)) ::: Each year, one member is the chairman\nNot(Exists([m:judges + scientists], And(chairman(year1) == m, committee(year2, m)))) ::: Members who chaired in the first year must withdraw from the committee in the second year\nExists([m:judges + scientists], And(chairman(year2) == m, committee(year1, m))) ::: The chairman in the second year must be a member in the first year\nForAll([y:years], Not(And(committee(y, G), committee(y, V)))) ::: G and V cannot be members in the same year\nForAll([y:years], Not(And(committee(y, H), committee(y, Y)))) ::: H and Y cannot be members in the same year\nForAll([y:years], Or(committee(y, I), committee(y, V))) ::: Each year, one and only one of I and V is a member\n\n# Options\nQuestion ::: Which of the following lists a list of members who can become members of the committee in the first year?\nis_valid(And(committee(year1, F), committee(year1, G), committee(year1, V), committee(year1, Z))) ::: (A)\nis_valid(And(committee(year1, F), committee(year1, H), committee(year1, V), committee(year1, Z))) ::: (B)\nis_valid(And(committee(year1, H), committee(year1, I), committee(year1, Y), committee(year1, Z))) ::: (C)\nis_valid(And(committee(year1, G), committee(year1, H), committee(year1, I), committee(year1, Z))) ::: (D)"
    ]
  },
  {
    "id": 646,
    "context": "A committee works for two years and consists of 4 people each year, of which 2 members are from the following 4 judges? F, G, H and I, and 2 members are from the following 3 scientists? V, Y and Z Every year, the committee has one member as chairman.Members who chaired in the first year must withdraw from the committee in the second year.The person who is chairman in the second year must be a member of the committee in the first year.The members of the committee must meet the following conditions? G and V cannot become members of the committee in the same year.H and Y cannot be members of the committee in the same year.Each year, one and only one of I and V is a member of the committee.",
    "question": "If V is the chairman of the committee in the first year, which of the following options lists the two people who must be members of the committee in the second year?",
    "answer": "D",
    "options": [
      "A.G and Y",
      "B.V and Y",
      "C.H and I",
      "D.I and Y"
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([F, G, H, I])\nscientists = EnumSort([V, Y, Z])\nyears = EnumSort([year1, year2])\ncommittee = Function([years] -> [Set(judges + scientists)])\nchairman = Function([years] -> [judges + scientists])\n\n# Constraints\nForAll([y:years], Count([m:judges + scientists], m in committee(y)) == 4) ::: Each year, the committee consists of 4 people\nForAll([y:years], Count([j:judges], j in committee(y)) == 2) ::: Each year, 2 members are from the judges\nForAll([y:years], Count([s:scientists], s in committee(y)) == 2) ::: Each year, 2 members are from the scientists\nForAll([y:years], chairman(y) in committee(y)) ::: The chairman must be a member of the committee\nNot(chairman(year1) in committee(year2)) ::: Members who chaired in the first year must withdraw from the committee in the second year\nchairman(year2) in committee(year1) ::: The chairman in the second year must be a member of the committee in the first year\nForAll([y:years], Not(And(G in committee(y), V in committee(y)))) ::: G and V cannot become members of the committee in the same year\nForAll([y:years], Not(And(H in committee(y), Y in committee(y)))) ::: H and Y cannot be members of the committee in the same year\nForAll([y:years], Count([m:[I, V]], m in committee(y)) == 1) ::: Each year, one and only one of I and V is a member of the committee\n\n# Options\nchairman(year1) == V ::: If V is the chairman of the committee in the first year\nQuestion ::: Which of the following options lists the two people who must be members of the committee in the second year?\nis_must_be_member([G, Y] in committee(year2)) ::: (A)\nis_must_be_member([V, Y] in committee(year2)) ::: (B)\nis_must_be_member([H, I] in committee(year2)) ::: (C)\nis_must_be_member([I, Y] in committee(year2)) ::: (D)"
    ]
  },
  {
    "id": 647,
    "context": "A committee works for two years and consists of 4 people each year, of which 2 members are from the following 4 judges? F, G, H and I, and the other 2 members are from the following 3 scientists? V, Y and Z.Every year, the committee has one member as chairman.Members who chaired in the first year must withdraw from the committee in the second year.The person who is chairman in the second year must be a member of the committee in the first year.The members of the committee must meet the following conditions? G and V cannot become members of the committee in the same year.H and Y cannot be members of the committee in the same year.Each year, one and only one of I and V is a member of the committee.",
    "question": "If H is chairman in the first year, which of the following can be chairman in the second year?",
    "answer": "A",
    "options": [
      "A.F",
      "B.G",
      "C.Y",
      "D.I"
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([F, G, H, I])\nscientists = EnumSort([V, Y, Z])\nyears = EnumSort([1, 2])\nmembers = Function([years] -> [Set(judges + scientists)])\nchairman = Function([years] -> [judges + scientists])\n\n# Constraints\nForAll([y:years], Count([m:judges + scientists], m in members(y)) == 4) ::: Each year, the committee consists of 4 people\nForAll([y:years], Count([j:judges], j in members(y)) == 2) ::: Each year, 2 members are from the judges\nForAll([y:years], Count([s:scientists], s in members(y)) == 2) ::: Each year, 2 members are from the scientists\nForAll([y:years], chairman(y) in members(y)) ::: The chairman must be a member of the committee\nNot(chairman(1) in members(2)) ::: Members who chaired in the first year must withdraw from the committee in the second year\nchairman(2) in members(1) ::: The chairman in the second year must be a member of the committee in the first year\nForAll([y:years], Not(And(G in members(y), V in members(y)))) ::: G and V cannot become members of the committee in the same year\nForAll([y:years], Not(And(H in members(y), Y in members(y)))) ::: H and Y cannot be members of the committee in the same year\nForAll([y:years], Or(I in members(y), V in members(y))) ::: Each year, one and only one of I and V is a member of the committee\n\n# Options\nchairman(1) == H ::: If H is chairman in the first year\nQuestion ::: Which of the following can be chairman in the second year?\nis_sat(chairman(2) == F) ::: (A)\nis_sat(chairman(2) == G) ::: (B)\nis_sat(chairman(2) == Y) ::: (C)\nis_sat(chairman(2) == I) ::: (D)"
    ]
  },
  {
    "id": 648,
    "context": "A committee works for two years and consists of 4 people each year, of which 2 members are from the following 4 judges? F, G, H and I, and 2 members are from the following 3 scientists? V, Y and Z Every year, the committee has one member as chairman.Members who chaired in the first year must withdraw from the committee in the second year.The person who is chairman in the second year must be a member of the committee in the first year.The members of the committee must meet the following conditions? G and V cannot become members of the committee in the same year.H and Y cannot be members of the committee in the same year.Each year, one and only one of I and V is a member of the committee.",
    "question": "If F is a member of the committee in a certain year, any of the following can be a member of the committee that year, except",
    "answer": "C",
    "options": [
      "A.I",
      "B.H",
      "C.G",
      "D.V"
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([F, G, H, I])\nscientists = EnumSort([V, Y, Z])\nyears = EnumSort([year1, year2])\ncommittee = Function([years] -> [Set(judges + scientists)])\nchairman = Function([years] -> [judges + scientists])\n\n# Constraints\nForAll([y:years], Count([m:judges + scientists], m in committee(y)) == 4) ::: Each year, the committee consists of 4 people\nForAll([y:years], Count([j:judges], j in committee(y)) == 2) ::: Each year, 2 members are from the judges\nForAll([y:years], Count([s:scientists], s in committee(y)) == 2) ::: Each year, 2 members are from the scientists\nForAll([y:years], chairman(y) in committee(y)) ::: The chairman must be a member of the committee\nNot(chairman(year1) in committee(year2)) ::: Members who chaired in the first year must withdraw from the committee in the second year\nchairman(year2) in committee(year1) ::: The chairman in the second year must be a member of the committee in the first year\nForAll([y:years], Not(And(G in committee(y), V in committee(y)))) ::: G and V cannot become members of the committee in the same year\nForAll([y:years], Not(And(H in committee(y), Y in committee(y)))) ::: H and Y cannot be members of the committee in the same year\nForAll([y:years], Or(I in committee(y), V in committee(y))) ::: Each year, one and only one of I and V is a member of the committee\n\n# Options\nQuestion ::: If F is a member of the committee in a certain year, any of the following can be a member of the committee that year, except\nis_unsat(And(F in committee(year1), I in committee(year1))) ::: (A)\nis_unsat(And(F in committee(year1), H in committee(year1))) ::: (B)\nis_unsat(And(F in committee(year1), G in committee(year1))) ::: (C)\nis_unsat(And(F in committee(year1), V in committee(year1))) ::: (D)"
    ]
  },
  {
    "id": 649,
    "context": "A committee works for two years and consists of 4 people each year, of which 2 members are from the following 4 judges? F, G, H and I, and 2 members are from the following 3 scientists? V, Y and Z Every year, the committee has one member as chairman.Members who chaired in the first year must withdraw from the committee in the second year.The person who is chairman in the second year must be a member of the committee in the first year.The members of the committee must meet the following conditions? G and V cannot become members of the committee in the same year.H and Y cannot be members of the committee in the same year.Each year, one and only one of I and V is a member of the committee.",
    "question": "Which of the following must be true?",
    "answer": "D",
    "options": [
      "A.H was a member of the committee in the first year.",
      "B.F was a member of the committee in the second year.",
      "C.I have been a member of the committee for two years.",
      "D.Z was a member of the committee the following year."
    ],
    "raw_logic_programs": [
      "# Declarations\njudges = EnumSort([F, G, H, I])\nscientists = EnumSort([V, Y, Z])\nyears = EnumSort([year1, year2])\ncommittee = Function([years] -> [Set(judges + scientists)])\nchairman = Function([years] -> [judges + scientists])\n\n# Constraints\nForAll([y:years], Count([m:judges + scientists], m in committee(y)) == 4) ::: Each year, the committee consists of 4 people\nForAll([y:years], Count([j:judges], j in committee(y)) == 2) ::: Each year, 2 members are from the judges\nForAll([y:years], Count([s:scientists], s in committee(y)) == 2) ::: Each year, 2 members are from the scientists\nForAll([y:years], chairman(y) in committee(y)) ::: The chairman must be a member of the committee\nNot(chairman(year1) in committee(year2)) ::: Members who chaired in the first year must withdraw from the committee in the second year\nchairman(year2) in committee(year1) ::: The chairman in the second year must be a member of the committee in the first year\nForAll([y:years], Not(And(G in committee(y), V in committee(y)))) ::: G and V cannot become members of the committee in the same year\nForAll([y:years], Not(And(H in committee(y), Y in committee(y)))) ::: H and Y cannot be members of the committee in the same year\nForAll([y:years], Count([m:[I, V]], m in committee(y)) == 1) ::: Each year, one and only one of I and V is a member of the committee\n\n# Options\nQuestion ::: Which of the following must be true?\nis_must_true(H in committee(year1)) ::: (A) H was a member of the committee in the first year.\nis_must_true(F in committee(year2)) ::: (B) F was a member of the committee in the second year.\nis_must_true(And(I in committee(year1), I in committee(year2))) ::: (C) I have been a member of the committee for two years.\nis_must_true(Z in committee(year2)) ::: (D) Z was a member of the committee the following year."
    ]
  }
]